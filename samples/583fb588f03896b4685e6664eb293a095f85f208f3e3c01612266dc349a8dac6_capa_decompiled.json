{
    "00406780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406780(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00407642(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "004068b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004068b0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x00406a98;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x406bbc\n            switch(*((arg_10h & 3) * 4 + 0x406bbc)) {\n            case 0x406bd4:\ncode_r0x00406bd4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x406be4:\ncode_r0x00406be4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x406bf8:\ncode_r0x00406bf8:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x406bbc\n            switch(*(arg_10h * 4 + 0x406bbc)) {\n            case 0x406bd4:\n                goto code_r0x00406bd4;\n            case 0x406be4:\n                goto code_r0x00406be4;\n            case 0x406bf8:\n                goto code_r0x00406bf8;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x406ac0)) {\n            case 0x406ad0:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x00406a98:\n    // WARNING: Could not recover jumptable at 0x00406a9a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x406b6c\n                    puVar18 = (**(uVar16 * -4 + 0x406b6c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406bbc)) {\n                case 0x406bd4:\n                    goto code_r0x00406bd4;\n                case 0x406be4:\n                    goto code_r0x00406be4;\n                case 0x406bf8:\n                    goto code_r0x00406bf8;\n                }\n                break;\n            case 0x406af4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x00406a98;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406bbc)) {\n                case 0x406bd4:\n                    goto code_r0x00406bd4;\n                case 0x406be4:\n                    goto code_r0x00406be4;\n                case 0x406bf8:\n                    goto code_r0x00406bf8;\n                }\n                break;\n            case 0x406b1c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x00406a98;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406bbc)) {\n                case 0x406bd4:\n                    goto code_r0x00406bd4;\n                case 0x406be4:\n                    goto code_r0x00406be4;\n                case 0x406bf8:\n                    goto code_r0x00406bf8;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x943864 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00406930;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x406a20\n        switch(*((arg_10h & 3) * 4 + 0x406a20)) {\n        case 0x406a38:\ncode_r0x00406a38:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x406a44:\ncode_r0x00406a44:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x406a58:\ncode_r0x00406a58:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x406a30)) {\n        case 0x406a38:\n            goto code_r0x00406a38;\n        case 0x406a44:\n            goto code_r0x00406a44;\n        case 0x406a58:\n            goto code_r0x00406a58;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x406934)) {\n        case 0x406944:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00406930:\n    // WARNING: Could not recover jumptable at 0x00406930. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x4069b4\n                puVar18 = (**(uVar17 * 4 + 0x4069b4))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406a20)) {\n            case 0x406a38:\n                goto code_r0x00406a38;\n            case 0x406a44:\n                goto code_r0x00406a44;\n            case 0x406a58:\n                goto code_r0x00406a58;\n            }\n            break;\n        case 0x406970:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00406930;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406a20)) {\n            case 0x406a38:\n                goto code_r0x00406a38;\n            case 0x406a44:\n                goto code_r0x00406a44;\n            case 0x406a58:\n                goto code_r0x00406a58;\n            }\n            break;\n        case 0x406994:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00406930;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406a20)) {\n            case 0x406a38:\n                goto code_r0x00406a38;\n            case 0x406a44:\n                goto code_r0x00406a44;\n            case 0x406a58:\n                goto code_r0x00406a58;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4175
    },
    "00406c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406c20(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x00406e08;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x406f2c\n            switch(*((arg_10h & 3) * 4 + 0x406f2c)) {\n            case 0x406f44:\ncode_r0x00406f44:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x406f54:\ncode_r0x00406f54:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x406f68:\ncode_r0x00406f68:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x406f2c\n            switch(*(arg_10h * 4 + 0x406f2c)) {\n            case 0x406f44:\n                goto code_r0x00406f44;\n            case 0x406f54:\n                goto code_r0x00406f54;\n            case 0x406f68:\n                goto code_r0x00406f68;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x406e30)) {\n            case 0x406e40:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x00406e08:\n    // WARNING: Could not recover jumptable at 0x00406e0a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x406edc\n                    puVar18 = (**(uVar16 * -4 + 0x406edc))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406f2c)) {\n                case 0x406f44:\n                    goto code_r0x00406f44;\n                case 0x406f54:\n                    goto code_r0x00406f54;\n                case 0x406f68:\n                    goto code_r0x00406f68;\n                }\n                break;\n            case 0x406e64:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x00406e08;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406f2c)) {\n                case 0x406f44:\n                    goto code_r0x00406f44;\n                case 0x406f54:\n                    goto code_r0x00406f54;\n                case 0x406f68:\n                    goto code_r0x00406f68;\n                }\n                break;\n            case 0x406e8c:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x00406e08;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x406f2c)) {\n                case 0x406f44:\n                    goto code_r0x00406f44;\n                case 0x406f54:\n                    goto code_r0x00406f54;\n                case 0x406f68:\n                    goto code_r0x00406f68;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x943864 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x00406ca0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x406d90\n        switch(*((arg_10h & 3) * 4 + 0x406d90)) {\n        case 0x406da8:\ncode_r0x00406da8:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x406db4:\ncode_r0x00406db4:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x406dc8:\ncode_r0x00406dc8:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x406da0)) {\n        case 0x406da8:\n            goto code_r0x00406da8;\n        case 0x406db4:\n            goto code_r0x00406db4;\n        case 0x406dc8:\n            goto code_r0x00406dc8;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x406ca4)) {\n        case 0x406cb4:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x00406ca0:\n    // WARNING: Could not recover jumptable at 0x00406ca0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x406d24\n                puVar18 = (**(uVar17 * 4 + 0x406d24))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406d90)) {\n            case 0x406da8:\n                goto code_r0x00406da8;\n            case 0x406db4:\n                goto code_r0x00406db4;\n            case 0x406dc8:\n                goto code_r0x00406dc8;\n            }\n            break;\n        case 0x406ce0:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x00406ca0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406d90)) {\n            case 0x406da8:\n                goto code_r0x00406da8;\n            case 0x406db4:\n                goto code_r0x00406db4;\n            case 0x406dc8:\n                goto code_r0x00406dc8;\n            }\n            break;\n        case 0x406d04:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x00406ca0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x406d90)) {\n            case 0x406da8:\n                goto code_r0x00406da8;\n            case 0x406db4:\n                goto code_r0x00406db4;\n            case 0x406dc8:\n                goto code_r0x00406dc8;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4194
    },
    "0040482b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBinaryType\n\nuint fcn.0040482b(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint lpConsoleTitle;\n    uint lpReturnedString;\n    uint lpBuffer;\n    uint lpFindFileData;\n    uint lpVersionInformation;\n    uint uStackY100;\n    uint uStackY96;\n    uint *hActCtx;\n    int32_t var_54h;\n    uint *puStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint *puStackY64;\n    uint lpCC;\n    uint *var_34h;\n    uint *puStackY52;\n    uint *puStackY48;\n    uint uStackY44;\n    uint *puStackY40;\n    uint uStackY36;\n    uint *puStackY32;\n    uint *puStackY28;\n    int32_t lpBinaryType;\n    \n    lpBinaryType = 0x404838;\n    fcn.00406f90();\n    uVar3 = 0;\n    lpBinaryType = unaff_EBX;\n    do {\n        if (uVar3 < 0x1e3bd) {\n            (*_sym.imp.USER32.dll_LoadMenuA)();\n            (*_sym.imp.USER32.dll_GetMessagePos)();\n        }\n    } while ((((uVar3 < 0x1ea07d10) || (lpBinaryType == 0xacef98)) || (var_54h == 0xad6910c)) &&\n            (uVar3 = uVar3 + 1,  uVar3 < 0x8df05308));\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x13b4) {\n            *0x941534 = *0x941534 + 0x38d6;\n        }\n        if (*0x941534 == 0xdcc) {\n            (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x31aa3a);\n    *0x93e2c8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    uVar3 = 0x962a66;\n    do {\n        if (*0x941534 == 3) {\n            puStackY28 = NULL;\n            puStackY32 = 0x4048d6;\n            (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        }\n        if (*0x941534 == 0x71f) {\n            puStackY28 = NULL;\n            puStackY32 = NULL;\n            uStackY36 = 0;\n            puStackY40 = 0x4048ec;\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoW)();\n            puStackY40 = NULL;\n            uStackY44 = 0;\n            puStackY48 = NULL;\n            puStackY52 = &fcn.0040482b::lpVersionInformation;\n            var_34h = 0x4048fc;\n            (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)();\n            var_34h = NULL;\n            lpCC = 0;\n            puStackY64 = NULL;\n            puStackY68 = NULL;\n            uStackY72 = 0x404906;\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoA)();\n            uStackY72 = 0;\n            uStackY76 = 0;\n            uStackY80 = 0;\n            puStackY84 = 0x40490f;\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n            puStackY84 = NULL;\n            var_54h = 0;\n            hActCtx = NULL;\n            uStackY96 = 0;\n            uStackY100 = 0x404919;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        }\n        uVar3 = uVar3 - 1;\n    } while (uVar3 != 0);\n    if (*0x941534 != 0) {\n        do {\n            if (*0x941534 == 0xfe) {\n                puStackY28 = &fcn.0040482b::lpBuffer;\n                puStackY32 = 0x40493a;\n                (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                puStackY32 = NULL;\n                uStackY36 = 0;\n                puStackY40 = NULL;\n                uStackY44 = 0;\n                puStackY48 = 0x404944;\n                (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)();\n                puStackY48 = NULL;\n                puStackY52 = 0x40494b;\n                (*_sym.imp.KERNEL32.dll_ZombifyActCtx)();\n            }\n            fcn.004042d0(uVar3);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x941534);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteVolumeMountPointA;\n    if (*0x941534 == 0x19c) {\n        puStackY28 = NULL;\n        puStackY32 = 0x404972;\n        (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)();\n        puStackY32 = &fcn.0040482b::hActCtx;\n        uStackY36 = 0x40497c;\n        (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n        uStackY36 = 0;\n        puStackY40 = NULL;\n        uStackY44 = 0;\n        puStackY48 = 0x404985;\n        (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)();\n        puStackY48 = 0x30;\n        var_34h = &fcn.0040482b::var_34h;\n        puStackY52 = NULL;\n        lpCC = 0x404994;\n        fcn.00406fc0();\n        puStackY48 = &fcn.0040482b::lpCC;\n        puStackY52 = NULL;\n        var_34h = 0x40132c;\n        lpCC = 0x4049a7;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogA)();\n        lpCC = 0;\n        puStackY64 = NULL;\n        puStackY68 = 0x40135c;\n        uStackY72 = 0x401388;\n        uStackY76 = 0;\n        uStackY80 = 0x4049ba;\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n        uStackY80 = 0;\n        puStackY84 = 0x4049bd;\n        (*pcVar2)();\n        puStackY84 = 0x4013b0;\n        var_54h = 0x4013c0;\n        hActCtx = 0x4049cd;\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointA)();\n        hActCtx = NULL;\n        uStackY96 = 0x4049d0;\n        (*pcVar1)();\n    }\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0xab9d) {\n            puStackY28 = 0x7ff1e8;\n            puStackY32 = 0x4049e1;\n            *0x941530 = (*pcVar2)();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x2594b);\n    *0x7ff1e8 = 0;\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x148) {\n            puStackY28 = 0x404a04;\n            fcn.004043cc();\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x71761d);\n    puStackY28 = 0x7fdc40;\n    puStackY32 = *0x941534;\n    uStackY36 = *0x93e2c8;\n    puStackY40 = 0x404a23;\n    fcn.00404295();\n    iVar4 = 0;\n    do {\n        if (iVar4 == 0x2f64) {\n            puStackY40 = 0x404a32;\n            fcn.004043bd();\n            iVar4 = extraout_ECX;\n        }\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0x46d9a);\n    iVar4 = 0xdd7b3;\n    do {\n        if (*0x941534 == 0x21) {\n            puStackY40 = NULL;\n            uStackY44 = 0;\n            puStackY48 = 0x404a51;\n            (*_sym.imp.KERNEL32.dll_WriteProfileSectionW)();\n            puStackY48 = NULL;\n            puStackY52 = NULL;\n            var_34h = &fcn.0040482b::lpBuffer;\n            lpCC = 0;\n            puStackY64 = 0x404a61;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)();\n            puStackY64 = &fcn.0040482b::lpBinaryType;\n            puStackY68 = &fcn.0040482b::lpConsoleTitle;\n            uStackY72 = 0;\n            uStackY76 = 0x404a73;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameExW)();\n            uStackY76 = 0;\n            uStackY80 = 0;\n            puStackY84 = NULL;\n            var_54h = 0x404a7c;\n            (*_sym.imp.KERNEL32.dll_WriteProfileStringW)();\n            var_54h = 0;\n            hActCtx = &fcn.0040482b::lpReturnedString;\n            uStackY96 = 0;\n            uStackY100 = 0x404a8b;\n            (*_sym.imp.KERNEL32.dll_GetProfileSectionA)();\n            uStackY100 = 0x404a91;\n            (*_sym.imp.ADVAPI32.dll_RevertToSelf)();\n        }\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStackY40 = 0x404a99;\n    fcn.00403a96();\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    puStackY40 = 0x7ff1e8;\n    *0x7ff1e9 = 0x73;\n    uStackY44 = 0x404aad;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    iVar4 = 0x1ef75;\n    do {\n        uStackY44 = 0;\n        puStackY48 = 0x404ab9;\n        (*_sym.imp.KERNEL32.dll_SetLastError)();\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    if (*0x941534 == 0x58c) {\n        puStackY40 = &fcn.0040482b::lpBinaryType;\n        uStackY44 = 0x401404;\n        puStackY48 = 0x404ad8;\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeA)();\n        puStackY48 = 0x401414;\n        puStackY52 = 0x404adf;\n        (*pcVar1)();\n        puStackY52 = NULL;\n        var_34h = &fcn.0040482b::lpReturnedString;\n        lpCC = 0;\n        puStackY64 = 0x404aee;\n        (*_sym.imp.KERNEL32.dll_GetLongPathNameA)();\n        puStackY64 = 0x401420;\n        puStackY68 = 0x40145c;\n        uStackY72 = 0;\n        uStackY76 = 0x404aff;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        uStackY76 = 0;\n        uStackY80 = 0x404b06;\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        uStackY80 = 0;\n        puStackY84 = &fcn.0040482b::lpConsoleTitle;\n        var_54h = 0x404b14;\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n    }\n    puStackY40 = 0x404b19;\n    fcn.004043b6();\n    return 0;\n}\n",
        "token_count": 2830
    },
    "00405639": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00405639(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00405469();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 62
    },
    "0040569d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040569d(uint *param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    if ((param_2 != '\\0') && (0xf < param_1[5])) {\n        uVar1 = *param_1;\n        if (param_3 != 0) {\n            fcn.00403a7f(param_1, uVar1, param_3);\n        }\n        fcn.004053e3(uVar1, param_1[5] + 1);\n    }\n    param_1[5] = 0xf;\n    fcn.00405530(unaff_retaddr);\n    return;\n}\n",
        "token_count": 163
    },
    "004056ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004056ea(uint *param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    if ((param_2 != '\\0') && (7 < param_1[5])) {\n        uVar1 = *param_1;\n        if (param_3 != 0) {\n            fcn.00403a5a(param_1, uVar1, param_3);\n        }\n        fcn.004053e3(uVar1, param_1[5] + 1);\n    }\n    param_1[5] = 7;\n    fcn.00405557(unaff_retaddr);\n    return;\n}\n",
        "token_count": 160
    },
    "00405786": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00405786(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004074ec();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar5 = *(unaff_EBP + 8) | 0xf;\n    uVar2 = fcn.00405639();\n    *(unaff_EBP + -0x1c) = uVar2;\n    if (uVar2 < uVar5) {\n        uVar5 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar2 = extraout_ECX[5];\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar1 = *(unaff_EBP + -0x14);\n        if ((uVar5 / 3 < uVar1) && (uVar5 = *(unaff_EBP + -0x1c),  uVar2 <= uVar5 - uVar1)) {\n            uVar5 = uVar1 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0040565c(uVar5 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar4 = fcn.004053cc(*(unaff_EBP + 0xc));\n        fcn.00403a7f(uVar3, uVar4);\n    }\n    fcn.0040569d(1, 0);\n    uVar4 = *(unaff_EBP + 0xc);\n    *extraout_ECX = uVar3;\n    extraout_ECX[5] = uVar5;\n    fcn.00405530(uVar4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 652
    },
    "004058b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004058b1(int32_t param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00405639();\n    if (uVar1 < param_2) {\n        fcn.0040544d();\n    }\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00405786(param_2, *(param_1 + 0x10), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4);\n    }\n    else if ((cVar2 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.00405530(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x10);\n        if (param_2 < *(param_1 + 0x10)) {\n            uVar1 = param_2;\n        }\n        fcn.0040569d(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 296
    },
    "00405cd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl fcn.00405cd1(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.004074ec();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n    while (*(unaff_EBP + 0xc) != 0) {\n        fcn.00405c52();\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 0x1c;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 285
    },
    "00407642": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407642(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x94199c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040a79a();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040a758(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "004071fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004071fc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4072a7;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004072d3;\n        uStack36 = *0x7fe038 ^ &fcn.004071fc::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004071fc::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00409c02();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004071fc::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 720
    },
    "00408f08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408f08(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409c02();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00409c02();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004091cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091cf(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00407438(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00409c02();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00409c02();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00407411(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00408f67(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00409a43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a43(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7fe038) {\n        return;\n    }\n    *0x9424d8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x9424dc = &arg_8h;\n    *0x942418 = 0x10001;\n    *0x9423c0 = 0xc0000409;\n    *0x9423c4 = 1;\n    var_328h = *0x7fe038;\n    var_324h = *0x7fe03c;\n    *0x9423cc = unaff_retaddr;\n    *0x9424a4 = in_GS;\n    *0x9424a8 = in_FS;\n    *0x9424ac = in_ES;\n    *0x9424b0 = in_DS;\n    *0x9424b4 = unaff_EDI;\n    *0x9424b8 = unaff_ESI;\n    *0x9424bc = unaff_EBX;\n    *0x9424c0 = in_EDX;\n    *0x9424c4 = in_ECX;\n    *0x9424c8 = in_EAX;\n    *0x9424cc = unaff_EBP;\n    *0x9424d0 = unaff_retaddr;\n    *0x9424d4 = in_CS;\n    *0x9424e0 = in_SS;\n    *0x942410 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040e654(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402d6c);\n    if (*0x942410 == 0) {\n        fcn.0040e654(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 839
    },
    "0040adc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040aec8: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040aecd)\n// WARNING: Removing unreachable block (ram,0x0040aefc)\n// WARNING: Removing unreachable block (ram,0x0040aed3)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040adc2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a9a0(0x414270, 0x20);\n    fcn.0040d501(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x9419d0 != 1) {\n        *0x9419cc = 1;\n        *0x9419c8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x942848);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x942844);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00409a52();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00409a52();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x942848);\n                        piVar2 = (*pcVar1)(*0x942844);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x4011f4;\n            while (*(unaff_EBP + -0x1c) < 0x401200) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401204;\n        while (*(unaff_EBP + -0x20) < 0x401208) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040d428(8);\n    }\n    return;\n}\n",
        "token_count": 1013
    },
    "0040ceda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ceda(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe038 ^ &stack0xfffffffc;\n    fcn.00407c0b(arg_10h);\n    var_14h = fcn.00410119(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040f677(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040cf33:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040cf73;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040cf65:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040cf73;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040cf65;\n        goto code_r0x0040cf33;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040cf73:\n    fcn.00409a43(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "0040cf82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040cf82(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe038 ^ &stack0xfffffffc;\n    fcn.00407c0b(arg_10h);\n    var_14h = fcn.00410119(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040fbc8(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040cfdb:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040d01b;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040d00d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040d01b;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040d00d;\n        goto code_r0x0040cfdb;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040d01b:\n    fcn.00409a43(unaff_EBX);\n    return;\n}\n",
        "token_count": 509
    },
    "0040ea15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ea15(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040d428(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040ea6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ea6f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe038 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00409a52();\n    var_14h = 0;\n    if (*0x942704 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x402e5c);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x402e50), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040ebcc;\n        *0x942704 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x402e40);\n        *0x942708 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402e2c);\n        *0x94270c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402e10);\n        *0x942714 = (*pcVar4)(uVar3);\n        if (*0x942714 != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x402df8);\n            *0x942710 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x942710 == var_18h) || (*0x942714 == var_18h)) {\ncode_r0x0040eb7b:\n        if ((((*0x942708 != var_18h) && (pcVar4 = (*pcVar6)(*0x942708),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x94270c != var_18h && (pcVar4 = (*pcVar6)(*0x94270c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x942710);\n        pcVar5 = (*pcVar6)(*0x942714);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040eb7b;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x942704);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040ebcc:\n    fcn.00409a43(unaff_EBX);\n    return;\n}\n",
        "token_count": 926
    },
    "0040f677": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040f677(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe038 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040f7bb;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040f7c2;\ncode_r0x0040f7bb:\n                        do {\n                            bVar6 = true;\ncode_r0x0040f7c2:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040f7d0;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040f7d0:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7feee8 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7feee8 < iVar14) {\n                if (iVar14 < *0x7feee4) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x7feee4;\n                }\n                goto code_r0x0040fb7b;\n            }\n            iVar13 = *0x7feee8 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040f96f;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040f96f:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040fb7b:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00409a43(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3280
    },
    "0040fbc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040fbc8(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe038 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x7fef08;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x7fef04 + -1;\n        iVar14 = *0x7fef04 + (*0x7fef04 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x7fef04 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040fd0c;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040fd13;\ncode_r0x0040fd0c:\n                        do {\n                            bVar6 = true;\ncode_r0x0040fd13:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040fd21;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040fd21:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x7fef00 - *0x7fef04) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x7fef00 < iVar14) {\n                if (iVar14 < *0x7feefc) {\n                    iVar14 = iVar14 + *0x7fef10;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x7fef08 + (*0x7fef08 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x7fef08 + (*0x7fef08 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x7fef10 + *0x7feefc;\n                }\n                goto code_r0x004100cc;\n            }\n            iVar13 = *0x7fef00 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x7fef04 + -1;\n            iVar13 = *0x7fef04 + (*0x7fef04 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x7fef04 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040fec0;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040fec0:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x7fef08 + 1 + (*0x7fef08 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x004100cc:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x7fef0c == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x7fef0c == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00409a43(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3235
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00405915": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00405915(uint param_1, uint8_t param_2)\n\n{\n    fcn.00405876();\n    if ((param_2 & 1) != 0) {\n        fcn.004068a2(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 68
    },
    "0040655c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040655c(uint32_t arg_8h)\n\n{\n    fcn.004067fa();\n    if ((arg_8h & 1) != 0) {\n        fcn.004068a2();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00406805": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406805(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401620;\n    fcn.00406780();\n    if ((arg_8h & 1) != 0) {\n        fcn.004068a2();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00406861": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406861(uint32_t arg_8h)\n\n{\n    fcn.00406851();\n    if ((arg_8h & 1) != 0) {\n        fcn.004068a2();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00408d71": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d71(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401760;\n    fcn.004067fa();\n    if ((arg_8h & 1) != 0) {\n        fcn.004068a2();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040e4a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e4a7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a9a0(0x414350, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040a7ad();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a79a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x942724)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x942740;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040dce4(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040a79a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040a7ad();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040ddaa(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040e573();\n                goto code_r0x0040e56a;\n            }\n        }\n        puVar2 = fcn.0040a7ad();\n        *puVar2 = 0;\n        puVar2 = fcn.0040a79a();\n        *puVar2 = 9;\n        fcn.0040a748();\n    }\ncode_r0x0040e56a:\n    fcn.0040a9e5();\n    return;\n}\n",
        "token_count": 622
    },
    "00408a28": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00408a28(uint32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar18;\n    \n    puVar18 = unaff_EDI;\n    if ((unaff_ESI & 0xf) != 0) {\n        uVar17 = 0x10 - (unaff_ESI & 0xf);\n        param_1 = param_1 - uVar17;\n        for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n        for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n            puVar18 = puVar18 + 1;\n        }\n    }\n    for (uVar16 = param_1 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n        uVar1 = unaff_ESI[1];\n        uVar2 = unaff_ESI[2];\n        uVar3 = unaff_ESI[3];\n        uVar4 = unaff_ESI[4];\n        uVar5 = unaff_ESI[5];\n        uVar6 = unaff_ESI[6];\n        uVar7 = unaff_ESI[7];\n        uVar8 = unaff_ESI[8];\n        uVar9 = unaff_ESI[9];\n        uVar10 = unaff_ESI[10];\n        uVar11 = unaff_ESI[0xb];\n        uVar12 = unaff_ESI[0xc];\n        uVar13 = unaff_ESI[0xd];\n        uVar14 = unaff_ESI[0xe];\n        uVar15 = unaff_ESI[0xf];\n        *puVar18 = *unaff_ESI;\n        puVar18[1] = uVar1;\n        puVar18[2] = uVar2;\n        puVar18[3] = uVar3;\n        puVar18[4] = uVar4;\n        puVar18[5] = uVar5;\n        puVar18[6] = uVar6;\n        puVar18[7] = uVar7;\n        puVar18[8] = uVar8;\n        puVar18[9] = uVar9;\n        puVar18[10] = uVar10;\n        puVar18[0xb] = uVar11;\n        puVar18[0xc] = uVar12;\n        puVar18[0xd] = uVar13;\n        puVar18[0xe] = uVar14;\n        puVar18[0xf] = uVar15;\n        uVar1 = unaff_ESI[0x11];\n        uVar2 = unaff_ESI[0x12];\n        uVar3 = unaff_ESI[0x13];\n        uVar4 = unaff_ESI[0x14];\n        uVar5 = unaff_ESI[0x15];\n        uVar6 = unaff_ESI[0x16];\n        uVar7 = unaff_ESI[0x17];\n        uVar8 = unaff_ESI[0x18];\n        uVar9 = unaff_ESI[0x19];\n        uVar10 = unaff_ESI[0x1a];\n        uVar11 = unaff_ESI[0x1b];\n        uVar12 = unaff_ESI[0x1c];\n        uVar13 = unaff_ESI[0x1d];\n        uVar14 = unaff_ESI[0x1e];\n        uVar15 = unaff_ESI[0x1f];\n        puVar18[0x10] = unaff_ESI[0x10];\n        puVar18[0x11] = uVar1;\n        puVar18[0x12] = uVar2;\n        puVar18[0x13] = uVar3;\n        puVar18[0x14] = uVar4;\n        puVar18[0x15] = uVar5;\n        puVar18[0x16] = uVar6;\n        puVar18[0x17] = uVar7;\n        puVar18[0x18] = uVar8;\n        puVar18[0x19] = uVar9;\n        puVar18[0x1a] = uVar10;\n        puVar18[0x1b] = uVar11;\n        puVar18[0x1c] = uVar12;\n        puVar18[0x1d] = uVar13;\n        puVar18[0x1e] = uVar14;\n        puVar18[0x1f] = uVar15;\n        unaff_ESI = unaff_ESI + 0x20;\n        puVar18 = puVar18 + 0x20;\n    }\n    if ((param_1 & 0x7f) != 0) {\n        for (uVar16 = (param_1 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = unaff_ESI[1];\n            uVar2 = unaff_ESI[2];\n            uVar3 = unaff_ESI[3];\n            *puVar18 = *unaff_ESI;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            unaff_ESI = unaff_ESI + 4;\n            puVar18 = puVar18 + 4;\n        }\n        if ((param_1 & 0xf) != 0) {\n            for (uVar16 = (param_1 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar18 = *unaff_ESI;\n                unaff_ESI = unaff_ESI + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 1607
    },
    "00403b05": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00403b05(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 44
    },
    "004041ae": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041ae(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar5 = arg_8h;\n    iVar1 = *arg_ch;\n    var_4h = *arg_8h;\n    iVar2 = arg_ch[1];\n    uVar6 = arg_8h[1];\n    iVar3 = arg_ch[2];\n    iVar4 = arg_ch[3];\n    var_ch = 0x20;\n    do {\n        arg_8h = var_4h * 0x10 + iVar3;\n        arg_ch = (var_4h >> 5) + iVar4;\n        *0x93e2cc = 0xffcf03fc;\n        fcn.00403b05(&arg_8h, var_4h + 0xc6ef3720);\n        *0x93e2cc = 0;\n        uVar6 = uVar6 - (arg_ch ^ arg_8h);\n        *0x93e2d4 = 0xffffffff;\n        arg_ch = (uVar6 >> 5) + iVar2;\n        arg_8h = uVar6 * 0x10 + iVar1 ^ uVar6 + 0xc6ef3720;\n        *0x93e2d0 = 0xff6b3619;\n        fcn.00403b05(&arg_8h, arg_ch);\n        var_4h = var_4h - arg_8h;\n        fcn.00403ac8();\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    puVar5[1] = uVar6;\n    *puVar5 = var_4h;\n    return;\n}\n",
        "token_count": 481
    },
    "00404295": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00404295(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        if (*0x941534 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleMode)(0, 0);\n        }\n        fcn.004041ae(param_1, param_3);\n        param_1 = param_1 + 8;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004043cc": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid fcn.004043cc(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    \n    uStack140 = 0x7ff1e8;\n    *0x7ff1ec = 0x65;\n    *0x7ff1ed = 0x336c;\n    *0x7ff1ef = 0x6c642e32;\n    *0x7ff1f3 = 0x6c;\n    *0x7ff1e8 = 0x6e72656b;\n    *0x7ff1f4 = *0x7ff1f4 & 0xff00;\n    uStack144 = 0x404404;\n    *0x941530 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack144 = 0x7ff1e8;\n    *0x7ff1f3 = 0x65;\n    *0x7ff1ec = 0x75;\n    *0x7ff1ed = 0x6c61;\n    *0x7ff1e8 = 0x74726956;\n    *0x7ff1f4 = 0x7463;\n    *0x7ff1f6 = 0;\n    *0x7ff1ef = 0x746f7250;\n    *0x7ff1e4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x941530);\n    (**0x7ff1e4)(*0x93e2c8, *0x941534, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 361
    },
    "004054b5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054b5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    if ((arg_8h != 0) && (iVar1 = fcn.0040703a(arg_8h),  iVar1 == 0)) {\n        fcn.004039fc(0);\n        fcn.004070ba(&var_ch, 0x413c38);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00405587": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00405587(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004053fc();\n    iVar2 = fcn.0040557f();\n    if (iVar2 - (uVar1 >> 1) < uVar1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = uVar1 + (uVar1 >> 1);\n    }\n    if (uVar1 < param_1) {\n        uVar1 = param_1;\n    }\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "00403a5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a5a(uint param_1, uint param_2, int32_t param_3)\n\n{\n    fcn.004068b0(param_1, param_2, param_3 * 2);\n    return;\n}\n",
        "token_count": 55
    },
    "00403ae2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ae2(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_ch ^ arg_10h;\n    return;\n}\n",
        "token_count": 62
    },
    "004043bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043bd(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0040541f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040541f(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (in_EAX = fcn.004053cc(),  in_EAX <= param_2)) {\n        iVar1 = fcn.004053cc();\n        in_EAX = iVar1 + *(param_1 + 0x10);\n        if (param_2 < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 149
    },
    "00405530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405530(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1h;\n    \n    *(in_ECX + 0x10) = arg_8h;\n    iVar1 = fcn.004053cc(&var_1h);\n    fcn.00403a89(iVar1 + arg_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "0040557f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040557f(void)\n\n{\n    return 0x9249249;\n}\n",
        "token_count": 22
    },
    "004055e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004055e0(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 + 0x10);\n    if (uVar1 < param_2) {\n        uVar1 = fcn.004053d8();\n    }\n    uVar1 = uVar1 - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        iVar2 = fcn.004053cc(uVar1 - param_3);\n        iVar2 = fcn.004053cc(iVar2 + param_2 + param_3);\n        fcn.00403a84(iVar2 + param_2);\n        fcn.00405530(*(param_1 + 0x10) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 228
    },
    "00405931": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405931(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    uVar2 = fcn.004053ae();\n    if (uVar2 < arg_ch) {\n        fcn.004053d8();\n    }\n    iVar3 = fcn.004053ae();\n    uVar2 = iVar3 - arg_ch;\n    if (arg_10h < iVar3 - arg_ch) {\n        uVar2 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.004055e0(uVar2 + arg_ch, 0xffffffff);\n        fcn.004055e0(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.004058b1(uVar2, 0);\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.004053cc(uVar2);\n            uVar4 = fcn.004053cc(iVar3 + arg_ch);\n            fcn.00403a7f(uVar4);\n            fcn.00405530(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00405a06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a06(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    \n    cVar1 = fcn.0040541f(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.004058b1(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.004053cc(arg_8h, arg_ch);\n            fcn.00403a7f(uVar3);\n            fcn.00405530(arg_ch);\n        }\n    }\n    else {\n        iVar2 = fcn.004053cc();\n        fcn.00405931(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00405b41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b41(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.00405b1d();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00405bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bce(uint *arg_8h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    puVar1 = arg_8h;\n    if (in_ECX != arg_8h) {\n        uVar3 = fcn.0040546d(&arg_8h + 3);\n        uVar3 = fcn.0040546d(&arg_8h + 3, uVar3);\n        cVar2 = fcn.0040566a(uVar3);\n        if ((cVar2 == '\\0') || (puVar1[5] < 0x10)) {\n            fcn.0040569d(1, 0);\n            if (puVar1[5] < 0x10) {\n                fcn.00403a84();\n            }\n            else {\n                *in_ECX = *puVar1;\n                *puVar1 = 0;\n            }\n            in_ECX[4] = puVar1[4];\n            in_ECX[5] = puVar1[5];\n            puVar1[4] = 0;\n            puVar1[5] = 0;\n        }\n        else {\n            fcn.00405b1d(puVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00405cb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405cb3(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.00405b89();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00405def": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405def(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.0040546d(arg_8h);\n        fcn.00405d3a();\n        arg_10h = arg_10h + 0x1c;\n    }\n    return arg_10h;\n}\n",
        "token_count": 113
    },
    "00405e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405e5c(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.00405d99(param_2, param_3, param_1 + 0xc);\n    return;\n}\n",
        "token_count": 59
    },
    "00405e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e70(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00405dc0(arg_8h, arg_ch, arg_10h, in_ECX + 0xc);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 89
    },
    "00405f62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint __cdecl\nfcn.00405f62(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h, uint noname_6, \n            uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.004074ec();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 0x10);\n    for (; iVar2 != *(unaff_EBP + 0xc); iVar2 = iVar2 + 0x1c) {\n        fcn.00405eb9();\n        *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 0x1c;\n    }\n    uVar1 = *(unaff_EBP + 0x10);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 329
    },
    "00406006": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406006(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00405fd3(param_2, param_3, param_4, param_1 + 0xc);\n    return;\n}\n",
        "token_count": 66
    },
    "0040601e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0040601e(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004074ec();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = fcn.0040557f();\n    uVar1 = *(unaff_EBP + 8);\n    if (uVar3 < uVar1) {\n        fcn.00405414();\n    }\n    uVar3 = fcn.004053fc();\n    if (uVar3 < uVar1) {\n        uVar4 = fcn.004055bc(uVar1);\n        *(unaff_EBP + -4) = 0;\n        iVar5 = extraout_ECX[1];\n        iVar2 = *extraout_ECX;\n        *(unaff_EBP + -0x14) = uVar4;\n        fcn.00406006(iVar2, iVar5, uVar4);\n        iVar5 = fcn.00405408();\n        if (*extraout_ECX != 0) {\n            fcn.00405e5c(*extraout_ECX, extraout_ECX[1]);\n            fcn.004053e3(*extraout_ECX, (extraout_ECX[2] - *extraout_ECX) / 0x1c);\n        }\n        iVar2 = *(unaff_EBP + -0x14);\n        extraout_ECX[2] = uVar1 * 0x1c + iVar2;\n        extraout_ECX[1] = iVar5 * 0x1c + iVar2;\n        *extraout_ECX = iVar2;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 530
    },
    "004060e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.004060e0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    uint var_5ch;\n    uint var_40h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004074ec();\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x10) = &stack0xffffffa4;\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (arg_ch_00 != 0) {\n        iVar2 = fcn.00405408();\n        iVar3 = fcn.0040557f();\n        if (iVar3 - iVar2 < arg_ch_00) {\n            fcn.00405414();\n        }\n        uVar4 = fcn.004053fc();\n        if (uVar4 < iVar2 + arg_ch_00) {\n            iVar3 = fcn.00405587(iVar2 + arg_ch_00);\n            *(unaff_EBP + -0x24) = iVar3;\n            uVar5 = fcn.004055bc(iVar3);\n            *(unaff_EBP + -0x14) = uVar5;\n            iVar2 = *extraout_ECX;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x18) = (*(unaff_EBP + 8) - iVar2) / 0x1c;\n            uVar5 = fcn.0040546d(*(unaff_EBP + 0x10));\n            fcn.00405e70(*(unaff_EBP + -0x18) * 0x1c + *(unaff_EBP + -0x14), arg_ch_00, uVar5);\n            *(unaff_EBP + -0x1c) = 1;\n            fcn.00406006(*extraout_ECX, *(unaff_EBP + 8), *(unaff_EBP + -0x14));\n            iVar2 = extraout_ECX[1];\n            *(unaff_EBP + -0x1c) = 2;\n            fcn.00406006(*(unaff_EBP + 8), iVar2, (*(unaff_EBP + -0x18) + arg_ch_00) * 0x1c + *(unaff_EBP + -0x14));\n            iVar2 = fcn.00405408();\n            if (*extraout_ECX != 0) {\n                fcn.00405e5c(*extraout_ECX, extraout_ECX[1]);\n                fcn.004053e3(*extraout_ECX, (extraout_ECX[2] - *extraout_ECX) / 0x1c);\n            }\n            iVar1 = *(unaff_EBP + -0x14);\n            extraout_ECX[2] = iVar3 * 0x1c + iVar1;\n            extraout_ECX[1] = (arg_ch_00 + iVar2) * 0x1c + iVar1;\n            *extraout_ECX = iVar1;\n        }\n        else {\n            if ((extraout_ECX[1] - *(unaff_EBP + 8)) / 0x1c < arg_ch_00) {\n                fcn.004059c7(*(unaff_EBP + 0x10), unaff_EDI, unaff_ESI, unaff_EBX);\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + -4) = 2;\n                fcn.00406006(*(unaff_EBP + 8), iVar2, arg_ch_00 * 0x1c + *(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 3;\n                uVar5 = fcn.0040546d(unaff_EBP + -0x40);\n                fcn.00405e70(extraout_ECX[1], arg_ch_00 - (extraout_ECX[1] - *(unaff_EBP + 8)) / 0x1c, uVar5);\n                extraout_ECX[1] = extraout_ECX[1] + arg_ch_00 * 0x1c;\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + -4) = 2;\n                fcn.00405c6c(*(unaff_EBP + 8), iVar2 + arg_ch_00 * -0x1c, unaff_EBP + -0x40);\n            }\n            else {\n                fcn.004059c7(*(unaff_EBP + 0x10), unaff_EDI, unaff_ESI, unaff_EBX);\n                iVar2 = extraout_ECX[1];\n                *(unaff_EBP + 0xc) = iVar2;\n                *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + arg_ch_00 * -0x1c;\n                *(unaff_EBP + -4) = 5;\n                iVar3 = fcn.00406006(*(unaff_EBP + 0xc), iVar2, iVar2);\n                uVar5 = *(unaff_EBP + 0xc);\n                extraout_ECX[1] = iVar3;\n                fcn.00405c8c(*(unaff_EBP + 8), uVar5, iVar2);\n                fcn.00405c6c(*(unaff_EBP + 8), arg_ch_00 * 0x1c + *(unaff_EBP + 8), unaff_EBP + -0x5c);\n            }\n            fcn.00405876();\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1604
    },
    "00406353": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406353(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00405408();\n    iVar2 = fcn.0040557f();\n    if (iVar2 - param_1 < uVar1) {\n        fcn.00405414();\n    }\n    uVar3 = fcn.004053fc();\n    if (uVar3 < uVar1 + param_1) {\n        uVar4 = fcn.00405587(uVar1 + param_1);\n        fcn.0040601e(uVar4);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004063aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004063aa(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    \n    iVar3 = fcn.0040546d(param_2);\n    cVar2 = fcn.004053b2(iVar3);\n    if (cVar2 == '\\0') {\n        if (param_1[1] == param_1[2]) {\n            fcn.00406353(1);\n        }\n        fcn.00405c52(param_1 + 3, param_1[1], unaff_EDI);\n    }\n    else {\n        iVar1 = *param_1;\n        if (param_1[1] == param_1[2]) {\n            fcn.00406353(1);\n        }\n        fcn.00405b22(param_1 + 3, param_1[1], ((iVar3 - iVar1) / 0x1c) * 0x1c + *param_1);\n    }\n    param_1[1] = param_1[1] + 0x1c;\n    return;\n}\n",
        "token_count": 267
    },
    "0040af02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af02(uint arg_8h)\n\n{\n    fcn.0040adc2(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040b885": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b899)\n// WARNING: Removing unreachable block (ram,0x0040b89f)\n// WARNING: Removing unreachable block (ram,0x0040b8a1)\n\nvoid fcn.0040b885(void)\n\n{\n    return;\n}\n",
        "token_count": 67
    },
    "004042d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path",
            "get OS version"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042d0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint lpszVolumeMountPoint;\n    uint lpBuffer;\n    uint var_14ch;\n    uint lpVersionInformation;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x941534 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_SetLocaleInfoW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(0, 0, 0, 0, 0, 0x401230);\n        (*_sym.imp.KERNEL32.dll_OpenEventA)(0, 0, 0x4012b0);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)(&var_14ch, 0, 0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_ReadConsoleInputW;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)(0, &var_1ch, 0, &var_8h);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstChangeNotificationA)(0x4012e4, 0, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)(0, &lpszVolumeMountPoint, 0);\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0);\n        (*pcVar1)(0, 0, 0, &var_4h);\n        (*pcVar2)();\n        (*_sym.imp.KERNEL32.dll_CreateFileW)(0x401314, 0, 0, 0, 0, 0, 0);\n    }\n    *(*0x93e2c8 + arg_8h) = *(*0x941948 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 504
    },
    "00405b60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b60(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.00405b1d();\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 113
    },
    "0040edda": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040edda(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00407642(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00411ad0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00411ad0(void)\n\n{\n    *0x7ff1dc = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4036a0, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "00403a6e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403a6e(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 92
    },
    "00403a7f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00403a7f(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x00406a98;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00406bd4;\n            case 2:\n                goto code_r0x00406be4;\n            case 3:\n                goto code_r0x00406bf8;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00406bd4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x00406be4:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x00406bf8:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x00406a98:\n    // WARNING: Could not recover jumptable at 0x00406a9a. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x406b6c))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406bd4;\n                    case 2:\n                        goto code_r0x00406be4;\n                    case 3:\n                        goto code_r0x00406bf8;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x00406a98;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406bd4;\n                    case 2:\n                        goto code_r0x00406be4;\n                    case 3:\n                        goto code_r0x00406bf8;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x00406a98;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406bd4;\n                    case 2:\n                        goto code_r0x00406be4;\n                    case 3:\n                        goto code_r0x00406bf8;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x943864 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00406930;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x00406a38;\n        case 2:\n            goto code_r0x00406a44;\n        case 3:\n            goto code_r0x00406a58;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x00406a38:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x00406a44:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x00406a58:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00406930:\n    // WARNING: Could not recover jumptable at 0x00406930. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x4069b4))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406a38;\n                case 2:\n                    goto code_r0x00406a44;\n                case 3:\n                    goto code_r0x00406a58;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00406930;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406a38;\n                case 2:\n                    goto code_r0x00406a44;\n                case 3:\n                    goto code_r0x00406a58;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00406930;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406a38;\n                case 2:\n                    goto code_r0x00406a44;\n                case 3:\n                    goto code_r0x00406a58;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3854
    },
    "00403a84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00403a84(uint *param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        param_2 = (param_3 - 4) + param_2;\n        puVar18 = (param_3 - 4) + param_1;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = param_3 >> 2;\n            if (uVar16 < 8) goto code_r0x00406e08;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + -1;\n                puVar18 = puVar18 + -1;\n            }\n            switch(param_3 & 3) {\n            case 1:\n                goto code_r0x00406f44;\n            case 2:\n                goto code_r0x00406f54;\n            case 3:\n                goto code_r0x00406f68;\n            }\n        }\n        else {\n            switch(param_3) {\n            case 0:\n                break;\n            case 1:\ncode_r0x00406f44:\n                *(puVar18 + 3) = *(param_2 + 3);\n                return param_1;\n            case 2:\ncode_r0x00406f54:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                return param_1;\n            case 3:\ncode_r0x00406f68:\n                *(puVar18 + 3) = *(param_2 + 3);\n                *(puVar18 + 2) = *(param_2 + 2);\n                *(puVar18 + 1) = *(param_2 + 1);\n                return param_1;\n            default:\n                param_3 = param_3 - (puVar18 & 3);\n                switch(puVar18 & 3) {\n                case 1:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    param_2 = param_2 + -1;\n                    uVar16 = param_3 >> 2;\n                    puVar18 = puVar18 - 1;\n                    if (uVar16 < 8) {\ncode_r0x00406e08:\n    // WARNING: Could not recover jumptable at 0x00406e0a. Too many branches\n    // WARNING: Treating indirect jump as call\n                        puVar18 = (**(uVar16 * -4 + 0x406edc))();\n                        return puVar18;\n                    }\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406f44;\n                    case 2:\n                        goto code_r0x00406f54;\n                    case 3:\n                        goto code_r0x00406f68;\n                    }\n                    break;\n                case 2:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    param_2 = param_2 + -2;\n                    puVar18 = puVar18 - 2;\n                    if (uVar16 < 8) goto code_r0x00406e08;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406f44;\n                    case 2:\n                        goto code_r0x00406f54;\n                    case 3:\n                        goto code_r0x00406f68;\n                    }\n                    break;\n                case 3:\n                    *(puVar18 + 3) = *(param_2 + 3);\n                    *(puVar18 + 2) = *(param_2 + 2);\n                    uVar16 = param_3 >> 2;\n                    *(puVar18 + 1) = *(param_2 + 1);\n                    param_2 = param_2 + -3;\n                    puVar18 = puVar18 - 3;\n                    if (uVar16 < 8) goto code_r0x00406e08;\n                    for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                        *puVar18 = *param_2;\n                        param_2 = param_2 + -1;\n                        puVar18 = puVar18 + -1;\n                    }\n                    switch(param_3 & 3) {\n                    case 1:\n                        goto code_r0x00406f44;\n                    case 2:\n                        goto code_r0x00406f54;\n                    case 3:\n                        goto code_r0x00406f68;\n                    }\n                }\n            }\n        }\n        return param_1;\n    }\n    if (((0x7f < param_3) && (*0x943864 != 0)) && ((param_1 & 0xf) == (param_2 & 0xf))) {\n        puVar18 = param_1;\n        if ((param_2 & 0xf) != 0) {\n            uVar17 = 0x10 - (param_2 & 0xf);\n            param_3 = param_3 - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *param_2;\n                param_2 = param_2 + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = param_3 >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = param_2[1];\n            uVar2 = param_2[2];\n            uVar3 = param_2[3];\n            uVar4 = param_2[4];\n            uVar5 = param_2[5];\n            uVar6 = param_2[6];\n            uVar7 = param_2[7];\n            uVar8 = param_2[8];\n            uVar9 = param_2[9];\n            uVar10 = param_2[10];\n            uVar11 = param_2[0xb];\n            uVar12 = param_2[0xc];\n            uVar13 = param_2[0xd];\n            uVar14 = param_2[0xe];\n            uVar15 = param_2[0xf];\n            *puVar18 = *param_2;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = param_2[0x11];\n            uVar2 = param_2[0x12];\n            uVar3 = param_2[0x13];\n            uVar4 = param_2[0x14];\n            uVar5 = param_2[0x15];\n            uVar6 = param_2[0x16];\n            uVar7 = param_2[0x17];\n            uVar8 = param_2[0x18];\n            uVar9 = param_2[0x19];\n            uVar10 = param_2[0x1a];\n            uVar11 = param_2[0x1b];\n            uVar12 = param_2[0x1c];\n            uVar13 = param_2[0x1d];\n            uVar14 = param_2[0x1e];\n            uVar15 = param_2[0x1f];\n            puVar18[0x10] = param_2[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            param_2 = param_2 + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((param_3 & 0x7f) != 0) {\n            for (uVar16 = (param_3 & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = param_2[1];\n                uVar2 = param_2[2];\n                uVar3 = param_2[3];\n                *puVar18 = *param_2;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                param_2 = param_2 + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((param_3 & 0xf) != 0) {\n                for (uVar16 = (param_3 & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return param_1;\n    }\n    puVar18 = param_1;\n    if ((param_1 & 3) == 0) {\n        uVar17 = param_3 >> 2;\n        if (uVar17 < 8) goto code_r0x00406ca0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *param_2;\n            param_2 = param_2 + 1;\n            puVar18 = puVar18 + 1;\n        }\n        switch(param_3 & 3) {\n        case 1:\n            goto code_r0x00406da8;\n        case 2:\n            goto code_r0x00406db4;\n        case 3:\n            goto code_r0x00406dc8;\n        }\n    }\n    else {\n        switch(param_3) {\n        case 0:\n            break;\n        case 1:\ncode_r0x00406da8:\n            *puVar18 = *param_2;\n            return param_1;\n        case 2:\ncode_r0x00406db4:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            return param_1;\n        case 3:\ncode_r0x00406dc8:\n            *puVar18 = *param_2;\n            *(puVar18 + 1) = *(param_2 + 1);\n            *(puVar18 + 2) = *(param_2 + 2);\n            return param_1;\n        default:\n            uVar16 = (param_3 - 4) + (param_1 & 3);\n            switch(param_1 & 3) {\n            case 1:\n                *param_1 = *param_2;\n                *(param_1 + 1) = *(param_2 + 1);\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 2) = *(param_2 + 2);\n                param_2 = param_2 + 3;\n                puVar18 = param_1 + 3;\n                if (uVar17 < 8) {\ncode_r0x00406ca0:\n    // WARNING: Could not recover jumptable at 0x00406ca0. Too many branches\n    // WARNING: Treating indirect jump as call\n                    puVar18 = (**(uVar17 * 4 + 0x406d24))();\n                    return puVar18;\n                }\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406da8;\n                case 2:\n                    goto code_r0x00406db4;\n                case 3:\n                    goto code_r0x00406dc8;\n                }\n                break;\n            case 2:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                *(param_1 + 1) = *(param_2 + 1);\n                param_2 = param_2 + 2;\n                puVar18 = param_1 + 2;\n                if (uVar17 < 8) goto code_r0x00406ca0;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406da8;\n                case 2:\n                    goto code_r0x00406db4;\n                case 3:\n                    goto code_r0x00406dc8;\n                }\n                break;\n            case 3:\n                *param_1 = *param_2;\n                uVar17 = uVar16 >> 2;\n                param_2 = param_2 + 1;\n                puVar18 = param_1 + 1;\n                if (uVar17 < 8) goto code_r0x00406ca0;\n                for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                    *puVar18 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                switch(uVar16 & 3) {\n                case 1:\n                    goto code_r0x00406da8;\n                case 2:\n                    goto code_r0x00406db4;\n                case 3:\n                    goto code_r0x00406dc8;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 3856
    },
    "0040892b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040892b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a9a0(0x414018, 0xc);\n    fcn.0040d501(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x941978;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x941974;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040896f;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00407642(arg_8h_00);\ncode_r0x0040896f:\n        fcn.00407642(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00408992();\n    fcn.0040a9e5();\n    return;\n}\n",
        "token_count": 395
    },
    "0040767c": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040767c(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040a7c0(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "004076ac": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.004076ac(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040a7c0(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 119
    }
}