{
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040980c) overlaps instruction at (ram,0x00409809)\n// \n\nvoid __fastcall entry0(uint8_t *param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    code *pcVar6;\n    uint64_t uVar7;\n    unkuint5 Var8;\n    uint *puVar9;\n    char *pcVar10;\n    uint extraout_ECX;\n    uint16_t uVar11;\n    uint extraout_EDX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar12;\n    uint *in_FS_OFFSET;\n    char cVar13;\n    uint *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    do {\n        uStack4 = 0x422104;\n        uStack8 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack8;\n        cVar13 = '\\0';\n        puStack12 = NULL;\n        unaff_EBP = unaff_EBP + 1;\n        puVar2 = unaff_ESI + 1;\n        out(*unaff_ESI, param_2);\n        uVar4 = in(param_2);\n        _pe_dos_header = param_1;\n        *unaff_EDI = uVar4;\n        puVar12 = unaff_EDI + 1;\n        if (SCARRY4(unaff_EBX, 1)) {\ncode_r0x0040987c:\n            out(0x9d, cVar13);\n            func_0x97a34fff();\n            puVar9 = puStack12;\n            puVar12[0x15cf8812] = unaff_EBP;\n            puVar1 = unaff_EBX + 0xf1873f5;\n            uVar5 = *puVar1;\n            *puVar1 = *puVar1 + puStack12;\n            *(unaff_ESI + 0x3d) = (*(unaff_ESI + 0x3d) - extraout_EDX) - CARRY1(uVar5, puStack12);\n    // WARNING: Could not recover jumptable at 0x0040989c. Too many branches\n    // WARNING: Treating indirect jump as call\n            puStack12 = puVar2;\n            (**(unaff_ESI + 0x4996852b))(unaff_EBP, &puStack12, unaff_EBX + 1, extraout_EDX, puVar9, extraout_ECX);\n            return;\n        }\n        *(param_2 + puVar2) = *(param_2 + puVar2);\n        *(unaff_EBX + -0x1c3eb71) = *(unaff_EBX + -0x1c3eb71) + -0x50;\n        uVar11 = CONCAT11(param_2 >> 8 | *param_1, param_2);\n        param_2 = param_2 & 0xffff0000 | uVar11;\n        pcVar10 = in(uVar11);\n        puVar12 = unaff_EDI + 5;\n        uVar3 = in(uVar11);\n        *(unaff_EDI + 1) = uVar3;\n        param_1 = param_1 + -1;\n        if (param_1 != NULL) {\n            Var8 = CONCAT14(pcVar10 < 0x103b00fc, unaff_ESI[-0x13]);\n            uVar7 = Var8 << 0x18;\n            unaff_ESI[-0x13] = uVar7 | Var8 >> 9;\n            cVar13 = (uVar7 & 0x100000000) != 0;\n            pcVar6 = swi(199);\n            (*pcVar6)();\n            cVar13 = -cVar13;\n            puStack12 = unaff_EDI[-0x121849ae];\n            goto code_r0x0040987c;\n        }\n        if ((POPCOUNT(pcVar10 + -0x103b00fc & 0xff) & 1U) == 0) {\n            pcVar6 = swi(1);\n            (*pcVar6)();\n            return;\n        }\n        *pcVar10 = *pcVar10 + pcVar10;\n        *pcVar10 = *pcVar10 + pcVar10;\n        unaff_EBX = unaff_EBX + 1;\n        unaff_ESI = puVar2;\n        unaff_EDI = puVar12;\n    } while( true );\n}\n",
        "token_count": 1040
    },
    "004214ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    }
}