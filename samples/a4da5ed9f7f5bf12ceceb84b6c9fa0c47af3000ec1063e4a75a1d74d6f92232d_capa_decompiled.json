{
    "00406bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406bc0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t lpCPInfo;\n    \n    uVar2 = 0;\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, &lpCPInfo);\n    *(param_1 + 0x100) = 1 < lpCPInfo;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(uVar2);\n        *(uVar2 + param_1) = iVar1 != 0;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    return;\n}\n",
        "token_count": 161
    },
    "00401272": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401272(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x424331;\n    *in_FS_OFFSET = &var_ch;\n    if (*param_1 != 0) {\n        if (*(param_1 + 4) != '\\0') {\n            fcn.00404db5(*param_1, param_1[2] * 2);\n        }\n        fcn.00416e9e(*param_1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 163
    },
    "004012cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar fcn.004012cc(void)\n\n{\n    char cVar1;\n    ushort *puVar2;\n    int16_t *piVar3;\n    char in_stack_00001ff0;\n    \n    fcn.00411c40();\n    fcn.00402f8c();\n    fcn.00405e1c();\n    do {\n        cVar1 = fcn.00405dc2(&stack0xfffffff4, 0x800);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar2 = fcn.00403592();\n        cVar1 = fcn.00403474();\n        if (in_stack_00001ff0 == '\\0') {\n            if (cVar1 != '\\0') {\n                fcn.00405bf7();\n            }\n        }\n        else if (cVar1 != '\\0') {\n            *puVar2 = 0;\n        }\n        piVar3 = fcn.00402f8c();\n        if ((*piVar3 == 0x2a) && (cVar1 = fcn.00403474(),  cVar1 != '\\0')) {\n            fcn.00405c1f();\n        }\n        cVar1 = fcn.00402a62();\n    } while (cVar1 == '\\0');\n    return 1;\n}\n",
        "token_count": 295
    },
    "004013cf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.004013cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.004012cc(in_ECX + 0xa36c, arg_ch, arg_8h, arg_10h, 6);\n    if (cVar1 == '\\0') {\n        if ((arg_14h == '\\0') || (*(in_ECX + 0xa3e4) == 0)) {\n            cVar1 = '\\0';\n        }\n        else {\n            cVar1 = fcn.004012cc(in_ECX + 0xa3cc, arg_ch, arg_8h, arg_10h, 6);\n            cVar1 = '\\x01' - (cVar1 != '\\0');\n        }\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 218
    },
    "00405de9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405de9(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00416e9e(*param_1);\n        *param_1 = 0;\n    }\n    param_1[1] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00401497": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401497(int32_t param_1)\n\n{\n    ushort *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    ushort *in_stack_00000014;\n    int32_t in_stack_00000018;\n    uint uVar6;\n    char *pcVar7;\n    \n    puVar1 = in_stack_00000014;\n    if ((in_stack_00000014 != NULL) && (in_stack_00000018 != 0)) {\n        *in_stack_00000014 = 0;\n    }\n    iVar5 = 1;\n    pcVar7 = 0x1;\n    uVar6 = 0;\n    in_stack_00000014 = in_stack_00000014 & 0xffffff00 | *(param_1 + 0x10f1);\n    cVar2 = fcn.004013cf(param_1 + 0x28, in_stack_00000014, 0, 1);\n    if (cVar2 == '\\0') {\n        fcn.00405e1c();\n        while (iVar3 = fcn.00405d72(),  iVar3 != 0) {\n            cVar2 = fcn.00402a62();\n            if (cVar2 != '\\0') {\n                if (pcVar7 != NULL) {\n                    iVar4 = fcn.00405bf2(iVar3, uVar6);\n                    *pcVar7 = '\\x01' - (iVar4 != 0);\n                }\n                if (puVar1 == NULL) {\n                    return iVar5;\n                }\n                fcn.00405c1f(puVar1, iVar3, unaff_ESI);\n                return iVar5;\n            }\n            iVar5 = iVar5 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "00401791": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __thiscall fcn.00401791(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    \n    if (*(param_1 + 9) == '\\0') {\n        cVar1 = fcn.00406982(param_2);\n        if (cVar1 == '\\0') {\n            *(param_1 + 10) = 1;\n        }\n    }\n    else {\n        cVar1 = '\\0';\n    }\n    return cVar1;\n}\n",
        "token_count": 109
    },
    "004017b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004017b7(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0xb) == '\\0') {\n        fcn.004016b0(10, param_2);\n    }\n    fcn.00401906(2);\n    return;\n}\n",
        "token_count": 72
    },
    "0040194e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040194e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0xff) && (*(in_ECX + 8) == '\\0')) {\n        return;\n    }\n    fcn.00401906(arg_8h);\n    arg_8h = iVar2;\n    fcn.004131a0(&arg_8h, 0x42c2ec);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 146
    },
    "004018e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004018e5(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0xb) == '\\0') {\n        fcn.004016b0(0xb, param_2);\n    }\n    fcn.0040194e(2);\n    return;\n}\n",
        "token_count": 74
    },
    "00401906": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401906(int32_t *param_1, int32_t param_2)\n\n{\n    if (param_2 == 1) {\ncode_r0x00401922:\n        if (*param_1 != 0) goto code_r0x00401929;\n    }\n    else {\n        if (param_2 == 2) {\n            if ((*param_1 == 0) || (*param_1 == 1)) {\n                *param_1 = 2;\n            }\n            goto code_r0x00401929;\n        }\n        if (param_2 == 3) {\n            if (*param_1 != 0xb) {\n                *param_1 = 3;\n            }\n            goto code_r0x00401929;\n        }\n        if (param_2 == 0xff) goto code_r0x00401922;\n    }\n    *param_1 = param_2;\ncode_r0x00401929:\n    param_1[1] = param_1[1] + 1;\n    return;\n}\n",
        "token_count": 232
    },
    "00401a43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a43(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x424331;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = 0x425298;\n    if ((param_1[1] != -1) && (*(param_1 + 4) == '\\0')) {\n        if (*(param_1 + 0x12) == '\\0') {\n            fcn.00401af3();\n        }\n        else {\n            fcn.00401c3a();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 179
    },
    "00401af3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401af3(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint8_t uVar1;\n    \n    uVar1 = 1;\n    if (*(param_1 + 4) != -1) {\n        if ((*(param_1 + 0x10) == '\\0') && (*(param_1 + 0xc) == 0)) {\n            in_EAX = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n            uVar1 = 1 - (in_EAX != 1);\n        }\n        *(param_1 + 4) = 0xffffffff;\n    }\n    *(param_1 + 0xc) = 0;\n    if ((uVar1 == 0) && (*(param_1 + 0x14) != '\\0')) {\n        in_EAX = fcn.004017b7(param_1 + 0x1e);\n    }\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 231
    },
    "00401b41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00401b41(void)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    uint in_stack_00001004;\n    uint in_stack_00001008;\n    uint32_t in_stack_0000100c;\n    \n    fcn.00411c40();\n    if (((in_stack_0000100c & 0x10) == 0) && (*(extraout_ECX + 0x1c) == '\\0')) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = 1;\n    }\n    *(extraout_ECX + 0x18) = in_stack_0000100c;\n    piVar2 = fcn.00403592(in_stack_00001008);\n    if (((*piVar2 == 0x2e) || (*piVar2 == 0x20)) && ((in_stack_0000100c & 0x20) == 0)) {\n        *(extraout_ECX + 4) = 0xffffffff;\n    }\n    else {\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_00001004, unaff_EBX, uVar5, 0, 2, 0, 0);\n        *(extraout_ECX + 4) = uVar3;\n    }\n    if (*(extraout_ECX + 4) == -1) {\n        cVar1 = fcn.00403283(in_stack_00001004, *0x10, 0x800);\n        if (cVar1 != '\\0') {\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&stack0xfffffff4, unaff_EBX, uVar5, 0, 2, 0, 0);\n            *(extraout_ECX + 4) = uVar5;\n        }\n    }\n    *(extraout_ECX + 0x12) = 1;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    uVar4 = fcn.00405c1f(extraout_ECX + 0x1e, in_stack_00001004, 0x800);\n    return uVar4 & 0xffffff00 | *(extraout_ECX + 4) != -1;\n}\n",
        "token_count": 559
    },
    "00401c3a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401c3a(int32_t *param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (param_1[3] == 0) {\n        if (param_1[1] != -1) {\n            in_EAX = (**(*param_1 + 8))();\n        }\n        if (*(param_1 + 0x13) != '\\0') {\n            uVar1 = fcn.00402397(param_1 + 0x1e);\n            return uVar1;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 145
    },
    "00401c63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c63(uint lpBuffer, uint32_t nNumberOfBytesToRead)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = in_ECX;\n    if (*(in_ECX + 0xc) == 1) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *(in_ECX + 4) = uVar2;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(in_ECX + 4), lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    if (iVar3 == 0) {\n        cVar1 = fcn.00401d50();\n        if ((cVar1 == '\\0') || (nNumberOfBytesToRead < 0x4e21)) {\n            if ((*(in_ECX + 0xc) == 1) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x6d)) {\n                return 0;\n            }\n            if (((*(in_ECX + 0xc) != 0) || (nNumberOfBytesToRead < 0x8001)) ||\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x21)) {\n                return -1;\n            }\n            uVar2 = 0x8000;\n        }\n        else {\n            uVar2 = 20000;\n        }\n        iVar3 = fcn.00401c63(lpBuffer, uVar2);\n        return iVar3;\n    }\n    return lpNumberOfBytesRead;\n}\n",
        "token_count": 394
    },
    "00401ea7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ea7(uint arg_8h, int32_t arg_ch, int32_t lpDistanceToMoveHigh)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int64_t iVar3;\n    \n    iVar1 = CONCAT44(arg_ch, arg_8h);\n    if (in_ECX[1] != -1) {\n        if (((arg_ch < 1) && (arg_ch < 0)) && (lpDistanceToMoveHigh != 0)) {\n            if (lpDistanceToMoveHigh == 1) {\n                iVar3 = (**(*in_ECX + 0x14))();\n            }\n            else {\n                iVar3 = fcn.00401cfa();\n            }\n            iVar1 = iVar3 + iVar1;\n            lpDistanceToMoveHigh = 0;\n        }\n        iVar2 = lpDistanceToMoveHigh;\n        lpDistanceToMoveHigh = iVar1 >> 0x20;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[1], iVar1, &lpDistanceToMoveHigh, iVar2);\n        if ((iVar2 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 300
    },
    "00402022": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402022(int32_t param_1, uint32_t *param_2, uint param_3, uint32_t *param_4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint unaff_EBP;\n    uint var_4h;\n    char cVar3;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    uchar auStack16 [4];\n    uchar auStack12 [8];\n    char cStack4;\n    \n    cVar3 = unaff_EBP >> 0x18;\n    if ((*(param_1 + 0x18) != 0x100) && ((*(param_1 + 0x18) & 2) == 0)) {\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(*(param_1 + 4));\n    }\n    bVar2 = true;\n    if ((param_2 == NULL) || (bVar1 = bVar2,  (*param_2 | param_2[1]) == 0)) {\n        bVar1 = false;\n    }\n    if ((param_4 == NULL) || ((*param_4 | param_4[1]) == 0)) {\n        bVar2 = false;\n    }\n    if (bVar1) {\n        fcn.0040647b(auStack24);\n    }\n    if (var_4h != '\\0') {\n        fcn.0040647b(auStack12);\n    }\n    if (bVar2) {\n        fcn.0040647b(auStack20);\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)\n              (*(param_1 + 4), -(cStack4 != '\\0') & auStack16, -bVar2 & auStack24, -(cVar3 != '\\0') & &stack0xffffffe0);\n    return;\n}\n",
        "token_count": 414
    },
    "004020fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004020fb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    \n    iVar4 = -1;\n    if (*(param_1 + 4) == -1) {\n        iVar1 = iVar4;\n        iVar3 = iVar4;\n        if (*(param_1 + 0x14) == '\\0') goto code_r0x00402169;\n        fcn.004018e5(param_1 + 0x1e);\n    }\n    iVar3 = unaff_EDI;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(param_1 + 4), 0, &stack0xfffffff8, 1);\n    if ((iVar1 == -1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0)) {\n        if (*(param_1 + 0x14) == '\\0') {\n            iVar1 = -1;\n            iVar3 = iVar4;\n        }\n        else {\n            fcn.004018e5();\n        }\n    }\ncode_r0x00402169:\n    return CONCAT44(iVar3, iVar1);\n}\n",
        "token_count": 286
    },
    "0040218a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar __thiscall fcn.0040218a(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint32_t unaff_retaddr;\n    \n    uVar1 = param_3;\n    if (param_3 == 0) {\n        cVar5 = '\\x01';\n    }\n    else {\n        if (param_1[3] == 1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5);\n            param_1[1] = iVar3;\n        }\ncode_r0x004021b0:\n        param_3 = 0;\n        cVar5 = '\\0';\n        if (param_1[3] == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(param_1[1], param_2, uVar1, &param_3, 0);\n            cVar5 = '\\x01' - (iVar3 != 1);\ncode_r0x00402221:\n            if (cVar5 != '\\0') goto code_r0x00402283;\n        }\n        else {\n            uVar6 = 0;\n            if (uVar1 != 0) {\n                do {\n                    uVar4 = uVar1 - uVar6;\n                    if (0x3fff < uVar4) {\n                        uVar4 = 0x4000;\n                    }\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)(param_1[1], param_2 + uVar6, uVar4, &param_3, 0);\n                    cVar5 = '\\x01' - (iVar3 != 1);\n                    if (cVar5 == '\\0') goto code_r0x00402225;\n                    uVar6 = uVar6 + 0x4000;\n                } while (uVar6 < uVar1);\n                goto code_r0x00402221;\n            }\n        }\ncode_r0x00402225:\n        if ((*(param_1 + 5) == '\\0') || (param_1[3] != 0)) goto code_r0x00402283;\n        cVar2 = fcn.00401791();\n        if (cVar2 != '\\0') {\n            if ((unaff_retaddr < uVar1) && (unaff_retaddr != 0)) {\n                iVar3 = *param_1;\n                uVar7 = (**(iVar3 + 0x14))(0);\n                (**(iVar3 + 0x10))(uVar7 - unaff_retaddr, (uVar7 >> 0x20) - (uVar7 < unaff_retaddr));\n            }\n            goto code_r0x004021b0;\n        }\n        fcn.0040199e(0, param_1 + 0x1e);\ncode_r0x00402283:\n        *(param_1 + 2) = 1;\n    }\n    return cVar5;\n}\n",
        "token_count": 703
    },
    "004022b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004022b9(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint8_t uVar5;\n    uint32_t arg_10h;\n    int16_t *piVar6;\n    int16_t *in_stack_00001008;\n    char in_stack_0000100c;\n    \n    uVar2 = fcn.00411c40();\n    if ((in_stack_00001008 == NULL) || (uVar2 = 0,  *in_stack_00001008 == 0)) {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        uVar5 = 1;\n        uVar2 = 0;\n        piVar6 = in_stack_00001008;\n        do {\n            arg_10h = uVar2 >> 1;\n            if (0x7ff < arg_10h) break;\n            cVar1 = fcn.00403474(*piVar6);\n            if (((cVar1 != '\\0') && (in_stack_00001008 < piVar6)) &&\n               ((piVar6 != in_stack_00001008 + 2 || (in_stack_00001008[1] != 0x3a)))) {\n                fcn.00418229(*0x10, in_stack_00001008, arg_10h);\n                *(&stack0x00000000 + arg_10h * 2) = 0;\n                iVar3 = fcn.00402480(*0x10, 1, 0);\n                uVar5 = 1 - (iVar3 != 0);\n            }\n            piVar6 = piVar6 + 1;\n            uVar2 = uVar2 + 2;\n        } while (*piVar6 != 0);\n        if (in_stack_0000100c == '\\0') {\n            puVar4 = fcn.00403592(in_stack_00001008);\n            uVar2 = fcn.00403474(*puVar4);\n            if (uVar2 == '\\0') {\n                iVar3 = fcn.00402480(in_stack_00001008, 1, 0);\n                uVar2 = -iVar3 & 0xffffff00;\n                uVar5 = 1 - (iVar3 != 0);\n            }\n        }\n        uVar2 = uVar2 & 0xffffff00 | uVar5;\n    }\n    return uVar2;\n}\n",
        "token_count": 552
    },
    "00402480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402480(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpPathName;\n    uint uStackY40;\n    \n    fcn.00411c40();\n    piVar2 = fcn.00403592();\n    if ((*piVar2 == 0x2e) || (*piVar2 == 0x20)) {\ncode_r0x004024b1:\n        cVar1 = fcn.004023ea();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00403283(arg_8h, &fcn.00402480::lpPathName, 0x800);\n            if (cVar1 != '\\0') {\n                uStackY40 = 0x4024e0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n                if (iVar3 != 0) goto code_r0x004024e4;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar3 == 2) || (iVar3 == 3)) {\n            uVar4 = 2;\n        }\n        else {\n            uVar4 = 1;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        if (iVar3 == 0) goto code_r0x004024b1;\ncode_r0x004024e4:\n        if (arg_ch != '\\0') {\n            uStackY40 = 0x4024f3;\n            fcn.004026bd(arg_8h, arg_10h);\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 408
    },
    "00402524": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402524(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint in_stack_00000fec;\n    uint in_stack_00001000;\n    uint in_stack_0000101c;\n    uint in_stack_00001024;\n    uint in_stack_00001028;\n    uint dwFileAttributes;\n    uint uVar5;\n    \n    fcn.00411c40();\n    bVar1 = true;\n    uVar3 = fcn.004023fe(in_stack_00001028);\n    if ((uVar3 == 0xffffffff) || ((uVar3 & 1) == 0)) {\n        bVar1 = false;\n    }\n    else {\n        fcn.004026bd(in_stack_00001024, 0);\n    }\n    uVar5 = 0;\n    dwFileAttributes = 0x40000000;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_0000101c, 0x40000000, 3, 0, 3, 0x2000000, 0);\n    if ((iVar4 != -1) ||\n       ((cVar2 = fcn.00403283(in_stack_00001000, &stack0xfffffffc, 0x800),  cVar2 != '\\0' &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&stack0xfffffff0, 0x40000000, 3, 0, 3, 0x2000000, 0),  iVar4 != -1\n        )))) {\n        if (uVar5 >> 8 != '\\0') {\n            fcn.0040647b(&stack0xffffffe4);\n        }\n        if (uVar5 >> 0x18 != '\\0') {\n            fcn.0040647b(&stack0xfffffff4);\n        }\n        if (uVar5 >> 0x10 != '\\0') {\n            fcn.0040647b(&stack0xffffffec);\n        }\n        (*_sym.imp.KERNEL32.dll_SetFileTime)\n                  (iVar4, -(uVar5 >> 0x18 != '\\0') & &stack0xfffffff4, -(uVar5 >> 0x10 != '\\0') & &stack0xffffffec, \n                   -(uVar5 >> 8 != '\\0') & &stack0xffffffe4);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n        if (bVar1) {\n            fcn.004026bd(in_stack_00000fec, dwFileAttributes);\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "004027a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004027a3(int16_t *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    while( true ) {\n        *(param_2 + 0x1044) = 0;\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if (*(param_1 + 0x800) == '\\0') {\n            iVar2 = fcn.0040286d(*(param_1 + 0x802), param_1, param_2);\n        }\n        else {\n            iVar2 = fcn.0040286d(0xffffffff, param_1, param_2);\n            *(param_1 + 0x802) = iVar2;\n        }\n        if (iVar2 == -1) break;\n        *(param_2 + 0x1040) = 0;\n        uVar1 = fcn.0040245b(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar1;\n        uVar1 = fcn.00402473(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar1;\n        *(param_1 + 0x800) = 0;\n        arg_8h = fcn.004035ae();\n        iVar2 = fcn.004181e9(arg_8h, 0x4252b4);\n        if ((iVar2 != 0) && (iVar2 = fcn.004181e9(arg_8h, 0x4252b8),  iVar2 != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 395
    },
    "00402a62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402a62(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint32_t arg_10h;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t unaff_retaddr;\n    uint32_t uVar7;\n    uint in_stack_00002008;\n    int32_t in_stack_0000200c;\n    uint32_t in_stack_00002010;\n    uchar auStack40 [4];\n    uchar *puStack36;\n    uint uStack32;\n    \n    fcn.00411c40();\n    uVar6 = -(in_stack_00002010 >> 0x1f);\n    in_stack_00002010 = in_stack_00002010 & 0xffff;\n    uVar3 = unaff_retaddr & 0xffffff00 | uVar6;\n    if (in_stack_00002010 == 0) goto code_r0x00402be0;\n    arg_10h = fcn.00416e83(in_stack_00002008);\n    if (((in_stack_00002010 != 2) && (in_stack_00002010 != 4)) && (in_stack_00002010 != 3)) {\n        uVar7 = arg_10h;\n        if (uVar6 == 0) {\n            uStack32 = 0x402acf;\n            arg_10h = fcn.00406fc5(in_stack_00002008, in_stack_0000200c, arg_10h);\n        }\n        else {\n            uStack32 = 0x402ac5;\n            arg_10h = fcn.0041826c(in_stack_00002008, in_stack_0000200c, arg_10h);\n        }\n        if (arg_10h == 0) {\n            uVar1 = *(in_stack_0000200c + uVar7 * 2);\n            arg_10h = uVar1;\n            if (((arg_10h == 0x5c) || (arg_10h == 0x2f)) || (uVar1 == 0)) {\n                return CONCAT31(uVar1 >> 8, 1);\n            }\n        }\n    }\n    if (in_stack_00002010 == 1) goto code_r0x00402afa;\n    uStack32 = 0x402b0e;\n    fcn.0040315d();\n    uStack32 = 0x800;\n    puStack36 = &stack0x00000ff8;\n    fcn.0040315d();\n    if (((in_stack_00002010 == 2) || (in_stack_00002010 == 4)) &&\n       (arg_10h = fcn.00402d3e(&stack0xffffffec, &stack0x00000fec, uVar3),  arg_10h != 0)) goto code_r0x00402afa;\n    if (in_stack_00002010 == 3) goto code_r0x00402b55;\n    if ((in_stack_00002010 == 5) || (in_stack_00002010 == 6)) {\n        cVar2 = fcn.0040348c();\n        if (cVar2 != '\\0') goto code_r0x00402b55;\n        if ((in_stack_00002010 == 5) || (cVar2 = fcn.0040348c(),  cVar2 != '\\0')) {\n            if (uStack32 == 0) goto code_r0x00402be0;\n            uVar4 = fcn.00416e83(&stack0xffffffe0);\n            if (uVar6 == 0) {\n                arg_10h = fcn.00406fc5(&stack0xffffffe0, &stack0x00000fe0, uVar4);\n            }\n            else {\n                arg_10h = fcn.0041826c(&stack0xffffffe0, &stack0x00000fe0, uVar4);\n            }\n        }\n        else {\n            arg_10h = fcn.00402d3e(&stack0xffffffd8, &stack0x00000fd8, uVar3);\n        }\n        if (arg_10h != 0) {\ncode_r0x00402afa:\n            return arg_10h & 0xffffff00;\n        }\n    }\ncode_r0x00402be0:\n    uVar4 = fcn.004035ae();\n    arg_ch = fcn.004035ae();\n    if (in_stack_00002010 == 2) {\n        iVar5 = fcn.00402d3e(uVar4, arg_ch, uVar3);\n        return iVar5 == 0;\n    }\ncode_r0x00402b55:\n    uVar3 = fcn.00402c0f();\n    return uVar3;\n}\n",
        "token_count": 1097
    },
    "00402d3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d3e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (arg_10h == '\\0') {\n        fcn.00405bf2();\n    }\n    else {\n        fcn.004181e9(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00402d5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00402d5f(uint param_1, char param_2)\n\n{\n    if (param_2 == '\\0') {\n        param_1 = sub.USER32.dll_CharUpperW(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 57
    },
    "00402ec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402ec0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int16_t *in_stack_00001ffc;\n    int16_t *in_stack_00002008;\n    ushort *in_stack_0000200c;\n    int32_t in_stack_00002010;\n    \n    fcn.00411c40();\n    if ((in_stack_00002008 == NULL) || (*in_stack_00002008 == 0)) {\n        if (in_stack_00002010 != 0) {\n            *in_stack_0000200c = 0;\n        }\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n        if (((uVar2 == 0) || (0x800 < uVar2)) &&\n           (cVar1 = fcn.00403283(in_stack_00002008, &stack0x00000ff4, 0x800),  cVar1 != '\\0')) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n        }\n        if (((uVar2 != 0) && (uVar2 < 0x800)) || (in_stack_00002008 != in_stack_00001ffc)) {\n            fcn.00405c1f();\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00402f8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.00402f8c(void)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uint in_stack_00000ffc;\n    uint in_stack_00001000;\n    int16_t *in_stack_00001004;\n    int16_t *piVar6;\n    int32_t in_stack_00001008;\n    \n    fcn.00411c40();\n    if (*in_stack_00001004 != 0) {\n        piVar4 = in_stack_00001004 + 2;\n        do {\n            cVar2 = fcn.00403474();\n            if ((((cVar2 != '\\0') && (piVar4[-1] == 0x2e)) && (*piVar4 == 0x2e)) &&\n               (cVar2 = fcn.00403474(),  cVar2 != '\\0')) {\n                in_stack_00001004 = piVar4 + 2;\n            }\n            piVar6 = piVar4 + -1;\n            piVar4 = piVar4 + 1;\n        } while (*piVar6 != 0);\n    }\n    iVar1 = *in_stack_00001004;\n    while (iVar1 != 0) {\n        piVar4 = in_stack_00001004;\n        if ((*in_stack_00001004 != 0) && (in_stack_00001004[1] == 0x3a)) {\n            piVar4 = in_stack_00001004 + 2;\n        }\n        piVar6 = in_stack_00001004;\n        if (((*piVar4 == 0x5c) && (piVar4[1] == 0x5c)) &&\n           ((iVar3 = fcn.0041320e(piVar4 + 2, 0x5c),  iVar3 != 0 && (iVar3 = fcn.0041320e(iVar3 + 2, 0x5c),  iVar3 != 0)\n            ))) {\n            piVar4 = iVar3 + 2;\n        }\n        iVar1 = *piVar4;\n        piVar5 = piVar4;\n        while (iVar1 != 0) {\n            in_stack_00001004 = piVar6;\n            cVar2 = fcn.00403474(iVar1);\n            if (cVar2 == '\\0') {\n                if (iVar1 != 0x2e) break;\n            }\n            else {\n                piVar5 = piVar4 + 1;\n            }\n            piVar4 = piVar4 + 1;\n            piVar6 = in_stack_00001004;\n            iVar1 = *piVar4;\n        }\n        if (piVar5 == in_stack_00001004) break;\n        in_stack_00001004 = piVar5;\n        iVar1 = *piVar5;\n    }\n    if (((*in_stack_00001004 == 0x2e) && (in_stack_00001004[1] == 0x2e)) && (in_stack_00001004[2] == 0)) {\n        in_stack_00001004 = in_stack_00001004 + 2;\n    }\n    if (in_stack_00001008 != 0) {\n        fcn.00405c1f(*0x10, in_stack_00001004, 0x800);\n        fcn.00405c1f(in_stack_00000ffc, &stack0xfffffff4, in_stack_00001000);\n    }\n    return in_stack_00001004;\n}\n",
        "token_count": 802
    },
    "0040313c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040313c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.004035ae(param_1);\n        uVar1 = fcn.004133eb(uVar1, 0x2e);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0040322d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.0040322d(int32_t arg_8h, int16_t *arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    if ((arg_ch == NULL) || (*arg_ch == 0)) {\n        if (arg_8h == 0) {\n            *arg_10h = 0;\n        }\n        else {\n            fcn.00406b87(arg_8h, arg_10h, arg_14h);\n        }\n    }\n    else if (arg_10h != arg_ch) {\n        fcn.00418229(arg_10h, arg_ch, arg_14h);\n    }\n    if (arg_14h != 0) {\n        arg_10h[arg_14h + -1] = 0;\n    }\n    return arg_10h;\n}\n",
        "token_count": 192
    },
    "00403283": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403283(int16_t *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpBuffer;\n    uint var_ffch;\n    uint uStackY68;\n    uint *puStackY64;\n    int16_t *piStackY60;\n    uint *puStackY56;\n    uint *puStackY52;\n    uint uStackY48;\n    uint *puStackY44;\n    uint *puStackY40;\n    uint *puStackY36;\n    uint *puStackY32;\n    \n    fcn.00411c40();\n    if (*arg_8h == 0) {\n        return 0;\n    }\n    fcn.00403412();\n    iVar2 = fcn.00416e83(arg_8h);\n    cVar1 = fcn.0040343e();\n    if (cVar1 == '\\0') {\n        puStackY32 = 0x7ff;\n        puStackY36 = 0x403346;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        if ((uVar3 != 0) && (uVar3 < 0x800)) {\n            cVar1 = fcn.00403474();\n            if (cVar1 == '\\0') {\n                fcn.00402e95();\n                puStackY32 = 0x4033b7;\n                iVar4 = fcn.00416e83(&fcn.00403283::lpBuffer);\n                if (iVar4 + iVar2 + 4 < arg_10h) {\n                    puStackY32 = 0x4252fc;\n                    puStackY36 = arg_ch;\n                    puStackY40 = 0x4033d2;\n                    fcn.00405c1f();\n                    puStackY40 = arg_10h;\n                    puStackY44 = &fcn.00403283::lpBuffer;\n                    puStackY52 = 0x4033e2;\n                    fcn.00405bf7();\n                    if (*arg_8h == 0x2e) {\n                        puStackY52 = arg_8h[1];\n                        puStackY56 = 0x4033f2;\n                        cVar1 = fcn.00403474();\n                        if (cVar1 != '\\0') {\n                            arg_8h = arg_8h + 2;\n                        }\n                    }\n                    goto code_r0x004033f9;\n                }\n            }\n            else if (iVar2 + 6U < arg_10h) {\n                puStackY32 = 0x40337f;\n                fcn.00405c1f();\n                var_ffch._0_2_ = 0;\n                puStackY36 = &fcn.00403283::lpBuffer;\n                puStackY32 = arg_10h;\n                puStackY52 = arg_ch;\n                puStackY44 = 0x403398;\n                fcn.00405bf7();\ncode_r0x004033f9:\n                puStackY56 = arg_10h;\n                piStackY60 = arg_8h;\n                goto code_r0x004033fb;\n            }\n        }\ncode_r0x00403407:\n        uVar5 = 0;\n    }\n    else {\n        puStackY32 = 0x4032c2;\n        cVar1 = fcn.00403412();\n        if (cVar1 == '\\0') {\n            if (((*arg_8h != 0x5c) || (piStackY60 = arg_8h + 1,  *piStackY60 != 0x5c)) || (arg_10h <= iVar2 + 6U))\n            goto code_r0x00403407;\n            puStackY32 = arg_10h;\n            puStackY36 = 0x4252fc;\n            puStackY40 = arg_ch;\n            puStackY44 = 0x40331e;\n            fcn.00405c1f();\n            puStackY44 = arg_10h;\n            uStackY48 = 0x425308;\n            puStackY52 = arg_ch;\n            puStackY56 = 0x40332c;\n            fcn.00405bf7();\n            puStackY56 = arg_10h;\n        }\n        else {\n            if (arg_10h <= iVar2 + 4U) goto code_r0x00403407;\n            puStackY32 = arg_10h;\n            puStackY36 = 0x4252fc;\n            puStackY40 = arg_ch;\n            puStackY44 = 0x4032e2;\n            fcn.00405c1f();\n            puStackY44 = arg_10h;\n            piStackY60 = arg_8h;\n        }\ncode_r0x004033fb:\n        puStackY64 = arg_ch;\n        uStackY68 = 0x403403;\n        fcn.00405bf7();\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 1153
    },
    "004035ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.004035ae(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    piVar4 = param_1;\n    iVar2 = fcn.00416e83(param_1);\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        piVar3 = param_1 + iVar2;\n        do {\n            cVar1 = fcn.00403474(piVar4, *piVar3);\n            if (cVar1 != '\\0') {\n                return piVar3 + 1;\n            }\n            piVar3 = piVar3 + -1;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    if ((*param_1 != 0) && (param_1[1] == 0x3a)) {\n        param_1 = param_1 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00403624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403624(int16_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort *puVar1;\n    \n    if ((arg_8h != NULL) && (*arg_8h != 0)) {\n        puVar1 = fcn.0040313c(arg_8h);\n        if (puVar1 != NULL) {\n            *puVar1 = 0;\n        }\n        if (arg_ch != 0) {\n            fcn.00405bf7(arg_8h, 0x4252b4, arg_10h);\n            fcn.00405bf7(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00403793": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403793(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t *extraout_ECX;\n    uint uVar4;\n    uint32_t arg_10h;\n    int16_t *arg_ch;\n    int32_t in_stack_00001fdc;\n    int32_t in_stack_00001fe0;\n    int32_t in_stack_00002018;\n    int32_t in_stack_0000201c;\n    int32_t in_stack_00002024;\n    \n    fcn.00411c40();\n    if (*extraout_ECX != 0) {\n        uVar4 = 0x425354;\n        if (in_stack_00002024 == 0) {\n            uVar4 = 0x425358;\n        }\n        else if (in_stack_00002024 == 1) {\n            uVar4 = 0x42535c;\n        }\n        else if (in_stack_00002024 == 2) {\n            uVar4 = 0x425360;\n        }\n        uVar4 = fcn.00401595(0xffffffff, uVar4, 1);\n        if (in_stack_0000201c != 0) {\n            fcn.00406dcc();\n            uVar1 = fcn.004182f0();\n            uVar4 = fcn.00401595(uVar4, &stack0x00000ffc, uVar1);\n        }\n        fcn.00406dcc();\n        uVar1 = fcn.004182f0();\n        fcn.00401595(uVar4, &stack0xffffffe4, uVar1);\n        fcn.004036d0();\n        iVar2 = fcn.00403c51();\n        if (iVar2 != 0) {\n            arg_ch = iVar2 + 0x12;\n            if (*arg_ch == 0x22) {\n                arg_ch = iVar2 + 0x14;\n            }\n            iVar2 = fcn.0041320e();\n            if (iVar2 == 0) {\n                arg_10h = 0xff;\n            }\n            else {\n                arg_10h = iVar2 - arg_ch >> 1;\n            }\n            if (in_stack_00001fe0 - 1U < arg_10h) {\n                arg_10h = -(in_stack_00001fe0 != 0) & in_stack_00001fe0 - 1U;\n            }\n            if (arg_10h != 0) {\n                fcn.00418229(in_stack_00001fdc, arg_ch, arg_10h);\n            }\n            *(in_stack_00001fdc + arg_10h * 2) = 0;\n            puVar3 = fcn.004133eb(in_stack_00001fdc, 0x22);\n            if (puVar3 == NULL) {\n                return;\n            }\n            *puVar3 = 0;\n            return;\n        }\n    }\n    if (in_stack_00002018 != in_stack_00001fdc) {\n        fcn.00405c1f();\n    }\n    return;\n}\n",
        "token_count": 690
    },
    "0040391b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040391b(int32_t param_1, uint param_2)\n\n{\n    fcn.00403940(param_2);\n    fcn.00403cbc();\n    if (*(param_1 + 0x10) != '\\0') {\n        (*_sym.imp.USER32.dll_SetProcessDefaultLayout)(1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00403d24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403d24(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x10) != '\\0') {\n        uVar2 = 0xffffffec;\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(param_2, 0xffffffec);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar1 | 0x400000);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00403d4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00403d4b(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    int32_t iVar7;\n    uint32_t unaff_ESI;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uchar *puStack2160;\n    uint uStack2156;\n    uchar *puStack2152;\n    uchar *puStack2148;\n    int32_t iVar11;\n    int32_t iStack2124;\n    int32_t iStack2120;\n    int32_t iStack2116;\n    int32_t iStack2112;\n    uchar auStack2108 [8];\n    int16_t iStack2100;\n    uchar auStack2088 [4];\n    int32_t iStack2084;\n    int32_t iStack2080;\n    uchar auStack2076 [2032];\n    uint uStack44;\n    uint uStack32;\n    char cStack16;\n    int32_t iStack8;\n    \n    puStack2148 = &stack0xfffff7b4;\n    puStack2152 = &stack0xfffff7b8;\n    uStack2156 = param_2;\n    puStack2160 = 0x403d71;\n    uVar1 = fcn.00403702();\n    uVar2 = unaff_ESI & 0xffffff | uVar1 << 0x18;\n    puStack2160 = &stack0xfffff7c4;\n    iVar10 = iStack8;\n    (*_sym.imp.USER32.dll_GetWindowRect)(iStack8);\n    (*_sym.imp.USER32.dll_GetClientRect)(iStack8, &stack0xfffff7dc);\n    iVar4 = (iStack2116 - iStack2124) + 1;\n    iVar8 = (iStack2112 - iStack2120) + 1;\n    iVar11 = 100;\n    iVar7 = iVar8 - iStack2080;\n    iVar5 = iVar4 - iStack2084;\n    if (uStack2156._3_1_ != '\\0') {\n        if (cStack16 != '\\0') goto code_r0x00403ea8;\n        uVar2 = (iStack2080 * puStack2152) / 100 + iVar7;\n        iStack2120 = (iVar8 - uVar2) / 2 + iStack2120;\n        iStack2124 = (iVar4 - ((iStack2084 * puStack2148) / 100 + iVar5)) / 2 + iStack2124;\n        if (iStack2124 < 0) {\n            iStack2124 = 0;\n        }\n        if (iStack2120 < 0) {\n            iStack2120 = 0;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(iStack8, 0xfffffff0);\n        (*_sym.imp.USER32.dll_SetWindowPos)\n                  (iStack8, 0, iStack2124, iStack2120, puStack2152, puStack2148, ~(uVar3 >> 10) & 2 | 0x204);\n        (*_sym.imp.USER32.dll_GetWindowRect)(iStack8, &stack0xfffff790);\n    }\n    if (cStack16 == '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iStack8, &stack0xfffff7e4, 0x400);\n        fcn.00403793(&stack0xfffff7d8, &stack0xfffff7d8, 0x400, 1, uStack32);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(iStack8, &stack0xfffff7c4);\n    }\ncode_r0x00403ea8:\n    iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n    iVar9 = 5;\n    iVar8 = (*_sym.imp.USER32.dll_GetWindow)(iStack8);\n    iVar6 = 0;\n    uStack2156 = iVar8;\n    while( true ) {\n        if ((iVar8 == 0) || (0x1ff < iVar6)) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar8, &stack0xfffff7d8, 0x400);\n        if (iStack2100 != 0) {\n            fcn.00403793(&stack0xfffff7cc, &stack0xfffff7cc, 0x400, 1, uStack44);\n            (*_sym.imp.USER32.dll_SetWindowTextW)(iVar8, &stack0xfffff7b8);\n        }\n        if (iVar9 >> 0x18 != '\\0') {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar8, &stack0xfffff7ac);\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (iVar8, 0, (((uVar2 - puStack2160 / 2) - uStack2156) * iVar9) / 100, \n                       (((unaff_EBP - (iVar7 - iVar4)) - puStack2152) * iStack8) / 100, \n                       (((iVar11 - uVar2) + 1) * iVar9) / iVar10, (((iVar5 - unaff_EBP) + 1) * iStack8) / 100, 0x204);\n        }\n        iVar8 = (*_sym.imp.USER32.dll_GetWindow)(iVar8, 2);\n        if (iVar8 == uStack2156) break;\n        iVar6 = iVar6 + 1;\n    }\n    return;\n}\n",
        "token_count": 1293
    },
    "00404030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404030(int32_t param_1)\n\n{\n    if (*0x433a80 == '\\0') {\n        fcn.00404049();\n    }\n    *(param_1 + 1) = 1;\n    return param_1;\n}\n",
        "token_count": 63
    },
    "0040434c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040435e)\n\nvoid __thiscall fcn.0040434c(uint8_t *param_1, uint param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char unaff_retaddr;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    puVar1 = cpuid_Version_info(1);\n    uStack32 = *puVar1;\n    uStack28 = puVar1[1];\n    uStack20 = puVar1[2];\n    uStack24 = puVar1[3];\n    iVar5 = 0;\n    uVar4 = 0;\n    *param_1 = uStack24 >> 0x19 & 1;\n    if (param_4 == 0x80) {\n        uVar4 = 0x10;\n        *(param_1 + 4) = 10;\ncode_r0x004043b6:\n        if (uVar4 == 0) goto code_r0x004043df;\n    }\n    else {\n        if (param_4 != 0xc0) {\n            if (param_4 == 0x100) {\n                uVar4 = 0x20;\n                *(param_1 + 4) = 0xe;\n            }\n            goto code_r0x004043b6;\n        }\n        uVar4 = 0x18;\n        *(param_1 + 4) = 0xc;\n    }\n    uVar2 = 0;\n    do {\n        uVar3 = uVar2 + 1;\n        *(&uStack32 + (uVar2 & 0xfffffffc) + (uVar2 & 3)) = *(uVar2 + param_3);\n        uVar2 = uVar3;\n    } while (uVar3 < uVar4);\ncode_r0x004043df:\n    if (param_5 == 0) {\n        fcn.00412c70(param_1 + 8, 0, 0x10);\n    }\n    else {\n        do {\n            param_1[iVar5 + 8] = *(iVar5 + param_5);\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 0x10);\n    }\n    fcn.004049dc(&uStack32);\n    if (unaff_retaddr == '\\0') {\n        fcn.00404928();\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0040445b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040445b(char *param_1, int32_t param_2, uint32_t param_3, uint32_t *param_4)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    char *pcVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *unaff_EDI;\n    uint32_t *unaff_retaddr;\n    uint8_t uStack42;\n    uint8_t uStack41;\n    uint8_t uStack34;\n    uint8_t uStack33;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t *puStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t *puStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    if (param_3 != 0) {\n        param_3 = param_3 >> 4;\n        if (*param_1 == '\\0') {\n            puVar1 = param_1 + 8;\n            puVar5 = puVar1;\n            puVar8 = puVar1;\n            if (param_3 != 0) {\n                puVar2 = param_4 + 1;\n                puVar3 = param_2 + 8;\n                puVar7 = puVar3;\n                puVar5 = unaff_EDI;\n                do {\n                    if (param_1[1] == '\\0') {\n                        uStack28 = puVar7[-2];\n                        puStack24 = puVar7[-1];\n                        uStack20 = *puVar7;\n                        uVar6 = puVar7[1];\n                        uStack16 = uStack28;\n                        puStack12 = puStack24;\n                        uStack8 = uStack20;\n                        uStack4 = uVar6;\n                    }\n                    else {\n                        fcn.00404429(&uStack16, puVar8, puVar7 + -2);\n                        uVar6 = uStack16;\n                    }\n                    uStack32 = *(param_1 + 0x18) ^ uStack28;\n                    puVar7 = *(param_1 + 0x20) ^ uStack20;\n                    uStack28 = *(param_1 + 0x1c) ^ puStack24;\n                    uVar6 = *(param_1 + 0x24) ^ uVar6;\n                    *param_4 = *((uVar6 >> 0x18) * 4 + 0x4348a0) ^ *((puVar7 >> 0x10 & 0xff) * 4 + 0x4344a0) ^\n                               *((uStack28 >> 8 & 0xff) * 4 + 0x4340a0) ^ *((uStack32 & 0xff) * 4 + 0x433ca0);\n                    *puVar2 = *((uVar6 >> 0x10 & 0xff) * 4 + 0x4344a0) ^ *((puVar7 >> 8 & 0xff) * 4 + 0x4340a0) ^\n                              *((uStack32 >> 0x18) * 4 + 0x4348a0) ^ *((uStack28 & 0xff) * 4 + 0x433ca0);\n                    param_4[2] = *((uVar6 >> 8 & 0xff) * 4 + 0x4340a0) ^ *((uStack28 >> 0x18) * 4 + 0x4348a0) ^\n                                 *((uStack32 >> 0x10 & 0xff) * 4 + 0x4344a0) ^ *((puVar7 & 0xff) * 4 + 0x433ca0);\n                    param_4[3] = *((puVar7 >> 0x18) * 4 + 0x4348a0) ^ *((uStack28 >> 0x10 & 0xff) * 4 + 0x4344a0) ^\n                                 *((uStack32 >> 8 & 0xff) * 4 + 0x4340a0) ^ *((uVar6 & 0xff) * 4 + 0x433ca0);\n                    uStack34 = puVar1 >> 0x10;\n                    uStack33 = puVar1 >> 0x18;\n                    uStack42 = puVar3 >> 0x10;\n                    uStack41 = puVar3 >> 0x18;\n                    puVar8 = puVar2;\n                    puStack24 = puVar7;\n                    uStack20 = uVar6;\n                    if (1 < *(param_1 + 4) + -1) {\n                        do {\n                            puVar8 = unaff_retaddr;\n                            fcn.00404429();\n                            *param_4 = *((puVar3 & 0xff) * 4 + 0x433ca0) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x4340a0) ^\n                                       *(uStack34 * 4 + 0x4344a0) ^ *((uStack32 >> 0x18) * 4 + 0x4348a0);\n                            *puVar2 = *(uStack41 * 4 + 0x4348a0) ^ *((uVar6 & 0xff) * 4 + 0x433ca0) ^\n                                      *((puVar1 >> 8 & 0xff) * 4 + 0x4340a0) ^\n                                      *((uStack32 >> 0x10 & 0xff) * 4 + 0x4344a0);\n                            param_4[2] = *(uStack42 * 4 + 0x4344a0) ^ *((uVar6 >> 0x18) * 4 + 0x4348a0) ^\n                                         *((puVar1 & 0xff) * 4 + 0x433ca0) ^ *((uStack32 >> 8 & 0xff) * 4 + 0x4340a0);\n                            puVar5 = puVar5 + 4;\n                            param_4[3] = *((puVar3 >> 8 & 0xff) * 4 + 0x4340a0) ^\n                                         *((uVar6 >> 0x10 & 0xff) * 4 + 0x4344a0) ^ *(uStack33 * 4 + 0x4348a0) ^\n                                         *((uStack32 & 0xff) * 4 + 0x433ca0);\n                            uStack8 = uStack8 + 1;\n                            param_3 = uStack4;\n                            unaff_retaddr = puVar8;\n                        } while (uStack8 < *(param_1 + 4) + -1);\n                    }\n                    pcVar4 = param_1 + *(param_1 + 4) * 0x10 + 8;\n                    fcn.00404429(&uStack32, param_4);\n                    *param_4 = *((puVar3 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + -3) = *((uVar6 >> 8 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + -2) = *(uStack34 * 4 + 0x433ca1);\n                    *(puVar8 + -1) = *((uStack32 >> 0x18) * 4 + 0x433ca1);\n                    *puVar8 = *((uVar6 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 1) = *((puVar1 >> 8 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 2) = *((uStack32 >> 0x10 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 3) = *(uStack41 * 4 + 0x433ca1);\n                    *(puVar8 + 1) = *((puVar1 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 5) = *((uStack32 >> 8 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 6) = *(uStack42 * 4 + 0x433ca1);\n                    *(puVar8 + 7) = *((uVar6 >> 0x18) * 4 + 0x433ca1);\n                    *(puVar8 + 2) = *((uStack32 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 9) = *((puVar3 >> 8 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 10) = *((uVar6 >> 0x10 & 0xff) * 4 + 0x433ca1);\n                    *(puVar8 + 0xb) = *(uStack33 * 4 + 0x433ca1);\n                    fcn.00404429();\n                    puStack12 = puVar8 + 4;\n                    puVar7 = pcVar4 + 0x10;\n                    param_3 = param_3 - 1;\n                    puVar8 = param_4;\n                    uStack16 = param_3;\n                } while (param_3 != 0);\n            }\n            *puVar5 = *puVar8;\n            puVar5[1] = puVar8[1];\n            puVar5[2] = puVar8[2];\n            puVar5[3] = puVar8[3];\n        }\n        else {\n            fcn.004048a5(param_2, param_3, param_4);\n        }\n    }\n    return;\n}\n",
        "token_count": 2226
    },
    "004048a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004048a5(int32_t param_1, uchar (*param_2) [16], int32_t param_3, uchar (*param_4) [16])\n\n{\n    int32_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar (*pauVar3) [16];\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    \n    auVar5 = *(param_1 + 8);\n    if (param_3 != 0) {\n        do {\n            pauVar3 = param_2[1];\n            auVar4 = *param_2;\n            if (*(param_1 + 1) != '\\0') {\n                auVar4 = auVar4 ^ auVar5;\n            }\n            iVar1 = *(param_1 + 4);\n            auVar4 = *(param_1 + 0x18) ^ auVar4;\n            if (1 < iVar1) {\n                pauVar2 = param_1 + 0x28;\n                param_2 = iVar1 + -1;\n                do {\n                    param_2 = param_2 + -1;\n                    auVar5 = *pauVar2;\n                    pauVar2 = pauVar2[1];\n                    auVar4 = aesenc(auVar4, auVar5);\n                } while (param_2 != NULL);\n            }\n            param_3 = param_3 + -1;\n            auVar5 = aesenclast(auVar4, *(param_1 + 0x18 + iVar1 * 0x10));\n            *param_4 = auVar5;\n            param_2 = pauVar3;\n            param_4 = param_4[1];\n        } while (param_3 != 0);\n    }\n    *(param_1 + 8) = auVar5;\n    return;\n}\n",
        "token_count": 405
    },
    "004049dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.004049dc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    uint uStack36;\n    uint uStack32;\n    uint8_t auStack28 [8];\n    uint8_t uStack20;\n    uint8_t uStack19;\n    uint8_t uStack18;\n    uint8_t uStack17;\n    uint8_t auStack16 [4];\n    uint8_t auStack12 [12];\n    \n    iVar8 = *(param_1 + 4) + -6;\n    uStack36 = iVar8;\n    fcn.00413490(&uStack32, param_2, 0x20);\n    iVar7 = 0;\n    iVar9 = 0;\n    iVar5 = 0;\n    if (0 < iVar8) {\n        do {\n            if (*(param_1 + 4) < iVar7) {\n                return;\n            }\n            if (iVar5 < iVar8) {\n                puVar4 = &uStack32 + iVar5;\n                do {\n                    if (3 < iVar9) break;\n                    iVar8 = iVar9 + iVar7 * 4;\n                    uVar2 = *puVar4;\n                    iVar5 = iVar5 + 1;\n                    puVar4 = puVar4 + 1;\n                    iVar9 = iVar9 + 1;\n                    *(param_1 + 0x18 + iVar8 * 4) = uVar2;\n                    iVar8 = uStack36;\n                } while (iVar5 < uStack36);\n            }\n            if (iVar9 == 4) {\n                iVar7 = iVar7 + 1;\n                iVar9 = 0;\n            }\n        } while (iVar5 < iVar8);\n    }\n    if (iVar7 <= *(param_1 + 4)) {\n        uStack36 = 0x433c80;\n        do {\n            uStack32._0_1_ = uStack32 ^ *(*(&uStack32 + iVar8 * 4 + -3) + 0x433a80);\n            uStack32._1_1_ = uStack32._1_1_ ^ *(*(&uStack32 + iVar8 * 4 + -2) + 0x433a80);\n            uStack32._2_1_ = uStack32._2_1_ ^ *(*(&uStack32 + iVar8 * 4 + -1) + 0x433a80);\n            uStack32._3_1_ = uStack32._3_1_ ^ *(*(&uStack32 + iVar8 + -1) + 0x433a80);\n            uStack32._0_1_ = uStack32 ^ *uStack36;\n            uStack36 = uStack36 + 1;\n            if (iVar8 == 8) {\n                puVar6 = auStack28;\n                param_2 = 3;\n                do {\n                    iVar5 = 4;\n                    do {\n                        *puVar6 = *puVar6 ^ puVar6[-4];\n                        puVar6 = puVar6 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n                puVar6 = auStack12;\n                param_2 = 3;\n                auStack16[0] = auStack16[0] ^ *(uStack20 + 0x433a80);\n                auStack16[1] = auStack16[1] ^ *(uStack19 + 0x433a80);\n                auStack16[2] = auStack16[2] ^ *(uStack18 + 0x433a80);\n                auStack16[3] = auStack16[3] ^ *(uStack17 + 0x433a80);\n                do {\n                    iVar5 = 4;\n                    do {\n                        *puVar6 = *puVar6 ^ puVar6[-4];\n                        puVar6 = puVar6 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            else if (1 < iVar8) {\n                param_2 = iVar8 + -1;\n                puVar6 = auStack28;\n                do {\n                    iVar5 = 0;\n                    do {\n                        puVar6[iVar5] = puVar6[iVar5] ^ puVar6[iVar5 + -4];\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < 4);\n                    puVar6 = puVar6 + 4;\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            iVar5 = 0;\n            if (0 < iVar8) {\n                do {\n                    bVar11 = SBORROW4(iVar7, *(param_1 + 4));\n                    iVar1 = *(param_1 + 4);\n                    iVar3 = iVar7 - iVar1;\n                    bVar10 = iVar7 == iVar1;\n                    if (!bVar10 && iVar1 <= iVar7) goto code_r0x00404ba8;\n                    if (iVar5 < iVar8) {\n                        puVar4 = &uStack32 + iVar5;\n                        do {\n                            if (3 < iVar9) break;\n                            *(param_1 + 0x18 + (iVar9 + iVar7 * 4) * 4) = *puVar4;\n                            iVar5 = iVar5 + 1;\n                            puVar4 = puVar4 + 1;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar5 < iVar8);\n                    }\n                    if (iVar9 == 4) {\n                        iVar7 = iVar7 + 1;\n                        iVar9 = 0;\n                    }\n                } while (iVar5 < iVar8);\n            }\n            bVar11 = SBORROW4(iVar7, *(param_1 + 4));\n            iVar5 = *(param_1 + 4);\n            iVar3 = iVar7 - iVar5;\n            bVar10 = iVar7 == iVar5;\ncode_r0x00404ba8:\n        } while (bVar10 || bVar11 != iVar3 < 0);\n    }\n    return;\n}\n",
        "token_count": 1464
    },
    "00404c08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404c08(int32_t param_1, ushort *param_2, int32_t param_3)\n\n{\n    if (*(param_1 + 0x100) == '\\0') {\n        *param_2 = 0;\n    }\n    else {\n        fcn.00404c7f(param_1, 0x80, param_2, param_3, 0);\n        param_2[param_3 + -1] = 0;\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00404c41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c41(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 1) == '\\0') {\n        iVar1 = fcn.00405e92(L\"Crypt32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CryptProtectMemory\");\n            param_1[2] = iVar1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*param_1, \"CryptUnprotectMemory\");\n            param_1[3] = iVar1;\n        }\n        *(param_1 + 1) = 1;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00404cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cc0(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char16_t *arg_ch_00;\n    \n    if (*0x436ca8 == NULL) {\n        fcn.00404c41();\n    }\n    if (arg_10h == '\\0') {\n        if (*0x436cac == NULL) goto code_r0x00404d40;\n        iVar2 = (**0x436cac)(arg_8h, arg_ch & 0xfffffff0, arg_14h != '\\0');\n        if (iVar2 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptUnprotectMemory failed\";\n    }\n    else {\n        if (*0x436ca8 == NULL) {\ncode_r0x00404d40:\n            cVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            uVar3 = 0;\n            if (arg_ch == 0) {\n                return;\n            }\n            do {\n                *(uVar3 + arg_8h) = *(uVar3 + arg_8h) ^ uVar3 + cVar1 + 'K';\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < arg_ch);\n            return;\n        }\n        iVar2 = (**0x436ca8)(arg_8h, arg_ch & 0xfffffff0, arg_14h != '\\0');\n        if (iVar2 != 0) {\n            return;\n        }\n        arg_ch_00 = L\"CryptProtectMemory failed\";\n    }\n    fcn.004017fc(0x44c844, arg_ch_00, arg_8h);\n    fcn.0041687d();\n    fcn.004017f7(2);\n    return;\n}\n",
        "token_count": 429
    },
    "00404dd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404dd1(uint32_t *param_1, uint32_t *param_2, uint32_t *param_3, char param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t *puStack20;\n    uint32_t *puStack16;\n    \n    if (param_4 == '\\0') {\n        puStack20 = param_2;\n        fcn.00413490(param_2, param_3, 0x40);\n    }\n    else {\n        puStack20 = param_3;\n    }\n    param_3 = param_1[2];\n    uVar3 = *param_1;\n    uVar2 = param_1[1];\n    _param_4 = param_1[3];\n    uVar5 = param_1[4];\n    uStack24 = 0;\n    uVar1 = fcn.00418408(*puStack20);\n    *puStack20 = uVar1;\n    uVar5 = uVar5 + 0x5a827999 + ((_param_4 ^ param_3) & uVar2 ^ _param_4) + (uVar3 << 5 | uVar3 >> 0x1b) + uVar1;\n    uStack28 = uVar2 >> 2 | uVar2 << 0x1e;\n    param_2 = puStack20 + 3;\n    puStack16 = puStack20;\n    do {\n        uVar2 = fcn.00418408(puStack16[1]);\n        puStack16[1] = uVar2;\n        uVar1 = uVar3 >> 2 | uVar3 << 0x1e;\n        uVar3 = _param_4 + 0x5a827999 + ((param_3 ^ uStack28) & uVar3 ^ param_3) + (uVar5 << 5 | uVar5 >> 0x1b) + uVar2;\n        uVar2 = fcn.00418408(param_2[-1]);\n        param_2[-1] = uVar2;\n        uVar6 = uVar5 >> 2 | uVar5 << 0x1e;\n        uVar2 = param_3 + 0x5a827999U + ((uStack28 ^ uVar1) & uVar5 ^ uStack28) + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2\n        ;\n        uVar5 = fcn.00418408(*param_2);\n        *param_2 = uVar5;\n        _param_4 = uVar3 >> 2 | uVar3 * 0x40000000;\n        uVar5 = uStack28 + ((uVar6 ^ uVar1) & uVar3 ^ uVar1) + (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x5a827999 + uVar5;\n        uVar3 = fcn.00418408(param_2[1]);\n        param_2[1] = uVar3;\n        uStack24 = uStack24 + 5;\n        param_3 = uVar2 >> 2 | uVar2 * 0x40000000;\n        puStack16 = puStack20 + uStack24;\n        uVar3 = uVar1 + ((uVar6 ^ _param_4) & uVar2 ^ uVar6) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar3 + 0x5a827999;\n        uVar2 = fcn.00418408(*puStack16);\n        *puStack16 = uVar2;\n        uStack28 = uVar5 >> 2 | uVar5 * 0x40000000;\n        uVar5 = uVar6 + 0x5a827999 + ((_param_4 ^ param_3) & uVar5 ^ _param_4) + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2;\n        param_2 = param_2 + 5;\n    } while (uStack24 != 0xf);\n    uVar2 = puStack20[0xd] ^ puStack20[8] ^ puStack20[2] ^ *puStack20;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    *puStack20 = uVar2;\n    uVar2 = ((param_3 ^ uStack28) & uVar3 ^ param_3) + (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar2 + _param_4 + 0x5a827999;\n    uVar1 = puStack20[0xe] ^ puStack20[9] ^ puStack20[3] ^ puStack20[1];\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    uVar4 = uVar3 >> 2 | uVar3 * 0x40000000;\n    puStack20[1] = uVar1;\n    uVar6 = puStack20[0xf] ^ puStack20[10] ^ puStack20[4] ^ puStack20[2];\n    uVar3 = ((uStack28 ^ uVar4) & uVar5 ^ uStack28) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar1 + param_3 + 0x5a827999U;\n    uStack24 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = uVar6 << 1 | uVar6 < 0;\n    puStack20[2] = uVar5;\n    uStack28 = ((uStack24 ^ uVar4) & uVar2 ^ uVar4) + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x5a827999 + uVar5 + uStack28;\n    uVar5 = puStack20[0xb] ^ puStack20[5] ^ puStack20[3] ^ *puStack20;\n    _param_4 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar5 << 1 | uVar5 < 0;\n    puStack20[3] = uVar2;\n    param_3 = ((uStack24 ^ _param_4) & uVar3 ^ uStack24) + 0x5a827999 + (uStack28 * 0x20 | uStack28 >> 0x1b) + uVar2 +\n              uVar4;\n    param_2 = uVar3 >> 2 | uVar3 * 0x40000000;\n    puStack16 = 0x11;\n    do {\n        uVar1 = puStack16 + 3U & 0xf;\n        uVar5 = puStack16 + 5U & 0xf;\n        uVar3 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar5] ^ puStack20[uVar1];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar1] = uVar3;\n        uVar6 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar7 = uStack24 + (_param_4 ^ param_2 ^ uStack28) + 0x6ed9eba1 + (param_3 << 5 | param_3 >> 0x1b) + uVar3;\n        uVar10 = puStack16 + 6U & 0xf;\n        uVar4 = puStack16 + 4U & 0xf;\n        uVar3 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar10]\n        ;\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar4] = uVar3;\n        uVar8 = param_3 >> 2 | param_3 << 0x1e;\n        uVar3 = _param_4 + 0x6ed9eba1 + (param_2 ^ uVar6 ^ param_3) + (uVar7 * 0x20 | uVar7 >> 0x1b) + uVar3;\n        uVar9 = puStack16 + 7U & 0xf;\n        uVar2 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar5] ^ puStack20[uVar9];\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar5] = uVar2;\n        uStack24 = uVar7 >> 2 | uVar7 * 0x40000000;\n        uVar2 = param_2 + 0x6ed9eba1U + (uVar7 ^ uVar6 ^ uVar8) + (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2;\n        uVar5 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar1]\n        ;\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puStack20[uVar10] = uVar5;\n        _param_4 = uVar3 >> 2 | uVar3 * 0x40000000;\n        uStack28 = uVar6 + 0x6ed9eba1 + (uStack24 ^ uVar3 ^ uVar8) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar5;\n        uVar3 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar4] ^ puStack20[uVar9];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar9] = uVar3;\n        param_2 = uVar2 >> 2 | uVar2 * 0x40000000;\n        param_3 = uVar8 + 0x6ed9eba1 + (uStack24 ^ _param_4 ^ uVar2) + (uStack28 * 0x20 | uStack28 >> 0x1b) + uVar3;\n        uVar3 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar3 < 0x24);\n    puStack16 = 0x25;\n    do {\n        uVar5 = puStack16 + 3U & 0xf;\n        uVar7 = puStack16 + 5U & 0xf;\n        uVar3 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar5] ^ puStack20[uVar7];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar5] = uVar3;\n        uVar6 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar3 = (param_3 << 5 | param_3 >> 0x1b) + 0x8f1bbcdc +\n                ((param_2 | uStack28) & _param_4 | param_2 & uStack28) + uVar3 + uStack24;\n        uVar4 = puStack16 + 6U & 0xf;\n        uVar1 = puStack16 + 4U & 0xf;\n        uVar2 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar1] ^ puStack20[uVar4];\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar1] = uVar2;\n        uVar9 = param_3 >> 2 | param_3 << 0x1e;\n        uVar2 = (uVar3 * 0x20 | uVar3 >> 0x1b) + 0x8f1bbcdc +\n                ((uVar6 | param_3) & param_2 | uVar6 & param_3) + uVar2 + _param_4;\n        uVar10 = puStack16 + 7U & 0xf;\n        uVar8 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar7]\n        ;\n        uVar8 = uVar8 << 1 | uVar8 < 0;\n        puStack20[uVar7] = uVar8;\n        uStack24 = uVar3 >> 2 | uVar3 * 0x40000000;\n        uVar3 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0x8f1bbcdc +\n                ((uVar3 | uVar9) & uVar6 | uVar3 & uVar9) + uVar8 + param_2;\n        uVar5 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar5] ^ puStack20[uVar4];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puStack20[uVar4] = uVar5;\n        _param_4 = uVar2 >> 2 | uVar2 * 0x40000000;\n        uStack28 = (uVar3 * 0x20 | uVar3 >> 0x1b) +\n                   ((uStack24 | uVar2) & uVar9 | uStack24 & uVar2) + 0x8f1bbcdc + uVar5 + uVar6;\n        uVar2 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar1]\n        ;\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar10] = uVar2;\n        param_2 = uVar3 >> 2 | uVar3 * 0x40000000;\n        param_3 = (uStack28 * 0x20 | uStack28 >> 0x1b) + 0x8f1bbcdc +\n                  ((_param_4 | uVar3) & uStack24 | _param_4 & uVar3) + uVar2 + uVar9;\n        uVar3 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar3 < 0x38);\n    puStack16 = 0x39;\n    do {\n        uVar6 = puStack16 + 3U & 0xf;\n        uVar1 = puStack16 + 5U & 0xf;\n        uVar3 = puStack20[puStack16 - 5U & 0xf] ^ puStack20[puStack16 & 0xf] ^ puStack20[uVar1] ^ puStack20[uVar6];\n        uVar3 = uVar3 << 1 | uVar3 < 0;\n        puStack20[uVar6] = uVar3;\n        uVar4 = uStack28 >> 2 | uStack28 << 0x1e;\n        uVar3 = (_param_4 ^ param_2 ^ uStack28) + uVar3 + uStack24 + (param_3 << 5 | param_3 >> 0x1b) + 0xca62c1d6;\n        uVar10 = puStack16 + 6U & 0xf;\n        uVar7 = puStack16 + 4U & 0xf;\n        uVar2 = puStack20[puStack16 - 4U & 0xf] ^ puStack20[puStack16 + 1U & 0xf] ^ puStack20[uVar7] ^ puStack20[uVar10]\n        ;\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar7] = uVar2;\n        uVar2 = (param_2 ^ uVar4 ^ param_3) + uVar2 + _param_4 + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6;\n        uVar8 = param_3 >> 2 | param_3 << 0x1e;\n        uVar9 = puStack16 + 7U & 0xf;\n        uVar5 = puStack20[puStack16 - 3U & 0xf] ^ puStack20[puStack16 + 2U & 0xf] ^ puStack20[uVar1] ^ puStack20[uVar9];\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puStack20[uVar1] = uVar5;\n        uStack24 = uVar3 >> 2 | uVar3 * 0x40000000;\n        uVar3 = (uVar3 ^ uVar4 ^ uVar8) + uVar5 + param_2 + (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6;\n        uVar5 = puStack20[puStack16 - 8U & 0xf] ^ puStack20[puStack16 - 2U & 0xf] ^ puStack20[uVar10] ^ puStack20[uVar6]\n        ;\n        uVar5 = uVar5 << 1 | uVar5 < 0;\n        puStack20[uVar10] = uVar5;\n        _param_4 = uVar2 >> 2 | uVar2 * 0x40000000;\n        uStack28 = (uStack24 ^ uVar2 ^ uVar8) + uVar5 + uVar4 + (uVar3 * 0x20 | uVar3 >> 0x1b) + 0xca62c1d6;\n        uVar2 = puStack20[puStack16 - 7U & 0xf] ^ puStack20[puStack16 - 1U & 0xf] ^ puStack20[uVar7] ^ puStack20[uVar9];\n        uVar2 = uVar2 << 1 | uVar2 < 0;\n        puStack20[uVar9] = uVar2;\n        param_2 = uVar3 >> 2 | uVar3 * 0x40000000;\n        param_3 = (uStack28 * 0x20 | uStack28 >> 0x1b) + 0xca62c1d6 + (uStack24 ^ _param_4 ^ uVar3) + uVar2 + uVar8;\n        uVar3 = puStack16 + 8;\n        puStack16 = puStack16 + 5U;\n    } while (uVar3 < 0x4c);\n    param_1[1] = param_1[1] + uStack28;\n    param_1[2] = param_1[2] + param_2;\n    param_1[3] = param_1[3] + _param_4;\n    *param_1 = *param_1 + param_3;\n    param_1[4] = param_1[4] + uStack24;\n    return;\n}\n",
        "token_count": 4654
    },
    "00405822": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405822(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x424331;\n    *in_FS_OFFSET = &var_ch;\n    if (*param_1 != 0) {\n        if (*(param_1 + 4) != '\\0') {\n            fcn.00404db5(*param_1, param_1[2]);\n        }\n        fcn.00416e9e(*param_1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 159
    },
    "00405869": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405869(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar3 = param_1[1];\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.004017fc(0x44c844, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.00401834();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        if (*(param_1 + 4) == '\\0') {\n            iVar2 = fcn.00418435(*param_1, uVar3);\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n        }\n        else {\n            iVar2 = fcn.0041837b();\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n            if (*param_1 != 0) {\n                fcn.00413490(iVar2, *param_1, param_1[2]);\n                fcn.00404db5(*param_1, param_1[2]);\n                fcn.00416e9e(*param_1);\n            }\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "0040593a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040593a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411c14();\n    if (*(unaff_EBP + 0x14) == 2) {\n        iVar2 = *(unaff_EBP + 0x10);\n        iVar3 = *(unaff_EBP + 0xc);\n        fcn.00406c66(*(unaff_EBP + 8), iVar3, iVar2);\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x10) = 0;\n        iVar2 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 0x14) == 1) {\n            fcn.00405920(iVar2 + 1);\n            uVar1 = *(unaff_EBP + -0x20);\n            fcn.00405a84(*(unaff_EBP + 8), uVar1, *(unaff_EBP + -0x1c));\n        }\n        else {\n            uVar1 = *(unaff_EBP + 8);\n        }\n        iVar3 = *(unaff_EBP + 0xc);\n        fcn.00406b87(uVar1, iVar3, iVar2);\n        fcn.00405822();\n    }\n    if (iVar2 != 0) {\n        *(iVar3 + -2 + iVar2 * 2) = 0;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 570
    },
    "00405c76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405c76(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar3 = param_1[1];\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.004017fc(0x44c844, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.00401834();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        if (*(param_1 + 4) == '\\0') {\n            iVar2 = fcn.00418435(*param_1, uVar3 * 2);\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n        }\n        else {\n            iVar2 = fcn.0041837b();\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n            if (*param_1 != 0) {\n                fcn.00413490(iVar2, *param_1, param_1[2] * 2);\n                fcn.00404db5(*param_1, param_1[2] * 2);\n                fcn.00416e9e(*param_1);\n            }\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "00405edc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405edc(uint param_1, char16_t *param_2, char16_t *param_3, char16_t *param_4, char16_t *param_5, \n                 char16_t *param_6, char16_t *param_7, char16_t *param_8, char16_t *param_9, char16_t *param_10, \n                 char16_t *param_11, char16_t *param_12, char16_t *param_13, char16_t *param_14, char16_t *param_15, \n                 char16_t *param_16, char16_t *param_17, char16_t *param_18, char16_t *param_19, char16_t *param_20, \n                 char16_t *param_21, char16_t *param_22, char16_t *param_23, char16_t *param_24, char16_t *param_25, \n                 char16_t *param_26, char16_t *param_27, char16_t *param_28, char16_t *param_29, char16_t *param_30, \n                 char16_t *param_31, char16_t *param_32, char16_t *param_33, char16_t *param_34, char16_t *param_35, \n                 char16_t *param_36, char16_t *param_37, char16_t *param_38, char16_t *param_39, char16_t *param_40, \n                 char16_t *param_41, char16_t *param_42, char16_t *param_43, char16_t *param_44, char16_t *param_45, \n                 char16_t *param_46, char16_t *param_47, char16_t *param_48, char16_t *param_49, char16_t *param_50, \n                 char16_t *param_51, char16_t *param_52, char16_t *param_53, char16_t *param_54, char16_t *param_55, \n                 char16_t *param_56, char16_t *param_57, char16_t *param_58, char16_t *param_59, char16_t *param_60, \n                 char16_t *param_61)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpCaption;\n    uint32_t uVar6;\n    uint arg_14h;\n    \n    fcn.00411c40();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar2 != NULL) {\n            (*pcVar2)();\n        }\n        pcVar3 = (*pcVar3)();\n        if (pcVar3 != NULL) {\n            (*pcVar3)();\n        }\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_GetModuleFileNameW;\n    param_2 = L\"DXGIDebug.dll\";\n    param_3 = L\"sfc_os.dll\";\n    param_4 = L\"SSPICLI.DLL\";\n    param_5 = L\"rsaenh.dll\";\n    param_6 = L\"UXTheme.dll\";\n    param_7 = L\"dwmapi.dll\";\n    param_8 = L\"cryptbase.dll\";\n    param_9 = L\"lpk.dll\";\n    param_10 = L\"usp10.dll\";\n    param_11 = L\"clbcatq.dll\";\n    param_12 = L\"comres.dll\";\n    param_13 = L\"ws2_32.dll\";\n    param_14 = L\"ws2help.dll\";\n    param_15 = L\"psapi.dll\";\n    param_16 = L\"ieframe.dll\";\n    param_17 = L\"ntshrui.dll\";\n    param_18 = L\"atl.dll\";\n    param_19 = L\"setupapi.dll\";\n    param_20 = L\"apphelp.dll\";\n    param_21 = L\"userenv.dll\";\n    param_22 = L\"netapi32.dll\";\n    param_23 = L\"shdocvw.dll\";\n    param_24 = L\"crypt32.dll\";\n    param_25 = L\"msasn1.dll\";\n    param_26 = L\"cryptui.dll\";\n    param_27 = L\"wintrust.dll\";\n    param_28 = L\"shell32.dll\";\n    param_29 = L\"secur32.dll\";\n    param_30 = L\"cabinet.dll\";\n    param_31 = L\"oleaccrc.dll\";\n    param_32 = L\"ntmarta.dll\";\n    param_33 = L\"profapi.dll\";\n    param_34 = L\"WindowsCodecs.dll\";\n    param_35 = L\"srvcli.dll\";\n    param_36 = L\"cscapi.dll\";\n    param_37 = L\"slc.dll\";\n    param_38 = L\"imageres.dll\";\n    param_39 = L\"dnsapi.DLL\";\n    param_40 = L\"iphlpapi.DLL\";\n    param_41 = L\"WINNSI.DLL\";\n    param_42 = L\"netutils.dll\";\n    param_43 = L\"mpr.dll\";\n    param_44 = L\"devrtl.dll\";\n    param_45 = L\"propsys.dll\";\n    param_46 = L\"mlang.dll\";\n    param_47 = L\"samcli.dll\";\n    param_48 = L\"samlib.dll\";\n    param_49 = L\"wkscli.dll\";\n    param_50 = L\"dfscli.dll\";\n    param_51 = L\"browcli.dll\";\n    param_52 = L\"rasadhlp.dll\";\n    param_53 = L\"dhcpcsvc6.dll\";\n    param_54 = L\"dhcpcsvc.dll\";\n    param_55 = L\"XmlLite.dll\";\n    param_56 = L\"linkinfo.dll\";\n    param_57 = L\"cryptsp.dll\";\n    param_58 = L\"RpcRtRemote.dll\";\n    param_59 = L\"aclui.dll\";\n    param_60 = L\"dsrole.dll\";\n    param_61 = L\"peerdist.dll\";\n    if ((**0x42f004 != 'x') && (iVar1 = fcn.00419387(*0x42f004),  iVar1 != 0)) {\n        (*pcVar3)();\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if ((iVar4 != -1) &&\n           ((iVar4 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(),  iVar4 == iVar1 &&\n            (iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(),  iVar1 != 0)))) {\n            while (iVar1 = fcn.004059d0(),  iVar1 != 0) {\n                fcn.00405e92(&param_52);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    (*pcVar3)();\n    fcn.004035ae();\n    fcn.00405c1f();\n    pcVar3 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n    iVar1 = 0;\n    uVar6 = 0;\n    do {\n        uVar5 = fcn.004029f2();\n        if (uVar5 < 0x600) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.00405e92(*(&stack0xffffffe8 + uVar6 * 4));\n        }\n        if ((iVar4 == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_CompareStringW)(),  iVar4 == 2)) {\n            fcn.00403669();\n            iVar4 = (*pcVar3)();\n            if (iVar4 != -1) {\n                iVar1 = *(&stack0xffffffe8 + uVar6 * 4);\n                break;\n            }\n        }\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 8);\n    uVar6 = 0;\n    do {\n        fcn.00403669();\n        iVar4 = (*pcVar3)();\n        if (iVar4 != -1) {\n            iVar1 = (&param_2)[uVar6];\n            break;\n        }\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0x35);\n    if (iVar1 != 0) {\n        fcn.004035f8();\n        uVar6 = fcn.004029f2();\n        if (uVar6 < 0x600) {\n            fcn.004036d0();\n            iVar1 = (*_sym.imp.KERNEL32.dll_AllocConsole)();\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                (*_sym.imp.KERNEL32.dll_AttachConsole)();\n                fcn.00416e83(&stack0x000012bc);\n                (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n                (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n                (*_sym.imp.KERNEL32.dll_FreeConsole)();\n            }\n        }\n        else {\n            fcn.00405e92(L\"dwmapi.dll\");\n            fcn.00405e92(L\"uxtheme.dll\");\n            fcn.00403fb9();\n            fcn.004036d0();\n            arg_14h = 0xf0;\n            lpCaption = fcn.00403fb9();\n            fcn.0040dc82(0, &stack0x000012d0, lpCaption, arg_14h);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\n    }\n    return;\n}\n",
        "token_count": 2185
    },
    "004069f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004069f1(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint in_stack_00000fd4;\n    uint in_stack_00000fd8;\n    uint in_stack_00000fdc;\n    uint in_stack_00000fe0;\n    uint uVar4;\n    int32_t in_stack_00001004;\n    uint in_stack_00001008;\n    uchar auStack44 [4];\n    uchar auStack40 [8];\n    uint uStack32;\n    \n    fcn.00411c40();\n    if (*(in_stack_00001004 + 0x6130) == 2) {\ncode_r0x00406a13:\n        iVar2 = 1;\n    }\n    else {\n        if ((*(in_stack_00001004 + 0x6180) == '\\0') && (*(in_stack_00001004 + 0x6130) != 1)) {\n            uStack32 = 0x406a49;\n            fcn.00405c1f();\n            iVar2 = fcn.00410dc2(&stack0xfffffff4, 0x800);\n            if (((iVar2 == 0) || (iVar2 == 2)) && (fcn.00402516(in_stack_00001008),  iVar2 == 2)) {\n                *(in_stack_00001004 + 0x6130) = 1;\n            }\n            else {\n                if (iVar2 == 3) {\n                    *(in_stack_00001004 + 0x6130) = 2;\n                    goto code_r0x00406a13;\n                }\n                if (iVar2 != 4) {\n                    return iVar2;\n                }\n                puVar3 = fcn.004035ae(&stack0xffffffd8);\n                uVar4 = in_stack_00000fe0;\n                if (puVar3 == &stack0xffffffd4) {\n                    fcn.00403669();\n                }\n                else {\n                    fcn.00405c1f(in_stack_00001008, &stack0xffffffd4, in_stack_00000fe0);\n                }\n                cVar1 = fcn.004023ea(in_stack_00001008);\n                if (cVar1 != '\\0') {\n                    iVar2 = fcn.004069f1(in_stack_00001004, in_stack_00001008, in_stack_00000fe0, in_stack_00000fd4, \n                                         in_stack_00000fd8, in_stack_00000fdc, uVar4);\n                    return iVar2;\n                }\n            }\n        }\n        else {\n            fcn.00402516();\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 603
    },
    "00406b66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406b66(char param_1, uint param_2)\n\n{\n    uint32_t in_EAX;\n    \n    fcn.00410f52((in_EAX & 0xffffff00 | param_1 != '\\0') * 4 + 0x54, param_2);\n    return;\n}\n",
        "token_count": 71
    },
    "00406b82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00406b82(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h)\n\n{\n    uint lpString;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *puStack12;\n    uint uStack8;\n    \n    uStack8 = 0x410fb9;\n    fcn.00411c40();\n    uStack8 = arg_8h;\n    if (arg_14h == '\\0') {\n        puStack12 = 0x65;\n    }\n    else {\n        puStack12 = 0x66;\n    }\n    uStack16 = 0x410fcd;\n    uStack16 = fcn.00403fb9();\n    puStack24 = &fcn.00406b82::lpString;\n    uStack20 = 0xa00;\n    uStack28 = 0x410fdf;\n    fcn.004036d0();\n    puStack12 = &fcn.00406b82::lpString;\n    uStack16 = 0x65;\n    uStack20 = *0x448718;\n    puStack24 = 0x410ff7;\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)();\n    puStack24 = 0x410ffc;\n    fcn.0040e863();\n    return *0x4486f4 == '\\0';\n}\n",
        "token_count": 317
    },
    "00406c19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00406c19(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 0) {\n        do {\n            uVar1 = 0x80;\n            iVar2 = 0;\n            do {\n                if ((*param_1 & uVar1) == 0) break;\n                iVar2 = iVar2 + 1;\n                uVar1 = uVar1 >> 1;\n            } while (uVar1 != 0);\n            if ((iVar2 == 1) || (6 < iVar2)) {\n                return 0;\n            }\n            while( true ) {\n                param_2 = param_2 + -1;\n                param_1 = param_1 + 1;\n                iVar2 = iVar2 + -1;\n                if (iVar2 < 1) break;\n                if (param_2 == 0) {\n                    return 0;\n                }\n                if ((*param_1 & 0xc0) != 0x80) {\n                    return 0;\n                }\n            }\n        } while (param_2 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 265
    },
    "00406f98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00406f98(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    \n    uVar1 = *param_1;\n    if (uVar1 == 0x2d) {\n        param_1 = param_1 + 1;\n    }\n    iVar3 = 0;\n    uVar2 = *param_1;\n    while ((0x2f < uVar2 && (uVar2 < 0x3a))) {\n        iVar3 = fcn.00411fe0();\n        iVar3 = iVar3 + (uVar2 - 0x30);\n        param_1 = param_1 + 1;\n        uVar2 = *param_1;\n    }\n    if ((uVar1 == 0x2d) && (-1 < iVar3)) {\n        iVar3 = CONCAT44(-((iVar3 >> 0x20) + (iVar3 != 0)), -iVar3);\n    }\n    return iVar3;\n}\n",
        "token_count": 233
    },
    "004070eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004070eb(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x424331;\n    *in_FS_OFFSET = &var_ch;\n    if (*param_1 != 0) {\n        if (*(param_1 + 4) != '\\0') {\n            fcn.00404db5(*param_1, param_1[2] * 0x48);\n        }\n        fcn.00416e9e(*param_1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 165
    },
    "00407134": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407134(int32_t *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    var_ch = *in_FS_OFFSET;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x424331;\n    *in_FS_OFFSET = &var_ch;\n    if (*param_1 != 0) {\n        if (*(param_1 + 4) != '\\0') {\n            fcn.00404db5(*param_1, param_1[2] << 3);\n        }\n        fcn.00416e9e(*param_1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 163
    },
    "0040718a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040718a(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar3 = param_1[1];\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.004017fc(0x44c844, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.00401834();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        if (*(param_1 + 4) == '\\0') {\n            iVar2 = fcn.00418435(*param_1, uVar3 * 0x48);\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n        }\n        else {\n            iVar2 = fcn.0041837b();\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n            if (*param_1 != 0) {\n                fcn.00413490(iVar2, *param_1, param_1[2] * 0x48);\n                fcn.00404db5(*param_1, param_1[2] * 0x48);\n                fcn.00416e9e(*param_1);\n            }\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00407248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407248(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    param_1[1] = param_1[1] + param_2;\n    uVar3 = param_1[1];\n    if (param_1[2] <= uVar3 && uVar3 != param_1[2]) {\n        uVar1 = param_1[3];\n        if ((uVar1 != 0) && (uVar1 < uVar3)) {\n            fcn.004017fc(0x44c844, L\"Maximum allowed array size (%u) is exceeded\", uVar1);\n            fcn.00401834();\n        }\n        uVar1 = (param_1[2] >> 2) + 0x20 + param_1[2];\n        uVar3 = param_1[1];\n        if (param_1[1] <= uVar1) {\n            uVar3 = uVar1;\n        }\n        if (*(param_1 + 4) == '\\0') {\n            iVar2 = fcn.00418435(*param_1, uVar3 << 3);\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n        }\n        else {\n            iVar2 = fcn.0041837b();\n            if (iVar2 == 0) {\n                fcn.00401834();\n            }\n            if (*param_1 != 0) {\n                fcn.00413490(iVar2, *param_1, param_1[2] << 3);\n                fcn.00404db5(*param_1, param_1[2] << 3);\n                fcn.00416e9e(*param_1);\n            }\n        }\n        *param_1 = iVar2;\n        param_1[2] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "004073ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_f4h\n\nint32_t __cdecl\nfcn.004073ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h, uint arg_3ch, \n            uint arg_40h, uint arg_44h, uint arg_48h, uint arg_4ch, uint arg_50h, uint arg_54h, uint arg_58h, \n            uint arg_5ch, uint arg_60h, uint arg_64h, uint arg_68h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    char16_t *pcVar10;\n    int16_t *piVar11;\n    int32_t *unaff_EBP;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    int32_t iVar14;\n    int32_t *in_FS_OFFSET;\n    bool bVar15;\n    ulong uVar16;\n    int64_t iVar17;\n    uint var_1428h;\n    uint var_1410h;\n    uint var_140ch;\n    uint var_13f0h;\n    uint var_13ech;\n    uint var_140h;\n    uint var_f4h;\n    uint var_94h;\n    uint uVar18;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411c14();\n    fcn.00411c40();\n    unaff_EBP[0x16] = -1;\n    unaff_EBP[0x10] = 0;\n    bVar15 = *0x452a51 == '\\0';\n    unaff_EBP[0x15] = 0;\n    iVar14 = 0;\n    unaff_EBP[0xe] = 0;\n    unaff_EBP[0x12] = 0;\n    unaff_EBP[0x11] = 0;\n    fcn.00406b66(bVar15, 0x455b62);\n    unaff_EBP[0x13] = 0;\n    unaff_EBP[0xb] = 0;\n    unaff_EBP[0xf] = 0;\n    unaff_EBP[0x19] = 0;\n    fcn.0040707d(0x40);\n    unaff_EBP[-1] = 0;\n    fcn.00405c54();\n    unaff_EBP[-8] = 0;\n    unaff_EBP[-7] = 0;\n    unaff_EBP[-6] = 0;\n    unaff_EBP[-5] = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -1) = 2;\n    fcn.00405c54();\n    *0x437200 = *0x45197c;\n    *(unaff_EBP + -1) = 3;\n    *0x4371fc = 1;\n    *0x437238 = 0;\ncode_r0x00407497:\n    iVar5 = 0;\n    cVar3 = fcn.00406b5d();\n    if (cVar3 == '\\0') {\n        unaff_EBP[0x18] = 0;\n        unaff_EBP[0x17] = 0;\n        iVar7 = iVar5;\n        do {\n            if ((0x3f < iVar7) && (iVar6 = iVar14,  *0x4484ec == '\\0')) {\ncode_r0x0040781d:\n                iVar5 = unaff_EBP[0x19];\n                iVar14 = iVar6;\n                goto code_r0x00407822;\n            }\n            if (unaff_EBP[-0xc] <= iVar7) {\n                fcn.0040730c();\n            }\n            *0x437248 = unaff_EBP[-0xd] + iVar5;\n            iVar5 = fcn.00409192(0x437240, 4);\n            if (iVar5 == 0) {\n                iVar14 = 0x33;\n                iVar5 = 1;\n                unaff_EBP[0x19] = 1;\n                goto code_r0x00407822;\n            }\n            cVar3 = fcn.00408a1d(0x437240);\n            if (cVar3 == '\\0') {\n                if ((((*0x447320 ^ unaff_EBP[0x13]) & 0xffff) == 0) || ((*0x447320 == 0xffff && (*0x447324 == 0)))) {\n                    cVar3 = fcn.00408a67(0x437240);\n                    if (cVar3 == '\\0') {\n                        if (*0x4484f4 != '\\0') {\n                            cVar3 = fcn.00408a42(0x437240);\n                            if (cVar3 != '\\0') goto code_r0x004079a2;\n                        }\n                        unaff_EBP[0xf] = 1;\n                    }\n                    else {\ncode_r0x004079a2:\n                        unaff_EBP[0xf] = 0;\n                    }\n                }\n                else {\n                    fcn.00401771(0x455b62);\n                    iVar14 = 3;\n                }\n                goto code_r0x004079a5;\n            }\n            iVar6 = fcn.0040b781();\n            if (iVar6 != 0) {\n                unaff_EBP[0x19] = 1;\n                goto code_r0x0040781d;\n            }\n            *0x447364 = 0;\n            iVar7 = fcn.00408d9f(*0x4472f8, 2, 0x4472dc, *0x4472d9);\n            if (iVar7 != 0) {\n                if (iVar14 < iVar7) {\n                    iVar14 = iVar7;\n                }\n                iVar5 = 1;\n                if (1 < iVar7) {\n                    fcn.004016e1(0x1c, 0x455b62, 0x447364);\n                    unaff_EBP[0x19] = 1;\n                    goto code_r0x00407822;\n                }\n            }\n            iVar5 = fcn.00408d9f(*0x4472fa, 3, 0, 0);\n            if (iVar5 != 0) {\n                if (iVar14 < iVar5) {\n                    iVar14 = iVar5;\n                }\n                if (1 < iVar5) goto code_r0x004077fe;\n            }\n            fcn.0040b391(*0x4472a8, *0x4472fa, 0);\n            fcn.0040893c(*0x4472a8, *0x4472fa, 0x4472de);\n            iVar5 = fcn.00408d9f(*0x4472fc, 0, 0, 0);\n            if (iVar5 != 0) {\n                if (iVar14 < iVar5) {\n                    iVar14 = iVar5;\n                }\n                if (1 < iVar5) goto code_r0x004077fe;\n            }\n            cVar3 = fcn.004088a6(*0x4472a8, *0x4472fa, *0x448364, unaff_EBP + -0x1914, 0x3000);\n            if (cVar3 != '\\0') {\n                fcn.0040c9bf(unaff_EBP + -0x1914, 0x447364, 0x800);\n                fcn.0040368e(0x447364, 0x447364, 0x800);\n            }\n            fcn.00406495(CONCAT22(*0x4472e2, *0x4472e0));\n            puVar13 = *0x437248;\n            (*0x437248)[0xc] = 0;\n            puVar13[0xd] = 0;\n            puVar13 = *0x437248;\n            (*0x437248)[0xe] = 0;\n            puVar13[0xf] = 0;\n            fcn.0040873c(*0x4472a8, *0x4472fa, *0x437248 + 10, *0x437248 + 0xc, *0x437248 + 0xe);\n            uVar12 = *0x4472fa;\n            if ((uVar12 != 0) && (iVar5 = *0x4472a8,  *0x4472a8 != 0)) {\n                for (; 3 < uVar12; uVar12 = uVar12 + (-4 - uVar9)) {\n                    uVar9 = fcn.0040904d(iVar5);\n                    unaff_EBP[0x14] = uVar9 & 0xffff;\n                    uVar9 = fcn.0040904d();\n                    uVar9 = uVar9 & 0xffff;\n                    if (uVar12 - 4 < uVar9) break;\n                    if (unaff_EBP[0x14] == 0x17) {\n                        bVar15 = true;\n                        fcn.00407026(0x22, 0x455b62, 0x447364, L\"AES-0017\");\n                        goto code_r0x0040767b;\n                    }\n                    iVar5 = iVar5 + 4 + uVar9;\n                }\n            }\n            bVar15 = false;\ncode_r0x0040767b:\n            fcn.0040709f();\n            *(unaff_EBP + -1) = 4;\n            fcn.00412c70(unaff_EBP + -0x914, 0, 0x2310);\n            fcn.00405c1f(unaff_EBP + -0x90a, 0x447364, 0x800);\n            piVar8 = fcn.00403592(unaff_EBP + -0x90a);\n            if (unaff_EBP + -0x90a < piVar8) {\n                cVar3 = fcn.00403474(*piVar8);\n                if (cVar3 != '\\0') {\n                    *piVar8 = 0;\n                }\n            }\n            puVar13 = *0x437248;\n            unaff_EBP[-0x504] = (*0x437248)[10];\n            unaff_EBP[-0x503] = puVar13[0xb];\n            unaff_EBP[-0x4fc] = *0x4472f0;\n            unaff_EBP[-0x4fb] = *0x4472f4;\n            if (bVar15) {\ncode_r0x004077c2:\n                iVar5 = unaff_EBP[0x18];\n                iVar7 = unaff_EBP[0x17];\n            }\n            else {\n                iVar5 = fcn.00401497(unaff_EBP + -0x914, 0, 6, 0, 0, 0);\n                if (iVar5 == 0) goto code_r0x004077c2;\n                iVar5 = fcn.00408aee();\n                if (iVar5 == 0) {\n                    unaff_EBP[0x15] = unaff_EBP[0x15] + 1;\n                    goto code_r0x004077c2;\n                }\n                fcn.00405d36(0x447364);\n                iVar7 = unaff_EBP[0x17] + 1;\n                iVar5 = unaff_EBP[0x18] + 0x48;\n                unaff_EBP[0x17] = iVar7;\n                unaff_EBP[0x18] = iVar5;\n            }\n            puVar13 = unaff_EBP + 0x13;\n            uVar12 = *puVar13;\n            *puVar13 = *puVar13 + 1;\n            unaff_EBP[0xb] = unaff_EBP[0xb] + (0xfffffffe < uVar12);\n            *(unaff_EBP + -1) = 3;\n            fcn.00405822();\n        } while( true );\n    }\n    goto code_r0x00408147;\ncode_r0x004077fe:\n    fcn.004016e1(0x1c, 0x455b62, 0x447364);\ncode_r0x004079a5:\n    unaff_EBP[0x19] = 1;\n    iVar5 = unaff_EBP[0x19];\ncode_r0x00407822:\n    iVar7 = 0;\n    bVar15 = *0x4484ec != '\\0';\n    unaff_EBP[1] = *0x447298;\n    unaff_EBP[2] = *0x44729c;\n    *unaff_EBP = *0x447258;\n    unaff_EBP[8] = *0x447260;\n    unaff_EBP[6] = *0x447264;\n    if (bVar15) {\n        *0x4484f0 = 0;\n        cVar3 = fcn.00407326(0x455b62);\n        pcVar10 = L\"zx01\";\n        if (cVar3 == '\\0') {\n            pcVar10 = 0x425b8c;\n        }\n        fcn.00403624(0x455b62, pcVar10, 0x800);\n        if (*0x447278 != NULL) {\n            (****0x447278)(1);\n        }\n        *0x447278 = NULL;\n        fcn.00409062();\n        fcn.00406b66(*0x452a51 == '\\0', 0x455b62);\n    }\n    unaff_EBP[0x14] = 0;\n    if (unaff_EBP[0x17] < 1) {\ncode_r0x004080d2:\n        (**(**0x447278 + 0x10))(unaff_EBP[1], unaff_EBP[2], 0);\n        iVar17 = (**(**0x447278 + 0x14))();\n        *0x447298 = iVar17;\n        fcn.00409563(*0x447254, 0x2000);\n        *0x447258 = *unaff_EBP;\n        unaff_EBP[0x10] = unaff_EBP[0x10] + 1;\n        *0x447260 = unaff_EBP[8];\n        *0x447264 = unaff_EBP[6];\n        if (iVar5 != 0) {\ncode_r0x00408147:\n            cVar3 = fcn.00405dc2(unaff_EBP + -0xd14, 0x800);\n            if (cVar3 != '\\0') {\n                piVar8 = unaff_EBP[-8] + 0x10;\n                do {\n                    unaff_EBP[7] = piVar8[-4];\n                    unaff_EBP[8] = piVar8[-3];\n                    unaff_EBP[5] = piVar8[-2];\n                    unaff_EBP[6] = piVar8[-1];\n                    unaff_EBP[0xc] = *piVar8;\n                    unaff_EBP[0xd] = piVar8[1];\n                    fcn.00402524(unaff_EBP + -0xd14, -(*0x453b20 != 0) & unaff_EBP + 7, \n                                 -(*0x453b24 != 0) & unaff_EBP + 5, -(*0x453b28 != 0) & unaff_EBP + 0xc);\n                    piVar8 = piVar8 + 6;\n                    cVar3 = fcn.00405dc2(unaff_EBP + -0xd14, 0x800);\n                } while (cVar3 != '\\0');\n            }\n            cVar3 = fcn.00406b5d();\n            if (((cVar3 == '\\0') && (unaff_EBP[0xf] != 0)) && (*0x4484ec == '\\0')) {\n                fcn.00401771(0x455b62);\n                if (iVar14 == 0) {\n                    iVar14 = 1;\n                }\n            }\n            iVar5 = unaff_EBP[0x16];\n            if ((*0x437238 == 0) && (*0x454b42 != 0x49)) {\n                fcn.004016b0(0x44, 0x455b62);\n                fcn.00401906(10);\n            }\n            if ((iVar5 == -1) && (iVar14 < 2)) {\n                iVar14 = (-(unaff_EBP[0x15] != 0) & 0x46) + 0xb;\n            }\n            else if ((iVar5 + 1U == (unaff_EBP[0xe] & 0xffffU)) && (iVar14 < 2)) {\n                iVar14 = 0x52;\n            }\n            else if ((unaff_EBP[0x15] == 0) || (1 < iVar14)) {\n                if ((unaff_EBP[0xe] != 0) && (iVar14 == 0)) {\n                    iVar14 = 1;\n                }\n            }\n            else {\n                iVar14 = 0x51;\n            }\n            fcn.00401272();\n            fcn.00407134();\n            fcn.00401272();\n            fcn.004070eb();\n            *in_FS_OFFSET = unaff_EBP[-3];\n            return iVar14;\n        }\n        goto code_r0x00407497;\n    }\n    iVar5 = unaff_EBP[0x10] << 6;\n    unaff_EBP[3] = iVar5;\n    iVar6 = iVar14;\ncode_r0x004078cc:\n    unaff_EBP[0x16] = iVar5 + iVar7;\n    *0x437248 = iVar7 * 0x48 + unaff_EBP[-0xd];\n    iVar14 = fcn.00405d72();\n    puVar13 = *0x437248;\n    bVar15 = *0x4484ec != '\\0';\n    unaff_EBP[4] = iVar14;\n    if ((bVar15) && (uVar12 = puVar13[8],  uVar12 != *0x4484f0)) {\n        if (uVar12 == *0x447310) {\n            cVar3 = fcn.00407326(0x455b62);\n            pcVar10 = L\"zipx\";\n            if (cVar3 == '\\0') {\n                pcVar10 = 0x425ba0;\n            }\n            fcn.00403624(0x455b62, pcVar10, 0x800);\n        }\n        else {\n            fcn.00407361(0x455b62, 0x800, uVar12);\n        }\n        *0x4484f0 = (*0x437248)[8];\n        if (*0x447278 != NULL) {\n            (****0x447278)(1);\n        }\n        *0x447278 = NULL;\n        fcn.00409062();\n        puVar13 = *0x437248;\n    }\n    uVar9 = *puVar13 + *0x4472a0;\n    iVar7 = puVar13[1] + *0x4472a4 + CARRY4(*puVar13, *0x4472a0);\n    uVar16 = fcn.00412200(uVar9, iVar7, 0x2000, 0);\n    uVar12 = uVar16;\n    iVar14 = uVar9 - uVar12;\n    unaff_EBP[0x18] = uVar12;\n    unaff_EBP[9] = iVar14;\n    iVar5 = (iVar7 - (uVar16 >> 0x20)) - (uVar9 < uVar12);\n    unaff_EBP[10] = iVar5;\n    if ((iVar7 < 1) && (iVar7 < 0)) {\n        fcn.00401771(0x455b62);\n        uVar12 = *0x4472a4;\n        puVar13 = *0x437248;\n        iVar6 = 2;\n        if ((unaff_EBP[0x16] == 0) && ((*0x4472a0 | *0x4472a4) != 0)) {\n            unaff_EBP[0x12] = *0x4472a0;\n            *0x4472a0 = 0;\n            *0x4472a4 = 0;\n            uVar9 = puVar13[1];\n            uVar2 = *puVar13;\n            unaff_EBP[0x11] = uVar12;\n            uVar16 = fcn.00412200(uVar2, uVar9, 0x2000, 0);\n            uVar12 = uVar16;\n            iVar14 = uVar2 - uVar12;\n            unaff_EBP[0x18] = uVar12;\n            unaff_EBP[9] = iVar14;\n            iVar5 = (uVar9 - (uVar16 >> 0x20)) - (uVar2 < uVar12);\n            unaff_EBP[10] = iVar5;\n            if ((0 < uVar9) || (-1 < uVar9)) goto code_r0x00407ae7;\n            goto code_r0x00407abb;\n        }\ncode_r0x00407aca:\n        iVar14 = 3;\n    }\n    else {\ncode_r0x00407ae7:\n        if ((*0x447298 == CONCAT44(iVar5, iVar14)) && (*0x4484ec == '\\0')) {\n            uVar12 = (*0x447258 - unaff_EBP[0x18]) - *0x447254;\n            bVar15 = CARRY4(*0x447260, uVar12);\n            *0x447260 = *0x447260 + uVar12;\n            *0x447264 = *0x447264 + (uVar12 >> 0x1f) + bVar15;\n            *0x447258 = unaff_EBP[0x18] + *0x447254;\ncode_r0x00407bb9:\n            iVar14 = fcn.00409192(0x437240, 4);\n            if (iVar14 == 0) goto code_r0x00407abb;\n            uVar18 = 0x437240;\n            cVar3 = fcn.00408a8c();\n            if (cVar3 == '\\0') {\n                if ((unaff_EBP[0x16] != 0) || ((*0x4472a0 | *0x4472a4) == 0)) {\n                    if ((*0x4472a0 | *0x4472a4) == 0) {\n                        uVar12 = unaff_EBP[0x12];\n                        uVar9 = unaff_EBP[0x11];\n                        if ((unaff_EBP[0x12] | unaff_EBP[0x11]) != 0) goto code_r0x00407c30;\n                    }\ncode_r0x00407abb:\n                    fcn.00401771(0x455b62);\n                    goto code_r0x00407aca;\n                }\n                unaff_EBP[0x12] = *0x4472a0;\n                unaff_EBP[0x11] = *0x4472a4;\n                *0x4472a0 = 0;\n                *0x4472a4 = 0;\n                uVar12 = *0x4472a0;\n                uVar9 = *0x4472a4;\ncode_r0x00407c30:\n                *0x4472a4 = uVar9;\n                *0x4472a0 = uVar12;\n                iVar14 = fcn.004093d2(**0x437248, (*0x437248)[1]);\n                if (iVar14 == 0) {\n                    iVar14 = fcn.00409192(0x437240, 4);\n                    if (iVar14 != 0) {\n                        uVar18 = 0x437240;\n                        cVar3 = fcn.00408a8c();\n                        if (cVar3 != '\\0') goto code_r0x00407c6a;\n                    }\n                }\n                goto code_r0x00407b81;\n            }\ncode_r0x00407c6a:\n            iVar14 = fcn.0040b8f8(uVar18);\n            if (iVar14 != 0) {\n                fcn.00401771(0x455b62);\n                goto code_r0x00407acf;\n            }\n            *0x447364 = 0;\n            iVar5 = fcn.00408d9f();\n            iVar14 = iVar6;\n            if (iVar5 == 0) {\ncode_r0x00407cd0:\n                if (*0x4472a8 != 0) {\n                    fcn.00416e9e(*0x4472a8);\n                    *0x4472a8 = 0;\n                }\n                uVar12 = *0x4472d2;\n                iVar5 = fcn.00408d9f(uVar12, 3, 0, 0);\n                if (iVar5 != 0) {\n                    if (iVar14 < iVar5) {\n                        iVar14 = iVar5;\n                    }\n                    if (1 < iVar5) goto code_r0x00407cbf;\n                }\n                fcn.0040b391(*0x4472a8, *0x4472d2, 1);\n                cVar3 = fcn.004088a6(*0x4472a8, *0x4472d2, *0x448364, unaff_EBP + -0x1914, 0x3000);\n                if (cVar3 != '\\0') {\n                    fcn.0040c9bf(unaff_EBP + -0x1914, 0x447364, 0x800);\n                    fcn.0040368e(0x447364, 0x447364, 0x800);\n                }\n                *0x448368 = (*0x437248)[10];\n                *0x44836c = (*0x437248)[0xb];\n                *0x448370 = (*0x437248)[0xc];\n                *0x448374 = (*0x437248)[0xd];\n                *0x448378 = (*0x437248)[0xe];\n                *0x44837c = (*0x437248)[0xf];\n                fcn.0040873c(*0x4472a8, *0x4472d2, 0x448368, 0x448370, 0x448378);\n                fcn.0040893c(*0x4472a8, *0x4472d2, 0x4472b4);\n                fcn.00405c1f(0x447364, unaff_EBP[4], 0x800);\n                cVar3 = fcn.0040c9fb(0x447364, (*0x437248)[7], (*0x437248)[4], (*0x437248)[5], *0x437248 + 9);\n                if ((*0x447364 != 0) && (*0x447366 != 0)) {\n                    piVar11 = 0x447368;\n                    iVar1 = *0x447368;\n                    while (iVar1 != 0) {\n                        if (*piVar11 == 0x3a) {\n                            *piVar11 = 0x5f;\n                        }\n                        piVar11 = piVar11 + 1;\n                        iVar1 = *piVar11;\n                    }\n                }\n                fcn.00402f8c(0x447364, 0x447364, 0x800);\n                if ((*0x452a51 == '\\0') || (*0x454b42 == 0x49)) {\n                    uVar18 = 0;\n                }\n                else {\n                    uVar18 = 1;\n                }\n                cVar4 = fcn.00406b82(0x447364, *0x452a51 == '\\0', uVar18, 0);\n                if (cVar4 == '\\0') goto code_r0x004080cf;\n                if (*0x452a51 != '\\0') goto code_r0x00408067;\n                if (cVar3 == '\\0') {\n                    uVar12 = 0x447364;\n                    iVar5 = fcn.00408bfa(0x447364);\n                    if (iVar5 == -1) {\n                        if (*0x4529ab == '\\0') goto code_r0x00408067;\n                    }\n                    else {\n                        if (iVar5 == 0) {\n                            if (*0x452988 == 2) goto code_r0x00407acf;\ncode_r0x00407ff7:\n                            if ((*0x452988 != 0) && (*0x452988 != 3)) goto code_r0x00408067;\n                            uVar9 = *0x4472b8;\n                            uVar12 = *0x4472b6;\n                            unaff_EBP[0xc] = 0;\n                            unaff_EBP[0xd] = 0;\n                            fcn.00406495(uVar9 * 0x10000 + uVar12);\n                            uVar12 = 0x44c858;\n                            iVar5 = fcn.004069f1();\n                            if (iVar5 == 6) {\n                                unaff_EBP[0x19] = 1;\ncode_r0x004080cf:\n                                iVar5 = unaff_EBP[0x19];\n                                goto code_r0x004080d2;\n                            }\n                            if (iVar5 == 1) goto code_r0x00407acf;\n                        }\n                        else if (iVar5 == 1) {\n                            if (((*0x452988 != 2) && (*0x4529ac == '\\0')) && (*0x4529ab == '\\0')) goto code_r0x00407ff7;\n                            goto code_r0x00407acf;\n                        }\ncode_r0x00408067:\n                        if ((*(*0x437248 + 0x10) & 1) != 0) {\n                            iVar5 = fcn.0040bd06(uVar12);\n                            if (iVar5 != 0) {\n                                if (iVar5 != 9) {\n                                    if (iVar5 != 0xc) {\n                                        if (iVar14 < iVar5) {\n                                            iVar14 = iVar5;\n                                        }\n                                        goto code_r0x00407cbf;\n                                    }\n                                    fcn.004016b0(6, 0x447364);\n                                    unaff_EBP[0xe] = unaff_EBP[0xe] + 1;\n                                    goto code_r0x00407acf;\n                                }\n                                fcn.0040173c(2);\n                                fcn.00406682();\n                                goto code_r0x00408147;\n                            }\n                        }\n                        iVar5 = fcn.004082c0();\n                        if ((iVar5 != 0) && (iVar14 < iVar5)) {\n                            iVar14 = iVar5;\n                        }\n                    }\n                }\n                else if (((*0x4529ab == '\\0') && (*0x447364 != 0)) && (*0x4529b0 != 1)) {\n                    uVar12 = 0;\n                    if (((*0x437248)[7] == 0) || ((*0x437248)[7] == 0xb)) {\n                        uVar12 = (*0x437248)[9];\n                    }\n                    cVar3 = fcn.004023ea(0x447364);\n                    if (cVar3 == '\\0') {\n                        iVar5 = fcn.00402480(0x447364, *0x4529f8 == '\\0', uVar12);\n                        if (iVar5 != 0) {\n                            fcn.004022b9(0x447364, 1);\n                            iVar5 = fcn.00402480(0x447364, *0x4529f8 == '\\0', uVar12);\n                            if (iVar5 != 0) {\n                                fcn.004016e1(0x14, 0x455b62, 0x447364);\n                                fcn.0041687d();\n                                goto code_r0x00407acf;\n                            }\n                        }\n                        *0x437238 = *0x437238 + 1;\n                    }\n                    fcn.00405d36(0x447364);\n                    fcn.004073c7(*0x448368, *0x44836c);\n                    fcn.004073c7(*0x448378, *0x44837c);\n                    fcn.004073c7(*0x448370, *0x448374);\n                }\n            }\n            else {\n                if (iVar6 < iVar5) {\n                    iVar14 = iVar5;\n                }\n                if (iVar5 < 2) goto code_r0x00407cd0;\ncode_r0x00407cbf:\n                fcn.004016e1(0x1c, 0x455b62, 0x447364);\n            }\n        }\n        else {\n            (**(**0x447278 + 0x10))(unaff_EBP[9], unaff_EBP[10], 0);\n            iVar17 = (**(**0x447278 + 0x14))();\n            *0x447298 = iVar17;\n            *0x447260 = fcn.00409563(*0x447254, 0x2000);\n            *0x447264 = *0x447260 >> 0x1f;\n            if ((*0x447260 < 0 && -1 < *0x447264) || ((-1 < *0x447264 && (*0x447260 != 0)))) {\n                *0x447258 = *0x447254 + unaff_EBP[0x18];\n                uVar12 = unaff_EBP[0x18];\n                bVar15 = *0x447260 < uVar12;\n                *0x447260 = *0x447260 - uVar12;\n                *0x447264 = (*0x447264 - (uVar12 >> 0x1f)) - bVar15;\n                goto code_r0x00407bb9;\n            }\ncode_r0x00407b81:\n            fcn.00401771(0x455b62);\n            iVar14 = 3;\n        }\n    }\ncode_r0x00407acf:\n    iVar7 = unaff_EBP[0x14] + 1;\n    unaff_EBP[0x14] = iVar7;\n    if (unaff_EBP[0x17] <= iVar7) goto code_r0x004080cf;\n    iVar5 = unaff_EBP[3];\n    iVar6 = iVar14;\n    goto code_r0x004078cc;\n}\n",
        "token_count": 7974
    },
    "004082c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040837c)\n// WARNING: Removing unreachable block (ram,0x004083ab)\n\nuint8_t fcn.004082c0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    int64_t iVar8;\n    uint uVar9;\n    uint32_t in_stack_ffffffb8;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    \n    *0x447250 = 0xffffffff;\n    *0x44726c = 0;\n    *0x447268 = 0;\n    *0x447270 = 0;\n    *0x44734c = 1;\n    uVar4 = 0;\n    if (*0x452a51 == '\\0') {\n        in_stack_ffffffcc = 0x4082ff;\n        iVar3 = fcn.004090d7();\n        if (iVar3 != 0) {\n            in_stack_ffffffcc = 1;\n            in_stack_ffffffc8 = 0x447364;\n            fcn.004022b9();\n            iVar3 = fcn.004090d7();\n            if (iVar3 != 0) {\n                fcn.004017d8();\n                return 0x34;\n            }\n        }\n    }\n    uVar6 = *0x437224;\n    if (((((*0x452a51 == '\\0') && (-1 < *0x437224)) && ((0 < *0x437224 || (1000000 < *0x437220)))) &&\n        (in_stack_ffffffb8 = *0x437224,  iVar8 = fcn.00411f30(*0x437220),  iVar8 < CONCAT44(*0x43721c, *0x437218))) &&\n       ((uVar6 < 0 ||\n        (((uVar6 < 1 && (*0x437220 < 0x5f5e101)) ||\n         (iVar8 = fcn.00401cfa(),  uVar6 = *0x437224,  CONCAT44(*0x43721c, *0x437218) < iVar8)))))) {\n        (**(**0x447350 + 0x10))(*0x437220, uVar6, 0);\n        fcn.0040217a();\n        (**(**0x447350 + 0x10))(0, 0, 0);\n        uVar6 = *0x437224;\n    }\n    *0x437238 = *0x437238 + 1;\n    *0x437230 = *0x437220;\n    *0x437234 = uVar6;\n    fcn.00408d12();\n    if (*0x4472b4 == 0) {\n        uVar6 = 0;\n        iVar3 = 0;\n        while( true ) {\n            *0x447360 = 0;\n            *0x44735c = 0x43724c;\n            do {\n                bVar7 = *0x447260 != 0;\n                *0x447260 = *0x447260 + -1;\n                *0x447264 = *0x447264 + -1 + bVar7;\n                if (*0x447264 < 0) {\n                    uVar5 = fcn.0040927a();\n                }\n                else {\n                    uVar5 = **0x447258;\n                    *0x447258 = *0x447258 + 1;\n                }\n                if (uVar5 == 0xffffffff) goto code_r0x00408572;\n                **0x44735c = uVar5;\n                *0x44735c = *0x44735c + 1;\n                *0x447360 = *0x447360 + 1;\n            } while (*0x447360 != 0x10000);\n            bVar7 = 0xfffeffff < uVar6;\n            uVar6 = uVar6 + 0x10000;\n            iVar3 = iVar3 + bVar7;\n            uVar9 = *0x447288;\n            iVar8 = (**(**0x447278 + 0x14))(*0x447288, *0x44728c);\n            iVar8 = iVar8 + CONCAT44(*0x447294, *0x447290);\n            in_stack_ffffffb8 = *0x437220;\n            fcn.00406b1e(uVar6, iVar3, *0x437220, *0x437224, iVar8, iVar8 >> 0x20, in_stack_ffffffc8, in_stack_ffffffcc)\n            ;\n            fcn.00406b58();\n            cVar1 = fcn.00406b5d();\n            if (cVar1 != '\\0') break;\n            fcn.00408f42(uVar9, *0x447360, 0x43724c);\n        }\ncode_r0x00408572:\n        if (*0x447360 != 0) {\n            fcn.00408f42(0x43724c, *0x447360);\n        }\n    }\n    else {\n        if (1 < *0x4472b4 - 8) {\n            fcn.00401980(0x455b62, 0x447364);\n            fcn.004094d1();\n            if (*0x452a51 == '\\0') {\n                fcn.00408c5d();\n                fcn.00402397(0x447364);\n            }\n            return 1;\n        }\n        iVar3 = fcn.00409b9c(*0x4472b4 == 9);\n        if (iVar3 != 0) {\n            uVar4 = (iVar3 == 3) * '\\x04' + 2;\n        }\n    }\n    in_stack_ffffffb8 = in_stack_ffffffb8 & 0xff00ffff;\n    cVar1 = fcn.00406b5d();\n    if ((cVar1 != '\\0') && (*0x452a51 == '\\0')) {\n        in_stack_ffffffb8 = in_stack_ffffffb8 & 0xff000000 | 0x10000;\n    }\n    if (uVar4 == 6) {\n        fcn.00401847();\n    }\n    if (*0x4484f5 == '\\0') {\ncode_r0x0040868a:\n        if (~*0x447250 == *0x4472bc) goto code_r0x00408699;\ncode_r0x004086a4:\n        if ((uVar4 < 2) || (uVar4 == 2)) {\n            if ((*(*0x437248 + 0x40) & 1) == 0) {\n                uVar9 = 3;\n            }\n            else {\n                uVar9 = 4;\n            }\n            fcn.004016e1(uVar9, 0x455b62, 0x447364);\n        }\n        if ((*0x4529f0 == '\\0') && (*0x452a51 == '\\0')) {\n            in_stack_ffffffb8 = in_stack_ffffffb8 & 0xff000000 | 0x10000;\n        }\n        uVar4 = 2;\ncode_r0x004086e4:\n        if (*0x452a51 != '\\0') goto code_r0x00408721;\n    }\n    else {\n        fcn.0040c47e(&stack0xffffffc0, 0x448500);\n        if ((*0x43721c < 1) && (*0x43721c < 0)) {\n            *0x437218 = 0;\n            *0x43721c = 0;\n        }\n        fcn.004094d1();\n        bVar7 = 0xfffffff5 < *0x437218;\n        *0x437218 = *0x437218 + 10;\n        *0x43721c = *0x43721c + bVar7;\n        fcn.00408d12();\n        *(*0x437248 + 0x40) = *(*0x437248 + 0x40) & 0xfffffffe;\n        iVar3 = 0;\n        do {\n            bVar7 = *0x447260 != 0;\n            *0x447260 = *0x447260 + -1;\n            *0x447264 = *0x447264 + -1 + bVar7;\n            if (*0x447264 < 0) {\n                uVar2 = fcn.0040927a();\n            }\n            else {\n                uVar2 = **0x447258;\n                *0x447258 = *0x447258 + 1;\n            }\n            (&stack0xffffffc8)[iVar3] = uVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 10);\n        *(*0x437248 + 0x40) = *(*0x437248 + 0x40) | 1;\n        iVar3 = fcn.00413a04(&stack0xffffffc8, &stack0xffffffb8, 10);\n        if (iVar3 != 0) goto code_r0x004086a4;\n        if ((*0x4484f5 == '\\0') || (*0x4484f6 != '\\0')) goto code_r0x0040868a;\ncode_r0x00408699:\n        if (*0x452a51 != '\\0') goto code_r0x004086e4;\n    }\n    if ((in_stack_ffffffb8 >> 0x18 != '\\0') && (((uVar4 != 0 || (*0x437234 != 0)) || (*0x437230 != 0)))) {\n        fcn.0040217a();\n    }\n    if (*0x452a51 == '\\0') {\n        fcn.00408c5d();\n    }\ncode_r0x00408721:\n    if (in_stack_ffffffb8 >> 0x10 != '\\0') {\n        fcn.00402397(0x447364);\n    }\n    fcn.004094d1();\n    return uVar4;\n}\n",
        "token_count": 2274
    },
    "0040873c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040873c(int32_t param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBP;\n    uint32_t unaff_EDI;\n    uint *puVar8;\n    \n    if ((param_2 != 0) && (param_1 != 0)) {\n        for (; 3 < param_2; param_2 = param_2 + (-4 - uVar4)) {\n            uVar3 = fcn.0040904d(param_1);\n            uVar3 = uVar3 & 0xffff;\n            uVar4 = fcn.0040904d(param_1 + 2);\n            uVar4 = uVar4 & 0xffff;\n            if (param_2 - 4 < uVar4) {\n                return 0;\n            }\n            if (uVar3 == 10) {\n                if (0x1f < uVar4) {\n                    iVar1 = fcn.0040904d(param_1 + 8);\n                    uVar3 = unaff_EBP;\n                    iVar2 = fcn.0040904d(param_1 + 10);\n                    unaff_EBP = uVar3;\n                    if (iVar1 == 1) {\n                        if (iVar2 == 0x18) {\n                            uVar5 = fcn.00409028(param_1 + 0xc);\n                            uVar6 = fcn.00409028(param_1 + 0x10);\n                            fcn.00406647(uVar5, uVar6);\n                            uVar5 = fcn.00409028(param_1 + 0x14);\n                            uVar6 = fcn.00409028(param_1 + 0x18);\n                            fcn.00406647(uVar5, uVar6);\n                            uVar5 = fcn.00409028(param_1 + 0x1c);\n                            uVar6 = fcn.00409028(param_1 + 0x20);\n                            fcn.00406647(uVar5, uVar6);\n                            return 1;\n                        }\n                        goto code_r0x004087a9;\n                    }\n                }\n            }\n            else {\ncode_r0x004087a9:\n                if ((uVar3 == 0x5455) && (uVar4 != 0)) {\n                    uVar7 = *(param_1 + 4);\n                    uVar3 = uVar4 - 1;\n                    puVar8 = param_1 + 5;\n                    if (((*(param_1 + 4) & 1) != 0) && (3 < uVar3)) {\n                        fcn.00406608(*puVar8, 0);\n                        uVar7 = unaff_EDI & 0xff;\n                        uVar3 = uVar4 - 5;\n                        puVar8 = param_1 + 9;\n                    }\n                    if (((uVar7 & 2) != 0) && (3 < uVar3)) {\n                        fcn.00406608(*puVar8, 0);\n                        uVar7 = unaff_EDI & 0xff;\n                        uVar3 = uVar3 - 4;\n                        puVar8 = puVar8 + 1;\n                    }\n                    if (((uVar7 & 4) != 0) && (3 < uVar3)) {\n                        fcn.00406608(*puVar8, 0);\n                    }\n                    return 1;\n                }\n            }\n            param_1 = param_1 + 4 + uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 828
    },
    "004088a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004088a6(int32_t param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_retaddr;\n    \n    if ((param_2 != 0) && (iVar4 = param_1,  uVar5 = param_2,  param_1 != 0)) {\n        for (; 3 < uVar5; uVar5 = uVar5 + (-4 - uVar2)) {\n            iVar1 = fcn.0040904d(iVar4);\n            uVar2 = fcn.0040904d(iVar4 + 2);\n            uVar2 = uVar2 & 0xffff;\n            if (uVar5 - 4 < uVar2) {\n                return 0;\n            }\n            if ((((iVar1 == 0x7075) && (5 < uVar2)) && (*(iVar4 + 4) == '\\x01')) &&\n               (iVar3 = fcn.00409028(iVar4 + 5),  unaff_retaddr == iVar3)) {\n                uVar5 = uVar2 - 5;\n                if (param_2 - 1 <= uVar2 - 5) {\n                    uVar5 = param_2 - 1;\n                }\n                fcn.00419420(param_1, iVar4 + 9, uVar5);\n                *(uVar5 + param_1) = 0;\n                return 1;\n            }\n            iVar4 = iVar4 + 4 + uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 375
    },
    "00408a1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00408a1d(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x01')) && (param_1[3] == '\\x02')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00408c5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408c5d(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x447350 != NULL) {\n        fcn.00402022(-(*0x453b20 != 0) & 0x448368, -(*0x453b24 != 0) & 0x448378, -(*0x453b28 != 0) & 0x448370);\n        (**(**0x447350 + 8))();\n        fcn.0040201f(-(*0x453b20 != 0) & 0x448368, -(*0x453b28 != 0) & 0x448370);\n        if (*0x447350 != NULL) {\n            (****0x447350)(1);\n        }\n    }\n    *0x447350 = NULL;\n    uVar1 = *(*0x437248 + 0x24);\n    if (*0x4529a8 != '\\0') {\n        uVar1 = uVar1 & 0xffffffdf;\n    }\n    if (*0x4529f8 == '\\0') {\n        fcn.004026bd(0x447364, uVar1 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00408d9f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00408d9f(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    bool bVar6;\n    uint32_t uStack2068;\n    uchar auStack8 [3];\n    int32_t var_1h;\n    \n    bVar6 = false;\n    if (param_1 == 0) {\n        return false;\n    }\n    if (param_2 != 0) {\n        if (param_2 != 2) {\n            if (param_2 != 3) {\n                return false;\n            }\n            if (*0x4472a8 != 0) {\n                uStack2068 = *0x4472a8;\n                fcn.00416e9e();\n            }\n            uStack2068 = param_1;\n            *0x4472a8 = fcn.0041837b();\n            if (*0x4472a8 != 0) {\n                uStack2068 = param_1;\n                iVar4 = fcn.00409192();\n                if (iVar4 == 0) {\n                    return 0x33;\n                }\n                return false;\n            }\n            uVar2 = *0x447258 - *0x447254;\n            uVar3 = (uVar2 - *0x4472a0) + param_1;\n            iVar4 = (((uVar2 >> 0x1f) - *0x4472a4) - (uVar2 < *0x4472a0)) + CARRY4(uVar2 - *0x4472a0, param_1);\n            goto code_r0x00408f20;\n        }\n        uVar5 = 0;\n        bVar6 = 0x7ff < param_1;\n        if (bVar6) {\n            uVar5 = param_1 - 0x7ff;\n            param_1 = 0x7ff;\n        }\n        *0x448364 = 0;\n        uStack2068 = param_1;\n        iVar4 = fcn.00409192();\n        if (iVar4 == 0) {\n            return 0x33;\n        }\n        *0x448364 = fcn.00401595(0xffffffff, &stack0xfffff7f8, param_1);\n        *(&uStack2068 + param_1) = 0;\n        *0x448364 = ~*0x448364;\n        if ((*_auStack8 & 0x800) == 0) {\n            if ((stack0xfffffffc != 0) && (cVar1 = fcn.0040c971(&uStack2068, stack0xfffffffc),  cVar1 != '\\0')) {\n                *_auStack8 = *_auStack8 | 0x800;\n            }\n            if ((*_auStack8 & 0x800) != 0) goto code_r0x00408eb2;\n            cVar1 = fcn.0040c995(*(*0x437248 + 0x1c), *0x4472d8);\n            fcn.0040593a(&stack0xfffff7dc, 0x447364, 0x800, cVar1 != '\\0');\n        }\n        else {\ncode_r0x00408eb2:\n            fcn.0040c9bf(&stack0xfffff7e4, 0x447364, 0x800);\n        }\n        fcn.0040368e(0x447364, 0x447364, 0x800);\n        if (uVar5 == 0) {\n            return bVar6;\n        }\n        param_1 = uVar5;\n    }\n    uVar2 = *0x447258 - *0x447254;\n    uVar3 = (uVar2 - *0x4472a0) + param_1;\n    iVar4 = (((uVar2 >> 0x1f) - *0x4472a4) - (uVar2 < *0x4472a0)) + CARRY4(uVar2 - *0x4472a0, param_1);\ncode_r0x00408f20:\n    fcn.004093d2(uVar3 + *0x447298, iVar4 + *0x44729c + CARRY4(uVar3, *0x447298));\n    return bVar6;\n}\n",
        "token_count": 994
    },
    "00408f42": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408f42(uint param_1, uint32_t param_2)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    \n    if ((*0x437234 == 0) && (*0x437230 <= param_2)) {\n        param_2 = *0x437230;\n    }\n    bVar1 = *0x437230 < param_2;\n    *0x437230 = *0x437230 - param_2;\n    *0x437234 = *0x437234 - bVar1;\n    uVar2 = param_2;\n    *0x447250 = fcn.00401595(*0x447250, param_1, param_2);\n    if ((*0x452a51 == '\\0') && (param_2 != 0)) {\n        fcn.0040218a(uVar2, param_2);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0040927a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040927a(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if (*0x447340 != 0) {\n        return 0xffffffff;\n    }\n    if ((*0x43721c < 1) && ((*0x43721c < 0 || (*0x437218 == 0)))) {\n        bVar6 = *0x437218 != 0;\n        *0x437218 = *0x437218 + -1;\n        *0x43721c = *0x43721c + -1 + bVar6;\n        *0x447260 = 0;\n        *0x447264 = 0;\n        return 0xffffffff;\n    }\n    if ((*0x447264 < 1) && ((*0x447264 < 0 || (*0x447260 == 0)))) {\n        *0x447260 = fcn.00409563(*0x447254, 0x2000);\n        *0x447264 = *0x447260 >> 0x1f;\n        if ((*0x447260 | *0x447264) != 0) {\n            if ((*0x447260 & *0x447264) != 0xffffffff) {\n                bVar6 = 0xffffdfff < *0x447298;\n                *0x447298 = *0x447298 + 0x2000;\n                *0x44729c = *0x44729c + bVar6;\n                *0x447258 = *0x447254;\n                fcn.00408d12();\n                goto code_r0x00409330;\n            }\n            fcn.004018d7(0x455b62);\n        }\n        *0x447260 = 0;\n        uVar3 = 0xffffffff;\n        *0x447264 = 0;\n    }\n    else {\ncode_r0x00409330:\n        if ((*(*0x437248 + 0x40) & 1) != 0) {\n            if (*0x4484f5 == '\\0') {\n                uVar2 = *0x447260 | *0x447264;\n                puVar4 = *0x447258;\n                uVar3 = *0x447260;\n                uVar5 = *0x447264;\n                while (uVar2 != 0) {\n                    bVar6 = uVar3 != 0;\n                    uVar3 = uVar3 - 1;\n                    uVar5 = (uVar5 - 1) + bVar6;\n                    uVar1 = fcn.0040c0bf();\n                    *puVar4 = *puVar4 ^ uVar1;\n                    fcn.0040c1d1();\n                    puVar4 = puVar4 + 1;\n                    uVar2 = uVar3 | uVar5;\n                }\n            }\n            else if ((*0x447260 | *0x447264) != 0) {\n                fcn.0040c450(*0x447258, *0x447260, 0x448500);\n            }\n        }\n        bVar6 = *0x447260 != 0;\n        *0x447260 = *0x447260 - 1;\n        *0x447264 = (*0x447264 - 1) + bVar6;\n        uVar3 = **0x447258;\n        *0x447258 = *0x447258 + 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 803
    },
    "00409563": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00409563(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char16_t *arg_ch;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t in_stack_00000fec;\n    int32_t in_stack_00000ff0;\n    int32_t in_stack_0000104c;\n    int32_t in_stack_00001050;\n    \n    fcn.00411c40();\n    iVar2 = (**(**0x447278 + 0xc))(in_stack_0000104c, in_stack_00001050);\n    if ((((*0x4484ec != '\\0') && (iVar2 != in_stack_00001050)) && (iVar2 != -1)) &&\n       ((*0x4484f0 != 0xffffffff && (*0x4484f0 < *0x447310)))) {\n        fcn.00402290();\n        cVar1 = fcn.0040273f(0x455b62, &stack0xfffffff8, 0);\n        if (cVar1 != '\\0') {\n            bVar4 = CARRY4(*0x447290, in_stack_00000fec);\n            *0x447290 = *0x447290 + in_stack_00000fec;\n            *0x447294 = *0x447294 + in_stack_00000ff0 + bVar4;\n        }\n        *0x4484f0 = *0x4484f0 + 1;\n        if (*0x4484f0 == *0x447310) {\n            if (*0x455b62 != 0) {\n                cVar1 = fcn.00407326(0x455b62);\n                arg_ch = L\"zipx\";\n                if (cVar1 == '\\0') {\n                    arg_ch = 0x425ba0;\n                }\n                fcn.00403624(0x455b62, arg_ch, 0x800);\n            }\n        }\n        else if (*0x455b62 != 0) {\n            fcn.00407361(0x455b62, 0x800, *0x4484f0);\n        }\n        if (*0x447278 != NULL) {\n            (****0x447278)(1);\n        }\n        *0x447278 = NULL;\n        iVar3 = fcn.00409062();\n        if (iVar3 == 0) {\n            fcn.00406b66(*0x452a51 == '\\0', 0x455b62);\n            iVar3 = (**(**0x447278 + 0xc))(iVar2 + in_stack_0000104c, in_stack_00001050 - iVar2);\n            if (iVar3 < 0) {\n                iVar2 = -1;\n            }\n            else {\n                iVar2 = iVar2 + iVar3;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 639
    },
    "004096bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004096bc(uint param_1)\n\n{\n    uint uVar1;\n    \n    if (*0x447340 == 0) {\n        fcn.00408f42(0x43724c, param_1);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00408ab1();\n    }\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "00409b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00409b9c(int32_t param_1, uint param_2)\n\n{\n    uint32_t arg_10h;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_18h;\n    int32_t iVar3;\n    int32_t arg_8h;\n    bool bVar4;\n    int64_t iVar5;\n    int32_t in_stack_00000018;\n    \n    arg_10h = *0x437218;\n    *0x4484d0 = 0;\n    *0x4484d8 = 0;\n    *0x4484d4 = 0;\n    iVar3 = *0x43721c;\n    if (param_1 == 0) {\n        *0x448494 = *0x4484b4;\n        *0x44849c = *0x4484bc;\n        *0x448498 = *0x4484b8;\n        *0x4484c4 = 0x425c20;\n        *0x4484c8 = 0x425c80;\n        *0x4484cc = 0x425d00;\n        *0x4484a0 = *0x4484c0;\n    }\n    else {\n        *0x448494 = *0x4484a4;\n        *0x44849c = *0x4484ac;\n        *0x448498 = *0x4484a8;\n        *0x4484c4 = 0x425be0;\n        *0x4484c8 = 0x425c60;\n        *0x4484cc = 0x425ce0;\n        *0x4484a0 = *0x4484b0;\n    }\n    while( true ) {\n        iVar2 = fcn.00409d26(&stack0xfffffffc);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        cVar1 = fcn.00406b5d();\n        if (cVar1 != '\\0') break;\n        bVar4 = arg_10h < *0x437218;\n        arg_8h = arg_10h - *0x437218;\n        iVar2 = iVar3 - *0x43721c;\n        iVar5 = (**(**0x447278 + 0x14))(*0x447288, *0x44728c);\n        iVar5 = iVar5 + CONCAT44(*0x447294, *0x447290);\n        arg_18h = iVar5;\n        iVar3 = in_stack_00000018;\n        fcn.00406b1e(arg_8h, iVar2 - bVar4, arg_10h, in_stack_00000018, arg_18h, iVar5 >> 0x20, param_1, param_2);\n        if (arg_18h != 0) {\n            if (param_1 == 0) {\n                *0x4484b4 = *0x448494;\n                *0x4484bc = *0x44849c;\n                *0x4484b8 = *0x448498;\n                *0x4484c0 = *0x4484a0;\n            }\n            else {\n                *0x4484a4 = *0x448494;\n                *0x4484ac = *0x44849c;\n                *0x4484a8 = *0x448498;\n                *0x4484b0 = *0x4484a0;\n            }\n            iVar3 = fcn.004096bc(*0x4484d0);\n            return iVar3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 816
    },
    "00409d26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00409d26(uint32_t *param_1)\n\n{\n    bool bVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    bVar1 = false;\n    uVar5 = *0x4484d4;\n    iVar6 = *0x4484d8;\n    iVar7 = *0x4484d8;\n    if (*0x4484d8 == 0) {\n        do {\n            bVar8 = *0x447260 != 0;\n            *0x447260 = *0x447260 + -1;\n            *0x447264 = *0x447264 + -1 + bVar8;\n            if (*0x447264 < 0) {\n                uVar3 = fcn.0040927a();\n            }\n            else {\n                uVar3 = **0x447258;\n                *0x447258 = *0x447258 + 1;\n            }\n            if (uVar3 == 0xffffffff) {\n                bVar1 = true;\n                iVar7 = iVar6;\n                break;\n            }\n            iVar7 = iVar6 + 8;\n            uVar5 = uVar5 | uVar3 << (iVar6 & 0x1f);\n            iVar6 = iVar7;\n        } while (iVar7 == 0);\n    }\n    uVar3 = uVar5 >> 1;\n    *param_1 = uVar5 & 1;\n    uVar5 = iVar7 - 1;\n    do {\n        if (1 < uVar5) {\ncode_r0x00409e00:\n            uVar4 = uVar3 & 3;\n            if (!bVar1) {\n                *0x4484d4 = uVar3 >> 2;\n                *0x4484d8 = uVar5 - 2;\n                if (uVar4 == 2) {\n                    uVar2 = fcn.0040a2bb();\n                    return uVar2;\n                }\n                if (uVar4 == 0) {\n                    uVar2 = fcn.0040a9cc();\n                    return uVar2;\n                }\n                if (uVar4 == 1) {\n                    uVar2 = fcn.0040a892();\n                    return uVar2;\n                }\n            }\n            return 2;\n        }\n        bVar8 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar8;\n        if (*0x447264 < 0) {\n            uVar4 = fcn.0040927a();\n        }\n        else {\n            uVar4 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar4 == 0xffffffff) {\n            bVar1 = true;\n            goto code_r0x00409e00;\n        }\n        uVar3 = uVar3 | uVar4 << (uVar5 & 0x1f);\n        uVar5 = uVar5 + 8;\n    } while( true );\n}\n",
        "token_count": 729
    },
    "00409e47": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00409e47(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack20;\n    \n    bVar2 = false;\n    uStack28 = *0x4484d0;\n    uStack32 = *0x4484d4;\n    uVar9 = *0x4484d8;\ncode_r0x00409ee6:\n    if (uVar9 < param_3) {\n        bVar10 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar10;\n        if (*0x447264 < 0) {\n            uVar8 = fcn.0040927a();\n        }\n        else {\n            uVar8 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar8 != 0xffffffff) {\n            uStack32 = uStack32 | uVar8 << (uVar9 & 0x1f);\n            uVar9 = uVar9 + 8;\n            goto code_r0x00409ee6;\n        }\n        bVar2 = true;\n    }\n    puVar5 = param_1 + ((1 << (param_3 & 0x1f)) - 1U & uStack32) * 8;\n    puVar6 = *0x447258;\n    iVar4 = *0x447260;\n    while( true ) {\n        uVar1 = *puVar5;\n        uVar8 = uVar1;\n        uVar9 = uVar9 - puVar5[1];\n        uStack32 = uStack32 >> (puVar5[1] & 0x1f);\n        if (uVar8 == 0x20) break;\n        if (uVar8 < 0x1f) goto code_r0x0040a047;\n        if (uVar8 == 0x1f) {\n            *0x4484d0 = uStack28;\n            *0x4484d4 = uStack32;\n            *0x4484d8 = uVar9;\n            return 0;\n        }\n        if (uVar8 == 99) {\n            return 1;\n        }\n        for (; uVar9 < (uVar8 & 0x1f); uVar9 = uVar9 + 8) {\n            *0x447260 = iVar4 + -1;\n            *0x447264 = *0x447264 + -1 + (iVar4 != 0);\n            if (*0x447264 < 0) {\n                uVar3 = fcn.0040927a();\n            }\n            else {\n                uVar3 = *puVar6;\n                *0x447258 = puVar6 + 1;\n            }\n            puVar6 = *0x447258;\n            iVar4 = *0x447260;\n            if (uVar3 == 0xffffffff) {\n                bVar2 = true;\n                break;\n            }\n            uStack32 = uStack32 | uVar3 << (uVar9 & 0x1f);\n        }\n        puVar5 = *(puVar5 + 4) + ((1 << (uVar8 & 0x1f)) - 1U & uStack32) * 8;\n    }\n    *(uStack28 + 0x43724c) = puVar5[4];\n    uVar8 = uStack28 + 1;\n    if (uVar8 == 0x10000) {\n        iVar4 = fcn.004096bc(0x10000);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        uStack32 = 0;\n    }\n    goto code_r0x00409fe4;\ncode_r0x0040a047:\n    if (uVar8 <= uVar9) goto code_r0x0040a055;\n    *0x447260 = iVar4 + -1;\n    *0x447264 = *0x447264 + -1 + (iVar4 != 0);\n    if (*0x447264 < 0) {\n        uVar3 = fcn.0040927a();\n    }\n    else {\n        uVar3 = *puVar6;\n        *0x447258 = puVar6 + 1;\n    }\n    puVar6 = *0x447258;\n    iVar4 = *0x447260;\n    if (uVar3 == 0xffffffff) {\n        bVar2 = true;\n        goto code_r0x0040a055;\n    }\n    uStack32 = uStack32 | uVar3 << (uVar9 & 0x1f);\n    uVar9 = uVar9 + 8;\n    goto code_r0x0040a047;\ncode_r0x0040a055:\n    uVar3 = uStack32 >> (uVar1 & 0x1f);\n    uStack20 = ((1 << (uVar1 & 0x1f)) - 1U & uStack32) + *(puVar5 + 4);\n    for (uVar9 = uVar9 - uVar8; uVar9 < param_4; uVar9 = uVar9 + 8) {\n        *0x447260 = iVar4 + -1;\n        *0x447264 = *0x447264 + -1 + (iVar4 != 0);\n        if (*0x447264 < 0) {\n            uVar8 = fcn.0040927a();\n        }\n        else {\n            uVar8 = *puVar6;\n            *0x447258 = puVar6 + 1;\n        }\n        puVar6 = *0x447258;\n        iVar4 = *0x447260;\n        if (uVar8 == 0xffffffff) {\n            bVar2 = true;\n            break;\n        }\n        uVar3 = uVar3 | uVar8 << (uVar9 & 0x1f);\n    }\n    puVar5 = param_2 + ((1 << (param_4 & 0x1f)) - 1U & uVar3) * 8;\n    while( true ) {\n        uVar1 = *puVar5;\n        uVar8 = uVar1;\n        uVar9 = uVar9 - puVar5[1];\n        uVar3 = uVar3 >> (puVar5[1] & 0x1f);\n        if (uVar8 < 0x20) break;\n        if (uVar8 == 99) {\n            return 1;\n        }\n        for (; uVar9 < (uVar8 & 0x1f); uVar9 = uVar9 + 8) {\n            *0x447260 = iVar4 + -1;\n            *0x447264 = *0x447264 + -1 + (iVar4 != 0);\n            if (*0x447264 < 0) {\n                uVar7 = fcn.0040927a();\n            }\n            else {\n                uVar7 = *puVar6;\n                *0x447258 = puVar6 + 1;\n            }\n            puVar6 = *0x447258;\n            iVar4 = *0x447260;\n            if (uVar7 == 0xffffffff) {\n                bVar2 = true;\n                break;\n            }\n            uVar3 = uVar3 | uVar7 << (uVar9 & 0x1f);\n        }\n        puVar5 = *(puVar5 + 4) + ((1 << (uVar8 & 0x1f)) - 1U & uVar3) * 8;\n    }\n    for (; uVar9 < uVar8; uVar9 = uVar9 + 8) {\n        *0x447260 = iVar4 + -1;\n        *0x447264 = *0x447264 + -1 + (iVar4 != 0);\n        if (*0x447264 < 0) {\n            uVar7 = fcn.0040927a();\n        }\n        else {\n            uVar7 = *puVar6;\n            *0x447258 = puVar6 + 1;\n        }\n        if (uVar7 == 0xffffffff) {\n            bVar2 = true;\n            break;\n        }\n        uVar3 = uVar3 | uVar7 << (uVar9 & 0x1f);\n        puVar6 = *0x447258;\n        iVar4 = *0x447260;\n    }\n    uStack32 = uVar3 >> (uVar1 & 0x1f);\n    uVar3 = (uStack28 - ((1 << (uVar1 & 0x1f)) - 1U & uVar3)) - *(puVar5 + 4);\n    uVar9 = uVar9 - uVar8;\n    do {\n        uVar3 = uVar3 & 0xffff;\n        uVar8 = uVar3;\n        if (uVar3 <= uStack28) {\n            uVar8 = uStack28;\n        }\n        uVar7 = 0x10000 - uVar8;\n        if (uStack20 < 0x10000 - uVar8) {\n            uVar7 = uStack20;\n        }\n        uStack20 = uStack20 - uVar7;\n        if (uStack28 - uVar3 < uVar7) {\n            do {\n                *(uStack28 + 0x43724c) = *(uVar3 + 0x43724c);\n                uStack28 = uStack28 + 1;\n                uVar3 = uVar3 + 1;\n                uVar7 = uVar7 - 1;\n                uVar8 = uStack28;\n            } while (uVar7 != 0);\n        }\n        else {\n            fcn.00413490(uStack28 + 0x43724c, uVar3 + 0x43724c, uVar7);\n            uVar3 = uVar3 + uVar7;\n            uVar8 = uStack28 + uVar7;\n        }\n        uStack28 = uVar8;\n        if (uVar8 == 0x10000) {\n            iVar4 = fcn.004096bc(0x10000);\n            if (iVar4 != 0) {\n                return iVar4;\n            }\n            uStack28 = 0;\n            uStack32 = 0;\n        }\n    } while (uStack20 != 0);\ncode_r0x00409fe4:\n    uStack28 = uVar8;\n    if (bVar2) {\n        *0x4484d0 = uStack28;\n        *0x4484d4 = uStack32;\n        *0x4484d8 = uVar9;\n        return 0;\n    }\n    goto code_r0x00409ee6;\n}\n",
        "token_count": 2514
    },
    "0040a2bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a2bb(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    bool bVar11;\n    uint in_stack_fffffa74;\n    uint uVar12;\n    uint uVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *puStack1368;\n    uchar *puStack1364;\n    uint uStack1360;\n    uint uStack1356;\n    uint uStack1352;\n    uchar *puStack1348;\n    uchar *puStack1344;\n    uchar *puStack1340;\n    uint32_t uVar17;\n    uint32_t uStack1320;\n    int32_t iStack1316;\n    uint32_t uStack1312;\n    uint32_t auStack1308 [4];\n    uint32_t uStack1292;\n    uint32_t uStack1288;\n    uint32_t auStack1280 [320];\n    \n    uStack1320 = 0;\n    puStack1348 = &stack0xfffffb00;\n    puStack1340 = 0x500;\n    puStack1344 = NULL;\n    uStack1352 = 0x40a2da;\n    fcn.00412c70();\n    uVar5 = *0x4484d4;\n    for (puVar7 = *0x4484d8; puVar7 < 0x5; puVar7 = puVar7 + 8) {\n        bVar11 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar11;\n        if (*0x447264 < 0) {\n            puStack1340 = 0x40a320;\n            uVar3 = fcn.0040927a();\n        }\n        else {\n            uVar3 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar3 == 0xffffffff) {\n            uStack1320 = 1;\n            break;\n        }\n        uVar5 = uVar5 | uVar3 << (puVar7 & 0x1f);\n    }\n    uVar3 = uVar5 >> 5;\n    uVar5 = (uVar5 & 0x1f) + 0x101;\n    uStack1288 = uVar5;\n    for (puVar7 = puVar7 + -5; puVar7 < 0x5; puVar7 = puVar7 + 8) {\n        bVar11 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar11;\n        if (*0x447264 < 0) {\n            puStack1340 = 0x40a389;\n            uVar4 = fcn.0040927a();\n        }\n        else {\n            uVar4 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar4 == 0xffffffff) {\n            uStack1320 = 1;\n            break;\n        }\n        uVar3 = uVar3 | uVar4 << (puVar7 & 0x1f);\n    }\n    uVar4 = uVar3 >> 5;\n    uStack1292 = (uVar3 & 0x1f) + 1;\n    for (puVar7 = puVar7 + -5; puVar7 < 0x4; puVar7 = puVar7 + 8) {\n        bVar11 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar11;\n        if (*0x447264 < 0) {\n            puStack1340 = 0x40a3ed;\n            uVar3 = fcn.0040927a();\n        }\n        else {\n            uVar3 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar3 == 0xffffffff) {\n            uStack1320 = 1;\n            break;\n        }\n        uVar4 = uVar4 | uVar3 << (puVar7 & 0x1f);\n    }\n    puVar7 = puVar7 + -4;\n    uVar3 = uVar4 >> 4;\n    auStack1308[1] = (uVar4 & 0xf) + 4;\n    if ((uVar5 < 0x121) && (uStack1292 < 0x21)) {\n        uVar5 = 0;\n        iVar2 = *0x447260;\n        puVar6 = *0x447258;\n        if (auStack1308[1] != 0) {\n            do {\n                if (uStack1320 != 0) goto code_r0x0040a450;\n                for (; puVar7 < 0x3; puVar7 = puVar7 + 8) {\n                    *0x447260 = iVar2 + -1;\n                    *0x447264 = *0x447264 + -1 + (iVar2 != 0);\n                    if (*0x447264 < 0) {\n                        puStack1340 = 0x40a4e0;\n                        uVar4 = fcn.0040927a();\n                    }\n                    else {\n                        uVar4 = *puVar6;\n                        *0x447258 = puVar6 + 1;\n                    }\n                    iVar2 = *0x447260;\n                    puVar6 = *0x447258;\n                    if (uVar4 == 0xffffffff) {\n                        uStack1320 = 1;\n                        break;\n                    }\n                    uVar3 = uVar3 | uVar4 << (puVar7 & 0x1f);\n                }\n                iVar1 = uVar5 * 4;\n                uVar4 = uVar3 & 7;\n                uVar3 = uVar3 >> 3;\n                puVar7 = puVar7 + -3;\n                uVar5 = uVar5 + 1;\n                *(&stack0xfffffb00 + *(iVar1 + 0x425d20) * 4) = uVar4;\n                if (auStack1308[1] <= uVar5) goto code_r0x0040a450;\n            } while( true );\n        }\n        do {\n            *(&stack0xfffffb00 + *(uVar5 * 4 + 0x425d20) * 4) = 0;\n            uVar5 = uVar5 + 1;\ncode_r0x0040a450:\n        } while (uVar5 < 0x13);\n        puStack1340 = &stack0xfffffadc;\n        iStack1316 = 7;\n        puStack1344 = &stack0xfffffae0;\n        puStack1348 = NULL;\n        uStack1352 = 0;\n        uStack1356 = 0x13;\n        uStack1360 = 0x13;\n        puStack1364 = &stack0xfffffb00;\n        puStack1368 = 0x40a479;\n        uVar5 = fcn.004096df();\n        if (puStack1344 == NULL) {\n            uVar5 = 1;\n        }\n        if (uVar5 == 0) {\n            uVar4 = iStack1316 + uStack1320;\n            uStack1312 = (1 << (puStack1344 & 0x1f)) - 1;\n            uVar17 = 0;\n            iVar2 = *0x447260;\n            puVar6 = *0x447258;\n            uVar5 = 0;\n            do {\n                uVar8 = uVar17;\n                if (puStack1348 != NULL) break;\n                for (; puVar7 < puStack1344; puVar7 = puVar7 + 8) {\n                    *0x447260 = iVar2 + -1;\n                    *0x447264 = *0x447264 + -1 + (iVar2 != 0);\n                    if (*0x447264 < 0) {\n                        puStack1368 = 0x40a58e;\n                        uVar17 = fcn.0040927a();\n                    }\n                    else {\n                        uVar17 = *puVar6;\n                        *0x447258 = puVar6 + 1;\n                    }\n                    iVar2 = *0x447260;\n                    puVar6 = *0x447258;\n                    if (uVar17 == 0xffffffff) {\n                        puStack1348 = 0x1;\n                        break;\n                    }\n                    uVar3 = uVar3 | uVar17 << (puVar7 & 0x1f);\n                }\n                puVar7 = puVar7 + -puStack1340[(uStack1312 & uVar3) * 8 + 1];\n                uVar17 = *(puStack1340 + ((uStack1312 & uVar3) * 2 + 1) * 4);\n                uVar3 = uVar3 >> (puStack1340[(uStack1312 & uVar3) * 8 + 1] & 0x1f);\n                if (uVar17 < 0x10) {\n                    *(&stack0xfffffae4 + uVar5 * 4) = uVar17;\n                    uVar8 = uVar5 + 1;\n                }\n                else if (uVar17 == 0x10) {\n                    for (; uVar17 = uVar8,  puVar7 < 0x2; puVar7 = puVar7 + 8) {\n                        *0x447260 = iVar2 + -1;\n                        *0x447264 = *0x447264 + -1 + (iVar2 != 0);\n                        if (*0x447264 < 0) {\n                            puStack1368 = 0x40a61e;\n                            uVar8 = fcn.0040927a();\n                        }\n                        else {\n                            uVar8 = *puVar6;\n                            *0x447258 = puVar6 + 1;\n                        }\n                        iVar2 = *0x447260;\n                        puVar6 = *0x447258;\n                        if (uVar8 == 0xffffffff) {\n                            puStack1348 = 0x1;\n                            break;\n                        }\n                        uVar3 = uVar3 | uVar8 << (puVar7 & 0x1f);\n                        uVar8 = uVar17;\n                    }\n                    puVar7 = puVar7 + -2;\n                    uVar8 = uVar3 & 3;\n                    uVar3 = uVar3 >> 2;\n                    iVar1 = uVar8 + 3;\n                    uVar8 = uVar5 + iVar1;\n                    if (uVar4 < uVar8) goto code_r0x0040a884;\n                    puVar9 = &stack0xfffffae4 + uVar5 * 4;\n                    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        *puVar9 = uVar17;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                else {\n                    if (uVar17 == 0x11) {\n                        for (; puVar7 < 0x3; puVar7 = puVar7 + 8) {\n                            *0x447260 = iVar2 + -1;\n                            *0x447264 = *0x447264 + -1 + (iVar2 != 0);\n                            if (*0x447264 < 0) {\n                                puStack1368 = 0x40a6a6;\n                                uVar17 = fcn.0040927a();\n                            }\n                            else {\n                                uVar17 = *puVar6;\n                                *0x447258 = puVar6 + 1;\n                            }\n                            iVar2 = *0x447260;\n                            puVar6 = *0x447258;\n                            if (uVar17 == 0xffffffff) {\n                                puStack1348 = 0x1;\n                                break;\n                            }\n                            uVar3 = uVar3 | uVar17 << (puVar7 & 0x1f);\n                        }\n                        puVar7 = puVar7 + -3;\n                        uVar17 = uVar3 & 7;\n                        uVar3 = uVar3 >> 3;\n                        iVar1 = uVar17 + 3;\n                        uVar8 = uVar5 + iVar1;\n                        if (uVar4 < uVar8) goto code_r0x0040a884;\n                        puVar10 = &stack0xfffffae4 + uVar5 * 4;\n                        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                            *puVar10 = 0;\n                            puVar10 = puVar10 + 1;\n                        }\n                    }\n                    else {\n                        for (; puVar7 < 0x7; puVar7 = puVar7 + 8) {\n                            *0x447260 = iVar2 + -1;\n                            *0x447264 = *0x447264 + -1 + (iVar2 != 0);\n                            if (*0x447264 < 0) {\n                                puStack1368 = 0x40a72c;\n                                uVar17 = fcn.0040927a();\n                            }\n                            else {\n                                uVar17 = *puVar6;\n                                *0x447258 = puVar6 + 1;\n                            }\n                            iVar2 = *0x447260;\n                            puVar6 = *0x447258;\n                            if (uVar17 == 0xffffffff) {\n                                puStack1348 = 0x1;\n                                break;\n                            }\n                            uVar3 = uVar3 | uVar17 << (puVar7 & 0x1f);\n                        }\n                        puVar7 = puVar7 + -7;\n                        uVar17 = uVar3 & 0x7f;\n                        uVar3 = uVar3 >> 7;\n                        iVar1 = uVar17 + 0xb;\n                        uVar8 = uVar5 + iVar1;\n                        if (uVar4 < uVar8) goto code_r0x0040a884;\n                        puVar10 = &stack0xfffffae4 + uVar5 * 4;\n                        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                            *puVar10 = 0;\n                            puVar10 = puVar10 + 1;\n                        }\n                    }\n                    uVar17 = 0;\n                }\n                uVar5 = uVar8;\n            } while (uVar8 < uVar4);\n            puVar14 = &stack0xfffffaa8;\n            puStack1368 = puStack1340;\n            fcn.00409b7a();\n            puVar16 = &stack0xfffffac0;\n            puVar15 = &stack0xfffffae0;\n            puStack1348 = 0x9;\n            *0x4484d4 = uVar3;\n            *0x4484d8 = puVar7;\n            uVar3 = uStack1320;\n            uVar5 = fcn.004096df(puVar15, uStack1320, 0x101, *0x4484c4, *0x4484c8, puVar16, &stack0xfffffabc);\n            if (puVar16 == NULL) {\n                uVar5 = 1;\n            }\n            if (uVar5 == 0) {\n                puStack1368 = 0x6;\n                puVar7 = &stack0xfffffaac;\n                uVar13 = 0x425ca0;\n                uVar12 = 0;\n                in_stack_fffffa74 = uStack1352;\n                uVar5 = fcn.004096df(&stack0xfffffac4 + uStack1320 * 4, uStack1352, 0, 0x425ca0, *0x4484cc, puVar7, \n                                     &stack0xfffffaa8);\n                uVar5 = -(uVar5 != 1) & uVar5;\n                if ((puVar15 == NULL) && (0x101 < uStack1320)) {\n                    uVar5 = 1;\n                }\n                if (uVar5 == 0) {\n                    uVar5 = fcn.00409e47(puVar14, uVar3, puVar7, puVar15);\n                    in_stack_fffffa74 = uVar13;\n                    fcn.00409b7a(uVar12);\n                }\n                else if (uVar5 == 1) {\n                    fcn.00409b7a(uVar3);\n                }\n            }\n            else if (uVar5 != 1) {\n                return uVar5;\n            }\n            fcn.00409b7a(in_stack_fffffa74);\n        }\n        else if (uVar5 == 1) {\n            puStack1368 = puStack1340;\n            fcn.00409b7a();\n        }\n    }\n    else {\ncode_r0x0040a884:\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 3887
    },
    "0040a892": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040a892(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_480h;\n    uint var_240h;\n    uint var_80h;\n    uint var_20h;\n    \n    if (*0x448494 == 0) {\n        puVar2 = &var_480h;\n        for (iVar1 = 0x90; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 8;\n            puVar2 = puVar2 + 1;\n        }\n        puVar2 = &var_240h;\n        for (iVar1 = 0x70; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 9;\n            puVar2 = puVar2 + 1;\n        }\n        *0x44849c = 7;\n        puVar2 = &var_80h;\n        for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 7;\n            puVar2 = puVar2 + 1;\n        }\n        puVar2 = &var_20h;\n        for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 8;\n            puVar2 = puVar2 + 1;\n        }\n        iVar1 = fcn.004096df(&var_480h, 0x120, 0x101, *0x4484c4, *0x4484c8, 0x448494, 0x44849c);\n        if (iVar1 != 0) {\n            *0x448494 = 0;\n            return iVar1;\n        }\n        *0x4484a0 = 5;\n        puVar2 = &var_480h;\n        for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 5;\n            puVar2 = puVar2 + 1;\n        }\n        iVar1 = fcn.004096df(&var_480h, 0x20, 0, 0x425ca0, *0x4484cc, 0x448498, 0x4484a0);\n        if (1 < iVar1) {\n            fcn.00409b7a(*0x448494);\n            *0x448494 = 0;\n            *0x448498 = 0;\n            return iVar1;\n        }\n    }\n    iVar1 = fcn.00409e47(*0x448494, *0x448498, *0x44849c, *0x4484a0);\n    return iVar1;\n}\n",
        "token_count": 626
    },
    "0040a99c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040a99c(void)\n\n{\n    if (*0x448494 != 0) {\n        fcn.00409b7a(*0x448498);\n        fcn.00409b7a(*0x448494);\n        *0x448494 = 0;\n        *0x448498 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "0040a9cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040a9cc(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iVar6 = *0x4484d0;\n    iStack4 = 0;\n    iStack8 = 0;\n    uVar5 = *0x4484d4 >> (*0x4484d8 & 7);\n    for (uVar7 = *0x4484d8 - (*0x4484d8 & 7); uVar7 < 0x10; uVar7 = uVar7 + 8) {\n        bVar8 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar8;\n        if (*0x447264 < 0) {\n            uVar4 = fcn.0040927a();\n        }\n        else {\n            uVar4 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar4 == 0xffffffff) {\n            iStack8 = 1;\n            break;\n        }\n        uVar5 = uVar5 | uVar4 << (uVar7 & 0x1f);\n    }\n    uVar4 = uVar5 & 0xffff;\n    uVar5 = uVar5 >> 0x10;\n    uVar7 = uVar7 - 0x10;\n    do {\n        if (0xf < uVar7) {\ncode_r0x0040aabe:\n            if (uVar4 == (~uVar5 & 0xffff)) {\n                uVar3 = uVar5 >> 0x10;\n                uVar1 = uVar7 - 0x10;\n                iVar2 = *0x4484d0;\n                uVar5 = *0x4484d4;\n                uVar7 = *0x4484d8;\n                while ((*0x4484d8 = uVar1,  *0x4484d4 = uVar3,  *0x4484d0 = iVar6,  uVar4 != 0 &&\n                       (uVar4 = uVar4 - 1,  uVar3 = *0x4484d4,  uVar1 = *0x4484d8,  iStack8 == 0))) {\n                    for (; *0x4484d8 = uVar7,  *0x4484d4 = uVar5,  *0x4484d0 = iVar2,  uVar1 < 8; uVar1 = uVar1 + 8) {\n                        bVar8 = *0x447260 != 0;\n                        *0x447260 = *0x447260 + -1;\n                        *0x447264 = *0x447264 + -1 + bVar8;\n                        if (*0x447264 < 0) {\n                            uVar5 = fcn.0040927a();\n                        }\n                        else {\n                            uVar5 = **0x447258;\n                            *0x447258 = *0x447258 + 1;\n                        }\n                        if (uVar5 == 0xffffffff) {\n                            iStack8 = 1;\n                            break;\n                        }\n                        uVar3 = uVar3 | uVar5 << (uVar1 & 0x1f);\n                        iVar2 = *0x4484d0;\n                        uVar5 = *0x4484d4;\n                        uVar7 = *0x4484d8;\n                    }\n                    *(iVar6 + 0x43724c) = uVar3;\n                    iVar6 = iVar6 + 1;\n                    if (iVar6 == 0x10000) {\n                        uVar4 = unaff_EBX;\n                        iStack8 = fcn.004096bc();\n                        if (iStack8 != 0) {\n                            return iStack8;\n                        }\n                        iVar6 = 0;\n                        unaff_EBX = uVar4;\n                    }\n                    uVar3 = uVar3 >> 8;\n                    uVar1 = uVar1 - 8;\n                    iVar2 = *0x4484d0;\n                    uVar5 = *0x4484d4;\n                    uVar7 = *0x4484d8;\n                }\n            }\n            else {\n                iStack4 = 1;\n            }\n            return iStack4;\n        }\n        bVar8 = *0x447260 != 0;\n        *0x447260 = *0x447260 + -1;\n        *0x447264 = *0x447264 + -1 + bVar8;\n        if (*0x447264 < 0) {\n            uVar3 = fcn.0040927a();\n        }\n        else {\n            uVar3 = **0x447258;\n            *0x447258 = *0x447258 + 1;\n        }\n        if (uVar3 == 0xffffffff) {\n            iStack8 = 1;\n            goto code_r0x0040aabe;\n        }\n        uVar5 = uVar5 | uVar3 << (uVar7 & 0x1f);\n        uVar7 = uVar7 + 8;\n    } while( true );\n}\n",
        "token_count": 1232
    },
    "0040ad18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040ad18(uint param_1, uint param_2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int16_t unaff_SI;\n    int32_t iVar9;\n    bool bVar10;\n    int64_t iVar11;\n    int16_t iVar12;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uchar auStack76 [8];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    uchar auStack60 [4];\n    uchar auStack56 [12];\n    int32_t iStack44;\n    uint uStack32;\n    \n    uStack100 = 0x6064b50;\n    iVar3 = fcn.0040ba59(param_1, param_2, &uStack100, 0x38);\n    iVar1 = CONCAT44(*0x447334, *0x447330);\n    iVar12 = param_2;\n    if (iVar3 == 2) {\n        uVar4 = 0;\n    }\n    else {\n        uVar5 = *0x447258 - *0x447254;\n        bVar10 = CARRY4(uVar5, *0x447298);\n        iVar9 = uVar5 + *0x447298;\n        iVar3 = (uVar5 >> 0x1f) + *0x44729c;\n        iVar6 = fcn.00409192(auStack76, 0x3c);\n        iVar1 = CONCAT44(*0x447334, *0x447330);\n        if (iVar6 == 0) {\n            uVar4 = 0x33;\n        }\n        else {\n            uVar5 = fcn.00409028();\n            uStack100 = uVar5 & 0xffff;\n            uVar7 = fcn.00409028(auStack68);\n            uStack96 = uVar7 & 0xffff;\n            uStack32 = fcn.00408fa5(auStack68);\n            iVar6 = fcn.00408fa5(auStack64);\n            iVar8 = fcn.00408fa5(auStack60);\n            iVar11 = fcn.00408fa5(auStack56);\n            iVar2 = CONCAT44(*0x447334, *0x447330);\n            iVar1 = iVar2;\n            if (((((((*0x447310 == -1) || (*0x447310 == (uVar5 & 0xffff))) &&\n                   ((*0x447312 == -1 || (*0x447312 == (uVar7 & 0xffff))))) &&\n                  (((*0x447318 == 0xffff && (*0x44731c == NULL)) ||\n                   ((*0x447318 == iStack44 && (*0x44731c == auStack68)))))) &&\n                 (((*0x447320 == 0xffff && (*0x447324 == 0)) || ((*0x447320 == unaff_EBP && (*0x447324 == unaff_EBX)))))\n                 ) && (((*0x447328 == -1 && (*0x44732c == 0)) || ((*0x447328 == iVar6 && (*0x44732c == iVar8)))))) &&\n               (((*0x447330 == -1 && (*0x447334 == 0)) || (iVar11 == iVar2)))) {\n                if (*0x447310 == -1) {\n                    *0x447310 = unaff_SI;\n                }\n                if (*0x447312 == -1) {\n                    *0x447312 = iVar12;\n                }\n                if ((*0x447318 == 0xffff) && (*0x44731c == NULL)) {\n                    *0x447318 = iStack44;\n                    *0x44731c = auStack68;\n                }\n                if ((*0x447320 == 0xffff) && (*0x447324 == 0)) {\n                    *0x447320 = unaff_EBP;\n                    *0x447324 = unaff_EBX;\n                }\n                if ((*0x447328 == -1) && (*0x44732c == 0)) {\n                    *0x447328 = iVar6;\n                    *0x44732c = iVar8;\n                }\n                iVar1 = CONCAT44(*0x447334, *0x447330);\n                if ((*0x447330 == -1) && (iVar1 = iVar2,  *0x447334 == 0)) {\n                    iVar1 = iVar11;\n                }\n                *0x4484f4 = 1;\n                *0x437208 = iVar9;\n                *0x43720c = iVar3 + bVar10;\n            }\n            uVar4 = 0;\n        }\n    }\n    *0x447334 = iVar1 >> 0x20;\n    *0x447330 = iVar1;\n    return uVar4;\n}\n",
        "token_count": 1125
    },
    "0040b391": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040b391(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    if (((param_2 != 0) && (param_1 != 0)) && (3 < param_2)) {\n        do {\n            iVar1 = fcn.0040904d(param_1);\n            uVar2 = fcn.0040904d(param_1 + 2);\n            if (param_2 - 4 < (uVar2 & 0xffff)) break;\n            if (iVar1 == 1) {\n                *0x4484f4 = 1;\n                iVar6 = 4;\n                iVar3 = 4;\n                if (param_3 == '\\0') {\n                    iVar4 = *0x437218;\n                    if (*0x4472f0 == 0xffffffff) {\ncode_r0x0040b41d:\n                        iVar6 = param_1 + 4;\n                        iVar4 = fcn.00408fa5(iVar6);\n                        iVar3 = 0xc;\n                        *0x437220 = iVar4;\n                        *0x4472c8 = iVar4;\n                        *0x4472f0 = iVar4;\n                        goto code_r0x0040b44a;\n                    }\ncode_r0x0040b44e:\n                    if (*0x4472e8 == 0xffffffff) goto code_r0x0040b476;\n                    iVar5 = *0x447308;\n                    if (param_3 != '\\0') goto code_r0x0040b464;\n                }\n                else {\n                    if (*0x4472c8 == 0xffffffff) goto code_r0x0040b41d;\ncode_r0x0040b44a:\n                    iVar4 = *0x437218;\n                    if (param_3 == '\\0') goto code_r0x0040b44e;\ncode_r0x0040b464:\n                    if (*0x4472c0 == 0xffffffff) {\ncode_r0x0040b476:\n                        iVar6 = param_1 + iVar3;\n                        *0x437218 = iVar4;\n                        iVar4 = fcn.00408fa5();\n                        iVar3 = iVar3 + 8;\n                        *0x4472c0 = iVar4;\n                        *0x4472e8 = iVar4;\n                    }\n                    *0x437218 = iVar4;\n                    iVar5 = *0x447308;\n                    if (param_3 != '\\0') goto code_r0x0040b4f1;\n                }\n                *0x437218 = iVar4;\n                if (iVar5 == 0xffffffff) {\n                    *0x447308 = iVar5;\n                    iVar5 = fcn.00408fa5(param_1 + iVar3, iVar6);\n                    iVar3 = iVar3 + 8;\n                }\n                *0x447308 = iVar5;\n                if ((param_3 == '\\0') && (*0x4472fe == -1)) {\n                    *0x4472fe = fcn.00409028(param_1 + iVar3);\n                }\n            }\ncode_r0x0040b4f1:\n            param_1 = param_1 + 4 + param_3;\n            param_2 = param_2 + (-4 - param_3);\n        } while (3 < param_2);\n    }\n    *0x4472f4 = *0x4472f0 >> 0x20;\n    *0x4472ec = *0x4472e8 >> 0x20;\n    *0x4472cc = *0x4472c8 >> 0x20;\n    *0x4472c4 = *0x4472c0 >> 0x20;\n    *0x44730c = *0x447308 >> 0x20;\n    *0x437224 = *0x437220 >> 0x20;\n    *0x43721c = *0x437218 >> 0x20;\n    return 0;\n}\n",
        "token_count": 930
    },
    "0040b513": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b5ac)\n\nint32_t fcn.0040b513(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char in_stack_00001000;\n    \n    fcn.00411c40();\n    fcn.00402290();\n    cVar2 = fcn.0040273f(0x455b62, *0x10, 0);\n    if ((cVar2 == '\\0') || (in_stack_00001000 != '\\0')) {\n        iVar3 = ((cVar2 != '\\0') - 1 & 0xffffffbd) + 0x4c;\n        goto code_r0x0040b776;\n    }\n    iVar3 = fcn.00409062();\n    if (iVar3 != 0) {\n        iVar3 = 9;\n        goto code_r0x0040b776;\n    }\n    *0x447280 = fcn.00401cfa();\n    *0x447298 = 0;\n    *0x44729c = 0;\n    *0x447258 = *0x447254;\n    iVar1 = *0x447280;\n    if (65999 < *0x447280) {\n        iVar1 = 66000;\n    }\n    *0x447288 = *0x447280;\n    iVar3 = fcn.0040af9d(iVar1);\n    if (iVar3 == 0) {\n        iVar4 = fcn.0040bcc9();\n        if (1 < iVar4) goto code_r0x0040b74a;\n        if (*0x4371f0 < 1) {\n            *0x4484ec = *0x447310 != 0;\n            *0x4484f0 = 0xffffffff;\n            uVar6 = *0x437208 - *0x437210;\n            uVar7 = (*0x43720c - *0x437214) - (*0x437208 < *0x437210);\n            *0x4472a0 = uVar6;\n            *0x4472a4 = uVar7;\n            if (uVar7 < 1) {\n                if (uVar7 < 0) goto code_r0x0040b67e;\n                if ((-1 < uVar7) && ((0 < uVar7 || (uVar6 != 0)))) goto code_r0x0040b651;\n            }\n            else {\ncode_r0x0040b651:\n                if (((*0x447330 | *0x447334) == 0) && ((*0x447328 | *0x44732c) != 0)) {\n                    *0x4472a0 = 0;\n                    *0x4472a4 = 0;\n                    *0x447330 = uVar6;\n                    *0x447334 = uVar7;\ncode_r0x0040b67e:\n                    iVar4 = 2;\n                }\n            }\n            if (((*0x437210 | *0x437214) == 0) && ((*0x447328 | *0x44732c) == 0)) {\n                iVar3 = iVar4;\n                if (iVar4 < 1) {\n                    iVar3 = 0;\n                }\n                goto code_r0x0040b776;\n            }\n            iVar3 = fcn.004093d2(*0x447330, *0x447334);\n            if (iVar3 == 3) {\n                if (*0x447278 != NULL) {\n                    (****0x447278)(1);\n                }\n                iVar4 = 3;\n                goto code_r0x0040b75d;\n            }\n            iVar5 = fcn.00409192(0x437240, 4);\n            if (iVar5 == 0) {\ncode_r0x0040b6e6:\n                *0x4472a0 = 0;\n                *0x4472a4 = 0;\n                iVar3 = fcn.004093d2(*0x447330, *0x447334);\n                if (iVar3 == 0) {\n                    iVar5 = fcn.00409192(0x437240, 4);\n                    if (iVar5 != 0) {\n                        cVar2 = fcn.00408a1d(0x437240);\n                        if (cVar2 != '\\0') goto code_r0x0040b721;\n                    }\n                }\n                if (*0x447278 != NULL) {\n                    (****0x447278)(1);\n                }\n                *0x447278 = NULL;\n                if (iVar3 == 0) {\n                    iVar3 = 3;\n                }\n            }\n            else {\n                cVar2 = fcn.00408a1d(0x437240);\n                if (cVar2 == '\\0') goto code_r0x0040b6e6;\ncode_r0x0040b721:\n                if (iVar3 <= iVar4) {\n                    iVar3 = iVar4;\n                }\n            }\n            goto code_r0x0040b776;\n        }\n        if (*0x447278 != NULL) {\n            (****0x447278)(1);\n        }\n    }\n    else {\ncode_r0x0040b74a:\n        if (*0x447278 != NULL) {\n            (****0x447278)(1);\n        }\n        iVar4 = 2;\n    }\ncode_r0x0040b75d:\n    *0x447278 = NULL;\n    iVar3 = iVar4;\ncode_r0x0040b776:\n    *0x44728c = *0x447288 >> 0x20;\n    *0x447284 = *0x447280 >> 0x20;\n    return iVar3;\n}\n",
        "token_count": 1308
    },
    "0040bd06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040bd06(void)\n\n{\n    uchar uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint *puVar9;\n    bool bVar10;\n    uchar *puStack496;\n    uchar *puStack476;\n    uchar *puStack472;\n    uchar *puStack468;\n    uchar *puVar11;\n    uchar auStack412 [8];\n    uchar auStack404 [4];\n    uchar auStack400 [100];\n    uchar auStack300 [4];\n    uchar auStack296 [12];\n    uchar auStack284 [284];\n    \n    *(*0x437248 + 0x40) = *(*0x437248 + 0x40) & 0xfffffffe;\n    fcn.00408d12();\n    uVar7 = 0;\n    uVar6 = 0xc;\n    if (*0x4484f5 == '\\0') {\n        do {\n            bVar10 = *0x447260 != 0;\n            *0x447260 = *0x447260 - 1;\n            *0x447264 = *0x447264 + -1 + bVar10;\n            if (*0x447264 < 0) {\n                uVar1 = fcn.0040927a();\n            }\n            else {\n                uVar1 = **0x447258;\n                *0x447258 = *0x447258 + 1;\n            }\n            (&stack0xfffffe64)[uVar7] = uVar1;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 0xc);\n    }\n    else {\n        uVar4 = *0x4484f8 & 3;\n        if (uVar4 != 0x3fffffff) {\n            do {\n                bVar10 = *0x447260 != 0;\n                *0x447260 = *0x447260 - 1;\n                *0x447264 = *0x447264 + -1 + bVar10;\n                if (*0x447264 < 0) {\n                    uVar1 = fcn.0040927a();\n                }\n                else {\n                    uVar1 = **0x447258;\n                    *0x447258 = *0x447258 + 1;\n                }\n                (&stack0xfffffe70)[uVar7] = uVar1;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < uVar4 * 4 + 4);\n        }\n        bVar10 = *0x447260 != 0;\n        *0x447260 = *0x447260 - 1;\n        *0x447264 = *0x447264 + -1 + bVar10;\n        if (*0x447264 < 0) {\n            fcn.0040927a();\n        }\n        else {\n            *0x447258 = *0x447258 + 1;\n        }\n        bVar10 = *0x447260 != 0;\n        *0x447260 = *0x447260 - 1;\n        *0x447264 = *0x447264 + -1 + bVar10;\n        if (*0x447264 < 0) {\n            fcn.0040927a();\n        }\n        else {\n            *0x447258 = *0x447258 + 1;\n        }\n    }\n    *(*0x437248 + 0x40) = *(*0x437248 + 0x40) | 1;\n    fcn.004094d1();\n    if (*0x4371fc == 0) goto code_r0x0040beac;\n    *0x4371fc = 0;\n    if (*0x45197c == '\\0') {\n        if (*0x44848c != '\\0') {\n            fcn.00404bf5();\n            goto code_r0x0040be87;\n        }\ncode_r0x0040be90:\n        cVar2 = fcn.00406b63();\n        *0x437200 = '\\0';\n        if (cVar2 == '\\0') goto code_r0x0040beac;\n    }\n    else if (*0x44848c == '\\0') {\n        puVar8 = 0x45187c;\n        puVar9 = 0x44838c;\n        for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar9 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *puVar9 = *puVar8;\ncode_r0x0040be87:\n        if (*0x44848c == '\\0') goto code_r0x0040be90;\n    }\n    *0x437200 = '\\x01';\ncode_r0x0040beac:\n    while( true ) {\n        if ((*0x44848c == '\\0') && (cVar2 = fcn.00406b42(),  cVar2 == '\\0')) {\n            return 9;\n        }\n        fcn.00404c08();\n        if (*0x4484f5 == '\\0') {\n            fcn.00406dcc();\n            puVar11 = &stack0xfffffe50;\n            puStack472 = 0x40bfb3;\n            iVar5 = fcn.0040c120(puVar11, &stack0xfffffe6c);\n            cVar2 = puVar11 >> 0x10;\n            if (iVar5 != 0) {\n                cVar2 = &stack0xfffffee4 >> 0x10;\n                puStack476 = 0x40bfcd;\n                cVar3 = fcn.00405afd();\n                if (cVar3 == '\\0') {\n                    puStack476 = 0x80;\n                    fcn.00406e04();\n                    puVar11 = &stack0xfffffe38;\n                    puStack496 = 0x40bff7;\n                    fcn.0040c120(puVar11, &stack0xfffffe54);\n                    cVar2 = puVar11 >> 0x10;\n                }\n            }\n        }\n        else {\n            fcn.00406dcc();\n            puStack472 = &stack0xfffffe5c;\n            puStack476 = &stack0xfffffe6c;\n            puStack468 = &stack0xfffffe48;\n            uVar7 = *0x4484f8;\n            fcn.0040c49d(*0x4484f8, puStack476, puStack472, &stack0xfffffe48, 0x448500);\n            cVar2 = uVar7 >> 0x10;\n            puStack496 = 0x40bf2a;\n            iVar5 = fcn.00413a04(&stack0xfffffe38, &stack0xfffffe34, 2);\n            if (iVar5 != 0) {\n                cVar2 = &stack0xfffffed8 >> 0x10;\n                cVar3 = fcn.00405afd();\n                if (cVar3 == '\\0') {\n                    puStack496 = &stack0xfffffed4;\n                    fcn.00406e04();\n                    uVar7 = *0x4484f8;\n                    fcn.0040c49d(*0x4484f8, &stack0xfffffe48, &stack0xfffffe38, &stack0xfffffe24, 0x448500);\n                    cVar2 = uVar7 >> 0x10;\n                    fcn.00413a04(&stack0xfffffe14, &stack0xfffffe10, 2);\n                }\n            }\n        }\n        fcn.00404db5();\n        fcn.00404db5();\n        if (cVar2 == '\\0') break;\n        fcn.00404bf5();\n        if (*0x437200 != '\\0') {\n            fcn.004016b0(6, 0x447364);\ncode_r0x0040c053:\n            if (*0x4484f5 != '\\0') {\n                if ((*0x43721c < 1) && ((*0x43721c < 0 || (*0x437218 < 10)))) {\n                    uVar6 = 2;\n                }\n                else {\n                    bVar10 = 9 < *0x437218;\n                    *0x437218 = *0x437218 - 10;\n                    *0x43721c = *0x43721c + -1 + bVar10;\n                    if ((*0x43721c < *0x447264) ||\n                       ((uVar7 = *0x447260,  *0x43721c <= *0x447264 && (*0x437218 <= *0x447260)))) {\n                        uVar7 = *0x437218;\n                    }\n                    if (uVar7 != 0) {\n                        puStack468 = 0x40c0b2;\n                        fcn.0040c450(*0x447258, uVar7, 0x448500);\n                    }\n                }\n            }\n            return uVar6;\n        }\n        fcn.004016b0(0x7c, 0x447364);\n    }\n    uVar6 = 0;\n    goto code_r0x0040c053;\n}\n",
        "token_count": 2087
    },
    "0040c22b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c22b(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uchar *puVar8;\n    uchar *puStack808;\n    uchar *puStack804;\n    uint uStack788;\n    uint uStack784;\n    uchar *puStack780;\n    uchar *puStack776;\n    uchar *puStack772;\n    uint32_t uStack768;\n    uint uStack764;\n    uchar auStack748 [40];\n    uchar auStack708 [12];\n    uchar auStack696 [96];\n    uchar auStack600 [40];\n    uchar auStack560 [168];\n    uchar auStack392 [20];\n    uchar auStack372 [76];\n    uchar auStack296 [20];\n    uchar auStack276 [264];\n    int32_t iStack12;\n    int32_t iStack8;\n    uint32_t uStack4;\n    \n    puStack772 = &stack0xfffffd48;\n    uStack764 = 0xa8;\n    uStack768 = 0;\n    puStack776 = 0x40c246;\n    fcn.00412c70();\n    uStack764 = &stack0xfffffd48;\n    uStack768 = param_2;\n    puStack772 = param_1;\n    puStack776 = 0x40c261;\n    fcn.0040c6fa();\n    puStack776 = 0xa8;\n    puStack780 = &stack0xfffffd3c;\n    uStack784 = &stack0xfffffeec;\n    uStack764 = uStack764 & 0xffff;\n    uStack788 = 0x40c27c;\n    fcn.00413490();\n    puStack776 = &stack0xfffffd06;\n    puStack780 = &stack0xfffffe8c;\n    uStack784 = &stack0xfffffeec;\n    uStack788 = param_1;\n    fcn.0040c576();\n    puStack772 = (uStack4 - 1) / 0x14 + 1;\n    if (puStack772 != NULL) {\n        uVar6 = 0;\n        puVar4 = &stack0xfffffd14;\n        puStack780 = 0x1;\n        do {\n            uVar1 = puStack780;\n            puStack804 = 0x14;\n            puStack808 = NULL;\n            puStack776 = puVar4;\n            fcn.00412c70(&stack0xfffffd14);\n            fcn.00413490(&stack0xfffffdd0, &stack0xfffffed8, 0xa8);\n            uStack768 = uVar1 << 0x18;\n            puStack804 = 0x4;\n            uStack768 = uStack768 | CONCAT12(uVar1 >> 8, CONCAT11(uVar1 >> 0x10, uVar1 >> 0x18));\n            puVar5 = 0x4;\n            for (iVar3 = iStack12; puVar8 = puVar5,  iVar3 != 0; iVar3 = iVar3 + -1) {\n                puStack804 = &stack0xfffffcf2;\n                puStack808 = &stack0xfffffe78;\n                fcn.0040c576(&stack0xfffffd00, puVar8, &stack0xfffffdd0);\n                fcn.0040c640();\n                puVar5 = NULL;\n                do {\n                    (&stack0xfffffcec)[puVar5] = (&stack0xfffffcec)[puVar5] ^ (&stack0xfffffcd8)[puVar5];\n                    puVar5 = puVar5 + 1;\n                } while (puVar5 < 0x14);\n                fcn.00413490(&stack0xfffffda8, &stack0xfffffd00, 0xa8);\n                puVar4 = puVar8;\n            }\n            uVar2 = 0;\n            uVar1 = uVar6;\n            do {\n                if (uStack4 <= uVar1) break;\n                uVar2 = uVar2 + 1;\n                *(uVar1 + iStack8) = puVar4[uVar1];\n                uVar1 = uVar1 + 1;\n            } while (uVar2 < 0x14);\n            puVar4 = puVar4 + -0x14;\n            uVar6 = uVar6 + 0x14;\n            bVar7 = puStack780 < puStack772;\n            puStack780 = puStack780 + 1;\n        } while (bVar7);\n    }\n    return;\n}\n",
        "token_count": 1051
    },
    "0040c576": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c576(uint param_1, uint *param_2, char *param_3)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *unaff_EBX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t unaff_retaddr;\n    \n    if (*(param_3 + 0xa0) != 0xffffffff) {\n        if (0x40 < *(param_3 + 0xa0)) {\n            fcn.0040c764(param_3 + 0x40, param_3);\n            *(param_3 + 0xa0) = 0x14;\n        }\n        if ((param_2 == NULL) || (*param_3 == '\\0')) {\n            uVar3 = 0;\n            fcn.00412c70(param_3 + *(param_3 + 0xa0), 0, 0x40 - *(param_3 + 0xa0));\n            do {\n                param_3[uVar3] = param_3[uVar3] ^ 0x36;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < 0x40);\n            fcn.004056fc(param_3 + 0x40);\n            fcn.0040572d(param_3 + 0x40, param_3, 0x40);\n            pcVar1 = unaff_EBX;\n        }\n        else {\n            puVar4 = param_2;\n            puVar5 = param_3 + 0x40;\n            for (iVar2 = 0x18; pcVar1 = param_3,  iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n        }\n        if ((param_2 != NULL) && (*pcVar1 == '\\0')) {\n            puVar4 = param_3 + 0x40;\n            for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *param_2 = *puVar4;\n                puVar4 = puVar4 + 1;\n                param_2 = param_2 + 1;\n            }\n            *pcVar1 = '\\x01';\n        }\n        *(param_3 + 0xa0) = 0xffffffff;\n    }\n    if (unaff_retaddr != 0) {\n        fcn.0040572d(param_3 + 0x40, unaff_EBX, unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 601
    },
    "0040c640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c640(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    char *unaff_EBX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uStack84;\n    uint *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint *puStack68;\n    uchar *arg_ch;\n    int32_t iStack56;\n    uint uStack40;\n    uint *puStack12;\n    char *pcStack8;\n    \n    uVar2 = 0;\n    if (*(param_3 + 0xa0) != -1) {\n        uStack40 = 0;\n        iStack56 = 0;\n        fcn.0040c576();\n    }\n    arg_ch = &stack0xffffffd8;\n    arg_8h = param_3 + 0x40;\n    puStack68 = 0x40c66e;\n    fcn.0040c764(arg_8h, arg_ch);\n    if ((puStack12 == NULL) || (*pcStack8 == '\\0')) {\n        do {\n            *(uVar2 + param_3) = *(uVar2 + param_3) ^ 0x6a;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x40);\n        uStack72 = 0x40c69a;\n        puStack68 = arg_8h;\n        fcn.004056fc();\n        uStack72 = 0x40;\n        iStack76 = param_3;\n        uStack84 = 0x40c6a3;\n        puStack80 = arg_8h;\n        pcStack8 = unaff_EBX;\n        fcn.0040572d();\n    }\n    else {\n        puStack68 = 0x18;\n        puVar3 = puStack12;\n        puVar4 = arg_8h;\n        for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if ((puStack12 != NULL) && (*pcStack8 == '\\0')) {\n        puVar3 = arg_8h;\n        for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puStack12 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puStack12 = puStack12 + 1;\n        }\n        *pcStack8 = '\\x01';\n    }\n    uStack84 = 0x14;\n    fcn.0040572d(arg_8h, &stack0xffffffc0);\n    fcn.0040c764(arg_8h, &stack0xffffffb4);\n    if (iStack56 != 0) {\n        fcn.00413490(arg_ch, &stack0xffffffac, iStack56);\n    }\n    return;\n}\n",
        "token_count": 707
    },
    "0040c9fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c9fb(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    puVar1 = fcn.00403592(arg_8h);\n    uVar2 = fcn.00403474(*puVar1);\n    uVar3 = uVar2;\n    if (uVar3 != 0) {\n        uVar2 = 0;\n        *puVar1 = 0;\n    }\n    if ((((arg_ch == 0) || (arg_ch == 6)) || (arg_ch == 10)) || ((arg_ch == 0xb || (arg_ch == 0xe)))) {\n        if ((uVar3 == 0) && (uVar2 = *arg_18h,  (uVar2 & 0x10) != 0)) {\n            if ((arg_14h == 0) && (arg_10h == 0)) {\n                uVar3 = 1;\n            }\n            else {\n                uVar2 = uVar2 & 0xffffffef;\n                *arg_18h = uVar2;\n            }\n        }\n        *arg_18h = *arg_18h & 0xff;\n    }\n    else {\n        uVar2 = ((uVar3 == 0) - 1 & 0xfffffff0) + 0x20;\n        *arg_18h = uVar2;\n    }\n    if (uVar3 != 0) {\n        *arg_18h = *arg_18h | 0x10;\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 403
    },
    "0040cbd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cbd9(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0040cd45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040cd45(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBP;\n    uint *unaff_EDI;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [4];\n    uint uStack24;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    uStack36 = 0;\n    uStack32 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    while( true ) {\n        piVar7 = param_2;\n        iVar3 = (**(*param_2 + 0x48))(param_2, &uStack36);\n        if ((-1 < iVar3) && (unaff_EBP != 0)) break;\n        iVar3 = (*pcVar1)();\n        if (2000 < iVar3 - iVar2) break;\n        iVar3 = (*_sym.imp.USER32.dll_PeekMessageW)(&uStack36, 0, 0, 0, 0);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetMessageW)(auStack28, 0, 0, 0);\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffd4);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffd0);\n        }\n    }\n    piVar6 = &stack0xffffffd4;\n    uVar4 = (**(*param_2 + 0x48))(param_2);\n    uVar5 = uVar4;\n    if (-1 < uVar4) {\n        if (unaff_EDI != NULL) {\n            uVar5 = (***unaff_EDI)(unaff_EDI, 0x42658c, &stack0xffffffd0);\n            if (-1 < uVar5) {\n                uVar5 = (**(*piVar7 + 0x20))(piVar7);\n                if (-1 < uVar5) {\n                    uVar5 = (**(*piVar6 + 0x14))(piVar6, uStack24);\n                }\n                (**(*piVar6 + 8))(piVar6);\n            }\n            uVar4 = (**(*piVar6 + 8))(piVar6);\n        }\n        if ((-1 < uVar5) && (unaff_EDI != NULL)) goto code_r0x0040ce83;\n    }\n    if ((*(param_1 + 8) != 0) && ((*(param_1 + 0x18) == 0 && (*(param_1 + 0x14) != 0)))) {\n        uVar4 = fcn.0040d376(*(param_1 + 0x14));\n        if (uVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(*(param_1 + 4), 1, 0, 0, 0, 0, 0x204);\n            (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 8), 5);\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*(param_1 + 8), uVar4);\n            uVar4 = fcn.00416e9e(uVar4);\n        }\n    }\ncode_r0x0040ce83:\n    return uVar4 & 0xffffff00 | ~uVar5 >> 0x1f;\n}\n",
        "token_count": 814
    },
    "0040ce94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ce94(int32_t param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    char unaff_BL;\n    int16_t *lpString1;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    if (*(param_1 + 0x10) != 0) {\n        fcn.0040cd0e();\n        fcn.00416e83(param_2);\n        iVar3 = fcn.0041837b();\n        if (iVar3 != 0) {\n            fcn.004189b6(iVar3, L\"<html>\");\n            fcn.00419544(iVar3, L\"<head><meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=\");\n            fcn.00419544(iVar3, L\"utf-8\\\"></head>\");\n            iVar1 = *param_2;\n            lpString1 = param_2;\n            while (iVar1 == 0x20) {\n                lpString1 = lpString1 + 1;\n                iVar1 = *lpString1;\n            }\n            iVar4 = fcn.00406fc5(lpString1, L\"<html>\", 6);\n            cVar2 = '\\x01' - (iVar4 != 0);\n            if (cVar2 != '\\0') {\n                param_2 = lpString1 + 6;\n            }\n            fcn.00419544(iVar3, param_2);\n            if (cVar2 == '\\0') {\n                fcn.00419544(iVar3, L\"</html>\");\n            }\n            if (unaff_BL == '\\0') {\n                iVar3 = fcn.0040d0a5(iVar3);\n            }\n            iVar4 = fcn.00416e83(iVar3);\n            iVar6 = iVar4 * 6 + 9;\n            puVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar6);\n            if (puVar5 != NULL) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (0xfde9, 0, iVar3, 0xffffffff, puVar5 + 3, iVar4 * 6 + 6, 0, 0);\n                if (iVar4 == 0) {\n                    *puVar5 = 0;\n                }\n                else {\n                    *puVar5 = 0xbbef;\n                    *(puVar5 + 1) = 0xbf;\n                }\n            }\n            fcn.00416e9e(iVar3);\n            piVar7 = &stack0xffffffdc;\n            iVar3 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(puVar5, 1);\n            if (-1 < iVar3) {\n                fcn.0040cd45(*(param_1 + 0x10), iVar6);\n                (**(*piVar7 + 8))(piVar7);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 684
    },
    "0040d553": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040d553(uint *param_1, uint param_2, int32_t param_3, uint param_4, uint param_5, uchar param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_retaddr;\n    int32_t *piVar5;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack4;\n    \n    uStack32 = 0;\n    iStack36 = param_3;\n    param_1[2] = param_3;\n    *(param_1 + 0x1e) = param_6;\n    (*_sym.imp.USER32.dll_ShowWindow)();\n    fcn.0040d2c0(uStack4);\n    param_1[5] = unaff_retaddr;\n    param_1[6] = param_2;\n    iVar3 = param_3;\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_3, &stack0xffffffe4);\n    piVar5 = &iStack36;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(param_3, piVar5, 2);\n    (*_sym.imp.USER32.dll_MapWindowPoints)(0, uVar2);\n    if (param_1[1] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(param_1[1]);\n    }\n    iVar4 = iVar3 - piVar5;\n    iVar1 = piVar5 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(param_3, 0, *param_1, param_1);\n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (0, 0x425e9c, 0, 0x40000000, iVar1, piVar5, iVar4 + -2, iVar3 - piVar5, uVar2);\n    param_1[1] = iVar3;\n    if (param_1[4] == 0) {\n        if (((param_3 != 0) && (param_1[6] == 0)) && (param_1[5] != 0)) {\n            iVar3 = fcn.0040d376(param_1[5]);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(param_3, 5);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(param_3, iVar3);\n                fcn.00416e9e(iVar3);\n            }\n        }\n    }\n    else if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar3, 5);\n        (*_sym.imp.USER32.dll_UpdateWindow)(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 633
    },
    "0040d758": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d758(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x18) == 0) && (*(param_1 + 0x1d) == '\\0')) {\n        fcn.0040ce94(*(param_1 + 0x14));\n    }\n    *(param_1 + 0x1d) = 1;\n    if (*(param_1 + 0x1e) != '\\0') {\n        fcn.0040d820(1);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0040d820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d820(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    puVar1 = *(in_ECX + 0x1c);\n    if ((puVar1 != NULL) && (arg_8h != NULL)) {\n        iVar2 = (***puVar1)(puVar1, 0x42654c, &arg_8h);\n        if (-1 < iVar2) {\n            (**(*arg_8h + 0x2c))(arg_8h, 0xfffffffc, 0);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0040d8db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d8db(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    *in_ECX = 0x426080;\n    if (arg_ch == 0) {\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStream(arg_8h, &var_4h);\n    }\n    else {\n        uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromStreamICM();\n    }\n    in_ECX[2] = uVar1;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 161
    },
    "0040da96": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040da96(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4486e0 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x4486e0 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x58);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x4486e0 * param_1) / 0x60;\n}\n",
        "token_count": 133
    },
    "0040dad9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040dad9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4486e4 == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar1 != 0)) {\n        *0x4486e4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar1, 0x5a);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, iVar1);\n    }\n    return (*0x4486e4 * param_1) / 0x60;\n}\n",
        "token_count": 134
    },
    "0040dc82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc82(uint hWnd, uint lpText, uint lpCaption, uint32_t arg_14h)\n\n{\n    if (*0x448734 != '\\0') {\n        arg_14h = arg_14h | 0x180000;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxW)(hWnd, lpText, lpCaption, arg_14h);\n    return;\n}\n",
        "token_count": 92
    },
    "0040e12c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040e12c(void)\n\n{\n    uint lpString1;\n    int32_t iVar1;\n    uint var_1024h;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint uStackY48;\n    uint lpFileOp;\n    uint var_1ch;\n    uint *var_18h;\n    uint var_10h;\n    uint arg_10h;\n    \n    fcn.00411c40();\n    if (*0x44973a != 0) {\n        arg_10h = *0x42f03c;\n        lpString1 = fcn.004035ae();\n        var_18h = 0x40e161;\n        iVar1 = fcn.00406fc5(lpString1, 0x44973a, arg_10h);\n        if (iVar1 == 0) {\n            var_18h = 0x448738;\n            var_1ch = 0x40e16f;\n            fcn.0040dfda();\n            var_1ch = 0x800;\n            lpFileOp = 0x44973a;\n            fcn.00405c1f();\n            uStackY48 = 0x40e18d;\n            iVar1 = fcn.00416e83(&fcn.0040e12c::var_1024h);\n            uStackY48 = 0x1e;\n            uStackY52 = 0;\n            *(&fcn.0040e12c::var_1024h + iVar1 * 2 + 2) = 0;\n            puStackY56 = &fcn.0040e12c::lpFileOp;\n            uStackY60 = 0x40e1a3;\n            fcn.00412c70();\n            var_1ch = 3;\n            var_18h = &fcn.0040e12c::var_1024h;\n            uStackY48 = 0x40e1c7;\n            (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n        }\n    }\n    return;\n}\n",
        "token_count": 482
    },
    "0040e1e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e1e0(int16_t *arg_8h, uint arglist)\n\n{\n    uchar auStack10244 [10216];\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    int16_t *piStack12;\n    uint *puStack8;\n    \n    puStack8 = 0x40e1ed;\n    fcn.00411c40();\n    if (arg_8h != NULL) {\n        if (*arg_8h == 0) {\n            return;\n        }\n        puStack8 = &fcn.0040e1e0::arglist;\n        piStack12 = arg_8h;\n        puStack16 = &stack0xffffd7fc;\n        puStack20 = 0x40e20c;\n        (*_sym.imp.USER32.dll_wvsprintfW)();\n        puStack20 = &stack0xffffd7fc;\n        uStack24 = 1;\n        uStack28 = 0x40e21a;\n        fcn.00410653();\n    }\n    *0x44871c = *0x44871c + 1;\n    return;\n}\n",
        "token_count": 263
    },
    "0040e224": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e224(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h)\n\n{\n    uint lpLCData;\n    uint var_64h;\n    \n    if (*0x42f054 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0x400, 0xf, &lpLCData, 100);\n        *0x45ef7c = lpLCData;\n        *0x45ef7e = 0;\n        *0x42f054 = 0x45ef7c;\n    }\n    fcn.00405b43(arg_8h, arg_ch, &var_64h, 0x32);\n    *arg_10h = 0;\n    (*_sym.imp.KERNEL32.dll_GetNumberFormatW)(0x400, 0, &var_64h, 0x42f044, arg_10h, arg_14h);\n    arg_10h[arg_14h + -1] = 0;\n    return;\n}\n",
        "token_count": 249
    },
    "0040e4d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e4d7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar auStack8208 [4096];\n    uint var_100ch;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uchar *puStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint *puStack44;\n    uint *puStack40;\n    uint uStack36;\n    char16_t *pcStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uchar *hKey;\n    uint32_t var_4h;\n    \n    var_4h = 0x40e4e4;\n    fcn.00411c40();\n    if (*0x44a740 != '\\0') {\n        var_4h = 0x800;\n        hKey = &stack0xffffdff0;\n        var_ch = arg_8h;\n        puStack20 = 0x40e505;\n        fcn.0040f945();\n        puStack20 = &fcn.0040e4d7::hKey;\n        uStack24 = 1;\n        uStack28 = 0;\n        pcStack32 = L\"Software\\\\WinRAR SFX\";\n        uStack36 = 0x80000001;\n        puStack40 = 0x40e51d;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar1 == 0) {\n            puStack40 = &fcn.0040e4d7::var_4h;\n            var_4h = 0x1000;\n            puStack44 = &fcn.0040e4d7::var_100ch;\n            puStack48 = &fcn.0040e4d7::var_ch;\n            uStack52 = 0;\n            puStack56 = &stack0xffffdff0;\n            puStack60 = hKey;\n            puStack64 = 0x40e549;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar1 == 0) {\n                var_4h = var_4h >> 1;\n                uVar2 = var_4h;\n                if (0x7fe < var_4h) {\n                    uVar2 = 0x7ff;\n                }\n                puStack64 = arg_ch;\n                *(&fcn.0040e4d7::var_100ch + uVar2 * 2) = 0;\n                puStack68 = &fcn.0040e4d7::var_100ch;\n                uStack72 = arg_8h;\n                uStack76 = 0x40e57c;\n                fcn.00405c1f();\n            }\n            puStack64 = hKey;\n            puStack68 = 0x40e585;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 692
    },
    "0040e789": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.0040e789(void)\n\n{\n    int16_t *arg_8h;\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_stack_00002008;\n    char cStack21;\n    uint uStack20;\n    \n    fcn.00411c40();\n    uStack20 = 0x80000;\n    arg_8h = fcn.0041837b();\n    if (arg_8h == NULL) {\n        uStack20 = 0x40e7b2;\n        fcn.00401834();\n    }\n    *arg_8h = 0;\n    iVar3 = 0;\n    do {\n        do {\n            uStack20 = 0x1000;\n            iVar2 = fcn.0040e631();\n            *in_stack_00002008 = iVar2;\n            if (iVar2 == 0) {\n                return arg_8h;\n            }\n        } while ((*arg_8h == 0) && (uStack20 == 0x7b));\n        if (uStack20 == 0x7d) {\n            return arg_8h;\n        }\n        iVar2 = fcn.00416e83(&stack0xffffffec);\n        if (0x3fffb < iVar2 + iVar3) {\n            return arg_8h;\n        }\n        fcn.00419544(arg_8h, &stack0xffffffec);\n        iVar3 = fcn.00416e83(arg_8h);\n        if (iVar3 != 0) {\n            piVar1 = arg_8h + iVar3 + -1;\n            do {\n                if (*piVar1 != 0x20) break;\n                piVar1 = piVar1 + -1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        cStack21 = &stack0x00000003 >> 0x18;\n        if (cStack21 == '\\0') {\n            fcn.004189b6(arg_8h + iVar3, 0x4260e8);\n        }\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0040ea40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ea40(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4486f4 == '\\0') && (*param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.004019e0(0x45ef88, 0x1000, param_2, 0, &stack0x0000000c);\n        fcn.0040e1e0(0x426160, 0x45ef88);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040f819": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f819(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_00002004;\n    uchar *puVar3;\n    uint32_t uStack12;\n    \n    fcn.00411c40();\n    uStack12 = 0x1000;\n    iVar2 = 0;\n    puVar3 = *0x10;\n    iVar1 = fcn.004059d0(in_stack_00002004);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        if ((iVar2 != 1) && ((uStack12 == 0x2f || (uStack12 == 0x2d)))) {\n            iVar1 = sub.USER32.dll_CharUpperW(uStack12 >> 0x10);\n            if (iVar1 == 0x44) {\ncode_r0x0040f91a:\n                fcn.00405c1f();\n            }\n            else if (iVar1 == 0x45) {\n                iVar1 = sub.USER32.dll_CharUpperW(uStack12 & 0xffff);\n                if ((iVar1 == 0x4c) && (puVar3 >> 0x10 == 0)) {\n                    *0x44a741 = 1;\n                }\n            }\n            else if (iVar1 == 0x50) {\n                fcn.00404d6a(&uStack12);\n            }\n            else if (iVar1 == 0x53) {\n                iVar1 = sub.USER32.dll_CharUpperW(uStack12 & 0xffff);\n                if ((iVar1 == 0) || (iVar1 == 0x31)) {\n                    *0x44a73c = 1;\n                }\n                else {\n                    if (iVar1 != 0x32) {\n                        if (iVar1 == 0x50) goto code_r0x0040f91a;\n                        goto code_r0x0040f91f;\n                    }\n                    *0x44a73c = 2;\n                }\n                *0x456e4a = 1;\n            }\n        }\ncode_r0x0040f91f:\n        iVar1 = fcn.004059d0();\n    } while( true );\n}\n",
        "token_count": 510
    },
    "0040f98a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpFileOp\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040f98a(uint hDlg, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ushort *puVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int16_t *piVar10;\n    int16_t *piVar11;\n    uint *in_FS_OFFSET;\n    bool bVar12;\n    ulong uVar13;\n    uint var_1c3ch;\n    uint var_143ch;\n    uint lpExistingFileName;\n    int16_t *arg_ch_00;\n    int32_t lpFileOp;\n    uint var_38h;\n    int32_t var_34h;\n    int16_t *var_2ch;\n    uint var_1ch;\n    uint hKey;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411c14();\n    fcn.00411c40();\n    if (*(unaff_EBP + 0xc) != 0) {\n        iVar4 = fcn.0040e631(*(unaff_EBP + 0xc), unaff_EBP + -0xfc8c, unaff_EBP + -0x5c84, unaff_EBP + -0xd, \n                             unaff_EBP + -0xe, 0x1000);\n        *(unaff_EBP + 0xc) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = *(unaff_EBP + 0x10);\ncode_r0x0040f9de:\n            var_2ch = 0x6;\n            do {\n                fcn.0040e2af();\n                var_2ch = var_2ch + -1;\n                piVar10 = var_2ch;\n            } while (var_2ch != NULL);\n            while (iVar5 = fcn.00406fa3(),  iVar5 != 0) {\n                piVar10 = piVar10 + 1;\n                if (0xd < piVar10) goto code_r0x00410556;\n            }\n    // switch table (14 cases) at 0x41059a\n            switch(piVar10) {\n            case NULL:\n                if (iVar4 == 2) {\n                    fcn.0040db45(unaff_EBP + -0x7c84, 0x800);\n                    fcn.004034cc(unaff_EBP + -0x7c84, unaff_EBP + -0x5c84, unaff_EBP + -0xdc8c, 0x800);\n                    fcn.00402716();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00402850(unaff_EBP + -0xdc8c);\n                    fcn.00402290();\n                    cVar3 = fcn.004027a3(unaff_EBP + -0x3c84, 0);\n                    pcVar2 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n                    goto joined_r0x0040faa9;\n                }\n                goto code_r0x00410556;\n            case 0x1:\n                if (iVar4 == 0) {\n                    bVar12 = *0x45ef60 == NULL;\n                    if (!bVar12) {\n                        fcn.00419544(*0x45ef60, L\"<br>\");\n                    }\n                    cVar3 = *(unaff_EBP + -0xd);\n                    if (cVar3 == '\\0') {\n                        iVar4 = fcn.0040e789(unaff_EBP + 0xc);\n                    }\n                    else {\n                        iVar4 = unaff_EBP + -0x5c84;\n                    }\n                    if (!bVar12) {\n                        var_2ch = fcn.00416e83(*0x45ef60);\n                    }\n                    iVar5 = fcn.00416e83(iVar4);\n                    puVar7 = fcn.00418435(*0x45ef60, (iVar5 + var_2ch) * 2 + 10);\n                    if (puVar7 != NULL) {\n                        *0x45ef60 = puVar7;\n                        if (bVar12) {\n                            *puVar7 = 0;\n                        }\n                        fcn.00419544(puVar7, iVar4);\n                    }\n                    if (cVar3 == '\\0') {\n                        fcn.00416e9e(iVar4);\n                    }\n                }\n                goto code_r0x00410556;\n            case 0x2:\n                if (iVar4 == 0) {\n                    (*_sym.imp.USER32.dll_SetWindowTextW)(*(unaff_EBP + 8), unaff_EBP + -0x5c84);\n                }\n                goto code_r0x00410556;\n            case 0x3:\n                if ((iVar4 != 0) || (*0x44a742 != 0)) goto code_r0x00410556;\n                piVar10 = unaff_EBP + -0x5c84;\n                *(unaff_EBP + -0x103c) = 0;\n                if (*(unaff_EBP + -0x5c84) == 0x22) {\n                    piVar10 = unaff_EBP + -0x5c82;\n                }\n                uVar9 = fcn.00416e83(piVar10);\n                if (0x7ff < uVar9) goto code_r0x00410556;\n                iVar1 = *piVar10;\n                if ((iVar1 == 0x2e) && (piVar10[1] == 0x5c)) {\n                    if (piVar10[2] == 0) goto code_r0x00410556;\n                    var_34h = unaff_EBP + -0x103c;\n                    fcn.00405c1f(var_34h, piVar10 + 2, 0x800);\n                }\n                else if ((iVar1 == 0x5c) || ((iVar1 != 0 && (piVar10[1] == 0x3a)))) {\n                    var_34h = unaff_EBP + -0x103c;\n                    fcn.00405c1f(var_34h, piVar10, 0x800);\n                }\n                else {\n                    var_34h = 0;\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                                      (0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", 0, 1, \n                                       unaff_EBP + -0x18);\n                    if (iVar4 == 0) {\n                        *(unaff_EBP + -0x14) = 0x1000;\n                        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                  (*(unaff_EBP + -0x18), L\"ProgramFilesDir\", 0, unaff_EBP + -0x1c, unaff_EBP + -0x103c, \n                                   unaff_EBP + -0x14);\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x18));\n                        uVar9 = *(unaff_EBP + -0x14) >> 1;\n                        if (0x7fe < uVar9) {\n                            uVar9 = 0x7ff;\n                        }\n                        *(unaff_EBP + -0x103c + uVar9 * 2) = 0;\n                    }\n                    if ((*(unaff_EBP + -0x103c) != 0) &&\n                       (iVar4 = fcn.00416e83(unaff_EBP + -0x103c),  *(unaff_EBP + -0x103e + iVar4 * 2) != 0x5c)) {\n                        var_34h = unaff_EBP + -0x103c;\n                        fcn.00405bf7();\n                    }\n                    iVar4 = fcn.00416e83(piVar10);\n                    iVar5 = fcn.00416e83(unaff_EBP + -0x103c);\n                    if (iVar4 + iVar5 < 0x7ff) {\n                        var_34h = unaff_EBP + -0x103c;\n                        fcn.00405bf7();\n                    }\n                }\n                puVar7 = fcn.004133eb(unaff_EBP + -0x103c, 0x22);\n                if ((puVar7 != NULL) && (puVar7[1] == 0)) {\n                    *puVar7 = 0;\n                }\n                fcn.00405c1f(0x44a742, unaff_EBP + -0x103c, 0x800, var_34h);\n                fcn.0040e4d7(unaff_EBP + -0x103c, 0x800);\n                uVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(unaff_EBP + 8), 0x66);\n                (*_sym.imp.USER32.dll_SetWindowTextW)(uVar8, unaff_EBP + -0x103c);\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar8, 0x143, 0, 0x44a742);\n                iVar4 = fcn.004181e9(0x44a742, unaff_EBP + -0x103c);\n                if (iVar4 != 0) {\n                    (*pcVar2)(uVar8, 0x143, 0, unaff_EBP + -0x103c);\n                }\n                goto code_r0x00410556;\n            case 0x4:\n                if (*0x44a73c != 1) {\n                    cVar3 = fcn.00405ab5(*(unaff_EBP + -0x5c84));\n                    if (cVar3 == '\\0') {\n                        *0x44a73c = 2;\n                    }\n                    else {\n                        *0x44a73c = *(unaff_EBP + -0x5c84) - 0x30;\n                    }\n                }\n                goto code_r0x00410556;\n            case 0x5:\n                iVar1 = *(unaff_EBP + -0x5c84);\n                if (iVar1 == 0) {\ncode_r0x0040ff69:\n                    *0x4486f7 = 0;\n                    *0x448720 = 1;\n                }\n                else {\n                    if (iVar1 == 0x30) {\n                        *0x4486f7 = 0;\n                    }\n                    else {\n                        if (iVar1 == 0x31) goto code_r0x0040ff69;\n                        if (iVar1 != 0x32) goto code_r0x00410556;\n                        *0x4486f7 = 1;\n                    }\n                    *0x448720 = 0;\n                }\n                goto code_r0x00410556;\n            case 0x6:\n                if ((iVar4 == 4) && (iVar4 = fcn.004181e9(unaff_EBP + -0x5c84, 0x426454),  iVar4 != 0)) {\ncode_r0x0040ffd9:\n                    fcn.004108ef(*(unaff_EBP + 8), unaff_EBP + -0x5c84, var_2ch);\n                }\n                break;\n            case 0x7:\n                if (iVar4 != 1) goto code_r0x004101a2;\n                (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x800, unaff_EBP + -0x7c84);\n                fcn.00402e95(unaff_EBP + -0x7c84, 0x800);\n                lpFileOp = 0;\n                while( true ) {\n                    fcn.004036d0(0x44973a, 0x800, L\"%s%s%u\", unaff_EBP + -0x7c84, *0x42f03c, lpFileOp);\n                    cVar3 = fcn.004023ea(0x44973a);\n                    if (cVar3 == '\\0') break;\n                    lpFileOp = lpFileOp + 1;\n                }\n                (*_sym.imp.USER32.dll_SetDlgItemTextW)(*(unaff_EBP + 8), 0x66, 0x44973a);\n                if ((*(unaff_EBP + -0x5c84) != 0) && (*0x456e4a == '\\0')) {\n                    *(unaff_EBP + -0x143c) = 0;\n                    uVar8 = 0x2c;\n                    iVar5 = fcn.0041320e(unaff_EBP + -0x5c84, 0x2c);\n                    if ((iVar5 == 0) && (iVar5 = 0,  *(unaff_EBP + -0x5c84) != 0)) {\n                        piVar10 = unaff_EBP + -0x5c84;\n                        do {\n                            if (*piVar10 == 0x40) {\n                                uVar8 = 0x200;\n                                fcn.00405c1f();\n                                *(unaff_EBP + -0x5c84 + iVar5 * 2) = 0;\n                                break;\n                            }\n                            iVar5 = iVar5 + 1;\n                            piVar10 = unaff_EBP + -0x5c84 + iVar5 * 2;\n                        } while (*piVar10 != 0);\n                    }\n                    if (*(unaff_EBP + -0x143c) == 0) {\n                        fcn.00405c1f(unaff_EBP + -0x5c84, unaff_EBP + -0x1bc8c, 0x1000);\n                        fcn.00405c1f(uVar8, unaff_EBP + -0x19c8c, 0x200);\n                    }\n                    fcn.0040e0da(unaff_EBP + -0x5c84);\n                    *(unaff_EBP + -0x4c84) = 0;\n                    iVar5 = fcn.0040dc82(*(unaff_EBP + 8), unaff_EBP + -0x5c84, unaff_EBP + -0x143c, 0x24);\n                    if (iVar5 == 6) goto code_r0x00410556;\n                    *0x4486f4 = 1;\n                    *0x44973a = 0;\n                    (*_sym.imp.USER32.dll_EndDialog)(*(unaff_EBP + 8), 1);\ncode_r0x004101a2:\n                    if (iVar4 == 7) {\n                        if (*0x44a73c == 0) {\n                            *0x44a73c = 2;\n                        }\n                        *0x449738 = 1;\n                    }\n                }\n                goto code_r0x00410556;\n            case 0x8:\n                if (iVar4 == 3) {\n                    if (*(unaff_EBP + -0x5c84) != 0) {\n                        *0x45ef68 = fcn.0041a7c3(unaff_EBP + -0x5c84);\n                    }\n                    *0x45ef64 = fcn.0040e789(unaff_EBP + 0xc);\n                }\n                *0x456e4b = 1;\n                goto code_r0x00410556;\n            case 0x9:\n                if (iVar4 == 5) {\n                    var_2ch = 0x1;\n                    goto code_r0x0040ffd9;\n                }\n                break;\n            case 0xa:\n                if (iVar4 == 6) {\n                    *(unaff_EBP + -0x2c3c) = 0;\n                    iVar4 = fcn.004187cf(*(unaff_EBP + -0x1bc8c));\n                    if (iVar4 == 0x50) {\n                        fcn.00405c1f(unaff_EBP + -0x2c3c, 0x45be52, 0x800);\n                        *(unaff_EBP + -0x14) = 2;\n                    }\n                    else if (iVar4 == 0x54) {\n                        fcn.00405c1f(unaff_EBP + -0x2c3c, 0x45ae52, 0x800);\n                        *(unaff_EBP + -0x14) = 7;\n                    }\n                    else {\n                        fcn.00405c1f(unaff_EBP + -0x2c3c, 0x45ce52, 0x800);\n                        *(unaff_EBP + -0x14) = 0x10;\n                    }\n                    *(unaff_EBP + -0x9c8c) = 0;\n                    *(unaff_EBP + -0x1c3c) = 0;\n                    fcn.004189b6(unaff_EBP + -0x6c84, unaff_EBP + -0x19c8c);\n                    piVar10 = var_2ch;\n                    if (*(unaff_EBP + -0x6c84) == 0x22) {\n                        fcn.004189b6(unaff_EBP + -0x6c84, unaff_EBP + -0x19c8a);\n                        puVar7 = fcn.0041320e(unaff_EBP + -0x6c82, 0x22);\n                        if (puVar7 != NULL) {\n                            *puVar7 = 0;\n                            fcn.004189b6(unaff_EBP + -0x1c3c, puVar7 + 1);\n                        }\n                    }\n                    else {\n                        cVar3 = fcn.004023ea(unaff_EBP + -0x6c84);\n                        if ((cVar3 == '\\0') && (piVar11 = unaff_EBP + -0x6c84,  *(unaff_EBP + -0x6c84) != 0)) {\n                            do {\n                                iVar1 = *piVar11;\n                                if ((iVar1 == 0x20) || (iVar1 == 0x2f)) {\n                                    *piVar11 = 0;\n                                    cVar3 = fcn.004023ea(unaff_EBP + -0x6c84);\n                                    if (cVar3 == '\\0') {\n                                        *piVar11 = iVar1;\n                                    }\n                                    else {\n                                        piVar10 = piVar11;\n                                        if (iVar1 == 0x2f) {\n                                            *(unaff_EBP + -0x1c3c) = 0x2f;\n                                            iVar4 = unaff_EBP + -0x1c3a;\n                                            arg_ch_00 = piVar11 + 1;\n                                        }\n                                        else {\n                                            do {\n                                                piVar10 = piVar10 + 1;\n                                            } while (*piVar10 == 0x20);\n                                            iVar4 = unaff_EBP + -0x1c3c;\n                                            arg_ch_00 = piVar10;\n                                        }\n                                        fcn.004189b6(iVar4, arg_ch_00);\n                                        *piVar11 = iVar1;\n                                        var_2ch = piVar11;\n                                        piVar11 = piVar10;\n                                    }\n                                    piVar10 = NULL;\n                                }\n                                piVar11 = piVar11 + 1;\n                            } while (*piVar11 != piVar10);\n                            if (var_2ch != NULL) {\n                                *var_2ch = 0;\n                            }\n                        }\n                    }\n                    if (*(unaff_EBP + -0x11c8c) != 0) {\n                        fcn.00402ec0(unaff_EBP + -0x11c8c, unaff_EBP + -0x9c8c, 0x800);\n                    }\n                    fcn.00402ec0(unaff_EBP + -0x6c84, unaff_EBP + -0xbc8c, 0x800);\n                    if (*(unaff_EBP + -0x2c3c) == 0) {\n                        fcn.0040e729(unaff_EBP + -0x2c3c, *(unaff_EBP + -0x14));\n                    }\n                    fcn.00402e95(unaff_EBP + -0x2c3c, 0x800);\n                    if (*(unaff_EBP + -0x17c8c) != 0) {\n                        fcn.00405bf7(unaff_EBP + -0x2c3c, unaff_EBP + -0x17c8c, 0x800);\n                        fcn.00402e95(unaff_EBP + -0x2c3c, 0x800);\n                    }\n                    fcn.004189b6(unaff_EBP + -0xcc8c, unaff_EBP + -0x2c3c);\n                    iVar4 = unaff_EBP + -0x13c8c;\n                    if (*(unaff_EBP + -0x13c8c) == 0) {\n                        iVar4 = unaff_EBP + -0x19c8c;\n                    }\n                    uVar8 = fcn.004035ae(iVar4, 0x800);\n                    fcn.00405bf7(unaff_EBP + -0x2c3c, uVar8);\n                    iVar4 = fcn.0040313c(unaff_EBP + -0x2c3c);\n                    if ((iVar4 == 0) || (iVar5 = fcn.00406fa3(iVar4, L\".lnk\"),  iVar5 != 0)) {\n                        iVar4 = unaff_EBP + -0x2c3c;\n                        fcn.00405bf7();\n                    }\n                    fcn.004022b9(unaff_EBP + -0x2c3c, 1, iVar4);\n                    fcn.004189b6(unaff_EBP + -0xac8c, unaff_EBP + -0xbc8c);\n                    fcn.004035f8(unaff_EBP + -0xac8c);\n                    uVar9 = -(*(unaff_EBP + -0x9c8c) != 0) & unaff_EBP - 0x9c8cU;\n                    iVar4 = unaff_EBP + -0x15c8c;\n                    uVar13 = fcn.0040e1cc(iVar4, uVar9, -(*(unaff_EBP + -0x1c3c) != 0) & unaff_EBP - 0x1c3cU);\n                    fcn.0040d99d(piVar10, unaff_EBP + -0xbc8c, unaff_EBP + -0x2c3c, uVar13 >> 0x20, uVar13, iVar4, uVar9\n                                );\n                    if (*(unaff_EBP + -0xcc8c) != 0) {\n                        (*_sym.imp.SHELL32.dll_SHChangeNotify)(0x1000, 5, unaff_EBP + -0xcc8c, piVar10);\n                    }\n                }\n                goto code_r0x00410556;\n            case 0xb:\n                if (iVar4 == 7) {\n                    *0x44a740 = 1;\n                }\n                goto code_r0x00410556;\n            case 0xc:\n                iVar4 = fcn.004187cf(*(unaff_EBP + -0x5c84));\n                if (iVar4 == 0x46) {\n                    *0x448721 = 1;\n                }\n                else if (iVar4 == 0x55) {\n                    *0x448722 = 1;\n                }\n                else {\n                    *0x448721 = 0;\n                    *0x448722 = 0;\n                }\n                goto code_r0x00410556;\n            case 0xd:\n                *0x45ef6d = 1;\n                if (*(unaff_EBP + -0x5c84) != 0) {\n                    *0x42f040 = fcn.00406f98(unaff_EBP + -0x5c84);\n                }\n            default:\n                goto code_r0x00410556;\n            }\n            *0x45ef6c = 1;\n            goto code_r0x00410556;\n        }\n    }\ncode_r0x0041058a:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\njoined_r0x0040faa9:\n    if (cVar3 == '\\0') goto code_r0x0040fc0e;\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_EBP + -0x3c84, 0);\n    if (*(unaff_EBP + -0x2c78) != '\\0') {\n        fcn.004031a0(unaff_EBP + -0x7c84, unaff_EBP + -0x103c, 0x800);\n        fcn.00402e95();\n        uVar9 = fcn.00416e83(unaff_EBP + -0x7c84);\n        if (((uVar9 < 4) || (uVar6 = fcn.00416e83(unaff_EBP + -0x103c),  uVar9 <= uVar6)) &&\n           (cVar3 = fcn.0040348c(unaff_EBP + -0x5c84),  cVar3 != '\\0')) goto code_r0x0040fc0e;\n        iVar4 = fcn.00416e83(unaff_EBP + -0x3c84);\n        *(unaff_EBP + -0x3c82 + iVar4 * 2) = 0;\n        fcn.00412c70(unaff_EBP + -0x3c, 0, 0x1e);\n        *(unaff_EBP + -0x38) = 3;\n        *(unaff_EBP + -0x2c) = 0x14;\n        *(unaff_EBP + -0x34) = unaff_EBP + -0x3c84;\n        (*_sym.imp.SHELL32.dll_SHFileOperationW)(unaff_EBP + -0x3c);\n    }\n    iVar4 = (*pcVar2)(unaff_EBP + -0x3c84);\n    if ((iVar4 != -1) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(unaff_EBP + -0x3c84),  piVar10 = var_2ch,  iVar4 == 0)) {\n        while( true ) {\n            fcn.004036d0(unaff_EBP + -0x103c, 0x800, L\"%s.%d.tmp\", unaff_EBP + -0x3c84, piVar10);\n            iVar4 = (*pcVar2)(unaff_EBP + -0x103c);\n            if (iVar4 == -1) break;\n            piVar10 = piVar10 + 1;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_MoveFileW)(unaff_EBP + -0x3c84, unaff_EBP + -0x103c);\n        if (iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_MoveFileExW)(unaff_EBP + -0x103c, 0, 4);\n        }\n    }\n    cVar3 = fcn.004027a3(unaff_EBP + -0x3c84, 0);\n    goto joined_r0x0040faa9;\ncode_r0x0040fc0e:\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040272c();\ncode_r0x00410556:\n    iVar5 = fcn.0040e631();\n    iVar4 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + 0xc) = iVar5;\n    if (iVar5 == 0) goto code_r0x0041058a;\n    goto code_r0x0040f9de;\n}\n",
        "token_count": 6451
    },
    "004108ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004108ef(char16_t *param_1, uint32_t param_2, uint param_3, uint param_4, int16_t *param_5, int16_t *param_6, \n                 uint param_7, uint param_8)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    code *pcVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char in_stack_00001020;\n    int32_t in_stack_00001024;\n    char in_stack_00001028;\n    char in_stack_0000102c;\n    int16_t *in_stack_00001048;\n    char in_stack_0000104c;\n    uint32_t uStack32;\n    int32_t iStack28;\n    char16_t *pcStack24;\n    int16_t *piStack20;\n    \n    fcn.00411c40();\n    bVar3 = false;\n    if ((*in_stack_00001048 != 0) && (uVar6 = fcn.00416e83(in_stack_00001048),  uVar6 < 0x7f6)) {\n        pcStack24 = &stack0x00000004;\n        piStack20 = NULL;\n        iStack28 = 0x41092f;\n        fcn.00412c70();\n        param_1 = 0x3c;\n        param_2 = 0x1c0;\n        if (in_stack_0000104c != '\\0') {\n            param_2 = 0x5c0;\n        }\n        iVar2 = *in_stack_00001048;\n        param_5 = in_stack_00001048 + 1;\n        if (iVar2 != 0x22) {\n            param_5 = in_stack_00001048;\n        }\n        iVar7 = 0;\n        piVar1 = in_stack_00001048;\n        while (iVar2 != 0) {\n            if (*piVar1 == 0x22) {\n                do {\n                    iVar7 = iVar7 + 1;\n                    if (in_stack_00001048[iVar7] == 0) goto code_r0x00410984;\n                } while (in_stack_00001048[iVar7] != 0x22);\n                in_stack_00001048[iVar7] = 0x20;\n            }\ncode_r0x00410984:\n            if ((in_stack_00001048[iVar7] == 0x20) || (in_stack_00001048[iVar7 + 1] == 0x2f)) {\n                if (in_stack_00001048[iVar7] == 0x20) {\n                    in_stack_00001048[iVar7] = 0;\n                }\n                param_6 = in_stack_00001048 + iVar7 + 1;\n                break;\n            }\n            iVar7 = iVar7 + 1;\n            piVar1 = in_stack_00001048 + iVar7;\n            iVar2 = *piVar1;\n        }\n        if ((((param_6 == NULL) || (*param_6 == 0)) && (in_stack_0000104c == '\\0')) && (*0x44b742 != 0)) {\n            param_6 = 0x44b742;\n        }\n        param_8 = 1;\n        pcStack24 = 0x4109d3;\n        piStack20 = param_5;\n        iVar7 = fcn.0040313c();\n        if (iVar7 != 0) {\n            pcStack24 = L\".inf\";\n            uStack32 = 0x4109e4;\n            iStack28 = iVar7;\n            iVar8 = fcn.00406fa3();\n            if (iVar8 == 0) {\n                param_1 = L\"Install\";\n            }\n        }\n        uStack32 = param_2;\n        cVar5 = fcn.004023ea();\n        if (cVar5 != '\\0') {\n            fcn.00402ec0(param_1, &stack0x00000030, 0x800);\n        }\n        iVar8 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&stack0xffffffe8);\n        pcVar4 = _sym.imp.USER32.dll_ShowWindow;\n        if (iVar8 != 0) {\n            if (((*0x449738 != '\\0') || (in_stack_0000102c != '\\0')) || (*0x45ef6d != '\\0')) {\n                if ((in_stack_00001024 != 0) &&\n                   (iVar8 = (*_sym.imp.USER32.dll_IsWindowVisible)(in_stack_00001024),  iVar8 != 0)) {\n                    (*pcVar4)(in_stack_00001024, 0);\n                    bVar3 = true;\n                }\n                (*_sym.imp.USER32.dll_WaitForInputIdle)(param_7, 2000);\n                fcn.00410d81(param_8);\n                if (((*0x45ef6d != '\\0') && (in_stack_0000102c == '\\0')) &&\n                   (iVar8 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(param_7, &stack0xffffffe0),  iVar8 != 0)) {\n                    if (*0x45ef70 < uStack32) {\n                        *0x45ef70 = uStack32;\n                    }\n                    *0x45ef6e = 1;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(param_7);\n            if (((iVar7 == 0) || (iVar7 = fcn.00406fa3(iVar7, 0x4252cc),  iVar7 != 0)) &&\n               ((in_stack_00001020 = in_stack_00001028,  *0x449738 != '\\0' &&\n                ((in_stack_00001020 == '\\0' && (*0x45ef6d == '\\0')))))) {\n                *0x45ef74 = 7000;\n            }\n            if ((bVar3) && (in_stack_00001020 != '\\0')) {\n                (*pcVar4)(in_stack_00001024, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1384
    },
    "00410b5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410b5e(uint param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    *0x4486f8 = 0;\n    uVar2 = 1;\n    *0x4486f5 = 1;\n    *0x4486f6 = 1;\n    (*_sym.imp.USER32.dll_ShowWindow)(param_1, 1);\n    uVar1 = 2;\n    fcn.0040113d(uVar2, 2, 0);\n    if (((*0x448708 == 0) && (*0x448723 == '\\0')) || (*0x44871c == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x111, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00410c8d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n\nvoid __cdecl fcn.00410c8d(uint lpData)\n\n{\n    int32_t iVar1;\n    uint lpValueName;\n    uint uStackY88;\n    uint uStackY84;\n    uint *puStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint var_8h;\n    uint hKey;\n    \n    fcn.00411c40();\n    if ((*0x44a740 != '\\0') && (*0x44a742 != 0)) {\n        fcn.0040f945();\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)();\n        if (iVar1 == 0) {\n            uStackY64 = 0x410cf3;\n            fcn.00416e83(lpData);\n            uStackY64 = lpData;\n            puStackY76 = &fcn.00410c8d::lpValueName;\n            uStackY68 = 1;\n            uStackY72 = 0;\n            uStackY84 = 0x410d12;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)();\n            uStackY88 = 0x410d1b;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "00410dc2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00410dc2(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_DialogBoxParamW;\n    *0x45df58 = param_3;\n    *0x45df5c = param_4;\n    *0x44c854 = param_5;\n    if (*0x448720 == '\\0') {\n        if (*0x4486f7 == '\\0') {\n            do {\n                iVar2 = (*pcVar1)(*0x448700, L\"REPLACEFILEDLG\", *0x448718, 0x40f47c, param_1);\n                if (iVar2 != 4) {\n                    return iVar2;\n                }\n                iVar3 = (*pcVar1)(*0x4486fc, L\"RENAMEDLG\", *0x4486f0, 0x410765);\n            } while (iVar3 == 0);\n        }\n        else {\n            iVar2 = 1;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 278
    },
    "00410e85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410e85(int32_t arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_1000h;\n    uint uStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    char16_t *pcStackY48;\n    uint32_t uStackY44;\n    code *pcStackY40;\n    uint *puStackY36;\n    \n    fcn.00411c40();\n    uStackY44 = *0x448718;\n    uVar1 = 1;\n    if (*0x44c842 == '\\0') {\n        if (arg_8h == 2) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n            uStackY44 = uStackY44 & -(iVar2 != 0);\n        }\n        puStackY36 = 0x410ee5;\n        fcn.0040322d(arg_ch, arg_10h, &fcn.00410e85::var_1000h, 0x800);\n        puStackY36 = &fcn.00410e85::var_1000h;\n        pcStackY40 = fcn.0040e58b;\n        pcStackY48 = L\"GETPASSWORD1\";\n        uStackY52 = *0x448700;\n        uStackY56 = 0x410f03;\n        iVar2 = (*_sym.imp.USER32.dll_DialogBoxParamW)();\n        if (iVar2 == 0) {\n            uStackY56 = 0x425294;\n            uStackY60 = 0x410f29;\n            uVar1 = fcn.00404d6a();\n            *0x4486f4 = 1;\n            uVar1 = uVar1 & 0xffffff00;\n        }\n        else {\n            puVar3 = 0x456d48;\n            puVar4 = arg_14h;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            uVar1 = 1;\n            *puVar4 = *puVar3;\n        }\n        if (*(arg_14h + 0x40) != '\\0') {\n            puVar3 = 0x44c742;\n            for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *arg_14h;\n                arg_14h = arg_14h + 1;\n                puVar3 = puVar3 + 1;\n            }\n            *puVar3 = *arg_14h;\n        }\n    }\n    else {\n        puVar3 = 0x44c742;\n        for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *arg_14h = *puVar3;\n            puVar3 = puVar3 + 1;\n            arg_14h = arg_14h + 1;\n        }\n        *arg_14h = *puVar3;\n    }\n    return uVar1;\n}\n",
        "token_count": 762
    },
    "0041a87e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a87e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4619bc, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0041acc2();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0041ac49(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00415d1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415d1f(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    *(unaff_EBX + -4) = *(unaff_EBP + -0x2c);\n    fcn.0041305b(*(unaff_EBP + -0x30));\n    iVar1 = fcn.004159d0();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x34);\n    iVar1 = fcn.004159d0();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x38);\n    if (((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n         ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x3c) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.004130a5(unaff_EDI[6]),  iVar1 != 0)))) {\n        fcn.00415b0c(unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0041662b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041662b(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00412880(0x42c6a0, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.004159d0();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        if (iVar4 == *(unaff_EBP + 0x14)) goto code_r0x004166bf;\n        if ((iVar4 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= iVar4)) break;\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00415ac0(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    do {\n        fcn.0041a728();\ncode_r0x004166bf:\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004166df();\n    } while (iVar4 != *(unaff_EBP + 0x14));\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.004128c6();\n    return;\n}\n",
        "token_count": 618
    },
    "004166df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004166df(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004159d0();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.004159d0();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00416ea3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00416ea3(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x42f0b8 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 0x16;\n        fcn.0041aba1();\n        goto code_r0x00416ffa;\n    }\n    fcn.0041731e(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.004172e9(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.00417524();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x00416fcf;\ncode_r0x0041701f:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0041701f;\n                    goto code_r0x00416fcf;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x00416fcf:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.004173a1();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00416ffa:\n    fcn.00412515(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 805
    },
    "004176e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004176e4(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0041771f:\n                puVar7 = fcn.0041acc2();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0041aba1();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0041771f;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0041785d:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0041785d;\n    param_1[7] = 7;\n    uStack8 = *0x42f0b8 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0041791f:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x00417923:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00417926:\n            cVar5 = fcn.00417db2(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004178cb:\n                arg_8h = 0x10;\n                goto code_r0x00417926;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x004178df;\n                if (uVar9 < 0x45) goto code_r0x00417aad;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x00417aad;\n                    goto code_r0x004178b3;\n                }\n            }\ncode_r0x0041792f:\n            cVar5 = fcn.00417ba8();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00417b45();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0041792f;\n            if (uVar9 != 99) goto code_r0x00417aad;\ncode_r0x004178df:\n            cVar5 = fcn.00417d1a(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.00417f8f();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0041792f;\n            if (uVar9 == 0x69) goto code_r0x0041791f;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.00417efc();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x00417aad;\n                cVar5 = fcn.00417f70();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x00417aad;\n                arg_ch_00 = 0;\n                goto code_r0x004178cb;\n            }\n            goto code_r0x00417923;\n        }\ncode_r0x004178b3:\n        cVar5 = fcn.00417fa7();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x00417aad;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x004179ad;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x004179ad:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.00417230(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0041812b(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00417230(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004180a0(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00417230(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00417aad:\n    uVar8 = fcn.00412515(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2498
    },
    "00417860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00417860(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42f0b8 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0041791f:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x00417923:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00417926:\n            cVar5 = fcn.00417db2(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x004178cb:\n                arg_8h = 0x10;\n                goto code_r0x00417926;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x004178df;\n                if (uVar6 < 0x45) goto code_r0x00417aad;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x00417aad;\n                    goto code_r0x004178b3;\n                }\n            }\ncode_r0x0041792f:\n            cVar5 = fcn.00417ba8();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.00417b45();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0041792f;\n            if (uVar6 != 99) goto code_r0x00417aad;\ncode_r0x004178df:\n            cVar5 = fcn.00417d1a(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.00417f8f();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0041792f;\n            if (uVar6 == 0x69) goto code_r0x0041791f;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.00417efc();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x00417aad;\n                cVar5 = fcn.00417f70();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x00417aad;\n                arg_ch_00 = 0;\n                goto code_r0x004178cb;\n            }\n            goto code_r0x00417923;\n        }\ncode_r0x004178b3:\n        cVar5 = fcn.00417fa7();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x00417aad;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x004179ad;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x004179ad:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.00417230(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0041812b(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.00417230(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004180a0(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.00417230(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00417aad:\n    fcn.00412515(unaff_ESI);\n    return;\n}\n",
        "token_count": 1647
    },
    "00417db2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417db2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.00417ae9(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0041acc2();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0041aba1();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x00417e63;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x00417e63;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x00417e63:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.004171a8(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.00417133(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1101
    },
    "0041dd07": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041dd07(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.0041c60a(3);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004226ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.004226ae(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x42b050 | *0x42b0c0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x42b058 | *0x42b0c8;\n        uVar1 = SUB82(*0x42b070 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x42b088 & dVar7;\n        dVar9 = (*0x42b080 & dVar6) * *(uVar1 + 0x42b680) - *0x42b060;\n        dVar6 = (dVar6 - (*0x42b080 & dVar6)) * *(uVar1 + 0x42b680);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x42b688);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x42b688) - *0x42b068);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x42b118 * dVar11 + *0x42b128) * dVar11 + *0x42b138) * dVar11 * dVar11 +\n                   ((*0x42b110 * dVar7 + *0x42b120) * dVar7 + *0x42b130) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x42b140 * dVar7 + *(uVar1 + 0x42b278) + dVar10 * *0x42b098 + (dVar8 & *(iVar5 + 0x42b0a8)) +\n                   *(uVar1 + 0x42b270) + dVar9 + dVar10 * *0x42b090 + (dVar6 & *(iVar5 + 0x42b0a0));\n        }\n        dStack12 = -(*0x42b0d0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x42b0c0 == (param_1 & *0x42b050 | *0x42b0c0)) {\n                    return *0x42b0f8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x42b050;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x004228ba;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x42b0e0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x42b0f0;\ncode_r0x004228ba:\n    fcn.00422f03(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1030
    },
    "00401d50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401d50(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == -1) {\n        return in_EAX & 0xffffff00;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileType)(*(param_1 + 4));\n    if ((iVar1 != 2) && (iVar1 != 3)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 119
    },
    "00401d7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d7b(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint in_stack_00000ff0;\n    uint in_stack_00000ffc;\n    uint in_stack_0000100c;\n    uint32_t in_stack_00001010;\n    int32_t iVar8;\n    uint uStack20;\n    \n    fcn.00411c40();\n    *(extraout_ECX + 0x1020) = 0;\n    bVar1 = false;\n    if ((*(extraout_ECX + 0x1c) != '\\0') || ((in_stack_00001010 & 4) != 0)) {\n        bVar1 = true;\n    }\n    uVar7 = (-((in_stack_00001010 >> 1 & 1) != 0) & 0xc0000000) + 0x80000000;\n    if ((in_stack_00001010 & 1) != 0) {\n        uVar7 = uVar7 | 0x40000000;\n    }\n    uVar6 = ~(in_stack_00001010 >> 3) & 1;\n    if (bVar1) {\n        uVar6 = uVar6 | 2;\n    }\n    uStack20 = 0;\n    uVar3 = (*(extraout_ECX + 0x15) != '\\0') - 1 & 0x8000000;\n    iVar8 = 3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_stack_0000100c, uVar7, uVar6, 0, 3, uVar3);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        cVar2 = fcn.00403283(in_stack_00000ffc, &stack0xfffffff8, 0x800);\n        if (cVar2 != '\\0') {\n            iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&uStack20, uVar7, uVar6, 0, 3, uVar3, 0);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar5 == 2) {\n                iVar8 = iVar5;\n            }\n            if (iVar4 != -1) goto code_r0x00401e6a;\n        }\n        if (iVar8 == 2) {\n            *(extraout_ECX + 0x1020) = 1;\n        }\n    }\ncode_r0x00401e6a:\n    uVar7 = 0;\n    *(extraout_ECX + 0x12) = 0;\n    *(extraout_ECX + 0xc) = 0;\n    *(extraout_ECX + 0x10) = 0;\n    if (iVar4 != -1) {\n        *(extraout_ECX + 4) = iVar4;\n        uVar7 = fcn.00405c1f(extraout_ECX + 0x1e, in_stack_00000ff0, 0x800);\n    }\n    return uVar7 & 0xffffff00 | iVar4 != -1;\n}\n",
        "token_count": 750
    },
    "0040286d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040286d(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00001250;\n    int32_t in_stack_00001254;\n    int32_t in_stack_00001258;\n    int32_t in_stack_0000125c;\n    uint uVar6;\n    int32_t iStack24;\n    uchar *puVar7;\n    \n    fcn.00411c40();\n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    if (in_stack_00001254 == -1) {\n        puVar7 = *0x10;\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n        iStack24 = in_stack_00001258;\n        if (iVar4 == -1) {\n            cVar2 = fcn.00403283(in_stack_00001250, &stack0x00000248, 0x800);\n            if (cVar2 != '\\0') {\n                iVar4 = (*pcVar1)();\n                if (iVar4 != -1) goto code_r0x0040292e;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (((iVar5 == 2) || (iVar5 == 3)) || (iVar5 == 0x12)) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = 1;\n            }\n            *(in_stack_0000125c + 0x1044) = uVar3;\n            goto code_r0x004029dc;\n        }\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)();\n        iVar4 = in_stack_00001254;\n        puVar7 = *0x10;\n        if (iVar5 == 0) {\n            iVar4 = -1;\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(in_stack_0000125c + 0x1044) = iVar5 != 0x12;\n            puVar7 = *0x10;\n        }\n        iStack24 = in_stack_00001254;\n        if (iVar4 == -1) goto code_r0x004029dc;\n    }\ncode_r0x0040292e:\n    uVar6 = 0x800;\n    fcn.00405c1f();\n    fcn.00403669();\n    *(in_stack_0000125c + 0x1000) = unaff_retaddr;\n    *(in_stack_0000125c + 0x1008) = in_stack_00001250;\n    *(in_stack_0000125c + 0x1028) = uVar6;\n    *(in_stack_0000125c + 0x102c) = iStack24;\n    *(in_stack_0000125c + 0x1030) = puVar7;\n    *(in_stack_0000125c + 0x1034) = unaff_EDI;\n    *(in_stack_0000125c + 0x1038) = unaff_ESI;\n    *(in_stack_0000125c + 0x103c) = unaff_EBP;\n    *(in_stack_0000125c + 0x1004) = unaff_EBX;\n    fcn.00406664();\n    fcn.00406664();\n    fcn.00406664();\ncode_r0x004029dc:\n    *(in_stack_0000125c + 0x1040) = 0;\n    return iVar4;\n}\n",
        "token_count": 843
    },
    "004029f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.004029f2(void)\n\n{\n    int32_t iVar1;\n    uint lpVersionInformation;\n    int32_t var_110h;\n    int32_t var_10ch;\n    int32_t var_104h;\n    \n    if (*0x42f000 == -1) {\n        lpVersionInformation = 0x114;\n        (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        *0x42f000 = var_104h;\n        *0x431a40 = var_110h;\n        *0x431a44 = var_10ch;\n    }\n    if (*0x42f000 == 2) {\n        iVar1 = *0x431a40 * 0x100 + *0x431a44;\n    }\n    else {\n        iVar1 = 0x501;\n    }\n    return iVar1;\n}\n",
        "token_count": 196
    },
    "00403525": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403525(uint16_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*param_1 != 0) {\n        iVar3 = 0;\n        do {\n            uVar2 = 0x4252d8;\n            if (param_2 == '\\0') {\n                uVar2 = 0x4252e8;\n            }\n            iVar1 = fcn.0041320e(uVar2, *param_1);\n            if ((iVar1 != 0) || ((param_2 != '\\0' && (*param_1 < 0x20)))) {\n                *param_1 = 0x5f;\n            }\n            if ((2 < iVar3) && (*param_1 == 0x3a)) {\n                *param_1 = 0x5f;\n            }\n            param_1 = param_1 + 1;\n            iVar3 = iVar3 + 2;\n        } while (*param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040893c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t fcn.0040893c(int32_t param_1, uint32_t param_2, int16_t *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    *0x4484f5 = 0;\n    if ((((param_2 == 0) || (param_1 == 0)) || (param_3 == NULL)) || (*param_3 != 99)) {\n        uVar2 = in_EAX & 0xffffff00;\n    }\n    else {\n        if (3 < param_2) {\n            do {\n                fcn.0040904d(param_1);\n                uVar2 = fcn.0040904d(param_1 + 2);\n                uVar2 = uVar2 & 0xffff;\n                in_EAX = param_2 - 4;\n                if (in_EAX < uVar2) break;\n                if (((unaff_retaddr == 0x9901) && (6 < uVar2)) && (iVar1 = fcn.0040904d(param_1 + 6),  iVar1 == 0x4541))\n                {\n                    iVar1 = fcn.0040904d(param_1 + 4);\n                    *0x4484f6 = '\\x01' - (iVar1 != 1);\n                    *0x4484f8 = *(param_1 + 8);\n                    if (*0x4484f8 < 4) {\n                        iVar1 = fcn.0040904d(param_1 + 9);\n                        *param_3 = iVar1;\n                        *0x4484f5 = 1;\n                    }\n                }\n                in_EAX = -uVar2 - 4;\n                param_2 = param_2 + in_EAX;\n                param_1 = param_1 + 4 + uVar2;\n            } while (3 < param_2);\n        }\n        uVar2 = in_EAX & 0xffffff00 | *0x4484f5;\n    }\n    return uVar2;\n}\n",
        "token_count": 468
    },
    "00408a8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00408a8c(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x03')) && (param_1[3] == '\\x04')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00408aee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00408aee(void)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    (*0x437248)[0x10] = (*0x437248)[0x10] ^ (*0x4472dc ^ (*0x437248)[0x10]) & 1;\n    (*0x437248)[0x10] = (*0x437248)[0x10] ^ (*0x4472dc >> 2 ^ (*0x437248)[0x10]) & 2;\n    (*0x437248)[0x10] = (*0x437248)[0x10] ^ (*0x447300 << 2 ^ (*0x437248)[0x10]) & 4;\n    (*0x437248)[6] = *0x4472e4;\n    puVar2 = *0x437248;\n    (*0x437248)[2] = *0x4472e8;\n    puVar2[3] = *0x4472ec;\n    puVar2 = *0x437248;\n    (*0x437248)[4] = *0x4472f0;\n    puVar2[5] = *0x4472f4;\n    (*0x437248)[9] = *0x447304;\n    puVar2 = *0x437248;\n    if (((*0x4472db != '\\x02') || (*0x4472da < 0x2b)) &&\n       ((uVar1 = *0x4472dc >> 0x10,  uVar1 == 0 || ((uVar1 == 8 || (uVar1 == 9)))))) {\n        **0x437248 = *0x447308;\n        puVar2[1] = *0x44730c;\n        return 1;\n    }\n    fcn.00401980(0x455b62, 0x447364);\n    return 0;\n}\n",
        "token_count": 433
    },
    "0040abf5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040abf5(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar3;\n    uint unaff_retaddr;\n    uint32_t in_stack_00001fd4;\n    int32_t in_stack_00001fd8;\n    uint arg_8h;\n    uint arg_ch;\n    uchar *arg_10h;\n    uchar *arg_14h;\n    uint arg_18h;\n    uchar *arg_8h_00;\n    uint arg_20h;\n    int32_t arg_24h;\n    uchar *arg_28h;\n    uint arg_2ch;\n    uint arg_30h;\n    uint in_stack_ffffffec;\n    uint arg_3ch;\n    \n    fcn.00411c40();\n    arg_3ch = 0x40ac07;\n    iVar2 = fcn.0040b513();\n    if (iVar2 == 9) {\n        arg_3ch = 0x455b62;\n        in_stack_ffffffec = 0x455b62;\n        fcn.00401870();\n    }\n    if ((iVar2 == 2) || (iVar2 == 3)) {\n        fcn.00401771();\n    }\n    if (iVar2 == 0) {\n        arg_30h = 0x800;\n        arg_2ch = 0x455b62;\n        arg_28h = &stack0xfffffff8;\n        fcn.00405c1f();\n        iVar2 = 0;\n        while( true ) {\n            arg_20h = 0x800;\n            arg_8h_00 = &stack0xffffffec;\n            arg_24h = iVar2;\n            fcn.00407361(arg_8h_00, 0x800, iVar2);\n            fcn.00402290();\n            arg_18h = 0;\n            arg_14h = &stack0x00000fe0;\n            arg_10h = &stack0xffffffe0;\n            cVar1 = fcn.0040273f();\n            if (cVar1 == '\\0') break;\n            bVar3 = CARRY4(*0x447288, in_stack_00001fd4);\n            *0x447288 = *0x447288 + in_stack_00001fd4;\n            *0x44728c = *0x44728c + in_stack_00001fd8 + bVar3;\n            iVar2 = iVar2 + 1;\n            fcn.00405c1f();\n        }\n        *0x447290 = 0;\n        *0x447294 = 0;\n        arg_8h = *0x447330;\n        arg_ch = *0x447334;\n        fcn.004093d2();\n        iVar2 = fcn.004073ea(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_8h_00, arg_20h, arg_24h, arg_28h, arg_2ch, \n                             arg_30h, unaff_EBX, in_stack_ffffffec, arg_3ch, unaff_EDI, unaff_ESI, unaff_EBP, \n                             unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, param_7);\n        if (iVar2 == 2) {\n            fcn.00401771();\n        }\n        if ((iVar2 == 9) || (iVar2 == 0x4c)) {\n            fcn.00401870();\n        }\n        if (*0x447278 != NULL) {\n            (****0x447278)();\n        }\n        *0x447278 = NULL;\n    }\n    return iVar2;\n}\n",
        "token_count": 895
    },
    "0040c49d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c49d(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    \n    if (arg_8h - 1 < 3) {\n        uVar1 = fcn.004182f0(arg_ch);\n        *(arg_18h + 0x1d8) = arg_8h;\n        arg_8h = arg_8h & 3;\n        *(arg_18h + 0x1d4) = uVar1;\n        fcn.0040c22b(arg_ch, uVar1, arg_10h, arg_8h * 4 + 4, 1000, &var_44h, arg_8h * 0x10 + 0x12);\n        *(arg_18h + 0x1d0) = 0x10;\n        fcn.00412c70(arg_18h, 0, 0x10);\n        fcn.0040434c(1, &var_44h, (arg_8h + 1) * 0x40, 0);\n        *(arg_18h + 0x21) = 0;\n        fcn.00412c70(arg_18h + 0x128, 0, 0xa8);\n        fcn.0040c6fa(&var_3ch + arg_8h * 2, arg_8h * 8 + 8, arg_18h + 0x128);\n        fcn.00413490(arg_14h, &var_34h + arg_8h * 4, 2);\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0xffffff9b;\n    }\n    return uVar1;\n}\n",
        "token_count": 437
    },
    "0040c971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar fcn.0040c971(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint unaff_retaddr;\n    \n    if ((param_2 == 3) && (cVar1 = fcn.00405adf(param_1),  cVar1 == '\\0')) {\n        uVar2 = fcn.00406c02(unaff_retaddr);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0040c995": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0040c995(char param_1, uint8_t param_2)\n\n{\n    unkuint3 Var2;\n    int32_t iVar1;\n    \n    Var2 = param_2 - 0x15 >> 8;\n    if ((param_2 - 0x15 < 7) && (((param_1 == '\\n' || (param_1 == '\\v')) || (param_1 == '\\x03')))) {\n        iVar1 = Var2 << 8;\n    }\n    else {\n        iVar1 = CONCAT31(Var2, 1);\n    }\n    return iVar1;\n}\n",
        "token_count": 136
    },
    "0041282f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041282f(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0041a728();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "004133eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.004133eb(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [16];\n    int32_t iVar3;\n    uchar (*pauVar4) [16];\n    bool bVar5;\n    bool bVar6;\n    \n    pauVar4 = NULL;\n    pauVar2 = arg_8h;\n    if (*0x460fe8 < 2) {\n        do {\n            puVar1 = *pauVar2;\n            pauVar4 = *pauVar2 + 2;\n            pauVar2 = pauVar4;\n        } while (*puVar1 != 0);\n        do {\n            pauVar4 = pauVar4[-1] + 0xe;\n            if (pauVar4 == arg_8h) break;\n        } while (**pauVar4 != arg_ch);\n        if (**pauVar4 != arg_ch) {\n            pauVar4 = NULL;\n        }\n    }\n    else {\n        for (; (*arg_8h + 1 & 0xe) != 0; arg_8h = *arg_8h + 2) {\n            if (**arg_8h == arg_ch) {\n                pauVar4 = arg_8h;\n            }\n            if (**arg_8h == 0) {\n                return pauVar4;\n            }\n        }\n        bVar5 = arg_ch != 0;\n        bVar6 = arg_ch == 0;\n        if (bVar6) {\n            while (iVar3 = pcmpistri(ZEXT416(0xffff0001), *arg_8h, 0x15),  !bVar6) {\n                arg_8h = arg_8h[1];\n                bVar6 = arg_8h == NULL;\n            }\n            pauVar4 = *arg_8h + iVar3 * 2;\n        }\n        else {\n            while( true ) {\n                iVar3 = pcmpistri(ZEXT216(arg_ch), *arg_8h, 0x41);\n                if (bVar5) {\n                    pauVar4 = *arg_8h + iVar3 * 2;\n                }\n                if (bVar6) break;\n                bVar5 = 0xffffffef < arg_8h;\n                arg_8h = arg_8h[1];\n                bVar6 = arg_8h == NULL;\n            }\n        }\n    }\n    return pauVar4;\n}\n",
        "token_count": 546
    },
    "00417524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417524(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0041936c();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00417549:\n        puVar3 = fcn.0041acc2();\n        *puVar3 = 0x16;\n        fcn.0041aba1();\ncode_r0x00417559:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x00417609:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x004175f2:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00417609;\n                uVar4 = fcn.00417436(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x417624\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.00417681();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x004175f2;\n                case 2:\n                    cVar2 = fcn.00417644();\n                    break;\n                case 3:\n                    cVar2 = fcn.00417abd();\n                    break;\n                case 4:\n                    goto code_r0x004175cc;\n                case 5:\n                    cVar2 = fcn.004176bb();\n                    break;\n                case 6:\n                    cVar2 = fcn.004176e4();\n                    break;\n                case 7:\n                    cVar2 = fcn.00417860();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00417559;\n                default:\n                    goto code_r0x00417549;\n                }\n                if (cVar2 == '\\0') goto code_r0x00417559;\n                goto code_r0x004175f2;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x00417609;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x004175cc:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x004175f2;\n}\n",
        "token_count": 818
    },
    "00401180": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00401180(uint hWnd, int32_t arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint32_t in_EAX;\n    \n    if (arg_ch == 0x30) {\n        in_EAX = fcn.00403d24(hWnd);\n    }\n    else if (arg_ch == 0x110) {\n        in_EAX = fcn.00403d4b(hWnd, arg_18h, arg_20h & 1);\n        if ((arg_20h & 1) != 0) {\n            in_EAX = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n            if (in_EAX != 0) {\n                in_EAX = (*_sym.imp.USER32.dll_GetDlgItem)(in_EAX, 0x3021);\n                if ((in_EAX != 0) && ((arg_20h & 8) != 0)) {\n                    in_EAX = (*_sym.imp.USER32.dll_SetWindowTextW)(in_EAX, 0x425294);\n                }\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 271
    },
    "00402473": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00402473(uint32_t param_1)\n\n{\n    return param_1 >> 10 & 1;\n}\n",
        "token_count": 31
    },
    "00405e21": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405e51)\n// WARNING: Removing unreachable block (ram,0x00405e31)\n\nuint32_t fcn.00405e21(void)\n\n{\n    int32_t iVar1;\n    uint32_t uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n    if ((*(iVar1 + 4) & 0x20) == 0) {\n        iVar1 = cpuid_Version_info(1);\n        if ((*(iVar1 + 0xc) & 0x80000) == 0) {\n            if ((*(iVar1 + 0xc) & 0x200) == 0) {\n                if ((*(iVar1 + 8) & 0x4000000) == 0) {\n                    uStack32 = *(iVar1 + 8) >> 0x19 & 1;\n                }\n                else {\n                    uStack32 = 2;\n                }\n            }\n            else {\n                uStack32 = 3;\n            }\n        }\n        else {\n            uStack32 = 4;\n        }\n    }\n    else {\n        uStack32 = 5;\n    }\n    return uStack32;\n}\n",
        "token_count": 292
    },
    "004219fd": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004219fd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00412880(0x42ca70, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0041acaf();\n        *puVar1 = 0;\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x461768)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x461568) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0041de96(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x461568) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0041acc2();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0041acaf();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00421ae8(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00421abf();\n                goto code_r0x00421ae2;\n            }\n        }\n        puVar1 = fcn.0041acaf();\n        *puVar1 = 0;\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 9;\n        fcn.0041aba1();\n    }\ncode_r0x00421ae2:\n    fcn.004128c6();\n    return;\n}\n",
        "token_count": 602
    },
    "0040167b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040167b(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if (*(param_1 + 4) == 0) {\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                if ((uVar1 & 1) == 0) {\n                    uVar1 = uVar1 >> 1;\n                }\n                else {\n                    uVar1 = uVar1 >> 1 ^ 0xedb88320;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(param_1 + uVar2 * 4) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00417f70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417f70(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00417db2(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "00421e83": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421e83(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00412880();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0041de96(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x461568) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.0041df6d(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x00421ef3;\n        puVar3 = fcn.0041acaf();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0041acc2();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x00421ef3:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00421f0f(0x42cab0, noname_1, unaff_retaddr);\n    fcn.004128c6();\n    return;\n}\n",
        "token_count": 481
    },
    "00422021": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422021(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00412880();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0041de96(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x461568) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0041acc2();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0042214a(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00422097(0x42cad0, noname_1, unaff_retaddr);\n    fcn.004128c6();\n    return;\n}\n",
        "token_count": 373
    },
    "004220cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004220cb(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0041acaf();\n        *puVar1 = 0;\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x461768)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x461568) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.004220a3(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.0041acaf();\n        *puVar1 = 0;\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 9;\n        fcn.0041aba1();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 289
    },
    "00401595": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401595(uint32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            if ((arg_ch & 7) == 0) break;\n            arg_8h = arg_8h >> 8 ^ *((*arg_ch ^ arg_8h & 0xff) * 4 + 0x42fa30);\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h - 1;\n        } while (arg_10h != 0);\n    }\n    if (7 < arg_10h) {\n        uVar2 = arg_10h >> 3;\n        do {\n            arg_8h = arg_8h ^ *arg_ch;\n            arg_10h = arg_10h - 8;\n            uVar1 = arg_ch[1];\n            arg_ch = arg_ch + 2;\n            arg_8h = *((uVar1 >> 0x18) * 4 + 0x42fa30) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x42fe30) ^\n                     *((uVar1 >> 8 & 0xff) * 4 + 0x430230) ^ *((arg_8h >> 0x18) * 4 + 0x430a30) ^\n                     *((arg_8h >> 0x10 & 0xff) * 4 + 0x430e30) ^ *((arg_8h >> 8 & 0xff) * 4 + 0x431230) ^\n                     *((uVar1 & 0xff) * 4 + 0x430630) ^ *((arg_8h & 0xff) * 4 + 0x431630);\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    for (; arg_10h != 0; arg_10h = arg_10h - 1) {\n        arg_8h = arg_8h >> 8 ^ *((*arg_ch ^ arg_8h & 0xff) * 4 + 0x42fa30);\n        arg_ch = arg_ch + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 539
    },
    "00406495": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406495(uint32_t arg_8h)\n\n{\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    \n    var_ch = 0;\n    var_10h = (arg_8h & 0x1f) * 2;\n    var_14h = arg_8h >> 5 & 0x3f;\n    var_18h = arg_8h >> 0xb & 0x1f;\n    var_1ch = arg_8h >> 0x10 & 0x1f;\n    var_20h = arg_8h >> 0x15 & 0xf;\n    var_24h = (arg_8h >> 0x19) + 0x7bc;\n    fcn.004064f3(&var_24h);\n    return;\n}\n",
        "token_count": 233
    },
    "00403940": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403940(uint arg_8h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    char cVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *extraout_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    uint *in_FS_OFFSET;\n    uint var_1024h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411c14();\n    fcn.00411c40();\n    *(unaff_EBP + -0x24) = 0x5c;\n    iVar4 = fcn.0041320e(*(unaff_EBP + 8), 0x5c);\n    uVar9 = 0;\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, unaff_EBP + -0x1024, 0x800);\n        puVar5 = fcn.004035ae(unaff_EBP + -0x1024);\n        uVar6 = *(unaff_EBP + 8);\n        *puVar5 = 0;\n        fcn.00405bf7(unaff_EBP + -0x1024, uVar6, 0x800);\n    }\n    else {\n        fcn.00405c1f(unaff_EBP + -0x1024, *(unaff_EBP + 8), 0x800);\n    }\n    fcn.00401a0d();\n    *(unaff_EBP + -4) = 0;\n    cVar3 = fcn.00401d7b(unaff_EBP + -0x1024, 4);\n    if (cVar3 != '\\0') {\n        iVar4 = -1;\n        *(unaff_EBP + 0xb) = 0;\n        *(unaff_EBP + -0x10) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = 0;\n        do {\n            if (iVar4 != -1) goto code_r0x00403b1c;\n            uVar6 = fcn.004020fb();\n            *(unaff_EBP + -0x14) = uVar6;\n            iVar7 = fcn.00401f1d();\n            *(unaff_EBP + -0x18) = iVar7;\n            iVar4 = 0;\n            *(unaff_EBP + -0x20) = iVar7 + -0x10;\n            if (-1 < iVar7 + -0x10) {\n                do {\n                    if ((*(unaff_EBP + -0x4048 + iVar4) == '*') && (*(unaff_EBP + -0x4047 + iVar4) == '*')) {\n                        iVar7 = fcn.00418390(unaff_EBP + -0x4046 + iVar4, 0x425310, 0xb);\n                        if (iVar7 != 0) {\n                            iVar7 = *(unaff_EBP + -0x18);\n                            goto code_r0x00403a5f;\n                        }\ncode_r0x00403adb:\n                        iVar4 = iVar4 + *(unaff_EBP + -0x14);\n                        *(unaff_EBP + -0x10) = iVar4;\n                        goto code_r0x00403aeb;\n                    }\ncode_r0x00403a5f:\n                    if ((((*(unaff_EBP + -0x4048 + iVar4) == 0x2a) &&\n                         (arg_8h_00 = unaff_EBP + -0x4044 + iVar4,  *(arg_8h_00 + -2) == 0x2a)) &&\n                        (iVar4 <= iVar7 + -0x20)) &&\n                       (iVar7 = fcn.0041826c(arg_8h_00, L\"*messages***\", 0xb),  iVar7 == 0)) {\n                        *(unaff_EBP + 0xb) = 1;\n                        goto code_r0x00403adb;\n                    }\n                    if (((*(unaff_EBP + -0x4048 + iVar4) == 'R') && (*(unaff_EBP + -0x4047 + iVar4) == 'a')) &&\n                       (iVar7 = fcn.00418390(unaff_EBP + -0x4046 + iVar4, 0x42533c, 4),  iVar7 == 0))\n                    goto code_r0x00403c2c;\n                    iVar4 = iVar4 + 1;\n                    if (*(unaff_EBP + -0x20) < iVar4) break;\n                    iVar7 = *(unaff_EBP + -0x18);\n                } while( true );\n            }\n            iVar4 = *(unaff_EBP + -0x10);\ncode_r0x00403aeb:\n            fcn.00401ff0();\n            uVar8 = *(unaff_EBP + -0x1c) + 1;\n            *(unaff_EBP + -0x1c) = uVar8;\n        } while (uVar8 < 0x100);\n        if (iVar4 != -1) {\ncode_r0x00403b1c:\n            fcn.00401ff0(unaff_EBP + -0x1024, iVar4 >> 0x1f, 0);\n            iVar4 = fcn.0041837b(0x80002);\n            *extraout_ECX = iVar4;\n            if (iVar4 != 0) {\n                uVar8 = fcn.00401f1d(iVar4, 0x80000);\n                cVar3 = *(unaff_EBP + 0xb);\n                extraout_ECX[1] = uVar8;\n                if (cVar3 == '\\0') {\n                    iVar4 = fcn.0041837b(uVar8 * 2 + 2);\n                    if (iVar4 == 0) goto code_r0x00403c2c;\n                    *(extraout_ECX[1] + *extraout_ECX) = 0;\n                    fcn.00406b87(*extraout_ECX, iVar4, extraout_ECX[1] + 1);\n                    fcn.00416e9e(*extraout_ECX);\n                    *extraout_ECX = iVar4;\n                }\n                else {\n                    extraout_ECX[1] = uVar8 >> 1;\n                }\n                iVar4 = 0x40000;\n                if (extraout_ECX[1] < 0x40001) {\n                    iVar4 = extraout_ECX[1];\n                }\n                *(*extraout_ECX + iVar4 * 2) = 0;\n                iVar4 = 0;\n                if (extraout_ECX[1] != 0) {\n                    do {\n                        iVar7 = *extraout_ECX;\n                        iVar10 = *(iVar7 + uVar9 * 2);\n                        uVar8 = uVar9 + 1;\n                        if (iVar10 == 0) break;\n                        if (iVar10 == *(unaff_EBP + -0x24)) {\n                            iVar1 = *(iVar7 + uVar8 * 2);\n                            if (iVar1 == 0x22) {\n                                uVar2 = 0x22;\n                            }\n                            else if (iVar1 == 0x5c) {\n                                uVar2 = 0x5c;\n                            }\n                            else if (iVar1 == 0x6e) {\n                                uVar2 = 10;\n                            }\n                            else if (iVar1 == 0x72) {\n                                uVar2 = 0xd;\n                            }\n                            else {\n                                if (iVar1 != 0x74) goto code_r0x00403c14;\n                                uVar2 = 9;\n                            }\n                            *(iVar7 + iVar4 * 2) = uVar2;\n                            uVar8 = uVar9 + 2;\n                        }\n                        else {\n                            if ((iVar10 == 0xd) || (iVar10 == 10)) {\n                                iVar10 = 0xc;\n                            }\ncode_r0x00403c14:\n                            *(iVar7 + iVar4 * 2) = iVar10;\n                        }\n                        iVar4 = iVar4 + 1;\n                        uVar9 = uVar8;\n                    } while (uVar8 < extraout_ECX[1]);\n                }\n                *(*extraout_ECX + iVar4 * 2) = 0;\n                extraout_ECX[1] = iVar4;\n            }\n        }\n    }\ncode_r0x00403c2c:\n    fcn.00401a43();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2124
    },
    "004096df": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004096df(int32_t *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, int32_t param_5, \n                 uint32_t *param_6, uint32_t *param_7)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint *puVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    uint uVar20;\n    uint32_t uStack1492;\n    uint32_t *puStack1488;\n    uint32_t uStack1484;\n    uint32_t uStack1480;\n    uint32_t uStack1476;\n    uint uStack1472;\n    uint32_t uStack1468;\n    uint32_t uStack1456;\n    int32_t iStack1452;\n    uint32_t uStack1440;\n    uint32_t *puStack1436;\n    uint32_t auStack1420 [17];\n    uint32_t auStack1352 [17];\n    uint32_t auStack1284 [16];\n    uint32_t auStack1220 [17];\n    uint32_t auStack1152 [288];\n    \n    uVar17 = 0x10;\n    if (param_2 < 0x101) {\n        uStack1440 = 0x10;\n    }\n    else {\n        uStack1440 = param_1[0x100];\n    }\n    uVar20 = 0;\n    fcn.00412c70(auStack1420, 0, 0x44);\n    piVar6 = param_1;\n    uVar10 = param_2;\n    do {\n        iVar19 = *piVar6;\n        piVar6 = piVar6 + 1;\n        auStack1420[iVar19] = auStack1420[iVar19] + 1;\n        uVar10 = uVar10 - 1;\n    } while (uVar10 != 0);\n    if (auStack1420[0] == param_2) {\n        *param_6 = 0;\n        *param_7 = 0;\n        uVar20 = 0;\n    }\n    else {\n        uStack1476 = 1;\n        do {\n            if (auStack1420[uStack1476] != 0) break;\n            uStack1476 = uStack1476 + 1;\n        } while (uStack1476 < 0x11);\n        if (*param_7 < uStack1476) {\n            *param_7 = uStack1476;\n        }\n        do {\n            if (auStack1420[uVar17] != 0) break;\n            uVar17 = uVar17 - 1;\n        } while (uVar17 != 0);\n        if (uVar17 <= *param_7 && *param_7 != uVar17) {\n            *param_7 = uVar17;\n        }\n        iVar19 = 1 << (uStack1476 & 0x1f);\n        for (uVar10 = uStack1476; uVar10 < uVar17; uVar10 = uVar10 + 1) {\n            if (iVar19 - auStack1420[uVar10] < 0) {\n                return uVar20;\n            }\n            iVar19 = (iVar19 - auStack1420[uVar10]) * 2;\n        }\n        iVar19 = iVar19 - auStack1420[uVar17];\n        if (-1 < iVar19) {\n            auStack1420[uVar17] = auStack1420[uVar17] + iVar19;\n            iVar7 = 0;\n            auStack1352[1] = 0;\n            iVar18 = uVar17 - 1;\n            if (iVar18 != 0) {\n                iVar5 = 0;\n                do {\n                    iVar7 = iVar7 + *(auStack1420 + iVar5 + 4);\n                    *(auStack1352 + iVar5 + 8) = iVar7;\n                    iVar18 = iVar18 + -1;\n                    iVar5 = iVar5 + 4;\n                } while (iVar18 != 0);\n            }\n            fcn.00412c70(auStack1152, 0, 0x480);\n            uVar10 = 0;\n            do {\n                iVar7 = *param_1;\n                param_1 = param_1 + 1;\n                if (iVar7 != 0) {\n                    uVar11 = auStack1352[iVar7];\n                    auStack1152[uVar11] = uVar10;\n                    auStack1352[iVar7] = uVar11 + 1;\n                }\n                uVar10 = uVar10 + 1;\n            } while (uVar10 < param_2);\n            puVar8 = auStack1152;\n            iVar7 = -1;\n            iStack1452 = -1;\n            uVar10 = auStack1352[uVar17];\n            uVar11 = 0;\n            uStack1492 = 0;\n            auStack1352[0] = 0;\n            auStack1284[0] = 0;\n            uStack1480 = 0;\n            auStack1220[1] = 0;\n            uStack1456 = 0;\n            uStack1484 = 0;\n            if (uStack1476 <= uVar17) {\n                puVar3 = auStack1420 + uStack1476;\n                puStack1436 = param_6;\n                puStack1488 = puVar8;\n                do {\n                    uVar14 = *puVar3;\n                    while (uVar14 != 0) {\n                        uVar4 = uVar14 - 1;\n                        iVar18 = auStack1284[iVar7 + 1] + uVar11;\n                        while (iVar18 < uStack1476) {\n                            uVar11 = uVar11 + auStack1284[iVar7 + 1];\n                            iStack1452 = iVar7 + 1;\n                            uStack1484 = uVar17 - uVar11;\n                            if (*param_7 < uVar17 - uVar11) {\n                                uStack1484 = *param_7;\n                            }\n                            uVar13 = uStack1476 - uVar11;\n                            uVar15 = 1 << (uVar13 & 0x1f);\n                            if (uVar14 < uVar15) {\n                                iVar18 = uVar15 + (-1 - uVar4);\n                                puVar8 = puVar3;\n                                while (uVar13 = uVar13 + 1,  uVar13 < uStack1484) {\n                                    uVar15 = iVar18 * 2;\n                                    puVar8 = puVar8 + 1;\n                                    if (uVar15 < *puVar8 || uVar15 == *puVar8) break;\n                                    iVar18 = uVar15 - *puVar8;\n                                }\n                            }\n                            if ((uStack1440 < uVar11 + uVar13) && (uVar11 < uStack1440)) {\n                                uVar13 = uStack1440 - uVar11;\n                            }\n                            uStack1484 = 1 << (uVar13 & 0x1f);\n                            auStack1284[iVar7 + 2] = uVar13;\n                            iVar5 = fcn.0041837b(uStack1484 * 8 + 8);\n                            if (iVar5 == 0) {\n                                if (iStack1452 != 0) {\n                                    fcn.00409b7a(auStack1220[1]);\n                                }\n                                return 3;\n                            }\n                            uStack1456 = iVar5 + 8;\n                            auStack1220[iVar7 + 2] = uStack1456;\n                            *puStack1436 = uStack1456;\n                            *(iVar5 + 4) = 0;\n                            if (iStack1452 != 0) {\n                                auStack1352[iStack1452] = uStack1492;\n                                uVar12 = ((1 << (uVar11 & 0x1f)) - 1U & uStack1492) >>\n                                         (uVar11 - auStack1284[iStack1452] & 0x1f);\n                                uVar15 = auStack1220[iStack1452];\n                                uStack1472._2_2_ = uStack1472 >> 0x10;\n                                uStack1472 = CONCAT31(CONCAT21(uStack1472._2_2_, *(auStack1284 + iStack1452)), \n                                                      uVar13 + 0x20);\n                                *(uVar15 + uVar12 * 8) = uStack1472;\n                                *(uVar15 + 4 + uVar12 * 8) = uStack1456;\n                                uStack1468 = uStack1456;\n                            }\n                            puVar8 = puStack1488;\n                            iVar7 = iStack1452;\n                            uStack1480 = uVar11;\n                            puStack1436 = iVar5 + 4;\n                            iVar18 = uVar11 + uVar13;\n                        }\n                        cVar1 = uStack1476;\n                        uVar9 = uVar11;\n                        if (puVar8 < auStack1152 + uVar10) {\n                            uVar14 = *puVar8;\n                            if (uVar14 < param_3) {\n                                uStack1472._0_1_ = (uVar14 < 0x100) + '\\x1f';\n                                uVar2 = *puStack1488;\n                            }\n                            else {\n                                uStack1472._0_1_ = *((uVar14 - param_3) + param_5);\n                                uVar2 = *(param_4 + (uVar14 - param_3) * 2);\n                            }\n                            puStack1488 = puStack1488 + 1;\n                            uStack1468 = uStack1468 & 0xffff0000 | uVar2;\n                        }\n                        else {\n                            uStack1472._0_1_ = 'c';\n                        }\n                        uStack1472 = CONCAT31(CONCAT21(uStack1472._2_2_, cVar1 - uVar9), uStack1472);\n                        iVar18 = 1 << (cVar1 - uVar9 & 0x1f);\n                        uVar14 = uStack1492 >> (uVar9 & 0x1f);\n                        if (uVar14 < uStack1484) {\n                            puVar16 = uStack1456 + uVar14 * 8;\n                            do {\n                                uVar14 = uVar14 + iVar18;\n                                *puVar16 = uStack1472;\n                                puVar16[1] = uStack1468;\n                                puVar16 = puVar16 + iVar18 * 2;\n                                uVar11 = uStack1480;\n                                iVar7 = iStack1452;\n                            } while (uVar14 < uStack1484);\n                        }\n                        uVar14 = 1 << (cVar1 - 1U & 0x1f);\n                        while ((uStack1492 & uVar14) != 0) {\n                            uStack1492 = uStack1492 ^ uVar14;\n                            uVar14 = uVar14 >> 1;\n                        }\n                        uStack1492 = uStack1492 ^ uVar14;\n                        uVar14 = uVar4;\n                        puVar8 = puStack1488;\n                        if (((1 << (uVar11 & 0x1f)) - 1U & uStack1492) != auStack1352[iVar7]) {\n                            do {\n                                uVar11 = uVar11 - auStack1284[iVar7];\n                                iVar7 = iVar7 + -1;\n                                uStack1480 = uVar11;\n                                iStack1452 = iVar7;\n                            } while (((1 << (uVar11 & 0x1f)) - 1U & uStack1492) != auStack1352[iVar7]);\n                        }\n                    }\n                    uStack1476 = uStack1476 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (uStack1476 <= uVar17);\n            }\n            uVar20 = 1;\n            *param_7 = auStack1284[1];\n            if ((iVar19 == 0) || (uVar17 == 1)) {\n                uVar20 = 0;\n            }\n        }\n    }\n    return uVar20;\n}\n",
        "token_count": 2819
    },
    "00401f1d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401f1d(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t nNumberOfBytesToRead;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EBP;\n    \n    uVar4 = 0;\n    if (*(param_1 + 0x11) != '\\0') {\n        (**(*param_1 + 0x14))();\n    }\n    do {\n        iVar2 = fcn.00401c63(param_2, param_3);\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n        param_1[0x408] = 2;\n        if (*(param_1 + 5) == '\\0') {\n            return -1;\n        }\n        if (*(param_1 + 0x11) != '\\0') {\n            iVar2 = 0;\n            if (param_3 == 0) {\n                return 0;\n            }\n            do {\n                (**(*param_1 + 0x10))(uVar4 + unaff_EBP, unaff_EBX + CARRY4(uVar4, unaff_EBP), 0);\n                nNumberOfBytesToRead = param_3 - uVar4;\n                if (0x1ff < nNumberOfBytesToRead) {\n                    nNumberOfBytesToRead = 0x200;\n                }\n                iVar3 = fcn.00401c63(param_2, nNumberOfBytesToRead);\n                if (iVar3 == -1) {\n                    iVar3 = 0x200;\n                }\n                uVar4 = uVar4 + 0x200;\n                iVar2 = iVar2 + iVar3;\n            } while (uVar4 < param_3);\n            return iVar2;\n        }\n    } while ((param_1[3] == 0) && (cVar1 = fcn.0040178c(),  cVar1 != '\\0'));\n    fcn.0040189d(param_1 + 0x1e);\n    return -1;\n}\n",
        "token_count": 482
    },
    "004023ea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004023ea(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004023fe(param_1);\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 60
    },
    "004023fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004023fe(uint lpFileName)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_1000h;\n    uint uStackY32;\n    uint *puStackY28;\n    \n    fcn.00411c40();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n    if (iVar2 == -1) {\n        puStackY28 = 0x402430;\n        cVar1 = fcn.00403283(lpFileName, &fcn.004023fe::var_1000h, 0x800);\n        if (cVar1 != '\\0') {\n            puStackY28 = &fcn.004023fe::var_1000h;\n            uStackY32 = 0x402441;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 203
    },
    "0040245b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040245b(uint32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0xffffffff) || ((param_1 & 0x10) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "0040272c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040272c(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1004) != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(*(param_1 + 0x1004));\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040273f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040273f(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    *(param_2 + 0x1044) = 0;\n    cVar1 = fcn.0040348c(param_1);\n    if ((cVar1 == '\\0') && (iVar3 = fcn.0040286d(0xffffffff, unaff_retaddr, param_2),  iVar3 != -1)) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        *(param_2 + 0x1040) = 0;\n        uVar2 = fcn.0040245b(*(param_2 + 0x1008));\n        *(param_2 + 0x100c) = uVar2;\n        uVar2 = fcn.00402473(*(param_2 + 0x1008));\n        *(param_2 + 0x100d) = uVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 247
    },
    "0040b781": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040b781(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_2ch;\n    uchar var_28h [2];\n    uchar var_26h [2];\n    uchar var_24h [2];\n    uchar var_22h [2];\n    uchar var_20h [4];\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h [2];\n    uchar var_eh [2];\n    uchar var_ch [2];\n    uchar var_ah [4];\n    uint var_6h;\n    \n    iVar1 = fcn.00409192(&var_2ch, 0x2a);\n    if (iVar1 == 0) {\n        uVar2 = 0x33;\n    }\n    else {\n        *0x4472d8 = var_2ch;\n        *0x4472d9 = var_2ch._1_1_;\n        *0x4472da = var_2ch._2_1_;\n        *0x4472db = var_2ch._3_1_;\n        *0x4472dc = fcn.0040904d(var_28h);\n        *0x4472de = fcn.0040904d(var_26h);\n        *0x4472e0 = fcn.0040904d(var_24h);\n        *0x4472e2 = fcn.0040904d(var_22h);\n        *0x4472e4 = fcn.00409028(var_20h);\n        *0x4472e8 = fcn.00409028(&var_1ch);\n        *0x4472ec = 0;\n        *0x4472f0 = fcn.00409028(&var_18h);\n        *0x4472f4 = 0;\n        *0x4472f8 = fcn.0040904d(&var_14h);\n        *0x4472fa = fcn.0040904d(&var_14h + 2);\n        *0x4472fc = fcn.0040904d(var_10h);\n        *0x4472fe = fcn.0040904d(var_eh);\n        *0x447300 = fcn.0040904d(var_ch);\n        *0x447304 = fcn.00409028(var_ah);\n        *0x447308 = fcn.00409028(&var_6h);\n        *0x44730c = 0;\n        if (((*0x4472e8 == -1) && (*0x4472ec == 0)) || ((*0x4472f0 == -1 && (*0x4472f4 == 0)))) {\n            *0x4484f4 = 1;\n        }\n        if (*0x4472d9 < 0x12) {\n            uVar3 = *0x4472d9;\n        }\n        else {\n            uVar3 = 0x12;\n        }\n        *(*0x437248 + 0x1c) = uVar3;\n        *(*0x437248 + 0x20) = *0x4472fe;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 749
    },
    "00417fa7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417fa7(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.004170c6(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x427044;\n        }\n        uVar3 = fcn.0041801b(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.004187ff(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 313
    },
    "00420eeb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420eeb(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00420e5c:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    pcVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if ((cVar1 == '\\0') || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar5 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0041acc2();\n                    uVar6 = 0x22;\n                    goto code_r0x00420e7c;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00420e5c;\n    puVar2 = fcn.0041acc2();\n    uVar6 = 0x16;\ncode_r0x00420e7c:\n    *puVar2 = uVar6;\n    fcn.0041aba1();\n    return uVar6;\n}\n",
        "token_count": 619
    },
    "00406c66": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nuint32_t fcn.00406c66(uint8_t *param_1, uint16_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar3;\n    uint32_t uVar2;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    uVar2 = 1;\n    iVar4 = param_3 + -1;\n    do {\n        if (*param_1 == 0) {\ncode_r0x00406dbe:\n            *param_2 = 0;\n            return uVar2 & 0xff;\n        }\n        uVar1 = *param_1;\n        puVar5 = param_1 + 1;\n        if (0x7f < uVar1) {\n            if ((uVar1 & 0xe0) == 0xc0) {\n                if ((*puVar5 & 0xc0) == 0x80) {\n                    uVar1 = (uVar1 & 0x1f) << 6 | *puVar5 & 0x3fU;\n                    puVar5 = param_1 + 2;\n                    goto code_r0x00406d66;\n                }\n            }\n            else if ((uVar1 & 0xf0) == 0xe0) {\n                if (((*puVar5 & 0xc0) == 0x80) && ((param_1[2] & 0xc0) == 0x80)) {\n                    uVar1 = (*puVar5 & 0x3fU | (uVar1 & 0xf) << 6) << 6 | param_1[2] & 0x3fU;\n                    puVar5 = param_1 + 3;\n                    goto code_r0x00406d66;\n                }\n            }\n            else if ((((uVar1 & 0xf8) == 0xf0) && ((*puVar5 & 0xc0) == 0x80)) && ((param_1[2] & 0xc0) == 0x80)) {\n                uVar2 = CONCAT11(param_1[3], uVar2);\n                uVar3 = uVar2 >> 8;\n                if ((uVar3 & 0xc0) == 0x80) {\n                    uVar1 = ((*puVar5 & 0x3fU | (uVar1 & 7) << 6) << 6 | param_1[2] & 0x3fU) << 6 | uVar3 & 0x3fU;\n                    puVar5 = param_1 + 4;\n                    goto code_r0x00406d66;\n                }\n            }\n            uVar2 = 0;\n            goto code_r0x00406dbe;\n        }\ncode_r0x00406d66:\n        if (iVar4 + -1 < 0) goto code_r0x00406dbe;\n        param_1 = puVar5;\n        if (uVar1 < 0x10000) {\n            *param_2 = uVar1;\n            param_2 = param_2 + 1;\n            iVar4 = iVar4 + -1;\n        }\n        else {\n            iVar4 = iVar4 + -2;\n            if (iVar4 < 0) goto code_r0x00406dbe;\n            if (uVar1 < 0x110000) {\n                *param_2 = (uVar1 - 0x10000 >> 10) + 0xd800;\n                param_2[1] = (uVar1 & 0x3ff) + 0xdc00;\n                param_2 = param_2 + 2;\n            }\n            else {\n                uVar2 = 0;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 838
    },
    "0040c6fa": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0040c6fa(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint unaff_ESI;\n    uint in_stack_fffffff4;\n    \n    uVar2 = 0xffffffff;\n    uVar1 = *(param_3 + 0xa0);\n    if (uVar1 != 0xffffffff) {\n        if (uVar1 + param_2 < 0x41) {\n            fcn.00413490(uVar1 + param_3, param_1, param_2);\n        }\n        else {\n            if (uVar1 < 0x41) {\n                fcn.004056fc(param_3 + 0x40);\n                fcn.0040572d(param_3 + 0x40, param_3, *(param_3 + 0xa0));\n                in_stack_fffffff4 = unaff_ESI;\n            }\n            fcn.0040572d(param_3 + 0x40, in_stack_fffffff4, param_2);\n        }\n        *(param_3 + 0xa0) = *(param_3 + 0xa0) + param_2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 288
    },
    "00408fa5": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong fcn.00408fa5(uint8_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    \n    uVar1 = *(param_1 + 6) * 0x100;\n    uVar2 = uVar1 + param_1[5];\n    uVar3 = uVar2 * 0x100;\n    uVar4 = uVar3 + param_1[4];\n    uVar5 = uVar4 * 0x100;\n    uVar6 = uVar5 + param_1[3];\n    uVar7 = uVar6 * 0x100;\n    uVar8 = uVar7 + param_1[2];\n    uVar9 = uVar8 * 0x100;\n    uVar10 = uVar9 + param_1[1];\n    uVar11 = uVar10 * 0x100;\n    return CONCAT44(((((((((((CARRY4(param_1[7] << 8, param_1[6]) * 0x100 + CARRY4(uVar1, param_1[5])) * 0x100 |\n                            uVar2 >> 0x18) + CARRY4(uVar3, param_1[4])) * 0x100 | uVar4 >> 0x18) +\n                         CARRY4(uVar5, param_1[3])) * 0x100 | uVar6 >> 0x18) + CARRY4(uVar7, param_1[2])) * 0x100 |\n                      uVar8 >> 0x18) + CARRY4(uVar9, param_1[1])) * 0x100 | uVar10 >> 0x18) + CARRY4(*param_1, uVar11), \n                    *param_1 + uVar11);\n}\n",
        "token_count": 475
    },
    "00409028": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.00409028(uint *param_1)\n\n{\n    return *param_1;\n}\n",
        "token_count": 23
    },
    "0040904d": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort fcn.0040904d(ushort *param_1)\n\n{\n    return *param_1;\n}\n",
        "token_count": 25
    },
    "00404049": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00404049(void)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar uStack776;\n    uint var_303h;\n    uint var_2ebh;\n    uint var_29ch;\n    uint var_23dh;\n    uint var_225h;\n    uint var_216h;\n    uint var_205h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = 1;\n    uVar5 = uVar6;\n    do {\n        (&uStack776)[var_4h] = uVar5;\n        *(&var_205h + var_4h) = uVar5;\n        *(&var_104h + uVar5) = var_4h;\n        var_4h = var_4h + 1;\n        uVar5 = uVar5 ^ -((uVar5 & 0x80) != 0) & 0x11b ^ uVar5 * 2;\n    } while (uVar5 != 1);\n    uVar5 = 0;\n    do {\n        *(uVar5 + 0x433c80) = uVar6;\n        uVar6 = uVar6 * 2 ^ -((uVar6 & 0x80) != 0) & 0x11b;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0x1e);\n    uVar5 = 0;\n    do {\n        if (uVar5 == '\\0') {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = *(&var_205h - *(&var_104h + (uVar5 & 0xff)));\n        }\n        uVar6 = uVar6 ^ (((uVar6 * 2 ^ uVar6) * 2 ^ uVar6) * 2 ^ uVar6) * 2;\n        uVar6 = (uVar6 ^ 0x6300) >> 8 ^ uVar6;\n        cVar3 = uVar6;\n        *(uVar5 + 0x433a80) = cVar3;\n        *(uVar5 * 4 + 0x4348a1) = cVar3;\n        *(uVar5 * 4 + 0x4348a0) = cVar3;\n        *(uVar5 * 4 + 0x4344a3) = cVar3;\n        *(uVar5 * 4 + 0x4344a0) = cVar3;\n        *(uVar5 * 4 + 0x4340a3) = cVar3;\n        *(uVar5 * 4 + 0x4340a2) = cVar3;\n        *(uVar5 * 4 + 0x433ca2) = cVar3;\n        *(uVar5 * 4 + 0x433ca1) = cVar3;\n        if (cVar3 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_2ebh + *(&var_104h + (uVar6 & 0xff)));\n        }\n        *(uVar5 * 4 + 0x4348a3) = uVar2;\n        *(uVar5 * 4 + 0x4344a2) = uVar2;\n        *(uVar5 * 4 + 0x4340a1) = uVar2;\n        *(uVar5 * 4 + 0x433ca0) = uVar2;\n        if (cVar3 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_303h + *(&var_104h + (uVar6 & 0xff)));\n        }\n        uVar6 = uVar5 & 0xff;\n        *(uVar5 * 4 + 0x4348a2) = uVar2;\n        *(uVar5 * 4 + 0x4344a1) = uVar2;\n        *(uVar5 * 4 + 0x4340a0) = uVar2;\n        iVar1 = ((uVar6 << 3 ^ uVar6) << 2 ^ uVar6) * 2;\n        *(uVar5 * 4 + 0x433ca3) = uVar2;\n        if ((iVar1 >> 8 ^ iVar1) == 5) {\n            uVar4 = 0;\n        }\n        else {\n            uVar6 = ((uVar6 << 3 ^ uVar6) << 2 ^ uVar6) * 2;\n            uVar4 = *(&var_205h - *(&var_104h + (uVar6 >> 8 ^ uVar6 & 0xff ^ 5)));\n        }\n        *(uVar5 + 0x433b80) = uVar4;\n        if (uVar4 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_29ch + *(&var_104h + uVar4));\n        }\n        uVar6 = uVar4;\n        *(uVar5 * 4 + 0x4358a2) = uVar2;\n        *(uVar5 * 4 + 0x4354a1) = uVar2;\n        *(uVar5 * 4 + 0x4350a0) = uVar2;\n        *(uVar5 * 4 + 0x434ca3) = uVar2;\n        *(uVar6 * 4 + 0x4368a2) = uVar2;\n        *(uVar6 * 4 + 0x4364a1) = uVar2;\n        *(uVar6 * 4 + 0x4360a0) = uVar2;\n        *(uVar6 * 4 + 0x435ca3) = uVar2;\n        if (uVar4 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_23dh + *(&var_104h + uVar6));\n        }\n        *(uVar5 * 4 + 0x4358a0) = uVar2;\n        *(uVar5 * 4 + 0x4354a3) = uVar2;\n        *(uVar5 * 4 + 0x4350a2) = uVar2;\n        *(uVar5 * 4 + 0x434ca1) = uVar2;\n        *(uVar6 * 4 + 0x4368a0) = uVar2;\n        *(uVar6 * 4 + 0x4364a3) = uVar2;\n        *(uVar6 * 4 + 0x4360a2) = uVar2;\n        *(uVar6 * 4 + 0x435ca1) = uVar2;\n        if (uVar4 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_216h + *(&var_104h + uVar6));\n        }\n        *(uVar5 * 4 + 0x4358a1) = uVar2;\n        *(uVar5 * 4 + 0x4354a0) = uVar2;\n        *(uVar5 * 4 + 0x4350a3) = uVar2;\n        *(uVar5 * 4 + 0x434ca2) = uVar2;\n        *(uVar6 * 4 + 0x4368a1) = uVar2;\n        *(uVar6 * 4 + 0x4364a0) = uVar2;\n        *(uVar6 * 4 + 0x4360a3) = uVar2;\n        *(uVar6 * 4 + 0x435ca2) = uVar2;\n        if (uVar4 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(&var_225h + *(&var_104h + uVar6));\n        }\n        *(uVar5 * 4 + 0x4358a3) = uVar2;\n        *(uVar5 * 4 + 0x4354a2) = uVar2;\n        *(uVar5 * 4 + 0x4350a1) = uVar2;\n        *(uVar5 * 4 + 0x434ca0) = uVar2;\n        uVar5 = uVar5 + 1;\n        *(uVar6 * 4 + 0x4368a3) = uVar2;\n        *(uVar6 * 4 + 0x4364a2) = uVar2;\n        *(uVar6 * 4 + 0x4360a1) = uVar2;\n        *(uVar6 * 4 + 0x435ca0) = uVar2;\n    } while (uVar5 < 0x100);\n    return;\n}\n",
        "token_count": 2062
    },
    "00408a67": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00408a67(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x05')) && (param_1[3] == '\\x06')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "0040e37a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040e3ee)\n\nuint32_t __cdecl fcn.0040e37a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int64_t iVar7;\n    uint var_1030h;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411c14();\n    fcn.00411c40();\n    fcn.00401a0d();\n    uVar6 = 0;\n    *(unaff_EBP + -4) = 0;\n    cVar2 = fcn.00401d7b(*(unaff_EBP + 0xc), 0);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.0041837b(0x10000);\n        if (iVar3 != 0) {\n            fcn.00401ff0(0, 0, 2);\n            iVar7 = fcn.004020fb();\n            if (iVar7 < 0x10000) {\n                iVar9 = 0;\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = iVar7 - 0x10000;\n                iVar9 = (iVar7 >> 0x20) - (iVar7 < 0x10000);\n            }\n            fcn.00401ff0(iVar8, iVar9, 0);\n            uVar4 = fcn.00401f1d(iVar3, 0x10000);\n            *(unaff_EBP + 0xc) = uVar4;\n            fcn.00401af3();\n            iVar9 = *(unaff_EBP + 0xc);\n            for (iVar8 = iVar9 + -4; 0 < iVar8; iVar8 = iVar8 + -1) {\n                if ((((*(iVar8 + iVar3) == 'P') && (*(iVar8 + 1 + iVar3) == 'K')) && (*(iVar8 + 2 + iVar3) == '\\x05'))\n                   && (((*(iVar8 + 3 + iVar3) == '\\x06' && (iVar8 < iVar9 + -0x16)) &&\n                       (uVar6 = *(iVar8 + 0x14 + iVar3),  uVar6 != 0)))) {\n                    uVar5 = (iVar9 - iVar8) - 0x16;\n                    if (uVar5 <= uVar6) {\n                        uVar6 = uVar5;\n                    }\n                    **(unaff_EBP + 0x14) = uVar6;\n                    iVar9 = fcn.0041837b(uVar6 * 2 + 2);\n                    **(unaff_EBP + 0x10) = iVar9;\n                    if (iVar9 == 0) {\n                        **(unaff_EBP + 0x14) = 0;\n                    }\n                    else {\n                        piVar1 = *(unaff_EBP + 0x14);\n                        fcn.00406b87(iVar3 + 0x16 + iVar8, iVar9, *piVar1 + 1);\n                        *(**(unaff_EBP + 0x10) + *piVar1 * 2) = 0;\n                    }\n                    break;\n                }\n            }\n            fcn.00416e9e(iVar3);\n        }\n        uVar6 = 1;\n    }\n    uVar5 = fcn.00401a43();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 892
    },
    "00408a42": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.00408a42(char *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 'P') && (param_1[1] == 'K')) && (param_1[2] == '\\x06')) && (param_1[3] == '\\x06')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "0041252b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041256c)\n// WARNING: Removing unreachable block (ram,0x0041261c)\n// WARNING: Removing unreachable block (ram,0x004125a6)\n\nuint fcn.0041252b(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x460fe8 = 0;\n    *0x42f0bc = *0x42f0bc | 1;\n    iVar4 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar3 = *0x42f0bc;\n    if (iVar4 != 0) {\n        var_10h = 0;\n        *0x42f0bc = *0x42f0bc | 2;\n        *0x460fe8 = 1;\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar5 = *puVar2 & 0xfff3ff0,  uVar5 == 0x106c0 || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n             ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))) {\n            *0x460fec = *0x460fec | 1;\n        }\n        if (6 < *piVar1) {\n            iVar4 = cpuid_Extended_Feature_Enumeration_info(7);\n            var_10h = *(iVar4 + 4);\n            if ((var_10h & 0x200) != 0) {\n                *0x460fec = *0x460fec | 2;\n            }\n        }\n        if ((uVar6 & 0x100000) != 0) {\n            *0x42f0bc = uVar3 | 6;\n            *0x460fe8 = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x42f0bc = uVar3 | 0xe;\n                *0x460fe8 = 3;\n                if ((var_10h & 0x20) != 0) {\n                    *0x42f0bc = uVar3 | 0x2e;\n                    *0x460fe8 = 5;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 763
    },
    "00402c0f": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.00402c0f(int16_t *param_1, int16_t *param_2, uint param_3)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int16_t *piVar6;\n    int16_t *arg_8h;\n    int16_t *piVar7;\n    int16_t *arg_8h_00;\n    \n    piVar6 = param_1;\n    do {\n        while( true ) {\n            iVar2 = fcn.00402d5f(*param_2, param_3);\n            piVar7 = param_1;\n            iVar3 = fcn.00402d5f();\n            arg_8h = piVar6 + 1;\n            if (iVar3 == 0) {\n                return iVar2 == 0;\n            }\n            if (iVar3 == 0x2a) {\n                if (*arg_8h == 0) {\n                    return true;\n                }\n                if (*arg_8h == 0x2e) {\n                    arg_8h_00 = piVar6 + 2;\n                    if ((*arg_8h_00 == 0x2a) && (piVar6[3] == 0)) {\n                        return true;\n                    }\n                    piVar4 = fcn.0041320e(param_2, 0x2e);\n                    if (piVar6[2] == 0) {\n                        if ((piVar4 != NULL) && (piVar4[1] != 0)) {\n                            return false;\n                        }\n                        return true;\n                    }\n                    if ((piVar4 != NULL) && (iVar5 = fcn.004182a6(arg_8h, 0x4252c0),  param_2 = piVar4,  iVar5 == 0)) {\n                        iVar5 = fcn.0041320e(piVar4 + 1, 0x2e);\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.00402d3e(arg_8h_00, piVar4 + 1, unaff_EBX);\n                            return iVar5 == 0;\n                        }\n                    }\n                }\n                do {\n                    if (*param_2 == 0) {\n                        return false;\n                    }\n                    cVar1 = fcn.00402c0f(piVar7, param_2, param_3, arg_8h);\n                    param_2 = param_2 + 1;\n                } while (cVar1 == '\\0');\n                return true;\n            }\n            piVar6 = arg_8h;\n            if (iVar3 == 0x3f) break;\n            if (iVar3 == iVar2) goto code_r0x00402c7d;\n            if (iVar3 != 0x2e) {\n                return false;\n            }\n            if (((iVar2 != 0) && (iVar2 != 0x5c)) && (iVar2 != 0x2e)) {\n                return false;\n            }\n        }\n        if (iVar2 == 0) {\n            return false;\n        }\ncode_r0x00402c7d:\n        param_2 = param_2 + 1;\n    } while( true );\n}\n",
        "token_count": 733
    },
    "0040348c": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.0040348c(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (param_1 == NULL) {\n        bVar2 = false;\n    }\n    else {\n        if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n            param_1 = param_1 + 4;\n        }\n        iVar1 = fcn.004182a6(param_1, 0x4252c0);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 171
    },
    "0040572d": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.0040572d(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar auStack64 [56];\n    int32_t iStack8;\n    \n    uVar2 = *(param_1 + 0x18) & 0x3f;\n    puVar1 = param_1 + 0x18;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + param_3;\n    *(param_1 + 0x1c) = *(param_1 + 0x1c) + CARRY4(uVar3, param_3);\n    if (uVar2 + param_3 < 0x40) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = -uVar2 + 0x40;\n        fcn.00413490(param_1 + 0x20 + uVar2, param_2, uVar3);\n        fcn.00404dd1(param_1, auStack64, param_1 + 0x20, 1);\n        for (uVar2 = -uVar2 + 0x7f; uVar2 < param_3; uVar2 = uVar2 + 0x40) {\n            fcn.00404dd1();\n            uVar3 = uVar3 + 0x40;\n        }\n        uVar2 = 0;\n    }\n    if (uVar3 < param_3) {\n        fcn.00413490(param_1 + 0x20 + uVar2, iStack8 + uVar3, param_3 - uVar3);\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00403c51": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint16_t * __thiscall fcn.00403c51(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    piVar3 = *param_1;\n    iVar1 = *piVar3;\n    while( true ) {\n        if (iVar1 == 0) {\n            return NULL;\n        }\n        if ((((iVar1 == *param_2) && (iVar2 = fcn.0041826c(piVar3 + 1, param_2 + 1, 7),  iVar2 == 0)) &&\n            (piVar3[8] == 0x3d)) && (piVar3[9] == 0x22)) break;\n        while( true ) {\n            if (*piVar3 == 0) goto code_r0x00403ca7;\n            if (*piVar3 == 0xc) break;\n            piVar3 = piVar3 + 1;\n        }\n        do {\n            piVar3 = piVar3 + 1;\ncode_r0x00403ca7:\n        } while (*piVar3 == 0xc);\n        iVar1 = *piVar3;\n    }\n    return piVar3;\n}\n",
        "token_count": 283
    },
    "0040e631": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nint16_t * fcn.0040e631(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t *in_stack_00002008;\n    int16_t *in_stack_0000200c;\n    ushort *in_stack_00002010;\n    ushort *puVar6;\n    uchar *in_stack_00002014;\n    uchar *in_stack_00002018;\n    int32_t in_stack_0000201c;\n    \n    fcn.00411c40();\n    if (in_stack_00002014 != NULL) {\n        *in_stack_00002014 = 0;\n    }\n    if (in_stack_00002018 != NULL) {\n        *in_stack_00002018 = 0;\n    }\n    if ((in_stack_00002008 == NULL) || (iVar1 = *in_stack_00002008,  iVar1 == 0)) {\n        piVar2 = NULL;\n    }\n    else {\n        iVar5 = 0;\n        piVar3 = NULL;\n        do {\n            piVar2 = in_stack_00002008 + 1;\n            piVar4 = in_stack_0000200c;\n            if (iVar1 == 0x3d) {\n                if ((in_stack_00002010 == NULL) || (piVar3 != NULL)) goto code_r0x0040e6b0;\n                if (in_stack_00002014 != NULL) {\n                    *in_stack_00002014 = 1;\n                }\n            }\n            else {\n                if (iVar1 == 0xd) {\n                    piVar2 = in_stack_00002008 + 2;\n                    break;\n                }\n                if (iVar1 == 10) break;\ncode_r0x0040e6b0:\n                *in_stack_0000200c = iVar1;\n                piVar4 = in_stack_0000200c + 1;\n                in_stack_0000200c = piVar3;\n                if (in_stack_0000201c + -2 <= iVar5) {\n                    *in_stack_00002018 = 1;\n                    break;\n                }\n            }\n            iVar1 = *piVar2;\n            iVar5 = iVar5 + 1;\n            piVar3 = in_stack_0000200c;\n            in_stack_0000200c = piVar4;\n            in_stack_00002008 = piVar2;\n        } while (iVar1 != 0);\n        *piVar4 = 0;\n        if ((in_stack_00002010 != NULL) && (*in_stack_00002010 = 0,  piVar3 != NULL)) {\n            puVar6 = in_stack_00002010;\n            (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(piVar3, &stack0x00000004, 0x1000);\n            fcn.00405c1f(in_stack_00002010, &stack0xfffffff8, puVar6);\n            *piVar3 = 0;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 693
    },
    "0041cf5f": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0041cf5f(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar5 = fcn.0041acc2();\n        iVar9 = 0x16;\n        *puVar5 = 0x16;\n        fcn.0041aba1();\n    }\n    else {\n        *arg_ch = 0;\n        var_20h = NULL;\n        var_1ch = NULL;\n        var_18h = 0;\n        iVar9 = *arg_8h;\n        ppcVar11 = var_20h;\n        ppcVar4 = var_1ch;\n        while (var_20h = ppcVar11,  var_1ch = ppcVar4,  iVar9 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar9 = fcn.00420f00(*arg_8h, &var_4h);\n            if (iVar9 == 0) {\n                iVar9 = fcn.0041cc64(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar9 = fcn.0041ccfa(*arg_8h, iVar9, &var_20h);\n            }\n            if (iVar9 != 0) goto code_r0x0041cc46;\n            arg_8h = arg_8h + 1;\n            ppcVar11 = var_20h;\n            ppcVar4 = var_1ch;\n            iVar9 = *arg_8h;\n        }\n        var_8h = NULL;\n        var_4h = NULL;\n        var_ch = (ppcVar4 - ppcVar11 >> 2) + 1;\n        pcVar10 = ~-(ppcVar4 < ppcVar11) & (ppcVar4 - ppcVar11) + 3U >> 2;\n        if (pcVar10 != NULL) {\n            var_4h = NULL;\n            ppcVar8 = ppcVar11;\n            do {\n                pcVar7 = *ppcVar8;\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                var_4h = pcVar7 + var_4h + (1 - pcVar1);\n                ppcVar8 = ppcVar8 + 1;\n                var_8h = var_8h + 1;\n            } while (var_8h != pcVar10);\n        }\n        iVar6 = fcn.00419c4c(var_ch, var_4h, 1);\n        if (iVar6 == 0) {\n            iVar9 = -1;\n        }\n        else {\n            var_ch = iVar6 + var_ch * 4;\n            var_10h = var_ch;\n            if (ppcVar11 != ppcVar4) {\n                var_14h = iVar6 - ppcVar11;\n                do {\n                    var_8h = *ppcVar11;\n                    pcVar10 = var_8h + 1;\n                    do {\n                        cVar2 = *var_8h;\n                        var_8h = var_8h + 1;\n                    } while (cVar2 != '\\0');\n                    var_8h = var_8h + (1 - pcVar10);\n                    iVar9 = fcn.00420eeb(var_ch, var_4h + (var_10h - var_ch), *ppcVar11, var_8h);\n                    if (iVar9 != 0) {\n                        fcn.0041abb1(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        iVar9 = (*pcVar3)();\n                        return iVar9;\n                    }\n                    *(var_14h + ppcVar11) = var_ch;\n                    ppcVar11 = ppcVar11 + 1;\n                    var_ch = var_ch + var_8h;\n                } while (ppcVar11 != ppcVar4);\n            }\n            iVar9 = 0;\n            *arg_ch = iVar6;\n        }\n        fcn.0041a87e(0);\ncode_r0x0041cc46:\n        fcn.0041ce7e();\n    }\n    return iVar9;\n}\n",
        "token_count": 1148
    },
    "0040d2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2c0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint ARG_0;\n    uint var_2ch;\n    code *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    ARG_0 = 0x30;\n    var_2ch = 0x828;\n    var_28h = fcn.0040d682;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = arg_8h;\n    var_18h = 0;\n    var_14h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    var_10h = 6;\n    var_ch = 0;\n    var_8h = 0x425e9c;\n    var_4h = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 281
    },
    "0040ba59": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ba90)\n// WARNING: Removing unreachable block (ram,0x0040bbc2)\n\nint32_t __fastcall fcn.0040ba59(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    int32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t iVar6;\n    bool bVar7;\n    int64_t iVar8;\n    int32_t unaff_retaddr;\n    int32_t arg_ch;\n    \n    iVar6 = *0x447284;\n    uVar4 = *0x447280;\n    bVar7 = false;\n    iVar8 = fcn.00412200(*0x447280, *0x447284, 0x2000, 0);\n    arg_ch = iVar8 >> 0x20;\n    uVar1 = iVar8;\n    if (unaff_retaddr < iVar8) {\n        (**(**0x447278 + 0x10))(uVar4 - uVar1, (iVar6 - arg_ch) - (uVar4 < uVar1), 0);\n        *0x447298 = (**(**0x447278 + 0x14))();\n        *0x447260 = (**(**0x447278 + 0xc))(*0x447254, uVar1);\n        *0x447264 = *0x447260 >> 0x1f;\n        if ((*0x447260 != uVar1) || (*0x447264 != uVar1 >> 0x1f)) goto code_r0x0040bc97;\n        pcVar5 = *0x447254;\n        for (*0x447258 = *0x447254 + uVar1 + (-4 - unaff_retaddr); pcVar5 <= *0x447258; *0x447258 = *0x447258 + -1) {\n            if (**0x447258 == 'P') {\n                iVar6 = fcn.00413a04(*0x447258, param_1, 4);\n                pcVar5 = *0x447254;\n                if (iVar6 == 0) {\n                    uVar4 = *0x447258 - *0x447254;\n                    bVar7 = *0x447260 < uVar4;\n                    *0x447260 = *0x447260 - uVar4;\n                    *0x447264 = (*0x447264 - (uVar4 >> 0x1f)) - bVar7;\n                    bVar7 = true;\n                    break;\n                }\n            }\n        }\n        fcn.00413490(*0x4472ac, pcVar5, 3);\n        iVar8 = *0x447298;\n    }\n    else {\n        iVar8 = CONCAT44((iVar6 - arg_ch) - (uVar4 < uVar1), uVar4 - uVar1);\n    }\n    *0x447298 = iVar8;\n    iVar2 = fcn.00411f30((unaff_EBP - uVar1) + 0x1fff, \n                         ((unaff_EBX - arg_ch) - (unaff_EBP < uVar1)) + (0xffffe000 < unaff_EBP - uVar1), 0x2000, 0);\n    iVar6 = 1;\n    while (((!bVar7 && (iVar6 <= iVar2)) && (0x1fff < iVar8))) {\n        *0x447298 = iVar8 + -0x2000;\n        (**(**0x447278 + 0x10))(*0x447298, 0);\n        *0x447260 = (**(**0x447278 + 0xc))(*0x447254, 0x2000);\n        *0x447264 = *0x447260 >> 0x1f;\n        if (*0x447260 != 0x2000) break;\n        pcVar5 = *0x447254;\n        for (*0x447258 = *0x447254 + 0x1fff; pcVar5 <= *0x447258; *0x447258 = *0x447258 + -1) {\n            if (**0x447258 == 'P') {\n                iVar3 = fcn.00413a04(*0x447258, arg_ch, 4);\n                pcVar5 = *0x447254;\n                if (iVar3 == 0) {\n                    uVar4 = *0x447258 - *0x447254;\n                    bVar7 = *0x447260 < uVar4;\n                    *0x447260 = *0x447260 - uVar4;\n                    *0x447264 = (*0x447264 - (uVar4 >> 0x1f)) - bVar7;\n                    bVar7 = true;\n                    break;\n                }\n            }\n        }\n        fcn.00413490(*0x4472ac, pcVar5, 3);\n        iVar6 = iVar6 + 1;\n        iVar8 = *0x447298;\n    }\ncode_r0x0040bc97:\n    if (*0x447258 < *0x447254) {\n        *0x447298 = -1;\n        *0x447258 = *0x447254;\n    }\n    *0x44729c = *0x447298 >> 0x20;\n    return (-bVar7 & 0xfffffffe) + 2;\n}\n",
        "token_count": 1220
    },
    "00405636": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00405636(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar auStack64 [40];\n    uint *puStack24;\n    uint32_t uStack12;\n    \n    uVar1 = *(param_1 + 0x18);\n    uVar4 = *(param_1 + 0x18) & 0x3f;\n    iVar3 = *(param_1 + 0x1c);\n    *(uVar4 + 0x20 + param_1) = 0x80;\n    uVar4 = uVar4 + 1;\n    arg_8h = iVar3 << 3 | uVar1 >> 0x1d;\n    if (uVar4 != 0x38) {\n        if (0x38 < uVar4) {\n            if (uVar4 < 0x40) {\n                fcn.00412c70(param_1 + 0x20 + uVar4, 0, 0x40 - uVar4);\n            }\n            uVar4 = 0;\n        }\n        if (uVar4 == 0) {\n            fcn.00404dd1(param_1, auStack64, param_1 + 0x20, 1);\n        }\n        fcn.00412c70(param_1 + 0x20 + uVar4, 0, 0x38 - uVar4);\n        arg_8h = uStack12;\n    }\n    uVar2 = fcn.00418408(arg_8h);\n    *(param_1 + 0x58) = uVar2;\n    uVar2 = fcn.00418408(uVar1 << 3);\n    *(param_1 + 0x5c) = uVar2;\n    fcn.00404dd1(param_1, &stack0xffffffb0, param_1 + 0x20, 1);\n    iVar5 = param_1 - puStack24;\n    iVar3 = 5;\n    do {\n        *puStack24 = *(iVar5 + puStack24);\n        puStack24 = puStack24 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.004056fc(param_1);\n    return;\n}\n",
        "token_count": 542
    },
    "00406e04": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.00406e04(uint16_t *param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    \n    iVar4 = param_3 + -1;\n    while ((uVar1 = *param_1,  uVar1 != 0 && (iVar3 = iVar4 + -1,  -1 < iVar3))) {\n        uVar2 = uVar1;\n        puVar5 = param_1 + 1;\n        if (uVar2 < 0x80) {\n            *param_2 = uVar1;\n            param_2 = param_2 + 1;\n            iVar4 = iVar3;\n            param_1 = puVar5;\n        }\n        else if ((uVar2 < 0x800) && (iVar4 = iVar4 + -2,  iVar3 = iVar4,  -1 < iVar4)) {\n            *param_2 = uVar1 >> 6 | 0xc0;\n            param_2[1] = uVar1 & 0x3f | 0x80;\n            param_2 = param_2 + 2;\n            param_1 = puVar5;\n        }\n        else {\n            iVar4 = iVar3;\n            if (uVar2 - 0xd800 < 0x400) {\n                uVar1 = *puVar5;\n                if ((0xdbff < uVar1) && (uVar1 < 0xe000)) {\n                    uVar2 = (uVar2 - 0xd7f7) * 0x400 + uVar1;\n                    puVar5 = param_1 + 2;\n                }\n            }\n            param_1 = puVar5;\n            if ((uVar2 < 0x10000) && (iVar4 = iVar4 + -2,  -1 < iVar4)) {\n                *param_2 = uVar2 >> 0xc | 0xe0;\n                param_2[1] = uVar2 >> 6 & 0x3f | 0x80;\n                param_2[2] = uVar2 & 0x3f | 0x80;\n                param_2 = param_2 + 3;\n            }\n            else if ((uVar2 < 0x200000) && (iVar4 = iVar4 + -3,  -1 < iVar4)) {\n                *param_2 = uVar2 >> 0x12 | 0xf0;\n                param_2[1] = uVar2 >> 0xc & 0x3f | 0x80;\n                param_2[2] = uVar2 >> 6 & 0x3f | 0x80;\n                param_2[3] = uVar2 & 0x3f | 0x80;\n                param_2 = param_2 + 4;\n            }\n        }\n    }\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 686
    },
    "0041de96": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041de96(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x461568));\n    return;\n}\n",
        "token_count": 68
    },
    "0041deb9": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041deb9(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x461568));\n    return;\n}\n",
        "token_count": 69
    },
    "00405ac7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.00405ac7(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((param_1 == 0x20) || (param_1 == 9)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 76
    },
    "00405adf": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuchar fcn.00405adf(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    \n    while( true ) {\n        uVar1 = *param_1;\n        if (uVar1 == 0) {\n            return 1;\n        }\n        if ((uVar1 < 0x20) || (0x7f < uVar1)) break;\n        param_1 = param_1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "00405afd": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.00405afd(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    unkuint3 Var2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    uVar1 = *param_1;\n    while( true ) {\n        Var2 = uVar1 >> 8;\n        if (uVar1 == 0) {\n            return CONCAT31(Var2, 1);\n        }\n        if ((uVar1 < 0x20) || (0x7f < uVar1)) break;\n        iVar3 = iVar3 + 1;\n        uVar1 = param_1[iVar3];\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 157
    },
    "00405b43": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405b43(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    ushort uVar1;\n    int16_t extraout_CX;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uint uStack116;\n    int32_t iStack112;\n    ushort auStack102 [51];\n    \n    uVar2 = 1;\n    uVar5 = 0;\n    uStack116 = 1;\n    uVar6 = 0;\n    if ((param_2 < 1) && (param_2 < 0)) {\n        param_1 = -param_1;\n        iStack112 = 1;\n        uVar4 = uVar2;\n    }\n    else {\n        uVar4 = 0;\n        iStack112 = 0;\n    }\n    do {\n        if (param_4 - uVar4 <= uVar2) break;\n        iVar8 = param_1;\n        iVar7 = fcn.00412030();\n        param_1 = iVar7;\n        *(&uStack116 + uVar6 * 2) = extraout_CX + 0x30;\n        uVar6 = uVar6 + 1;\n        uVar2 = iVar8 + 1;\n    } while (iVar7 != 0);\n    if (iStack112 != 0) {\n        auStack102[uVar6 + 1] = 0x2d;\n        uVar6 = uVar6 + 1;\n    }\n    if (uVar6 != 0) {\n        puVar3 = auStack102 + uVar6;\n        do {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + -1;\n            *(param_3 + uVar5 * 2) = uVar1;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar6);\n    }\n    *(param_3 + uVar6 * 2) = 0;\n    return;\n}\n",
        "token_count": 493
    },
    "00410801": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00410801(int32_t hWnd)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t iVar6;\n    uint lpClassName;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint *puStack48;\n    uint *puStack44;\n    char16_t *pcStack40;\n    int32_t iStack36;\n    uint *puStack32;\n    uint lpvObject;\n    uint var_14h;\n    int32_t var_10h;\n    uint uStack16;\n    \n    fcn.00411c40();\n    cVar1 = fcn.0040da77();\n    if (cVar1 != '\\0') {\n        uStack16 = 5;\n        var_10h = hWnd;\n        var_14h = 0x410828;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)();\n        iVar6 = 0;\n        iVar5 = iVar3;\n        var_14h = unaff_EBX;\n        if (iVar3 != 0) {\n            while (iVar6 < 0x200) {\n                lpvObject = 0x800;\n                puStack32 = &fcn.00410801::lpClassName;\n                pcStack40 = 0x410857;\n                iStack36 = iVar5;\n                (*_sym.imp.USER32.dll_GetClassNameW)();\n                pcStack40 = L\"STATIC\";\n                puStack44 = &fcn.00410801::lpClassName;\n                puStack48 = 0x410868;\n                iVar4 = fcn.00406fa3();\n                if (iVar4 == 0) {\n                    puStack48 = 0xfffffff0;\n                    iStack56 = 0x410875;\n                    iStack52 = iVar5;\n                    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n                    if ((uVar2 & 0x1f) == 0xe) {\n                        puStack48 = NULL;\n                        iStack52 = 0;\n                        iStack56 = 0x173;\n                        uStack64 = 0x41088c;\n                        iStack60 = iVar5;\n                        iVar4 = (*_sym.imp.USER32.dll_SendMessageW)();\n                        if (iVar4 != 0) {\n                            puStack48 = &fcn.00410801::lpvObject;\n                            iStack52 = 0x18;\n                            iStack60 = 0x41089f;\n                            iStack56 = iVar4;\n                            (*_sym.imp.GDI32.dll_GetObjectW)();\n                            iStack60 = var_10h;\n                            uStack64 = 0x4108a7;\n                            uStack64 = fcn.0040dad9();\n                            uStack68 = var_14h;\n                            uStack72 = 0x4108b0;\n                            uStack72 = fcn.0040da96();\n                            uStack80 = 0x4108b7;\n                            iStack76 = iVar4;\n                            uStack80 = fcn.0040dcaa();\n                            uStack84 = 0;\n                            uStack88 = 0x172;\n                            iStack96 = 0x4108c6;\n                            iStack92 = iVar5;\n                            (*_sym.imp.USER32.dll_SendMessageW)();\n                            uStack100 = 0x4108cd;\n                            iStack96 = iVar4;\n                            (*_sym.imp.GDI32.dll_DeleteObject)();\n                        }\n                    }\n                }\n                puStack48 = 0x2;\n                iStack56 = 0x4108d6;\n                iStack52 = iVar5;\n                iVar5 = (*_sym.imp.USER32.dll_GetWindow)();\n                if (iVar5 == iVar3) {\n                    return;\n                }\n                iVar6 = iVar6 + 1;\n                if (iVar5 == 0) {\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 963
    },
    "0041da00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041da00(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00412880();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0041c5c2(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x42f0b8 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x42f0b8 ^ *0x4619c8) >> uVar1 | (*0x42f0b8 ^ *0x4619c8) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0041da4e(0x42c9a8, noname_1, unaff_retaddr);\n    fcn.004128c6();\n    return;\n}\n",
        "token_count": 289
    },
    "00406682": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406682(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint lpCaption;\n    uint uVar2;\n    uint uVar3;\n    uint var_200h;\n    \n    iVar1 = param_1[0x12];\n    if (0x6e < iVar1) {\n        if (iVar1 != 0x7c) {\n            return;\n        }\n        fcn.004107f7();\n        uVar3 = fcn.00403fb9(0x96, 0);\n        lpCaption = 0xc9;\n        uVar2 = fcn.00403fb9();\n        fcn.0040dc82(*0x4486f0, uVar2, lpCaption, uVar3);\n        return;\n    }\n    if (iVar1 == 0x6e) {\n        uVar3 = 0x456;\n        goto code_r0x00406712;\n    }\n    if (0x16 < iVar1) {\n        if (0x38 < iVar1) {\n            if (iVar1 == 0x39) {\n                uVar3 = 0x8c;\n            }\n            else if (iVar1 == 0x3a) {\n                uVar3 = 0x6f;\n            }\n            else {\n                if (iVar1 == 0x3b) {\n                    uVar3 = param_1[1];\n                    uVar2 = 0x406;\n                    goto code_r0x004066f5;\n                }\n                if (iVar1 == 0x44) {\n                    uVar3 = 0x343;\n                }\n                else {\n                    if (iVar1 != 0x45) {\n                        return;\n                    }\n                    uVar3 = 0x86;\n                }\n            }\n            goto code_r0x00406712;\n        }\n        if (iVar1 == 0x38) {\n            uVar3 = 0x67;\n            goto code_r0x00406712;\n        }\n    // switch table (12 cases) at 0x406952\n        switch(iVar1) {\n        case 0x17:\n            uVar3 = 0xde;\n            goto code_r0x00406724;\n        case 0x18:\n            uVar3 = 0xe1;\ncode_r0x00406724:\n            uVar2 = fcn.00403fb9(uVar3);\n            uVar3 = 0;\n            goto code_r0x0040671a;\n        case 0x19:\n            uVar3 = 0xb4;\n            break;\n        case 0x1a:\n            uVar3 = 0x69;\n            break;\n        case 0x1b:\n            uVar3 = 0x6a;\n            break;\n        case 0x1c:\n            uVar3 = param_1[1];\n            uVar2 = 0x68;\n            goto code_r0x004066f5;\n        case 0x1d:\n            uVar3 = 0x46f;\n            break;\n        case 0x1e:\n            uVar3 = 0x470;\n            break;\n        case 0x1f:\n            uVar3 = param_1[1];\n            uVar2 = 0x471;\n            goto code_r0x004066f5;\n        default:\n            return;\n        case 0x21:\n            uVar3 = param_1[1];\n            uVar2 = 0x71;\n            goto code_r0x004066f5;\n        case 0x22:\n            uVar3 = fcn.00403fb9(200, param_1[1]);\n            fcn.004036d0(&var_200h, 0x100, uVar3);\n            fcn.0040ea40(*param_1, 0x425b5c, &var_200h, param_1[2]);\n            return;\n        }\ncode_r0x00406712:\n        uVar2 = fcn.00403fb9(uVar3);\n        uVar3 = *param_1;\ncode_r0x0040671a:\n        fcn.0040ea40(uVar3, uVar2);\n        return;\n    }\n    // switch table (22 cases) at 0x4068fa\n    switch(iVar1) {\n    case 0:\n        goto code_r0x004066c8;\n    case 1:\n        goto code_r0x004066c8;\n    case 2:\n        fcn.0040e1e0(0, unaff_ESI);\n        return;\n    case 3:\n        uVar3 = param_1[1];\n        uVar2 = 0x7b;\n        break;\n    case 4:\n        uVar3 = param_1[1];\n        uVar2 = 0x7a;\n        break;\n    case 5:\n        uVar3 = param_1[1];\n        uVar2 = 0x7c;\n        break;\n    case 6:\n        uVar3 = 0xc9;\n        goto code_r0x00406712;\n    case 7:\n        uVar3 = 0x70;\n        goto code_r0x00406724;\n    case 8:\n        uVar3 = param_1[1];\n        uVar2 = 0x72;\n        break;\n    case 9:\n        uVar3 = param_1[1];\n        uVar2 = 0x78;\n        break;\n    case 10:\n        uVar3 = *param_1;\n        uVar2 = 0x85;\n        goto code_r0x00406743;\n    case 0xb:\n        uVar3 = *param_1;\n        uVar2 = 0x204;\n        goto code_r0x00406743;\n    case 0xc:\n        uVar3 = param_1[1];\n        uVar2 = 0x84;\n        break;\n    case 0xd:\n        uVar3 = param_1[1];\n        uVar2 = 0x83;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x13:\n        goto code_r0x004068f4;\n    case 0x12:\n        uVar3 = fcn.00403fb9(0xd2, param_1[1], param_1[2]);\n        fcn.0040ea40(*param_1, uVar3);\n        return;\n    case 0x14:\n        uVar3 = param_1[1];\n        uVar2 = 0x79;\n        break;\n    case 0x15:\n        uVar3 = param_1[1];\n        uVar2 = 0xdc;\n        break;\n    default:\n        uVar3 = *param_1;\n        uVar2 = 0xdd;\ncode_r0x00406743:\n        fcn.00403fb9(uVar2, uVar3);\n        goto code_r0x004066c8;\n    }\ncode_r0x004066f5:\n    fcn.00403fb9(uVar2, uVar3);\ncode_r0x004066c8:\n    fcn.0040ea40();\ncode_r0x004068f4:\n    return;\n}\n",
        "token_count": 1622
    },
    "0040e0da": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nvoid fcn.0040e0da(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    iVar2 = *param_1;\n    piVar1 = param_1;\n    do {\n        if (iVar2 == 0) {\n            *param_1 = 0;\n            return;\n        }\n        iVar2 = *piVar1;\n        if (iVar2 == 0x5c) {\n            if (piVar1[1] != 0x5c) {\n                if (piVar1[1] != 0x6e) goto code_r0x0040e113;\n                iVar2 = 10;\n                piVar1 = piVar1 + 2;\n                goto code_r0x0040e116;\n            }\n            *param_1 = 0x5c;\n            piVar1 = piVar1 + 2;\n        }\n        else {\ncode_r0x0040e113:\n            piVar1 = piVar1 + 1;\ncode_r0x0040e116:\n            *param_1 = iVar2;\n        }\n        param_1 = param_1 + 1;\n        iVar2 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 276
    },
    "004093d2": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nuint fcn.004093d2(uint32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint uVar7;\n    \n    uVar3 = *0x4472a0 + param_1;\n    iVar4 = *0x4472a4 + param_2 + CARRY4(*0x4472a0, param_1);\n    uVar6 = fcn.00412200(uVar3, iVar4, 0x2000, 0);\n    uVar1 = uVar6;\n    iVar2 = (iVar4 - (uVar6 >> 0x20)) - (uVar3 < uVar1);\n    if ((iVar4 < 1) && (iVar4 < 0)) {\n        uVar7 = 3;\n    }\n    else {\n        if ((uVar3 - uVar1 == *0x447298) && (iVar2 == *0x44729c)) {\n            uVar3 = (*0x447258 - *0x447254) - uVar1;\n            bVar5 = CARRY4(*0x447260, uVar3);\n            *0x447260 = *0x447260 + uVar3;\n            *0x447264 = *0x447264 + (uVar3 >> 0x1f) + bVar5;\n        }\n        else {\n            (**(**0x447278 + 0x10))(uVar3 - uVar1, iVar2, 0);\n            *0x447298 = (**(**0x447278 + 0x14))();\n            *0x447260 = (**(**0x447278 + 0xc))(*0x447254, 0x2000);\n            *0x447264 = *0x447260 >> 0x1f;\n            if ((-1 < *0x447260 || *0x447264 < 0) && ((*0x447264 < 0 || (*0x447260 == 0)))) {\n                uVar7 = 0x33;\n                goto code_r0x004094ca;\n            }\n            bVar5 = *0x447260 < uVar1;\n            *0x447260 = *0x447260 - uVar1;\n            *0x447264 = (*0x447264 - (uVar1 >> 0x1f)) - bVar5;\n        }\n        *0x447258 = *0x447254 + uVar1;\n        uVar7 = 0;\n    }\ncode_r0x004094ca:\n    *0x44729c = *0x447298 >> 0x20;\n    return uVar7;\n}\n",
        "token_count": 620
    },
    "0040af9d": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nint32_t fcn.0040af9d(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uint32_t uStack12;\n    int32_t iStack8;\n    \n    uVar8 = *0x447284;\n    uVar9 = *0x447280;\n    bVar10 = false;\n    if ((*0x447284 < 1) && ((*0x447284 < 0 || (*0x447280 < 0x2001)))) {\n        uStack56 = 0;\n        iStack60 = 0;\n        uStack64 = 0;\n        uStack68 = 0x40afd9;\n        (**(**0x447278 + 0x10))();\n        uVar3 = fcn.00409563(*0x447254, *0x447280);\n        uVar9 = *0x447254;\n        iVar6 = uVar3 >> 0x1f;\n        *0x447260 = uVar3;\n        *0x447264 = iVar6;\n        *0x447298 = CONCAT44(*0x44729c, *0x447298);\n        if ((uVar3 == *0x447280) && (*0x447298 = CONCAT44(*0x44729c, *0x447298),  iVar6 == *0x447280 >> 0x1f)) {\n            for (uVar8 = (*0x447254 - 0x16) + *0x447280; *0x447258 = uVar8,  uVar9 <= uVar8; uVar8 = uVar8 - 1) {\n                uVar5 = uVar8;\n                cVar2 = fcn.00408a67();\n                if (cVar2 != '\\0') {\n                    uVar4 = uVar8 - uVar9;\n                    *0x447260 = uVar3 - uVar4;\n                    *0x447264 = (iVar6 - (uVar4 >> 0x1f)) - (uVar3 < uVar4);\n                    goto code_r0x0040b24f;\n                }\n            }\n        }\ncode_r0x0040b23b:\n        iVar6 = 2;\n    }\n    else {\n        uStack56 = 0;\n        iStack60 = 0x2000;\n        uStack64 = *0x447284;\n        uStack68 = *0x447280;\n        uVar3 = fcn.00412200();\n        iVar6 = uVar3 >> 0x1f;\n        if (uVar3 < 0x13) {\n            *0x447298 = CONCAT44((uVar8 - iVar6) - (uVar9 < uVar3), uVar9 - uVar3);\n        }\n        else {\n            iVar11 = 0;\n            uVar8 = (uVar8 - iVar6) - (uVar9 < uVar3);\n            (**(**0x447278 + 0x10))(uVar9 - uVar3);\n            *0x447298 = (**(**0x447278 + 0x14))();\n            iVar1 = iStack60;\n            *0x447260 = fcn.00409563(*0x447254, iStack60);\n            uVar9 = *0x447254;\n            iVar7 = *0x447260 >> 0x1f;\n            *0x447264 = iVar7;\n            if ((*0x447260 != uVar8) || (iVar7 != iVar11)) goto code_r0x0040b23b;\n            for (uVar8 = iVar1 + -0x16 + *0x447254; *0x447258 = uVar8,  uVar9 <= uVar8; uVar8 = uVar8 - 1) {\n                cVar2 = fcn.00408a67();\n                if (cVar2 != '\\0') {\n                    uVar8 = uVar8 - uVar9;\n                    bVar10 = *0x447260 < uVar8;\n                    *0x447260 = *0x447260 - uVar8;\n                    *0x447264 = (iVar7 - (uVar8 >> 0x1f)) - bVar10;\n                    bVar10 = true;\n                    break;\n                }\n            }\n            fcn.00419420(*0x4472ac, uVar9, 3);\n        }\n        uVar5 = (uStack12 - uVar3) + 0x1fff;\n        iStack60 = fcn.00411f30(uVar5, ((iStack8 - iVar6) - (uStack12 < uVar3)) + (0xffffe000 < uStack12 - uVar3), \n                                0x2000, 0);\n        iVar6 = 1;\n        uVar8 = *0x447258;\n        uVar9 = *0x447254;\n        if (!bVar10) {\n            do {\n                if (iStack60 < iVar6) break;\n                *0x447298 = *0x447298 + -0x2000;\n                (**(**0x447278 + 0x10))(*0x447298, 0);\n                uVar5 = *0x447254;\n                *0x447260 = fcn.00409563(*0x447254, 0x2000);\n                uVar9 = *0x447254;\n                *0x447264 = *0x447260 >> 0x1f;\n                if (*0x447260 != 0x2000) break;\n                for (uVar8 = *0x447254 + 0x1fff; *0x447258 = uVar8,  uVar9 <= uVar8; uVar8 = uVar8 - 1) {\n                    uVar5 = uVar8;\n                    cVar2 = fcn.00408a67();\n                    if (cVar2 != '\\0') {\n                        uVar8 = -(uVar8 - uVar9);\n                        *0x447260 = uVar8 + 0x2000;\n                        *0x447264 = (-(uVar8 - uVar9) >> 0x20) + (0xffffdfff < uVar8);\n                        bVar10 = true;\n                        break;\n                    }\n                }\n                fcn.00419420(*0x4472ac, uVar9, 3, uVar5);\n                iVar6 = iVar6 + 1;\n            } while (!bVar10);\n            uVar8 = *0x447258;\n            uVar9 = *0x447254;\n            if (!bVar10) goto code_r0x0040b23b;\n        }\ncode_r0x0040b24f:\n        *0x437208 = *0x447298 + (uVar8 - uVar9);\n        iVar6 = fcn.00409192(&stack0xffffffc8, 0x16, uVar5);\n        if (iVar6 == 0) {\n            iVar6 = 0x33;\n        }\n        else {\n            *0x447310 = fcn.0040904d(&stack0xffffffc4);\n            *0x447312 = fcn.0040904d(&stack0xffffffc2);\n            *0x447318 = fcn.0040904d(&stack0xffffffc0);\n            *0x447318 = *0x447318 & 0xffff;\n            *0x44731c = 0;\n            *0x447320 = fcn.0040904d(&stack0xffffffbe);\n            *0x447320 = *0x447320 & 0xffff;\n            *0x447324 = 0;\n            *0x447328 = fcn.00409028(&stack0xffffffbc);\n            *0x44732c = 0;\n            *0x447330 = fcn.00409028(&stack0xffffffbc);\n            *0x447334 = 0;\n            *0x447338 = fcn.0040904d(&stack0xffffffbc);\n            iVar6 = fcn.0040ad18(uStack64 + 0x4c, iStack60 + (0xffffffb3 < uStack64));\n            if (iVar6 == 0) {\n                *0x437210 = *0x447330 + *0x447328;\n                *0x437214 = *0x447334 + *0x44732c + CARRY4(*0x447330, *0x447328);\n                iVar6 = 0;\n            }\n        }\n    }\n    *0x43720c = *0x437208 >> 0x20;\n    *0x44729c = *0x447298 >> 0x20;\n    return iVar6;\n}\n",
        "token_count": 2016
    },
    "0040b8f8": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040b8f8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_1ch;\n    uchar var_18h [2];\n    uchar var_16h [2];\n    uchar var_14h [2];\n    uchar var_12h [4];\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    \n    iVar1 = fcn.00409192(&var_1ch, 0x1a);\n    if (iVar1 == 0) {\n        uVar2 = 0x33;\n    }\n    else {\n        *0x4472b0 = var_1ch;\n        *0x4472b1 = var_1ch._1_1_;\n        *0x4472b2 = fcn.0040904d(&var_1ch + 2);\n        *0x4472b4 = fcn.0040904d(var_18h);\n        *0x4472b6 = fcn.0040904d(var_16h);\n        *0x4472b8 = fcn.0040904d(var_14h);\n        *0x4472bc = fcn.00409028(var_12h);\n        *0x4472c0 = fcn.00409028(&var_eh);\n        *0x4472c4 = 0;\n        *0x4472c8 = fcn.00409028(&var_ah);\n        *0x4472cc = 0;\n        *0x4472d0 = fcn.0040904d(&var_6h);\n        *0x4472d2 = fcn.0040904d(&var_6h + 2);\n        if ((*0x4472b2 & 8) != 0) {\n            *0x4472bc = *(*0x437248 + 0x18);\n            *0x4472c0 = *(*0x437248 + 8);\n            *0x4472c4 = *(*0x437248 + 0xc);\n            *0x4472c8 = *(*0x437248 + 0x10);\n            *0x4472cc = *(*0x437248 + 0x14);\n        }\n        uVar2 = 0;\n        *0x437218 = *0x4472c0;\n        *0x43721c = *0x4472c4;\n        *0x437220 = *0x4472c8;\n        *0x437224 = *0x4472cc;\n    }\n    return uVar2;\n}\n",
        "token_count": 588
    },
    "0040c1d1": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c1d1(uint32_t param_1)\n\n{\n    *0x448380 = *0x448380 >> 8 ^ *(((*0x448380 ^ param_1) & 0xff) * 4 + 0x436df0);\n    *0x448384 = ((*0x448380 & 0xff) + *0x448384) * 0x8088405 + 1;\n    *0x448388 = *0x448388 >> 8 ^ *(((*0x448384 >> 0x18 ^ *0x448388) & 0xff) * 4 + 0x436df0);\n    return param_1;\n}\n",
        "token_count": 156
    },
    "0040d376": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint16_t * fcn.0040d376(int16_t *param_1)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int16_t iVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    char16_t *in_stack_ffffffcc;\n    \n    iVar3 = fcn.00416e83(param_1);\n    piVar4 = fcn.0041837b(iVar3 * 2 + 2);\n    if (piVar4 != NULL) {\n        uVar5 = fcn.0040cd0e(param_1);\n        iVar7 = *param_1;\n        uVar2 = uVar5;\n        piVar9 = piVar4;\n        if (iVar7 != 0) {\n            do {\n                piVar8 = piVar9;\n                if (iVar7 != 0) goto code_r0x0040d3de;\n                do {\n                    do {\n                        uVar5 = 4;\n                        iVar3 = fcn.00406fc5(param_1, 0x425fc0, 4);\n                        if (iVar3 == 0) {\ncode_r0x0040d49a:\n                            *piVar8 = 0xd;\n                            piVar8[1] = 10;\n                            piVar9 = piVar8 + 2;\n                            if (iVar3 == 0) {\n                                *piVar9 = 0xd;\n                                piVar8[3] = 10;\n                                piVar9 = piVar8 + 4;\n                            }\n                        }\n                        else {\n                            in_stack_ffffffcc = L\"<br>\";\n                            iVar6 = fcn.00406fc5(param_1, L\"<br>\", 4);\n                            piVar9 = piVar8;\n                            if (iVar6 == 0) goto code_r0x0040d49a;\n                        }\n                        *piVar9 = 0;\n                        iVar3 = fcn.00406fc5(param_1, L\"<style>\", 7);\n                        if (iVar3 == 0) {\n                            piVar8 = param_1;\n                            if (*param_1 == 0) {\n                                return piVar4;\n                            }\n                            do {\n                                iVar3 = fcn.00406fc5(piVar8, L\"</style>\", 8);\n                                param_1 = piVar8 + 1;\n                                if (iVar3 == 0) {\n                                    param_1 = piVar8 + 8;\n                                    break;\n                                }\n                                piVar8 = param_1;\n                            } while (*param_1 != 0);\n                        }\n                        else {\n                            iVar7 = *param_1;\n                            while (iVar7 != 0) {\n                                if (iVar7 == in_stack_ffffffcc) goto code_r0x0040d51a;\n                                param_1 = param_1 + 1;\n                                iVar7 = *param_1;\n                            }\n                            if (*param_1 == in_stack_ffffffcc) {\ncode_r0x0040d51a:\n                                param_1 = param_1 + 1;\n                            }\n                        }\n                        iVar7 = *param_1;\n                        uVar5 = uVar5 & 0xff;\n                        if (iVar7 == 0) {\n                            return piVar4;\n                        }\ncode_r0x0040d3de:\n                        bVar1 = false;\n                        piVar8 = piVar9;\n                    } while (iVar7 == 0x3c);\n                    if (uVar5 != '\\0') {\n                        if ((iVar7 == 0xd) || (iVar7 == 10)) {\n                            if ((piVar9 == piVar4) || (piVar9[-1] != 0x20)) {\n                                *piVar9 = 0x20;\n                                piVar9 = piVar9 + 1;\n                            }\n                            param_1 = param_1 + 1;\n                            goto code_r0x0040d465;\n                        }\n                        if ((uVar5 != '\\0') && (iVar7 == 0x26)) {\n                            uVar5 = 0;\n                            do {\n                                iVar7 = *(uVar5 + param_1);\n                                if (iVar7 == 0) break;\n                                if (iVar7 == 0x3b) {\n                                    param_1 = uVar5 + param_1 + 1;\n                                    bVar1 = true;\n                                }\n                                uVar5 = uVar5 + 2;\n                            } while (uVar5 < 0x28);\n                            if (bVar1) goto code_r0x0040d45f;\n                        }\n                    }\n                    iVar7 = *param_1;\n                } while (iVar7 == 0);\n                if (((iVar7 != 0x20) || (piVar9 == piVar4)) || (piVar9[-1] != 0x20)) {\n                    *piVar9 = iVar7;\n                    piVar9 = piVar9 + 1;\n                }\n                param_1 = param_1 + 1;\ncode_r0x0040d45f:\n                uVar5 = uVar2;\ncode_r0x0040d465:\n                iVar7 = *param_1;\n            } while( true );\n        }\n    }\n    return piVar4;\n}\n",
        "token_count": 1175
    },
    "00404928": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404928(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iStack32;\n    uint8_t auStack16 [16];\n    \n    iStack32 = 1;\n    if (1 < *(param_1 + 4)) {\n        iVar6 = param_1 + 0x28;\n        do {\n            iVar8 = 0;\n            do {\n                puVar9 = auStack16 + iVar8;\n                iVar5 = 4;\n                puVar7 = iVar6 + 2;\n                do {\n                    puVar1 = puVar7 + 1;\n                    puVar2 = puVar7 + -1;\n                    puVar3 = puVar7 + -2;\n                    uVar4 = *puVar7;\n                    puVar7 = puVar7 + 4;\n                    *puVar9 = *(iVar8 + 0x4368a0 + *puVar1 * 4) ^ *(iVar8 + 0x4360a0 + *puVar2 * 4) ^\n                              *(iVar8 + 0x435ca0 + *puVar3 * 4) ^ *(iVar8 + 0x4364a0 + uVar4 * 4);\n                    puVar9 = puVar9 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < 4);\n            fcn.00413490(iVar6, auStack16, 0x10);\n            iStack32 = iStack32 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (iStack32 < *(param_1 + 4));\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "0040c120": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040c120(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.0040c0dd(arg_ch);\n    fcn.00413490(&var_ch, arg_8h, 0xc);\n    iVar6 = 0;\n    do {\n        uVar3 = fcn.0040c0bf();\n        *(&var_ch + iVar6) = uVar3 ^ *(&var_ch + iVar6);\n        fcn.0040c1d1();\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0xc);\n    cVar5 = *0x4472b7;\n    if ((*(*0x437248 + 0x40) & 2) == 0) {\n        cVar5 = *0x4472bf;\n    }\n    if (var_1h == cVar5) {\n        puVar2 = *0x447258;\n        if ((*0x447260 >> 0x1f < *0x43721c) ||\n           ((uVar1 = *0x437218,  *0x447260 >> 0x1f <= *0x43721c && (*0x447260 <= *0x437218)))) {\n            uVar1 = *0x447260;\n        }\n        for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n            uVar3 = fcn.0040c0bf();\n            *puVar2 = *puVar2 ^ uVar3;\n            fcn.0040c1d1();\n            puVar2 = puVar2 + 1;\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0xffffffff;\n    }\n    return uVar4;\n}\n",
        "token_count": 476
    },
    "004012c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012c1(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        param_2 = 0x425294;\n    }\n    iVar1 = *(param_1 + 0xa430);\n    iVar2 = fcn.00416e83(param_2);\n    fcn.00405c76(iVar2 + 1);\n    fcn.004189b6(*(param_1 + 0xa42c) + iVar1 * 2, param_2);\n    *(param_1 + 0xa444) = *(param_1 + 0xa444) + 1;\n    return;\n}\n",
        "token_count": 170
    },
    "0040173c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040173c(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = param_1;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0x425294;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00412c70(param_1 + 8, 0, 0x20);\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = param_2;\n    return param_1;\n}\n",
        "token_count": 170
    },
    "004017fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017fc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint var_800h;\n    \n    fcn.004019e0(&var_800h, 0x400, arg_ch, 0, &arg_10h);\n    fcn.004016b0(1, &var_800h);\n    return;\n}\n",
        "token_count": 87
    },
    "004019e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004019e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.004019da();\n    iVar2 = fcn.004181c5(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 139
    },
    "00402e29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e29(int32_t param_1)\n\n{\n    fcn.00412c70(param_1, 0, 0x82e0);\n    *(param_1 + 0x6130) = 0;\n    *(param_1 + 0x6128) = 0;\n    *(param_1 + 0x6188) = 0;\n    *(param_1 + 0xc) = 0x2000000;\n    *(param_1 + 0x6134) = 3;\n    *(param_1 + 0x72c8) = 4;\n    *(param_1 + 0x61e8) = 0x7fffffff;\n    *(param_1 + 0x61ec) = 0x7fffffff;\n    *(param_1 + 0x61f0) = 0x7fffffff;\n    *(param_1 + 0x61f4) = 0x7fffffff;\n    *(param_1 + 0x6138) = 2;\n    return;\n}\n",
        "token_count": 239
    },
    "0040315d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040315d(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h;\n    int32_t unaff_retaddr;\n    \n    if (param_3 != 0) {\n        arg_10h = param_3 - 1;\n        iVar1 = fcn.004035ae(param_1);\n        if (iVar1 - param_1 >> 1 <= arg_10h) {\n            iVar1 = fcn.004035ae(param_1);\n            arg_10h = iVar1 - param_1 >> 1;\n        }\n        fcn.00418229(unaff_retaddr, param_1, arg_10h);\n        *(unaff_retaddr + arg_10h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004031a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004031a0(int16_t *param_1, ushort *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t arg_10h;\n    \n    *param_2 = 0;\n    cVar1 = fcn.00403412(param_1);\n    if (cVar1 == '\\0') {\n        if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (iVar2 = fcn.0041320e(param_1 + 2, 0x5c),  iVar2 != 0)) {\n            iVar2 = fcn.0041320e(iVar2 + 2, 0x5c);\n            if (iVar2 == 0) {\n                puVar3 = fcn.00416e83(param_1);\n            }\n            else {\n                puVar3 = (iVar2 - param_1 >> 1) + 1;\n            }\n            arg_10h = -(puVar3 < param_2) & puVar3;\n            fcn.00418229(param_2, param_1, arg_10h);\n            param_2[arg_10h] = 0;\n        }\n    }\n    else {\n        fcn.004036d0(param_2, param_2, L\"%c:\\\\\", *param_1);\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00403412": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00403412(ushort *param_1)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405b27(*param_1);\n    if ((iVar1 - 0x41U < 0x1a) && (param_1[1] == 0x3a)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 110
    },
    "00403592": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403592(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00416e83(param_1);\n    if (iVar1 != 0) {\n        param_1 = param_1 + iVar1 * 2 + -2;\n    }\n    return param_1;\n}\n",
        "token_count": 78
    },
    "0040368e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040368e(int16_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = 0;\n    if (param_3 != 1) {\n        iVar3 = param_2 - param_1;\n        do {\n            iVar2 = *param_1;\n            if (iVar2 == 0) break;\n            if (iVar2 == 0x2f) {\n                iVar2 = 0x5c;\n            }\n            *(iVar3 + param_1) = iVar2;\n            uVar1 = uVar1 + 1;\n            param_1 = param_1 + 1;\n        } while (uVar1 < param_3 - 1U);\n    }\n    *(param_2 + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 210
    },
    "004036d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036d0(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.004019e0(param_1, param_2, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 60
    },
    "00403702": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00403702(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uStack1044;\n    uchar auStack1024 [1008];\n    uint32_t *puStack16;\n    uint32_t *puStack12;\n    uint32_t *puStack8;\n    \n    uStack1044 = param_1;\n    uVar3 = 1;\n    fcn.00403793(0x425294, auStack1024, 0x200, 1);\n    uVar1 = fcn.0041320e(&uStack1044, 0x2a);\n    if (uVar1 == 0) {\n        *puStack8 = 100;\n        *puStack12 = 100;\n        puStack16 = puStack8;\n    }\n    else {\n        uVar2 = fcn.00406f98(&uStack1044);\n        puStack12 = puStack16;\n        *puStack16 = uVar2;\n        uVar1 = fcn.00406f98(uVar1 + 2);\n        *puStack16 = uVar1;\n    }\n    if ((*puStack12 == 100) && (*puStack16 == 100)) {\n        uVar3 = 0;\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 310
    },
    "00403fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * fcn.00403fb9(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    *0x433a78 = -(*0x433a78 + 1 < 8) & *0x433a78 + 1;\n    puVar3 = *0x433a78 * 0x400 + 0x431a78;\n    *puVar3 = 0;\n    cVar1 = fcn.00403c4a();\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_LoadStringW)(*0x4486fc, param_1, puVar3, 0x200);\n        if (iVar2 != 0) goto code_r0x0040401a;\n    }\n    (*_sym.imp.USER32.dll_LoadStringW)(*0x448700, param_1, puVar3, 0x200);\ncode_r0x0040401a:\n    fcn.00403793(puVar3, puVar3, 0x200, 0, 0);\n    return puVar3;\n}\n",
        "token_count": 256
    },
    "00404c7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c7f(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_14h <= arg_ch) {\n        arg_ch = arg_14h;\n    }\n    fcn.00413490(arg_10h, arg_8h, arg_ch * 2);\n    fcn.00404cc0(arg_10h, arg_14h * 2, arg_18h, *(in_ECX + 0x101));\n    return;\n}\n",
        "token_count": 140
    },
    "00404d6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404d6a(int32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    uint arg_18h;\n    \n    if (*param_2 == 0) {\n        *(param_1 + 0x100) = 0;\n        fcn.00412c70(param_1, 0, 0x100);\n    }\n    else {\n        arg_18h = 1;\n        arg_14h = 0x80;\n        *(param_1 + 0x100) = 1;\n        iVar1 = fcn.00416e83(param_2);\n        fcn.00404c7f(param_2, iVar1 + 1, param_1, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "004059d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004059d0(int16_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    int16_t iVar4;\n    char cVar5;\n    \n    piVar2 = param_1;\n    while (cVar1 = fcn.00405ac7(),  cVar1 != '\\0') {\n        piVar2 = piVar2 + 1;\n    }\n    iVar4 = *piVar2;\n    if (iVar4 == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        uVar3 = 0;\n        cVar1 = '\\0';\n        cVar5 = '\\0';\n        do {\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00405ac7(iVar4);\n                if (cVar1 != '\\0') break;\n                cVar1 = unaff_ESI;\n            }\n            if (iVar4 == 0x22) {\n                if (piVar2[1] == 0x22) {\n                    if ((param_1 != NULL) && (uVar3 < param_2 - 1U)) {\n                        param_1[uVar3] = 0x22;\n                        uVar3 = uVar3 + 1;\n                    }\n                    piVar2 = piVar2 + 1;\n                    cVar1 = cVar5;\n                }\n                else {\n                    cVar5 = cVar1 == '\\0';\n                    cVar1 = cVar5;\n                }\n            }\n            else if ((param_1 != NULL) && (cVar1 = cVar5,  uVar3 < param_2 - 1U)) {\n                param_1[uVar3] = iVar4;\n                uVar3 = uVar3 + 1;\n            }\n            piVar2 = piVar2 + 1;\n            iVar4 = *piVar2;\n        } while (iVar4 != 0);\n        if (param_1 != NULL) {\n            param_1[uVar3] = 0;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 483
    },
    "00405ab5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00405ab5(int32_t param_1)\n\n{\n    return param_1 - 0x30U < 10;\n}\n",
        "token_count": 33
    },
    "00405c1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c1f(int16_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    \n    if (param_3 != 0) {\n        param_3 = param_3 + -1;\n        if (param_3 != 0) {\n            param_2 = param_2 - param_1;\n            do {\n                iVar1 = *(param_2 + param_1);\n                if (iVar1 == 0) break;\n                *param_1 = iVar1;\n                param_1 = param_1 + 1;\n                param_3 = param_3 + -1;\n            } while (param_3 != 0);\n        }\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00405d86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00405d86(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (param_1[5] < param_1[1]) {\n        arg_8h = *param_1 + param_1[5] * 2;\n        iVar2 = fcn.00416e83(arg_8h);\n        param_1[5] = param_1[5] + iVar2 + 1;\n        if (param_2 != NULL) {\n            *param_2 = arg_8h;\n        }\n        uVar1 = 1;\n    }\n    else {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 201
    },
    "004064f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004064f3(uint32_t *param_1, ushort *param_2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    bool bVar5;\n    ulong uVar6;\n    uchar *puStack100;\n    uchar *puStack96;\n    uchar *puStack92;\n    int32_t iStack72;\n    int32_t iStack68;\n    uchar auStack64 [16];\n    ushort uStack48;\n    ushort uStack46;\n    ushort uStack44;\n    ushort uStack42;\n    ushort uStack40;\n    ushort uStack38;\n    ushort uStack36;\n    ushort uStack34;\n    uchar auStack32 [32];\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_SystemTimeToFileTime;\n    uStack48 = *param_2;\n    uStack46 = param_2[2];\n    uStack42 = param_2[4];\n    uStack40 = param_2[6];\n    uStack38 = param_2[8];\n    uStack36 = param_2[10];\n    uStack34 = 0;\n    uStack44 = 0;\n    puStack92 = &stack0xffffffc0;\n    puStack96 = &stack0xffffffd0;\n    puStack100 = 0x406553;\n    iVar3 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    if (iVar3 == 0) {\n        *param_1 = 0;\n        param_1[1] = 0;\n    }\n    else {\n        puStack100 = 0x406560;\n        uVar4 = fcn.004029f2();\n        if (uVar4 < 0x600) {\n            puStack100 = &stack0xffffffb0;\n            (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&stack0xffffffb8);\n        }\n        else {\n            puStack100 = &stack0xffffffd8;\n            (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&stack0xffffffb8);\n            (*_sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime)(0, &stack0xffffffd0, &stack0xffffffe0);\n            (*pcVar2)(&stack0xffffffd4, &stack0xffffff9c);\n            (*pcVar2)(&stack0xffffffbc, &stack0xffffffa4);\n            bVar5 = CARRY4(-iStack72, unaff_EDI);\n            uVar4 = -iStack72 + unaff_EDI;\n            unaff_EDI = uVar4 + unaff_EBP;\n            unaff_ESI = (((unaff_ESI + unaff_EBX) - iStack68) - (iStack72 != 0)) + bVar5 + CARRY4(uVar4, unaff_EBP);\n        }\n        uVar6 = fcn.00411fe0(unaff_EDI, unaff_ESI, 100, 0);\n        *param_1 = uVar6;\n        param_1[1] = uVar6 >> 0x20;\n    }\n    uVar4 = *(param_2 + 0xc);\n    uVar1 = *param_1;\n    *param_1 = *param_1 + uVar4;\n    param_1[1] = param_1[1] + CARRY4(uVar1, uVar4);\n    return;\n}\n",
        "token_count": 799
    },
    "0040662c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040662c(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    *param_1 = param_2 + 0x4c6a0000;\n    param_1[1] = param_3 + -0x5e6684f5 + (0xb395ffff < param_2);\n    return;\n}\n",
        "token_count": 91
    },
    "00406982": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406982(uint arg_8h)\n\n{\n    uint uVar1;\n    uint lpCaption;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_1200h;\n    uint uStackY44;\n    uint uStackY40;\n    uint arg_14h;\n    \n    fcn.00411c40();\n    fcn.00403fb9();\n    fcn.004036d0();\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    arg_14h = 0x96;\n    lpCaption = fcn.00403fb9();\n    uStackY40 = 0x4069da;\n    iVar2 = fcn.0040dc82(*0x4486f0, &fcn.00406982::var_1200h, lpCaption, arg_14h);\n    uStackY44 = 0x4069e7;\n    uStackY40 = uVar1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_SetLastError)();\n    return uVar3 & 0xffffff00 | iVar2 == 4;\n}\n",
        "token_count": 252
    },
    "00407361": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407361(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char16_t *pcVar3;\n    uint var_28h;\n    \n    cVar1 = fcn.00407326(arg_8h);\n    uVar2 = 0x425bbc;\n    if (arg_10h < 99) {\n        if (cVar1 == '\\0') {\n            uVar2 = 0x425294;\n        }\n        pcVar3 = L\"z%s%02d\";\n    }\n    else {\n        if (cVar1 == '\\0') {\n            uVar2 = 0x425294;\n        }\n        pcVar3 = 0x425bc0;\n    }\n    fcn.004036d0(&var_28h, 0x14, pcVar3, uVar2, arg_10h + 1);\n    fcn.00403624(arg_8h, &var_28h, arg_ch);\n    return;\n}\n",
        "token_count": 237
    },
    "00408ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00408ab1(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    if (*0x447348 < param_2) {\n        uVar1 = 0x32;\n    }\n    else {\n        fcn.00413490(*0x447344, param_1, param_2);\n        *0x447344 = *0x447344 + param_2;\n        *0x447348 = *0x447348 - param_2;\n        *0x447360 = *0x447360 + param_2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00408d12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408d12(void)\n\n{\n    bool bVar1;\n    \n    if ((*0x447260 >> 0x1f < *0x43721c) || ((*0x447260 >> 0x1f <= *0x43721c && (*0x447260 <= *0x437218)))) {\n        *0x4484e0 = 0;\n        *0x4484e4 = 0;\n    }\n    else {\n        if ((*0x43721c < 1) && (*0x43721c < 0)) {\n            *0x437218 = 0;\n            *0x43721c = 0;\n        }\n        *0x4484e8 = *0x447258 + *0x437218;\n        *0x4484e0 = *0x447260 - *0x437218;\n        *0x4484e4 = (*0x447264 - (*0x437218 >> 0x1f)) - (*0x447260 < *0x437218);\n        *0x447260 = *0x437218;\n        *0x447264 = *0x437218 >> 0x1f;\n    }\n    bVar1 = *0x437218 < *0x447260;\n    *0x437218 = *0x437218 - *0x447260;\n    *0x43721c = (*0x43721c - *0x447264) - bVar1;\n    return;\n}\n",
        "token_count": 331
    },
    "00409192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00409192(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = param_2;\n    if (param_2 != 0) {\n        do {\n            if ((*0x447264 < 1) && ((*0x447264 < 0 || (*0x447260 == 0)))) {\n                *0x447260 = fcn.00409563(*0x447254, 0x2000);\n                *0x447264 = *0x447260 >> 0x1f;\n                if ((*0x447260 | *0x447264) == 0) {\n                    return param_2 - uVar2;\n                }\n                if (*0x447264 < 0) {\n                    fcn.004018b8(0x455b62, 0x447364);\n                    return 0;\n                }\n                bVar3 = 0xffffdfff < *0x447298;\n                *0x447298 = *0x447298 + 0x2000;\n                *0x44729c = *0x44729c + bVar3;\n                *0x447258 = *0x447254;\n            }\n            uVar1 = uVar2;\n            if (*0x447260 <= uVar2) {\n                uVar1 = *0x447260;\n            }\n            fcn.00413490(param_1, *0x447258, uVar1);\n            *0x447258 = *0x447258 + uVar1;\n            param_1 = param_1 + uVar1;\n            bVar3 = *0x447260 < uVar1;\n            *0x447260 = *0x447260 - uVar1;\n            *0x447264 = *0x447264 - bVar3;\n            uVar2 = uVar2 - uVar1;\n        } while (uVar2 != 0);\n    }\n    return param_2;\n}\n",
        "token_count": 455
    },
    "004094d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094d1(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    iVar2 = *0x4484e4;\n    uVar1 = *0x4484e0;\n    if ((-1 < *0x447264) && ((0 < *0x447264 || (*0x447260 != 0)))) {\n        bVar3 = CARRY4(*0x437218, *0x447260);\n        *0x437218 = *0x437218 + *0x447260;\n        *0x43721c = *0x43721c + *0x447264 + bVar3;\n    }\n    if ((*0x4484e4 < 0) || ((*0x4484e4 < 1 && (*0x4484e0 == 0)))) {\n        if ((*0x447264 < 1) && (*0x447264 < 0)) {\n            *0x447260 = 0;\n            *0x447264 = 0;\n        }\n    }\n    else {\n        *0x4484e0 = 0;\n        *0x447260 = *0x437218 + uVar1;\n        *0x4484e4 = 0;\n        *0x447264 = (*0x437218 >> 0x1f) + iVar2 + CARRY4(*0x437218, uVar1);\n        *0x447258 = *0x4484e8 - *0x437218;\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "0040c3f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c3f7(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    iVar3 = *(param_3 + 0x1d0);\n    if (param_2 != 0) {\n        do {\n            if (iVar3 == 0x10) {\n                uVar2 = 0;\n                do {\n                    pcVar1 = uVar2 + param_3;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    if (*pcVar1 != '\\0') break;\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 < 8);\n                fcn.0040445b(param_3, 0x10, param_3 + 0x10);\n                iVar3 = 0;\n            }\n            *(uVar4 + param_1) = *(uVar4 + param_1) ^ *(param_3 + 0x10 + iVar3);\n            iVar3 = iVar3 + 1;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < param_2);\n    }\n    *(param_3 + 0x1d0) = iVar3;\n    return;\n}\n",
        "token_count": 314
    },
    "0040c47e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040c47e(uint param_1, int32_t param_2)\n\n{\n    fcn.0040c640(param_1, 10, param_2 + 0x128, 0, 0);\n    return 10;\n}\n",
        "token_count": 59
    },
    "0040c764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c764(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405636(arg_8h, &var_14h);\n    uVar1 = fcn.00418408(var_14h);\n    *arg_ch = uVar1;\n    uVar1 = fcn.00418408(var_10h);\n    arg_ch[1] = uVar1;\n    uVar1 = fcn.00418408(var_ch);\n    arg_ch[2] = uVar1;\n    uVar1 = fcn.00418408(var_8h);\n    arg_ch[3] = uVar1;\n    uVar1 = fcn.00418408(var_4h);\n    arg_ch[4] = uVar1;\n    return;\n}\n",
        "token_count": 216
    },
    "0040c81d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040c81d(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_ch;\n    \n    fcn.00411c14();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    fcn.00412c70(0x4371f0, 0, 0x114f0);\n    uVar2 = fcn.0040ba34();\n    if (*0x4472a8 != 0) {\n        fcn.00416e9e(*0x4472a8);\n        *0x4472a8 = 0;\n    }\n    cVar1 = fcn.00406b5d();\n    if (cVar1 == '\\0') {\n        iVar3 = fcn.0040c92e(uVar2);\n        if (iVar3 == 0) goto code_r0x0040c88a;\n    }\n    else {\n        iVar3 = 0xff;\n    }\n    fcn.00401906(iVar3);\ncode_r0x0040c88a:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 328
    },
    "0040ca83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040ca83(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *param_1 = 0x425d9c;\n    param_1[1] = 0x425dc0;\n    param_1[2] = 0x425dfc;\n    param_1[3] = 0x425e38;\n    param_1[4] = 0x425e54;\n    param_1[5] = 1;\n    fcn.00412c70(param_1 + 8, 0, 0x10);\n    return param_1;\n}\n",
        "token_count": 156
    },
    "0040cd0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040cd0e(int16_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        if (*param_1 == 0) {\n            return 0;\n        }\n        if ((*param_1 == 0x3c) && (param_1[1] == 0x2f)) {\n            uVar1 = 2;\n            do {\n                if (param_1[uVar1] == 0x3e) {\n                    return 1;\n                }\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < 0x14);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 160
    },
    "0040d0a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0040d0a5(int16_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *arg_8h;\n    int16_t *arg_8h_00;\n    int16_t *piVar4;\n    int16_t *piStack8;\n    \n    iVar3 = fcn.00416e83(param_1);\n    arg_8h = fcn.0041837b(iVar3 * 0xc + 0x200);\n    if (arg_8h != NULL) {\n        fcn.004189b6(arg_8h, L\"<style>body{font-family:\\\"Arial\\\";font-size:12;}</style>\");\n        iVar3 = fcn.00416e83(arg_8h);\n        iVar2 = *param_1;\n        piVar4 = param_1;\n        while (iVar2 != 0) {\n            iVar2 = *piVar4;\n            if ((((iVar2 == 0xd) && (piVar4[1] == 10)) && (piVar4[2] == 0xd)) && (piVar4[3] == 10)) {\n                arg_8h_00 = arg_8h + iVar3;\n                piStack8 = piVar4 + 2;\n                do {\n                    if (piVar4[3] != 10) break;\n                    fcn.004189b6(arg_8h_00, L\"<br>\");\n                    iVar3 = iVar3 + 4;\n                    piVar1 = piStack8 + 2;\n                    arg_8h_00 = arg_8h_00 + 4;\n                    piVar4 = piStack8;\n                    piStack8 = piVar1;\n                } while (*piVar1 == 0xd);\n                piVar4 = piVar4 + 1;\n            }\n            else if (((param_1 < piVar4) && (iVar2 == 0x20)) && (piVar4[-1] == 0x20)) {\n                fcn.004189b6(arg_8h + iVar3, L\"&nbsp;\");\n                iVar3 = iVar3 + 6;\n            }\n            else {\n                arg_8h[iVar3] = iVar2;\n                iVar3 = iVar3 + 1;\n            }\n            piVar4 = piVar4 + 1;\n            iVar2 = *piVar4;\n        }\n        arg_8h[iVar3] = 0;\n        fcn.00416e9e(param_1);\n        param_1 = arg_8h;\n    }\n    return param_1;\n}\n",
        "token_count": 585
    },
    "0040d1bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d1bd(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (arg_10h == NULL) {\n        return 0x80004003;\n    }\n    iVar1 = fcn.00413a04(arg_ch, 0x42653c, 0x10);\n    if (iVar1 == 0) {\ncode_r0x0040d27a:\n        *arg_10h = arg_8h;\n    }\n    else {\n        iVar1 = fcn.00413a04(arg_ch, 0x42657c, 0x10);\n        if (iVar1 == 0) {\n            piVar2 = arg_8h + 1;\n        }\n        else {\n            iVar1 = fcn.00413a04(arg_ch, 0x42655c, 0x10);\n            if (iVar1 == 0) {\n                piVar2 = arg_8h + 2;\n            }\n            else {\n                iVar1 = fcn.00413a04(arg_ch, 0x42652c, 0x10);\n                if (iVar1 == 0) {\n                    piVar2 = arg_8h + 3;\n                }\n                else {\n                    iVar1 = fcn.00413a04(arg_ch, 0x4265ac, 0x10);\n                    if (iVar1 != 0) {\n                        iVar1 = fcn.00413a04(arg_ch, 0x42651c, 0x10);\n                        if (iVar1 != 0) {\n                            *arg_10h = NULL;\n                            return 0x80004002;\n                        }\n                        goto code_r0x0040d27a;\n                    }\n                    piVar2 = arg_8h + 4;\n                }\n            }\n        }\n        *arg_10h = -(arg_8h != NULL) & piVar2;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    return 0;\n}\n",
        "token_count": 468
    },
    "0040db87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040db87(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint unaff_EDI;\n    int32_t *piStack60;\n    int32_t iStack56;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    int32_t iStack28;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceW)();\n    if (iVar1 != 0) {\n        uStack32 = *0x4486fc;\n        iStack36 = 0x40dbb6;\n        iStack28 = iVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)();\n        if (iVar2 != 0) {\n            uStack40 = *0x4486fc;\n            iStack36 = iVar1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n            if ((iVar1 != 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(),  iVar3 != 0)) {\n                piStack60 = 0x2;\n                iStack36 = 0;\n                iStack56 = iVar2;\n                iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n                if (iVar4 == 0) {\n                    return iVar1;\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n                if (iVar5 != 0) {\n                    fcn.00413490(iVar5, iVar3, iVar2);\n                    uStack40 = 0;\n                    iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar4, 0, &stack0xffffffd8);\n                    if (iVar2 == 0) {\n                        puVar6 = fcn.0040db1c(unaff_EDI, 0);\n                        (**(*piStack60 + 8))(piStack60);\n                        if (puVar6 != NULL) {\n                            iVar2 = puVar6[2];\n                            puVar6[2] = 0;\n                            if ((iVar2 == 0) &&\n                               (iVar2 = sub.gdiplus.dll_GdipCreateHBITMAPFromBitmap\n                                                  (puVar6[1], &stack0xffffffc4, 0xffffff),  iVar2 != 0)) {\n                                puVar6[2] = iVar2;\n                            }\n                            (***puVar6)(1);\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n                return iVar1;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 621
    },
    "0040dcaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040dcaa(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_retaddr;\n    uint uVar5;\n    uchar *puStack228;\n    int32_t *piStack224;\n    uchar *puStack220;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t *piStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    ulong uStack188;\n    int32_t *piStack180;\n    int32_t *piStack176;\n    int32_t *piStack172;\n    int32_t *piStack168;\n    int32_t iStack164;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    int32_t *piStack152;\n    uint uStack148;\n    uint uStack144;\n    int32_t *piStack140;\n    uchar *puStack136;\n    int32_t *piStack132;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar auStack68 [64];\n    int32_t iStack4;\n    \n    cVar1 = fcn.0040db5c();\n    if (cVar1 == '\\0') {\n        param_1 = fcn.0040dea1();\n    }\n    else {\n        (*_sym.imp.GDI32.dll_GetObjectW)();\n        piVar2 = (iStack72 * iStack4) / iStack76;\n        if (piVar2 < unaff_retaddr) {\n            unaff_retaddr = piVar2;\n        }\n        piStack132 = &stack0xffffff90;\n        puStack136 = 0x426094;\n        piStack140 = 0x1;\n        uStack144 = 0;\n        uStack148 = 0x4265dc;\n        piStack152 = 0x40dd18;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n        if (-1 < iVar3) {\n            piStack152 = &stack0xffffff80;\n            piStack156 = 0x2;\n            piStack160 = NULL;\n            iStack164 = param_1;\n            piStack168 = piStack132;\n            piStack172 = 0x40dd33;\n            iVar3 = (**(*piStack132 + 0x54))();\n            if (-1 < iVar3) {\n                uStack144 = 0;\n                piStack172 = &stack0xffffff70;\n                piStack176 = piStack152;\n                piStack180 = 0x40dd55;\n                iVar3 = (**(*piStack152 + 0x28))();\n                if (-1 < iVar3) {\n                    piStack180 = NULL;\n                    uStack188 = 0;\n                    uStack192 = 0;\n                    uStack196 = 0;\n                    uStack200 = 0x4265ec;\n                    piStack204 = piStack156;\n                    piStack208 = piStack152;\n                    piStack212 = 0x40dd86;\n                    iVar3 = (**(*piStack152 + 0x20))();\n                    if (-1 < iVar3) {\n                        piStack212 = 0x2c;\n                        puStack220 = &stack0xffffff78;\n                        piStack216 = NULL;\n                        piStack224 = 0x40dda3;\n                        fcn.00412c70();\n                        puStack136 = 0x28;\n                        piStack132 = iStack4;\n                        piStack212 = NULL;\n                        piStack216 = NULL;\n                        puStack220 = &stack0xffffff4c;\n                        piStack224 = NULL;\n                        puStack228 = &stack0xffffff78;\n                        uVar5 = 0;\n                        iVar3 = (*_sym.imp.GDI32.dll_CreateDIBSection)(0);\n                        iVar4 = 0;\n                        if (-1 < (-(iVar3 != 0) & 0x7ff8fff2) + 0x8007000e) {\n                            (**(*piStack216 + 0x2c))(piStack216, &stack0xffffff90);\n                            (**(_pe_dos_header + 0x20))(0, puStack220, &stack0xffffffbc, unaff_retaddr, 3);\n                            puStack220 = puStack136;\n                            puStack228 = NULL;\n                            piStack224 = NULL;\n                            piStack216 = unaff_retaddr;\n                            iVar4 = (**(*piStack140 + 0x1c))\n                                              (piStack140, &stack0xffffff1c, puStack136 << 2, \n                                               puStack136 * unaff_retaddr * 4, uVar5);\n                            if (iVar4 < 0) {\n                                (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n                                iVar3 = 0;\n                            }\n                            (**(*piStack160 + 8))(piStack160);\n                            iVar4 = iVar3;\n                        }\n                        (**(*piStack212 + 8))(piStack212);\n                        (**(*piStack212 + 8))(piStack212);\n                        (**(*piStack224 + 8))(piStack224);\n                        if (iVar4 == 0) {\n                            return param_1;\n                        }\n                        return iVar4;\n                    }\n                    piStack212 = uStack188._4_4_;\n                    piStack216 = 0x40dd94;\n                    (**(*uStack188._4_4_ + 8))();\n                }\n                piStack180 = piStack156;\n                uStack188 = CONCAT44(0x40dd63, uStack188);\n                (**(*piStack156 + 8))();\n            }\n            piStack172 = piStack152;\n            piStack176 = 0x40dd41;\n            (**(*piStack152 + 8))();\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1307
    },
    "0040dea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0040dea1(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t unaff_EBP;\n    uint uVar8;\n    uint uVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    uchar auStack36 [4];\n    uint uStack32;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint uStack8;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    uStack32 = uVar2;\n    iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar2);\n    iVar11 = iVar3;\n    uVar4 = (*pcVar1)(uVar2);\n    puVar10 = auStack36;\n    uVar9 = 0x18;\n    (*_sym.imp.GDI32.dll_GetObjectW)(uStack8, 0x18, puVar10);\n    iVar5 = (iVar11 * iStack16) / unaff_EBP;\n    if (iVar5 < iStack12) {\n        iStack12 = iVar5;\n    }\n    uVar6 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar2, iStack16, iStack12);\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    uVar7 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, uStack32);\n    uVar4 = (*pcVar1)(uVar4, uVar6);\n    uVar8 = 0;\n    (*_sym.imp.GDI32.dll_StretchBlt)(uVar2, 0, 0, unaff_EBP, iVar11, iStack16, 0, 0, uVar9, puVar10, 0xcc0020);\n    (*pcVar1)(iStack16, uVar7);\n    (*pcVar1)(uVar8, uVar4);\n    pcVar1 = _sym.imp.GDI32.dll_DeleteDC;\n    (*_sym.imp.GDI32.dll_DeleteDC)(iStack16);\n    (*pcVar1)(uVar7);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return uVar6;\n}\n",
        "token_count": 538
    },
    "0040e2af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.0040e2af(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    bool bVar6;\n    int16_t *piVar7;\n    bool bVar8;\n    uint uVar9;\n    \n    if ((param_1 == NULL) || (iVar3 = *param_1,  iVar3 == 0)) {\n        *param_2 = 0;\n        return NULL;\n    }\n    uVar9 = 0x2c;\n    bVar5 = false;\n    piVar7 = param_1;\n    do {\n        bVar6 = bVar5;\n        if (iVar3 == 0x22) {\n            piVar1 = piVar7 + 1;\n            if ((*piVar1 == 0x22) &&\n               (((bVar5 != false || (piVar7 != param_1)) || ((piVar7[2] != 0x2c && (piVar7[2] != 0)))))) {\n                *param_2 = 0x22;\n                piVar7 = piVar1;\n                goto code_r0x0040e335;\n            }\n            if (bVar5 == false) {\n                iVar4 = fcn.0041320e(piVar1, 0x22);\n                bVar6 = iVar4 != 0;\n            }\n            else {\n                bVar6 = false;\n            }\n            uVar9 = 0x2c;\n            bVar8 = bVar5 == bVar6;\n            bVar5 = bVar6;\n            if (bVar8) goto code_r0x0040e326;\n        }\n        else {\ncode_r0x0040e326:\n            if ((*piVar7 == 0x2c) && (bVar6 == false)) {\n                *param_2 = 0;\n                do {\n                    piVar7 = piVar7 + 1;\n                    cVar2 = fcn.00405ac7(uVar9, *piVar7);\n                } while (cVar2 != '\\0');\n                return piVar7;\n            }\n            *param_2 = *piVar7;\ncode_r0x0040e335:\n            param_2 = param_2 + 1;\n            bVar5 = bVar6;\n        }\n        piVar7 = piVar7 + 1;\n        iVar3 = *piVar7;\n        if (iVar3 == 0) {\n            *param_2 = 0;\n            return piVar7;\n        }\n        uVar9 = 0x22;\n    } while( true );\n}\n",
        "token_count": 602
    },
    "0040e729": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e729(ushort *pszPath, uint nFolder)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *var_8h;\n    uint dwReserved;\n    \n    (*_sym.imp.SHELL32.dll_SHGetMalloc)(&var_8h);\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetFolderLocation)(0, nFolder, 0, 0, &dwReserved);\n    uVar2 = 1 - (iVar1 != 0);\n    if (uVar2 == 0) {\n        *pszPath = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(dwReserved, pszPath);\n        uVar2 = 1 - (iVar1 != 1);\n        pszPath = (**(*var_8h + 0x14))(var_8h, dwReserved);\n    }\n    return pszPath & 0xffffff00 | uVar2;\n}\n",
        "token_count": 227
    },
    "004105d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004105d2(int16_t *param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    ushort *puVar4;\n    \n    iVar2 = fcn.0041320e(param_1, 0x20);\n    if (iVar2 != 0) {\n        if ((*param_1 == 0x22) && (piVar3 = fcn.00403592(param_1),  *piVar3 == 0x22)) {\n            return param_1;\n        }\n        iVar2 = fcn.00416e83(param_1);\n        iVar1 = (iVar2 + 3) * 2;\n        puVar4 = fcn.00412014(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.004189b6(puVar4 + 1, param_1);\n        puVar4[iVar2 + 1] = 0x22;\n        *puVar4 = 0x22;\n        puVar4[iVar2 + 2] = 0;\n        fcn.00405c1f(param_1, puVar4, param_1);\n        fcn.0041201d(puVar4);\n    }\n    return param_1;\n}\n",
        "token_count": 291
    },
    "00410653": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410653(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uStack180;\n    uint uStack176;\n    uint32_t uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    uint uStack132;\n    uint uStack128;\n    uint32_t uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    char cStack36;\n    \n    uStack112 = 0x68;\n    uStack116 = *0x448718;\n    uStack120 = 0x410668;\n    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (*0x448723 == '\\0') {\n        uStack120 = 0x41068a;\n        fcn.0040cbd9();\n        uStack120 = 5;\n        uStack128 = 0x410693;\n        uStack124 = uVar2;\n        (*_sym.imp.USER32.dll_ShowWindow)();\n        uStack128 = 0xffffffff;\n        uStack132 = 0;\n        puStack136 = 0xb1;\n        uStack144 = 0x41069e;\n        uStack140 = uVar2;\n        (*pcVar1)();\n        uStack144 = 0x425294;\n        uStack148 = 0;\n        puStack152 = 0xc2;\n        uStack160 = 0x4106a8;\n        uStack156 = uVar2;\n        (*pcVar1)();\n        *0x448723 = '\\x01';\n    }\n    uStack120 = 100000000;\n    uStack124 = 100000000;\n    uStack128 = 0xb1;\n    puStack136 = 0x4106be;\n    uStack132 = uVar2;\n    (*pcVar1)();\n    puStack136 = &stack0xffffff8c;\n    uStack116 = 0x5c;\n    uStack140 = 0;\n    uStack144 = 0x43a;\n    puStack152 = 0x4106d4;\n    uStack148 = uVar2;\n    (*pcVar1)();\n    uStack128 = 1;\n    if (cStack36 != '\\0') {\n        uStack112 = 0xa0;\n        uStack124 = uStack124 & 0xbfffffff | 1;\n        uStack128 = 0x40000001;\n    }\n    puStack152 = &stack0xffffff7c;\n    uStack156 = 1;\n    uStack160 = 0x444;\n    uStack168 = 0x410714;\n    uStack164 = uVar2;\n    (*pcVar1)();\n    uStack172 = 0;\n    uStack176 = 0xc2;\n    uStack180 = uVar2;\n    (*pcVar1)();\n    (*pcVar1)(uVar2, 0xb1, 100000000, 100000000);\n    if (cStack36 != '\\0') {\n        uStack172 = uStack172 & 0xfffffffe | 0x40000000;\n        (*pcVar1)(uVar2, 0x444, 1, &stack0xffffff4c);\n    }\n    (*pcVar1)(uVar2, 0xc2, 0, 0x4260e8);\n    return;\n}\n",
        "token_count": 793
    },
    "00410d22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d22(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *puVar3;\n    uchar auStack8196 [8152];\n    uint uStack44;\n    char16_t *pcStack40;\n    uint16_t *puStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    char16_t *pcStack16;\n    uint uStack12;\n    \n    fcn.00411c40();\n    uStack12 = arg_8h;\n    pcStack16 = L\"sfxcmd\";\n    uStack20 = 0x410d3e;\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)();\n    uStack20 = 0x1000;\n    puStack24 = &stack0xffffdffc;\n    uStack28 = arg_8h;\n    uStack32 = 0x410d52;\n    puVar3 = fcn.004059d0();\n    if (puVar3 != NULL) {\n        uVar1 = *puVar3;\n        while( true ) {\n            uStack32 = uVar1;\n            puStack36 = 0x410d6a;\n            cVar2 = fcn.00405ac7();\n            if (cVar2 == '\\0') break;\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        }\n        pcStack40 = L\"sfxpar\";\n        uStack44 = 0x410d7a;\n        puStack36 = puVar3;\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)();\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "00410f52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410f52(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1400h;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0x410f5f;\n    fcn.00411c40();\n    uStack8 = arg_ch;\n    uStack12 = 0x410f67;\n    uStack12 = fcn.004035ae();\n    puStack16 = ((arg_8h != 'T') - 1 & 0x17e) + 0x8d;\n    uStack20 = 0x410f82;\n    uStack20 = fcn.00403fb9();\n    puStack28 = &fcn.00410f52::var_1400h;\n    uStack24 = 0xa00;\n    uStack32 = 0x410f94;\n    fcn.004036d0();\n    puStack16 = &fcn.00410f52::var_1400h;\n    uStack20 = 0;\n    uStack24 = 0x410fa5;\n    fcn.00410653();\n    return;\n}\n",
        "token_count": 286
    },
    "004176bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004176bb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.004174c6(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 184
    },
    "00417abd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00417abd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.004174c6(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 217
    },
    "004181c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004181c5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.00416ea3(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 97
    },
    "0041971a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041971a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00424000(0x42c7e0, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.00419874();\n        if (cVar5 != '\\0') {\n            fcn.004198b8(*(unaff_EBP + 8));\n        }\n    }\n    fcn.0041c5c2(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4613f8 != '\\0') goto code_r0x004197f1;\n    *0x4613f0 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x42f0b8 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x4613f4 != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x42f0b8)) {\n            uVar6 = *0x42f0b8 ^ *0x4613f4;\n            (**0x425218)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x461518;\ncode_r0x004197b6:\n        fcn.0041a220(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x461524;\n        goto code_r0x004197b6;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.0041a550(0x425274, 0x425284);\n    }\n    fcn.0041a550(0x425288, 0x42528c);\n    if (iVar1 == 0) {\n        *0x4613f8 = '\\x01';\n    }\ncode_r0x004197f1:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00419824();\n    if (iVar1 == 0) {\n        fcn.00419833(*(unaff_EBP + 8));\n        fcn.00419707(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.00424049();\n    return;\n}\n",
        "token_count": 719
    },
    "0041acf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041acf0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0041acd5(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.00418c33(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "0041be9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be9a(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0041beae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041beae(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0041c5c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c5c2(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x461770);\n    return;\n}\n",
        "token_count": 50
    },
    "0041c60a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c60a(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x461770);\n    return;\n}\n",
        "token_count": 50
    },
    "0041cea3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cea3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0041ced8();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0041a87e(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 130
    },
    "0041d89d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d89d(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00420ff3(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.0041c100(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00412c70(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0041acc2();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 251
    },
    "0041db3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041db3e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b1a2();\n    return iVar1 + 8;\n}\n",
        "token_count": 46
    },
    "0041316a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041316a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004166f3(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004016b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016b0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4ch;\n    uint32_t var_ch;\n    \n    fcn.0040173c(arg_8h);\n    if (var_ch < 8) {\n        (&var_4ch)[var_ch] = arg_ch;\n        var_ch = var_ch + 1;\n    }\n    fcn.00406682();\n    return;\n}\n",
        "token_count": 98
    },
    "004016e1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016e1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_4ch;\n    uint auStack76 [15];\n    uint32_t var_ch;\n    \n    fcn.0040173c(arg_8h);\n    uVar1 = var_ch;\n    if (var_ch < 8) {\n        auStack76[var_ch - 1] = arg_ch;\n        uVar1 = var_ch + 1;\n        if (var_ch + 1 < 8) {\n            auStack76[var_ch] = arg_10h;\n            uVar1 = var_ch + 2;\n        }\n    }\n    var_ch = uVar1;\n    fcn.00406682();\n    return;\n}\n",
        "token_count": 176
    },
    "00407026": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407026(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_4ch;\n    uint auStack76 [15];\n    uint32_t var_ch;\n    \n    fcn.0040173c(arg_8h);\n    uVar1 = var_ch;\n    if (var_ch < 8) {\n        auStack76[var_ch - 1] = arg_ch;\n        uVar1 = var_ch + 1;\n        if (var_ch + 1 < 8) {\n            auStack76[var_ch] = arg_10h;\n            uVar1 = var_ch + 2;\n            if (var_ch + 2 < 8) {\n                auStack76[var_ch + 1] = arg_14h;\n                uVar1 = var_ch + 3;\n            }\n        }\n    }\n    var_ch = uVar1;\n    fcn.00406682();\n    return;\n}\n",
        "token_count": 223
    },
    "0041c502": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c502(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0041a87e(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00405e06": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e06(int32_t param_1)\n\n{\n    *(param_1 + 0x14) = 0;\n    fcn.00405de9();\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x5c) = 0;\n    return;\n}\n",
        "token_count": 78
    },
    "0040caca": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040caca(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x1e) = 0;\n    param_1[8] = 0;\n    return param_1;\n}\n",
        "token_count": 141
    },
    "0040d79e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d79e(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar1 = param_1[7];\n    if (puVar1 != NULL) {\n        var_8h = param_1;\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x42654c, &var_4h);\n        if (-1 < iVar2) {\n            (**(*var_4h + 0x18))(var_4h, 1);\n            (**(*var_4h + 0xc))(var_4h, 0);\n            (**(*var_4h + 8))(var_4h);\n        }\n        iVar2 = (***param_1[7])(param_1[7], 0x42656c, &var_8h);\n        if (-1 < iVar2) {\n            (**(*var_8h + 0x18))(var_8h);\n            (**(*var_8h + 0x14))(var_8h);\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*param_1[7] + 8))(param_1[7]);\n        param_1[7] = 0;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00423cf7": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00423cf7(void)\n\n{\n    *0x42f810 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00413a04": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413a04(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x00415059:\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        goto code_r0x00415059;\n    }\n    if (arg_10h == 3) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        goto code_r0x00415059;\n    }\n    if (arg_10h == 4) {\n        uVar1 = *arg_ch;\n        uVar3 = *arg_8h;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        goto code_r0x00415059;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = *arg_8h & 0xff;\n                uVar1 = *arg_ch;\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 1);\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 2);\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[1] & 0xff;\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 5);\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 6);\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[2] & 0xff;\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 9);\n                uVar1 = *(arg_ch + 9);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 10);\n                uVar1 = *(arg_ch + 10);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[3] & 0xff;\n                uVar1 = *(arg_ch + 3);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xd);\n                uVar1 = *(arg_ch + 0xd);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xe);\n                uVar1 = *(arg_ch + 0xe);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(arg_ch + 4);\n                uVar3 = *(arg_8h + 4);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x11);\n                uVar1 = *(arg_ch + 0x11);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x12);\n                uVar1 = *(arg_ch + 0x12);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[5] & 0xff;\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x15);\n                uVar1 = *(arg_ch + 0x15);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x16);\n                uVar1 = *(arg_ch + 0x16);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[6] & 0xff;\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x19);\n                uVar1 = *(arg_ch + 0x19);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1a);\n                uVar1 = *(arg_ch + 0x1a);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[7] & 0xff;\n                uVar1 = *(arg_ch + 7);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1d);\n                uVar1 = *(arg_ch + 0x1d);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1e);\n                uVar1 = *(arg_ch + 0x1e);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x415104\n    switch(arg_10h) {\n    default:\n        goto code_r0x0041430e;\n    case 1:\n        goto code_r0x0041472a;\n    case 2:\n        goto code_r0x00414b6f;\n    case 3:\n        goto code_r0x00414fa5;\n    case 4:\n        goto code_r0x0041428b;\n    case 5:\n        goto code_r0x00414693;\n    case 6:\n        goto code_r0x00414ad8;\n    case 7:\n        goto code_r0x00414f0e;\n    case 8:\n        goto code_r0x004141f4;\n    case 9:\n        goto code_r0x004145fb;\n    case 10:\n        goto code_r0x00414a40;\n    case 0xb:\n        goto code_r0x00414e77;\n    case 0xc:\n        goto code_r0x0041415c;\n    case 0xd:\n        goto code_r0x00414564;\n    case 0xe:\n        goto code_r0x004149a9;\n    case 0xf:\n        goto code_r0x00414ddf;\n    case 0x10:\n        goto code_r0x004140c5;\n    case 0x11:\n        goto code_r0x004144cd;\n    case 0x12:\n        goto code_r0x00414912;\n    case 0x13:\n        goto code_r0x00414d48;\n    case 0x14:\n        goto code_r0x0041402e;\n    case 0x15:\n        goto code_r0x00414436;\n    case 0x16:\n        goto code_r0x0041487b;\n    case 0x17:\n        goto code_r0x00414cb1;\n    case 0x18:\n        goto code_r0x00413f97;\n    case 0x1a:\n        goto code_r0x004147e4;\n    case 0x1b:\n        goto code_r0x00414c1a;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00413f97:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041402e:\n        uVar1 = *(arg_8h + (arg_10h - 0x14));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004140c5:\n        uVar1 = *(arg_8h + (arg_10h - 0x10));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041415c:\n        if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004141f4:\n        uVar1 = *(arg_8h + (arg_10h - 8));\n        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 8));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041428b:\n        uVar1 = *(arg_8h + (arg_10h - 4));\n        if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 4));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 == 0) {\ncode_r0x0041430e:\n            iVar2 = 0;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414436:\n        uVar1 = *(arg_8h + (arg_10h - 0x15));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004144cd:\n        uVar1 = *(arg_8h + (arg_10h - 0x11));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414564:\n        uVar1 = *(arg_8h + (arg_10h - 0xd));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004145fb:\n        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414693:\n        uVar1 = *(arg_8h + (arg_10h - 5));\n        if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 5));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\ncode_r0x00414722:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041472a:\n        uVar1 = *(arg_ch + (arg_10h - 1));\n        uVar3 = *(arg_8h + (arg_10h - 1));\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004147e4:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0041487b:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414912:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x004149a9:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414a40:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414ad8:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 6));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414b6f:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x00414fc7:\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            if (uVar3 == uVar1) goto code_r0x0041472a;\n            iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1;\n            goto code_r0x00414722;\n        }\n        goto code_r0x0041430e;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0x1f));\n            uVar3 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1e));\n            uVar1 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414c1a:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414cb1:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414d48:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414ddf:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414e77:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414f0e:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 7));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x00414fa5:\n        uVar3 = *(arg_8h + (arg_10h - 3));\n        uVar1 = *(arg_ch + (arg_10h - 3));\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        goto code_r0x00414fc7;\n    }\n}\n",
        "token_count": 16827
    },
    "004026bd": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004026bd(uint lpFileName, uint dwFileAttributes)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_1000h;\n    uint uStackY40;\n    uint *puStackY36;\n    uint uStackY32;\n    \n    fcn.00411c40();\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    bVar2 = uVar1 != 0;\n    if (!bVar2) {\n        uStackY32 = 0x4026f4;\n        uVar1 = fcn.00403283(lpFileName, &fcn.004026bd::var_1000h, 0x800);\n        if (uVar1 != '\\0') {\n            uStackY32 = dwFileAttributes;\n            puStackY36 = &fcn.004026bd::var_1000h;\n            uStackY40 = 0x402708;\n            uVar1 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n            bVar2 = uVar1 != 0;\n        }\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 262
    },
    "0040cc84": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc84(int32_t arg_8h, int32_t **arg_ch, uint *arg_10h, uint *arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = -(arg_8h != 4) & arg_8h + 4U;\n    *arg_10h = 0;\n    (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 0x14), &var_10h);\n    arg_14h[2] = var_8h;\n    *arg_14h = 0;\n    arg_14h[1] = 0;\n    arg_14h[3] = var_4h;\n    (*_sym.imp.USER32.dll_CopyRect)(arg_18h, arg_14h);\n    *arg_1ch = 0x14;\n    arg_1ch[1] = 0;\n    arg_1ch[2] = *(arg_8h + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    (**(**arg_ch + 4))(*arg_ch);\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040f945": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040f945(uint param_1, int16_t *param_2, uint param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00405c1f(param_2, param_1, param_3);\n    iVar3 = 0;\n    iVar2 = *param_2;\n    piVar1 = param_2;\n    while (iVar2 != 0) {\n        iVar2 = *piVar1;\n        if (((iVar2 == 0x3a) || (iVar2 == 0x5c)) || (iVar2 == 0x2f)) {\n            *piVar1 = 0x25;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = param_2 + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00410d81": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d81(uint hHandle)\n\n{\n    int32_t iVar1;\n    uint lpMsg;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 10);\n    while (iVar1 == 0x102) {\n        (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 10);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0040d99d": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040d99d(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4265cc, 0, 1, 0x4264fc, &ppv);\n    if (-1 < uVar1) {\n        iVar2 = (***ppv)(ppv, 0x4265bc, &var_8h);\n        if (-1 < iVar2) {\n            if (arg_8h != '\\0') {\n                (**(*var_8h + 0x14))(var_8h, arg_10h, 2);\n            }\n            (**(*ppv + 0x50))(ppv, arg_ch);\n            if (arg_18h != 0) {\n                (**(*ppv + 0x1c))(ppv, arg_18h);\n            }\n            if (arg_1ch == 0) {\n                arg_1ch = 0x425294;\n            }\n            (**(*ppv + 0x44))(ppv, arg_1ch, 0);\n            if (arg_20h != 0) {\n                (**(*ppv + 0x2c))(ppv, arg_20h);\n            }\n            if (arg_14h != 0) {\n                (**(*ppv + 0x24))(ppv, arg_14h);\n            }\n            iVar2 = (**(*var_8h + 0x18))(var_8h, arg_10h, 1);\n            uVar3 = -1 < iVar2;\n            (**(*var_8h + 8))(var_8h);\n        }\n        uVar1 = (**(*ppv + 8))(ppv);\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 480
    },
    "00404db5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404db5(uchar *param_1, int32_t param_2)\n\n{\n    if ((param_1 != NULL) && (param_2 != 0)) {\n        do {\n            *param_1 = 0;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00409b7a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00409b7a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) {\n        do {\n            iVar1 = *(param_1 + -4);\n            fcn.00416e9e(param_1 + -8);\n            param_1 = iVar1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0040c0dd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c0dd(void)\n\n{\n    char *unaff_retaddr;\n    \n    fcn.0040167b(0x436df0);\n    *0x448380 = 0x12345678;\n    *0x448384 = 0x23456789;\n    *0x448388 = 0x34567890;\n    for (; *unaff_retaddr != '\\0'; unaff_retaddr = unaff_retaddr + 1) {\n        fcn.0040c1d1();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00418435": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00418435(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 == 0) {\n        iVar1 = fcn.0041a8b8(param_2);\n    }\n    else {\n        if (param_2 == 0) {\n            fcn.0041a87e(param_1);\n        }\n        else {\n            if (param_2 < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4619bc, 0, param_1, param_2);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.0041a6ed();\n                } while ((iVar1 != 0) && (iVar1 = fcn.0041a3c7(param_2),  iVar1 != 0));\n            }\n            puVar2 = fcn.0041acc2();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 260
    },
    "00402397": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402397(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint var_1000h;\n    uint uStackY32;\n    uint *puStackY28;\n    \n    fcn.00411c40();\n    uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n    bVar2 = uVar1 != 0;\n    if (!bVar2) {\n        puStackY28 = 0x4023cb;\n        uVar1 = fcn.00403283(lpFileName, &fcn.00402397::var_1000h, 0x800);\n        if (uVar1 != '\\0') {\n            puStackY28 = &fcn.00402397::var_1000h;\n            uStackY32 = 0x4023dc;\n            uVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            bVar2 = uVar1 != 0;\n        }\n    }\n    return uVar1 & 0xffffff00 | bVar2;\n}\n",
        "token_count": 238
    },
    "00405e92": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e92(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLibFileName;\n    uint uStackY40;\n    uint *puStackY36;\n    \n    fcn.00411c40();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n    if (iVar1 != 0) {\n        puStackY36 = 0x405ec8;\n        fcn.004034cc(&fcn.00405e92::lpLibFileName, arg_8h, &fcn.00405e92::lpLibFileName, 0x800);\n        puStackY36 = &fcn.00405e92::lpLibFileName;\n        uStackY40 = 0x405ed5;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040db45": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nbool fcn.0040db45(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(param_2, param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 62
    },
    "004056fc": {
        "rules": [
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.004056fc(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 119
    },
    "0040df7f": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df7f(int32_t hWnd)\n\n{\n    int32_t iVar1;\n    uint lpClassName;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetClassNameW)(hWnd, &lpClassName, 0x50);\n    if ((iVar1 != 0) && (iVar1 = fcn.00406fa3(&lpClassName, 0x426088),  iVar1 != 0)) {\n        hWnd = (*_sym.imp.USER32.dll_FindWindowExW)(hWnd, 0, 0x426088, 0);\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.SHLWAPI.dll_SHAutoComplete)(hWnd, 0x10);\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0040dfda": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nbool fcn.0040dfda(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(param_1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    }
}