{
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406a8a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00406a8a(uint32_t *param_1)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint8_t uStack169;\n    uint32_t auStack164 [4];\n    int32_t iStack148;\n    uint32_t uStack144;\n    uint8_t *puStack140;\n    int32_t iStack136;\n    uint8_t *puStack132;\n    int32_t iStack128;\n    uint32_t uStack124;\n    uint8_t uStack120;\n    uint8_t uStack119;\n    uint16_t *puStack116;\n    uint16_t *puStack112;\n    int32_t iStack108;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    uint32_t *puStack4;\n    \n    puStack4 = param_1;\n    puVar15 = auStack164;\n    for (iVar7 = 0x22; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar15 = *param_1;\n        param_1 = param_1 + 1;\n        puVar15 = puVar15 + 1;\n    }\n    if (iStack76 == -1) {\n        return 1;\n    }\n    uStack16 = uStack52;\n    uStack20 = uStack56;\n    uStack24 = uStack104;\n    uStack169 = uStack119;\n    iStack12 = 9;\n    iStack8 = 8;\n    uStack176 = uStack72;\n    uStack180 = uStack100;\n    uVar8 = uStack100;\n    uVar4 = uStack72;\n    uVar9 = uStack44;\n    uVar10 = uStack96;\n    uVar14 = uStack92;\n    uVar16 = uStack40;\ncode_r0x00406b26:\n    uVar3 = uStack60;\n    uVar5 = uVar9;\n    uVar12 = uVar10;\n    // switch table (29 cases) at 0x4077e2\n    switch(auStack164[0]) {\n    case 0:\n        if (iStack136 == 0) goto code_r0x004077be;\n        iStack136 = iStack136 + -1;\n        uVar1 = *puStack140;\n        puStack140 = puStack140 + 1;\n        if (0xe1 < uVar1) {\n            return 0xffffffff;\n        }\n        uStack88 = (uVar1 % 0x2d) % 9;\n        uStack20 = (1 << uVar1 / 0x2d) - 1;\n        uStack56 = uStack20;\n        uStack16 = (1 << (uVar1 % 0x2d) / 9) - 1;\n        uStack52 = uStack16;\n        iVar13 = (0x300 << uStack88 + uVar1 / 0x2d) + 0x736;\n        iVar7 = iStack32;\n        if (iVar13 * 2 != iStack148) {\n            if (iStack32 != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack32);\n            }\n            iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar13 * 2);\n            iStack32 = iVar7;\n            if (iVar7 == 0) {\n                return 0xffffffff;\n            }\n            iStack148 = iVar13 * 2;\n        }\n        do {\n            iVar13 = iVar13 + -1;\n            *(iVar7 + iVar13 * 2) = 0x400;\n        } while (iVar13 != 0);\n        uVar8 = 0;\n        uVar14 = 0;\n        while( true ) {\n            uStack100 = uVar8;\n            uStack92 = uVar14;\n            uStack180 = uVar8;\n            if (3 < uVar8) break;\ncode_r0x00406c0b:\n            if (iStack136 == 0) {\n                auStack164[0] = 1;\n                goto code_r0x004077be;\n            }\n            iStack136 = iStack136 + -1;\n            uVar14 = uVar14 | *puStack140 << (uVar8 << 3 & 0x1f);\n            uVar8 = uStack180 + 1;\n            puStack140 = puStack140 + 1;\n        }\n        if (uVar14 != uStack144) {\n            uStack144 = uVar14;\n            if (iStack36 != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack36);\n            }\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar14);\n            if (iStack36 == 0) {\n                return 0xffffffff;\n            }\n        }\n        *(iStack36 + -1 + uStack144) = 0;\n        uVar8 = 5;\n        while( true ) {\n            uStack180 = uVar8 - 1;\n            uStack100 = uStack180;\n            bVar17 = uVar8 == 0;\n            uVar8 = uStack180;\n            if (bVar17) break;\ncode_r0x00406c90:\n            if (iStack136 == 0) {\n                auStack164[0] = 3;\n                goto code_r0x004077be;\n            }\n            iStack136 = iStack136 + -1;\n            uVar16 = uVar16 << 8 | *puStack140;\n            uStack40 = uVar16;\n            puStack140 = puStack140 + 1;\n        }\n    case 2:\n        uStack24 = uStack124 & uStack20;\n        uStack104 = uStack24;\n        auStack164[1] = 6;\n        puStack112 = iStack32 + (iStack84 * 0x10 + uStack24) * 2;\n        break;\n    case 1:\n        goto code_r0x00406c0b;\n    case 3:\n        goto code_r0x00406c90;\n    case 4:\n        break;\n    case 5:\n        goto code_r0x004075d7;\n    case 6:\n        if (uVar14 != 0) {\n            iStack80 = 1;\n            auStack164[1] = 7;\n            puStack112 = iStack32 + iStack84 * 2 + 0x180;\ncode_r0x00406db7:\n            break;\n        }\n        puStack116 = ((uStack120 >> (8 - uStack88 & 0x1f)) + ((uStack124 & uStack16) << (uStack88 & 0x1f))) * 0x600 +\n                     iStack32 + 0xe6c;\n        if (iStack84 < 4) {\n            iStack84 = 0;\n        }\n        else {\n            if (iStack84 < 10) {\n                iVar7 = -3;\n            }\n            else {\n                iVar7 = -6;\n            }\n            iStack84 = iStack84 + iVar7;\n        }\n        if (iStack80 == 0) {\n            uVar10 = 1;\n            uVar8 = uVar9;\n            do {\n                puStack112 = puStack116 + uVar10;\n                uStack28 = uVar10 * 2;\n                uVar9 = (uVar8 >> 0xb) * *puStack112;\n                if (uVar16 < uVar9) {\n                    uVar6 = (0x800 - *puStack112 >> 5) + *puStack112;\n                    uVar10 = uVar10 * 2;\n                }\n                else {\n                    uVar16 = uVar16 - uVar9;\n                    uVar9 = uVar8 - uVar9;\n                    uStack40 = uVar16;\n                    uVar6 = *puStack112 - (*puStack112 >> 5);\n                    uVar10 = uVar10 * 2 + 1;\n                }\n                uStack96 = uVar10;\n                *puStack112 = uVar6;\n                uStack44 = uVar9;\n                if (uVar9 < 0x1000000) {\ncode_r0x00406f85:\n                    if (iStack136 == 0) {\n                        auStack164[0] = 0xf;\n                        goto code_r0x004077be;\n                    }\n                    uVar9 = uVar9 << 8;\n                    iStack136 = iStack136 + -1;\n                    uVar16 = uVar16 << 8 | *puStack140;\n                    uStack44 = uVar9;\n                    uStack40 = uVar16;\n                    puStack140 = puStack140 + 1;\n                }\n                uVar8 = uVar9;\n            } while (uVar10 < 0x100);\n            uStack120 = uStack96;\n            uStack44 = uVar9;\n            goto code_r0x0040704b;\n        }\n        uVar8 = uStack48 - uStack176;\n        if (uStack144 <= uVar8) {\n            uVar8 = uVar8 + uStack144;\n        }\n        uVar10 = 1;\n        uStack169 = *(uVar8 + iStack36);\n        uVar4 = uVar9;\n        do {\n            uStack119 = uStack169 * '\\x02';\n            uVar8 = uStack169 >> 7;\n            uStack100 = uVar8;\n            puStack112 = puStack116 + (uVar8 + 1) * 0x100 + uVar10;\n            uVar6 = *puStack112;\n            uStack28 = uVar6;\n            uVar9 = (uVar4 >> 0xb) * uStack28;\n            bVar17 = uVar9 <= uVar16;\n            if (bVar17) {\n                uVar16 = uVar16 - uVar9;\n                uVar10 = uVar10 * 2 + 1;\n                uVar9 = uVar4 - uVar9;\n                uStack40 = uVar16;\n                iVar2 = -(uVar6 >> 5);\n            }\n            else {\n                iVar2 = 0x800 - uStack28 >> 5;\n                uVar10 = uVar10 * 2;\n            }\n            uVar14 = bVar17;\n            uStack96 = uVar10;\n            *puStack112 = iVar2 + uVar6;\n            uStack44 = uVar9;\n            uStack92 = uVar14;\n            uStack180 = uVar8;\n            uStack169 = uStack119;\n            if (uVar9 < 0x1000000) {\ncode_r0x00406dc5:\n                if (iStack136 == 0) {\n                    auStack164[0] = 0xd;\n                    goto code_r0x004077be;\n                }\n                uVar9 = uVar9 << 8;\n                iStack136 = iStack136 + -1;\n                uStack44 = uVar9;\n                uVar16 = uVar16 << 8 | *puStack140;\n                uStack40 = uVar16;\n                puStack140 = puStack140 + 1;\n            }\n            uStack44 = uVar9;\n            if (uVar8 != uVar14) goto code_r0x00406eee;\n            uVar4 = uVar9;\n        } while (uVar10 < 0x100);\n        goto code_r0x00406f73;\n    case 7:\n        if (uVar14 == 1) {\n            auStack164[1] = 8;\n            puStack112 = iStack32 + iStack84 * 2 + 0x198;\n            goto code_r0x00406db7;\n        }\n        uStack60 = uStack64;\n        uStack64 = uStack68;\n        uStack68 = uVar4;\n        iVar7 = 10;\n        if (iStack84 < 7) {\n            iVar7 = 7;\n        }\n        auStack164[2] = 0x16;\n        iStack84 = iVar7;\n        puStack116 = iStack32 + 0x664;\n        goto code_r0x00407533;\n    case 8:\n        if (uVar14 == 0) {\n            auStack164[1] = 9;\n            puStack112 = iStack32 + ((iStack84 + 0xf) * 0x10 + uStack24) * 2;\n            goto code_r0x00406db7;\n        }\n        auStack164[1] = 10;\n        puStack112 = iStack32 + iStack84 * 2 + 0x1b0;\n        break;\n    case 9:\n        if (uVar14 != 0) goto code_r0x00407250;\n        if (uStack124 == 0) {\n            return 0xffffffff;\n        }\n        iVar7 = 0xb;\n        if (iStack84 < 7) {\n            iVar7 = iStack12;\n        }\n        iStack84 = iVar7;\n    case 0x1b:\n        if (iStack128 == 0) {\n            auStack164[0] = 0x1b;\n            goto code_r0x004077be;\n        }\n        uVar4 = uStack48 - uVar4;\n        if (uStack144 <= uVar4) {\n            uVar4 = uVar4 + uStack144;\n        }\n        uStack120 = *(uVar4 + iStack36);\n        *(uStack48 + iStack36) = uStack120;\n        uStack124 = uStack124 + 1;\n        *puStack132 = uStack120;\n        iStack128 = iStack128 + -1;\n        uStack48 = (uStack48 + 1) % uStack144;\n        puStack132 = puStack132 + 1;\n        auStack164[0] = 2;\n        goto code_r0x004071d0;\n    case 10:\n        uVar8 = uStack68;\n        if (uVar14 == 0) goto code_r0x0040723f;\n        auStack164[1] = 0xb;\n        puStack112 = iStack32 + iStack84 * 2 + 0x1c8;\n        break;\n    case 0xb:\n        uVar8 = uStack64;\n        if (uVar14 != 0) {\n            uStack60 = uStack64;\n            uVar8 = uVar3;\n        }\n        uStack64 = uStack68;\ncode_r0x0040723f:\n        uStack68 = uVar4;\n        uStack72 = uVar8;\n        uStack176 = uVar8;\ncode_r0x00407250:\n        auStack164[2] = 0x15;\n        puStack116 = iStack32 + 0xa68;\n        goto code_r0x00407533;\n    case 0xc:\n        while (iStack136 != 0) {\n            uVar9 = uVar9 << 8;\n            iStack136 = iStack136 + -1;\n            uVar16 = uVar16 << 8 | *puStack140;\n            uStack44 = uVar9;\n            uStack40 = uVar16;\n            puStack140 = puStack140 + 1;\n            do {\n                uVar8 = uVar8 - 1;\n                uStack44 = uVar9;\ncode_r0x00407335:\n                uStack100 = uVar8;\n                if (uVar8 < 1) {\n                    uStack176 = uStack176 + uVar10 * 0x10;\n                    puStack116 = iStack32 + 0x644;\n                    uStack72 = uStack176;\n                    uVar14 = 4;\n                    goto code_r0x0040738d;\n                }\n                uVar9 = uVar9 >> 1;\n                uVar10 = uVar10 * 2;\n                uStack44 = uVar9;\n                uStack96 = uVar10;\n                if (uVar9 <= uVar16) {\n                    uVar16 = uVar16 - uVar9;\n                    uVar10 = uVar10 | 1;\n                    uStack40 = uVar16;\n                    uStack96 = uVar10;\n                }\n            } while (0xffffff < uVar9);\n        }\n        auStack164[0] = 0xc;\n        goto code_r0x004077be;\n    case 0xd:\n        goto code_r0x00406dc5;\n    case 0xe:\n        goto code_r0x00406ebb;\n    case 0xf:\n        goto code_r0x00406f85;\n    case 0x10:\n        goto code_r0x004073a6;\n    case 0x11:\ncode_r0x00407533:\n        auStack164[1] = 0x12;\n        puStack112 = puStack116;\n        break;\n    case 0x12:\n        if (uVar14 == 0) {\n            iStack76 = 0;\n            puVar11 = puStack116 + 2;\ncode_r0x0040755c:\n            puStack116 = puVar11 + uStack24 * 8;\n            uStack92 = 3;\n            goto code_r0x0040764b;\n        }\n        auStack164[1] = 0x13;\n        puStack112 = puStack116 + 1;\n        break;\n    case 0x13:\n        if (uVar14 == 0) {\n            iStack76 = 8;\n            puVar11 = puStack116 + 0x82;\n            goto code_r0x0040755c;\n        }\n        puStack116 = puStack116 + 0x102;\n        iStack76 = 0x10;\n        uStack92 = 8;\ncode_r0x0040764b:\n        auStack164[3] = 0x14;\n        goto code_r0x00407653;\n    case 0x14:\n        goto code_r0x00407730;\n    case 0x15:\n        iVar7 = 0xb;\n        if (iStack84 < 7) {\n            iVar7 = iStack8;\n        }\n        iStack84 = iVar7;\n        goto code_r0x00407498;\n    case 0x16:\n        iVar7 = 3;\n        if (iStack76 < 4) {\n            iVar7 = iStack76;\n        }\n        auStack164[3] = 0x19;\n        puStack116 = iVar7 * 0x80 + iStack32 + 0x360;\n        uStack92 = 6;\ncode_r0x00407653:\n        uVar14 = uStack92;\ncode_r0x00407657:\n        uVar8 = uVar14;\n        iStack108 = 1;\n        uVar14 = uVar8;\n        for (; uStack100 = uVar8,  0 < uVar8; uVar8 = uVar8 - 1) {\n            puStack112 = puStack116 + iStack108;\n            uVar9 = (uVar5 >> 0xb) * *puStack112;\n            if (uVar16 < uVar9) {\n                uVar6 = (0x800 - *puStack112 >> 5) + *puStack112;\n                iStack108 = iStack108 << 1;\n            }\n            else {\n                uVar16 = uVar16 - uVar9;\n                uVar9 = uVar5 - uVar9;\n                uStack40 = uVar16;\n                uVar6 = *puStack112 - (*puStack112 >> 5);\n                iStack108 = iStack108 * 2 + 1;\n            }\n            *puStack112 = uVar6;\n            uStack44 = uVar9;\n            if (uVar9 < 0x1000000) {\ncode_r0x00407662:\n                if (iStack136 == 0) {\n                    auStack164[0] = 0x18;\n                    goto code_r0x004077be;\n                }\n                uVar9 = uVar9 << 8;\n                iStack136 = iStack136 + -1;\n                uVar16 = uVar16 << 8 | *puStack140;\n                uStack44 = uVar9;\n                uStack40 = uVar16;\n                puStack140 = puStack140 + 1;\n            }\n            uVar5 = uVar9;\n            uStack44 = uVar9;\n        }\n        uVar10 = iStack108 - (1 << (uVar14 & 0x1f));\n        uStack96 = uVar10;\n        auStack164[0] = auStack164[3];\n        uStack180 = uVar8;\n        goto code_r0x004071d0;\n    case 0x17:\n        goto code_r0x00407657;\n    case 0x18:\n        goto code_r0x00407662;\n    case 0x19:\n        if (3 < uVar10) {\n            iVar7 = uVar10 >> 1;\n            uVar14 = iVar7 - 1;\n            uStack176 = (uVar10 & 1 | 2) << (uVar14 & 0x1f);\n            uStack72 = uStack176;\n            if (0xd < uVar10) {\n                uVar10 = 0;\n                uVar8 = iVar7 - 5;\n                goto code_r0x00407335;\n            }\n            puStack116 = iStack32 + 0x55e + (uStack176 - uVar10) * 2;\ncode_r0x0040738d:\n            uVar12 = 0;\n            uStack92 = uVar14;\n            uStack96 = 0;\n            iStack108 = 1;\n            uVar4 = uVar9;\n            for (uVar8 = 0; uStack100 = uVar8,  uVar8 < uVar14; uVar8 = uVar8 + 1) {\n                puStack112 = puStack116 + iStack108;\n                uStack28 = iStack108 * 2;\n                uVar9 = (uVar4 >> 0xb) * *puStack112;\n                if (uVar16 < uVar9) {\n                    uVar6 = (0x800 - *puStack112 >> 5) + *puStack112;\n                    iStack108 = iStack108 << 1;\n                }\n                else {\n                    uVar12 = uVar12 | 1 << (uVar8 & 0x1f);\n                    uVar16 = uVar16 - uVar9;\n                    uVar9 = uVar4 - uVar9;\n                    uStack96 = uVar12;\n                    uVar6 = *puStack112 - (*puStack112 >> 5);\n                    uStack40 = uVar16;\n                    iStack108 = iStack108 * 2 + 1;\n                }\n                *puStack112 = uVar6;\n                uStack44 = uVar9;\n                if (uVar9 < 0x1000000) {\ncode_r0x004073a6:\n                    if (iStack136 == 0) {\n                        auStack164[0] = 0x10;\n                        goto code_r0x004077be;\n                    }\n                    uVar9 = uVar9 << 8;\n                    iStack136 = iStack136 + -1;\n                    uVar16 = uVar16 << 8 | *puStack140;\n                    uStack44 = uVar9;\n                    uStack40 = uVar16;\n                    puStack140 = puStack140 + 1;\n                }\n                uVar4 = uVar9;\n                uStack44 = uVar9;\n            }\n            uVar10 = uStack176 + uVar12;\n            uVar9 = uVar4;\n            uStack180 = uVar8;\n        }\n        uVar4 = uVar10 + 1;\n        uStack72 = uVar4;\n        uVar10 = uVar12;\n        uStack176 = uVar4;\ncode_r0x00407498:\n        if (uVar4 == 0) {\n            iStack76 = 0xffffffff;\n            goto code_r0x004077be;\n        }\n        if (uStack124 < uVar4) {\n            return 0xffffffff;\n        }\n        uStack124 = uStack124 + iStack76 + 2;\n        iStack76 = iStack76 + 2;\ncode_r0x004074b9:\n        do {\n            if (iStack128 == 0) {\n                auStack164[0] = 0x1c;\n                goto code_r0x004077be;\n            }\n            uVar4 = uStack48 - uVar4;\n            if (uStack144 <= uVar4) {\n                uVar4 = uVar4 + uStack144;\n            }\n            uStack120 = *(uVar4 + iStack36);\n            *(uStack48 + iStack36) = uStack120;\n            *puStack132 = uStack120;\n            iStack128 = iStack128 + -1;\n            iStack76 = iStack76 + -1;\n            uStack48 = (uStack48 + 1) % uStack144;\n            puStack132 = puStack132 + 1;\n            uVar4 = uStack176;\n        } while (0 < iStack76);\n        goto code_r0x00407527;\n    case 0x1a:\n        goto code_r0x0040704b;\n    case 0x1c:\n        goto code_r0x004074b9;\n    default:\n        return 0xffffffff;\n    }\n    uVar6 = *puStack112;\n    uVar5 = (uVar9 >> 0xb) * uVar6;\n    bVar17 = uVar5 <= uVar16;\n    if (bVar17) {\n        uVar16 = uVar16 - uVar5;\n        uVar5 = uVar9 - uVar5;\n        uStack40 = uVar16;\n        *puStack112 = uVar6 - (uVar6 >> 5);\n    }\n    else {\n        *puStack112 = (0x800 - uVar6 >> 5) + uVar6;\n    }\n    uVar14 = bVar17;\n    uStack92 = uVar14;\n    uStack44 = uVar5;\n    auStack164[0] = auStack164[1];\n    if (uVar5 < 0x1000000) {\ncode_r0x004075d7:\n        if (iStack136 == 0) {\n            auStack164[0] = 5;\n            goto code_r0x004077be;\n        }\n        uVar5 = uVar5 << 8;\n        iStack136 = iStack136 + -1;\n        uVar16 = uVar16 << 8 | *puStack140;\n        uStack44 = uVar5;\n        uStack40 = uVar16;\n        puStack140 = puStack140 + 1;\n        auStack164[0] = auStack164[1];\n    }\n    goto code_r0x004071d0;\ncode_r0x00407730:\n    iStack76 = iStack76 + uVar10;\n    auStack164[0] = auStack164[2];\n    goto code_r0x00406b26;\ncode_r0x00406eee:\n    if (uVar10 < 0x100) {\n        puStack112 = puStack116 + uVar10;\n        uStack28 = uVar10 * 2;\n        uVar9 = (uStack44 >> 0xb) * *puStack112;\n        if (uVar16 < uVar9) {\n            uVar6 = (0x800 - *puStack112 >> 5) + *puStack112;\n            uVar10 = uVar10 * 2;\n        }\n        else {\n            uVar16 = uVar16 - uVar9;\n            uVar9 = uStack44 - uVar9;\n            uStack40 = uVar16;\n            uVar6 = *puStack112 - (*puStack112 >> 5);\n            uVar10 = uVar10 * 2 + 1;\n        }\n        uStack96 = uVar10;\n        *puStack112 = uVar6;\n        uStack44 = uVar9;\n        if (uVar9 < 0x1000000) {\ncode_r0x00406ebb:\n            if (iStack136 == 0) {\n                auStack164[0] = 0xe;\n                goto code_r0x004077be;\n            }\n            uStack44 = uVar9 << 8;\n            uVar16 = uVar16 << 8 | *puStack140;\n            iStack136 = iStack136 + -1;\n            uStack40 = uVar16;\n            puStack140 = puStack140 + 1;\n        }\n        goto code_r0x00406eee;\n    }\ncode_r0x00406f73:\n    iStack80 = 0;\n    uStack120 = uStack96;\n    uVar9 = uStack44;\ncode_r0x0040704b:\n    if (iStack128 == 0) {\n        auStack164[0] = 0x1a;\ncode_r0x004077be:\n        puVar15 = auStack164;\n        for (iVar7 = 0x22; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puStack4 = *puVar15;\n            puVar15 = puVar15 + 1;\n            puStack4 = puStack4 + 1;\n        }\n        return 0;\n    }\n    uStack124 = uStack124 + 1;\n    *puStack132 = uStack120;\n    puStack132 = puStack132 + 1;\n    iStack128 = iStack128 + -1;\n    *(uStack48 + iStack36) = uStack120;\n    uStack48 = (uStack48 + 1) % uStack144;\ncode_r0x00407527:\n    auStack164[0] = 2;\n    uVar5 = uVar9;\ncode_r0x004071d0:\n    uVar8 = uStack180;\n    uVar4 = uStack176;\n    uVar9 = uVar5;\n    goto code_r0x00406b26;\n}\n",
        "token_count": 7032
    },
    "0040154a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** fcn.0040154a(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint8_t uVar12;\n    int32_t iVar13;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t **ppiVar14;\n    int32_t iVar15;\n    char *unaff_ESI;\n    int32_t **unaff_EDI;\n    int32_t **arg_8h;\n    bool bVar16;\n    ulong uVar17;\n    int32_t *piVar18;\n    int32_t *piVar19;\n    int32_t *piVar20;\n    int32_t in_stack_fffffe00;\n    int32_t *piVar21;\n    int32_t *piVar22;\n    int32_t *piVar23;\n    uint32_t uVar24;\n    uint *puVar25;\n    uint in_stack_fffffe18;\n    uint arg_14h;\n    uchar *puVar26;\n    int32_t **ppiVar27;\n    uint uStack448;\n    int32_t **ppiStack444;\n    int32_t **ppiStack440;\n    uint uStack436;\n    int32_t **ppiStack432;\n    int32_t **ppiStack428;\n    int32_t **appiStack424 [3];\n    int32_t **ppiStack412;\n    int32_t **ppiStack408;\n    int32_t **ppiStack404;\n    int32_t **ppiStack400;\n    int32_t **ppiStack396;\n    char *pcStack392;\n    uint uStack388;\n    char *pcStack384;\n    ushort uStack380;\n    ushort uStack378;\n    ushort uStack376;\n    ushort uStack374;\n    uint uStack352;\n    \n    ppiVar8 = *0x40a0c0;\n    pcVar10 = _sym.imp.USER32.dll_ShowWindow;\n    ppiVar27 = 0x7;\n    ppiStack444 = *0x423bd8;\n    puVar25 = &stack0xfffffe54;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar25 = *param_1;\n        param_1 = param_1 + 1;\n        puVar25 = puVar25 + 1;\n    }\n    iVar13 = appiStack424[0] * 0x400;\n    ppiVar14 = iVar13 + 0x425000;\n    arg_8h = appiStack424[1] * 0x400 + 0x425000;\n    uStack448 = 0;\n    *0x40a0c4 = &stack0xfffffe58;\n    uStack380 = SUB42(appiStack424[1], 0);\n    uStack378 = appiStack424[1] >> 0x10;\n    // switch table (66 cases) at 0x402d16\n    switch(ppiStack428) {\n    case 0x2:\n        return appiStack424[0];\n    case 0x3:\n        goto code_r0x004015bc;\n    case 0x4:\n        *0x423bcc = *0x423bcc + 1;\n        if (*0x423bd8 == NULL) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)();\n        return 0x7fffffff;\n    case 0x5:\n        fcn.00402f0c();\n        ppiVar27 = fcn.00401399();\n        return ppiVar27;\n    case 0x6:\n        ppiVar8 = NULL;\n        goto code_r0x004015f3;\n    case 0x7:\n        ppiVar8 = fcn.00402e56();\n        ppiVar27 = 0x1;\n        if (1 < ppiVar8) {\n            ppiVar27 = ppiVar8;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n        break;\n    case 0x8:\n        ppiVar27 = *0x423bd8;\n        (*_sym.imp.USER32.dll_SetForegroundWindow)();\n        break;\n    case 0x9:\n        if (*0x423bc4 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n            ppiVar27 = appiStack424[1];\n        }\n        if (*0x423bc8 != 0) {\n            (*pcVar10)(*0x423bc8);\n        }\n        break;\n    case 0xa:\n        ppiVar27 = 0xfffffff0;\n        fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)();\n        goto code_r0x004016e5;\n    case 0xb:\n        ppiVar8 = 0xfffffff0;\n        uVar11 = fcn.00402e92();\n        iVar13 = fcn.00406809();\n        if (iVar13 != 0) {\n            do {\n                pcVar5 = fcn.00406238();\n                cVar1 = *pcVar5;\n                *pcVar5 = '\\0';\n                if (((cVar1 == '\\0') && (uStack436 != 0)) && (iVar13 = fcn.00406140(),  iVar13 != 0)) {\n                    iVar13 = fcn.00405b35(uVar11);\n                }\n                else {\n                    iVar13 = fcn.00405b15();\n                }\n                if ((iVar13 != 0) && (iVar13 == 0xb7)) {\n                    (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar11);\n                }\n                *pcVar5 = unaff_EBP;\n            } while (unaff_EBP != '\\0');\n        }\n        ppiVar27 = 0x40a4c8;\n        if (ppiStack432 != NULL) {\n            fcn.004059ed();\n            fcn.0040675e(0x42a800);\n            iVar13 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar11);\n            if (iVar13 == 0) {\n                ppiVar27 = ppiVar27 + 1;\n            }\n            break;\n        }\n        goto code_r0x004015f3;\n    case 0xc:\n        fcn.00402e92();\n        iVar13 = fcn.00406211();\n        ppiStack412 = appiStack424[1];\n        goto joined_r0x00401b7a;\n    case 0xd:\n        if (appiStack424[2] < 1) {\n            if (appiStack424[2] == NULL) {\n                *(appiStack424[0] * 4 + 0x424460) = *(appiStack424[0] * 4 + 0x4244a0);\n            }\n            ppiVar27 = 0x1;\n            uVar11 = fcn.00402e56();\n            *(appiStack424[0] * 4 + 0x4244a0) = uVar11;\n        }\n        else {\n            *(appiStack424[0] * 4 + 0x4244a0) = *(appiStack424[0] * 4 + 0x424460);\n        }\n        break;\n    case 0xe:\n        uVar9 = *(appiStack424[2] * 4 + 0x4244a0);\n        *(appiStack424[2] * 4 + 0x4244a0) = uVar9 & ppiStack412;\n        iVar13 = 0;\n        if (uVar9 == 0) {\n            iVar13 = 4;\n        }\n        return *(&stack0xfffffe58 + iVar13);\n    case 0xf:\n        ppiVar27 = *(appiStack424[1] * 4 + 0x4244a0);\n        goto code_r0x0040169c;\n    case 0x10:\n        ppiVar8 = fcn.00402e92();\n        fcn.00402e92();\n        fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileA)();\n        if (iVar13 == 0) {\n            if ((appiStack424[2] == NULL) || (iVar13 = fcn.00406211(),  iVar13 == 0)) goto code_r0x004016ed;\n            fcn.00405f39();\n        }\n        else {\n            ppiVar8 = 0x40a4c8;\n        }\n        goto code_r0x004015f3;\n    case 0x11:\n        ppiVar27 = NULL;\n        pcVar5 = fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)();\n        if (iVar13 == 0) {\ncode_r0x0040182b:\n            *arg_8h = '\\0';\n            ppiVar27 = 0x1;\n        }\n        else if ((pcVar5 < unaff_ESI) && (*unaff_ESI != '\\0')) {\n            iVar13 = fcn.00406211();\n            if (iVar13 == 0) goto code_r0x0040182b;\n            fcn.0040675e(unaff_EDI, iVar13 + 0x2c);\n        }\n        if (uStack436 == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_8h, arg_8h);\n        }\n        break;\n    case 0x12:\n        ppiVar27 = 0xffffffff;\n        fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0);\n        if (iVar13 != 0) break;\n        goto code_r0x0040189b;\n    case 0x13:\n        ppiVar27 = 0xffffffef;\n        uVar11 = fcn.00402e92();\n        iVar13 = fcn.004066a5(ppiVar14, uVar11);\n        goto code_r0x004016e5;\n    case 0x14:\n        ppiVar27 = 0x31;\n        ppiVar8 = fcn.00402e92();\n        uVar9 = ppiStack428 & 7;\n        ppiStack444 = ppiVar8;\n        iVar13 = fcn.004069f2();\n        if (iVar13 == 0) {\n            uVar6 = 0x40a0c8;\n            in_stack_fffffe18 = fcn.0040675e();\n            uVar11 = fcn.0040619a();\n            sub.KERNEL32.dll_lstrcatA(uVar11);\n        }\n        else {\n            uVar6 = 0x4018e0;\n            fcn.0040675e();\n        }\n        fcn.00406941(0x40a0c8);\n        do {\n            if (2 < uVar9) {\n                iVar13 = fcn.00406211(0x40a0c8);\n                uVar2 = 0;\n                if (iVar13 != 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar13 + 0x14, &stack0xfffffe40);\n                }\n                uVar9 = ((uVar9 - 3 | 0x80000000) & uVar2) == 0;\n            }\n            if (uVar9 == 0) {\n                fcn.004067e1(0x40a0c8);\n            }\n            iVar13 = fcn.0040656e(0x40a0c8, 0x40000000, (uVar9 != 1) + '\\x01');\n            if (iVar13 != -1) {\n                fcn.004059ed(0xffffffea, uVar6);\n                *0x4244d4 = *0x4244d4 + 1;\n                fcn.00402f57(ppiVar27, in_stack_fffffe18, 0, 0);\n                *0x4244d4 = *0x4244d4 + -1;\n                if ((iVar13 != -1) || (ppiVar8 != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(in_stack_fffffe18, &stack0xfffffe20, 0, &stack0xfffffe20);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(in_stack_fffffe18);\n                if (-1 < unaff_EBP) goto code_r0x00402d00;\n                if (unaff_EBP == -2) {\n                    fcn.00405bb1(0x40a0c8);\n                    sub.KERNEL32.dll_lstrcatA(0x40a0c8, uVar6);\n                }\n                else {\n                    fcn.00405bb1(0x40a0c8);\n                }\n                goto code_r0x00401a65;\n            }\n            if (uVar9 != 0) {\n                fcn.004059ed(0xffffffe2, uVar6);\n                bVar16 = uVar9 == 2;\n                goto code_r0x004019de;\n            }\n            fcn.0040675e(0x40a8c8, 0x425000);\n            fcn.0040675e(0x425000, 0x40a0c8);\n            fcn.00405bb1(0x40a4c8, unaff_EDI);\n            fcn.0040675e(0x425000, 0x40a8c8);\n            iVar13 = fcn.004066ec();\n        } while (iVar13 == 4);\n        if (iVar13 == 5) {\n            *0x4244a8 = *0x4244a8 + 1;\n            return 0;\n        }\ncode_r0x004015bc:\n        fcn.004059ed();\n        return 0x7fffffff;\n    case 0x15:\n        ppiVar27 = NULL;\n        goto code_r0x00401a70;\n    case 0x16:\n        ppiVar27 = 0x31;\n        fcn.00402e92();\n        ppiVar8 = fcn.004066ec();\n        if (ppiVar8 != NULL) {\n            if (ppiVar8 == ppiStack428) {\n                return ppiStack412;\n            }\n            if (ppiVar8 == appiStack424[1]) {\n                return appiStack424[2];\n            }\n            break;\n        }\n        goto code_r0x004016ed;\n    case 0x17:\n        ppiVar27 = 0xfffffff0;\ncode_r0x00401a70:\n        fcn.00402e92();\n        fcn.00406351();\n        break;\n    case 0x18:\n        ppiVar27 = 0x1;\n        fcn.00402e92();\n        sub.KERNEL32.dll_lstrlenA();\n        goto code_r0x0040169c;\n    case 0x19:\n        uVar17 = fcn.00402e56();\n        uStack436 = fcn.00402e56();\n        ppiVar27 = 0x1;\n        ppiStack444 = fcn.00402e92();\n        iVar15 = sub.KERNEL32.dll_lstrlenA();\n        *ppiVar14 = '\\0';\n        iVar13 = uVar17;\n        if (uVar17 >> 0x20 == 0) {\n            iVar13 = iVar15;\n        }\n        if ((iVar13 != 0) && ((-1 < ppiStack444 || (-1 < ppiStack444 + iVar15)))) {\n            fcn.0040675e();\n            if (iVar13 < 0) {\n                iVar15 = sub.KERNEL32.dll_lstrlenA();\n                iVar13 = iVar13 + iVar15;\n            }\n            iVar15 = 0;\n            if (-1 < iVar13) {\n                iVar15 = iVar13;\n            }\n            if (iVar15 < 0x400) {\n                *(iVar15 + ppiVar14) = '\\0';\n            }\n        }\n        break;\n    case 0x1a:\n        fcn.00402e92();\n        fcn.00402e92();\n        if (appiStack424[2] == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpA)();\n        }\n        goto joined_r0x00401b7a;\n    case 0x1b:\n        fcn.00402e92();\n        ppiVar27 = unaff_EDI;\n        iVar15 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)();\n        if ((iVar15 == 0) || ((ppiStack432 != NULL && (iVar15 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(),  iVar15 == 0)))) {\n            *ppiVar14 = '\\0';\n            ppiVar27 = 0x1;\n        }\n        *(iVar13 + 0x4253ff) = 0;\n        break;\n    case 0x1c:\n        uVar9 = fcn.00402e56();\n        uVar2 = fcn.00402e56();\n        if (ppiStack404 != NULL) {\n            if (uVar9 < uVar2) {\n                return ppiStack412;\n            }\n            if (uVar9 <= uVar2) {\n                return appiStack424[2];\n            }\n            return ppiStack408;\n        }\n        if (uVar9 < uVar2) {\n            return ppiStack412;\n        }\n        if (uVar9 <= uVar2) {\n            return appiStack424[2];\n        }\n        return ppiStack408;\n    case 0x1d:\n        ppiVar27 = fcn.00402e56();\n        uVar9 = fcn.00402e56();\n        if (0xd < ppiStack412) goto code_r0x0040169c;\n        uVar12 = uVar9;\n    // switch table (14 cases) at 0x402e1e\n        switch(ppiStack412) {\n        case NULL:\n            ppiVar27 = ppiVar27 + uVar9;\n            break;\n        case 0x1:\n            ppiVar27 = ppiVar27 - uVar9;\n            break;\n        case 0x2:\n            ppiVar27 = ppiVar27 * uVar9;\n            break;\n        case 0x3:\n            if (uVar9 == 0) {\ncode_r0x00401c42:\n                ppiVar27 = NULL;\n            }\n            else {\n                ppiVar27 = ppiVar27 / uVar9;\n            }\n            goto code_r0x00401c44;\n        case 0x4:\n            ppiVar27 = ppiVar27 | uVar9;\n            break;\n        case 0x5:\n            ppiVar27 = ppiVar27 & uVar9;\n            break;\n        case 0x6:\n            ppiVar27 = ppiVar27 ^ uVar9;\n            break;\n        case 0x7:\n            ppiVar27 = ppiVar27 == NULL;\n            break;\n        case 0x8:\n            if (ppiVar27 == NULL) {\ncode_r0x00401c6c:\n                if (uVar9 == 0) goto code_r0x00401c78;\n            }\n            ppiVar27 = 0x1;\n            break;\n        case 0x9:\n            if (ppiVar27 != NULL) goto code_r0x00401c6c;\ncode_r0x00401c78:\n            ppiVar27 = NULL;\n            break;\n        case 0xa:\n            if (uVar9 == 0) goto code_r0x00401c42;\n            ppiVar27 = ppiVar27 % uVar9;\ncode_r0x00401c44:\n            uStack448 = uVar9 == 0;\n            break;\n        case 0xb:\n            ppiVar27 = ppiVar27 << (uVar12 & 0x1f);\n            break;\n        case 0xc:\n            ppiVar27 = ppiVar27 >> (uVar12 & 0x1f);\n            break;\n        case 0xd:\n            ppiVar27 = ppiVar27 >> (uVar12 & 0x1f);\n        }\n        goto code_r0x0040169c;\n    case 0x1e:\n        ppiVar27 = 0x1;\n        fcn.00402e92();\n        fcn.00402e56();\n        (*_sym.imp.USER32.dll_wsprintfA)();\n        break;\n    case 0x1f:\n        ppiVar27 = *0x40a0c0;\n        if (appiStack424[2] != NULL) {\n            do {\n                appiStack424[2] = appiStack424[2] + -1;\n                if (ppiVar27 == NULL) goto code_r0x00401d09;\n                ppiVar27 = *ppiVar27;\n            } while (appiStack424[2] != NULL);\n            if (ppiVar27 == NULL) goto code_r0x00401d09;\n            ppiVar27 = ppiVar27 + 1;\n            fcn.0040675e();\n            fcn.0040675e();\n            goto code_r0x00401cff;\n        }\n        if (appiStack424[1] == NULL) {\n            ppiVar27 = 0x404;\n            ppiVar8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            fcn.00405bb1();\n            *ppiVar8 = *0x40a0c0;\n            *0x40a0c0 = ppiVar8;\n            break;\n        }\n        if (*0x40a0c0 != NULL) {\n            ppiVar27 = *0x40a0c0 + 1;\n            fcn.0040675e();\n            *0x40a0c0 = *ppiVar8;\n            goto code_r0x00401d3a;\n        }\n        goto code_r0x004016ed;\n    case 0x20:\n    case 0x21:\n        ppiStack440 = fcn.00402e56();\n        ppiVar8 = fcn.00402e56();\n        ppiVar27 = ppiStack404;\n        if ((ppiStack404 & 1) != 0) {\n            ppiStack444 = fcn.00402e92();\n            ppiVar27 = ppiStack408;\n        }\n        if ((ppiVar27 & 2) != 0) {\n            ppiVar8 = fcn.00402e92();\n        }\n        ppiVar27 = 0x1;\n        if (ppiStack428 == 0x21) {\n            ppiStack440 = fcn.00402e56();\n            fcn.00402e56();\n            if (ppiStack404 >> 2 == 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)();\n                ppiVar27 = ppiVar8;\n                ppiVar8 = ppiStack444;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(ppiStack440);\n                ppiVar27 = iVar13 == 0;\n                ppiVar8 = ppiStack444;\n            }\n        }\n        else {\n            fcn.00402e92();\n            fcn.00402e92();\n            (*_sym.imp.USER32.dll_FindWindowExA)();\n            ppiVar8 = ppiStack444;\n        }\n        goto joined_r0x00402980;\n    case 0x22:\n        fcn.00402e56();\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)();\n        ppiStack412 = appiStack424[1];\njoined_r0x00401b7a:\n        if (iVar13 == 0) {\n            return appiStack424[2];\n        }\n        return ppiStack412;\n    case 0x23:\n        ppiVar27 = fcn.00402e56();\n        fcn.00402e56();\n        (*_sym.imp.USER32.dll_GetDlgItem)();\n        goto code_r0x0040169c;\n    case 0x24:\n        ppiVar27 = *0x424428 + appiStack424[1];\n        fcn.00402e56();\n        (*_sym.imp.USER32.dll_SetWindowLongA)();\n        break;\n    case 0x25:\n        if ((ppiStack412 & 0x100) == 0) {\n            uVar11 = (*_sym.imp.USER32.dll_GetDlgItem)();\n        }\n        else {\n            uVar11 = fcn.00402e56();\n        }\n        ppiStack444 = ppiStack412 & 4;\n        uStack436 = ppiStack412 >> 0x1f;\n        if ((ppiStack412 & 0x10000) == 0) {\n            ppiStack440 = appiStack424[1] & 0xffff;\n        }\n        else {\n            ppiStack440 = fcn.00402e92();\n        }\n        ppiVar27 = &stack0xfffffe84;\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        uVar6 = 0;\n        if (unaff_EBX != 0) {\n            uVar6 = *0x423bd4;\n        }\n        uVar6 = (*_sym.imp.USER32.dll_LoadImageA)(uVar6, uStack448);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageA)(uVar11, 0x172, ppiStack412 & 3, uVar6);\n        ppiVar8 = ppiStack444;\n        if ((iVar13 != 0) && ((ppiStack412 & 3) == 0)) {\n            (*_sym.imp.GDI32.dll_DeleteObject)();\n            ppiVar8 = ppiStack444;\n        }\n        goto joined_r0x00402980;\n    case 0x26:\n        ppiVar27 = *0x423bd8;\n        uVar11 = (*_sym.imp.USER32.dll_GetDC)();\n        fcn.00402e56();\n        (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n        *0x40b4c8 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n        *0x40b4c8 = -*0x40b4c8;\n        (*_sym.imp.USER32.dll_ReleaseDC)(ppiVar27, uVar11);\n        *0x40b4d8 = fcn.00402e56(3);\n        *0x40b4de = ppiStack440;\n        *0x40b4dc = *0x40b4de & 1;\n        *0x40b4df = 1;\n        *0x40b4dd = *0x40b4de & 2;\n        *0x40b4de = *0x40b4de & 4;\n        fcn.00405bb1(0x40b4e4, unaff_EBX);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40b4c8);\n        goto code_r0x0040169c;\n    case 0x27:\n        fcn.00402e56();\n        ppiVar27 = fcn.00402e56();\n        if (ppiStack412 == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)();\n        }\n        break;\n    case 0x28:\n        ppiVar27 = NULL;\n        pcVar5 = fcn.00402e92();\n        uStack388 = fcn.00402e92();\n        pcVar3 = fcn.00402e92();\n        fcn.00402e92();\n        fcn.004059ed();\n        ppiStack400 = ppiStack432;\n        uStack376 = uStack436;\n        uStack374 = uStack436 >> 0x10;\n        pcStack392 = NULL;\n        if (*pcVar5 != '\\0') {\n            pcStack392 = pcVar5;\n        }\n        uStack380 = 0xa800;\n        uStack378 = 0x42;\n        pcStack384 = NULL;\n        if (*pcVar3 != '\\0') {\n            pcStack384 = pcVar3;\n        }\n        ppiStack396 = ppiVar27;\n        iVar13 = fcn.00406642(&stack0xfffffe6c);\n        if (iVar13 != 0) {\n            if ((ppiStack404 & 0x40) == 0) break;\n            fcn.00406158(uStack352);\n            goto code_r0x004020c6;\n        }\n        goto code_r0x004016ed;\n    case 0x29:\n        ppiVar27 = NULL;\n        uVar11 = fcn.00402e92();\n        fcn.004059ed();\n        iVar13 = fcn.0040630e(uVar11);\n        if (iVar13 != 0) {\n            if (ppiStack432 != NULL) {\n                iVar13 = fcn.00406158(iVar13);\n                if (ppiStack440 < 0) {\n                    if (iVar13 != 0) {\n                        ppiVar27 = 0x1;\n                    }\n                }\n                else {\n                    fcn.0040625c(arg_8h);\n                }\n            }\n            goto code_r0x004020c6;\n        }\n        goto code_r0x004016ed;\n    case 0x2a:\n        ppiVar27 = 0x2;\n        fcn.00402e92();\n        iVar13 = fcn.00406211();\n        if (iVar13 != 0) {\n            fcn.0040625c();\n            goto code_r0x0040169c;\n        }\n        *ppiVar14 = '\\0';\n        *arg_8h = '\\0';\n        goto code_r0x004016ed;\n    case 0x2b:\n        ppiVar8 = 0xffffffee;\n        ppiStack400 = fcn.00402e92();\n        puVar26 = &stack0xfffffe80;\n        pcVar10 = fcn.00406539();\n        iVar13 = (*pcVar10)();\n        *ppiVar14 = '\\0';\n        ppiVar27 = 0x1;\n        *arg_8h = '\\0';\n        if ((iVar13 == 0) || (ppiVar27 = ppiVar8,  iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(),  iVar13 == 0))\n        break;\n        pcVar10 = fcn.00406539();\n        appiStack424[1] = fcn.00406539(0xc);\n        iVar13 = (*pcVar10)(appiStack424[0], 0, iVar13, puVar26);\n        if ((iVar13 != 0) && (iVar13 = (*ppiStack400)(),  iVar13 != 0)) {\n            fcn.0040625c();\n            fcn.0040625c();\n        }\ncode_r0x00401d3a:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n        break;\n    case 0x2c:\n        uStack448 = 1;\n        if (*0x424440 < 0) {\n            ppiVar8 = 0x40a4c8;\n        }\n        else {\n            ppiStack396 = fcn.00402e92();\n            ppiVar8 = fcn.00402e92();\n            ppiVar27 = unaff_EDI;\n            ppiStack404 = ppiVar8;\n            if (((appiStack424[2] != NULL) &&\n                (iVar13 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(),  ppiVar27 = unaff_EDI,  iVar13 != 0)) ||\n               (iVar13 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(),  iVar13 != 0)) {\n                pcVar10 = sub.KERNEL32.dll_GetProcAddress();\n                if (pcVar10 == NULL) {\n                    fcn.004059ed();\n                }\n                else if (appiStack424[0] == NULL) {\n                    (*pcVar10)(unaff_EBX);\n                }\n                else {\n                    fcn.004059ed();\n                    iVar13 = (*pcVar10)();\n                    if (iVar13 != 0) {\n                        ppiVar27 = 0x1;\n                    }\n                }\n                if ((ppiStack428 == NULL) && (ppiVar27 = ppiVar8,  iVar13 = fcn.00403a51(),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                }\n                break;\n            }\n            ppiVar8 = 0x40a4c8;\n        }\n        goto code_r0x004015f3;\n    case 0x2d:\n        pcStack384 = fcn.00402e92();\n        uVar6 = 0xffffffdf;\n        piVar4 = fcn.00402e92();\n        ppiStack400 = fcn.00402e92();\n        fcn.00402e92();\n        uVar11 = 0x45;\n        appiStack424[1] = fcn.00402e92();\n        ppiStack404 = ppiStack428 & 0xfff;\n        ppiStack412 = ppiStack428 & 0x8000;\n        appiStack424[2] = ppiStack428 >> 0x10;\n        uVar9 = ppiStack428 >> 0xc & 7;\n        puVar25 = 0x402366;\n        iVar13 = fcn.004069f2();\n        if (iVar13 == 0) {\n            puVar25 = 0x21;\n            fcn.00402e92();\n        }\n        piVar22 = 0x1;\n        iVar13 = 0;\n        piVar21 = 0x408750;\n        iVar15 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x408750, 0, 1, 0x408730, &stack0xfffffe28);\n        piVar23 = piVar22;\n        if (-1 < iVar15) {\n            piVar20 = 0x408740;\n            iVar13 = (***puVar25)(puVar25, 0x408740, &stack0xfffffe18);\n            piVar23 = piVar22;\n            if (-1 < iVar13) {\n                piVar19 = piVar4;\n                (**(*piVar22 + 0x50))();\n                piVar18 = piVar21;\n                if (unaff_ESI == NULL) {\n                    (**(*piVar21 + 0x24))(piVar21, 0x42a800);\n                    piVar18 = piVar21;\n                }\n                if (uVar9 != 0) {\n                    (**(*piVar18 + 0x3c))(piVar18, uVar9);\n                }\n                piVar21 = piVar18;\n                (**(*piVar18 + 0x34))(piVar18, unaff_EDI);\n                if (*piVar21 != '\\0') {\n                    (**(*piVar20 + 0x44))(piVar20, piVar21, unaff_ESI);\n                }\n                (**(*piVar20 + 0x2c))(piVar20, unaff_EDI);\n                (**(*piVar19 + 0x1c))(piVar19, uVar11);\n                if ((-1 < piVar18) &&\n                   (iVar7 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar6, 0xffffffff, piVar4, 0x400), \n                   iVar7 != 0)) {\n                    (**(*piVar22 + 0x18))(piVar22, piVar4, 1);\n                }\n                (**(*piVar22 + 8))(piVar22);\n            }\n            (**(*piVar23 + 8))(piVar23);\n        }\n        fcn.004059ed((iVar15 >> 0x1f & 0xfffffffcU) - 0xc, 0x40a4c8, piVar21, iVar13);\n        ppiVar27 = piVar23 >> 0x1f;\n        break;\n    case 0x2e:\n        ppiVar27 = NULL;\n        ppiVar8 = fcn.00402e92();\n        pcVar5 = fcn.00402e92();\n        uVar11 = fcn.00402e92();\n        iVar13 = fcn.00406211();\n        if (iVar13 != 0) {\n            pcStack392 = 0x2;\n            iVar13 = sub.KERNEL32.dll_lstrlenA();\n            *(iVar13 + 1 + ppiVar8) = '\\0';\n            iVar13 = sub.KERNEL32.dll_lstrlenA();\n            pcVar5[iVar13 + 1] = '\\0';\n            uStack378 = uVar11;\n            uStack376 = uVar11 >> 0x10;\n            uStack388 = CONCAT22(uStack388._2_2_, ppiStack440._0_2_);\n            ppiStack396 = ppiVar8;\n            pcStack392 = pcVar5;\n            fcn.004059ed(0, uVar11);\n            iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&stack0xfffffe64);\n            if (iVar13 == 0) break;\n        }\n        fcn.004059ed(0xfffffff9);\n        goto code_r0x004016ed;\n    case 0x2f:\n        if (appiStack424[0] != 0xbadf00d) {\ncode_r0x00401d09:\n            fcn.00405bb1();\ncode_r0x00401a65:\n            fcn.004066ec();\n            return 0x7fffffff;\n        }\n        *0x4244b4 = *0x4244b4 + 1;\n        break;\n    case 0x30:\n        if (appiStack424[0] != NULL) {\n            ppiVar27 = NULL;\n            fcn.00402e92();\n            appiStack424[1] = appiStack424[0];\n        }\n        if (appiStack424[1] != NULL) {\n            fcn.00402e92();\n        }\n        if (ppiStack412 != NULL) {\n            fcn.00402e92();\n        }\n        fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)();\ncode_r0x004016e5:\n        if (iVar13 != 0) break;\n        goto code_r0x004016ed;\n    case 0x31:\n        ppiVar27 = 0x1;\n        ppiStack444 = *0x423bd8 & 0xffff0000 | 10;\n        uVar11 = fcn.00402e92();\n        uVar6 = fcn.00402e92();\n        fcn.00402e92();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar11, uVar6, &stack0xfffffe38);\n        if (*ppiVar14 != '\\n') break;\n        goto code_r0x0040189b;\n    case 0x32:\n        iVar13 = 1;\n        if (ppiStack408 == NULL) {\n            iVar15 = fcn.00402ed0(2);\n            if (iVar15 != 0) {\n                fcn.00402e92();\n                iVar13 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)();\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcVar5 = fcn.00402e92();\n            if (*pcVar5 == '\\0') {\n                iVar13 = 0x3eb;\n            }\n            else {\n                ppiStack444 = ppiStack412 >> 1 | 0x100020;\n                fcn.00402e77();\n                iVar13 = fcn.00405e20();\n                if (iVar13 == 0) {\n                    iVar13 = 6;\n                }\n                else {\n                    iVar13 = fcn.0040141e(iVar13);\n                }\n            }\n        }\n        ppiVar27 = iVar13 != 0;\n        break;\n    case 0x33:\n        ppiStack400 = ppiStack408;\n        ppiVar27 = 0x2;\n        uStack388 = ppiStack404;\n        uStack388 = fcn.00402e92();\n        uVar11 = fcn.00402e92();\n        arg_14h = 0x100022;\n        uVar6 = fcn.00402e77();\n        iVar13 = fcn.00405f6b(uVar6, appiStack424[0], uVar11, arg_14h);\n        if (iVar13 != 0) {\n            ppiStack408 = NULL;\n        }\n        if (ppiStack408 == NULL) break;\n        if (ppiStack428 == 0x1) {\n            fcn.00402e92(0x23);\n            iVar13 = sub.KERNEL32.dll_lstrlenA(0x40a8c8);\n            iVar13 = iVar13 + 1;\n        }\n        else {\n            iVar13 = 4;\n            if (ppiStack428 == 0x4) {\n                *0x40a8c8 = fcn.00402e56(3);\n            }\n            else {\n                iVar13 = 0;\n                if (ppiStack428 == 0x3) {\n                    iVar13 = fcn.00402f57(ppiStack440, 0, 0x40a8c8, 0xc00);\n                }\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(ppiStack408, ppiStack428, 0, ppiStack432, 0x40a8c8, iVar13);\ncode_r0x0040270b:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiStack408);\n        break;\n    case 0x34:\n        ppiVar27 = 0x20019;\n        ppiStack408 = fcn.00402ed0(0x20019);\n        uVar11 = fcn.00402e92();\n        *ppiVar14 = '\\0';\n        if (ppiStack408 != NULL) {\n            uStack388 = 0x400;\n            iVar15 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(ppiStack408, uVar11);\n            if (iVar15 == 0) {\n                if (in_stack_fffffe00 == 4) {\n                    fcn.0040625c();\n                    goto code_r0x0040270b;\n                }\n                if ((in_stack_fffffe00 == 1) || (in_stack_fffffe00 == 2)) goto code_r0x00402773;\n            }\n            *ppiVar14 = '\\0';\n            goto code_r0x0040270b;\n        }\n        goto code_r0x004016ed;\n    case 0x35:\n        ppiVar27 = 0x20019;\n        ppiStack408 = fcn.00402ed0(0x20019);\n        uVar11 = fcn.00402e56();\n        *ppiVar14 = '\\0';\n        if (ppiStack408 != NULL) {\n            pcStack384 = 0x3ff;\n            if (ppiStack412 == NULL) {\n                (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(ppiStack408, uVar11, ppiVar14);\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)();\n            }\ncode_r0x00402773:\n            *(iVar13 + 0x4253ff) = 0;\n            goto code_r0x0040270b;\n        }\n        goto code_r0x004016ed;\n    case 0x36:\n        ppiVar27 = ppiVar14;\n        iVar13 = fcn.00406874(ppiVar14);\n        if (iVar13 == 0) break;\ncode_r0x004020c6:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        break;\n    case 0x37:\n        ppiVar27 = 0xffffffed;\n        fcn.00402e92();\n        iVar13 = fcn.0040656e();\n        if (iVar13 != -1) goto code_r0x0040169c;\ncode_r0x00402833:\n        *ppiVar14 = '\\0';\n        goto code_r0x004016ed;\n    case 0x38:\n        uVar11 = 1;\n        if (appiStack424[2] == NULL) {\n            ppiVar27 = 0x11;\n            fcn.00402e92();\n            uVar11 = sub.KERNEL32.dll_lstrlenA();\n        }\n        else {\n            ppiVar27 = 0x1;\n            *0x40a4c8 = fcn.00402e56();\n        }\n        if (*ppiVar14 != '\\0') {\n            uVar6 = fcn.00406874(ppiVar14);\n            iVar13 = fcn.0040665a(uVar6, 0x40a4c8, uVar11);\n            if (iVar13 != 0) break;\n        }\n        ppiVar27 = 0x1;\n        break;\n    case 0x39:\n        ppiVar27 = 0x2;\n        ppiStack440 = NULL;\n        uStack448 = fcn.00402e56();\n        if (0 < uStack448) {\n            if (0x3ff < uStack448) {\n                uStack448 = 0x3ff;\n            }\n            if (*ppiVar14 != '\\0') {\n                ppiStack444 = ppiStack444 & 0xffffff00;\n                iVar13 = fcn.00406874(ppiVar14);\n                if (unaff_EBX != 0) {\n                    iVar15 = 0;\n                    ppiStack440 = iVar13;\n                    while( true ) {\n                        uVar12 = unaff_ESI;\n                        iVar7 = fcn.0040659b(iVar13, &stack0xfffffe4f, 1);\n                        iVar13 = unaff_EBX;\n                        if (iVar7 == 0) break;\n                        if (ppiStack428 != NULL) {\n                            fcn.0040625c();\n                            return 0;\n                        }\n                        if ((uVar12 == 0xd) || (uVar12 == 10)) {\n                            if ((uVar12 == uStack448._3_1_) || ((uStack448._3_1_ != 0xd && (uStack448._3_1_ != 10)))) {\n                                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar13, 0xffffffff);\n                            }\n                            else {\n                                *(arg_8h + iVar15) = uStack448._3_1_;\n                            }\n                            break;\n                        }\n                        *(arg_8h + iVar15) = uStack448._3_1_;\n                        iVar15 = iVar15 + 1;\n                        unaff_ESI = uStack448._3_1_;\n                        if ((uStack448._3_1_ == 0) || (unaff_EBX = iVar13,  unaff_EDI <= iVar15)) break;\n                    }\n                }\n            }\n            bVar16 = ppiStack444 == NULL;\n            *(ppiStack444 + appiStack424[1] * 0x100 + 0x109400) = '\\0';\ncode_r0x004019de:\n            ppiVar27 = bVar16;\n        }\n        break;\n    case 0x3a:\n        if (*ppiVar14 == '\\0') break;\n        fcn.00402e56();\n        fcn.00406874(ppiVar14);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)();\n        ppiVar27 = ppiStack412;\n        ppiVar8 = ppiStack440;\njoined_r0x00402980:\n        if (ppiVar8 < 0) break;\n        goto code_r0x0040169c;\n    case 0x3b:\n        ppiVar27 = ppiVar14;\n        iVar13 = fcn.00406874(ppiVar14);\n        if (iVar13 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)();\n        }\n        break;\n    case 0x3c:\n        iVar13 = fcn.00406874(arg_8h);\n        if ((iVar13 != 0) && (iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(),  ppiVar27 = arg_8h,  iVar13 != 0))\n        goto code_r0x00401cff;\ncode_r0x0040189b:\n        ppiVar27 = 0x1;\n        *ppiVar14 = '\\0';\n        break;\n    case 0x3d:\n        ppiVar27 = 0x2;\n        fcn.00402e92();\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n        if (iVar13 == -1) {\n            *arg_8h = '\\0';\n            goto code_r0x00402833;\n        }\n        fcn.0040625c();\ncode_r0x00401cff:\n        fcn.0040675e();\n        break;\n    case 0x3e:\n        uStack436 = 0xfffffd66;\n        pcStack384 = fcn.00402e92();\n        iVar13 = fcn.004069f2();\n        if (iVar13 == 0) {\n            fcn.00402e92();\n        }\n        fcn.004067e1();\n        ppiVar8 = 0x2;\n        uVar11 = 0x40000000;\n        ppiVar27 = fcn.0040656e();\n        ppiStack400 = ppiVar27;\n        if (ppiVar27 != 0xffffffff) {\n            ppiStack412 = ppiStack432;\n            ppiVar14 = ppiStack432;\n            if ((ppiStack428 != NULL) &&\n               (iVar13 = *0x4243e8,  uVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(),  ppiVar14 = ppiStack412, \n               uStack448 = uVar9,  uVar9 != 0)) {\n                fcn.00402f40();\n                fcn.00402f2a();\n                uVar24 = 0x40;\n                ppiVar27 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, ppiStack440);\n                uVar2 = uVar9;\n                ppiStack432 = ppiVar27;\n                if (ppiVar27 != NULL) {\n                    fcn.00402f57(iVar13, 0, ppiVar27, uStack448);\n                    cVar1 = *ppiVar27;\n                    while (cVar1 != '\\0') {\n                        piVar4 = *ppiVar27;\n                        iVar13 = ppiVar27[1] + uVar9;\n                        fcn.004062ec();\n                        ppiVar27 = ppiVar27 + 2 + piVar4;\n                        uVar2 = uVar24;\n                        cVar1 = *ppiVar27;\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(uStack448, iVar13);\n                }\n                fcn.0040665a(appiStack424[1], uVar2, uVar11);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n                ppiVar14 = 0xffffffff;\n                ppiVar27 = appiStack424[1];\n            }\n            fcn.00402f57(ppiVar14);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar27);\n        }\n        if (uStack448 < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        }\ncode_r0x004015f3:\n        ppiVar27 = ppiVar8;\n        fcn.004059ed();\n        break;\n    case 0x3f:\n        ppiVar27 = NULL;\n        uVar9 = fcn.00402e56();\n        if (uVar9 < *0x42440c) {\n            iVar13 = uVar9 * 0x418 + *0x424408;\n            if (appiStack424[2] < 0) {\n                appiStack424[2] = -1 - appiStack424[2];\n                if (appiStack424[2] == NULL) {\n                    fcn.00405bb1();\n                    *(iVar13 + 8) = *(iVar13 + 8) | 0x100;\n                    ppiVar27 = ppiStack408;\n                }\n                else {\n                    ppiVar27 = 0x1;\n                    ppiStack428 = fcn.00402e56();\n                    appiStack424[1] = ppiStack428;\n                }\n                *(iVar13 + uStack436 * 4) = ppiStack428;\n                if (ppiStack432 != NULL) {\n                    fcn.00401221();\n                }\n                break;\n            }\n            if (appiStack424[2] == NULL) {\n                ppiVar27 = iVar13 + 0x18;\n                goto code_r0x00401cff;\n            }\n            goto code_r0x0040169c;\n        }\n        goto code_r0x004016ed;\n    case 0x40:\n        ppiVar27 = NULL;\n        ppiVar8 = fcn.00402e56();\n        if (ppiVar8 < 0x20) {\n            if (ppiStack412 == NULL) {\n                if (appiStack424[2] == NULL) {\n                    ppiVar27 = *(*0x4243f0 + 0x94 + ppiVar8 * 4);\n                    fcn.00405bb1();\n                }\n                else {\n                    *(*0x4243f0 + 0x94 + ppiVar8 * 4) = appiStack424[1];\n                }\n                break;\n            }\n            if (appiStack424[2] != NULL) {\n                fcn.00401290();\n                ppiVar27 = ppiVar8;\n                fcn.004012dd();\n                break;\n            }\n            ppiVar27 = NULL;\n            fcn.004011a0();\n            goto code_r0x0040169c;\n        }\ncode_r0x004016ed:\n        ppiVar27 = 0x1;\n        break;\n    case 0x41:\n        if (ppiStack412 == NULL) {\n            ppiVar27 = 0x5;\n            pcVar10 = fcn.00406539();\n            uVar11 = fcn.00402e92();\n            if (((pcVar10 == NULL) || (iVar13 = fcn.00405ad2(uVar11, &stack0xfffffe7c),  iVar13 < 0)) ||\n               (iVar13 = (*pcVar10)(),  iVar13 < 0)) {\n                *arg_8h = '\\0';\n                ppiVar27 = 0x1;\n            }\n            else {\n                fcn.0040685e(arg_8h, unaff_ESI);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(unaff_ESI);\n            }\n            break;\n        }\n        if (ppiStack412 != 0x1) break;\n        fcn.00402e56();\n        uVar9 = fcn.00402e56();\n        ppiVar27 = uVar9 & 0xff;\n        uStack436 = 0;\n        fcn.004062ec();\ncode_r0x0040169c:\n        fcn.0040625c();\n        break;\n    case 0x43:\n        ppiVar27 = NULL;\n        (*_sym.imp.USER32.dll_SendMessageA)();\n        if (ppiStack444 != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(unaff_EDI, 0);\n        }\n    }\ncode_r0x00402d00:\n    *0x4244a8 = *0x4244a8 + ppiVar27;\n    return NULL;\n}\n",
        "token_count": 12657
    },
    "004031bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.004031bf(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t unaff_ESI;\n    uint32_t uVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int32_t iStack96;\n    int32_t iStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    \n    uStack56 = 0x4031d8;\n    *0x4243e0 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uStack56 = 0x400;\n    *0x4243e0 = *0x4243e0 + 1000;\n    uStack60 = 0x42bc00;\n    puStack64 = NULL;\n    uStack68 = 0x4031f4;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    uStack68 = 3;\n    uStack72 = 0x80000000;\n    uStack76 = 0x42bc00;\n    uStack80 = 0x403201;\n    puVar1 = fcn.0040656e();\n    if (puVar1 == 0xffffffff) {\n        *0x40a010 = puVar1;\n        return \"Error launching installer\";\n    }\n    uStack80 = 0x42bc00;\n    puStack84 = 0x42ac00;\n    iStack88 = 0x403224;\n    *0x40a010 = puVar1;\n    fcn.0040675e();\n    iStack88 = 0x42ac00;\n    iVar2 = fcn.00406916();\n    iStack96 = 0x42c000;\n    fcn.0040675e();\n    puVar10 = puVar1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1);\n    puVar9 = NULL;\n    iVar4 = 0;\n    *0x40b508 = uVar3;\n    for (; uVar3 != 0; uVar3 = uVar3 - uVar8) {\n        uVar8 = 0x200;\n        if (*0x4243e8 != 0) {\n            uVar8 = 0x8000;\n        }\n        if (uVar3 < uVar8) {\n            uVar8 = uVar3;\n        }\n        puVar10 = 0x40b5a0;\n        iVar4 = fcn.00402f2a();\n        if (iVar4 == 0) {\n            fcn.0040315b(1);\n            goto code_r0x00403412;\n        }\n        if (*0x4243e8 == 0) {\n            puVar10 = &stack0xffffffa8;\n            fcn.004062ec();\n            if ((((iStack96 == -0x21524111) && (puStack84 == 0x74736e49)) && (iStack88 == 0x74666f73)) &&\n               (iVar2 == 0x6c6c754e)) {\n                *0x4243e8 = *0x40b50c;\n                *0x4244c0 = *0x4244c0 | unaff_ESI & 2;\n                if (uVar3 < uStack76) goto code_r0x00403412;\n                iVar4 = iStack88;\n                puVar9 = puStack84;\n                if ((unaff_ESI & 0xc) == 4) break;\n                uVar3 = uStack76 - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((unaff_ESI & 2) == 0) {\n            fcn.0040315b(0);\n        }\n        if (uVar3 < *0x40b508) {\n            puVar10 = puStack84;\n            iStack96 = fcn.00406a1e();\n        }\n        *0x40b50c = *0x40b50c + uVar8;\n        puVar9 = puStack84;\n        iVar4 = iStack88;\n    }\n    fcn.0040315b(1, puVar10);\n    if (*0x4243e8 != 0) {\n        if (iVar4 != 0) {\n            fcn.00402f40(*0x40b50c);\n            iVar4 = fcn.0040659b(*0x40a010, &stack0xffffffcc, 4);\n            if ((iVar4 == 0) || (puVar9 != puStack64)) goto code_r0x00403412;\n        }\n        uVar3 = uStack60;\n        puVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n        fcn.00402f40(*0x4243e8 + 0x1c);\n        iVar4 = fcn.00402f57(0xffffffff, 0, puVar5, uStack72);\n        if (iVar4 == iStack88) {\n            *0x4243ec = *puVar5;\n            if ((uVar3 & 1) != 0) {\n                *0x4243e4 = *0x4243e4 + 1;\n            }\n            iVar4 = 8;\n            piVar6 = puVar5 + 0x11;\n            *0x4243f0 = puVar5;\n            do {\n                piVar6 = piVar6 + -2;\n                *piVar6 = *piVar6 + puVar5;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            uVar7 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(puVar1, 0, 0, 1);\n            puVar5[0xf] = uVar7;\n            fcn.004062ec(0x424400, puVar5 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00403412:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1475
    },
    "004034a1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004034a1(void)\n\n{\n    if (*0x40a010 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a010);\n        *0x40a010 = -1;\n    }\n    fcn.00403a8e();\n    fcn.00406351(0x42b800, 7);\n    return;\n}\n",
        "token_count": 87
    },
    "0040570c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040570c(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint32_t uStack128;\n    char *pcStack124;\n    uint32_t uStack120;\n    uint uStack116;\n    uint uStack112;\n    \n    iVar9 = *0x4243f0;\n    pcVar3 = fcn.00406539();\n    if (pcVar3 == NULL) {\n        *0x42b000 = 0x7830;\n        *0x42b002 = 0;\n        fcn.004065ca(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x41f9b0, 0);\n        if (*0x41f9b0 == '\\0') {\n            fcn.004065ca(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x41f9b0, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar3)();\n        fcn.0040625c();\n    }\n    fcn.0040564d();\n    *0x4244a0 = *0x4243ec & 0x20;\n    *0x4244bc = 0x10000;\n    iVar4 = fcn.00406275();\n    if ((iVar4 == 0) && (*(iVar9 + 0x48) != 0)) {\n        uVar8 = 0x423380;\n        uStack112 = 0x4057dc;\n        fcn.004065ca(*(iVar9 + 0x44), *(iVar9 + 0x48) + *0x424418, *(iVar9 + 0x4c) + *0x424418, 0x423380, 0);\n        if (*0x423380 != '\\0') {\n            if (*0x423380 == '\\\"') {\n                uStack112 = 0x22;\n                uVar8 = 0x423381;\n                uStack116 = 0x423381;\n                uStack120 = 0x4057f6;\n                puVar5 = fcn.00406238();\n                *puVar5 = 0;\n            }\n            pcStack124 = 0x4057fe;\n            uStack120 = uVar8;\n            iVar4 = sub.KERNEL32.dll_lstrlenA();\n            uStack128 = iVar4 + -4 + uVar8;\n            if (uVar8 < uStack128) {\n                pcStack124 = \".exe\";\n                uStack132 = 0x405813;\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n                if (iVar4 == 0) {\n                    uStack128 = 0x40581e;\n                    pcStack124 = uVar8;\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n                    if ((uVar6 == 0xffffffff) || ((uVar6 & 0x10) == 0)) {\n                        uStack128 = 0x40582d;\n                        uStack120 = uVar8;\n                        fcn.00406916();\n                    }\n                }\n            }\n            uStack128 = 0x405833;\n            pcStack124 = uVar8;\n            uStack128 = fcn.0040619a();\n            uStack132 = 0x42a400;\n            uStack136 = 0x40583a;\n            fcn.0040675e();\n        }\n    }\n    uStack136 = 0x42a400;\n    uStack140 = 0x405840;\n    iVar4 = fcn.00406275();\n    if (iVar4 == 0) {\n        uStack140 = *(iVar9 + 0x118);\n        uStack144 = 0x42a400;\n        uStack148 = 0x405850;\n        fcn.00405bb1();\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar11 = 1;\n    iVar10 = 0x67;\n    iVar4 = *0x423bd4;\n    *0x423bb8 = (*_sym.imp.USER32.dll_LoadImageA)(*0x423bd4, 0x67, 1);\n    pcVar3 = _sym.imp.USER32.dll_RegisterClassA;\n    if (*(iVar9 + 0x50) == -1) {\ncode_r0x004058fd:\n        iVar9 = fcn.00401533(0);\n        if (iVar9 == 0) {\n            fcn.0040564d();\n            if (*0x4244c0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4209b8, 5);\n                iVar9 = fcn.00405e9e(\"RichEd20\");\n                if (iVar9 == 0) {\n                    fcn.00405e9e(\"RichEd32\");\n                }\n                pcVar1 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar9 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x423b80);\n                if (iVar9 == 0) {\n                    (*pcVar1)(0, \"RichEdit\", 0x423b80);\n                    *0x423ba4 = \"RichEdit20A\";\n                    (*pcVar3)(0x423b80);\n                }\n                uVar7 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x423bd4, *0x423bb4 + 0x69U & 0xffff, 0, 0x404ccc, 0);\n                fcn.00401533(5);\n                fcn.00403a73(1);\n                return uVar7;\n            }\n            iVar9 = fcn.00405532(0);\n            if (iVar9 == 0) {\n                fcn.00401533(1);\n                goto code_r0x004058ad;\n            }\n            if (*0x423bcc == 0) {\n                fcn.00401533(2);\n            }\n        }\n        uVar7 = 2;\n    }\n    else {\n        iVar9 = 0x423b80;\n        *0x423b84 = 0x401000;\n        *0x423b90 = *0x423bd4;\n        *0x423ba4 = 0x408530;\n        *0x423b94 = *0x423bb8;\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassA)(0x423b80);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x4209b8 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, 0x408530, 0, 0x80000000, iVar9, iVar4, iVar10 - iVar9, iVar11 - iVar4, 0, 0, \n                                   *0x423bd4, 0);\n            goto code_r0x004058fd;\n        }\ncode_r0x004058ad:\n        uVar7 = 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1724
    },
    "00405fcc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405fcc(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t hFile;\n    uchar *nNumberOfBytesToRead;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n    *0x422a28 = 0x4c554e;\n    if (param_2 != 0) {\n        uVar2 = fcn.0040656e(param_2, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(param_2, 0x422a28, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(param_1, 0x422628, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x422228, \"%s=%s\\r\\n\", 0x422a28, 0x422628);\n        fcn.00405bb1(0x422628, *(*0x4243f0 + 0x128));\n        hFile = fcn.0040656e(0x422628, 0xc0000000, 4);\n        if (hFile != -1) {\n            nNumberOfBytesToRead = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, nNumberOfBytesToRead + iVar3 + 10);\n            if ((lpBuffer != 0) && (iVar4 = fcn.0040659b(hFile, lpBuffer, nNumberOfBytesToRead),  iVar4 != 0)) {\n                iVar4 = fcn.0040677a(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(nNumberOfBytesToRead + lpBuffer, \"[Rename]\\r\\n\");\n                    nNumberOfBytesToRead = nNumberOfBytesToRead + 10;\n                    puVar6 = nNumberOfBytesToRead;\n                }\n                else {\n                    puVar5 = fcn.0040677a(iVar4 + 10, 0x408714);\n                    puVar6 = nNumberOfBytesToRead;\n                    if (puVar5 != NULL) {\n                        for (puVar6 = nNumberOfBytesToRead + lpBuffer; puVar5 < puVar6; puVar6 = puVar6 + -1) {\n                            puVar6[iVar3] = *puVar6;\n                        }\n                        puVar6 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.004062ec(puVar6 + lpBuffer, 0x422228, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.0040665a(hFile, lpBuffer, nNumberOfBytesToRead + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "004061c7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061c7(uint lpFileName, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004067e1(lpFileName);\n    if (iVar1 != -1) {\n        if ((arg_ch & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((arg_ch & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(lpFileName, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "00406211": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406211(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x422e28);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x422e28;\n    }\n    return uVar2;\n}\n",
        "token_count": 115
    },
    "00406275": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406275(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    fcn.0040675e(0x421e28, param_1);\n    pcVar1 = fcn.00406809(0x421e28);\n    if ((pcVar1 != NULL) &&\n       ((fcn.00406941(pcVar1),  (*0x4243ec & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\')))))) {\n        while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x421e28),  pcVar1 + -0x421e28 < iVar3) {\n            puVar2 = fcn.00406211(0x421e28);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) {\n                return 0;\n            }\n            fcn.00406916(0x421e28);\n        }\n        fcn.0040619a();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x421e28);\n        if (iVar3 != -1) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00406351": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406351(char *param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t unaff_EBX;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *unaff_EDI;\n    uint32_t arg_ch;\n    char *pcVar9;\n    char acStack280 [280];\n    \n    arg_ch = param_2 & 4;\n    iVar2 = fcn.00406275();\n    if ((param_2 & 8) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        *0x4244a8 = *0x4244a8 + (iVar2 == 0);\n        return;\n    }\n    uVar6 = param_2 & 1;\n    if (uVar6 == 0) {\ncode_r0x004063b0:\n        fcn.0040675e(0x421a28, param_1);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        if (uVar6 == 0) {\n            fcn.00406916(param_1);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(0x421a28, \"\\\\*.*\");\n        }\n        if ((*param_1 != '\\0') || (*0x421a28 == '\\\\')) {\n            (*pcVar1)(param_1, 0x4082a0);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n        pcVar8 = param_1 + iVar3;\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x421a28, &stack0xfffffeac);\n        if (iVar3 != -1) {\n            do {\n                pcVar8 = unaff_EDI;\n                pcVar9 = 0x406428;\n                pcVar4 = fcn.00406238(&stack0xfffffee8, 0x3f);\n                pcVar7 = &stack0xfffffee8;\n                if ((*pcVar4 != '\\0') && (pcVar7 = &stack0xffffffe4,  acStack280[252] == '\\0')) {\n                    pcVar7 = &stack0xfffffee8;\n                }\n                unaff_EDI = pcVar8;\n                if ((*pcVar7 != '.') || ((pcVar7[1] != '\\0' && ((pcVar7[1] != '.' || (pcVar7[2] != '\\0')))))) {\n                    fcn.0040675e(pcVar8, pcVar7);\n                    if ((unaff_EBX & 0x10) == 0) {\n                        iVar5 = fcn.004061c7(param_1, arg_ch);\n                        if (iVar5 == 0) {\n                            if (arg_ch == 0) {\n                                *0x4244a8 = *0x4244a8 + 1;\n                                pcVar9 = pcVar7;\n                            }\n                            else {\n                                fcn.004059ed(0xfffffff1, param_1);\n                                fcn.00405f39(param_1, 0);\n                                pcVar9 = pcVar7;\n                            }\n                        }\n                        else {\n                            fcn.004059ed(0xfffffff2, param_1);\n                            pcVar9 = pcVar7;\n                        }\n                    }\n                    else {\n                        pcVar9 = pcVar7;\n                        if ((param_2 & 3) == 3) {\n                            fcn.00406351(param_1, param_2);\n                            pcVar9 = pcVar7;\n                        }\n                    }\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(pcVar9, &stack0xfffffe9c);\n            } while (iVar5 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        }\n        if (uVar6 == 0) {\n            return;\n        }\n        pcVar8[-1] = '\\0';\n        if (iVar2 == 0) goto code_r0x0040651c;\n    }\n    else {\n        if (iVar2 == 0) goto code_r0x0040651c;\n        if ((param_2 & 2) != 0) goto code_r0x004063b0;\n    }\n    iVar2 = fcn.00406211(param_1);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.0040619a(param_1);\n    iVar2 = fcn.004061c7(param_1, arg_ch | 1);\n    if (iVar2 != 0) {\n        fcn.004059ed(0xffffffe5, param_1);\n        return;\n    }\n    if (arg_ch != 0) {\n        fcn.004059ed(0xfffffff1, param_1);\n        fcn.00405f39(param_1, 0);\n        return;\n    }\ncode_r0x0040651c:\n    *0x4244a8 = *0x4244a8 + 1;\n    return;\n}\n",
        "token_count": 1165
    },
    "0040656e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040656e(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, iVar1, 0);\n    return;\n}\n",
        "token_count": 117
    },
    "004067e1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004067e1(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "004011a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004011a0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    \n    uVar1 = 0;\n    piVar4 = *0x4243f0 + 0x94;\n    do {\n        if (*piVar4 != 0) {\n            uVar2 = 0;\n            if (*0x42440c != 0) {\n                puVar3 = *0x424408 + 4;\n                do {\n                    if (((puVar3[1] & 6) == 0) &&\n                       (((param_1 == 0 || (*(param_1 + uVar2 * 4) != 0)) &&\n                        ((1 << (uVar1 & 0x1f) & *puVar3) != (puVar3[1] & 1) << (uVar1 & 0x1f))))) break;\n                    uVar2 = uVar2 + 1;\n                    puVar3 = puVar3 + 0x106;\n                } while (uVar2 < *0x42440c);\n            }\n            if (uVar2 == *0x42440c) {\n                return uVar1;\n            }\n        }\n        uVar1 = uVar1 + 1;\n        piVar4 = piVar4 + 1;\n        if (0x1f < uVar1) {\n            return uVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 344
    },
    "00401399": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401399(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t unaff_retaddr;\n    \n    if (-1 < param_1) {\n        do {\n            piVar1 = *0x424410 + param_1 * 0x1c;\n            if (*piVar1 == 1) {\n                return 0;\n            }\n            iVar2 = fcn.0040154a(piVar1);\n            if (iVar2 == 0x7fffffff) {\n                return 0x7fffffff;\n            }\n            iVar2 = fcn.00402f0c(iVar2);\n            if (iVar2 == 0) {\n                iVar4 = 1;\n                iVar2 = param_1 + 1;\n            }\n            else {\n                iVar2 = iVar2 + -1;\n                iVar4 = iVar2 - param_1;\n            }\n            if (unaff_retaddr != 0) {\n                *0x423bb0 = *0x423bb0 + iVar4;\n                uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x423bb0, 30000, *0x423bac, 0);\n                (*_sym.imp.USER32.dll_SendMessageA)(piVar1, 0x402, uVar3);\n            }\n            param_1 = iVar2;\n        } while (-1 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "00402e92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00402e92(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    \n    uVar1 = (param_1 ^ param_1 >> 0x1f) - (param_1 >> 0x1f);\n    uVar2 = fcn.00405bb1((uVar1 >> 4) * 0x400 + 0x40a0c8, *(*0x40a0c4 + (uVar1 & 0xf) * 4));\n    if (unaff_ESI < 0) {\n        fcn.00406941(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "00402f57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00402f57(int32_t param_1, uint param_2, int32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t lpBuffer;\n    uint32_t uVar8;\n    uint32_t nNumberOfBytesToWrite;\n    uint32_t unaff_retaddr;\n    uint uVar9;\n    uchar *lpBuffer_00;\n    uint32_t uStack100;\n    int32_t aiStack80 [12];\n    int32_t iStack32;\n    int32_t iStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    int32_t iStack8;\n    uint32_t uStack4;\n    \n    iVar5 = param_3;\n    uVar6 = 0x8000;\n    if (param_3 != 0) {\n        uVar6 = param_4;\n    }\n    uVar8 = 0;\n    aiStack80[0] = 0x4175a0;\n    if (param_3 != 0) {\n        aiStack80[0] = param_3;\n    }\n    if (-1 < param_1) {\n        uStack100 = *0x424438 + param_1;\n        fcn.00402f40();\n    }\n    lpBuffer_00 = &param_2;\n    lpBuffer = *0x40a010;\n    iVar1 = fcn.0040659b(*0x40a010, lpBuffer_00, 4);\n    if (iVar1 != 0) {\n        if (uStack4 < 0) {\n            iStack8 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            fcn.00407856();\n            uStack100 = uStack12 & 0x7fffffff;\n            uStack12 = uStack100;\n            if (uStack100 == 0) {\n                return 0;\n            }\n            while( true ) {\n                uVar7 = 0x4000;\n                if (uStack12 < 0x4000) {\n                    uVar7 = uStack12;\n                }\n                uVar9 = 0x4135a0;\n                iVar1 = fcn.00402f2a();\n                if (iVar1 == 0) break;\n                iStack20 = iStack20 - uVar7;\n                *0x40b530 = 0x4135a0;\n                *0x40b534 = uVar7;\n                iVar1 = lpBuffer;\n                while( true ) {\n                    *0x40b538 = lpBuffer;\n                    *0x40b53c = uVar6;\n                    iVar2 = fcn.00406a8a(uVar9);\n                    if (iVar2 < 0) {\n                        return 0xfffffffc;\n                    }\n                    iStack20 = *0x40b538 - lpBuffer;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    if (((*0x4244d4 & 1) != 0) && ((200 < iVar3 - iStack8 || (uStack12 == 0)))) {\n                        uVar9 = (*_sym.imp.KERNEL32.dll_MulDiv)(uStack100 - uStack12, 100, uStack100);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&uStack100, \"... %d%%\", uVar9);\n                        uVar9 = 0;\n                        fcn.004059ed(0, aiStack80);\n                        iStack8 = iVar3;\n                    }\n                    if (iStack20 == 0) break;\n                    if (iVar5 == 0) {\n                        uVar9 = uStack16;\n                        iVar4 = fcn.0040665a(uStack16, lpBuffer, iStack20);\n                        iVar3 = iStack32;\n                        if (iVar4 == 0) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        uVar6 = uVar6 - iStack20;\n                        iVar3 = iStack20;\n                        lpBuffer = *0x40b538;\n                    }\n                    uVar8 = uVar8 + iVar3;\n                    if (iVar2 == 1) {\n                        return uVar8;\n                    }\n                }\n                lpBuffer = iVar1;\n                if (uStack12 < 1) {\n                    return uVar8;\n                }\n            }\n        }\n        else {\n            uVar7 = uStack4;\n            if (iVar5 == 0) {\n                while( true ) {\n                    if (uVar7 < 1) {\n                        return uVar8;\n                    }\n                    nNumberOfBytesToWrite = uVar6;\n                    if (uVar7 < uVar6) {\n                        nNumberOfBytesToWrite = uVar7;\n                    }\n                    iVar5 = fcn.00402f2a(lpBuffer_00, nNumberOfBytesToWrite);\n                    if (iVar5 == 0) break;\n                    iVar5 = fcn.0040665a(uStack4, 0x4135a0, nNumberOfBytesToWrite);\n                    if (iVar5 == 0) {\n                        return 0xfffffffe;\n                    }\n                    uVar8 = uVar8 + nNumberOfBytesToWrite;\n                    uStack12 = uStack12 - nNumberOfBytesToWrite;\n                    uVar7 = uStack12;\n                }\n            }\n            else {\n                if (uStack4 < unaff_retaddr) {\n                    unaff_retaddr = uStack4;\n                }\n                iVar5 = fcn.00402f2a(iVar5, unaff_retaddr);\n                if (iVar5 != 0) {\n                    return unaff_retaddr;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1284
    },
    "0040315b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040315b(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        if (*0x40b510 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x40b510);\n        }\n        *0x40b510 = 0;\n        return;\n    }\n    if (*0x40b510 != 0) {\n        fcn.00405f0b(0);\n        return;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    if (*0x4243e0 < uVar1) {\n        *0x40b510 = (*_sym.imp.USER32.dll_CreateDialogParamA)(*0x423bd4, 0x6f, 0, fcn.00403421, 0);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x40b510, 5);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00405274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405274(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x4209bc;\n    if (*0x4244ac != 0) {\n        uVar1 = *0x4209c0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 89
    },
    "004053a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004053a8(uint hWnd, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(hWnd, &lpPoint);\n        (*pcVar1)(hWnd, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(hWnd, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 310
    },
    "00405429": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405429(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h - 0x133U < 6) && (puVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  puVar1 != NULL))\n        && (puVar1[2] < 2)) && ((puVar1[4] < 3 && (uVar3 = puVar1[5],  (uVar3 & 0xffffffe0) == 0)))) {\n        uVar2 = *puVar1;\n        if ((uVar3 & 2) != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(uVar2);\n            uVar3 = puVar1[5];\n        }\n        if ((uVar3 & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar2);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar1[4]);\n        uVar3 = puVar1[5];\n        var_8h = puVar1[1];\n        if ((uVar3 & 8) != 0) {\n            var_8h = (*_sym.imp.USER32.dll_GetSysColor)(var_8h);\n            uVar3 = puVar1[5];\n        }\n        if ((uVar3 & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n            uVar3 = puVar1[5];\n        }\n        if ((uVar3 & 0x10) != 0) {\n            var_ch = puVar1[2];\n            if (puVar1[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar1[3]);\n            }\n            uVar2 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar1[3] = uVar2;\n        }\n        return puVar1[3];\n    }\n    return 0;\n}\n",
        "token_count": 515
    },
    "0040564d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040564d(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint16_t uVar5;\n    bool bVar6;\n    \n    uVar5 = 0xffff;\n    uVar1 = fcn.00406874(0x42b000);\n    do {\n        if (*0x424424 != 0) {\n            iVar2 = *(*0x4243f0 + 100) * *0x424424;\n            iVar3 = *0x424424;\n            do {\n                iVar2 = iVar2 - *(*0x4243f0 + 100);\n                iVar3 = iVar3 + -1;\n                if ((uVar5 & (*(iVar2 + *0x424420) ^ uVar1)) == 0) {\n                    *0x423bb4 = *(iVar2 + 2 + *0x424420);\n                    *0x4244c8 = *(iVar2 + 6 + *0x424420);\n                    *0x423bc0 = *0x424420 + 10 + iVar2;\n                    if (*0x423bc0 != 0) {\n                        fcn.0040625c(0x42b000, *(iVar2 + *0x424420));\n                        fcn.004059ce();\n                        piVar4 = *0x424408;\n                        iVar3 = *0x42440c;\n                        while (iVar3 != 0) {\n                            iVar3 = iVar3 + -1;\n                            if (*piVar4 != 0) {\n                                fcn.00405bb1(piVar4 + 6, *piVar4);\n                            }\n                            piVar4 = piVar4 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar3 != 0);\n        }\n        bVar6 = uVar5 != 0xffff;\n        uVar5 = 0x3ff;\n        if (bVar6) {\n            uVar5 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 461
    },
    "00405bb1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00405bb1(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint8_t *arg_14h;\n    uint32_t *puVar10;\n    uint32_t auStack16 [3];\n    uint8_t *puStack4;\n    \n    puVar7 = param_1;\n    if (param_2 < 0) {\n        param_2 = *(*0x423bc0 - (param_2 * 4 + 4));\n    }\n    puVar6 = *0x424418 + param_2;\n    arg_14h = 0x423380;\n    if ((0x42337f < param_1) && (param_1 + -0x423380 < 0x800)) {\n        param_1 = NULL;\n        arg_14h = puVar7;\n    }\n    uVar1 = *puVar6;\n    do {\n        if ((uVar1 == 0) || (0x3ff < arg_14h + -0x423380)) {\n            *arg_14h = 0;\n            if (param_1 == NULL) {\n                uVar5 = 0x423380;\n            }\n            else {\n                uVar5 = fcn.0040675e(param_1, 0x423380);\n            }\n            return uVar5;\n        }\n        uVar1 = *puVar6;\n        if (uVar1 < 4) {\n            puVar7 = puVar6[2];\n            auStack16[1] = puVar6[1];\n            uVar9 = (puVar7 & 0x7f) << 7 | auStack16[1] & 0x7f;\n            puStack4 = puVar7;\n            auStack16[0] = auStack16[1] | 0x8000;\n            auStack16[2] = puVar7 | 0x8000;\n            if (uVar1 == 2) {\n                if ((((*0x4244dc == '\\0') && (*0x4244de < 0x45a)) && (puVar7 != 0x23)) && (puVar7 != 0x2e)) {\n                    bVar2 = false;\n                }\n                else {\n                    bVar2 = true;\n                }\n                iVar4 = 2;\n                if (*0x4244a4 != 0) {\n                    iVar4 = 4;\n                }\n                puVar8 = puVar7;\n                if (puVar6[1] < '\\0') {\n                    fcn.004065ca(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \n                                 (auStack16[1] & 0x3f) + *0x424418, arg_14h, auStack16[1] & 0x40);\n                    if (*arg_14h == 0) {\n                        fcn.00405bb1(arg_14h, puVar7);\n                        goto code_r0x00405d66;\n                    }\ncode_r0x00405d6b:\n                    if (puVar8 == 0x1a) {\n                        (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_14h, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\n                    }\n                }\n                else {\n                    if (auStack16[1] == 0x25) {\n                        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_14h, 0x400);\n                    }\n                    else if (auStack16[1] == 0x24) {\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_14h, 0x400);\n                    }\n                    else {\n                        do {\n                            iVar4 = iVar4 + -1;\n                            puVar8 = puVar6;\n                            if (((*0x423bd0 != NULL) && (bVar2)) &&\n                               (iVar3 = (**0x423bd0)(*0x423bd8, auStack16[iVar4], 0, 0, arg_14h),  iVar3 == 0)) break;\n                            puVar10 = auStack16 + 1;\n                            iVar3 = sub.SHELL32.dll_SHGetSpecialFolderLocation\n                                              (*0x423bd8, *(&stack0x00000000 + iVar4 * 4), puVar10);\n                            if (iVar3 == 0) {\n                                iVar3 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(puVar7, arg_14h);\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar10);\n                                if (iVar3 != 0) break;\n                            }\n                            *arg_14h = 0;\n                        } while (iVar4 != 0);\n                    }\ncode_r0x00405d66:\n                    if (*arg_14h != 0) goto code_r0x00405d6b;\n                }\n                fcn.00406941(arg_14h);\n            }\n            else if (uVar1 == 3) {\n                if (uVar9 == 0x1d) {\n                    fcn.0040625c(arg_14h, *0x423bd8);\n                }\n                else {\n                    fcn.0040675e(arg_14h, uVar9 * 0x400 + 0x425000);\n                    if (uVar9 - 0x15 < 7) {\n                        fcn.00406941(arg_14h);\n                    }\n                }\n            }\n            else if (uVar1 == 1) {\n                fcn.00405bb1(arg_14h, ~uVar9);\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_14h);\n            arg_14h = arg_14h + iVar4;\n            iVar4 = 3;\n        }\n        else if (uVar1 == 4) {\n            *arg_14h = puVar6[1];\n            arg_14h = arg_14h + 1;\n            iVar4 = 2;\n        }\n        else {\n            *arg_14h = uVar1;\n            arg_14h = arg_14h + 1;\n            iVar4 = 1;\n        }\n        puVar6 = puVar6 + iVar4;\n        uVar1 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 1463
    },
    "004065ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065ca(uint arg_8h, uint arg_ch, uint lpValueName, uchar *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 0x400;\n    iVar1 = fcn.00405f9e(arg_8h, arg_ch, -(arg_18h != 0) & 0x100 | 0x20019, &hKey);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, lpValueName, 0, &arg_18h, arg_14h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        arg_14h[0x3ff] = 0;\n        if (iVar1 == 0) {\n            if (arg_18h == 1) {\n                return;\n            }\n            if (arg_18h == 2) {\n                return;\n            }\n        }\n    }\n    *arg_14h = 0;\n    return;\n}\n",
        "token_count": 267
    },
    "004066ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004066ec(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x4244c0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x4244c8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a09c = *0x423bd8;\n        *0x40a0a0 = *0x423bd4;\n        *0x40a0a4 = param_1;\n        *0x40a0a8 = 0x423be0;\n        *0x40a0ac = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a098);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00406809": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00406809(char *param_1)\n\n{\n    code *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(pcVar2);\n    if (*param_1 != '\\0') {\n        if ((*pcVar2 == ':') && (pcVar2[1] == '\\\\')) {\n            pcVar2 = (*pcVar1)(uVar3);\n            return pcVar2;\n        }\n        if ((*param_1 == '\\\\') && (param_1[1] == '\\\\')) {\n            iVar4 = 2;\n            while( true ) {\n                iVar4 = iVar4 + -1;\n                pcVar2 = fcn.00406238();\n                if (*pcVar2 == '\\0') break;\n                if (iVar4 == 0) {\n                    return pcVar2 + 1;\n                }\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 247
    },
    "00406941": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406941(uint8_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint32_t unaff_retaddr;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    \n    uVar5 = *param_1;\n    if ((((uVar5 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n        uVar5 = *param_1;\n    }\n    if ((uVar5 != 0) && (iVar2 = fcn.004069f2(param_1),  iVar2 != 0)) {\n        param_1 = param_1 + 2;\n        uVar5 = *param_1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    puVar4 = param_1;\n    puVar7 = param_1;\n    if (uVar5 != 0) {\n        uVar6 = unaff_retaddr & 0xffffff00 | uVar5;\n        do {\n            if ((0x1f < uVar5) && (pcVar3 = fcn.00406238(\"*?|<>/\\\":\", uVar6),  *pcVar3 == '\\0')) {\n                iVar2 = (*pcVar1)(param_1);\n                fcn.004062ec(puVar4, param_1, iVar2 - param_1);\n                puVar4 = (*pcVar1)(puVar4);\n            }\n            param_1 = (*pcVar1)(param_1);\n            uVar5 = *param_1;\n            uVar6 = uVar6 & 0xffffff00 | uVar5;\n        } while (uVar5 != 0);\n    }\n    *puVar4 = 0;\n    while( true ) {\n        puVar4 = (*_sym.imp.USER32.dll_CharPrevA)(puVar7, puVar4);\n        if ((*puVar4 != 0x20) && (*puVar4 != 0x5c)) break;\n        *puVar4 = 0;\n        if (puVar4 <= puVar7) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "00406a1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "hash data with CRC32"
        ],
        "decompiled_code": "\nuint32_t fcn.00406a1e(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x422f6c == 0) {\n        uVar1 = 0;\n        do {\n            iVar3 = 8;\n            uVar2 = uVar1;\n            do {\n                uVar2 = uVar2 >> 1 ^ -((uVar2 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar1 * 4 + 0x422f68) = uVar2;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *(((*param_2 ^ param_1) & 0xff) * 4 + 0x422f68);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 311
    },
    "00404c6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c6d(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    uVar2 = 1;\n    if (arg_ch == 1) {\n        arg_10h = 0x3fb;\n        fcn.00406689(0x3fb, arg_14h);\n        uVar4 = 1;\n        uVar3 = 0x466;\n        uVar2 = arg_14h;\n        goto code_r0x00404cbc;\n    }\n    if (arg_ch != 2) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n    if (iVar1 == 0) {\ncode_r0x00404cb2:\n        uVar2 = 0;\n    }\n    else {\n        arg_10h = 7;\n        iVar1 = fcn.00401533();\n        if (iVar1 != 0) goto code_r0x00404cb2;\n    }\n    uVar4 = 0;\n    uVar3 = 0x465;\ncode_r0x00404cbc:\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, uVar3, uVar4, uVar2, arg_10h);\n    return 0;\n}\n",
        "token_count": 337
    },
    "00401221": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.00401221(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x424408);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42440c) {\n            puVar5 = *0x424408 + 8 + uVar4 * 0x418;\n            iVar2 = 0;\n            uVar6 = *0x42440c;\n            do {\n                if ((*puVar5 & 2) == 0) {\n                    if ((*puVar5 & 4) == 0) {\n                        iVar3 = iVar2;\n                        if ((*puVar5 & 0x10) == 0) {\n                            *puVar5 = *puVar5 ^ (*puVar5 ^ uVar1) & 1;\n                            uVar6 = *0x42440c;\n                        }\n                    }\n                    else {\n                        iVar3 = iVar2 + -1;\n                        if (iVar2 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar3 = iVar2 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar5 = puVar5 + 0x106;\n                iVar2 = iVar3;\n            } while (uVar4 < uVar6);\n        }\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "004012dd": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.004012dd(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar1 = *0x424408;\n    iVar4 = 0;\n    iVar5 = param_1 * 0x418 + *0x424408;\n    if (((*(iVar5 + 8) & 2) != 0) && (param_2 != 0)) {\n        param_1 = param_1 + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    iVar6 = 0;\n    if (param_1 < *0x42440c) {\n        do {\n            uVar3 = *(param_1 * 0x418 + 8 + iVar1);\n            uVar2 = param_1 + 1;\n            if ((uVar3 & 2) != 0) {\n                uVar2 = fcn.004012dd(param_1, 1);\n                uVar3 = *(iVar1 + 8 + unaff_EBP);\n            }\n            param_1 = uVar2;\n            if ((uVar3 & 4) != 0) {\n                if (iVar6 == 0) {\n                    return param_1;\n                }\n                if (iVar4 == 0) {\n                    uVar3 = *(iVar5 + 8) & 0xffffff7f | 1;\n                }\n                else {\n                    uVar3 = *(iVar5 + 8) | 0x40;\n                }\n                *(iVar5 + 8) = uVar3;\n                return param_1;\n            }\n            iVar7 = iVar6 + 1;\n            if ((uVar3 & 0x40) == 0) {\n                iVar7 = iVar6;\n            }\n            if ((uVar3 & 1) != 0) {\n                iVar7 = iVar7 + 1;\n            }\n            if ((uVar3 & 1) == 0) {\n                iVar4 = iVar4 + 1;\n            }\n            iVar6 = iVar7;\n        } while (param_1 < *0x42440c);\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "0040141e": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t fcn.0040141e(uint param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_EBP;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    uint uStack8;\n    uint32_t uStack4;\n    \n    puVar4 = auStack272;\n    iVar1 = fcn.00405f9e(param_1, param_2, param_3 & 0x300 | 9, auStack272);\n    if (iVar1 == 0) {\n        if (((uStack4 & 2) == 0) ||\n           (iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)(puVar4, 0, &stack0xfffffee8, &stack0xfffffee4, 0, 0, 0, 0), \n           iVar1 == 0x103)) {\n            pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n            uVar3 = 0;\n            do {\n                iVar1 = (*pcVar2)(puVar4, uVar3, &stack0xfffffee8, 0x105);\n                if (iVar1 != 0) break;\n                if ((param_3 & 1) != 0) goto code_r0x00401503;\n                iVar1 = fcn.0040141e(unaff_EBP, auStack268, param_2);\n                uVar3 = param_3 & 1;\n            } while (iVar1 == 0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBP);\n            pcVar2 = fcn.00406539(3);\n            if (pcVar2 == NULL) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(uStack8, uStack4);\n            }\n            else {\n                iVar1 = (*pcVar2)(uStack8, uStack4, param_3 & 0x300, 0);\n            }\n        }\n        else {\ncode_r0x00401503:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBP);\n            iVar1 = 0x3eb;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 524
    },
    "004059ed": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.004059ed(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t unaff_ESI;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack4;\n    \n    iVar2 = *0x423bc8;\n    if (*0x423bc8 != 0) {\n        uVar5 = *0x4244d4 & 1;\n        if (uVar5 == 0) {\n            fcn.00405bb1();\n        }\n        uStack92 = 0x4211e0;\n        iStack96 = 0x405a27;\n        iVar3 = sub.KERNEL32.dll_lstrlenA();\n        if (iStack4 != 0) {\n            iStack96 = iStack4;\n            uStack100 = 0x405a37;\n            iVar4 = sub.KERNEL32.dll_lstrlenA();\n            if (0x7ff < iVar4 + iVar3) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x4211e0);\n        }\n        if ((unaff_ESI & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x423ba8, 0x4211e0);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((unaff_ESI & 2) == 0) {\n            uVar6 = 0;\n            iStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x1004, 0, 0);\n            uStack92 = 0;\n            iStack96 = iStack96 - uVar5;\n            (*pcVar1)(iVar2, 0x1007 - uVar5, 0, &stack0xffffff9c);\n            (*pcVar1)(iVar2, 0x1013, uVar6, 0);\n        }\n        if (uVar5 != 0) {\n            *(iVar3 + 0x4211e0) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 500
    },
    "00405503": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405503(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42440c;\n    iVar3 = *0x424408;\n    if (*0x42440c != 0) {\n        do {\n            iVar2 = iVar2 + -1;\n            if ((*(iVar3 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar3 + param_1 * 4);\n            }\n            iVar3 = iVar3 + 0x418;\n        } while (iVar2 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "00405532": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405532(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42440c;\n    iVar2 = *0x424408;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x424440 = *0x424440 | uVar1;\n    uVar5 = 0;\n    fcn.00405220(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401399();\n                if (iVar2 != 0) {\n                    *0x4244ac = *0x4244ac + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.00405220(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x4244ac;\n}\n",
        "token_count": 301
    },
    "00406874": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00406874(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    char cVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    uVar1 = *arg_8h;\n    iVar10 = 0;\n    _auStack8 = 0x39000000;\n    iVar9 = 1;\n    iVar3 = 10;\n    cVar8 = '\\n';\n    uVar2 = uVar1;\n    if (uVar1 == 0x2d) {\n        uVar2 = arg_8h[1];\n        iVar9 = -1;\n    }\n    puVar6 = arg_8h + 1;\n    if (uVar1 != 0x2d) {\n        puVar6 = arg_8h;\n    }\n    puVar7 = puVar6;\n    if (uVar2 == 0x30) {\n        puVar7 = puVar6 + 1;\n        uVar1 = *puVar7;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            iVar3 = 8;\n            cVar8 = '\\b';\n            _auStack8 = 0x37000000;\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            iVar3 = 0x10;\n            cVar8 = '\\x10';\n            puVar7 = puVar6 + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar7;\n        puVar7 = puVar7 + 1;\n        if ((uVar4 < 0x30) || (_auStack8 >> 0x18 < uVar4)) {\n            if ((cVar8 != '\\x10') || (5 < (uVar4 & 0xffffffdf) - 0x41)) {\n                return iVar9 * iVar10;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar10 = iVar10 * iVar3 + iVar5;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "00403421": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403421(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n    }\n    else if (arg_ch != 0x113) {\n        return 0;\n    }\n    uVar2 = *0x40b508;\n    if (*0x40b50c < *0x40b508) {\n        uVar2 = *0x40b50c;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar2, 100, *0x40b508);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n    sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    return 0;\n}\n",
        "token_count": 266
    },
    "00405e9e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e9e(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint lpBuffer;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if ((uVar1 < 0x105) && (uVar1 != 0)) {\n        puVar2 = &lpBuffer + uVar1;\n        if ((&stack0xfffffedb)[uVar1] != '\\\\') {\n            uVar3 = 0x4082a0;\n            goto code_r0x00405ee3;\n        }\n    }\n    else {\n        puVar2 = &lpBuffer;\n    }\n    uVar3 = 0x4082a1;\ncode_r0x00405ee3:\n    (*_sym.imp.USER32.dll_wsprintfA)(puVar2, \"%s%s.dll\", uVar3, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&lpBuffer, 0, 8);\n    return;\n}\n",
        "token_count": 248
    },
    "004069f2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.004069f2(uint8_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) || (((*param_1 | 0x20) + 0x9f < 0x1a && (param_1[1] == 0x3a)))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "00401290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401290(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42440c != 0)) {\n        puVar2 = *0x424408 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42440c);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00402e77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402e77(int32_t param_1)\n\n{\n    if (-1 < param_1) {\n        param_1 = *0x4244a4 + -0x7fffffff + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 61
    },
    "00404c26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c26(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00405252(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x425000);\n    }\n    fcn.00405429(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 147
    },
    "00405252": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405252(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405bb1(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "00405298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405298(uint param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uchar auStack48 [24];\n    uint uStack24;\n    \n    iVar5 = -0x24;\n    if (param_4 == 0) {\n        iVar5 = (param_3 < 0x100000) - 0x24;\n        if (param_3 < 0x400) {\n            iVar5 = -0x22;\n        }\n        uVar2 = 0;\n        if (0x3ff < param_3) {\n            uVar2 = (-(param_3 < 0x100000) & 0xf6U) + 0x14;\n        }\n        if (param_3 < 0xffff3333) {\n            param_3 = param_3 + (1 << (uVar2 & 0x1f)) / 0x14;\n        }\n        uVar4 = param_3 >> (uVar2 & 0x1f);\n        uVar3 = ((param_3 & 0xffffff) * 10 >> (uVar2 & 0x1f)) % 10;\n    }\n    else {\n        uVar4 = param_3 >> 0x14 | param_4 << 0xc;\n        uVar3 = 0;\n    }\n    fcn.00405bb1(0x41f9b0, param_2);\n    uVar1 = fcn.00405bb1(&stack0xffffffb8, 0xffffffdf);\n    uVar1 = fcn.00405bb1(auStack48, iVar5, uVar1);\n    iVar5 = sub.KERNEL32.dll_lstrlenA(0x41f9b0, \"%u.%u%s%s\", uVar4, uVar3, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar5 + 0x41f9b0);\n    sub.USER32.dll_SetDlgItemTextA(*0x423bbc, uStack24, 0x41f9b0);\n    return;\n}\n",
        "token_count": 503
    },
    "00405376": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405376(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x4209c4 + arg_8h, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    *0x4209c4 = *0x4209c4 + iVar1;\n    *arg_14h = iVar1;\n    return 0;\n}\n",
        "token_count": 137
    },
    "00405ad2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405ad2(int32_t arg_8h, uint lpiid)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint lpsz;\n    \n    uVar3 = 0;\n    do {\n        cVar1 = *(uVar3 + arg_8h);\n        *(&lpsz + uVar3 * 2) = cVar1;\n        if (cVar1 == '\\0') {\n            uVar2 = (*_sym.imp.ole32.dll_IIDFromString)(&lpsz, lpiid);\n            return uVar2;\n        }\n        uVar3 = uVar3 + 1;\n    } while (-1 < uVar3);\n    return 0x80004005;\n}\n",
        "token_count": 171
    },
    "0040619a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040619a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(param_1, 0x4082a0);\n    }\n    return param_1;\n}\n",
        "token_count": 126
    },
    "0040625c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040625c(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x408578, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "004066a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004066a5(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = 0x61736e;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 255
    },
    "0040685e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040685e(uint param_1, uint param_2)\n\n{\n    fcn.00406125(param_2, param_1, 0x400);\n    return;\n}\n",
        "token_count": 44
    },
    "00406916": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406916(uint param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1);\n    pcVar2 = unaff_retaddr + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(unaff_retaddr, pcVar2);\n    } while (unaff_retaddr < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 142
    },
    "00406125": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00406125(uint param_1, uint param_2, uint param_3)\n\n{\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, 0xffffffff, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 71
    },
    "00406158": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406158(uint hProcess)\n\n{\n    int32_t iVar1;\n    uint lpExitCode;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    while (iVar1 == 0x102) {\n        fcn.00405f0b(0xf);\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    }\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    return lpExitCode;\n}\n",
        "token_count": 133
    },
    "00405f6b": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f6b(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405e20(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, arg_10h, 0, arg_14h, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "00405f9e": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405f9e(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00405e20(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(iVar1, lpSubKey, 0, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "0040630e": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040630e(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x4219e0 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x4219e0, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "00406642": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00406642(uint *param_1)\n\n{\n    param_1[9] = 0;\n    *param_1 = 0x3c;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(param_1);\n    return;\n}\n",
        "token_count": 61
    },
    "00403a51": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403a51(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *0x41f9a0;\n    if (*0x41f9a0 != NULL) {\n        do {\n            if (piVar1[2] == param_1) {\n                return 0;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return 1;\n}\n",
        "token_count": 108
    },
    "00403a73": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403a73(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x41f9a0; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00403a8e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403a8e(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x41f9a0;\n    fcn.00403a73(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x41f9a0 = NULL;\n    return;\n}\n",
        "token_count": 151
    },
    "00405f0b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f0b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *lpMsg;\n    \n    while( true ) {\n        iVar1 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar1 == 0) break;\n        lpMsg = &lpMsg;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00406238": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406238(char *param_1, char param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    while ((cVar1 != '\\0' && (cVar1 != param_2))) {\n        param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n        cVar1 = *param_1;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "004062ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004062ec(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040677a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040677a(uint param_1, uint param_2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_retaddr;\n    int32_t iVar5;\n    code *pcVar6;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n    iVar5 = unaff_retaddr;\n    iVar4 = (*pcVar2)(unaff_retaddr);\n    pcVar6 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n    while( true ) {\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + unaff_retaddr);\n        *(iVar3 + unaff_retaddr) = 0;\n        iVar4 = (*pcVar6)(unaff_retaddr, iVar5);\n        *(iVar3 + unaff_retaddr) = uVar1;\n        if (iVar4 == 0) break;\n        unaff_retaddr = (*pcVar6)(unaff_retaddr);\n        iVar4 = (*pcVar2)(unaff_retaddr);\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 283
    },
    "00407856": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407856(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 150
    },
    "00406539": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00406539(int32_t param_1)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    \n    arg_8h = *(param_1 * 8 + 0x40a030);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(arg_8h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00405e9e(arg_8h),  iVar1 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40a034));\n    return;\n}\n",
        "token_count": 148
    },
    "00405f39": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00405f39(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExA)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.00405fcc(param_2, uVar2);\n    }\n    *0x4244b0 = *0x4244b0 + 1;\n    return;\n}\n",
        "token_count": 121
    },
    "00405b15": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.00405b15(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "00405b35": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405b35(uint lpFileName)\n\n{\n    int32_t iVar1;\n    ushort pSecurityDescriptor;\n    uint var_1eh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    ushort *var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_4h = 0;\n    var_1eh._0_2_ = 4;\n    stack0xffffffe0 = 0x408550;\n    var_18h = 0x408550;\n    var_8h = &pSecurityDescriptor;\n    pSecurityDescriptor = 1;\n    var_10h = 0x408540;\n    lpSecurityAttributes = 0xc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(lpFileName, &lpSecurityAttributes);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar1 != 0xb7) {\n            return iVar1;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityA)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 329
    },
    "0040659b": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040659b(uint hFile, uint lpBuffer, int32_t nNumberOfBytesToRead)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpNumberOfBytesRead;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    if ((iVar1 != 0) && (nNumberOfBytesToRead == lpNumberOfBytesRead)) {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    },
    "0040665a": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040665a(uint hFile, uint lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpNumberOfBytesWritten;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    if ((iVar1 != 0) && (nNumberOfBytesToWrite == lpNumberOfBytesWritten)) {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 136
    }
}