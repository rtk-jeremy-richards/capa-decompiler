{
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004314f3) overlaps instruction at (ram,0x004314f2)\n// \n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    char cVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint32_t unaff_EBP;\n    uint32_t *puVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    int32_t *piVar16;\n    int32_t *piVar17;\n    bool bVar18;\n    bool bVar19;\n    bool bVar20;\n    uchar auStack160 [88];\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    \n    puVar13 = 0x42d000;\n    puVar14 = 0x401000;\n    do {\n        uVar10 = *puVar13;\n        bVar18 = puVar13 < 0xfffffffc;\n        puVar13 = puVar13 + 1;\n        bVar19 = CARRY4(uVar10, uVar10) || CARRY4(uVar10 * 2, bVar18);\n        uVar10 = uVar10 * 2 + bVar18;\n        do {\n            if (bVar19) {\n                uVar2 = *puVar13;\n                puVar13 = puVar13 + 1;\n                *puVar14 = uVar2;\n                puVar14 = puVar14 + 1;\n            }\n            else {\n                uVar5 = 1;\n                do {\n                    do {\n                        bVar18 = CARRY4(uVar10, uVar10);\n                        uVar11 = uVar10 * 2;\n                        if (uVar11 == 0) {\n                            uVar10 = *puVar13;\n                            bVar19 = puVar13 < 0xfffffffc;\n                            puVar13 = puVar13 + 1;\n                            bVar18 = CARRY4(uVar10, uVar10) || CARRY4(uVar10 * 2, bVar19);\n                            uVar11 = uVar10 * 2 + bVar19;\n                        }\n                        uVar5 = uVar5 * 2 + bVar18;\n                        uVar10 = uVar11 * 2;\n                    } while (!CARRY4(uVar11, uVar11));\n                    if (uVar10 != 0) break;\n                    uVar11 = *puVar13;\n                    bVar18 = puVar13 < 0xfffffffc;\n                    puVar13 = puVar13 + 1;\n                    uVar10 = uVar11 * 2 + bVar18;\n                } while (!CARRY4(uVar11, uVar11) && !CARRY4(uVar11 * 2, bVar18));\n                if (2 < uVar5) {\n                    uVar2 = *puVar13;\n                    puVar13 = puVar13 + 1;\n                    unaff_EBP = CONCAT31(uVar5 + -3, uVar2) ^ 0xffffffff;\n                    if (unaff_EBP == 0) {\n                        puVar13 = 0x401000;\n                        iVar7 = 0x24a;\n                        goto code_r0x00431492;\n                    }\n                }\n                bVar18 = CARRY4(uVar10, uVar10);\n                uVar10 = uVar10 * 2;\n                if (uVar10 == 0) {\n                    uVar10 = *puVar13;\n                    bVar19 = puVar13 < 0xfffffffc;\n                    puVar13 = puVar13 + 1;\n                    bVar18 = CARRY4(uVar10, uVar10) || CARRY4(uVar10 * 2, bVar19);\n                    uVar10 = uVar10 * 2 + bVar19;\n                }\n                bVar19 = CARRY4(uVar10, uVar10);\n                uVar10 = uVar10 * 2;\n                if (uVar10 == 0) {\n                    uVar10 = *puVar13;\n                    bVar20 = puVar13 < 0xfffffffc;\n                    puVar13 = puVar13 + 1;\n                    bVar19 = CARRY4(uVar10, uVar10) || CARRY4(uVar10 * 2, bVar20);\n                    uVar10 = uVar10 * 2 + bVar20;\n                }\n                iVar7 = bVar18 * 2 + bVar19;\n                if (iVar7 == 0) {\n                    iVar7 = 1;\n                    do {\n                        do {\n                            bVar18 = CARRY4(uVar10, uVar10);\n                            uVar5 = uVar10 * 2;\n                            if (uVar5 == 0) {\n                                uVar10 = *puVar13;\n                                bVar19 = puVar13 < 0xfffffffc;\n                                puVar13 = puVar13 + 1;\n                                bVar18 = CARRY4(uVar10, uVar10) || CARRY4(uVar10 * 2, bVar19);\n                                uVar5 = uVar10 * 2 + bVar19;\n                            }\n                            iVar7 = iVar7 * 2 + bVar18;\n                            uVar10 = uVar5 * 2;\n                        } while (!CARRY4(uVar5, uVar5));\n                        if (uVar10 != 0) break;\n                        uVar5 = *puVar13;\n                        bVar18 = puVar13 < 0xfffffffc;\n                        puVar13 = puVar13 + 1;\n                        uVar10 = uVar5 * 2 + bVar18;\n                    } while (!CARRY4(uVar5, uVar5) && !CARRY4(uVar5 * 2, bVar18));\n                    iVar7 = iVar7 + 2;\n                }\n                uVar5 = iVar7 + 1 + (unaff_EBP < 0xfffff300);\n                puVar9 = puVar14 + unaff_EBP;\n                if (unaff_EBP < 0xfffffffd) {\n                    do {\n                        uVar6 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        *puVar14 = uVar6;\n                        puVar14 = puVar14 + 1;\n                        bVar18 = 3 < uVar5;\n                        uVar5 = uVar5 - 4;\n                    } while (bVar18 && uVar5 != 0);\n                    puVar14 = puVar14 + uVar5;\n                }\n                else {\n                    do {\n                        uVar2 = *puVar9;\n                        puVar9 = puVar9 + 1;\n                        *puVar14 = uVar2;\n                        puVar14 = puVar14 + 1;\n                        uVar5 = uVar5 - 1;\n                    } while (uVar5 != 0);\n                }\n            }\n            bVar19 = CARRY4(uVar10, uVar10);\n            uVar10 = uVar10 * 2;\n        } while (uVar10 != 0);\n    } while( true );\n    do {\n        for (; (1 < cVar3 + 0x18U || (*puVar13 != '\\x01')); puVar13 = puVar13 + 1) {\ncode_r0x00431492:\n            cVar3 = *puVar13;\n        }\n        uVar10 = *puVar13;\n        cVar3 = *(puVar13 + 1);\n        *puVar13 = (((CONCAT21(uVar10 >> 8, uVar10 >> 0x10) & 0xffff) << 8 | uVar10 >> 0x18) - puVar13) + 0x401000;\n        puVar13 = puVar13 + 5;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    piVar15 = 0x430000;\n    do {\n        piStack36 = *piVar15;\n        if (piStack36 == NULL) {\ncode_r0x0043150f:\n            pcVar4 = _sym.imp.KERNEL32.DLL_VirtualProtect;\n            uStack68 = 0x400000;\n            puStack40 = &stack0xffffffdc;\n            uStack44 = 4;\n            uStack48 = 0x1000;\n            puStack56 = 0x431528;\n            uStack52 = uStack68;\n            (*_sym.imp.KERNEL32.DLL_VirtualProtect)();\n            *0x4001f7 = *0x4001f7 & 0x7f;\n            *0x40021f = *0x40021f & 0x7f;\n            uStack60 = uStack52;\n            uStack64 = 0x1000;\n            uStack72 = 0x43153d;\n            puStack56 = &stack0xffffffcc;\n            (*pcVar4)();\n            do {\n            } while (&stack0xffffffe0 != &stack0xffffff60);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        piStack36 = piStack36 + 0x4338d0;\n        piVar12 = piVar15[1] + 0x401000;\n        piVar17 = piVar15 + 2;\n        puStack40 = 0x4314e0;\n        uVar6 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)();\n        while( true ) {\n            cVar3 = *piVar17;\n            piVar15 = piVar17 + 1;\n            if (cVar3 == '\\0') break;\n            if (cVar3 < '\\0') {\n                piVar17 = piVar17 + 3;\n                piStack36 = *piVar15;\n            }\n            else {\n                piVar8 = piVar15;\n                piVar16 = piVar15;\n                do {\n                    piVar17 = piVar16;\n                    piStack36 = piVar15;\n                    if (piVar8 == NULL) break;\n                    piVar8 = piVar8 + -1;\n                    piVar17 = piVar16 + 1;\n                    cVar1 = *piVar16;\n                    piVar16 = piVar17;\n                } while (cVar3 + -1 != cVar1);\n            }\n            uStack44 = 0x4314fe;\n            puStack40 = uVar6;\n            iVar7 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n            if (iVar7 == 0) {\n                piStack36 = 0x43150f;\n                piStack36 = (*_sym.imp.KERNEL32.DLL_ExitProcess)();\n                goto code_r0x0043150f;\n            }\n            *piVar12 = iVar7;\n            piVar12 = piVar12 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 2483
    },
    "0042d004": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0042d024) overlaps instruction at (ram,0x0042d021)\n// \n\nvoid __cdecl fcn.0042d004(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    float10 in_ST0;\n    uint var_5ch;\n    \n    if (arg_ch == 0xf) {\n        *(&stack0x358b56f3 + unaff_EDI * 2) = in_ST0;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (in_EAX == -0x14458b46) {\n        *0x18 = *0x18 | 0x10;\n    }\n    else {\n        pcVar1 = in_ECX + -0xaffbb8;\n        *pcVar1 = *pcVar1 + in_ECX;\n        if (*pcVar1 != '\\0') {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    (*_fcn.00407248)();\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 306
    }
}