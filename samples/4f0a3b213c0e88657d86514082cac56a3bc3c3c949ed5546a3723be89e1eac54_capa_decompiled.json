{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x5d2658 != NULL) {\n                        *(*0x20 + -0x38) = *0x5d2658;\n                        iVar6 = 0;\n                        puVar5 = *0x5d2658;\n                        puVar4 = *0x5d2650;\n                        while( true ) {\n                            uVar1 = *puVar4;\n                            if (*(puVar4 + 3) != '\\0') {\n                                if ((*(puVar4 + 0x19) == '\\0') || (*puVar4[2] != '\\0')) {\n                                    *puVar4[2] = *(puVar4 + 0x19);\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = puVar4[1];\n                                    *(*0x20 + -0x10) = uVar1;\n                                    *(*0x20 + -0x48) = iVar6;\n                                    *(*0x20 + -0x18) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4013bb;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x90) = 0x4013cc;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x90) = 0x4013db;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x90) = 0x4013ec;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x90) = 0x4013f1;\n                                    fcn.00435500();\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar4 = *(*0x20 + -0x18);\n                                    iVar6 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar6 = iVar6 + 1;\n                            if (puVar5 <= iVar6) break;\n                            puVar4 = puVar4 + 4;\n                        }\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040112d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401610;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401605;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401308;\n                fcn.00435480();\n                *(*0x20 + -0x90) = 0x401319;\n                fcn.00435d80();\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.00435d80();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.00435d80();\n                *(*0x20 + -0x90) = 0x40133e;\n                fcn.00435500();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040128c:\n                                *(*0x20 + -0x90) = 0x401291;\n                                fcn.00435480();\n                                *(*0x20 + -0x90) = 0x4012a5;\n                                fcn.00435d80();\n                                *(*0x20 + -0x90) = 0x4012b4;\n                                fcn.00435d80();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.00435d80();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.00435d80();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.00435d80();\n                                *(*0x20 + -0x90) = 0x4012ea;\n                                fcn.00435500();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040128c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x5d2658;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x5d2658;\n                                if (*0x5d2658 <= puVar3) {\ncode_r0x004015d7:\n                                    *(*0x20 + -0x90) = 0x4015dc;\n                                    fcn.0045eee0(puVar7);\n                                    goto code_r0x004015dc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x5d2650 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x5d2650;\n                                if (*0x5d2658 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015d7;\n                                    puVar7 = *0x5d2658;\n                                    fcn.0045eee0(*0x5d2658);\n                                    goto code_r0x004015d7;\n                                }\ncode_r0x0040158a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x5d2658;\n                            puVar4 = NULL;\n                            arg2 = *0x5d2658;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x5d2658;\n                                puVar10 = *0x5d2650;\n                                if (*0x5d2658 <= puVar4) {\ncode_r0x00401585:\n                                    *(*0x20 + -0x90) = 0x40158a;\n                                    iVar6 = fcn.0045eee0(puVar7);\n                                    goto code_r0x0040158a;\n                                }\n                                puVar7 = (*0x5d2650)[puVar4 * 4 + 1];\n                                puVar10 = (*0x5d2650)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014b0;\n                                    cVar2 = fcn.00402620(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x5d2658;\n                                        in_RAX = *0x5d2650;\n                                        if (puVar3 < *0x5d2658) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x5d2650 + 3 + puVar10) = 1;\n                                            in_RAX = *0x5d2650;\n                                            if (puVar3 < *0x5d2658) {\n                                                *(*0x5d2650 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401116;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40157f;\n                                            puVar7 = *0x5d2658;\n                                            fcn.0045eee0(*0x5d2658);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401585;\n                                        fcn.0045eee0(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401585;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401535;\n                            fcn.00435480();\n                            *(*0x20 + -0x90) = 0x401546;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x40156b;\n                            fcn.00435500();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401116;\n                    }\ncode_r0x004015dc:\n                    *(*0x20 + -0x90) = 0x4015e5;\n                    fcn.0045efa0(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x4015f2;\n                arg2 = puVar7;\n                fcn.0045efa0(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401605;\n            fcn.0045ef20(arg2, puVar7);\ncode_r0x00401605:\n            *(*0x20 + -0x90) = 0x401610;\n            puVar7 = unaff_RBX;\n            fcn.0045efa0(unaff_RBX);\ncode_r0x00401610:\n            *(*0x20 + -0x90) = 0x401618;\n            in_RAX = fcn.0045ef20(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401628;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3439
    },
    "00402960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402960(uint64_t arg1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [32];\n    uint64_t uVar5;\n    uchar auVar6 [32];\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uchar (*pauStackX24) [32];\n    uint64_t uStackX32;\n    uint8_t uVar10;\n    \n    if (uStackX16 < uStackX32) {\n        return;\n    }\n    if ((0xf < uStackX16) && (*0x626d6f == '\\x01')) {\n        if (0xb < uStackX32) goto code_r0x00402777;\n        if ((*pauStackX24 + 0x10 & 0xff0) != 0) {\n            pauVar4 = pauStackX8[-1];\n            uVar5 = 0x10 - uStackX32;\n            do {\n                uVar3 = pcmpestri(**pauStackX24, **pauStackX8, 0xc);\n                if ((arg1 & 0xffffffff00000000 | uVar3) < uVar5 || (arg1 & 0xffffffff00000000 | uVar3) == uVar5) {\n                    return;\n                }\n                pauStackX8 = pauStackX8 + uVar5;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n            uVar3 = pcmpestri(**pauStackX24, *((*pauVar4 + uStackX16 + 0x11)[-1] + 0x1f), 0xc);\n            if (uVar5 <= (arg1 & 0xffffffff00000000 | uVar3) && (arg1 & 0xffffffff00000000 | uVar3) != uVar5) {\n                return;\n            }\n            return;\n        }\n    }\n    if (uStackX32 < 3) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1f);\n        return;\n    }\n    if (uStackX32 < 4) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (*pauVar4 + uStackX16 + 0x1e <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(*pauStackX8 + 1) == *(*pauStackX24 + 1)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1e);\n        return;\n    }\n    if (uStackX32 < 5) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1d);\n        return;\n    }\n    if (uStackX32 < 8) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(pauStackX8[-1] + uStackX32 + 0x1c) == *(pauStackX24[-1] + uStackX32 + 0x1c)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n        return;\n    }\n    if (uStackX32 < 9) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x19);\n        return;\n    }\ncode_r0x00402777:\n    if (uStackX32 < 0x10) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 == **pauStackX24) {\n                if (*(pauStackX8[-1] + uStackX32 + 0x18) == *(pauStackX24[-1] + uStackX32 + 0x18)) {\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else if (uStackX32 < 0x11) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]);\n            auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                 CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                           CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc]), \n                                                                     CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                (*pauStackX24)[0xb]), \n                                                                               CONCAT110(-((*pauStackX8)[10] ==\n                                                                                          (*pauStackX24)[10]), \n                                                                                         CONCAT19(-((*pauStackX8)[9] ==\n                                                                                                   (*pauStackX24)[9]), \n                                                                                                  CONCAT18(-((*\n                                                            pauStackX8)[8] == (*pauStackX24)[8]), \n                                                            CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                     CONCAT16(-((*pauStackX8)[6] == (*pauStackX24)[6]), \n                                                                              CONCAT15(-((*pauStackX8)[5] ==\n                                                                                        (*pauStackX24)[5]), \n                                                                                       CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                 (*pauStackX24)[4]), \n                                                                                                CONCAT13(-((*pauStackX8)\n                                                                                                           [3] == (*\n                                                            pauStackX24)[3]), \n                                                            CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                     CONCAT11(-((*pauStackX8)[1] == (*pauStackX24)[1]), \n                                                                              -((*pauStackX8)[0] == (*pauStackX24)[0])))\n                                                            )))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf)\n                == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n    }\n    else if (uStackX32 < 0x20) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        pcVar1 = pauStackX24[-1] + uStackX32 + 0x10;\n        do {\n            while (uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]), \n                  auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                       CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                                 CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc])\n                                                                           , CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                        (*pauStackX24)[0xb]), \n                                                                                       CONCAT110(-((*pauStackX8)[10] ==\n                                                                                                  (*pauStackX24)[10]), \n                                                                                                 CONCAT19(-((*pauStackX8\n                                                                                                            )[9] == (*\n                                                            pauStackX24)[9]), \n                                                            CONCAT18(-((*pauStackX8)[8] == (*pauStackX24)[8]), \n                                                                     CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                              CONCAT16(-((*pauStackX8)[6] ==\n                                                                                        (*pauStackX24)[6]), \n                                                                                       CONCAT15(-((*pauStackX8)[5] ==\n                                                                                                 (*pauStackX24)[5]), \n                                                                                                CONCAT14(-((*pauStackX8)\n                                                                                                           [4] == (*\n                                                            pauStackX24)[4]), \n                                                            CONCAT13(-((*pauStackX8)[3] == (*pauStackX24)[3]), \n                                                                     CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                              CONCAT11(-((*pauStackX8)[1] ==\n                                                                                        (*pauStackX24)[1]), \n                                                                                       -((*pauStackX8)[0] ==\n                                                                                        (*pauStackX24)[0])))))))))))))))\n                                    ), \n                  (SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf) != 0xffff) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pcVar2 = pauStackX8[-1] + uStackX32 + 0x10;\n            auVar7 = CONCAT115(-(pcVar2[0xf] == pcVar1[0xf]), \n                               CONCAT114(-(pcVar2[0xe] == pcVar1[0xe]), \n                                         CONCAT113(-(pcVar2[0xd] == pcVar1[0xd]), \n                                                   CONCAT112(-(pcVar2[0xc] == pcVar1[0xc]), \n                                                             CONCAT111(-(pcVar2[0xb] == pcVar1[0xb]), \n                                                                       CONCAT110(-(pcVar2[10] == pcVar1[10]), \n                                                                                 CONCAT19(-(pcVar2[9] == pcVar1[9]), \n                                                                                          CONCAT18(-(pcVar2[8] ==\n                                                                                                    pcVar1[8]), \n                                                                                                   CONCAT17(-(pcVar2[7]\n                                                                                                             == pcVar1[7\n                                                            ]), CONCAT16(-(pcVar2[6] == pcVar1[6]), \n                                                                         CONCAT15(-(pcVar2[5] == pcVar1[5]), \n                                                                                  CONCAT14(-(pcVar2[4] == pcVar1[4]), \n                                                                                           CONCAT13(-(pcVar2[3] ==\n                                                                                                     pcVar1[3]), \n                                                                                                    CONCAT12(-(pcVar2[2]\n                                                                                                              == pcVar1[\n                                                            2]), CONCAT11(-(pcVar2[1] == pcVar1[1]), \n                                                                          -(*pcVar2 == *pcVar1))))))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe |\n                (-(pcVar2[0xf] == pcVar1[0xf]) >> 7) << 0xf) == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else {\n        if (uStackX32 < 0x21) {\n            auVar6 = vmovdqu_avx(*pauStackX24);\n            pauVar4 = pauStackX8[-1];\n            do {\n                auVar8 = vmovdqu_avx(*pauStackX8);\n                auVar8 = vpcmpeqb_avx2(auVar8, auVar6);\n                if ((SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0xffffffff) {\ncode_r0x004028e8:\n                    vzeroupper_avx();\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 1);\n        }\n        else {\n            pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n            auVar6 = vmovdqu_avx(*(pauStackX24[-1] + uStackX32));\n            auVar8 = vmovdqu_avx(*pauStackX24);\n            do {\n                while( true ) {\n                    auVar9 = vmovdqu_avx(*pauStackX8);\n                    auVar9 = vpcmpeqb_avx2(auVar9, auVar8);\n                    if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                    break;\n                    pauStackX8 = *pauStackX8 + 1;\n                    if (pauVar4 <= pauStackX8) goto code_r0x004028dd;\n                }\n                auVar9 = vmovdqu_avx(*(pauStackX8[-1] + uStackX32));\n                auVar9 = vpcmpeqb_avx2(auVar9, auVar6);\n                if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                goto code_r0x004028e8;\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < pauVar4);\n        }\ncode_r0x004028dd:\n        vzeroupper_avx();\n    }\n    return;\n}\n",
        "token_count": 6756
    },
    "004045c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004045c0(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404960(arg1);\n        return;\n    }\n    if (*0x5d1d18 == NULL) {\n        iVar8 = 0;\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = **0x5d1d18;\n        iVar8 = (*0x5d1d18)[1];\n    }\n    for (iVar12 = 0; iVar12 < iVar8; iVar12 = iVar12 + 1) {\n        iVar2 = *(iVar10 + iVar12 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404960(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404960(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x5f8a70) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.0045c6c0();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar11 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x5f8a70) + (uVar11 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar11 = 0;\n                uVar13 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar10;\n                uVar13 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar10 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar7 = unaff_RBX;\n            do {\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar13 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar7;\n                    cVar4 = fcn.004041c0(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.00433ce0();\n                        break;\n                    }\n                    uVar11 = uVar11 & 0xffffffff;\n                    uVar7 = unaff_RBX;\n                }\n                if (uVar13 < 3) {\n                    uVar13 = uVar13 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar11 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar9 = fcn.00412360(uVar11 & 0xffffffff);\n                    uVar11 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar13 = 0;\n                }\n                uVar5 = uVar5 + 8;\n            } while( true );\n        }\n        fcn.0045ef00(0x40);\n    }\n    fcn.0045ef00(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1187
    },
    "00408820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408820(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00457000();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.00435480();\n                    fcn.00435d80();\n                    fcn.00435d80();\n                    fcn.00435a80();\n                    fcn.00435d80();\n                    fcn.00435500();\n                    return;\n                }\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435a80();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435b80();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435b80();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435720();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.00435480();\n                    fcn.00435d80();\n                    fcn.00435d80();\n                    fcn.00435a80();\n                    fcn.00435d80();\n                    fcn.00435500();\n                    return;\n                }\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435a80();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435a80();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435d80();\n                fcn.00435780(noname_0, param_2);\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435780(noname_0, param_2);\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.004359e0(fVar1, fVar2);\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.004359e0(uVar3, uVar4);\n            fcn.00435500();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435500();\n            return;\n        }\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435d00();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 1441
    },
    "0040dbe0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040dbe0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40dcd9;\n                    (*pcVar1)();\n                }\n                return 0x6276a0;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40dc4b;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x6276a0;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40dd70;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x6276a0;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40dde5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40ddfa;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1325
    },
    "0040de20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040de20(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0;\n    }\n    uVar3 = (***(in_RAX + 0x48))();\n    uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n    iVar1 = unaff_RBX[3];\n    iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n    if (iVar1 != 0) {\n        if ((*(unaff_RBX + 1) & 8) == 0) {\n            uVar7 = uVar7 >> 1;\n        }\n        iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n        if (2 < *(iVar1 + iVar8) - 2U) {\n            iVar5 = iVar1 + iVar8;\n        }\n    }\n    uVar4 = uVar3 >> 0x38;\n    uVar7 = uVar4;\n    if (uVar3 >> 0x38 < 5) {\n        uVar4 = (uVar3 >> 0x38) + 5;\n        uVar7 = uVar4;\n    }\n    do {\n        if (iVar5 == 0) {\n            return 0;\n        }\n        for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n            if (uVar4 == *(uVar3 + iVar5)) {\n                piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                if ((*(in_RAX + 0x54) & 1) != 0) {\n                    piVar6 = *piVar6;\n                }\n                cVar2 = (***(*(in_RAX + 0x30) + 0x18))();\n                if (cVar2 != '\\0') {\n                    return piVar6;\n                }\n                uVar4 = uVar7 & 0xff;\n            }\n            else if (*(uVar3 + iVar5) == '\\0') {\n                return 0;\n            }\n        }\n        iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0040e540": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e540(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    int64_t *arg2_00;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626890 == 0) {\n        *(arg1 + 0x10) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045ea40(arg1, arg2, arg3, arg4);\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if (*0x626890 == 0) {\n            *(arg1 + 0x18) = unaff_RBX;\n        }\n        else {\n            in_RAX = fcn.0045eb80(arg1, arg2, arg3, arg4);\n        }\n        *(arg1 + 0x4a) = *(unaff_RBX + 9);\n        if (*0x626890 == 0) {\n            *(arg1 + 0x20) = unaff_RBX[2];\n        }\n        else {\n            in_RAX = fcn.0045eb60(arg1, unaff_RBX[2], arg3, arg4);\n        }\n        piVar5 = unaff_RBX;\n        if (*(*(in_RAX + 0x40) + 8) == 0) {\n            if (unaff_RBX[5] == 0) {\n                arg1_00 = arg1;\n                iVar3 = fcn.0040cc20();\n                if (*0x626890 == 0) {\n                    unaff_RBX[5] = iVar3;\n                }\n                else {\n                    fcn.0045ea40(arg1_00, unaff_RBX, arg3, arg4);\n                }\n            }\n            arg2_00 = piVar5[5];\n            if (*arg2_00 == 0) {\n                uVar4 = fcn.0040cc20();\n                if (*0x626890 == 0) {\n                    *unaff_RBX[5] = uVar4;\n                    piVar5 = unaff_RBX;\n                }\n                else {\n                    fcn.0045ea40(unaff_RBX, arg2_00, arg3, arg4);\n                    piVar5 = unaff_RBX;\n                }\n            }\n            if (*0x626890 == 0) {\n                *(arg1 + 0x30) = *piVar5[5];\n            }\n            else {\n                fcn.0045eb60(arg1, *piVar5[5], arg3, arg4);\n            }\n            if (*0x626890 == 0) {\n                *(arg1 + 0x38) = *(piVar5[5] + 8);\n            }\n            else {\n                fcn.0045eb60(arg1, *(piVar5[5] + 8), arg3, arg4);\n            }\n        }\n        uVar6 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar6) * ZEXT816(uVar6 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar6;\n        uVar6 = SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0);\n        if (0x1c < *(piVar5 + 9)) {\n            uVar1 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n            auVar2 = ZEXT816(uVar1) * ZEXT816(uVar1 ^ 0xe7037ed1a0b428db);\n            *(*(unaff_R14 + 0x30) + 0xf0) = uVar1;\n            uVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * 0x80000000 + uVar6;\n        }\n        *(arg1 + 0x40) = (1 << (*(piVar5 + 9) & 0x3f)) - 1U & uVar6;\n        *(arg1 + 0x48) = uVar6 >> (*(piVar5 + 9) & 0x3f) & -(*(piVar5 + 9) < 0x40) & 7;\n        *(arg1 + 0x50) = *(arg1 + 0x40);\n        if ((*(piVar5 + 1) & 3) != 3) {\n            LOCK();\n            *(piVar5 + 1) = *(piVar5 + 1) | 3;\n        }\n        fcn.0040e7c0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1220
    },
    "0040e7c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e7c0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar (*in_RAX) [16];\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    code **ppcVar7;\n    ulong arg1;\n    code **arg2;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    code **arg1_00;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t iVar15;\n    int64_t **ppiVar16;\n    int64_t *piVar17;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = *(in_RAX[1] + 8);\n            if ((*(iVar8 + 8) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = iVar8;\n                iVar10 = *in_RAX[1];\n                *(*0x20 + -0x28) = iVar10;\n                arg1_00 = *in_RAX[5];\n                iVar5 = *(in_RAX[2] + 8);\n                uVar14 = in_RAX[4][0xb];\n                ppcVar7 = *(in_RAX[5] + 8);\n                do {\n                    if (iVar5 == 0) {\n                        if ((*in_RAX[4] == arg1_00) && (in_RAX[4][9] != '\\0')) {\n                            if (*0x626890 == 0) {\n                                *in_RAX = in_XMM15;\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40e929;\n                                fcn.0045eb40(0);\n                                *(*0x20 + -0x70) = 0x40e932;\n                                fcn.0045eb40();\n                            }\n                            return;\n                        }\n                        iVar1 = *(iVar8 + 0x18);\n                        if ((iVar1 == 0) || (*(iVar8 + 9) != in_RAX[4][10])) {\n                            iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                            ppcVar7 = 0xffffffffffffffff;\n                        }\n                        else {\n                            uVar13 = *(*(in_RAX[1] + 8) + 9);\n                            if ((*(*(in_RAX[1] + 8) + 8) & 8) == 0) {\n                                uVar13 = uVar13 - 1;\n                            }\n                            iVar15 = ((1 << (uVar13 & 0x3f)) - 1U & arg1_00) * *(iVar10 + 0x52);\n                            iVar5 = iVar1 + iVar15;\n                            ppcVar7 = arg1_00;\n                            if (*(iVar15 + iVar1) - 2U < 3) {\n                                iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                                ppcVar7 = 0xffffffffffffffff;\n                            }\n                        }\n                        arg1_00 = arg1_00 + 1;\n                        if (1 << (in_RAX[4][10] & 0x3f) == arg1_00) {\n                            in_RAX[4][9] = 1;\n                            arg1_00 = NULL;\n                        }\n                        uVar14 = 0;\n                    }\n                    *(*0x20 + -0x40) = arg1_00;\n                    *(*0x20 + -0x48) = ppcVar7;\n                    *(*0x20 + -0x10) = iVar5;\n                    for (; uVar13 = uVar14,  uVar13 < 8; uVar14 = uVar14 + 1) {\n                        uVar12 = in_RAX[4][8] + uVar14;\n                        uVar4 = uVar12 & 7;\n                        if ((*(iVar5 + uVar4) < 2) || (*(iVar5 + uVar4) == 4)) goto code_r0x0040e93c;\n                        uVar11 = uVar12 & 7;\n                        uVar6 = *(iVar10 + 0x50);\n                        piVar17 = uVar11 * uVar6 + iVar5 + 8;\n                        uVar12 = *(iVar10 + 0x54);\n                        if ((uVar12 & 1) != 0) {\n                            piVar17 = *piVar17;\n                        }\n                        *(*0x20 + -0x49) = uVar13;\n                        *(*0x20 + -0x20) = piVar17;\n                        ppiVar16 = *(iVar10 + 0x51) * uVar11 + uVar6 * 8 + iVar5 + 8;\n                        *(*0x20 + -0x30) = ppiVar16;\n                        arg2 = ppcVar7;\n                        if ((ppcVar7 == 0xffffffffffffffff) || ((*(iVar8 + 8) & 8) != 0)) {\ncode_r0x0040eb04:\n                            uVar6 = *(iVar5 + uVar4);\n                            uVar11 = uVar6;\n                            if ((uVar6 == 2) || (uVar6 == 3)) {\n                                uVar11 = *(iVar10 + 0x54);\n                                if ((*(iVar10 + 0x54) >> 2 & 1) == 0) {\n                                    arg2 = *(*(iVar10 + 0x30) + 0x18);\n                                    pcVar2 = *arg2;\n                                    *(*0x20 + -0x70) = 0x40eb44;\n                                    uVar6 = (*pcVar2)();\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    ppcVar7 = *(*0x20 + -0x48);\n                                    in_RAX = *(*0x20 + 8);\n                                }\n                                else {\n                                    uVar6 = 1;\n                                }\n                                uVar6 = uVar6 ^ 1;\n                            }\n                            else {\n                                uVar6 = 1;\n                            }\n                            if (uVar6 != 0) {\n                                if (*0x626890 == 0) {\n                                    **in_RAX = *(*0x20 + -0x20);\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40ec25;\n                                    in_RAX = fcn.0045eb60(arg1_00, *(*0x20 + -0x20), uVar11, uVar4);\n                                }\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    ppiVar16 = *ppiVar16;\n                                }\n                                if (*0x626890 == 0) {\n                                    *(*in_RAX + 8) = ppiVar16;\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40ec55;\n                                    in_RAX = fcn.0045eb80(*in_RAX + 8, arg1_00, uVar11, uVar4);\n                                }\ncode_r0x0040ec58:\n                                *in_RAX[5] = arg1_00;\n                                if (*(in_RAX[2] + 8) != iVar5) {\n                                    if (*0x626890 == 0) {\n                                        *(in_RAX[2] + 8) = iVar5;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x70) = 0x40ec85;\n                                        in_RAX = fcn.0045eb40();\n                                    }\n                                }\n                                in_RAX[4][0xb] = uVar13 + 1;\n                                *(in_RAX[5] + 8) = ppcVar7;\n                                return;\n                            }\n                            arg1 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x40eb87;\n                            iVar5 = fcn.0040de20(arg1);\n                            if (iVar5 != 0) {\n                                if (*0x626890 == 0) {\n                                    in_RAX = *(*0x20 + 8);\n                                    **in_RAX = iVar5;\n                                    *(*in_RAX + 8) = iVar8;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(*0x20 + -0x70) = 0x40ebd6;\n                                    fcn.0045ea40(arg1, arg2, uVar11, uVar4);\n                                    *(*0x20 + -0x70) = 0x40ebe5;\n                                    fcn.0045eb80(in_RAX, arg2, uVar11, uVar4);\n                                }\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar13 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                goto code_r0x0040ec58;\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            ppcVar7 = *(*0x20 + -0x48);\n                            iVar8 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x28);\n                            arg1_00 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x49);\n                            iVar5 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = uVar4;\n                            if ((uVar12 >> 2 & 1) == 0) {\n                                pcVar2 = **(*(iVar10 + 0x30) + 0x18);\n                                *(*0x20 + -0x70) = 0x40ea02;\n                                cVar3 = (*pcVar2)();\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar4 = *(*0x20 + -0x38);\n                                uVar14 = *(*0x20 + -0x49);\n                                ppiVar16 = *(*0x20 + -0x30);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            else {\n                                cVar3 = '\\x01';\n                            }\n                            uVar13 = uVar14;\n                            if (cVar3 == '\\0') {\n                                uVar6 = in_RAX[4][10] - 1;\n                                arg2 = ppcVar7 >> (uVar6 & 0x3f) & -(uVar6 < 0x40);\n                                if ((*(iVar5 + uVar4) & 1) == arg2) goto code_r0x0040eb04;\n                            }\n                            else {\n                                arg2 = *(iVar10 + 0x48);\n                                pcVar2 = *arg2;\n                                *(*0x20 + -0x70) = 0x40ea8b;\n                                uVar4 = (*pcVar2)();\n                                in_RAX = *(*0x20 + 8);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                if (ppcVar7 == (uVar4 & (1 << (in_RAX[4][10] & 0x3f)) - 1U)) {\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar4 = *(*0x20 + -0x38);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    goto code_r0x0040eb04;\n                                }\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar14 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                            }\n                        }\ncode_r0x0040e93c:\n                    }\n                    iVar5 = *(iVar5 + *(iVar10 + 0x52) + -8);\n                    uVar14 = 0;\n                } while( true );\n            }\n            *(*0x20 + -0x70) = 0x40ecab;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x40ecb6;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3143
    },
    "0040ef60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ef60(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f4ca:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40f4de;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40f1bd;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40f202;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40f2e5;\n                                iVar8 = fcn.0040d460(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40f3c5;\n                                fcn.00411b00(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x626890 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40f3a5;\n                                    in_RAX = fcn.0045eba0(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40f44f;\n                                fcn.00411b00(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x626890 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40f430;\n                                    in_RAX = fcn.0045eba0(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040f133;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40f4b8;\n                        fcn.0045eee0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40f4c9;\n                    in_RAX = fcn.00433ce0();\n                    goto code_r0x0040f4ca;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040f133:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40f114;\n            fcn.00411e00(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40f099;\n        fcn.0040f500(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3275
    },
    "0040f500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f500(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045eb40(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x626890 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045eb40();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0040f600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f600(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x6276a0;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f676;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x6276a0;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f769;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40f77d;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 953
    },
    "0040f7a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f7a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x6276a0;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f816;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x6276a0;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f916;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40f92a;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 955
    },
    "0040fce0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fce0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0041006b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41007f;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40ff02;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40ff85;\n                                iVar8 = fcn.0040d460(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40fff6;\n                            fcn.00411b00(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040fe89;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x410059;\n                        fcn.0045eee0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x41006a;\n                    in_RAX = fcn.00433ce0();\n                    goto code_r0x0041006b;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040fe89:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40fe6a;\n            fcn.00411e00(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40fdf9;\n        fcn.0040f500(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2244
    },
    "004100a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004100a0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x6276a0;\n            }\n            arg1 = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    piVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x410116;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    piVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            piVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (piVar4 == NULL) {\n                        return 0x6276a0;\n                    }\n                    piVar5 = piVar4;\n                    for (uVar6 = 0; piVar5 = piVar5 + 1,  uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + piVar4))) {\n                            return piVar4 + *(in_RAX + 0x51) * uVar6 + 0x48;\n                        }\n                    }\n                    piVar4 = *(piVar4 + (*(in_RAX + 0x52) - 8));\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x410216;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x41022b;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 948
    },
    "00410600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410600(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004109fb:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x410a0f;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *puVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x48;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x48;\n        }\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = iVar7;\n        for (; arg1 = uVar4,  puVar6 != NULL; puVar6 = *(puVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = puVar6;\n            arg1_00 = puVar6 + 9;\n            puVar9 = puVar6;\n            for (iVar8 = 0; puVar9 = puVar9 + 1,  iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = *(puVar6 + iVar8);\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x410822;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0x68);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(puVar6 + iVar8) = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x4108a6;\n                                iVar8 = fcn.0040d460(uVar3);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x48;\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x68);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x78);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            if ((*(*(in_RAX + 0x30) + 8) == 0) || (*0x626890 == '\\0')) {\n                                **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            }\n                            else {\n                                puVar6 = *(*0x20 + iVar7 + -0x38);\n                                uVar3 = *puVar9;\n                                if (*0x626890 == 0) {\n                                    *puVar6 = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = 0x41095c;\n                                    fcn.0045ebc0(arg1, arg2, uVar3, puVar6);\n                                }\n                            }\n                            *(*0x20 + -0xa8) = 0x410985;\n                            fcn.00411b00(arg1_00);\n                            iVar7 = *(*0x20 + -0x78);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 8;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x68);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x70);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x004107a8;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x4109e9;\n                        fcn.0045eee0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x4109fa;\n                    in_RAX = fcn.00433ce0();\n                    goto code_r0x004109fb;\n                }\n                *(puVar6 + iVar8) = '\\x04';\ncode_r0x004107a8:\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x410789;\n            fcn.00411e00(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x70);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x410719;\n        fcn.0040f500(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2466
    },
    "00410a40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410a40(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x6276a0;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x410de5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x410dff;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x00410ac7:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x410ae2;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x6276a0;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410c05:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x410bd7;\n                    cVar5 = fcn.00402620(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x00410c05;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x38);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar4 + -4) == *(unaff_RDI + piVar3 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x00410ac7;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x410cd8;\n            cVar5 = fcn.00402620(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x6276a0;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x6276a0;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410da3:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x410d7a;\n            cVar5 = fcn.00402620(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x30);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x00410da3;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x30);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x6276a0;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2188
    },
    "00410e20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410e20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x6276a0;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x4111f4;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x41120e;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x00410ea9:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x410ec2;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x6276a0;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410fee:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x410fbd;\n                    cVar5 = fcn.00402620(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x00410fee;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x38);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar4 + -4) == *(unaff_RDI + piVar3 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x00410ea9;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x4110d8;\n            cVar5 = fcn.00402620(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x6276a0;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x6276a0;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x004111ae:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x411185;\n            cVar5 = fcn.00402620(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x30);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x004111ae;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x30);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x6276a0;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2185
    },
    "004116e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004116e0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00411abb:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x411acf;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x411902;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x411986;\n                                iVar8 = fcn.0040d460(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x626890 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x411a2d;\n                                fcn.0045ebc0(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x411a45;\n                            fcn.00411b00(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00411893;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x411aa9;\n                        fcn.0045eee0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x411aba;\n                    in_RAX = fcn.00433ce0();\n                    goto code_r0x00411abb;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x00411893:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x411874;\n            fcn.00411e00(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x4117ff;\n        fcn.0040f500(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2393
    },
    "00412580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412580(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x626894 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x5f8a70);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x5d1d18 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x5d1d18;\n                iVar15 = (*0x5d1d18)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x5d1d18 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x5d1d18;\n                        iVar15 = (*0x5d1d18)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00412c00(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00412c00(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x5f8a70) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar13 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar13 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar10 = 0; uVar10 < arg1; uVar10 = uVar10 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        *puVar4 = *(uVar10 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            fcn.0042cfe0();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00412360(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            else {\n                uVar10 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            unaff_RBX = uVar10;\n                            fcn.0042cfe0();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar10 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar10;\n                        puVar14 = fcn.00412360(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                        uVar10 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045ef00(0x40);\n    }\n    fcn.00433ce0();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1724
    },
    "00412a00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412a00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x626894 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x5f8a70) + (uVar9 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                uVar11 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar10 + (in_RAX >> 5 & 0x1ffff);\n                uVar11 = in_RAX >> 3 & 3;\n                puVar8 = iVar10 + 0x1ffff;\n            }\n            uVar7 = unaff_RBX;\n            for (uVar5 = 0; uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar11 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar10 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar10;\n                    if (*(iVar1 + 0x1268) == iVar10) {\n                        unaff_RBX = uVar7;\n                        fcn.0042cfe0();\n                        uVar9 = uVar9 & 0xffffffff;\n                        uVar7 = unaff_RBX;\n                    }\n                }\n                if (uVar11 < 3) {\n                    uVar11 = uVar11 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar9 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar12 = fcn.00412360(uVar9 & 0xffffffff);\n                    uVar9 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar11 = 0;\n                }\n            }\n            return;\n        }\n        fcn.0045ef00(0x40);\n    }\n    fcn.00433ce0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 784
    },
    "00413140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413648)\n\nvoid fcn.00413140(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int8_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar7 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                uVar25 = puVar22 & 0xfffff;\n                iVar20 = *(*(uVar7 * 8 + 0x5f8a70) + uVar25 * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar5 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar5 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar13 = uVar5;\n                if (unaff_RBX == 0x10) {\n                    iVar6 = uVar5;\n                    if (*unaff_RDI != 8) {\n                        *puVar3 = -(uVar13 < 0x20) &\n                                  (*puVar1 & 3 |\n                                  (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) <<\n                                  iVar6 | ~(0x33 << iVar6 & -(uVar13 < 0x20)) & *puVar3;\n                        return;\n                    }\n                    *puVar3 = *puVar3 | 0x33 << iVar6 & -(uVar13 < 0x20);\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar19 = uVar17;\n                    if (uVar13 < 2) {\n                        if (uVar13 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar19;\n                        if (uVar13 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x413477;\n                                puVar3 = fcn.00412360(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar13 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x4134d2;\n                                puVar3 = fcn.00412360(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x30) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar8 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar8) {\n                    puVar3 = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = uVar25;\n                *(*0x20 + -0x68) = uVar8;\n                *(*0x20 + -0x70) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar7 = *unaff_RDI;\n                    if (arg1 <= uVar7) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x0041380a;\n                    }\n                    *(*0x20 + -0x80) = uVar7;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar19 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar8 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar19 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar7 = uVar7 >> 3;\n                        if (uVar7 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar25 = uVar7; uVar25 < 0x41; uVar25 = uVar25 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar25 & 0x3f) & -(uVar25 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar7 == '\\0') {\n                                *(*0x20 + -0x138) = 0x413d99;\n                                fcn.00432260();\n                                goto code_r0x00413d99;\n                            }\n                            *(*0x20 + -0xea) = uVar7 & 0xff;\n                            uVar7 = (0x39 / *(*0x20 + -0xea)) * uVar7;\n                            uVar11 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar8 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar7;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar7 = (uVar7 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar7 = unaff_RDI[1];\n                uVar25 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x4133b0;\n                fcn.00413de0(puVar10 & 0xffffffff, uVar7, uVar25, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x004135a1;\n            }\ncode_r0x00413d99:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x413da6;\n            in_RAX = fcn.0045ef00(0x40);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x413dc5;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00413c12:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar7;\n    puVar22 = *(*0x20 + -0x78);\n    uVar7 = *(*0x20 + -0x80);\ncode_r0x0041380a:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar7) {\n        uVar7 = unaff_RDI[1];\ncode_r0x0041388f:\n        uVar7 = uVar7 >> 3;\n        if (uVar7 != 0) {\n            if (uVar5 == 0) {\n                uVar19 = uVar25 & 0xf | 0xf0;\n                if (4 < uVar7) {\n                    *puVar3 = uVar19;\n                    iVar2 = 4;\n                    iVar20 = *(*0x20 + -0xd0) + -4;\n                    uVar5 = 4;\n                    goto code_r0x0041395a;\n                }\n                puVar22 = puVar3;\n                uVar25 = 4;\n                goto code_r0x00413b00;\n            }\n            if (uVar5 == 2) goto code_r0x004138ea;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x413baf;\n            fcn.00433ce0();\n        }\n        *(*0x20 + -0x138) = 0x413bb7;\n        uVar4 = fcn.00457000();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x413bcc;\n        fcn.00435480();\n        *(*0x20 + -0x138) = 0x413bdd;\n        fcn.00435d80();\n        *(*0x20 + -0x138) = 0x413bf2;\n        fcn.00435d80();\n        *(*0x20 + -0x138) = 0x413bf7;\n        fcn.004356e0();\n        *(*0x20 + -0x138) = 0x413bfc;\n        fcn.00435500();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x413c0d;\n        fcn.00433ce0();\n    }\n    else if (uVar7 != 0) {\n        uVar7 = uVar7 * (arg1 / uVar7 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar8;\n        goto code_r0x0041388f;\n    }\n    *(*0x20 + -0x138) = 0x413c12;\n    puVar3 = fcn.00432260();\n    puVar10 = puVar22;\n    goto code_r0x00413c12;\ncode_r0x004138ea:\n    uVar19 = (uVar25 & 3) << 2;\n    uVar18 = uVar19 | 0x40;\n    if (1 < uVar7) {\n        uVar18 = uVar19 | 0xc0;\n    }\n    *puVar3 = uVar18 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar7 < 3) {\n        uVar19 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar5 = 2;\ncode_r0x0041395a:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar5 + 4;\n            if (uVar7 <= uVar5 + 4) break;\n            *puVar22 = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar19 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar19 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar19 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar8 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar19 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar5 = uVar5 + 8;\n            if (uVar7 <= uVar5) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar5;\n                break;\n            }\n            puVar22[1] = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x00413b00:\n    if (uVar7 < uVar25) {\n        uVar7 = -((uVar25 - uVar7) + -4);\n        uVar18 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1;\n        uVar19 = uVar19 & (uVar18 * '\\x10' | uVar18);\n    }\n    uVar7 = unaff_RBX >> 3;\n    if (uVar25 <= uVar7) {\n        *puVar22 = uVar19;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar7 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar19 = 0;\n    }\n    if (uVar25 == uVar7 + 2) {\n        *puVar22 = uVar19 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar8;\n    }\n    else {\n        bVar26 = uVar23 == uVar8;\n    }\ncode_r0x004135a1:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x5f8a70) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar7 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar7 = *(*0x20 + -0x78);\n        }\n        uVar25 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            uVar13 = 3;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar25;\n                *(*0x20 + -0x138) = 0x413676;\n                puVar22 = fcn.00412360(uVar7);\n                uVar25 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar25 = uVar25 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while (*(*0x20 + -0x50) = puVar3,  3 < uVar25) {\n            *(*0x20 + -0x40) = puVar22;\n            *(*0x20 + -0xb8) = uVar25;\n            *(*0x20 + -0x138) = 0x4136db;\n            uVar4 = fcn.004124e0(uVar7);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar13;\n            *(*0x20 + -0xe8) = uVar7;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar25 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar25 >> 2;\n            *(*0x20 + -0x138) = 0x41371c;\n            fcn.0045f840(uVar25 >> 2);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar7 = *(*0x20 + -0xe8);\n            uVar25 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n        }\n        if (uVar25 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar13 < 3) {\n                uVar13 = uVar13 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x4137b0;\n                puVar22 = fcn.00412360(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            if ((2 < uVar13) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x4137df;\n                fcn.00412360(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x413805;\n        fcn.0045f580(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5840
    },
    "00418880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418d99)\n// WARNING: Removing unreachable block (ram,0x004188c5)\n// WARNING: Removing unreachable block (ram,0x004188ec)\n\nvoid fcn.00418880(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x62664c = 2;\n            *0x626894 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x626890 = *0x626890 & 0xffffff00 | 1;\n            *0x5d2d80 = *0x626f58;\n            *(*0x20 + -0x1b8) = 0x41890d;\n            fcn.004607e0();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar9 = **(in_GS_OFFSET + 0x28);\n            iVar8 = *(iVar9 + 0x30);\n            uVar5 = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x178) = uVar5;\n            piVar1 = iVar8 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar8 = *(iVar9 + 0x30);\n            *(*0x20 + -0x30) = iVar8;\n            *(iVar8 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar8 + 200;\n            if (*0x626890 == 0) {\n                *(iVar8 + 200) = 0x4c8b76;\n            }\n            else {\n                *(*0x20 + -0x1b8) = 0x418985;\n                fcn.0045eb60(uVar5, 0x4c8b76, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar9;\n            *(*(iVar9 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar9 + 0x30) + 0x90);\n            *(*0x20 + -0x1b8) = 0x4189ba;\n            fcn.00438040(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x419520;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x178);\n            *(*0x20 + -0x1b0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1b8) = 0x4189ff;\n            fcn.0045c6c0();\n            *(*0x20 + -0x1b0) = 0x4d2928;\n            *(*0x20 + -0x1b8) = 0x418a25;\n            fcn.0045c6c0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar9 + 0xf9) = 0;\n            *(*0x20 + -0x1b8) = 0x418a65;\n            fcn.00438040(2);\n            if (*0x5d8810 != '\\0') {\n                *(*0x20 + -0x1b8) = 0x418a87;\n                fcn.00451660(0);\n            }\n            iVar8 = *(*0x20 + -0x30);\n            *(iVar8 + 0xd0) = 0;\n            if (*0x626890 == 0) {\n                *(iVar8 + 200) = 0;\n            }\n            else {\n                iVar9 = 0;\n                *(*0x20 + -0x1b8) = 0x418abf;\n                fcn.0045eb60(iVar8, 0, param_4, param_5);\n            }\n            if (*0x62664c == 0) {\n                *0x6299c0 = *0x6282b8;\n                *(*0x20 + -0x1b8) = 0x418aef;\n                fcn.0041eea0(*(*0x20 + -0x100));\n                *(*0x20 + -0x1b8) = 0x418afb;\n                func_0x00423060();\n                *(*0x20 + -0x1b8) = 0x418b0e;\n                fcn.0041f340();\n                *(*0x20 + -0x1b8) = 0x418b14;\n                fcn.004607e0();\n                *(*0x20 + -0x180) = *(*0x20 + -0x1b0);\n                *(*0x20 + -0x1b8) = 0x418b36;\n                fcn.00460840(*(*0x20 + -0x1b0), iVar9);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar9 = *(*0x20 + -0x1b0);\n                iVar4 = *(*0x20 + -0x1a8);\n                iVar8 = *(*0x20 + -0x180);\n                *0x5d2d68 = *0x5d2d68 + (iVar8 - *0x5d2d70);\n                uVar11 = iVar8 - *0x5d2d70;\n                *0x5d2d60 = iVar8;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x62be38 = *0x62be38 + 1;\ncode_r0x00418c42:\n                    *0x628328 = iVar9 * 1000000000 + iVar4;\n                    *0x6299b8 = iVar8;\n                    *((*0x629338 & 0xff) * 8 + 0x628338) = *0x5d2d68;\n                    *((*0x629338 & 0xff) * 8 + 0x628b38) = iVar9 * 1000000000 + iVar4;\n                    *0x628330 = *0x628330 + *0x5d2d68;\n                    iVar9 = (*0x5d2d50 - *0x5d2d48) * *0x5d2d3c;\n                    *(*0x20 + -0x170) = iVar9;\n                    iVar12 = (*0x5d2d60 - *0x5d2d58) * *0x5d2d3c;\n                    *(*0x20 + -0x158) = iVar12;\n                    *0x5d2d00 = *0x626fb8 + *0x626fb0 + *0x626fc0 + iVar9 + iVar12 + *0x5d2d00;\n                    *0x629340 = *0x5d2d00 / ((iVar8 - *0x5d32a0) * *0x626650 + *0x5d32a8);\n                    *0x5d28d4 = 0;\n                    if (*0x5d2cf8 != '\\0') {\n                        *0x62933c = *0x62933c + 1;\n                    }\n                    *(*0x20 + -0x1b8) = 0x418d56;\n                    fcn.0040ab40();\n                    *0x629338 = *0x629338 + 1;\n                    *(*0x20 + -0x1b8) = 0x418d68;\n                    fcn.0043c1c0();\n                    *(*0x20 + -0x1b8) = 0x418d76;\n                    fcn.0040ad60();\n                    *(*0x20 + -0x1b8) = 0x418d7b;\n                    fcn.0042ad00();\n                    if ((*0x5d28dc & 0x80000000) == 0) {\n                        *0x5d28dc = *0x5d28dc + 1;\n                        LOCK();\n                        *(*0x20 + -0x184) = 0;\n                        *(*0x20 + -0x188) = *0x5f8a10;\n                        *(*0x20 + -0x1b0) = 0x4d2930;\n                        *(*0x20 + -0x1b8) = 0x418dd2;\n                        fcn.0045c6c0();\n                        *(*0x20 + -0x1b8) = 0x418deb;\n                        fcn.0042ad80();\n                        *(*0x20 + -0x1b8) = 0x418df0;\n                        fcn.00423c80();\n                        *(*0x20 + -0x1b0) = 0x4d28f8;\n                        *(*0x20 + -0x1b8) = 0x418e05;\n                        fcn.0045c6c0();\n                        *(*0x20 + -0x1b0) = 0x4d2940;\n                        *(*0x20 + -0x1b8) = 0x418e29;\n                        fcn.0045c6c0();\n                        uVar14 = 0;\n                        uVar15 = 0;\n                        uVar16 = 0;\n                        uVar17 = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        *(*0x20 + -0x1b8) = 0x418e56;\n                        fcn.00421740();\n                        if (*0x626abc < 1) {\ncode_r0x00418eb8:\n                            *(*0x20 + -0x1b8) = 0x418ec8;\n                            fcn.004459c0(0);\n                            *(*0x20 + -0x1b8) = 0x418ed9;\n                            fcn.004459c0(0);\n                            iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                            *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x100) = *0x4ee560 * *0x629340;\n                        *(*0x20 + -0xe8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x1b8) = 0x418e8f;\n                        fcn.00435480();\n                        uVar7 = (*0x5d2d48 - *0x6267c8) / 1000000;\n                        uVar11 = 0x17;\n                        while ((cVar3 = uVar7,  9 < uVar7 || (0x13 < uVar11))) {\n                            uVar7 = uVar7 / 10;\n                            if (0x17 < uVar11) goto code_r0x004194c6;\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar7 * -10 + '0';\n                            bVar13 = uVar11 == 0x15;\n                            uVar11 = uVar11 - 1;\n                            if (bVar13) {\n                                *(*0x20 + -0xd4) = 0x2e;\n                                uVar11 = 0x13;\n                            }\n                        }\n                        if (uVar11 < 0x18) {\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                            *(*0x20 + -0x108) = *0x629338;\n                            *(*0x20 + -0x1b8) = 0x418fcc;\n                            uVar5 = fcn.0044afa0(-(uVar11 - 0x18));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x110) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                            *(*0x20 + -0x1b8) = 0x418fe5;\n                            fcn.00435480();\n                            *(*0x20 + -0x1b8) = 0x418ff6;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x419005;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x419016;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41902b;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41903c;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41904f;\n                            fcn.00435b80(*(*0x20 + -0x100));\n                            *(*0x20 + -0x1b8) = 0x419065;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41906a;\n                            fcn.00435500();\n                            *(*0x20 + -0xd0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0xd0) = *0x5d2d50;\n                            *(*0x20 + -200) = *0x5d2d58;\n                            *(*0x20 + -0xc0) = *0x5d2d60;\n                            iVar9 = 0;\n                            iVar8 = *0x5d2d48;\n                            while (iVar9 < 3) {\n                                *(*0x20 + -0x148) = iVar9;\n                                *(*0x20 + -0x168) = *(*0x20 + iVar9 * 8 + -0xd0);\n                                if (iVar9 != 0) {\n                                    *(*0x20 + -0x118) = iVar8;\n                                    *(*0x20 + -0x1b8) = 0x419156;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x1b8) = 0x419167;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x1b8) = 0x41916c;\n                                    fcn.00435500();\n                                }\n                                *(*0x20 + -0x1b8) = 0x4190cc;\n                                uVar5 = fcn.0041a520(0x18);\n                                *(*0x20 + -0x1b8) = 0x4190df;\n                                uVar6 = fcn.0044afa0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x4190f4;\n                                fcn.00435480();\n                                *(*0x20 + -0x1b8) = 0x419109;\n                                fcn.00435d80();\n                                *(*0x20 + -0x1b8) = 0x41910e;\n                                fcn.00435500();\n                                iVar8 = *(*0x20 + -0x168);\n                                iVar9 = *(*0x20 + -0x148) + 1;\n                            }\n                            *(*0x20 + -0x1b8) = 0x419185;\n                            fcn.00435480();\n                            *(*0x20 + -0x1b8) = 0x419196;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41919b;\n                            fcn.00435500();\n                            *(*0x20 + -0x58) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x58) = *(*0x20 + -0x170);\n                            *(*0x20 + -0x50) = *0x626fb0;\n                            *(*0x20 + -0x48) = *0x626fc0 + *0x626fb8;\n                            *(*0x20 + -0x40) = *0x626fc8;\n                            *(*0x20 + -0x38) = *(*0x20 + -0x158);\n                            iVar9 = 0;\n                            while (iVar9 < 5) {\n                                *(*0x20 + -0x150) = iVar9;\n                                *(*0x20 + -0x160) = *(*0x20 + iVar9 * 8 + -0x58);\n                                if ((iVar9 == 2) || (iVar9 == 3)) {\n                                    *(*0x20 + -0x1b8) = 0x419291;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x1b8) = 0x4192a5;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x1b8) = 0x4192aa;\n                                    fcn.00435500();\n                                }\n                                else if (iVar9 != 0) {\n                                    *(*0x20 + -0x1b8) = 0x4192c5;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x1b8) = 0x4192d6;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x1b8) = 0x4192db;\n                                    fcn.00435500();\n                                }\n                                *(*0x20 + -0x1b8) = 0x41921d;\n                                uVar5 = fcn.0041a520(0x18);\n                                *(*0x20 + -0x1b8) = 0x419230;\n                                uVar6 = fcn.0044afa0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x419245;\n                                fcn.00435480();\n                                *(*0x20 + -0x1b8) = 0x41925a;\n                                fcn.00435d80();\n                                *(*0x20 + -0x1b8) = 0x41925f;\n                                fcn.00435500();\n                                iVar9 = *(*0x20 + -0x150) + 1;\n                            }\n                            *(*0x20 + -0x108) = *0x5d2d78;\n                            *(*0x20 + -0x120) = *0x5d2d80;\n                            *(*0x20 + -0x128) = *0x5d2d88;\n                            *(*0x20 + -0x130) = *0x5d2d90;\n                            *(*0x20 + -0x138) = *0x626f70;\n                            *(*0x20 + -0x140) = *0x626f80;\n                            *(*0x20 + -0x118) = *0x5d2d40;\n                            *(*0x20 + -0x1b8) = 0x419352;\n                            fcn.00435480();\n                            *(*0x20 + -0x1b8) = 0x419365;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x419376;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x419387;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x419398;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x4193a9;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x4193ba;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x4193cb;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x4193dc;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x4193ed;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x4193fb;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x41940c;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41941a;\n                            fcn.00435a80();\n                            *(*0x20 + -0x1b8) = 0x41942b;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x419438;\n                            fcn.00435b80();\n                            *(*0x20 + -0x1b8) = 0x419449;\n                            fcn.00435d80();\n                            *(*0x20 + -0x1b8) = 0x41944e;\n                            fcn.00435500();\n                            if (*0x5d2cf8 != '\\0') {\n                                *(*0x20 + -0x1b8) = 0x41945c;\n                                fcn.00435480();\n                                *(*0x20 + -0x1b8) = 0x41946d;\n                                fcn.00435d80();\n                                *(*0x20 + -0x1b8) = 0x419472;\n                                fcn.00435500();\n                            }\n                            *(*0x20 + -0x1b8) = 0x419477;\n                            fcn.00435480();\n                            *(*0x20 + -0x1b8) = 0x41947c;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x419485;\n                            fcn.00435500();\n                            cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                            *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                            if (cVar3 == '\\x01') {\n                                *(*0x20 + -0x1b8) = 0x4194b7;\n                                fcn.0040ad60();\n                            }\n                            goto code_r0x00418eb8;\n                        }\n                        *(*0x20 + -0x1b8) = 0x4194c6;\n                        fcn.0045eee0(0x18);\ncode_r0x004194c6:\n                        *(*0x20 + -0x1b8) = 0x4194d3;\n                        fcn.0045eee0(0x18);\n                    }\n                    *(*0x20 + -0x1b8) = 0x4194e5;\n                    fcn.00433ce0();\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x62a7b8;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00418c42;\n                    }\n                }\n                *(*0x20 + -0x1b8) = 0x4194ef;\n                fcn.0045ef00(0x2d0);\n            }\n            *(*0x20 + -0x1b8) = 0x419505;\n            param_1 = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x419511;\n        fcn.0045c800();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6311
    },
    "0041ab40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0041ab40(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x5d2ca8) || (*0x5d2cac <= unaff_EBX)) {\n        if ((unaff_EBX < *0x5d2cac) || (*0x5d2cb0 <= unaff_EBX)) {\n            puVar4 = *0x6266a0;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041ae1b:\n                    puStack88 = puVar4;\n                    fcn.0041cf00(0x626a00);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045c6c0();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x5d2cb0) || (*0x5d2cb4 <= unaff_EBX)) {\n                    puVar4 = *0x5d2cb4;\n                    if ((*0x5d2cb4 <= unaff_EBX) && (unaff_EBX < *0x5d2cb8)) {\n                        if (unaff_EBX - *0x5d2cb4 < *0x5d2cc8) {\n                            iVar3 = *(*0x5d2cc0 + (unaff_EBX - *0x5d2cb4) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x5d2c78;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x41afa0);\n                            auStack24 = CONCAT88(&iStack96, in_RAX);\n                            fcn.0045c6c0();\n                            piVar2 = 0x626f98;\n                            goto code_r0x0041ad28;\n                        }\n                        fcn.0045eee0(*0x5d2cc8);\n                    }\n                    fcn.00435480();\n                    uStack64 = *0x5d2cb4;\n                    uStack72 = *0x5d2cb8;\n                    fcn.00435480();\n                    fcn.00435d80();\n                    fcn.00435a80();\n                    fcn.00435d80();\n                    fcn.00435a80();\n                    fcn.00435d80();\n                    fcn.00435a80();\n                    fcn.00435d80();\n                    fcn.00435500();\n                    fcn.00433ce0();\n                    goto code_r0x0041ae1b;\n                }\n                fcn.0041b2e0();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x5d1d18 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x5d1d18;\n                iVar3 = (*0x5d1d18)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.0041b100(*(*(iStack56 + iVar1 * 8) + 0x208));\n                iStack96 = iVar1 + iStack96;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x626fa0;\n        }\n    }\n    else {\n        if (*0x5d1d18 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x5d1d18;\n            iVar3 = (*0x5d1d18)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.0041b100(*(*(iStack48 + iVar1 * 8) + 0x1f8));\n            iStack96 = iVar1 + iStack96;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x626fa0;\n    }\ncode_r0x0041ad28:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.0041bd60();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1245
    },
    "0041c680": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c680(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar5;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    int64_t iVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar3 = *in_RAX;\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        bVar9 = false;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(iVar3 + 0x24) == '\\x03';\n        bVar9 = *(iVar3 + 0x24) == '\\x05';\n    }\n    cVar5 = uVar7;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar5 == '\\0')) && (!bVar9)) {\n        iVar4 = 0;\n        iVar2 = fcn.0044a180();\n        if (0 < iVar2) {\n            fcn.0041cf00(unaff_RBX);\n        }\n        if (0 < iVar4) {\n            fcn.0041cf00(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar10 = unaff_RSI;\n            for (iVar3 = 0; iVar3 < uVar7; iVar3 = iVar3 + 1) {\n                arg1_00 = unaff_RSI + iVar3 * 0x10;\n                iVar2 = *(unaff_RSI + iVar3 * 0x10);\n                iVar8 = in_RAX[7];\n                if (-1 < iVar2) {\n                    iVar8 = in_RAX[8];\n                }\n                uVar1 = iVar8 + iVar2;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    unaff_RSI = iVar10;\n                    fcn.004212c0(arg1_00);\n                    iVar10 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041d420(0);\n        uVar7 = uVar7 & 0xff;\n    }\n    cVar6 = uVar7;\n    if (in_RAX[9] != 0) {\n        fcn.0041d420(0);\n        cVar6 = cVar5;\n    }\n    if ((cVar6 != '\\0') || (bVar9)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 747
    },
    "0041d0a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d0a0(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \ncode_r0x0041d0a0:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar5 = *(*(uVar7 * 8 + 0x5f8a70) + (uVar9 & 0xfffff) * 8);\n            if (iVar5 == 0) {\n                uVar9 = 0;\n                uVar10 = 0;\n                puVar12 = NULL;\n                puVar11 = NULL;\n            }\n            else {\n                puVar11 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar12 = iVar5 + 0x1ffff;\n            }\n            iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            uVar7 = *(iVar5 + 0x68);\n            if (uVar7 != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x30) = in_RAX;\n                if (0x20000 < uVar7) {\n                    if (*(iVar5 + 0x18) == in_RAX) {\n                        if ((*(iVar5 + 0x62) & 1) != 0) {\n                            unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = iVar5;\n                        *(*0x20 + -0x28) = puVar12;\n                        *(*0x20 + -0x58) = uVar9;\n                        *(*0x20 + -0x60) = uVar10;\n                        *(*0x20 + -0x10) = puVar11;\n                        uVar7 = in_RAX;\ncode_r0x0041d336:\n                        uVar7 = uVar7 + 0x20000;\n                        if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar7) goto code_r0x0041d30e;\n                        iVar2 = *unaff_RBX;\n                        if (iVar2 == 0) {\n                            bVar3 = false;\n                        }\n                        else {\n                            uVar4 = *(iVar2 + 0x10);\n                            if (uVar4 == 0xfd) {\n                                bVar3 = false;\n                            }\n                            else {\n                                if (0xfc < uVar4) goto code_r0x0041d3b8;\n                                *(iVar2 + 0x18 + uVar4 * 8) = uVar7;\n                                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                                bVar3 = true;\n                            }\n                        }\n                        if (!bVar3) {\n                            *(*0x20 + -0x48) = uVar7;\n                            *(*0x20 + -0x98) = 0x41d385;\n                            fcn.00423160();\n                            uVar7 = *(*0x20 + -0x48);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x30);\n                            uVar9 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x60);\n                            puVar11 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x50);\n                            puVar12 = *(*0x20 + -0x28);\n                        }\n                        goto code_r0x0041d336;\n                    }\ncode_r0x0041d30e:\n                    uVar7 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n                    if (0x20000 < uVar7) {\n                        uVar7 = 0x20000;\n                    }\n                }\n                *(*0x20 + -0x40) = uVar7;\n                uVar4 = 0;\n                while ((uVar4 < uVar7 && (uVar1 = *puVar11,  ((uVar1 >> (uVar10 & 0x1f)) >> 4 & 1) != 0))) {\n                    *(*0x20 + -0x38) = uVar4;\n                    if (((uVar1 >> (uVar10 & 0x1f) & 1) != 0) &&\n                       ((*(uVar4 + in_RAX) != 0 && (uVar7 <= *(uVar4 + in_RAX) - in_RAX)))) {\n                        *(*0x20 + -0x54) = uVar10;\n                        *(*0x20 + -0x18) = puVar11;\n                        *(*0x20 + -0x20) = puVar12;\n                        *(*0x20 + -0x5c) = uVar9;\n                        *(*0x20 + -0x98) = 0x41d251;\n                        iVar5 = fcn.00412200(uVar4);\n                        if (iVar5 != 0) {\n                            *(*0x20 + -0x98) = 0x41d273;\n                            fcn.0041d6e0(*(*0x20 + -0x38), uVar7, uVar4);\n                        }\n                        uVar4 = *(*0x20 + -0x38);\n                        uVar10 = *(*0x20 + -0x54);\n                        uVar7 = *(*0x20 + -0x40);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = *(*0x20 + -0x5c);\n                        puVar11 = *(*0x20 + -0x18);\n                        puVar12 = *(*0x20 + -0x20);\n                    }\n                    if (uVar10 < 3) {\n                        uVar10 = uVar10 + 1;\n                    }\n                    else if (puVar12 == puVar11) {\n                        uVar6 = uVar9 & 0xffffffff;\n                        *(*0x20 + -0x98) = 0x41d2ce;\n                        puVar11 = fcn.00412360(uVar9 & 0xffffffff);\n                        uVar7 = *(*0x20 + -0x40);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = uVar6;\n                        uVar4 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        puVar11 = puVar11 + 1;\n                        uVar10 = 0;\n                    }\n                    uVar4 = uVar4 + 8;\n                }\n                unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                unaff_RBX[3] = unaff_RBX[3] + uVar4;\n                return;\n            }\n            goto code_r0x0041d3c5;\n        }\n        goto code_r0x0041d3d6;\n    }\n    goto code_r0x0041d3e6;\ncode_r0x0041d3b8:\n    *(*0x20 + -0x98) = 0x41d3c5;\n    fcn.0045eee0(0xfd);\ncode_r0x0041d3c5:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41d3d6;\n    fcn.00433ce0();\ncode_r0x0041d3d6:\n    *(*0x20 + -0x98) = 0x41d3e5;\n    in_RAX = fcn.0045ef00(0x40);\ncode_r0x0041d3e6:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x41d3f5;\n    fcn.0045c800();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    goto code_r0x0041d0a0;\n}\n",
        "token_count": 2159
    },
    "0041f1a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f1cb)\n// WARNING: Removing unreachable block (ram,0x0041f1d2)\n// WARNING: Removing unreachable block (ram,0x0041f1d8)\n\nint64_t fcn.0041f1a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004076a0();\n    iVar1 = fcn.0044bac0();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 177
    },
    "00422040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00422040(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t **in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x00422040:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar1 = *(unaff_R14 + 0x30);\n        if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x5f8a10;\n            uVar3 = puVar10[99];\n            *(*0x20 + -0xad) = uVar3;\n            if ((uVar3 == 1) && (*(puVar10 + 0x58) == *0x5f8a10 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x5f8a10 - 1;\n                uVar12 = *0x5f8a10;\n                if (*0x5d8810 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x4220f1;\n                    fcn.00452640();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x5f8a38 = *0x5f8a38 + *(puVar10 + 0x20);\n                uVar3 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar3;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar4 = uVar3;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00422a65:\n                                uVar5 = 0;\n                                *(*0x20 + -0xd0) = 0x422a72;\n                                fcn.0045ef00(0x40);\n                                goto code_r0x00422a72;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x5f8a70) + puVar13 * 8);\n                            uVar5 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar5 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x422a65;\n                                fcn.0045ef00(0x40);\n                                goto code_r0x00422a65;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar5 & 7));\n                        }\n                        if ((*0x626ae4 != 0) || (*0x626aa4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x626ae4 != 0) {\n                                        *(*0x20 + -0x70) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x42299e;\n                                        fcn.0042b700();\n                                        uVar14 = *(*0x20 + -0x70);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x626aa4 != 0) {\n                                        for (uVar4 = 0; uVar4 < uVar8; uVar4 = uVar4 + 4) {\n                                            *(iVar15 + uVar4) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x004223c6;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x422392;\n                            fcn.00422c00();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x4228f2;\n                                    fcn.00422c00();\n                                    uVar8 = *(*0x20 + -0x78);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x004223c6:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x626615 == '\\0') {\n                                    *(*0x20 + -0x80) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x422419;\n                                    iVar17 = fcn.00401d00();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x80);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x5d8810 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x4224b6;\n                                uVar7 = fcn.004268c0();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x4224c9;\n                                fcn.00411e40();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar3 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar3;\n                                *(*0x20 + -0xad) = uVar3;\n                                if (uVar3 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar18 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar18 + 1) && (uVar12 != uVar18 + 3)) {\n                                            puVar10 = uVar18;\n                                            *(iVar15 + 0x58) = uVar18;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar3 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar3 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x626aa8 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x4226a6;\n                                                        fcn.00425800();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x422698;\n                                                        fcn.004162c0();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x4226b2;\n                                                    iVar15 = fcn.0042cda0();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar1 = iVar15 + 0x268;\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x4226da;\n                                                    fcn.0042ce80(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x422725;\n                                                    fcn.0042c740(uVar14 * 0xc0 + 0x5f8d70, (uVar18 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x422745;\n                                                fcn.0045eee0(0x88);\ncode_r0x00422745:\n                                                *(*0x20 + -0xd0) = 0x422751;\n                                                fcn.0045eee0(0x88);\ncode_r0x00422751:\n                                                *(*0x20 + -0xd0) = 0x42275d;\n                                                fcn.0045eee0(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar2 = *(*0x20 + 0x10);\ncode_r0x004225a0:\n                                                    if (cVar2 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x422647;\n                                                        fcn.00425800();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x422636;\n                                                            fcn.0042c740(uVar14 * 0xc0 + 0x5f8d20, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00422745;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x4225f6;\n                                                        fcn.0042c740(uVar14 * 0xc0 + 0x5f8d70, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00422751;\n                                                }\n                                                *(*0x20 + -0xae) = uVar3;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x422549;\n                                                iVar15 = fcn.0042cda0();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar1 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x422585;\n                                                    fcn.0042ce80();\n                                                    cVar2 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x004225a0;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x42276a;\n                                            fcn.0045eee0(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x42277b;\n                                        fcn.00433ce0();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x422788;\n                                fcn.00435480();\n                                *(*0x20 + -0xd0) = 0x422799;\n                                fcn.00435d80();\n                                *(*0x20 + -0xd0) = 0x4227a6;\n                                fcn.00435a80();\n                                *(*0x20 + -0xd0) = 0x4227b7;\n                                fcn.00435d80();\n                                *(*0x20 + -0xd0) = 0x4227c5;\n                                fcn.00435a80();\n                                *(*0x20 + -0xd0) = 0x4227d6;\n                                fcn.00435d80();\n                                *(*0x20 + -0xd0) = 0x4227df;\n                                fcn.00435a80();\n                                *(*0x20 + -0xd0) = 0x4227e5;\n                                fcn.004356e0();\n                                *(*0x20 + -0xd0) = 0x4227ea;\n                                fcn.00435500();\n                                *(*0x20 + -0xd0) = 0x4227fb;\n                                fcn.00433ce0();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x42280f;\n                            fcn.00435480();\n                            *(*0x20 + -0xd0) = 0x422825;\n                            fcn.00435d80();\n                            *(*0x20 + -0xd0) = 0x42282f;\n                            fcn.00435a80();\n                            *(*0x20 + -0xd0) = 0x422845;\n                            fcn.00435d80();\n                            *(*0x20 + -0xd0) = 0x422852;\n                            fcn.00435a80();\n                            *(*0x20 + -0xd0) = 0x422865;\n                            fcn.00435d80();\n                            *(*0x20 + -0xd0) = 0x42286f;\n                            fcn.00435a80();\n                            *(*0x20 + -0xd0) = 0x422885;\n                            fcn.00435d80();\n                            *(*0x20 + -0xd0) = 0x422892;\n                            fcn.00435a80();\n                            *(*0x20 + -0xd0) = 0x422897;\n                            fcn.004356e0();\n                            *(*0x20 + -0xd0) = 0x42289c;\n                            fcn.00435500();\n                            *(*0x20 + -0xd0) = 0x4228ad;\n                            fcn.00433ce0();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x00422b30;\n                    uVar4 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0);\n                    uVar18 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0) & 7;\n                    uVar5 = uVar18;\n                    puVar9 = (uVar4 >> 3) + *(puVar10 + 0x50);\n                    uVar3 = *puVar9;\n                    uVar12 = uVar3;\n                    if ((uVar3 & 1 << uVar18) == 0) {\n                        uVar4 = uVar4 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar4 <= *(puVar13 + 1)) {\n                                cVar2 = '\\0';\n                                goto code_r0x00422244;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar5 & 0x1f);\n                                cVar2 = '\\x01';\n                                goto code_r0x00422244;\n                            }\ncode_r0x00422a72:\n                            puVar9 = puVar10;\n                        }\n                        cVar2 = '\\0';\ncode_r0x00422244:\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xaf) = cVar2;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar4))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar2 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x422b05;\n                                fcn.00426780(uVar8);\n                                cVar2 = *(*0x20 + -0xaf);\n                                uVar4 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x422205;\n                        fcn.00426780(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar3 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x00422b35;\n        }\n        goto code_r0x00422bbb;\n    }\n    goto code_r0x00422bcd;\ncode_r0x00422b30:\n    *(*0x20 + -0xd0) = 0x422b35;\n    fcn.00432260();\ncode_r0x00422b35:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x422b45;\n    fcn.00435480();\n    *(*0x20 + -0xd0) = 0x422b56;\n    fcn.00435d80();\n    *(*0x20 + -0xd0) = 0x422b65;\n    fcn.00435a80();\n    *(*0x20 + -0xd0) = 0x422b76;\n    fcn.00435d80();\n    *(*0x20 + -0xd0) = 0x422b85;\n    fcn.00435a80();\n    *(*0x20 + -0xd0) = 0x422b96;\n    fcn.00435d80();\n    *(*0x20 + -0xd0) = 0x422b9f;\n    fcn.00435a80();\n    *(*0x20 + -0xd0) = 0x422ba5;\n    fcn.004356e0();\n    *(*0x20 + -0xd0) = 0x422baa;\n    fcn.00435500();\n    *(*0x20 + -0xd0) = 0x422bbb;\n    fcn.00433ce0();\ncode_r0x00422bbb:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x422bcc;\n    in_RAX = fcn.00433ce0();\ncode_r0x00422bcd:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x422bdb;\n    fcn.0045c800();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x00422040;\n}\n",
        "token_count": 6247
    },
    "00424ee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00424ee0(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x00424fee:\n                *(*0x20 + -0x48) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x78) = 0x425005;\n                fcn.0040ab40();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x425036;\n                    iVar7 = fcn.00428960();\n                    if (iVar7 != 0) {\n                        uVar6 = 0;\n                        goto code_r0x00425096;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x425051;\n                    uVar6 = fcn.00425540();\n                    if (uVar8 == '\\0') {\n                        *(*0x20 + -0x78) = 0x425065;\n                        fcn.0040ad60();\n                        return 0;\n                    }\n                    *(*0x20 + -0x40) = uVar6;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x425088;\n                    iVar7 = fcn.00428960();\n                    if (iVar7 != 0) {\n                        uVar6 = *(*0x20 + -0x40);\n                        goto code_r0x00425096;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                    uVar8 = *(*0x20 + -0x48);\ncode_r0x00425096:\n                    *(*0x20 + -0x48) = uVar8;\n                    *(*0x20 + -0x40) = uVar6;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x78) = 0x4250b9;\n                        iVar7 = fcn.00424de0();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x78) = 0x4250cd;\n                    fcn.0040ad60();\n                    if ((*(*0x20 + -0x40) != 0) &&\n                       (*(*(*0x20 + 8) + 0x10178) < (*0x6282b0 - *0x6282c0) + *(*0x20 + -0x40))) {\n                        *(*0x20 + -0x78) = 0x425112;\n                        fcn.0041faa0(*(*0x20 + 8) + 8);\n                    }\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x48);\ncode_r0x0042512d:\n                    *(*0x20 + -0x50) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x48) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x78) = 0x42519f;\n                    cVar5 = fcn.00424c80(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x50);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00425286:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x78) = 0x42529f;\n                            uVar8 = fcn.004268c0();\n                            *(*(*0x20 + -0x50) + 0x50) = uVar8;\n                            *(*0x20 + -0x78) = 0x4252b1;\n                            uVar8 = fcn.00426be0();\n                            iVar7 = *(*0x20 + -0x50);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10130);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x004252ef;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x55f5e0);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x5609e0);\n                                goto code_r0x00425286;\n                            }\n                            goto code_r0x004254da;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x004252ef:\n                        iVar11 = *(*0x20 + -0x48);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x78) = 0x425308;\n                            fcn.00415f60(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x48);\n                            LOCK();\n                            *0x6282c0 = *0x6282c0 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x50);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x6282b8 = *0x6282b8 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x78) = 0x425374;\n                            fcn.0042cce0(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x78) = 0x425385;\n                        piVar9 = fcn.0042cda0();\n                        iVar7 = *(*0x20 + -0x48);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x78) = 0x4253f4;\n                        fcn.0042ce80(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x50);\n                        *(*0x20 + -0x78) = 0x42540f;\n                        fcn.00424b80(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x004254a8:\n                            *(*0x20 + -0x78) = 0x4254ad;\n                            fcn.0045e600();\n                            return *(*0x20 + -0x50);\n                        }\n                        uVar12 = *(*(*0x20 + -0x50) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x5f8a70) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10150) = *(*(*0x20 + 8) + 0x10150) + *(*0x20 + 0x10);\n                            goto code_r0x004254a8;\n                        }\n                        *(*0x20 + -0x78) = 0x4254da;\n                        fcn.0045ef00(0x40);\ncode_r0x004254da:\n                        *(*0x20 + -0x78) = 0x4254df;\n                        fcn.00432260();\n                    }\n                    *(*0x20 + -0x78) = 0x4254ec;\n                    fcn.0045eee0(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x78) = 0x4254fd;\n                fcn.00433ce0();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x78) = 0x424f47;\n                    fcn.0040ab40();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x78) = 0x424f55;\n                    uVar6 = fcn.00429be0();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x78) = 0x424f72;\n                    fcn.0040ad60();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x78) = 0x424f88;\n                iVar7 = fcn.004297c0();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x00424fee;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0xdc8),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x00424fcd:\n                    if (pauVar15 == NULL) goto code_r0x00424fee;\n                    goto code_r0x0042512d;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0xdc8 + iVar4 * 8);\n                    *(iVar11 + 0xdc8) = unaff_RDI;\n                    goto code_r0x00424fcd;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x78) = 0x42550a;\n            in_RAX = fcn.0045eee0(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x425525;\n        fcn.00460f20();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4055
    },
    "00425980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425980(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10130) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10150) = *(in_RAX + 0x10150) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x5f8a70) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00425a76:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x6282b8 = *0x6282b8 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x425abf;\n                            fcn.0042cce0();\n                        }\n                        *(*0x20 + -0x58) = 0x425acb;\n                        iVar6 = fcn.0042cda0();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x425b2d;\n                        fcn.0042ce80(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x425b53;\n                        fcn.00428c20(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x00425b9c:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a68) = *(iVar6 + 0x16a68) - *(iVar6 + 0x16a38);\n                            *puVar5 = *(iVar6 + 0x16a50);\n                            *(iVar6 + 0x16a50) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0xdc8);\n                        if (0x7f < uVar7) goto code_r0x00425b9c;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0xdd0 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0xdc8) = *(iVar6 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x425bdb;\n                        fcn.0045eee0(0x80);\n                        goto code_r0x00425bdb;\n                    }\n                    goto code_r0x00425bfd;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00425a76;\ncode_r0x00425bdb:\n                    *(*0x20 + -0x58) = 0x425bec;\n                    fcn.00433ce0();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x425bfd;\n                fcn.00433ce0();\ncode_r0x00425bfd:\n                *(*0x20 + -0x58) = 0x425c0a;\n                in_RAX = fcn.0045ef00(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10130);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x58) = 0x425c2b;\n            fcn.00435480();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x58) = 0x425c3c;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x425c46;\n            fcn.00435d40();\n            *(*0x20 + -0x58) = 0x425c57;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x425c65;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x425c76;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x425c85;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x425c96;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x425ca5;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x425cb6;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x425cc5;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x425cca;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425ccf;\n            fcn.00435500();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x58) = 0x425ce5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x425cf9;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2176
    },
    "00426780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426780(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x426830;\n                fcn.00416460(uVar2);\n                *(*0x20 + -0x38) = 0x42683e;\n                fcn.0040ab40();\n                *0x5ff3d8 = *0x5ff3d8 - *0x5ff3a8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x5ff3c0;\n                *(*0x20 + -0x38) = 0x426878;\n                *0x5ff3c0 = puVar3;\n                fcn.0040ad60();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x4267cc;\n                fcn.0042b0c0(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x4267da;\n                fcn.0040ab40();\n                *0x5ff420 = *0x5ff420 - *0x5ff3f0;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x5ff408;\n                *(*0x20 + -0x38) = 0x426813;\n                *0x5ff408 = puVar3;\n                fcn.0040ad60();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x426893;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4268a8;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 773
    },
    "0042a9a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a9a0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a9ed;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a9f8;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 309
    },
    "0042aa00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0042aa00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    uint64_t uVar2;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong *in_R9;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \ncode_r0x0042aa00:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x5d1cf0 != NULL) {\ncode_r0x0042aa92:\n            uVar4 = 0;\n            for (iVar5 = 0; iVar5 < unaff_RDI; iVar5 = iVar5 + 1) {\n                uVar4 = (*(arg1 + iVar5 * 8) + uVar4) * 0x401;\n                uVar4 = uVar4 >> 6 ^ uVar4;\n            }\n            uVar4 = (uVar4 + unaff_RBX) * 0x401;\n            uVar4 = (uVar4 ^ uVar4 >> 6) * 9;\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            in_RDX = uVar4 / 179999;\n            iVar5 = in_RDX * 179999;\n            uVar2 = uVar4 % 179999;\n            in_R9 = *0x5d1cf0;\n            if (uVar2 < 179999) {\n                in_R9 = (*0x5d1cf0)[uVar2];\n                do {\n                    if (in_R9 == NULL) {\n                        if (in_R8 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x40) = 0x42ab7e;\n                        puVar1 = fcn.0042a880();\n                        in_RDX = puVar1[5];\n                        if (0x20 < in_RDX) {\n                            unaff_RBX = 0x20;\n                            *(*0x20 + -0x40) = 0x42ac5f;\n                            uVar2 = fcn.0045f000(arg1, in_RDX);\n                            goto code_r0x0042ac5f;\n                        }\n                        if (*(*0x20 + 0x20) < in_RDX) {\n                            in_RDX = *(*0x20 + 0x20);\n                        }\n                        if (*(*0x20 + 0x18) != puVar1 + 6) {\n                            *(*0x20 + -0x18) = puVar1;\n                            *(*0x20 + -0x40) = 0x42abbb;\n                            fcn.0045f840(in_RDX << 3);\n                            puVar1 = *(*0x20 + -0x18);\n                        }\n                        puVar1[3] = *(*0x20 + -0x20);\n                        puVar1[4] = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + -0x10);\n                        *puVar1 = (*0x5d1cf0)[iVar5];\n                        (*0x5d1cf0)[iVar5] = puVar1;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar1[1] = *0x626748;\n                            *0x626748 = puVar1;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar1[1] = *0x626810;\n                            *0x626810 = puVar1;\n                        }\n                        else {\n                            puVar1[1] = *0x6266c0;\n                            *0x6266c0 = puVar1;\n                        }\n                        return puVar1;\n                    }\n                    if (((in_R9[2] == in_RAX) && (in_R9[3] == uVar4)) && (in_R9[4] == unaff_RBX)) {\n                        in_RDX = in_R9[5];\n                        if (0x20 < in_RDX) goto code_r0x0042ac87;\n                        if (unaff_RDI == in_RDX) {\n                            iVar5 = 0;\n                            while( true ) {\n                                if (in_RDX <= iVar5) {\n                                    return in_R9;\n                                }\n                                if (*(arg1 + iVar5 * 8) != in_R9[iVar5 + 6]) break;\ncode_r0x0042ac5f:\n                                iVar5 = iVar5 + 1;\n                            }\n                        }\n                    }\n                    in_R9 = *in_R9;\n                } while( true );\n            }\n            goto code_r0x0042ac91;\n        }\n        *(*0x20 + 0x30) = in_R8;\n        *(*0x20 + -0x40) = 0x42aa4c;\n        puVar1 = fcn.00415d00();\n        if (*0x626890 != 0) {\n            unaff_RDI = 0x5d1cf0;\n            *(*0x20 + -0x40) = 0x42aa6a;\n            fcn.0045ea40(arg1, in_RDX, in_R8, in_R9);\n            puVar1 = *0x5d1cf0;\n        }\n        *0x5d1cf0 = puVar1;\n        if (*0x5d1cf0 != NULL) {\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            goto code_r0x0042aa92;\n        }\n        goto code_r0x0042ac9b;\n    }\n    goto code_r0x0042acad;\ncode_r0x0042ac87:\n    *(*0x20 + -0x40) = 0x42ac91;\n    fcn.0045f000(arg1, in_RDX);\ncode_r0x0042ac91:\n    arg1 = 179999;\n    *(*0x20 + -0x40) = 0x42ac9b;\n    fcn.0045eee0(179999);\n    unaff_RSI = in_RAX;\ncode_r0x0042ac9b:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x40) = 0x42acac;\n    in_RAX = fcn.00433ce0();\ncode_r0x0042acad:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    *(puVar3 + 0x20) = unaff_RDI;\n    *(puVar3 + 0x28) = unaff_RSI;\n    puVar3[0x30] = in_R8;\n    *(puVar3 + -8) = 0x42acd0;\n    fcn.0045c800();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = *(puVar3 + 0x20);\n    unaff_RSI = *(puVar3 + 0x28);\n    in_R8 = puVar3[0x30];\n    *0x20 = puVar3;\n    goto code_r0x0042aa00;\n}\n",
        "token_count": 1925
    },
    "0042cda0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042cda0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.0040ab40(in_RAX + 0xde8);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042ce32;\n    }\n    uVar5 = *(in_RAX + 0xde0) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x4a0;\n    }\n    fcn.0045eee0(3);\ncode_r0x0042ce32:\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00433ce0();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 340
    },
    "0042eda0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042eda0(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x5d1cb0;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42edfe;\n            fcn.00430f80();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42ee45;\n            iVar3 = fcn.00430e20();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42ee70;\n            fcn.0042f660(0x21);\n            uVar5 = *0x6267e8;\n            if (*0x6267e8 < 0x106) {\n                *(*0x20 + -0x18) = *0x6267e8;\n                *(*0x20 + -0x78) = 0x42eea5;\n                fcn.0045f840(*0x6267e8);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042f025;\n                    *(uVar5 + 0x627240) = *((*(iVar4 + 0x62742a) >> 4) + 0x4ca965);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042f015;\n                    *(uVar5 + 0x627241) = *((*(iVar4 + 0x62742a) & 0xf) + 0x4ca965);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x627240;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42ef93;\n                        fcn.00431180();\n                        *(*0x20 + -0x78) = 0x42efac;\n                        fcn.00460380();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x626602 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42efd7;\n                        fcn.00435480();\n                        *(*0x20 + -0x78) = 0x42efe8;\n                        fcn.00435d80();\n                        *(*0x20 + -0x78) = 0x42efed;\n                        fcn.00435500();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x627240) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42f015;\n                fcn.0045eee0(0x20b);\ncode_r0x0042f015:\n                *(*0x20 + -0x78) = 0x42f025;\n                fcn.0045eee0(0x20b);\ncode_r0x0042f025:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42f032;\n                fcn.0045eee0(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42f03c;\n            fcn.0045ef40(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42f045;\n        fcn.0045c800();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1515
    },
    "004346e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.004346e0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x004346e0:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 0x300) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x4347f8;\n                                cVar2 = fcn.00437f60(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x434865;\n                                    fcn.00437ba0(2);\n                                    if ((*0x626ad8 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x43487d;\n                                        fcn.004607e0();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x4348ae;\n                                            fcn.00431460();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x004349d0;\n                        }\n                        if (uVar10 < 3) goto code_r0x0043493a;\n                    }\ncode_r0x00434992:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x4349a6;\n                    cVar2 = fcn.00437f60(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x43495a;\n                            cVar2 = fcn.00438520(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00434992;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x0043493a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00434af3;\n                        }\n                    }\n                }\ncode_r0x004349d0:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x4349ec;\n                    fcn.004607e0();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x434a15;\n                fcn.004607e0();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x434a45;\n                    fcn.0045e5e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4d2ae8;\n                    *(*0x20 + -0x78) = 0x434a75;\n                    fcn.0045c6c0();\n                    *(*0x20 + -0x78) = 0x434a8e;\n                    fcn.004607e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00434c0b;\n    }\n    goto code_r0x00434c1d;\ncode_r0x00434af3:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x434b13;\n    fcn.00435480();\n    *(*0x20 + -0x78) = 0x434b25;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434b2f;\n    fcn.00435d00();\n    *(*0x20 + -0x78) = 0x434b45;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434b4f;\n    fcn.00435b80();\n    *(*0x20 + -0x78) = 0x434b65;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434b70;\n    fcn.00435a80();\n    *(*0x20 + -0x78) = 0x434b75;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x434b7a;\n    fcn.00435500();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x434b9a;\n    fcn.00435480();\n    *(*0x20 + -0x78) = 0x434bab;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434bb5;\n    fcn.00435d00();\n    *(*0x20 + -0x78) = 0x434bc6;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434bd0;\n    fcn.00435b80();\n    *(*0x20 + -0x78) = 0x434be5;\n    fcn.00435d80();\n    *(*0x20 + -0x78) = 0x434bf0;\n    fcn.00435a80();\n    *(*0x20 + -0x78) = 0x434bf5;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x434bfa;\n    fcn.00435500();\n    *(*0x20 + -0x78) = 0x434c0b;\n    fcn.00433ce0();\ncode_r0x00434c0b:\n    *(*0x20 + -0x78) = 0x434c1c;\n    in_RAX = fcn.00433ce0();\ncode_r0x00434c1d:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x434c27;\n    fcn.00460f20();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x004346e0;\n}\n",
        "token_count": 3024
    },
    "00434f40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00434f40(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x55c388)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x434fe7;\n            iVar4 = fcn.0044d780();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x435009;\n            iVar3 = fcn.0044e6e0(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x27) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x27 + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x130) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x25) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x27;\n            *(*0x20 + -0x78) = 0x43508f;\n            piVar5 = fcn.0044df00();\n            if (*(*(*0x20 + -0x10) + 0x27) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x0043514a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x435194;\n                        cVar2 = fcn.00402620(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x43524a;\n                    fcn.0044d720();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x4352b3;\n                fcn.00433ce0();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x435105;\n                iVar3 = fcn.0044e5a0(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x0043514a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar3 * 0x14);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x435134;\n                    piVar5 = fcn.0044e060(uVar1);\n                    goto code_r0x0043514a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x4352bd;\n            in_RAX = fcn.0045eee0(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4352d7;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1942
    },
    "00437ba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437ba0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x437c0b;\n                fcn.00435480();\n                *(*0x20 + -0x48) = 0x437c1c;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437c26;\n                fcn.00435d00();\n                *(*0x20 + -0x48) = 0x437c37;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437c45;\n                fcn.00435be0();\n                *(*0x20 + -0x48) = 0x437c56;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437c65;\n                fcn.00435be0();\n                *(*0x20 + -0x48) = 0x437c6a;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437c6f;\n                fcn.00435500();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x437c95;\n                fcn.00435480();\n                *(*0x20 + -0x48) = 0x437ca6;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437cb0;\n                fcn.00435d00();\n                *(*0x20 + -0x48) = 0x437cc5;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437ccf;\n                fcn.00435b80();\n                *(*0x20 + -0x48) = 0x437ce5;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437cf0;\n                fcn.00435a80();\n                *(*0x20 + -0x48) = 0x437cf5;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437cfa;\n                fcn.00435500();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x437d1a;\n                fcn.00435480();\n                *(*0x20 + -0x48) = 0x437d2b;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437d35;\n                fcn.00435d00();\n                *(*0x20 + -0x48) = 0x437d46;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437d50;\n                fcn.00435b80();\n                *(*0x20 + -0x48) = 0x437d65;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x437d70;\n                fcn.00435a80();\n                *(*0x20 + -0x48) = 0x437d75;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437d7a;\n                fcn.00435500();\n                *(*0x20 + -0x48) = 0x437d8b;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x48) = 0x437d90;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x437da5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437daf;\n            fcn.00435d00();\n            *(*0x20 + -0x48) = 0x437dc5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437dd0;\n            fcn.00435be0();\n            *(*0x20 + -0x48) = 0x437de5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437df0;\n            fcn.00435be0();\n            *(*0x20 + -0x48) = 0x437df5;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437dfa;\n            fcn.00435500();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x437e25;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x437e36;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437e45;\n            fcn.00435d00();\n            *(*0x20 + -0x48) = 0x437e56;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437e65;\n            fcn.00435b80();\n            *(*0x20 + -0x48) = 0x437e76;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437e85;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x437e8a;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437e8f;\n            fcn.00435500();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x437eaf;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x437ec5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437ecf;\n            fcn.00435d00();\n            *(*0x20 + -0x48) = 0x437ee5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437eef;\n            fcn.00435b80();\n            *(*0x20 + -0x48) = 0x437f05;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x437f10;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x437f15;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437f1a;\n            fcn.00435500();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x437f2b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437f3e;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2290
    },
    "00437f60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437f60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x437fb3;\n            fcn.00435480();\n            *(*0x20 + -0x20) = 0x437fc5;\n            fcn.00435d80();\n            *(*0x20 + -0x20) = 0x437fd0;\n            fcn.00435be0();\n            *(*0x20 + -0x20) = 0x437fe5;\n            fcn.00435d80();\n            *(*0x20 + -0x20) = 0x437ff0;\n            fcn.00435be0();\n            *(*0x20 + -0x20) = 0x437ff5;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x437ffa;\n            fcn.00435500();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x43800b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43801e;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 661
    },
    "004388c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004388c0(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint32_t uVar8;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xd8) < 1) {\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x60) = 0x4388fc;\n                fcn.0040ab40();\n                uVar1 = *0x5d3260;\n                *0x5d3264 = *0x626650;\n                *0x5d3260 = 1;\n                *(*0x20 + -0x60) = 0x43891b;\n                fcn.00441160(uVar1);\n                *(*(*(*(*0x20 + -0x18) + 0x30) + 0xa0) + 4) = 3;\n                *0x5d3264 = *0x5d3264 + -1;\n                *(*0x20 + -0x10) = *0x5d26f0;\n                *(*0x20 + -0x30) = *0x5d26f8;\n                uVar9 = *0x5d26f0;\n                uVar5 = *0x5d26f8;\n                for (iVar3 = 0; iVar3 < uVar5; iVar3 = iVar3 + 1) {\n                    iVar4 = *(uVar9 + iVar3 * 8);\n                    if (*(iVar4 + 4) == 2) {\n                        LOCK();\n                        bVar10 = *(iVar4 + 4) == 2;\n                        if (bVar10) {\n                            *(iVar4 + 4) = 3;\n                        }\n                        uVar8 = bVar10;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    unaff_RSI = uVar8;\n                    if (uVar8 != '\\0') {\n                        if (*0x5d8810 != '\\0') {\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x28) = iVar4;\n                            *(*0x20 + -0x60) = 0x4389b7;\n                            fcn.00452ca0(uVar9, uVar5, 3);\n                            *(*0x20 + -0x60) = 0x4389c5;\n                            fcn.00452520();\n                            uVar9 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x30);\n                            iVar4 = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x38);\n                        }\n                        *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n                        *0x5d3264 = *0x5d3264 + -1;\n                    }\n                }\n                while( true ) {\n                    *(*0x20 + -0x60) = 0x4389ff;\n                    iVar3 = fcn.00442120();\n                    if (iVar3 == 0) break;\n                    *(iVar3 + 4) = 3;\n                    *0x5d3264 = *0x5d3264 + -1;\n                }\n                *(*0x20 + -0x44) = *0x5d3264;\n                *(*0x20 + -0x60) = 0x438a1d;\n                fcn.0040ad60();\n                if (0 < *(*0x20 + -0x44)) {\n                    while( true ) {\n                        *(*0x20 + -0x60) = 0x438a3d;\n                        cVar2 = fcn.0040b2a0();\n                        if (cVar2 != '\\0') break;\n                        *(*0x20 + -0x60) = 0x438a2c;\n                        fcn.00441160();\n                    }\n                    *0x5d3268 = 0;\n                }\n                if (*0x5d3264 == 0) {\n                    iVar4 = 0;\n                    iVar3 = 0;\n                    uVar9 = 0;\n                    uVar5 = *0x5d26f0;\n                    uVar6 = *0x5d26f8;\n                    do {\n                        unaff_RSI = uVar9;\n                        if (uVar6 <= iVar4) {\ncode_r0x00438a7e:\n                            uVar6 = *0x62663c;\n                            uVar5 = uVar9;\n                            if (*0x62663c != 0) {\n                                *(*0x20 + -0x40) = iVar3;\n                                *(*0x20 + -0x20) = uVar9;\n                                *(*0x20 + -0x60) = 0x438aa5;\n                                fcn.0040ab40();\n                                *(*0x20 + -0x60) = 0x438ab3;\n                                fcn.0040ab40();\n                                iVar3 = *(*0x20 + -0x40);\n                                uVar5 = *(*0x20 + -0x20);\n                            }\n                            if (iVar3 == 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x60) = 0x438ada;\n                            iVar4 = fcn.00433ce0();\n                            uVar9 = unaff_RSI;\n                        }\n                        if (*(*(uVar5 + iVar4 * 8) + 4) != 3) {\n                            iVar3 = 0x2e;\n                            uVar9 = 0x4d1192;\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\n                iVar3 = 0x29;\n                uVar9 = 0x4d07a5;\n                goto code_r0x00438a7e;\n            }\n            *(*0x20 + -0x60) = 0x438b1a;\n            fcn.00433ce0();\n        }\n        *(puVar7 + -8) = 0x438b25;\n        fcn.0045c800();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1554
    },
    "0043ba00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043ba00(void)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar6;\n            iVar5 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar5) {\n                    return 0;\n                }\n                uVar11 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar11) * ZEXT816(uVar11 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar11;\n                uVar11 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                if (*0x5d2820 == 0) goto code_r0x0043bd52;\n                if (*0x5d2830 == 0) goto code_r0x0043bd4d;\n                uVar12 = (uVar11 & 0xffffffff) % (*0x5d2830 & 0xffffffff);\n                arg1 = *0x5d2830;\n                if (*0x5d2830 <= uVar12) break;\n                *(*0x20 + -0x50) = iVar5;\n                uVar1 = *(*0x5d2828 + uVar12 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x5d2820;\n                *(*0x20 + -0x20) = (uVar11 & 0xffffffff) % *0x5d2820;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar11 = uVar1 & 0xffffff00 | iVar5 == 3;\n                *(*0x20 + -0x5b) = iVar5 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x5d3260 != 0) {\n                        return 0;\n                    }\n                    uVar1 = *(*0x20 + -0x20);\n                    arg1 = *0x5d26f8;\n                    if (*0x5d26f8 <= uVar1) {\ncode_r0x0043bd3d:\n                        *(*0x20 + -0x80) = 0x43bd45;\n                        fcn.0045eee0(arg1);\n                        goto code_r0x0043bd45;\n                    }\n                    arg1 = *(*0x5d26f0 + uVar1 * 8);\n                    uVar12 = *0x5d26f0;\n                    if (uVar6 != arg1) {\n                        if (iVar5 != 3) {\n                            bVar13 = false;\ncode_r0x0043bba0:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x43bbc5;\n                                iVar3 = fcn.0043c8e0();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x0043bbe0:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x0043bbe0;\n                                }\n                                if (iVar5 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar3;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x43bc05;\n                                    iVar5 = fcn.00442680();\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar3 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar11 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x10);\n                                iVar5 = *(*0x20 + -0x50);\n                                in_RAX = iVar3;\n                            }\n                            uVar4 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x5d2758;\n                            if (uVar4 < *0x5d2758) {\n                                uVar1 = *(*0x5d2750 + uVar4 * 4);\n                                uVar12 = uVar1;\n                                if ((uVar1 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43bc92;\n                                    iVar5 = fcn.004429e0(uVar11);\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar5 = *(*0x20 + -0x50);\n                                    uVar11 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar6 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043bcbf;\n                            }\n                            goto code_r0x0043bd2d;\n                        }\n                        uVar12 = *0x5d2798;\n                        if (uVar1 >> 5 < *0x5d2798) {\n                            bVar13 = (*(*0x5d2790 + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0;\n                            goto code_r0x0043bba0;\n                        }\ncode_r0x0043bd35:\n                        *(*0x20 + -0x80) = 0x43bd3d;\n                        fcn.0045eee0(uVar12);\n                        goto code_r0x0043bd3d;\n                    }\ncode_r0x0043bcbf:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                    arg1 = uVar1;\n                    if (uVar1 == 0) {\n                        *(*0x20 + -0x80) = 0x43bd2d;\n                        fcn.00432260();\ncode_r0x0043bd2d:\n                        *(*0x20 + -0x80) = 0x43bd35;\n                        fcn.0045eee0(uVar12);\n                        goto code_r0x0043bd35;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\ncode_r0x0043bd45:\n            *(*0x20 + -0x80) = 0x43bd4d;\n            fcn.0045eee0(arg1);\ncode_r0x0043bd4d:\n            *(*0x20 + -0x80) = 0x43bd52;\n            fcn.00432260();\ncode_r0x0043bd52:\n            *(*0x20 + -0x80) = 0x43bd57;\n            in_RAX = fcn.00432260();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43bd65;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2186
    },
    "00446e80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446f53)\n// WARNING: Removing unreachable block (ram,0x00446f74)\n\nulong fcn.00446e80(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x626a7c + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x626a54) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x626a48);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x626a48;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x626a7c = *0x626a7c + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x626a78 == 0) {\n                    LOCK();\n                    *0x626a78 = 2;\ncode_r0x00446f98:\n                    LOCK();\n                    *0x626a7c = *0x626a7c + -1;\n                    return 1;\n                }\n                if (*0x626a78 == 1) {\n                    LOCK();\n                    *0x626a78 = 0;\n                    *(*0x20 + -0x20) = 0x446f91;\n                    fcn.0040ae40();\n                    goto code_r0x00446f98;\n                }\n                if (*0x626a78 == 2) goto code_r0x00446f98;\n                *(*0x20 + -0x20) = 0x446fc8;\n                fcn.00433ce0();\n                iVar3 = *0x626a7c;\n            }\n            *0x626a7c = iVar3;\n            *(*0x20 + -0x20) = 0x446fd2;\n            in_EAX = fcn.0045eee0(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x446fdc;\n        fcn.0045c800();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 766
    },
    "0044bec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044bec0(int64_t *param_1, ulong param_2, ulong param_3, int64_t *param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t **arg2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg1;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    int64_t *unaff_RBX;\n    uchar *puVar12;\n    ulong unaff_RBP;\n    int64_t *piVar13;\n    int64_t **arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x58) = in_RAX;\n            *(*0x20 + -0x118) = *0x20 + -8;\n            *(*0x20 + -0x110) = 0x44bf0f;\n            arg2 = fcn.0045f1b0();\n            unaff_RBP = *(*0x20 + -0x118);\n            while( true ) {\n                piVar7 = arg2[4];\n                piVar10 = arg2[3];\n                arg3 = arg2 + 3;\n                *(*0x20 + -0x60) = arg3;\n                if (1 < piVar7) break;\n                param_4 = arg2[1];\n                piVar11 = arg2[2];\n                if (param_4 == NULL) {\n                    if (piVar7 == NULL) {\n                        return 0;\n                    }\n                    if (piVar7 == 0x1) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44c34f;\n                        uVar8 = fcn.0045f51a();\n                        *(uVar8 + 0x20) = 0;\n                        *(uVar8 + 0x28) = 2;\n                        if (*0x626890 == 0) {\n                            *(uVar8 + 0x18) = uVar8 + 0x30;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x44c385;\n                            uVar8 = fcn.0045eb60(param_1, uVar8 + 0x30, arg3, param_4);\n                        }\n                        goto code_r0x0044c4de;\n                    }\n                    break;\n                }\n                param_1 = **arg2;\n                arg2[1] = param_4 + -1;\n                arg2[2] = piVar11 + -1;\n                piVar10 = (-(piVar11 + -1) >> 0x3f & 8) + *arg2;\n                if (*0x626890 == 0) {\n                    *arg2 = piVar10;\n                }\n                else {\n                    *(*0x20 + -0x110) = 0x44bf85;\n                    fcn.0045eb60(param_1, piVar10, arg3, param_4);\n                }\n                *(*0x20 + -200) = param_1;\n                *(*0x20 + -0x110) = 0x44bf92;\n                iVar3 = fcn.0044d780();\n                if (iVar3 == 0) {\n                    if (*0x5d1cf8 == 0) {\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44bfbc;\n                        uVar4 = fcn.0044c5a0();\n                        iVar3 = *(*0x20 + 0x58);\n                        piVar7 = *(iVar3 + 0x20);\n                        piVar10 = piVar7 + unaff_RBX;\n                        *(*0x20 + -0x98) = piVar10;\n                        iVar5 = *(iVar3 + 0x18);\n                        piVar11 = piVar7;\n                        param_1 = unaff_RBX;\n                        piVar13 = *(iVar3 + 0x28);\n                        if (*(iVar3 + 0x28) < piVar10) {\n                            *(*0x20 + -0xa0) = unaff_RBX;\n                            *(*0x20 + -0x68) = uVar4;\n                            *(*0x20 + -0xa8) = piVar7;\n                            *(*0x20 + -0x110) = 0x44c005;\n                            iVar5 = fcn.00447240(piVar7);\n                            piVar11 = *(*0x20 + -0xa8);\n                            param_1 = *(*0x20 + -0xa0);\n                            piVar10 = *(*0x20 + -0x98);\n                            piVar13 = piVar7;\n                        }\n                        unaff_RBX = param_1;\n                        if (piVar10 < piVar11) goto code_r0x0044c56f;\n                        *(*0x20 + -0xa0) = piVar13;\n                        *(*0x20 + -0x70) = iVar5;\n                        param_4 = piVar11 * 0x50;\n                        unaff_RBX = (piVar11 - piVar13 >> 0x3f & param_4) + iVar5;\n                        *(*0x20 + -0x110) = 0x44c073;\n                        fcn.00411cc0(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[4] = *(*0x20 + -0x98);\n                        arg2[5] = *(*0x20 + -0xa0);\n                        if (*0x626890 == 0) {\n                            arg2[3] = *(*0x20 + -0x70);\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x44c0bf;\n                            arg2 = fcn.0045eb60(param_1, *(*0x20 + -0x70), iVar5, param_4);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x80) = iVar3;\n                    *(*0x20 + -0x110) = 0x44c0dc;\n                    uVar4 = fcn.0044d680();\n                    *(*0x20 + -0xb8) = uVar4;\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x110) = 0x44c0f6;\n                    uVar6 = fcn.0044df00();\n                    uVar9 = *(*0x20 + -200);\n                    uVar8 = *(*0x20 + -0xb8);\n                    if (uVar8 < uVar9) {\n                        uVar9 = uVar9 - 1;\n                    }\n                    iVar3 = *(*0x20 + -0x80);\n                    if (*(iVar3 + 0x27) < 4) {\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar3 + *(iVar3 + 0x1c) * 4 + 0x34);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = uVar1 + unaff_RBX[0x26] & (uVar1 == 0xffffffff) - 1;\n                    }\n                    iVar5 = iVar3;\n                    if (param_4 != NULL) {\n                        *(*0x20 + -0x90) = param_4;\n                        *(*0x20 + -0xc0) = uVar4;\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -200) = uVar9;\n                        piVar10 = NULL;\n                        *(*0x20 + -0x110) = 0x44c199;\n                        iVar2 = fcn.0044e640(2);\n                        if (iVar2 < 0) {\n                            iVar3 = *(*0x20 + -0x80);\n                            uVar4 = *(*0x20 + -0xc0);\n                        }\n                        else {\n                            if (0xfffff < iVar2) goto code_r0x0044c565;\n                            uVar1 = *(*(*0x20 + -0x90) + 0xc + iVar2 * 0x14);\n                            uVar4 = *(*0x20 + -0x78);\n                            *(*0x20 + -0x110) = 0x44c1ee;\n                            fcn.0044e060(uVar1);\n                            iVar3 = 0;\n                        }\n                        uVar8 = *(*0x20 + -0xb8);\n                        uVar9 = *(*0x20 + -200);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        iVar5 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x118) = unaff_RBP;\n                    *(*0x20 + -0x110) = 0x44c22f;\n                    uVar6 = fcn.0045f1b0();\n                    unaff_RBP = *(*0x20 + -0x118);\n                    *(*0x20 + -0x58) = uVar9;\n                    *(*0x20 + -0x50) = iVar3;\n                    *(*0x20 + -0x48) = uVar6;\n                    *(*0x20 + -0x40) = uVar4;\n                    *(*0x20 + -0x20) = uVar8;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    arg2 = *(*0x20 + 0x58);\n                    param_1 = arg2[4];\n                    piVar10 = arg2[3];\n                    piVar7 = piVar10;\n                    if (arg2[5] < param_1 + 1U) {\n                        *(*0x20 + -0x110) = 0x44c294;\n                        piVar7 = fcn.00447240(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[5] = param_1;\n                        if (*0x626890 == 0) {\n                            arg2[3] = piVar7;\n                            param_1 = piVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x44c2bc;\n                            piVar7 = fcn.0045ea40(param_1, arg2, uVar9, param_4);\n                            param_1 = piVar10;\n                        }\n                    }\n                    arg2[4] = param_1 + 1;\n                    unaff_RBX = piVar7 + param_1 * 10;\n                    if (*0x626890 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44c2f6;\n                        fcn.0045f51a();\n                        unaff_RBP = *(*0x20 + -0x118);\n                        unaff_RBX = piVar7;\n                    }\n                    else {\n                        param_1 = *0x20 + -0x58;\n                        *(*0x20 + -0x110) = 0x44c313;\n                        fcn.00411b00(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                }\n            }\n            if (piVar7 == 0x2) {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x44c3cf;\n                iVar3 = fcn.0045f51a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(iVar3 + 0x20);\n                if (1 < uVar9) {\n                    arg1 = *(iVar3 + 0x18) + 0x50;\n                    if (*0x626890 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44c40f;\n                        uVar8 = fcn.0045f51a();\n                        arg1 = uVar9;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44c427;\n                        fcn.00411b00(arg1);\n                        uVar8 = *(*0x20 + 0x58);\n                        arg3 = *(*0x20 + -0x60);\n                    }\n                    *(uVar8 + 0x20) = 1;\n                    *(uVar8 + 0x28) = 2;\n                    if (*0x626890 == 0) {\n                        *(uVar8 + 0x18) = uVar8 + 0x30;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44c465;\n                        uVar8 = fcn.0045eb60(arg1, uVar8 + 0x30, arg3, param_4);\n                    }\ncode_r0x0044c4de:\n                    iVar3 = *(uVar8 + 0x20);\n                    if (*(*0x20 + 0x48) != 0) {\n                        *(*0x20 + -0xb0) = iVar3;\n                        uVar4 = *(*0x20 + 0x50);\n                        uVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x110) = 0x44c516;\n                        uVar8 = fcn.0044e220(uVar6);\n                        *(*0x20 + 0x28) = uVar8;\n                        *(*0x20 + 0x30) = uVar4;\n                        *(*0x20 + 0x38) = uVar6;\n                        iVar3 = *(*0x20 + -0xb0);\n                    }\n                    return uVar8 & 0xffffffffffffff00 | iVar3 != 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x44c48f;\n                uVar8 = fcn.0045f51a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(uVar8 + 0x20);\n                param_4 = *(uVar8 + 0x28);\n                if (uVar9 != 0) {\n                    *(uVar8 + 0x20) = uVar9 - 1;\n                    *(uVar8 + 0x28) = param_4 + -1;\n                    iVar3 = *(uVar8 + 0x18) + (-(param_4 + -1) >> 0x3f & 0x50);\n                    if (*0x626890 == 0) {\n                        *(uVar8 + 0x18) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44c4de;\n                        uVar8 = fcn.0045eb60(uVar9, iVar3, arg3, param_4);\n                    }\n                    goto code_r0x0044c4de;\n                }\n                *(*0x20 + -0x110) = 0x44c556;\n                fcn.0045efa0(0);\n            }\n            *(*0x20 + -0x110) = 0x44c565;\n            fcn.0045eee0(uVar9);\ncode_r0x0044c565:\n            *(*0x20 + -0x110) = 0x44c56f;\n            fcn.0045eee0(0x100000);\ncode_r0x0044c56f:\n            param_1 = piVar10;\n            *(*0x20 + -0x110) = 0x44c57a;\n            in_RAX = fcn.0045efa0(param_1);\n        }\n        *(puVar12 + 0x58) = in_RAX;\n        *(puVar12 + -8) = 0x44c585;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 0x58);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3813
    },
    "0044d3c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.0044d3c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    uint *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x90) = 0x44d3f0;\n            puVar3 = fcn.0044d780();\n            if (puVar3 == NULL) {\n                return NULL;\n            }\n            if (*(puVar3 + 0x27) < 4) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = puVar3[puVar3[7] + 0xd] + *(unaff_RBX + 0x130) & (puVar3[puVar3[7] + 0xd] == 0xffffffff) - 1;\n            }\n            if (uVar7 == 0) {\n                return puVar3;\n            }\n            *(*0x20 + -0x30) = uVar7;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x90) = 0x44d45c;\n            iVar2 = fcn.0044e640(2);\n            if (iVar2 < 0) {\n                return *(*0x20 + -0x10);\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                uVar6 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44d493;\n                uVar4 = fcn.0044e060(uVar1);\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x48) = uVar6;\n                uVar6 = *(*0x20 + -0x38);\n                uVar4 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44d4b7;\n                uVar5 = fcn.0044e220(uVar6);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x40) = uVar4;\n                *(*0x20 + -0x54) = uVar6;\n                *(*0x20 + -0x90) = 0x44d4d8;\n                uVar6 = fcn.0044d2a0();\n                *(*0x20 + -0x50) = uVar6;\n                *(*0x20 + -0x90) = 0x44d4e9;\n                puVar3 = fcn.0040cc20();\n                *puVar3 = 0xffffffff;\n                *(puVar3 + 2) = *(*0x20 + -0x50);\n                *(puVar3 + 6) = *(*0x20 + -0x48);\n                if (*0x626890 == 0) {\n                    *(puVar3 + 4) = *(*0x20 + -0x28);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44d525;\n                    puVar3 = fcn.0045eb40(*(*0x20 + -0x28));\n                }\n                *(puVar3 + 10) = *(*0x20 + -0x40);\n                if (*0x626890 == 0) {\n                    *(puVar3 + 8) = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44d550;\n                    puVar3 = fcn.0045eb40();\n                }\n                *(puVar3 + 0xc) = *(*0x20 + -0x54);\n                return puVar3;\n            }\n            *(*0x20 + -0x90) = 0x44d59d;\n            in_RAX = fcn.0045eee0(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x44d5a8;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1172
    },
    "00450000": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450000(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0045011a:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x004501f4:\n                        fcn.00451420();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.0044f2c0();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.00451420();\n                            }\n                            goto code_r0x0045002b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x004501ed:\n                    fcn.00451420();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0045002b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x004501ed;\n                goto code_r0x004501f4;\n            }\n            if (uVar1 == 6) {\n                fcn.0045c6c0();\n                goto code_r0x0045011a;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x004501ed;\n                fcn.00451420();\n                goto code_r0x0045011a;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.0044f2c0();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.00451420();\n        }\ncode_r0x0045002b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 697
    },
    "00450260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450260(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1210) == 0) || (unaff_RBX < *(in_RAX + 0x1210))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1210) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar2 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2288);\n                if (arg1_00 <= noname_0) {\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x88) = 0x450565;\n                        fcn.004505c0(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x00450585;\n                arg1_00 = *(*(in_RAX + 0x2280) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar2;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x004504ae:\n                            *(*0x20 + -0x88) = 0x4504b3;\n                            fcn.00451420();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            arg1 = *(*0x20 + -0x40);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x004504ae;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x450355;\n                            iVar2 = fcn.0044f720(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar2;\n                                *(*0x20 + -0x88) = 0x45037d;\n                                fcn.00451420();\n                                iVar2 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                            noname_0 = iVar2 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x004504ae;\n                    if (uVar1 != 6) goto code_r0x004504da;\n                    *(*0x20 + -0x80) = 0x4d2ae8;\n                    *(*0x20 + -0x88) = 0x450515;\n                    fcn.0045c6c0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x30) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    if (uVar1 == *(arg1_00 + 8)) {\n                        *(arg1_00 + 8) = 9;\n                        iVar2 = arg1_00[7];\n                        arg1_00[1] = iVar2;\n                        *(*0x20 + -0x88) = 0x450406;\n                        iVar3 = fcn.0044f720(noname_0, iVar2);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x38) < arg1) {\n                            *(*0x20 + -0x28) = iVar3;\n                            iVar3 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x88) = 0x450438;\n                            iVar2 = fcn.00447240(unaff_RBX);\n                            arg1 = iVar3 + 1;\n                            iVar3 = *(*0x20 + -0x28);\n                            uVar4 = *(*0x20 + -0x40);\n                        }\n                        else {\n                            iVar2 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x38);\n                        }\n                        if (*0x626890 == 0) {\n                            *(iVar2 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x88) = 0x450474;\n                            iVar3 = fcn.0045ebe0(unaff_RBX, iVar2, iVar2 + uVar4 * 8);\n                        }\n                        noname_0 = iVar3 + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x004504ae;\ncode_r0x004504da:\n                    *(*0x20 + -0x88) = 0x4504df;\n                    fcn.00451420();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x450585;\n            fcn.00433ce0();\ncode_r0x00450585:\n            *(*0x20 + -0x88) = 0x450590;\n            in_RAX = fcn.0045eee0(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x4505a5;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1966
    },
    "004506a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004506a0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x004506a0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x004506c7:\n        arg1 = *(in_RAX + 0x2288);\n        if (arg1 == 0) goto code_r0x0045092e;\n        arg2 = **(in_RAX + 0x2280);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x45092e;\n            fcn.00433ce0();\n            goto code_r0x0045092e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x004508c2:\n                    *(*0x20 + -0x30) = 0x4508c7;\n                    fcn.00451420();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x004508d1;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x4508f3;\n                    fcn.00450960(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x004506c7;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x450785;\n                    fcn.0044f940(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x4507a9;\n                        fcn.00451420();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                    if (*(in_RAX + 0x2288) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x004508d1;\n                }\n                goto code_r0x004506c7;\n            }\ncode_r0x004508b0:\n            *(*0x20 + -0x30) = 0x4508b5;\n            fcn.00451420();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x004508b0;\n                goto code_r0x004508c2;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x4d2ae8;\n                *(*0x20 + -0x30) = 0x45088b;\n                fcn.0045c6c0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x004508d1;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x004508b0;\n                *(*0x20 + -0x30) = 0x45086f;\n                fcn.00451420();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x004508d1;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x004506c7;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x450825;\n            fcn.0044f940(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x450834;\n            fcn.0044f2c0();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x450854;\n                fcn.00451420();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x004508d1:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x004506c7;\n    }\n    goto code_r0x00450936;\ncode_r0x0045092e:\n    *(*0x20 + -0x30) = 0x450935;\n    in_RAX = fcn.0045eee0(arg1);\ncode_r0x00450936:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x450945;\n    fcn.00460f20();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x004506a0;\n}\n",
        "token_count": 1526
    },
    "00450b00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450b00(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x00450b00:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1210) = 0;\n        piVar5 = *(in_RAX + 0x2280);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x00450da9;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x626890 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x450d27;\n                        in_RAX = fcn.0045eb80(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x229c;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x2298;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x2288) = arg1_00;\n                    *(in_RAX + 0x2290) = arg2;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + 0x2280) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x450d77;\n                        in_RAX = fcn.0045eba0(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1208) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1208) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x450da9;\n                arg1 = arg1_00;\n                fcn.0045ef60(arg1_00, arg2);\ncode_r0x00450da9:\n                *(*0x20 + -0x68) = 0x450db1;\n                fcn.0045eee0(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x00450db4:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x00450f70;\n                                if (*0x626890 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x450bb7;\n                                    puVar3 = in_R10;\n                                    fcn.0045ebe0(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x450bc8;\n                                fcn.00451080(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x00450b58;\n                        }\ncode_r0x00450f2b:\n                        *(*0x20 + -0x68) = 0x450f30;\n                        fcn.00451420();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x00450eee:\n                        *(*0x20 + -0x68) = 0x450ef3;\n                        fcn.00451420();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x450c1c;\n                                fcn.00451420();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x00450b58;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x00450eee;\n                    goto code_r0x00450f2b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x4d2ae8;\n                    *(*0x20 + -0x68) = 0x450e9c;\n                    fcn.0045c6c0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x00450db4;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x00450eee;\n                    *(*0x20 + -0x68) = 0x450e54;\n                    fcn.00451420();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x00450db4;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x00450f68;\n            if (*0x626890 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x450c87;\n                fcn.0045ebe0(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x450c98;\n            fcn.00451080(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x450cb8;\n                fcn.00451420();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x00450b58:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x00450f79;\ncode_r0x00450f68:\n    *(*0x20 + -0x68) = 0x450f70;\n    fcn.0045eee0(arg1);\ncode_r0x00450f70:\n    *(*0x20 + -0x68) = 0x450f78;\n    in_RAX = fcn.0045eee0(arg1);\ncode_r0x00450f79:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x450f85;\n    fcn.0045c800();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x00450b00;\n}\n",
        "token_count": 3274
    },
    "00451760": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451760(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    code *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t uVar7;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                *(*0x20 + -0x60) = 0x4517d0;\n                iVar1 = fcn.00451e20();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x4517e6;\n            fcn.0045e8c0(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x20);\n            uVar2 = (*(*0x20 + -0x58) >> 6) - *(uVar4 + 8);\n            unaff_RBX = *(*0x20 + -0x58) >> 6;\n            if (uVar2 == 0) {\n                unaff_RBX = *(uVar4 + 8) + 1;\n            }\n            *(uVar4 + 8) = unaff_RBX;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            uVar7 = *(*0x20 + 0x30);\n            if (uVar7 < 0) {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5;\n            }\n            else {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar4 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar4 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar4 + 0x10) + 1;\n                *(uVar4 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x004518a0;\n                }\n                unaff_RBX = NULL;\ncode_r0x00451b20:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar4 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar4 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar4 + in_R10 + 0x418;\ncode_r0x004518a0:\n                        uVar9 = *(uVar4 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x00451af2;\n                            *(uVar4 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar4 + 0x418 + uVar9) = uVar2;\n                            *(uVar4 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar5) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar4 + 0x10);\n                                    goto code_r0x00451aaf;\n                                }\n                                if (uVar7 != 0) {\n                                    if (uVar7 < 1) goto code_r0x00451982;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar4 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x451977;\n                                    uVar2 = fcn.00451c00(0x80);\n                                    uVar4 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar4 + 0x10);\n                                    goto code_r0x004519d1;\n                                }\n                                uVar5 = *(uVar4 + 0x10);\n                                uVar2 = 0;\ncode_r0x00451a49:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar5) goto code_r0x00451a89;\ncode_r0x00451a32:\n                                    *(uVar4 + 0x418 + uVar5) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar5 = uVar5 + 1;\n                                    uVar7 = uVar2;\n                                    goto code_r0x00451a49;\n                                }\n                                if (uVar5 < 0xfbe8) {\n                                    *(uVar4 + 0x418 + uVar5) = uVar2;\n                                    *(uVar4 + 0x10) = uVar5 + 1;\ncode_r0x00451982:\n                                    while( true ) {\n                                        iVar3 = *(uVar4 + 0x10) - arg3;\n                                        uVar4 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar4) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x4519b9;\n                                        uVar2 = fcn.00433ce0();\n                                        while( true ) {\n                                            *(uVar4 + 0x418 + arg3) = uVar2 | 0x80;\n                                            uVar2 = uVar2 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x004519d1:\n                                            if (uVar2 < 0x80) break;\n                                            uVar5 = uVar4;\n                                            if (0xfbe7 < arg3) goto code_r0x00451a25;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar4 + 0x418 + arg3) = uVar2;\n                                        *(uVar4 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x451a25;\n                                    fcn.0045eee0(0xfbe8);\n                                    uVar5 = uVar4;\ncode_r0x00451a25:\n                                    uVar4 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x451a32;\n                                    uVar2 = fcn.0045eee0(0xfbe8);\n                                    goto code_r0x00451a32;\n                                }\n                                *(*0x20 + -0x60) = 0x451a89;\n                                fcn.0045eee0(0xfbe8);\ncode_r0x00451a89:\n                                uVar4 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x451a96;\n                                iVar3 = fcn.0045eee0(0xfbe8);\n                                while( true ) {\n                                    *(uVar4 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x00451aaf:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x00451ad8;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x00451acb;\n                                *(uVar4 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar4 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x00451ae5;\n                    }\n                    *(*0x20 + -0x60) = 0x451b6a;\n                    fcn.0045eee0(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x00451aff;\n                *(*0x20 + -0x60) = 0x451b77;\n                fcn.0045eee0(0xfbe8);\n            }\n            unaff_SIL = uVar7;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x451b85;\n            in_RAX = fcn.0045eee0(0xfbe8);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        puVar6[0x28] = unaff_SIL;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + 0x40) = in_R10;\n        *(puVar6 + 0x48) = in_R11;\n        *(puVar6 + -8) = 0x451bb7;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_SIL = puVar6[0x28];\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        in_R10 = *(puVar6 + 0x40);\n        in_R11 = *(puVar6 + 0x48);\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x00451acb:\n    *(*0x20 + -0x60) = 0x451ad8;\n    fcn.0045eee0(0xfbe8);\ncode_r0x00451ad8:\n    *(*0x20 + -0x60) = 0x451ae5;\n    fcn.0045eee0(0xfbe8);\ncode_r0x00451ae5:\n    *(*0x20 + -0x60) = 0x451af2;\n    fcn.0045eee0(0xfbe8);\ncode_r0x00451af2:\n    uVar4 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x451aff;\n    uVar2 = fcn.0045eee0(0xfbe8);\ncode_r0x00451aff:\n    *(uVar4 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x00451b20;\n}\n",
        "token_count": 3141
    },
    "00452f20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.00452f20(uchar *arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    ulong uVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uchar uVar15;\n    ulong *unaff_RBX;\n    uint64_t uVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uchar *puVar18;\n    int64_t *piVar19;\n    uint64_t uVar20;\n    code **ppcVar21;\n    uchar *in_R10;\n    uint8_t uVar22;\n    uint64_t in_R11;\n    uint64_t uVar23;\n    uchar *unaff_R14;\n    bool bVar24;\n    uchar in_XMM15 [16];\n    \ncode_r0x00452f20:\n    puVar17 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x2e0 && *0x20 + -0x2e0 != *(unaff_R14 + 0x10)) {\n        puVar17 = *0x20 + -0x360;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) != unaff_R14)) {\n                uVar14 = *0x55c288 >> 2;\n                if (*(*(unaff_R14 + 0x30) + 0xf9) != 0) {\n                    uVar14 = *(*(unaff_R14 + 0x30) + 0xf9);\n                }\n                if ((in_RAX == -1) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = *(unaff_RDI + 0x70);\n                    if (unaff_RBX == NULL) {\n                        in_RAX = *(unaff_RDI + 0x40);\n                        unaff_RBX = *(unaff_RDI + 0x38);\n                        uVar10 = *(unaff_RDI + 0x50);\n                    }\n                    else {\n                        in_RAX = *(unaff_RDI + 0x78);\n                        uVar10 = 0;\n                    }\n                }\n                else {\n                    uVar10 = 0;\n                }\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x452fef;\n                iVar6 = fcn.0045f1b0();\n                unaff_RBP = *(*0x20 + -0x370);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                uVar23 = *(iVar6 + 0x150);\n                iVar9 = *(iVar6 + 0x158);\n                if (arg3 == 0) {\n                    puVar18 = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    puVar18 = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x240) = in_RAX;\n                *(*0x20 + -0x248) = unaff_RBX;\n                *(*0x20 + -0x332) = puVar18;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar6;\n                *(*0x20 + -0x2c0) = iVar9;\n                *(*0x20 + -0xb0) = uVar23;\n                *(*0x20 + -0xb8) = uVar10;\n                *(*0x20 + -0x324) = uVar14;\n                if (in_RAX == 0) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x248) + 8;\n                }\n                *(*0x20 + -0x368) = 0x4530b3;\n                iVar6 = fcn.0044d780();\n                if (iVar6 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (puVar13 = in_R10,  puVar2 = arg1,  *(*0x20 + -0x332) != '\\0')) {\n                        *(*0x20 + -0x240) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x368) = 0x453170;\n                        fcn.00435480();\n                        *(*0x20 + -0x368) = 0x453185;\n                        fcn.00435d80();\n                        *(*0x20 + -0x368) = 0x453192;\n                        fcn.00435be0();\n                        *(*0x20 + -0x368) = 0x453197;\n                        fcn.004356e0();\n                        *(*0x20 + -0x368) = 0x45319c;\n                        fcn.00435500();\n                        arg1 = *0x20 + -0x60;\n                        puVar18 = NULL;\n                        *(*0x20 + -0x368) = 0x4531ba;\n                        fcn.00456880(arg1);\n                        puVar13 = in_R10;\n                        puVar2 = *(*0x20 + 0x48);\n                    }\n                    if (puVar2 == NULL) {\n                        return NULL;\n                    }\n                    uVar16 = 10;\n                    *(*0x20 + -0x368) = 0x4531ef;\n                    fcn.00433ce0();\n                    goto code_r0x004531ef;\n                }\n                *(*0x20 + -0x60) = iVar6;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x4530ef;\n                fcn.0045f174();\n                unaff_RBP = *(*0x20 + -0x370);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -0x240);\n                in_R10 = *(*0x20 + -0x248);\n                in_R11 = *(*0x20 + 0x30);\n                uVar23 = *(*0x20 + -0xb0);\n                iVar9 = *(*0x20 + -0x2c0);\n                arg3 = *(*0x20 + -0xb8);\n                puVar13 = NULL;\n                uVar10 = 0;\n                uVar16 = 0;\n                unaff_RDI = NULL;\ncode_r0x0045326f:\n                puVar18 = unaff_RDI;\n                if (puVar13 < unaff_RSI) {\n                    *(*0x20 + -0x250) = in_R11;\n                    iVar6 = *(*0x20 + -0x60);\n                    if (*(iVar6 + 0x10) != 0) {\n                        *(*0x20 + -0x78) = iVar6;\n                        *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                        uVar22 = *(iVar6 + 0x25);\n                        cVar4 = *(iVar6 + 0x24);\n                        if (cVar4 == '\\x04') {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (*(arg1 + 0x78) == arg4))\n                           && (*(arg1 + 0x70) == in_R10)) {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        *(*0x20 + -0x2e8) = puVar13;\n                        *(*0x20 + -0x300) = unaff_RDI;\n                        *(*0x20 + -0x331) = uVar16;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x333) = uVar10;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (**(arg1 + 0x30) != arg1)) ||\n                               (uVar10 = (*(arg1 + 0x30))[0x12],  uVar10 == 0)) {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else if (cVar4 == '\\f') {\n                                *(*0x20 + -0x50) = *(uVar10 + 0x40);\n                                *(*0x20 + -0x368) = 0x4533da;\n                                iVar6 = fcn.0044d780();\n                                *(*0x20 + -0x60) = iVar6;\n                                *(*0x20 + -0x58) = uVar16;\n                                uVar22 = *(iVar6 + 0x25);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar9 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                uVar23 = *(iVar9 + 0x150);\n                                iVar9 = *(iVar9 + 0x158);\n                            }\n                            else if (cVar4 == '\\x13') {\n                                *(*0x20 + -0x38) = *(uVar10 + 0x38);\n                                uVar23 = *(*(*(arg1 + 0x30) + 0x90) + 0x150);\n                                iVar9 = *(*(*(arg1 + 0x30) + 0x90) + 0x158);\n                                uVar22 = uVar22 & 0xfd;\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            *(*0x20 + -0x2c0) = iVar9;\n                            *(*0x20 + -0xb0) = uVar23;\n                            *(*0x20 + -200) = uVar16;\n                            *(*0x20 + -0xc0) = iVar6;\n                            *(*0x20 + -0x330) = uVar22;\n                            *(*0x20 + -0x368) = 0x4534bd;\n                            iVar5 = fcn.0044e3a0(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38) + 8;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -0x240);\n                            in_R10 = *(*0x20 + -0x248);\n                            uVar22 = *(*0x20 + -0x330);\n                            iVar6 = *(*0x20 + -0xc0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -200) = *(*0x20 + -0x80);\n                            iVar6 = *(*0x20 + -0x78);\n                        }\n                        *(*0x20 + -0x2c0) = iVar9;\n                        *(*0x20 + -0xb0) = uVar23;\n                        *(*0x20 + -0xc0) = iVar6;\n                        if ((uVar22 & 1) == 0) {\n                            if ((uVar22 & 2) == 0) {\ncode_r0x004535d4:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2e0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x298) = puVar13;\n                                    *(*0x20 + -0x2e0) = 0;\n                                }\n                                *(*0x20 + -0x368) = 0x453625;\n                                iVar7 = fcn.0044d780();\n                                if (iVar7 == 0) {\n                                    arg4 = *(*0x20 + -0x332);\n                                    if (*(*0x20 + -0x332) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (*(*(arg1 + 0x30) + 0xe8) == '\\0') {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (in_R10[0x24] == '\\x12') {\n                                                arg4 = 0;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar16;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != 0) || (uVar10 = in_R11,  arg4 != '\\0')) {\n                                        uVar8 = *(*0x20 + -200);\n                                        *(*0x20 + -0x368) = 0x4536dd;\n                                        uVar11 = fcn.0044df00();\n                                        *(*0x20 + -0xa0) = uVar11;\n                                        *(*0x20 + -600) = uVar8;\n                                        *(*0x20 + -0x260) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x368) = 0x453705;\n                                        fcn.00435480();\n                                        *(*0x20 + -0x368) = 0x453716;\n                                        fcn.00435d80();\n                                        *(*0x20 + -0x368) = 0x45372b;\n                                        fcn.00435d80();\n                                        *(*0x20 + -0x368) = 0x45373c;\n                                        fcn.00435d80();\n                                        *(*0x20 + -0x368) = 0x453749;\n                                        fcn.00435be0();\n                                        *(*0x20 + -0x368) = 0x45374e;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x368) = 0x453753;\n                                        fcn.00435500();\n                                        unaff_RDI = *(*0x20 + -0x2e0);\n                                        *(*0x20 + -0x368) = 0x453777;\n                                        fcn.00456880(*0x20 + -0x60);\n                                        iVar7 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar16 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        uVar10 = *(*0x20 + 0x48);\n                                    }\n                                    if (uVar10 != 0) goto code_r0x00454945;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                uVar10 = *(*0x20 + -0x333);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0xe8) = iVar7;\n                                *(*0x20 + -0xf0) = uVar16;\n                                uVar8 = *(*0x20 + -0x2e8);\n                                uVar16 = *(*0x20 + -0x331);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != 0) {\n                                    if (puVar13 < 1) goto code_r0x004535d4;\n                                    if (in_R11 != 0) goto code_r0x00454956;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2a0) = puVar13;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar8 = *(*0x20 + -0x2a0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2a8) = uVar8;\n                            *(*0x20 + -0xd0) = *(*0x20 + -0xf0);\n                            puVar13 = *(*0x20 + -0x2a8);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0xd0) = 0;\n                            arg3 = 0;\n                        }\n                        iVar7 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar7;\n                        *(*0x20 + -0x28) = iVar7 - 8U;\n                        if (*(*0x20 + -0x38) < iVar7 - 8U) {\n                            *(*0x20 + -0x28) = iVar7 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        ppcVar21 = *(*0x20 + 0x48);\n                        if (ppcVar21 == NULL) {\n                            in_R10 = *(*0x20 + -0x332);\n                            if (*(*0x20 + -0x332) != 0) goto code_r0x0045389f;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x332);\ncode_r0x0045389f:\n                            *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                            if (ppcVar21 == NULL) {\n                                bVar24 = false;\n                            }\n                            else {\n                                bVar24 = *(iVar6 + 8) == -0x80000000;\n                            }\n                            *(*0x20 + -0x18) = *(iVar6 + 8);\n                            *(*0x20 + -0x10) = 0;\n                            if (bVar24) {\n                                *(*0x20 + -0x368) = 0x453907;\n                                uVar8 = fcn.00454fc0(*(*0x20 + -200));\n                                *(*0x20 + -0x18) = uVar8;\n                                *(*0x20 + -0x10) = iVar6;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                ppcVar21 = *(*0x20 + 0x48);\n                                in_R10 = *(*0x20 + -0x332);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (uVar10 == '\\0') {\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else if (*(*(*0x20 + -0x60) + 0xc) == 0) {\n                            *(*0x20 + -0x48) = 0;\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else {\n                            *(*0x20 + -0x368) = 0x4539bb;\n                            iVar9 = fcn.0044d2a0();\n                            *(*0x20 + -0x48) = *(*(*0x20 + -0x60) + 0xc) + iVar9 + 1;\n                            bVar24 = *(*0x20 + 0x48) == 0;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        if (bVar24) {\n                            in_R11 = *(*0x20 + 0x38);\n                            uVar20 = in_R11;\n                        }\n                        else {\n                            pcVar3 = *ppcVar21;\n                            *(*0x20 + -0x368) = 0x453a62;\n                            cVar4 = (*pcVar3)();\n                            if (cVar4 == '\\0') {\n                                return *(*0x20 + -0x2e8);\n                            }\n                            uVar20 = *(*0x20 + 0x38);\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        puVar18 = unaff_RDI;\n                        if (uVar20 == 0) goto code_r0x00453c76;\n                        iVar9 = *(*0x20 + -0x50);\n                        if (((puVar13 != NULL) || ((*(*0x20 + 8) >> 1 & 1) == 0)) && (uVar10 == '\\0')) {\n                            *(*0x20 + -0x308) = iVar9;\n                            *(*0x20 + -0x368) = 0x453b1e;\n                            iVar9 = fcn.0044d2a0();\n                            if (iVar9 != *(*0x20 + -0x308)) {\n                                iVar9 = *(*0x20 + -0x308) + -1;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                in_R10 = *(*0x20 + -0x332);\n                                in_R11 = *(*0x20 + 0x38);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar7 = *(*0x20 + -0x308);\n                                goto code_r0x00453bd8;\n                            }\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            iVar9 = *(*0x20 + -0x308);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                        }\n                        iVar7 = iVar9 + 1;\ncode_r0x00453bd8:\n                        uVar15 = uVar16;\n                        *(*0x20 + -0x310) = iVar9;\n                        if (*(iVar6 + 0x27) < 4) {\n                            *(*0x20 + -0x2b0) = puVar13;\n                            *(*0x20 + -0x108) = 0;\n                            puVar13 = *(*0x20 + -0x2b0);\n                        }\n                        else {\n                            uVar14 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                            in_R10 = *(*0x20 + -0x332);\n                            *(*0x20 + -0x108) = uVar14 + *(*(*0x20 + -200) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                        }\n                        arg4 = *(*0x20 + -0x108);\n                        if (arg4 != 0) goto code_r0x00454739;\n                        arg4 = *(*0x20 + -0x250);\n                        do {\n                            if (((*(iVar6 + 0x24) != '\\x15') || (cVar4 = uVar16,  cVar4 == '\\t')) ||\n                               ((cVar4 == '\\x12' || (cVar4 == '\\x0e')))) {\n                                if (arg4 < 1) {\n                                    if (puVar13 < unaff_RSI) {\n                                        if (0xfffff < puVar13) {\n                                            *(*0x20 + -0x368) = 0x45492f;\n                                            fcn.0045eee0(0x100000);\ncode_r0x0045492f:\n                                            *(*0x20 + -0x368) = 0x454939;\n                                            fcn.0045eee0(0x100000);\ncode_r0x00454939:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x368) = 0x454945;\n                                            fcn.0045eee0(0x100000);\n                                            goto code_r0x00454945;\n                                        }\n                                        *(in_R11 + puVar13 * 8) = iVar7;\n                                        puVar13 = puVar13 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 - 1;\n                                }\n                            }\n                            uVar16 = *(iVar6 + 0x24);\n                            puVar13 = puVar13 + -1;\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            *(*0x20 + -0x250) = arg4;\n                            ppcVar21 = *(*0x20 + 0x48);\n                            puVar18 = unaff_RDI;\ncode_r0x00453c76:\n                            if (in_R10 == '\\0') goto code_r0x00453dda;\n                            *(*0x20 + -0x32d) = uVar16;\n                            *(*0x20 + -600) = puVar13;\n                            unaff_RDI = *(*0x20 + -0x50);\n                            *(*0x20 + -0x318) = unaff_RDI;\n                            if ((puVar13 < 1) && (in_R11 = *(*0x20 + 8),  (in_R11 >> 1 & 1) != 0)) {\n                                *(*0x20 + -0x2b8) = puVar13;\n                                *(*0x20 + -0x32e) = 0;\n                                puVar13 = *(*0x20 + -0x2b8);\n                            }\n                            else {\n                                *(*0x20 + -0x368) = 0x453cd8;\n                                uVar20 = fcn.0044d2a0();\n                                puVar13 = *(*0x20 + -600);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x32d);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                puVar18 = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                unaff_RDI = *(*0x20 + -0x318);\n                                in_R11 = *(*0x20 + 8);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0x32e) = uVar20 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar20;\n                                arg1 = *(*0x20 + -0x70);\n                            }\n                            uVar14 = uVar16;\n                            if ((*(*0x20 + -0x32e) != '\\0') && (uVar10 == '\\0')) {\n                                unaff_RDI = unaff_RDI + -1;\n                            }\n                            if (*(iVar6 + 0x27) < 4) {\n                                uVar20 = 0;\n                            }\n                            else {\n                                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                                uVar20 = uVar1 + *(*(*0x20 + -200) + 0x130) & (uVar1 == 0xffffffff) - 1;\n                                iVar9 = *(*0x20 + -0x2c0);\n                                uVar10 = uVar23;\n                            }\n                            if (uVar20 == 0) goto code_r0x004542f7;\n                            *(*0x20 + -0x110) = uVar20;\n                            *(*0x20 + -0x238) = in_XMM15;\n                            *(*0x20 + -0x230) = in_XMM15;\n                            *(*0x20 + -0x220) = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x278) = puVar18;\n                                *(*0x20 + -0x331) = uVar16;\n                                *(*0x20 + -0x318) = unaff_RDI;\n                                *(*0x20 + -0x368) = 0x4540fb;\n                                in_R10 = unaff_RDI;\n                                iVar5 = fcn.0044e5a0(2);\n                                if (iVar5 < 0) {\n                                    puVar13 = *(*0x20 + -600);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    in_R11 = *(*0x20 + 8);\n                                    iVar6 = *(*0x20 + -0xc0);\n                                    uVar23 = *(*0x20 + -0xb0);\n                                    iVar9 = *(*0x20 + -0x2c0);\n                                    uVar14 = *(*0x20 + -0x331);\n                                    unaff_RDI = *(*0x20 + -0x318);\n                                    puVar18 = *(*0x20 + -0x278);\n                                    goto code_r0x004542f7;\n                                }\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) break;\n                                *(*0x20 + -0x280) = uVar10 * 5;\n                                iVar9 = *(*0x20 + -0x110);\n                                *(*0x20 + -0x234) = *(iVar9 + 0xc + uVar10 * 0x14);\n                                *(*0x20 + -0x214) = *(iVar9 + uVar10 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar9 + uVar10 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    arg3 = *(*0x20 + -0x331);\n                                    *(*0x20 + -0x368) = 0x454199;\n                                    cVar4 = fcn.00456180(*(*0x20 + -0x70), *(*0x20 + -0x278), arg3);\n                                    if (cVar4 != '\\0') goto code_r0x004541a8;\n                                    iVar9 = *(*0x20 + -0x278);\n                                }\n                                else {\ncode_r0x004541a8:\n                                    uVar8 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x4541bd;\n                                    uVar11 = fcn.0044df00();\n                                    *(*0x20 + -0xf8) = uVar11;\n                                    *(*0x20 + -0x2f0) = uVar8;\n                                    uVar8 = *(*0x20 + -0x318);\n                                    uVar11 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x4541e5;\n                                    uVar12 = fcn.0044e340(uVar8);\n                                    *(*0x20 + -0xd8) = uVar12;\n                                    *(*0x20 + -0x2d0) = uVar11;\n                                    *(*0x20 + -0x328) = uVar8;\n                                    *(*0x20 + -0x368) = 0x4541fe;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x368) = 0x454210;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x368) = 0x454225;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x368) = 0x45422a;\n                                    fcn.00435500();\n                                    *(*0x20 + -0x368) = 0x45422f;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x368) = 0x454245;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x368) = 0x45425a;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x368) = 0x45426b;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x368) = 0x454277;\n                                    fcn.00435b80(*(*0x20 + -0x328));\n                                    *(*0x20 + -0x368) = 0x45427c;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x454285;\n                                    fcn.00435500();\n                                    iVar9 = *(*0x20 + -0x278) + 1;\n                                }\n                                *(*0x20 + -0x278) = iVar9;\n                                *(*0x20 + -0x331) = *(*(*0x20 + -0xa8) + 2);\n                                *(*0x20 + -0x368) = 0x45409c;\n                                iVar9 = fcn.0044d2a0();\n                                uVar10 = *(*0x20 + -0x110);\n                                unaff_RDI = *(uVar10 + *(*0x20 + -0x280) * 4 + 0x10) + iVar9;\n                                uVar16 = *(*0x20 + -0x331);\n                                puVar18 = *(*0x20 + -0x278);\n                            }\n                            *(*0x20 + -0x368) = 0x4546c6;\n                            uVar10 = fcn.0045eee0(0x100000);\n                            while( true ) {\n                                *(*0x20 + -0x250) = arg3;\n                                *(*0x20 + -600) = uVar10;\n                                *(*0x20 + -0x331) = unaff_RDI[2];\n                                *(*0x20 + -0x368) = 0x4546f8;\n                                iVar9 = fcn.0044d2a0();\n                                arg4 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9;\n                                iVar7 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9 + 1;\n                                *(*0x20 + -0x310) = arg4;\n                                uVar15 = *(*0x20 + -0x331);\n                                puVar13 = *(*0x20 + -600);\ncode_r0x00454739:\n                                *(*0x20 + -0x260) = iVar7;\n                                *(*0x20 + -600) = puVar13;\n                                *(*0x20 + -0x331) = uVar15;\n                                unaff_RDI = *(*0x20 + -0x310);\n                                unaff_RSI = *0x20 + -0x210;\n                                *(*0x20 + -0x368) = 0x45476f;\n                                iVar5 = fcn.0044e5a0(2);\n                                if (iVar5 < 0) break;\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) goto code_r0x00454939;\n                                *(*0x20 + -0x278) = uVar10 * 5;\n                                unaff_RSI = *(*0x20 + -0x108);\n                                unaff_RDI = unaff_RSI + uVar10 * 0x14;\n                                if ((((unaff_RSI[uVar10 * 0x14 + 2] == '\\x15') &&\n                                     (cVar4 = *(*0x20 + -0x331),  cVar4 != '\\t')) && (cVar4 != '\\x12')) &&\n                                   (cVar4 != '\\x0e')) {\n                                    uVar10 = *(*0x20 + -600);\n                                    arg3 = *(*0x20 + -0x250);\n                                }\n                                else {\n                                    arg3 = *(*0x20 + -0x250);\n                                    if (arg3 < 1) {\n                                        arg4 = *(*0x20 + 0x40);\n                                        uVar10 = *(*0x20 + -600);\n                                        if (uVar10 < arg4) {\n                                            if (0xfffff < uVar10) goto code_r0x0045492f;\n                                            in_R10 = *(*0x20 + 0x38);\n                                            *(in_R10 + uVar10 * 8) = *(*0x20 + -0x260);\n                                            uVar10 = uVar10 + 1;\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + 0x38);\n                                        }\n                                    }\n                                    else {\n                                        arg3 = arg3 - 1;\n                                        in_R10 = *(*0x20 + 0x38);\n                                        uVar10 = *(*0x20 + -600);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar16 = *(*0x20 + -0x331);\n                            puVar13 = *(*0x20 + -600);\n                            iVar7 = *(*0x20 + -0x260);\n                            arg4 = *(*0x20 + -0x250);\n                        } while( true );\n                    }\n                }\ncode_r0x00453ed0:\n                while( true ) {\n                    if (*(*0x20 + -0x332) != '\\0') {\n                        puVar13 = puVar18;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= puVar13)) break;\n                    iVar9 = *(arg1 + 0x80);\n                    if (iVar9 == *(*0x20 + -0x38)) {\n                        return puVar13;\n                    }\n                    *(*0x20 + -0x240) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x2e8) = puVar13;\n                    *(*0x20 + -0x268) = *(arg1 + 0x98);\n                    *(*0x20 + -0x368) = 0x453f3e;\n                    fcn.00435480();\n                    *(*0x20 + -0x368) = 0x453f4f;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x453f5c;\n                    fcn.00435b80();\n                    *(*0x20 + -0x368) = 0x453f6d;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x453f7a;\n                    fcn.00435be0();\n                    *(*0x20 + -0x368) = 0x453f8b;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x453f98;\n                    fcn.00435be0();\n                    *(*0x20 + -0x368) = 0x453f9d;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x453fa5;\n                    fcn.00435500();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -0x240) = arg1;\n                    *(*0x20 + -0x248) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x368) = 0x453fc9;\n                    fcn.00435480();\n                    *(*0x20 + -0x368) = 0x453fda;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x453fe7;\n                    fcn.00435be0();\n                    *(*0x20 + -0x368) = 0x453ff8;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x454005;\n                    fcn.00435be0();\n                    *(*0x20 + -0x368) = 0x454016;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x454025;\n                    fcn.00435b80();\n                    *(*0x20 + -0x368) = 0x454036;\n                    fcn.00435d80();\n                    *(*0x20 + -0x368) = 0x454045;\n                    fcn.00435b80();\n                    *(*0x20 + -0x368) = 0x45404a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x45404f;\n                    fcn.00435500();\n                    *(*0x20 + -0x368) = 0x454065;\n                    puVar13 = in_R10;\n                    fcn.00433ce0();\n                    in_R10 = puVar13;\n                }\n                return puVar13;\n            }\n            goto code_r0x004549c5;\n        }\n        goto code_r0x004549d6;\n    }\n    goto code_r0x004549e8;\ncode_r0x004542f7:\n    *(*0x20 + -0x278) = puVar18;\n    *(*0x20 + -0x318) = unaff_RDI;\n    if ((in_R11 & 1) == 0) {\n        *(*0x20 + -0x368) = 0x454333;\n        cVar4 = fcn.00456180(arg1, uVar10 & 0xffffffffffffff00 | puVar18 == NULL, uVar14);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        puVar18 = *(*0x20 + -0x278);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n        puVar13 = *(*0x20 + -600);\n    }\n    else {\n        cVar4 = '\\x01';\n    }\n    if (cVar4 != '\\0') {\n        uVar8 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x45439a;\n        uVar11 = fcn.0044df00();\n        *(*0x20 + -0x100) = uVar11;\n        *(*0x20 + -0x2f8) = uVar8;\n        uVar8 = *(*0x20 + -0x318);\n        uVar11 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x4543c5;\n        uVar12 = fcn.0044e340(uVar8);\n        *(*0x20 + -0xe0) = uVar12;\n        *(*0x20 + -0x2d8) = uVar11;\n        *(*0x20 + -0x32c) = uVar8;\n        iVar9 = *(*0x20 + -0x2f8);\n        if (iVar9 == 0xf) {\n            piVar19 = *(*0x20 + -0x100);\n            if ((((*piVar19 == 0x2e656d69746e7572) && (*(piVar19 + 1) == 0x61706f67)) && (*(piVar19 + 0xc) == 0x696e))\n               && (*(piVar19 + 0xe) == 'c')) {\n                iVar9 = 5;\n                piVar19 = 0x4c8ba3;\n            }\n        }\n        else {\n            piVar19 = *(*0x20 + -0x100);\n        }\n        *(*0x20 + -0x2f8) = iVar9;\n        *(*0x20 + -0x100) = piVar19;\n        *(*0x20 + -0x368) = 0x45443c;\n        fcn.00435480();\n        *(*0x20 + -0x368) = 0x45444e;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x45445f;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x454465;\n        fcn.00435500();\n        *(*0x20 + -0x368) = 0x454487;\n        fcn.00454a60(*(*0x20 + -0x20));\n        *(*0x20 + -0x368) = 0x45448c;\n        fcn.00435480();\n        *(*0x20 + -0x368) = 0x45449d;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x4544a5;\n        fcn.00435500();\n        *(*0x20 + -0x368) = 0x4544aa;\n        fcn.00435480();\n        *(*0x20 + -0x368) = 0x4544bb;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x4544d0;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x4544e5;\n        fcn.00435d80();\n        *(*0x20 + -0x368) = 0x4544f1;\n        fcn.00435b80();\n        *(*0x20 + -0x368) = 0x4544f6;\n        fcn.00435500();\n        *(*0x20 + -0x368) = 0x45450d;\n        uVar10 = fcn.0044d2a0();\n        if (uVar10 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar10) {\n            *(*0x20 + -0x368) = 0x45452e;\n            uVar8 = fcn.0044d2a0();\n            *(*0x20 + -800) = uVar8;\n            *(*0x20 + -0x260) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x454548;\n            fcn.00435480();\n            *(*0x20 + -0x368) = 0x454559;\n            fcn.00435d80();\n            *(*0x20 + -0x368) = 0x45456e;\n            fcn.00435be0(*(*0x20 + -800));\n            *(*0x20 + -0x368) = 0x454573;\n            fcn.00435500();\n        }\n        iVar9 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar9 != 0) && (0 < *(iVar9 + 0xc4))) && (*(iVar9 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x324))) {\n            *(*0x20 + -0x260) = *(*0x20 + -0x30);\n            *(*0x20 + -0x288) = *(*0x20 + -0x38);\n            *(*0x20 + -0x290) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x4545de;\n            fcn.00435480();\n            *(*0x20 + -0x368) = 0x4545ef;\n            fcn.00435d80();\n            *(*0x20 + -0x368) = 0x4545fc;\n            fcn.00435be0();\n            *(*0x20 + -0x368) = 0x45460d;\n            fcn.00435d80();\n            *(*0x20 + -0x368) = 0x45461a;\n            fcn.00435be0();\n            *(*0x20 + -0x368) = 0x45462b;\n            fcn.00435d80();\n            *(*0x20 + -0x368) = 0x454638;\n            fcn.00435be0();\n            *(*0x20 + -0x368) = 0x45463d;\n            fcn.00435500();\n        }\n        *(*0x20 + -0x368) = 0x454645;\n        fcn.00435480();\n        *(*0x20 + -0x368) = 0x45464a;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x45464f;\n        fcn.00435500();\n        puVar18 = *(*0x20 + -0x278) + 1;\n        puVar13 = *(*0x20 + -600);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n    }\n    uVar16 = *(iVar6 + 0x24);\n    ppcVar21 = *(*0x20 + 0x48);\ncode_r0x00453dda:\n    puVar13 = puVar13 + 1;\n    if ((*(iVar6 + 0x24) == '\\x04') && (iVar9 != 0)) {\n        *(*0x20 + -0x2c8) = *((uVar23 - 8) + iVar9 * 8);\n        in_R11 = *(*0x20 + -0x250);\n        if ((in_R11 == 0) && (ppcVar21 == NULL)) {\n            *(*0x20 + -0x270) = puVar18;\n            *(*0x20 + -0x32f) = uVar16;\n            *(*0x20 + -0x368) = 0x453e3a;\n            puVar13 = fcn.004551a0(*(*0x20 + -0x2c8));\n            arg1 = *(*0x20 + -0x70);\n            uVar16 = *(*0x20 + -0x32f);\n            unaff_RSI = *(*0x20 + 0x40);\n            puVar18 = *(*0x20 + -0x270);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x250);\n            iVar6 = *(*0x20 + -0xc0);\n            uVar23 = *(*0x20 + -0xb0);\n            iVar9 = *(*0x20 + -0x2c0);\n        }\n        iVar9 = iVar9 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x250);\n    }\n    uVar10 = *(iVar6 + 0x24);\n    in_R10 = puVar13;\n    if (arg3 == 0) goto code_r0x00453ed0;\ncode_r0x004531ef:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -0xd0);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    uVar20 = *(*0x20 + -0x30);\n    *(*0x20 + -0x38) = uVar20;\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    arg4 = *(*0x20 + -0x240);\n    arg3 = 0;\n    uVar10 = uVar20 & 0xffffff00 | uVar10 == '\\x12';\n    in_R10 = *(*0x20 + -0x248);\n    unaff_RDI = puVar18;\n    goto code_r0x0045326f;\ncode_r0x00454945:\n    *(*0x20 + -0x368) = 0x454956;\n    fcn.00433ce0();\ncode_r0x00454956:\n    uVar8 = *(*0x20 + -200);\n    *(*0x20 + -0x368) = 0x454966;\n    uVar11 = fcn.0044df00();\n    *(*0x20 + -0xa0) = uVar11;\n    *(*0x20 + -0x250) = uVar8;\n    *(*0x20 + -0x368) = 0x45497b;\n    fcn.00435480();\n    *(*0x20 + -0x368) = 0x45498c;\n    fcn.00435d80();\n    *(*0x20 + -0x368) = 0x4549a5;\n    fcn.00435d80();\n    *(*0x20 + -0x368) = 0x4549aa;\n    fcn.004356e0();\n    *(*0x20 + -0x368) = 0x4549af;\n    fcn.00435500();\n    *(*0x20 + -0x368) = 0x4549c5;\n    fcn.00433ce0();\ncode_r0x004549c5:\n    *(*0x20 + -0x368) = 0x4549d6;\n    fcn.00433ce0();\ncode_r0x004549d6:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x368) = 0x4549e7;\n    in_RAX = fcn.00433ce0();\ncode_r0x004549e8:\n    *(puVar17 + 0x10) = in_RAX;\n    *(puVar17 + 0x18) = unaff_RBX;\n    *(puVar17 + 0x20) = arg1;\n    *(puVar17 + 0x28) = unaff_RDI;\n    *(puVar17 + 0x30) = unaff_RSI;\n    *(puVar17 + 0x38) = arg3;\n    *(puVar17 + 0x40) = arg4;\n    *(puVar17 + 0x48) = in_R10;\n    *(puVar17 + 0x50) = in_R11;\n    *(puVar17 + -8) = 0x454a1a;\n    fcn.0045c800();\n    in_RAX = *(puVar17 + 0x10);\n    unaff_RBX = *(puVar17 + 0x18);\n    arg1 = *(puVar17 + 0x20);\n    unaff_RDI = *(puVar17 + 0x28);\n    unaff_RSI = *(puVar17 + 0x30);\n    arg3 = *(puVar17 + 0x38);\n    arg4 = *(puVar17 + 0x40);\n    in_R10 = *(puVar17 + 0x48);\n    in_R11 = *(puVar17 + 0x50);\n    *0x20 = puVar17;\n    goto code_r0x00452f20;\n}\n",
        "token_count": 13820
    },
    "00455780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455780(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (((((*0x62660b != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045f480();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.00456b80();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = *(unaff_RDI + 0x30);\n    if ((iVar1 != 0) && (*(iVar1 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.00452f20(arg1, iVar1, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.00452f20(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    fcn.00455420();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.00455ae0(puStack56[2]);\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 826
    },
    "00455ca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455ca0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x455cdf;\n            uVar3 = fcn.0044df00();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x27) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x00455d9e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x455d53;\n            iVar2 = fcn.0044e5a0(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x00455d94;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x455d88;\n                uVar3 = fcn.0044e060(uVar1);\ncode_r0x00455d94:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x00455d9e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x455dc5;\n                uVar4 = fcn.0044e220(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x4c8ba3;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x455e2b;\n                fcn.00435480();\n                *(*0x20 + -0x80) = 0x455e3a;\n                fcn.00435d80();\n                *(*0x20 + -0x80) = 0x455e4b;\n                fcn.00435d80();\n                *(*0x20 + -0x80) = 0x455e50;\n                fcn.00435500();\n                *(*0x20 + -0x80) = 0x455e55;\n                fcn.00435480();\n                *(*0x20 + -0x80) = 0x455e66;\n                fcn.00435d80();\n                *(*0x20 + -0x80) = 0x455e75;\n                fcn.00435d80();\n                *(*0x20 + -0x80) = 0x455e86;\n                fcn.00435d80();\n                *(*0x20 + -0x80) = 0x455e92;\n                fcn.00435b80();\n                *(*0x20 + -0x80) = 0x455e97;\n                fcn.00435500();\n                *(*0x20 + -0x80) = 0x455ea8;\n                uVar5 = fcn.0044d2a0();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x455ec6;\n                    uVar3 = fcn.0044d2a0();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x455ed0;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x455ee5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x455efa;\n                    fcn.00435be0(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x455eff;\n                    fcn.00435500();\n                }\n                *(*0x20 + -0x80) = 0x455f05;\n                fcn.00435480();\n                *(*0x20 + -0x80) = 0x455f0a;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x455f0f;\n                fcn.00435500();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x455f25;\n            in_RAX = fcn.0045eee0(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x455f3a;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1825
    },
    "00456420": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456420(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.004607e0();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435500();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    if (0 < iVar3) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 446
    },
    "00458fa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00458fa0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045eee0(0);\n    }\n    fcn.0045efa0(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 801
    },
    "00459180": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00459180(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004592cc;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00459220;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045eee0(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00459220:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045eee0(unaff_RBX);\n    }\n    fcn.0045eee0(unaff_RBX);\ncode_r0x004592cc:\n    fcn.0045eee0(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 593
    },
    "0045a460": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a460(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x0045a4f6:\n            uVar1 = 4;\n            goto code_r0x0045a532;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x0045a532;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x0045a532;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x0045a532;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x0045a4f6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x0045a532;\n        }\n    }\n    uVar3 = fcn.0044bac0();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x0045a532:\n    if ((*0x62660c != '\\0') || (*0x62660a != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x55c288;\n    *0x55c288 = uVar1 | *0x626678;\n    return uVar2;\n}\n",
        "token_count": 610
    },
    "00469e60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00469e60(int64_t **arg1, ulong noname_1, int64_t **arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong arg4;\n    int64_t **ppiVar8;\n    int64_t *piVar9;\n    int64_t **arg1_00;\n    char *noname_1_00;\n    int64_t **unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t **unaff_RSI;\n    int64_t **unaff_RDI;\n    int64_t **ppiVar11;\n    int64_t **ppiVar12;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x1e0 && *0x20 + -0x1e0 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x260;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x1f8) = 0;\n            *(*0x20 + -0x1d0) = 0;\n            *(*0x20 + -0xb0) = in_XMM15;\n            if (unaff_RBX == NULL) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x4eec98;\n                *(*0x20 + -0xa8) = 0x4ee5c0;\n                *(*0x20 + -0x268) = 0x46a39e;\n                fcn.004329e0();\n                return *(*0x20 + -0x1f8);\n            }\n            if (arg3 == NULL) {\n                arg3 = 0x5d2900;\n            }\n            piVar9 = arg3[8];\n            if (piVar9 == NULL) {\n                piVar9 = 0x5d2960;\n            }\n            if (3 < arg3[6]) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x4eec98;\n                *(*0x20 + -0xa8) = 0x4ee5c0;\n                *(*0x20 + -0x268) = 0x46a339;\n                fcn.004329e0();\n                return *(*0x20 + -0x1f8);\n            }\n            if (arg3[6] < 3) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x4eec98;\n                *(*0x20 + -0xa8) = 0x4ee5b8;\n                *(*0x20 + -0x268) = 0x46a2d4;\n                fcn.004329e0();\n                return *(*0x20 + -0x1f8);\n            }\n            *(*0x20 + -0xb8) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xe8) = piVar9;\n            ppiVar11 = arg3[1];\n            ppiVar12 = *arg3;\n            ppiVar8 = unaff_RBX;\n            if (ppiVar11 != NULL) {\n                *(*0x20 + -0x268) = 0x469f3e;\n                fcn.00469b60(in_RAX);\n                ppiVar8 = ppiVar11;\n                unaff_RDI = unaff_RBX;\n                if (in_RAX != 0) {\n                    *(*0x20 + -0x1f8) = 0;\n                    *(*0x20 + -0x1d0) = 0;\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xa8) = unaff_RBX;\n                    *(*0x20 + -0x268) = 0x46a26f;\n                    fcn.004329e0();\n                    return *(*0x20 + -0x1f8);\n                }\n            }\n            unaff_RBX = ppiVar8;\n            *(*0x20 + -0x268) = 0x469f4e;\n            uVar3 = fcn.0046ae60();\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    unaff_RSI = NULL;\n                    goto code_r0x00469f6d;\n                }\n            }\n            else {\n                uVar3 = 0;\ncode_r0x00469f6d:\n                *(*0x20 + -0xb0) = unaff_RDI;\n                *(*0x20 + -0xa8) = unaff_RSI;\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1f8) = 0;\n                    *(*0x20 + -0x1d0) = 0;\n                    *(*0x20 + -0x268) = 0x46a218;\n                    fcn.004329e0();\n                    return *(*0x20 + -0x1f8);\n                }\n                *(*0x20 + -0xf0) = uVar3;\n                unaff_RBX = *(*(*0x20 + -0xe8) + 0x10);\n                unaff_RDI = *(*(*0x20 + -0xe8) + 8);\n                if (unaff_RBX == NULL) {\n                    unaff_RBX = *(*0x20 + 0x20);\n                    *(*0x20 + -0x268) = 0x469fc5;\n                    unaff_RDI = fcn.004694e0(*(*0x20 + 0x28));\n                }\n                if (unaff_RBX == NULL) {\n                    uVar3 = 0;\ncode_r0x0046a03c:\n                    *(*0x20 + -0xd0) = uVar3;\n                    unaff_RSI = *(*0x20 + -0xb8);\n                    unaff_RBX = unaff_RSI[1];\n                    unaff_RDI = *unaff_RSI;\n                    if (unaff_RBX == NULL) {\n                        uVar3 = 0;\ncode_r0x0046a097:\n                        *(*0x20 + -0xd8) = uVar3;\n                        *(*0x20 + -0x204) = 0;\n                        *(*0x20 + -0x208) = 0;\n                        *(*0x20 + -0x1fc) = 0;\n                        *(*0x20 + -0x268) = 0x46a0cb;\n                        fcn.0046e7c0(*0x20 + -0x1fc);\n                        if (*(*0x20 + -0x204) < 6) {\n                            bVar1 = true;\n                        }\n                        else if (*(*0x20 + -0x204) == 6) {\n                            bVar1 = *(*0x20 + -0x208) < 2;\n                        }\n                        else {\n                            bVar1 = false;\n                        }\n                        *(*0x20 + -0x209) = bVar1;\n                        *(*0x20 + -0x268) = 0x46a0f2;\n                        uVar3 = fcn.0046cfe0();\n                        *(*0x20 + -0x1e8) = uVar3;\n                        *(*0x20 + -0x1b0) = *(*(*0x20 + -0xe8) + 0x58);\n                        uVar3 = *(*(*0x20 + -0xb8) + 0x30);\n                        *(*0x20 + -0x1c0) = uVar3;\n                        *(*0x20 + -0x268) = 0x46a131;\n                        iVar4 = fcn.00447160(uVar3);\n                        *(*0x20 + -0xc0) = iVar4;\n                        unaff_RBX = *(*0x20 + -0x1e8);\n                        ppiVar11 = unaff_RBX;\n                        if (*(*0x20 + -0x1b0) != NULL) {\n                            ppiVar11 = *(*0x20 + -0x1b0);\n                        }\n                        *(*0x20 + -0x1f0) = ppiVar11;\n                        iVar6 = *(*0x20 + -0xb8);\n                        unaff_RSI = *(iVar6 + 0x30);\n                        *(*0x20 + -0x1b8) = unaff_RSI;\n                        for (unaff_RDI = NULL; unaff_RDI < unaff_RSI; unaff_RDI = unaff_RDI + 1) {\n                            ppiVar12 = *(iVar6 + 0x30);\n                            if (ppiVar12 <= unaff_RDI) goto code_r0x0046ac85;\n                            ppiVar8 = *(*(iVar6 + 0x28) + unaff_RDI * 8);\n                            ppiVar12 = ppiVar8;\n                            if (ppiVar8 != NULL) {\n                                arg1_00 = ppiVar11;\n                                if (((unaff_RBX != ppiVar11) && (*(*0x20 + -0x209) != '\\0')) &&\n                                   ((ppiVar8 & 0x10000003) == 3)) {\n                                    arg1_00 = unaff_RBX;\n                                }\n                                ppiVar12 = *(*0x20 + -0x1c0);\n                                if (ppiVar12 <= unaff_RDI) goto code_r0x0046ac76;\n                                *(*0x20 + -0x1d8) = unaff_RDI;\n                                ppiVar12 = iVar4 + unaff_RDI * 8;\n                                arg3 = 0x1;\n                                *(*0x20 + -0x268) = 0x46a46a;\n                                iVar4 = fcn.0046c860(arg1_00, arg1_00, 1, 2);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x1f8) = 0;\n                                    *(*0x20 + -0x1d0) = 0;\n                                    *(*0x20 + -0xb0) = iVar4;\n                                    *(*0x20 + -0xa8) = ppiVar8;\n                                    *(*0x20 + -0x268) = 0x46a54f;\n                                    fcn.004329e0();\n                                    return *(*0x20 + -0x1f8);\n                                }\n                                *(*0x20 + -0x1b0) = *(*(*0x20 + -0xc0) + *(*0x20 + -0x1d8) * 8);\n                                *(*0x20 + -0x268) = 0x46a49b;\n                                puVar5 = fcn.0040cc20();\n                                *puVar5 = 0x46adc0;\n                                puVar5[1] = *(*0x20 + -0x1f0);\n                                puVar5[2] = *(*0x20 + -0x1b0);\n                                *(*0x20 + -0x268) = 0x46a4bf;\n                                iVar2 = fcn.004322c0();\n                                if (iVar2 != 0) {\n                                    *(*0x20 + -0x268) = 0x46a4f8;\n                                    fcn.004329e0();\n                                    return *(*0x20 + -0x1f8);\n                                }\n                                iVar4 = *(*0x20 + -0xc0);\n                                iVar6 = *(*0x20 + -0xb8);\n                                ppiVar11 = *(*0x20 + -0x1f0);\n                                unaff_RBX = *(*0x20 + -0x1e8);\n                                unaff_RSI = *(*0x20 + -0x1b8);\n                                unaff_RDI = *(*0x20 + -0x1d8);\n                            }\n                        }\n                        unaff_RDI = *0x20 + -0x88;\n                        *(*0x20 + -0x270) = unaff_RBP;\n                        *(*0x20 + -0x268) = 0x46a597;\n                        fcn.0045f1a6();\n                        unaff_RBP = *(*0x20 + -0x270);\n                        *(*0x20 + -0x268) = 0x46a5a5;\n                        uVar3 = fcn.0046b8a0();\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0xb0) = unaff_RBX;\n                        *(*0x20 + -0xa8) = iVar6;\n                        if (unaff_RBX != NULL) {\n                            *(*0x20 + -0x1f8) = 0;\n                            *(*0x20 + -0x1d0) = 0;\n                            *(*0x20 + -0x268) = 0x46a825;\n                            fcn.004329e0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        *(*0x20 + -0xa0) = in_XMM15;\n                        *(*0x20 + -0xa0) = 0x46ad60;\n                        *(*0x20 + -0x98) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x120) = *0x20 + -0xa0;\n                        *(*0x20 + -0x268) = 0x46a60e;\n                        iVar2 = fcn.004323c0();\n                        if (iVar2 != 0) {\n                            *(*0x20 + -0x268) = 0x46a7d9;\n                            fcn.004329e0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        *(*0x20 + -0x78) = 0x70;\n                        *(*0x20 + -0x3c) = 0x100;\n                        noname_1_00 = *(*0x20 + -0xe8);\n                        if (*noname_1_00 != '\\0') {\n                            *(*0x20 + -0x3c) = 0x101;\n                            *(*0x20 + -0x38) = 0;\n                        }\n                        ppiVar11 = arg3;\n                        if (*(noname_1_00 + 0x58) != 0) {\n                            unaff_RDI = noname_1_00 + 0x58;\n                            unaff_RBX = NULL;\n                            unaff_RSI = 0x8;\n                            ppiVar11 = NULL;\n                            *(*0x20 + -0x268) = 0x46a678;\n                            iVar4 = fcn.0046e3a0(0x20000, noname_1_00, 0, 0);\n                            *(*0x20 + -0xb0) = iVar4;\n                            *(*0x20 + -0xa8) = 0;\n                            if (iVar4 != 0) {\n                                *(*0x20 + -0x1f8) = 0;\n                                *(*0x20 + -0x1d0) = 0;\n                                *(*0x20 + -0x268) = 0x46a7a7;\n                                fcn.004329e0();\n                                return *(*0x20 + -0x1f8);\n                            }\n                            noname_1_00 = *(*0x20 + -0xe8);\n                        }\n                        ppiVar8 = *(*0x20 + -0x1c0);\n                        if (ppiVar8 != NULL) {\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            ppiVar11 = *unaff_RBX;\n                            *(*0x20 + -0x28) = ppiVar11;\n                            if (0x1 < ppiVar8) {\n                                ppiVar11 = unaff_RBX[1];\n                                *(*0x20 + -0x20) = ppiVar11;\n                                if (0x2 < ppiVar8) {\n                                    *(*0x20 + -0x18) = unaff_RBX[2];\n                                    iVar4 = *(noname_1_00 + 0x48);\n                                    *(*0x20 + -0x1c8) = ppiVar8 + iVar4;\n                                    ppiVar12 = *(noname_1_00 + 0x40);\n                                    ppiVar11 = unaff_RBX;\n                                    unaff_RBX = ppiVar12;\n                                    if (ppiVar8 < ppiVar8 + iVar4) {\n                                        *(*0x20 + -0x1b8) = iVar4;\n                                        *(*0x20 + -200) = ppiVar12;\n                                        *(*0x20 + -0x268) = 0x46a733;\n                                        ppiVar11 = fcn.00447240(ppiVar8);\n                                        iVar4 = *(*0x20 + -0x1b8);\n                                        unaff_RBX = *(*0x20 + -200);\n                                    }\n                                    *(*0x20 + -0x1c0) = ppiVar8;\n                                    *(*0x20 + -0xe0) = ppiVar11;\n                                    ppiVar11 = iVar4 << 3;\n                                    *(*0x20 + -0x268) = 0x46a771;\n                                    fcn.0045f840(ppiVar11);\n                                    iVar4 = *(*0x20 + -0xe0);\n                                    uVar13 = *(*0x20 + -0x209);\n                                    unaff_RSI = uVar13;\n                                    unaff_RDI = *(*0x20 + -0x1c8);\n                                    for (iVar6 = 0; iVar6 < unaff_RDI; iVar6 = iVar6 + 1) {\n                                        if ((uVar13 != 0) && ((*(iVar4 + iVar6 * 8) & 0x10000003) == 3)) {\n                                            *(iVar4 + iVar6 * 8) = 0;\n                                        }\n                                    }\n                                    ppiVar8 = NULL;\n                                    for (iVar6 = 0; iVar6 < unaff_RDI; iVar6 = iVar6 + 1) {\n                                        ppiVar12 = *(iVar4 + iVar6 * 8);\n                                        if (ppiVar12 != NULL) {\n                                            if (unaff_RDI <= ppiVar8) goto code_r0x0046ac4d;\n                                            *(iVar4 + ppiVar8 * 8) = ppiVar12;\n                                            ppiVar8 = ppiVar8 + 1;\n                                        }\n                                    }\n                                    ppiVar12 = *(*0x20 + -0x1c0);\n                                    if (ppiVar8 <= ppiVar12) {\n                                        if (ppiVar8 == NULL) {\n                                            iVar6 = *(*0x20 + -0xe8);\n                                            uVar13 = 0;\n                                        }\n                                        else {\n                                            iVar6 = *(*0x20 + -0xe8);\n                                            uVar13 = *(iVar6 + 0x38) ^ 1;\n                                        }\n                                        *(*0x20 + -0x20a) = uVar13;\n                                        *(*0x20 + -0x1e0) = ppiVar8;\n                                        if (uVar13 == 0) {\ncode_r0x0046a9a9:\n                                            *(*0x20 + -0x198) = in_XMM15;\n                                            *(*0x20 + -0x188) = 0;\n                                            *(*0x20 + -0x200) = *(iVar6 + 0x18) | 0x80400;\n                                            if (*(iVar6 + 0x20) == 0) {\n                                                uVar3 = *(*(*0x20 + -0xb8) + 0x20);\n                                                *(*0x20 + -0x268) = 0x46aa7b;\n                                                arg4 = fcn.00469640(uVar3);\n                                                uVar3 = *(*(*0x20 + -0xe8) + 0x28);\n                                                *(*0x20 + -0x260) = *0x20 + -0x198;\n                                                uVar7 = *(*0x20 + -0xd0);\n                                                *(*0x20 + -0x268) = 0x46aac9;\n                                                uVar3 = fcn.0046c500(uVar3, *(*0x20 + -0xe8), *(*0x20 + -0x200), arg4);\n                                                *(*0x20 + -0xb0) = uVar3;\n                                                *(*0x20 + -0xa8) = uVar7;\n                                            }\n                                            else {\n                                                uVar3 = *(*(*0x20 + -0xb8) + 0x20);\n                                                *(*0x20 + -0x268) = 0x46a9f0;\n                                                fcn.00469640(uVar3);\n                                                *(*0x20 + -0x260) = *0x20 + -0x78;\n                                                *(*0x20 + -600) = *0x20 + -0x198;\n                                                uVar3 = *(*0x20 + -0xf0);\n                                                *(*0x20 + -0x268) = 0x46aa4e;\n                                                uVar7 = fcn.0046b9c0(*(*0x20 + -0xd0), *(*0x20 + -0xe8), \n                                                                     *(*0x20 + -0x20a), *(*0x20 + -0x200));\n                                                *(*0x20 + -0xb0) = uVar7;\n                                                *(*0x20 + -0xa8) = uVar3;\n                                            }\n                                            if (*(*0x20 + -0xb0) != 0) {\n                                                *(*0x20 + -0x1f8) = 0;\n                                                *(*0x20 + -0x1d0) = 0;\n                                                *(*0x20 + -0x268) = 0x46ac0c;\n                                                fcn.004329e0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            *(*0x20 + -0x1a8) = in_XMM15;\n                                            *(*0x20 + -0x1a8) = 0x46ad00;\n                                            *(*0x20 + -0x1a0) = *(*0x20 + -400);\n                                            *(*0x20 + -0x168) = *0x20 + -0x1a8;\n                                            *(*0x20 + -0x268) = 0x46ab2d;\n                                            iVar2 = fcn.004323c0();\n                                            if (iVar2 != 0) {\n                                                *(*0x20 + -0x268) = 0x46abc5;\n                                                fcn.004329e0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            *(*0x20 + -0x90) = *(*0x20 + -0xe0);\n                                            *(*0x20 + -0x88) = *(*0x20 + -0x1e0);\n                                            *(*0x20 + -0x80) = *(*0x20 + -0x1c0);\n                                            *(*0x20 + -0x1f8) = *(*0x20 + -0x188);\n                                            *(*0x20 + -0x1d0) = *(*0x20 + -0x198);\n                                            *(*0x20 + -0xb0) = in_XMM15;\n                                            *(*0x20 + -0x268) = 0x46ab8f;\n                                            fcn.004329e0();\n                                            return *(*0x20 + -0x1f8);\n                                        }\n                                        if (ppiVar8 != NULL) {\n                                            *(*0x20 + -0x268) = 0x46a925;\n                                            iVar4 = fcn.0046e3a0(0x20002, iVar4, 0, 0);\n                                            *(*0x20 + -0xb0) = iVar4;\n                                            *(*0x20 + -0xa8) = 0;\n                                            if (iVar4 != 0) {\n                                                *(*0x20 + -0x1f8) = 0;\n                                                *(*0x20 + -0x1d0) = 0;\n                                                *(*0x20 + -0x268) = 0x46a97c;\n                                                fcn.004329e0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            iVar6 = *(*0x20 + -0xe8);\n                                            goto code_r0x0046a9a9;\n                                        }\n                                        *(*0x20 + -0x268) = 0x46ac45;\n                                        fcn.0045eee0(0);\n                                    }\n                                    *(*0x20 + -0x268) = 0x46ac4d;\n                                    fcn.0045ef60(ppiVar8, ppiVar12);\ncode_r0x0046ac4d:\n                                    *(*0x20 + -0x268) = 0x46ac58;\n                                    ppiVar8 = unaff_RDI;\n                                    fcn.0045eee0(unaff_RDI);\n                                }\n                                *(*0x20 + -0x268) = 0x46ac65;\n                                fcn.0045eee0(ppiVar8);\n                            }\n                            *(*0x20 + -0x268) = 0x46ac6f;\n                            fcn.0045eee0(ppiVar8);\n                        }\n                        *(*0x20 + -0x268) = 0x46ac76;\n                        fcn.0045eee0(ppiVar8);\ncode_r0x0046ac76:\n                        *(*0x20 + -0x268) = 0x46ac85;\n                        fcn.0045eee0(ppiVar12);\n                        arg3 = ppiVar11;\ncode_r0x0046ac85:\n                        *(*0x20 + -0x268) = 0x46ac90;\n                        fcn.0045eee0(ppiVar12);\n                    }\n                    else {\n                        *(*0x20 + -0x268) = 0x46a065;\n                        uVar3 = fcn.0046ae60();\n                        if (unaff_RDI != NULL) {\n                            uVar3 = 0;\ncode_r0x0046a07b:\n                            *(*0x20 + -0xb0) = unaff_RDI;\n                            *(*0x20 + -0xa8) = unaff_RSI;\n                            if (unaff_RDI != NULL) {\n                                *(*0x20 + -0x1f8) = 0;\n                                *(*0x20 + -0x1d0) = 0;\n                                *(*0x20 + -0x268) = 0x46a18a;\n                                fcn.004329e0();\n                                return *(*0x20 + -0x1f8);\n                            }\n                            goto code_r0x0046a097;\n                        }\n                        if (unaff_RBX != NULL) {\n                            unaff_RDI = NULL;\n                            unaff_RSI = NULL;\n                            goto code_r0x0046a07b;\n                        }\n                    }\n                    *(*0x20 + -0x268) = 0x46ac9a;\n                    fcn.0045eee0(unaff_RBX);\n                }\n                else {\n                    *(*0x20 + -0x268) = 0x469ff4;\n                    uVar3 = fcn.0046ae60();\n                    if (unaff_RDI != NULL) {\n                        uVar3 = 0;\ncode_r0x0046a00d:\n                        *(*0x20 + -0xb0) = unaff_RDI;\n                        *(*0x20 + -0xa8) = unaff_RBX;\n                        if (unaff_RDI != NULL) {\n                            *(*0x20 + -0x1f8) = 0;\n                            *(*0x20 + -0x1d0) = 0;\n                            *(*0x20 + -0x268) = 0x46a1d1;\n                            fcn.004329e0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        goto code_r0x0046a03c;\n                    }\n                    unaff_RSI = unaff_RBX;\n                    if (unaff_RBX != NULL) {\n                        unaff_RDI = NULL;\n                        unaff_RBX = NULL;\n                        goto code_r0x0046a00d;\n                    }\n                }\n                *(*0x20 + -0x268) = 0x46aca5;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x268) = 0x46acaf;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + -8) = 0x46acd3;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6859
    },
    "0046b1a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046b1a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xffffffffffffffff;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x68) = 0x46b1da;\n            uVar2 = fcn.0046ae60();\n            if (unaff_RDI != 0) {\n                uVar2 = 0;\n                goto code_r0x0046b1f0;\n            }\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x0046b1f0:\n                if (unaff_RDI != 0) {\n                    return 0xffffffffffffffff;\n                }\n                uVar6 = *(*0x20 + 0x18);\n                uVar5 = uVar6;\n                if ((uVar6 & 3) == 0) {\n                    uVar3 = 0x80000000;\n                }\n                else if ((uVar5 & 3) == 1) {\n                    uVar3 = 0x40000000;\n                }\n                else if ((uVar5 & 3) == 2) {\n                    uVar3 = 0xc0000000;\n                }\n                else {\n                    uVar3 = 0;\n                }\n                if ((uVar6 & 0x40) != 0) {\n                    uVar3 = uVar3 | 0x40000000;\n                }\n                if ((uVar6 & 0x400) != 0) {\n                    uVar3 = uVar3 & 0xbfffffff | 4;\n                }\n                uVar6 = uVar3;\n                if ((uVar5 >> 0x13 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x20) = 1;\n                    puVar8 = *0x20 + -0x30;\n                }\n                else {\n                    puVar8 = NULL;\n                }\n                if ((uVar5 & 0xc0) == 0xc0) {\n                    iVar7 = 1;\n                }\n                else if ((uVar5 & 0x240) == 0x240) {\n                    iVar7 = 2;\n                }\n                else if ((uVar5 >> 6 & 1) == 0) {\n                    if ((uVar5 >> 9 & 1) == 0) {\n                        iVar7 = 3;\n                    }\n                    else {\n                        iVar7 = 5;\n                    }\n                }\n                else {\n                    iVar7 = 4;\n                }\n                if ((*(*0x20 + 0x20) >> 7 & 1) == 0) {\n                    if (iVar7 == 2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x10) = puVar8;\n                        *(*0x20 + -0x34) = uVar3;\n                        *(*0x20 + -0x38) = 2;\n                        piVar4 = 0x3;\n                        *(*0x20 + -0x68) = 0x46b32b;\n                        uVar2 = fcn.0046c220(3, uVar6, 0x80, 0);\n                        if ((uVar6 == 0) ||\n                           (((iVar1 = *(uVar6 + 8),  iVar1 != 0x4ba880 || (*piVar4 != 2)) &&\n                            ((uVar6 == 0 ||\n                             (((iVar1 != 0x4ba880 || (*piVar4 != 0x35)) &&\n                              ((uVar6 == 0 || ((iVar1 != 0x4ba880 || (*piVar4 != 3)))))))))))) {\n                            return uVar2;\n                        }\n                        uVar6 = *(*0x20 + -0x34);\n                    }\n                    uVar5 = 1;\n                }\n                else {\n                    uVar5 = 0x80;\n                }\n                *(*0x20 + -0x68) = 0x46b3b6;\n                uVar2 = fcn.0046c220(3, uVar6, uVar5, 0);\n                return uVar2;\n            }\n            *(*0x20 + -0x68) = 0x46b405;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x46b41e;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1440
    },
    "0047a360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047a360(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t in_R10;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_R10 != 0) {\n                uVar8 = unaff_RBX - 1;\n                if (uVar8 < 0) {\n                    iVar7 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(-1 - uVar8) >> 0x40, 0) - uVar8) + -1 >> 3)\n                            - (-1 - uVar8 >> 0x3f);\n                    in_RAX = (in_RAX - iVar7) - 1;\n                    uVar8 = unaff_RBX + iVar7 * 0xc + 0xb;\n                }\n                if (0xb < uVar8) {\n                    iVar7 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(uVar8) >> 0x40, 0) + uVar8 >> 3;\n                    in_RAX = iVar7 + in_RAX;\n                    uVar8 = uVar8 + iVar7 * -0xc;\n                }\n                iVar7 = arg4;\n                if (arg4 < 0) {\n                    iVar7 = (-1 - arg4) / 1000000000;\n                    arg3 = (arg3 - iVar7) + -1;\n                    iVar7 = arg4 + iVar7 * 1000000000 + 1000000000;\n                }\n                if (999999999 < iVar7) {\n                    iVar1 = iVar7 / 1000000000 + (iVar7 >> 0x3f);\n                    arg3 = arg3 + iVar1;\n                    iVar7 = iVar7 + iVar1 * -1000000000;\n                }\n                if (arg3 < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-1 - arg3) >> 0x40, 0) - arg3) + -1 >> 5) -\n                            (-1 - arg3 >> 0x3f);\n                    unaff_RSI = (unaff_RSI - iVar1) + -1;\n                    arg3 = arg3 + iVar1 * 0x3c + 0x3c;\n                }\n                if (0x3b < arg3) {\n                    iVar1 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg3) >> 0x40, 0) + arg3 >> 5;\n                    unaff_RSI = unaff_RSI + iVar1;\n                    arg3 = arg3 + iVar1 * -0x3c;\n                }\n                if (unaff_RSI < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-1 - unaff_RSI) >> 0x40, 0) - unaff_RSI) +\n                             -1 >> 5) - (-1 - unaff_RSI >> 0x3f);\n                    unaff_RDI = (unaff_RDI - iVar1) + -1;\n                    unaff_RSI = unaff_RSI + iVar1 * 0x3c + 0x3c;\n                }\n                if (0x3b < unaff_RSI) {\n                    iVar1 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(unaff_RSI) >> 0x40, 0) + unaff_RSI >> 5;\n                    unaff_RDI = unaff_RDI + iVar1;\n                    unaff_RSI = unaff_RSI + iVar1 * -0x3c;\n                }\n                if (unaff_RDI < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(-1 - unaff_RDI) >> 0x40, 0) - unaff_RDI) +\n                             -1 >> 4) - (-1 - unaff_RDI >> 0x3f);\n                    arg1 = (arg1 - iVar1) + -1;\n                    unaff_RDI = unaff_RDI + iVar1 * 0x18 + 0x18;\n                }\n                if (0x17 < unaff_RDI) {\n                    iVar1 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RDI) >> 0x40, 0) + unaff_RDI >> 4;\n                    arg1 = arg1 + iVar1;\n                    unaff_RDI = unaff_RDI + iVar1 * -0x18;\n                }\n                uVar2 = (in_RAX + 0x440d116ebf >> 1) / 200;\n                iVar1 = in_RAX + uVar2 * -400;\n                *(*0x20 + -0x38) = uVar2 * 0x23ab1;\n                uVar3 = (iVar1 + 0x440d116ebfU >> 1) / 0x32;\n                iVar1 = iVar1 + uVar3 * -100;\n                uVar2 = iVar1 + 0x440d116ebf;\n                arg4 = ((iVar1 - (uVar2 & 0xfffffffffffffffc)) + 0x440d116ebf) * 0x16d;\n                iVar1 = uVar3 * 0x8eac + *(*0x20 + -0x38) + (uVar2 >> 2) * 0x5b5 + arg4;\n                if (uVar8 < 0xd) {\n                    *(*0x20 + -0x28) = iVar7;\n                    iVar6 = *(uVar8 * 4 + 0x55de00);\n                    iVar7 = iVar6 + iVar1;\n                    if (((in_RAX & 3) == 0) &&\n                       (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) -\n                                    (in_RAX >> 0x3f)) * 100 ||\n                         ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4)\n                          < 0xa3d70a3d70a3d7)) && (2 < uVar8 + 1)))) {\n                        iVar7 = iVar1 + iVar6 + 1;\n                    }\n                    *(*0x20 + 0x40) = in_R10;\n                    iVar1 = unaff_RSI * 0x3c;\n                    iVar7 = (iVar7 + arg1 + -1) * 0x15180 + unaff_RDI * 0xe10 + iVar1 + arg3;\n                    *(*0x20 + -0x30) = iVar7;\n                    *(*0x20 + -0x40) = iVar7 + -0x7ffffffe1ad9c900;\n                    *(*0x20 + -0x58) = 0x47a73f;\n                    fcn.0047a980();\n                    if (iVar7 == 0) {\n                        iVar7 = *(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x30);\n                        iVar6 = (iVar5 - iVar7) + -0x7ffffffe1ad9c900;\n                        if ((iVar6 < unaff_RDI) || (iVar1 - iVar6 == 0 || iVar1 < iVar6)) {\n                            *(*0x20 + -0x58) = 0x47a777;\n                            fcn.0047a980();\n                            iVar5 = *(*0x20 + -0x30);\n                        }\n                        iVar7 = (iVar5 - iVar7) + -0x7ffffffe1ad9c900;\n                    }\n                    iVar1 = *(*0x20 + -0x28);\n                    *(*0x20 + -0x20) = iVar1;\n                    *(*0x20 + -0x18) = iVar7 + 0xe7791f700;\n                    *(*0x20 + -0x10) = *0x5ca5a8;\n                    iVar7 = *(*0x20 + 0x40);\n                    if (iVar7 == 0x5ced80) {\n                        iVar7 = 0;\n                    }\n                    if (iVar1 < 0) {\n                        *(*0x20 + -0x18) = ((iVar1 << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = *(*0x20 + -0x28) & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = iVar7;\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = 0xd;\n                *(*0x20 + -0x58) = 0x47a830;\n                fcn.0045eee0(0xd);\n            }\n            unaff_RBX = 0x4eea70;\n            *(*0x20 + -0x58) = 0x47a845;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + -8) = 0x47a873;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2599
    },
    "0047b360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0047b360(void)\n\n{\n    uint32_t uVar1;\n    char *in_RAX;\n    char *pcVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        return NULL;\n    }\n    if (*in_RAX == '<') {\n        uVar4 = 0;\n        do {\n            arg1 = uVar4;\n            if (unaff_RBX <= arg1) {\n                return NULL;\n            }\n            uVar3 = in_RAX[arg1];\n            if (in_RAX[arg1] < 0x80) {\n                uVar4 = arg1 + 1;\n            }\n            else {\n                uVar1 = fcn.00458fa0(arg1);\n                uVar3 = uVar1;\n                uVar4 = unaff_RBX;\n            }\n        } while (uVar3 != 0x3e);\n        if (arg1 <= unaff_RBX) {\n            if (arg1 != 0) {\n                uVar3 = arg1 - 1;\n                if (arg1 + 1 <= unaff_RBX) {\n                    return in_RAX + (-uVar3 >> 0x3f & 1);\n                }\n                arg1 = unaff_RBX;\n                fcn.0045efa0(unaff_RBX);\n            }\n            fcn.0045efa0(arg1);\n        }\n        pcVar2 = fcn.0045ef20(arg1, unaff_RBX);\n    }\n    else {\n        pcVar2 = in_RAX;\n        uVar3 = 0;\n    }\n    do {\n        uVar4 = uVar3;\n        if (unaff_RBX <= uVar4) {\n            if (2 < unaff_RBX) {\n                return pcVar2;\n            }\n            return NULL;\n        }\n        uVar1 = pcVar2[uVar4];\n        if (pcVar2[uVar4] < 0x80) {\n            uVar3 = uVar4 + 1;\n        }\n        else {\n            uVar1 = fcn.00458fa0(uVar4);\n            pcVar2 = in_RAX;\n            uVar3 = unaff_RBX;\n        }\n    } while ((2 < uVar1 - 0x2b) && (9 < uVar1 - 0x30));\n    if (2 < uVar4) {\n        return pcVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 618
    },
    "0047e460": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0047e460(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x560580);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x55d160)) || (*(iVar1 + 0x55d161) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045eee0(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 572
    },
    "0047e620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0047e620(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x560580);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x55d160)) || (*(iVar1 + 0x55d161) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045eee0(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 572
    },
    "0047e900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047e900(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0047ea4c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x0047e9a0;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045eee0(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x0047e9a0:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045eee0(unaff_RBX);\n    }\n    fcn.0045eee0(unaff_RBX);\ncode_r0x0047ea4c:\n    fcn.0045eee0(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 604
    },
    "0047ea60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0047ea60(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0047ebb3;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x560580);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0047eba8:\n                        fcn.0045eee0(unaff_RBX);\ncode_r0x0047ebb3:\n                        fcn.0045eee0(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x55d160)) || (*(iVar1 + 0x55d161) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0047eb9d:\n                            fcn.0045eee0(unaff_RBX);\n                            goto code_r0x0047eba8;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045eee0(unaff_RBX);\n                                    goto code_r0x0047eb9d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 673
    },
    "0047ebc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0047ebc0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0047ed13;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x560580);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0047ed08:\n                        fcn.0045eee0(unaff_RBX);\ncode_r0x0047ed13:\n                        fcn.0045eee0(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x55d160)) || (*(iVar1 + 0x55d161) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0047ecfd:\n                            fcn.0045eee0(unaff_RBX);\n                            goto code_r0x0047ed08;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045eee0(unaff_RBX);\n                                    goto code_r0x0047ecfd;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "00485520": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00485520(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    int64_t iVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t aiStack20 [3];\n    \n    if (2 < in_RAX) {\n        return 0xfffd;\n    }\n    iVar5 = 0;\n    uVar4 = unaff_RDI;\n    while( true ) {\n        uVar6 = uVar4;\n        if (uVar6 <= iVar5) {\n            return unaff_EBX;\n        }\n        iVar7 = (uVar6 - iVar5) / 2;\n        uVar4 = iVar7 + iVar5;\n        if (unaff_RDI <= uVar4) break;\n        iVar1 = arg1 + uVar4 * 0x14;\n        iVar3 = *(arg1 + uVar4 * 0x14);\n        aiStack20[0] = *(iVar1 + 8);\n        aiStack20[1] = *(iVar1 + 0xc);\n        aiStack20[2] = *(iVar1 + 0x10);\n        if (iVar3 <= unaff_EBX) {\n            if (unaff_EBX <= *(iVar1 + 4)) {\n                if (aiStack20[in_RAX] < 0x110000) {\n                    return aiStack20[in_RAX] + unaff_EBX;\n                }\n                return (unaff_EBX - iVar3 & 0xfffffffe | in_RAX & 1) + iVar3;\n            }\n            if (iVar3 <= unaff_EBX) {\n                iVar5 = iVar7 + iVar5 + 1;\n                uVar4 = uVar6;\n            }\n        }\n    }\n    fcn.0045eee0(unaff_RDI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 470
    },
    "0048a300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048a300(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    ulong unaff_RBP;\n    uint *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    int64_t iVar16;\n    uint *puVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0xc0) = in_RAX;\n            *(*0x20 + 200) = unaff_RBX;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x1b0) = *0x20 + -8;\n            *(*0x20 + -0x1a8) = 0x48a36f;\n            fcn.0045f18f();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x1a8) = 0x48a37f;\n            uVar4 = fcn.0040cc20();\n            *(*0x20 + -0xb0) = uVar4;\n            *(*0x20 + -0x15a) = 0;\n            *(*0x20 + -0x50) = in_XMM15;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            unaff_RBX = *(*0x20 + 200);\n            if (unaff_RBX == 0) {\n                puVar11 = NULL;\ncode_r0x0048a537:\n                iVar5 = *(*0x20 + 0xc0);\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                puVar13 = *(iVar5 + 0x30);\n                if (*(iVar5 + 0x30) == 0) {\n                    iVar7 = 0;\n                    puVar17 = NULL;\ncode_r0x0048a57f:\n                    *(*0x20 + -0x150) = puVar17;\n                    *(*0x20 + -0xb8) = iVar7;\n                    iVar9 = 0;\n                    puVar13 = puVar11;\ncode_r0x0048a5b9:\n                    *(*0x20 + -0x138) = puVar13;\n                    if (puVar17 <= iVar9) {\n                        iVar7 = *(*0x20 + -0x20);\n                        *(*0x20 + -0x15c) = 0;\n                        *(*0x20 + -0x98) = in_XMM15;\n                        *(*0x20 + -0x90) = in_XMM15;\n                        *(*0x20 + -0x80) = in_XMM15;\n                        *(*0x20 + -0x70) = in_XMM15;\n                        *(*0x20 + -0x60) = in_XMM15;\n                        puVar11 = iVar7 + 7U & 0xfffffffffffffff8;\n                        *(*0x20 + -0x68) = puVar11;\n                        if ((*(iVar5 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        uVar15 = *(iVar5 + 0x32) & 0x7fff;\n                        puVar17 = uVar15;\n                        if (uVar15 == 0) {\n                            iVar16 = 0;\n                            iVar5 = 0;\ncode_r0x0048a780:\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x148) = puVar11;\n                            *(*0x20 + -0x158) = iVar16;\n                            *(*0x20 + -0xc0) = iVar5;\n                            iVar9 = 0;\n                            do {\n                                if (iVar16 <= iVar9) {\n                                    *(*0x20 + -0x68) = *(*0x20 + -0x68) - puVar11;\n                                    *(*0x20 + 8) = in_XMM15;\n                                    *(*0x20 + -0x1b0) = unaff_RBP;\n                                    *(*0x20 + -0x1a8) = 0x48a8ef;\n                                    uVar4 = fcn.0045f18f();\n                                    *(*0x20 + 8) = *(*0x20 + -0x50);\n                                    *(*0x20 + 0x10) = *(*0x20 + -0x48);\n                                    *(*0x20 + 0x14) = *(*0x20 + -0x44);\n                                    *(*0x20 + 0x18) = *(*0x20 + -0x40);\n                                    *(*0x20 + 0x1c) = *(*0x20 + -0x3c);\n                                    *(*0x20 + 0x20) = *(*0x20 + -0x38);\n                                    *(*0x20 + 0x24) = *(*0x20 + -0x34);\n                                    *(*0x20 + 0x28) = *(*0x20 + -0x30);\n                                    *(*0x20 + 0x2c) = *(*0x20 + -0x2c);\n                                    *(*0x20 + 0x30) = *(*0x20 + -0x28);\n                                    *(*0x20 + 0x34) = *(*0x20 + -0x24);\n                                    *(*0x20 + 0x38) = *(*0x20 + -0x20);\n                                    *(*0x20 + 0x3c) = *(*0x20 + -0x1c);\n                                    *(*0x20 + 0x40) = *(*0x20 + -0x18);\n                                    *(*0x20 + 0x44) = *(*0x20 + -0x14);\n                                    *(*0x20 + 0x48) = *(*0x20 + -0x10);\n                                    *(*0x20 + 0x4c) = *(*0x20 + -0xc);\n                                    *(*0x20 + 0x50) = *(*0x20 + -0x98);\n                                    *(*0x20 + 0x58) = *(*0x20 + -0x90);\n                                    *(*0x20 + 0x5c) = *(*0x20 + -0x8c);\n                                    *(*0x20 + 0x60) = *(*0x20 + -0x88);\n                                    *(*0x20 + 100) = *(*0x20 + -0x84);\n                                    *(*0x20 + 0x68) = *(*0x20 + -0x80);\n                                    *(*0x20 + 0x6c) = *(*0x20 + -0x7c);\n                                    *(*0x20 + 0x70) = *(*0x20 + -0x78);\n                                    *(*0x20 + 0x74) = *(*0x20 + -0x74);\n                                    *(*0x20 + 0x78) = *(*0x20 + -0x70);\n                                    *(*0x20 + 0x7c) = *(*0x20 + -0x6c);\n                                    *(*0x20 + 0x80) = *(*0x20 + -0x68);\n                                    *(*0x20 + 0x84) = *(*0x20 + -100);\n                                    *(*0x20 + 0x88) = *(*0x20 + -0x60);\n                                    *(*0x20 + 0x8c) = *(*0x20 + -0x5c);\n                                    *(*0x20 + 0x90) = *(*0x20 + -0x58);\n                                    *(*0x20 + 0x94) = *(*0x20 + -0x54);\n                                    *(*0x20 + 0x98) = iVar7;\n                                    *(*0x20 + 0xa0) = puVar11;\n                                    *(*0x20 + 0xa8) = puVar13 + 7U & 0xfffffffffffffff8;\n                                    *(*0x20 + 0xb0) = uVar4;\n                                    *(*0x20 + 0xb8) = *(*0x20 + -0x15a);\n                                    *(*0x20 + 0xba) = *(*0x20 + -0x15c);\n                                    return;\n                                }\n                                *(*0x20 + -0x130) = iVar9;\n                                *(*0x20 + -0xa8) = *(iVar5 + iVar9 * 8);\n                                *(*0x20 + -0x1a8) = 0x48a7f2;\n                                iVar5 = fcn.00489420();\n                                if (iVar5 == 0) {\n                                    puVar13 = *(*0x20 + -0x78);\n                                    puVar8 = *(*0x20 + -0x130);\n                                    if (puVar13 <= puVar8) goto code_r0x0048aac5;\n                                    puVar11 = *(*(*0x20 + -0x80) + puVar8 * 8);\n                                    if (puVar8 == puVar13 - 1U) {\n                                        puVar13 = *(*0x20 + -0x90);\n                                    }\n                                    else {\n                                        puVar17 = puVar8 + 1;\n                                        if (puVar13 <= puVar17) goto code_r0x0048aab8;\n                                        puVar13 = *(*(*0x20 + -0x80) + 8 + puVar8 * 8);\n                                    }\n                                    puVar8 = *(*0x20 + -0x88);\n                                    puVar17 = *(*0x20 + -0x98);\n                                    if (puVar8 < puVar13) goto code_r0x0048aab0;\n                                    if (puVar13 < puVar11) goto code_r0x0048aaa5;\n                                    puVar13 = puVar13 - puVar11;\n                                    puVar8 = puVar17 + (puVar11 - puVar8 >> 0x3f & puVar11 * 0x30);\n                                    if (puVar13 != NULL) {\n                                        iVar5 = 0;\n                                        do {\n                                            uVar1 = puVar8[1];\n                                            uVar2 = puVar8[2];\n                                            uVar3 = puVar8[3];\n                                            *(*0x20 + -0x120) = *puVar8;\n                                            *(*0x20 + -0x11c) = uVar1;\n                                            *(*0x20 + -0x118) = uVar2;\n                                            *(*0x20 + -0x114) = uVar3;\n                                            uVar1 = puVar8[5];\n                                            uVar2 = puVar8[6];\n                                            uVar3 = puVar8[7];\n                                            *(*0x20 + -0x110) = puVar8[4];\n                                            *(*0x20 + -0x10c) = uVar1;\n                                            *(*0x20 + -0x108) = uVar2;\n                                            *(*0x20 + -0x104) = uVar3;\n                                            uVar1 = puVar8[9];\n                                            uVar2 = puVar8[10];\n                                            uVar3 = puVar8[0xb];\n                                            *(*0x20 + -0x100) = puVar8[8];\n                                            *(*0x20 + -0xfc) = uVar1;\n                                            *(*0x20 + -0xf8) = uVar2;\n                                            *(*0x20 + -0xf4) = uVar3;\n                                            if (*(*0x20 + -0x120) == 3) {\n                                                puVar17 = *(*0x20 + -0x100);\n                                                puVar14 = ((puVar17 >> 0x3f) >> 0x3d) + puVar17 >> 3;\n                                                puVar11 = puVar14;\n                                                if (puVar14 < 0x2) {\n                                                    puVar11 = puVar14 * 8;\n                                                    puVar17 = puVar17 + puVar14 * -2;\n                                                    if (-1 < puVar17) {\n                                                        (*0x20 + -0x15c)[puVar14] =\n                                                             (*0x20 + -0x15c)[puVar14] |\n                                                             1 << (puVar17 & 0x1f) & -(puVar17 < 0x20);\n                                                        goto code_r0x0048aa75;\n                                                    }\n                                                    *(*0x20 + -0x1a8) = 0x48aa93;\n                                                    fcn.00432200();\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x48aaa5;\n                                                fcn.0045eee0(2);\n                                                goto code_r0x0048aaa5;\n                                            }\ncode_r0x0048aa75:\n                                            iVar5 = iVar5 + 1;\n                                            if (puVar13 <= iVar5) break;\n                                            puVar8 = puVar8 + 0xc;\n                                        } while( true );\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x1a8) = 0x48a8ab;\n                                    fcn.0048c680(*(*0x20 + -0xa8));\n                                }\n                                puVar17 = *(*0x20 + -0x130);\n                                iVar9 = puVar17 + 1;\n                                puVar13 = *(*0x20 + -0x138);\n                                iVar7 = *(*0x20 + -0x140);\n                                iVar5 = *(*0x20 + -0xc0);\n                                puVar11 = *(*0x20 + -0x148);\n                                iVar16 = *(*0x20 + -0x158);\n                            } while( true );\n                        }\n                        puVar8 = *(iVar5 + 0x30);\n                        puVar17 = uVar15 + *(iVar5 + 0x30) & 0xffff;\n                        if (puVar8 <= puVar17) {\n                            iVar16 = puVar17 - puVar8;\n                            puVar17 = -iVar16 >> 0x3f;\n                            iVar5 = iVar5 + iVar9 + (puVar8 << 3 & puVar17);\n                            goto code_r0x0048a780;\n                        }\n                        goto code_r0x0048aaca;\n                    }\n                    *(*0x20 + -0x128) = iVar9;\n                    *(*0x20 + -0xa0) = *(iVar7 + iVar9 * 8);\n                    *(*0x20 + -0x1a8) = 0x48a5e7;\n                    iVar5 = fcn.00489420();\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x1a8) = 0x48a6c9;\n                        fcn.0048c680(*(*0x20 + -0xa0));\n                        puVar13 = *(*0x20 + -0x138);\n                        goto code_r0x0048a590;\n                    }\n                    uVar18 = *(*(*0x20 + -0xa0) + 0x15);\n                    puVar13 = (-uVar18 & (*(*0x20 + -0x138) + uVar18) - 1) + **(*0x20 + -0xa0);\n                    puVar11 = *(*0x20 + -0x30);\n                    puVar17 = *(*0x20 + -0x128);\n                    if (puVar17 < puVar11) {\n                        puVar8 = *(*(*0x20 + -0x38) + puVar17 * 8);\n                        if (puVar17 == puVar11 - 1U) {\n                            puVar11 = *(*0x20 + -0x48);\n                        }\n                        else {\n                            if (puVar11 <= puVar17 + 1U) goto code_r0x0048aba5;\n                            puVar11 = *(*(*0x20 + -0x38) + 8 + puVar17 * 8);\n                        }\n                        puVar17 = *(*0x20 + -0x40);\n                        if (puVar11 <= puVar17) {\n                            if (puVar8 <= puVar11) {\n                                puVar11 = puVar11 - puVar8;\n                                puVar17 = *(*0x20 + -0x50) + (puVar8 - puVar17 >> 0x3f & puVar8 * 0x30);\n                                if (puVar11 != NULL) {\n                                    iVar5 = 0;\n                                    do {\n                                        uVar1 = puVar17[1];\n                                        uVar2 = puVar17[2];\n                                        uVar3 = puVar17[3];\n                                        *(*0x20 + -0xf0) = *puVar17;\n                                        *(*0x20 + -0xec) = uVar1;\n                                        *(*0x20 + -0xe8) = uVar2;\n                                        *(*0x20 + -0xe4) = uVar3;\n                                        uVar1 = puVar17[5];\n                                        uVar2 = puVar17[6];\n                                        uVar3 = puVar17[7];\n                                        *(*0x20 + -0xe0) = puVar17[4];\n                                        *(*0x20 + -0xdc) = uVar1;\n                                        *(*0x20 + -0xd8) = uVar2;\n                                        *(*0x20 + -0xd4) = uVar3;\n                                        uVar1 = puVar17[9];\n                                        uVar2 = puVar17[10];\n                                        uVar3 = puVar17[0xb];\n                                        *(*0x20 + -0xd0) = puVar17[8];\n                                        *(*0x20 + -0xcc) = uVar1;\n                                        *(*0x20 + -200) = uVar2;\n                                        *(*0x20 + -0xc4) = uVar3;\n                                        if (*(*0x20 + -0xf0) == 3) {\n                                            iVar7 = *(*0x20 + -0xd0);\n                                            uVar18 = ((iVar7 >> 0x3f) >> 0x3d) + iVar7 >> 3;\n                                            if (uVar18 < 2) {\n                                                uVar19 = iVar7 + uVar18 * -8;\n                                                if (-1 < uVar19) {\n                                                    *(*0x20 + (uVar18 - 0x15a)) =\n                                                         *(*0x20 + (uVar18 - 0x15a)) |\n                                                         1 << (uVar19 & 0x1f) & -(uVar19 < 0x20);\n                                                    goto code_r0x0048ab6d;\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x48ab85;\n                                                fcn.00432200();\n                                            }\n                                            *(*0x20 + -0x1a8) = 0x48ab92;\n                                            fcn.0045eee0(2);\n                                            goto code_r0x0048ab92;\n                                        }\ncode_r0x0048ab6d:\n                                        iVar5 = iVar5 + 1;\n                                        if (puVar11 <= iVar5) break;\n                                        puVar17 = puVar17 + 0xc;\n                                    } while( true );\n                                }\n                                goto code_r0x0048a590;\n                            }\ncode_r0x0048ab92:\n                            *(*0x20 + -0x1a8) = 0x48ab9d;\n                            fcn.0045efa0(puVar11);\n                        }\n                        *(*0x20 + -0x1a8) = 0x48aba5;\n                        fcn.0045ef60(puVar11, puVar17);\ncode_r0x0048aba5:\n                        *(*0x20 + -0x1a8) = 0x48abad;\n                        fcn.0045eee0(puVar11);\n                    }\n                    *(*0x20 + -0x1a8) = 0x48abb2;\n                    fcn.0045eee0(puVar11);\n                }\n                else {\n                    iVar7 = iVar7 + iVar5;\n                    puVar17 = puVar13;\n                    if (puVar13 < 0x100001) goto code_r0x0048a57f;\n                }\n                unaff_RBX = 0x100000;\n                *(*0x20 + -0x1a8) = 0x48abbf;\n                fcn.0045efe0(puVar11, puVar13 & 0xffffffff);\ncode_r0x0048abc0:\n                *(*0x20 + -0x1a8) = 0x48abc5;\n                fcn.0045eee0(puVar11);\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x48a3dc;\n                iVar5 = fcn.00489720();\n                if (iVar5 == 0) {\n                    puVar11 = 0x8;\n                    goto code_r0x0048a537;\n                }\n                if (unaff_RBX == '\\0') {\n                    puVar12 = *(*0x20 + -0xb0);\n                    uVar18 = *puVar12;\n                    puVar6 = puVar12;\n                    if ((*puVar12 & 7) == 0) {\n                        iVar5 = *(puVar12 + 4);\n                        iVar7 = *(puVar12 + 2);\n                        unaff_RBX = iVar7;\n                        if (*(puVar12 + 6) < iVar5 + 1U) {\n                            *(*0x20 + -0x1a8) = 0x48a4d1;\n                            unaff_RBX = fcn.00447240(iVar5);\n                            puVar6 = *(*0x20 + -0xb0);\n                            *(puVar6 + 6) = iVar5;\n                            if (*0x626890 == 0) {\n                                *(puVar6 + 2) = unaff_RBX;\n                                iVar5 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x1a8) = 0x48a4f5;\n                                unaff_RBX = fcn.0045ea40(iVar5, puVar6, puVar12, uVar18);\n                                iVar5 = iVar7;\n                            }\n                        }\n                        *(puVar6 + 4) = iVar5 + 1;\n                        *(unaff_RBX + iVar5) = 0;\n                    }\n                    puVar11 = *(puVar6 + 4);\n                    if (*puVar6 >> 3 < puVar11) {\n                        *puVar6 = *puVar6 + 1;\n                        goto code_r0x0048a520;\n                    }\n                    goto code_r0x0048abc0;\n                }\n                puVar12 = *(*0x20 + -0xb0);\n                uVar18 = *puVar12;\n                puVar6 = puVar12;\n                if ((*puVar12 & 7) == 0) {\n                    iVar5 = *(puVar12 + 4);\n                    iVar7 = *(puVar12 + 2);\n                    unaff_RBX = iVar7;\n                    if (*(puVar12 + 6) < iVar5 + 1U) {\n                        *(*0x20 + -0x1a8) = 0x48a42a;\n                        unaff_RBX = fcn.00447240(iVar5);\n                        puVar6 = *(*0x20 + -0xb0);\n                        *(puVar6 + 6) = iVar5;\n                        if (*0x626890 == 0) {\n                            *(puVar6 + 2) = unaff_RBX;\n                            iVar5 = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0x1a8) = 0x48a44e;\n                            unaff_RBX = fcn.0045ea40(iVar5, puVar6, puVar12, uVar18);\n                            iVar5 = iVar7;\n                        }\n                    }\n                    *(puVar6 + 4) = iVar5 + 1;\n                    *(unaff_RBX + iVar5) = 0;\n                }\n                puVar11 = *(puVar6 + 4);\n                puVar13 = *puVar6 >> 3;\n                if (puVar13 < puVar11) {\n                    *(*(puVar6 + 2) + puVar13) = *(*(puVar6 + 2) + puVar13) | 1 << (*puVar6 & 7);\n                    *puVar6 = *puVar6 + 1;\ncode_r0x0048a520:\n                    puVar11 = NULL;\n                    goto code_r0x0048a537;\n                }\n            }\n            *(*0x20 + -0x1a8) = 0x48abca;\n            in_RAX = fcn.0045eee0(puVar11);\n        }\n        *(puVar10 + 0xc0) = in_RAX;\n        *(puVar10 + 200) = unaff_RBX;\n        *(puVar10 + -8) = 0x48abe5;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 0xc0);\n        unaff_RBX = *(puVar10 + 200);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x0048aaa5:\n    *(*0x20 + -0x1a8) = 0x48aab0;\n    fcn.0045efa0(puVar13);\ncode_r0x0048aab0:\n    *(*0x20 + -0x1a8) = 0x48aab8;\n    fcn.0045ef60(puVar13, puVar8);\ncode_r0x0048aab8:\n    *(*0x20 + -0x1a8) = 0x48aac5;\n    fcn.0045eee0(puVar13);\ncode_r0x0048aac5:\n    *(*0x20 + -0x1a8) = 0x48aaca;\n    fcn.0045eee0(puVar13);\ncode_r0x0048aaca:\n    puVar13 = puVar11;\n    *(*0x20 + -0x1a8) = 0x48aad5;\n    fcn.0045f040(puVar17);\ncode_r0x0048a590:\n    iVar9 = *(*0x20 + -0x128) + 1;\n    iVar5 = *(*0x20 + 0xc0);\n    puVar17 = *(*0x20 + -0x150);\n    iVar7 = *(*0x20 + -0xb8);\n    goto code_r0x0048a5b9;\n}\n",
        "token_count": 6131
    },
    "0048d260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048d260(ulong arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    ulong *arg1_00;\n    uint64_t unaff_RBX;\n    ulong *arg1_01;\n    uchar *puVar11;\n    ulong unaff_RBP;\n    ulong *puVar12;\n    ulong *unaff_RDI;\n    ulong *arg3;\n    ulong arg3_00;\n    ulong arg4;\n    uint64_t uVar13;\n    ulong *arg2;\n    ulong *puVar14;\n    ulong *puVar15;\n    int64_t iVar16;\n    ulong *puVar17;\n    int64_t unaff_R14;\n    uint64_t uVar18;\n    ulong *arg2_00;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x590 && *0x20 + -0x590 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x610;\n            *(*0x20 + -8) = unaff_RBP;\n            piVar1 = *(unaff_R14 + 0x20);\n            if ((piVar1 != NULL) && (*piVar1 == *0x20 + 8)) {\n                *piVar1 = *0x20 + -0x610;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = *(in_RAX + 0x30);\n            *(*0x20 + -0x348) = uVar6;\n            uVar7 = *(in_RAX + 0x28);\n            *(*0x20 + -0x350) = uVar7;\n            *(*0x20 + -0x520) = *(in_RAX + 0x38);\n            arg3_00 = *(in_RAX + 0x20);\n            *(*0x20 + -0x618) = 0x48d2f5;\n            arg4 = uVar7;\n            uVar6 = fcn.0048cf60(uVar7, uVar6, arg3_00);\n            *(*0x20 + -0x380) = uVar6;\n            *(*0x20 + -0x388) = 4;\n            *(*0x20 + -0x360) = uVar7;\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *0x20 + -8;\n            *(*0x20 + -0x618) = 0x48d331;\n            fcn.0045f18f();\n            uVar6 = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x48d33f;\n            fcn.0048bf60();\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x48d36f;\n            fcn.0045f4c6();\n            *(*0x20 + -0x340) = *(*0x20 + -0x1d0);\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x48d3af;\n            fcn.0045f4c6();\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x48d3d7;\n            fcn.0045f18f();\n            uVar6 = *(*0x20 + -0x620);\n            arg1_01 = *(*0x20 + -0x380);\n            *(*0x20 + -0x618) = 0x48d3f0;\n            uVar7 = fcn.0048bf60();\n            *(*0x20 + -0x378) = uVar7;\n            *(*0x20 + -0x370) = arg1_01;\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x48d42f;\n            fcn.0045f4c6();\n            *(*0x20 + -0x288) = *(*0x20 + -0x1d0);\n            unaff_RDI = *0x20 + -0x280;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x48d46f;\n            fcn.0045f4c6();\n            unaff_RBP = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x48d47b;\n            iVar8 = fcn.00465f40();\n            unaff_RBX = 0x4b5060;\n            if (iVar8 == 0x4b5060) {\n                unaff_RDI = *0x20 + -0x148;\n                *(*0x20 + -0x620) = unaff_RBP;\n                *(*0x20 + -0x618) = 0x48d4af;\n                fcn.0045f16b();\n                unaff_RBP = *(*0x20 + -0x620);\n                puVar2 = *(*0x20 + -0x288);\n                puVar15 = *(*0x20 + -0x280);\n                if (puVar15 != NULL) {\n                    uVar3 = puVar2[1];\n                    uVar4 = puVar2[2];\n                    uVar5 = puVar2[3];\n                    *(*0x20 + -0x488) = *puVar2;\n                    *(*0x20 + -0x484) = uVar3;\n                    *(*0x20 + -0x480) = uVar4;\n                    *(*0x20 + -0x47c) = uVar5;\n                    uVar3 = puVar2[5];\n                    uVar4 = puVar2[6];\n                    uVar5 = puVar2[7];\n                    *(*0x20 + -0x478) = puVar2[4];\n                    *(*0x20 + -0x474) = uVar3;\n                    *(*0x20 + -0x470) = uVar4;\n                    *(*0x20 + -0x46c) = uVar5;\n                    uVar3 = puVar2[9];\n                    uVar4 = puVar2[10];\n                    uVar5 = puVar2[0xb];\n                    *(*0x20 + -0x468) = puVar2[8];\n                    *(*0x20 + -0x464) = uVar3;\n                    *(*0x20 + -0x460) = uVar4;\n                    *(*0x20 + -0x45c) = uVar5;\n                    if (*(*0x20 + -0x488) == 1) {\n                        if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                            if (*0x626890 == 0) {\n                                *arg1_01 = *(*(*0x20 + -0x348) + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x48d550;\n                                fcn.0045ea40(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                            if (*0x626890 == 0) {\n                                *arg1_01 = *(*0x20 + -0x348);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x48d5c5;\n                                fcn.0045ea40(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (*0x626890 == 0) {\n                            *arg1_01 = **(*0x20 + -0x348);\n                        }\n                        else {\n                            *(*0x20 + -0x618) = 0x48d595;\n                            fcn.0045ea40(puVar15, unaff_RBX, arg3_00, arg4);\n                            unaff_RDI = arg1_01;\n                        }\n                    }\n                    else if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                        *(*0x20 + -0x118) = *(*(*0x20 + -0x348) + 8);\n                    }\n                    else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                        *(*0x20 + -0x118) = *(*0x20 + -0x348);\n                    }\n                    else {\n                        *(*0x20 + -0x118) = **(*0x20 + -0x348);\n                    }\n                    iVar8 = *(*0x20 + -0x388);\n                    if ((*(iVar8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    arg3 = *(iVar8 + 0x30);\n                    if (*(iVar8 + 0x30) == 0) {\n                        arg3 = NULL;\n                        arg1_00 = NULL;\ncode_r0x0048d67e:\n                        *(*0x20 + -0x368) = arg1_01;\n                        *(*0x20 + -0x390) = arg1_00;\n                        *(*0x20 + -0x538) = arg3;\n                        puVar10 = NULL;\ncode_r0x0048d6a3:\n                        do {\n                            if (arg3 <= puVar10) {\n                                iVar8 = **(*0x20 + -0x378);\n                                *(*0x20 + -0x10) = *(*0x20 + -0x1d6);\n                                *(*0x20 + -0x618) = 0x48d9f4;\n                                fcn.00460f60(arg1_01, *(*0x20 + -0x1d6), \n                                             (iVar8 + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x1e8), *0x20 + -0x118);\n                                if (*(*0x20 + 0x20) != 0) {\n                                    if (*0x626890 == 0) {\n                                        *(*0x20 + -0x620) = unaff_RBP;\n                                        *(*0x20 + -0x618) = 0x48da2f;\n                                        fcn.0045f472();\n                                    }\n                                    else {\n                                        *(*0x20 + -0x618) = 0x48da4c;\n                                        fcn.00411b00(*0x20 + -0x118);\n                                    }\n                                }\n                                iVar8 = **(*0x20 + -0x378);\n                                if (iVar8 - *(*0x20 + -0x1f0) != 0) {\n                                    *(*0x20 + -0x618) = 0x48da95;\n                                    fcn.0045aae0(iVar8 - *(*0x20 + -0x1f0));\n                                }\n                                **(*0x20 + 0x18) = 1;\n                                *(*0x20 + -0x618) = 0x48dab5;\n                                fcn.00459760();\n                                *(*0x20 + -0x618) = 0x48dad1;\n                                fcn.00465e60(*(*0x20 + -0x368));\n                                return;\n                            }\n                            puVar12 = arg1_00[puVar10];\n                            puVar15 = *(*0x20 + -800);\n                            if (puVar15 <= puVar10) goto code_r0x0048e0ef;\n                            puVar17 = *(*(*0x20 + -0x328) + puVar10 * 8);\n                            if (puVar10 == puVar15 + -1) {\n                                puVar15 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                if (puVar15 <= puVar10 + 1U) goto code_r0x0048e0e7;\n                                puVar15 = *(*(*0x20 + -0x328) + 8 + puVar10 * 8);\n                            }\n                            iVar8 = *(*0x20 + -0x340);\n                            arg2 = *(*0x20 + -0x330);\n                            puVar14 = arg3;\n                            if (arg2 < puVar15) goto code_r0x0048e0dc;\n                            if (puVar15 < puVar17) goto code_r0x0048e0d1;\n                            puVar14 = puVar10 + 1;\n                            puVar15 = puVar15 - puVar17;\n                            uVar18 = puVar17 - arg2 >> 0x3f & puVar17 * 0x30;\n                            arg2 = iVar8 + uVar18;\n                            puVar17 = *(*0x20 + -0x268);\n                            if (puVar17 <= puVar14) goto code_r0x0048e0c6;\n                            *(*0x20 + -0x540) = puVar15;\n                            *(*0x20 + -0x398) = arg2;\n                            arg2 = *(*(*0x20 + -0x270) + 8 + puVar10 * 8);\n                            if (puVar17 - 1U == puVar14) {\n                                puVar15 = *(*0x20 + -0x280);\n                            }\n                            else {\n                                puVar15 = puVar10 + 2;\n                                if (puVar17 <= puVar15) goto code_r0x0048e0bb;\n                                puVar15 = *(*(*0x20 + -0x270) + 0x10 + puVar10 * 8);\n                            }\n                            puVar17 = *(*0x20 + -0x288);\n                            arg2_00 = *(*0x20 + -0x278);\n                            if (arg2_00 < puVar15) goto code_r0x0048e0b0;\n                            if (puVar15 < arg2) goto code_r0x0048e0a5;\n                            puVar15 = puVar15 - arg2;\n                            uVar13 = arg2 - arg2_00 >> 0x3f & arg2 * 0x30;\n                            arg2_00 = uVar13 + puVar17;\n                            arg2 = *(*0x20 + -0x540);\n                            unaff_RDI = arg3;\n                            if (arg2 != NULL) {\n                                *(*0x20 + -0x530) = puVar14;\n                                puVar2 = *(*0x20 + -0x398);\n                                uVar3 = puVar2[1];\n                                uVar4 = puVar2[2];\n                                uVar5 = puVar2[3];\n                                *(*0x20 + -0x4b8) = *puVar2;\n                                *(*0x20 + -0x4b4) = uVar3;\n                                *(*0x20 + -0x4b0) = uVar4;\n                                *(*0x20 + -0x4ac) = uVar5;\n                                iVar9 = iVar8 + uVar18;\n                                uVar3 = *(iVar9 + 0x14);\n                                uVar4 = *(iVar9 + 0x18);\n                                uVar5 = *(iVar9 + 0x1c);\n                                *(*0x20 + -0x4a8) = *(iVar9 + 0x10);\n                                *(*0x20 + -0x4a4) = uVar3;\n                                *(*0x20 + -0x4a0) = uVar4;\n                                *(*0x20 + -0x49c) = uVar5;\n                                iVar8 = iVar8 + uVar18;\n                                puVar14 = iVar8 + 0x20;\n                                uVar3 = *(iVar8 + 0x24);\n                                uVar4 = *(iVar8 + 0x28);\n                                uVar5 = *(iVar8 + 0x2c);\n                                *(*0x20 + -0x498) = *puVar14;\n                                *(*0x20 + -0x494) = uVar3;\n                                *(*0x20 + -0x490) = uVar4;\n                                *(*0x20 + -0x48c) = uVar5;\n                                if (*(*0x20 + -0x4b8) == 1) {\n                                    if (puVar15 == NULL) {\ncode_r0x0048e085:\n                                        *(*0x20 + -0x618) = 0x48e08f;\n                                        fcn.0045eee0(puVar15);\n                                        break;\n                                    }\n                                    uVar3 = *(arg2_00 + 4);\n                                    uVar4 = *(arg2_00 + 1);\n                                    uVar5 = *(arg2_00 + 0xc);\n                                    *(*0x20 + -0x3c8) = *arg2_00;\n                                    *(*0x20 + -0x3c4) = uVar3;\n                                    *(*0x20 + -0x3c0) = uVar4;\n                                    *(*0x20 + -0x3bc) = uVar5;\n                                    uVar3 = *(puVar17 + uVar13 + 0x14);\n                                    uVar4 = *(puVar17 + uVar13 + 0x18);\n                                    uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                    *(*0x20 + -0x3b8) = *(puVar17 + uVar13 + 0x10);\n                                    *(*0x20 + -0x3b4) = uVar3;\n                                    *(*0x20 + -0x3b0) = uVar4;\n                                    *(*0x20 + -0x3ac) = uVar5;\n                                    arg2 = puVar17 + uVar13 + 0x20;\n                                    uVar3 = *(puVar17 + uVar13 + 0x24);\n                                    uVar4 = *(puVar17 + uVar13 + 0x28);\n                                    uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                    *(*0x20 + -0x3a8) = *arg2;\n                                    *(*0x20 + -0x3a4) = uVar3;\n                                    *(*0x20 + -0x3a0) = uVar4;\n                                    *(*0x20 + -0x39c) = uVar5;\n                                    if (*(*0x20 + -0x3c8) != 1) {\n                                        *(*0x20 + -0x548) = puVar15;\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar10 = NULL;\n                                        puVar12 = arg2_00;\n                                        goto code_r0x0048debf;\n                                    }\n                                    if (*(*0x20 + -0x3b8) == *(*0x20 + -0x4a8)) {\n                                        *(*0x20 + -0x618) = 0x48d8e9;\n                                        fcn.00459700(*(*0x20 + -0x4a0) + *(*0x20 + 0x10));\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x4b5060;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        arg3 = *(*0x20 + -0x538);\n                                        puVar10 = *(*0x20 + -0x530);\n                                        unaff_RDI = arg3;\n                                        goto code_r0x0048d6a3;\n                                    }\n                                }\n                                else {\n                                    if (puVar15 != NULL) {\n                                        uVar3 = *(arg2_00 + 4);\n                                        uVar4 = *(arg2_00 + 1);\n                                        uVar5 = *(arg2_00 + 0xc);\n                                        *(*0x20 + -0x428) = *arg2_00;\n                                        *(*0x20 + -0x424) = uVar3;\n                                        *(*0x20 + -0x420) = uVar4;\n                                        *(*0x20 + -0x41c) = uVar5;\n                                        uVar3 = *(puVar17 + uVar13 + 0x14);\n                                        uVar4 = *(puVar17 + uVar13 + 0x18);\n                                        uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                        *(*0x20 + -0x418) = *(puVar17 + uVar13 + 0x10);\n                                        *(*0x20 + -0x414) = uVar3;\n                                        *(*0x20 + -0x410) = uVar4;\n                                        *(*0x20 + -0x40c) = uVar5;\n                                        puVar14 = puVar17 + uVar13 + 0x20;\n                                        uVar3 = *(puVar17 + uVar13 + 0x24);\n                                        uVar4 = *(puVar17 + uVar13 + 0x28);\n                                        uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                        *(*0x20 + -0x408) = *puVar14;\n                                        *(*0x20 + -0x404) = uVar3;\n                                        *(*0x20 + -0x400) = uVar4;\n                                        *(*0x20 + -0x3fc) = uVar5;\n                                        if (*(*0x20 + -0x428) != 1) {\n                                            if (puVar15 != arg2) {\ncode_r0x0048dca5:\n                                                arg1_01 = 0x4ee800;\n                                                *(*0x20 + -0x618) = 0x48dcb8;\n                                                iVar8 = fcn.00433560();\n                                                puVar12 = puVar15;\n                                                goto code_r0x0048dcb8;\n                                            }\n                                            iVar9 = *(*0x20 + 0x20);\n                                            puVar14 = *(*0x20 + -0x398);\n                                            iVar8 = 0;\n                                            do {\n                                                uVar3 = *(puVar14 + 4);\n                                                uVar4 = *(puVar14 + 1);\n                                                uVar5 = *(puVar14 + 0xc);\n                                                *(*0x20 + -0x518) = *puVar14;\n                                                *(*0x20 + -0x514) = uVar3;\n                                                *(*0x20 + -0x510) = uVar4;\n                                                *(*0x20 + -0x50c) = uVar5;\n                                                uVar3 = *(puVar14 + 0x14);\n                                                uVar4 = *(puVar14 + 3);\n                                                uVar5 = *(puVar14 + 0x1c);\n                                                *(*0x20 + -0x508) = *(puVar14 + 2);\n                                                *(*0x20 + -0x504) = uVar3;\n                                                *(*0x20 + -0x500) = uVar4;\n                                                *(*0x20 + -0x4fc) = uVar5;\n                                                uVar3 = *(puVar14 + 0x24);\n                                                uVar4 = *(puVar14 + 5);\n                                                uVar5 = *(puVar14 + 0x2c);\n                                                *(*0x20 + -0x4f8) = *(puVar14 + 4);\n                                                *(*0x20 + -0x4f4) = uVar3;\n                                                *(*0x20 + -0x4f0) = uVar4;\n                                                *(*0x20 + -0x4ec) = uVar5;\n                                                iVar16 = iVar8 * 0x30;\n                                                puVar15 = arg2_00 + iVar8 * 6;\n                                                uVar3 = *(puVar15 + 4);\n                                                uVar4 = *(puVar15 + 1);\n                                                uVar5 = *(puVar15 + 0xc);\n                                                *(*0x20 + -0x458) = *puVar15;\n                                                *(*0x20 + -0x454) = uVar3;\n                                                *(*0x20 + -0x450) = uVar4;\n                                                *(*0x20 + -0x44c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x14);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 3);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x1c);\n                                                *(*0x20 + -0x448) = *(arg2_00 + iVar8 * 6 + 2);\n                                                *(*0x20 + -0x444) = uVar3;\n                                                *(*0x20 + -0x440) = uVar4;\n                                                *(*0x20 + -0x43c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x24);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 5);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x2c);\n                                                *(*0x20 + -0x438) = *(arg2_00 + iVar8 * 6 + 4);\n                                                *(*0x20 + -0x434) = uVar3;\n                                                *(*0x20 + -0x430) = uVar4;\n                                                *(*0x20 + -0x42c) = uVar5;\n                                                puVar15 = *(*0x20 + -0x518);\n                                                if (*(*0x20 + -0x458) != puVar15) {\ncode_r0x0048dc92:\n                                                    *(*0x20 + -0x618) = 0x48dca5;\n                                                    fcn.00433560();\n                                                    goto code_r0x0048dca5;\n                                                }\n                                                if (puVar15 != 0x2) {\n                                                    if (puVar15 != 0x3) {\n                                                        if (puVar15 == 0x4) {\n                                                            puVar15 = *(*0x20 + -0x4f0);\n                                                            if (puVar15 < 0xf) {\n                                                                puVar15 = *(iVar9 + 0x48 + puVar15 * 8);\n                                                                if (*(*0x20 + -0x430) < 0xf) {\n                                                                    *(*0x20 + *(*0x20 + -0x430) * 8 + -0xd0) = puVar15;\n                                                                    goto code_r0x0048dc17;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x48dc3b;\n                                                                fcn.0045eee0(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x48dc48;\n                                                            fcn.0045eee0(0xf);\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x48dc5b;\n                                                        fcn.00433560();\ncode_r0x0048dc5b:\n                                                        *(*0x20 + -0x618) = 0x48dc68;\n                                                        fcn.0045eee0(9);\n                                                        goto code_r0x0048dc68;\n                                                    }\n                                                    puVar15 = *(*0x20 + -0x4f8);\n                                                    if (puVar15 < 0x9) {\n                                                        puVar15 = *(iVar9 + 0xc0 + puVar15 * 8);\n                                                        if (*(*0x20 + -0x438) < 9) {\n                                                            *(*0x20 + *(*0x20 + -0x438) * 8 + -0x58) = puVar15;\n                                                            goto code_r0x0048dbb2;\n                                                        }\n                                                        goto code_r0x0048dc75;\n                                                    }\ncode_r0x0048dc85:\n                                                    arg1_00 = 0x9;\n                                                    *(*0x20 + -0x618) = 0x48dc92;\n                                                    fcn.0045eee0(9);\n                                                    goto code_r0x0048dc92;\n                                                }\ncode_r0x0048dbb2:\n                                                puVar15 = *(*0x20 + -0x4f8);\n                                                if (0x8 < puVar15) {\ncode_r0x0048dc68:\n                                                    *(*0x20 + -0x618) = 0x48dc75;\n                                                    fcn.0045eee0(9);\ncode_r0x0048dc75:\n                                                    *(*0x20 + -0x618) = 0x48dc85;\n                                                    fcn.0045eee0(9);\n                                                    goto code_r0x0048dc85;\n                                                }\n                                                puVar15 = *(iVar9 + puVar15 * 8);\n                                                if (8 < *(*0x20 + -0x438)) goto code_r0x0048dc5b;\n                                                *(*0x20 + *(*0x20 + -0x438) * 8 + -0x118) = puVar15;\ncode_r0x0048dc17:\n                                                iVar8 = iVar8 + 1;\n                                                if (arg2 <= iVar8) goto code_r0x0048d996;\n                                                puVar14 = puVar14 + 6;\n                                            } while( true );\n                                        }\n                                        iVar8 = *(*0x20 + 0x20);\n                                        puVar14 = *(*0x20 + -0x398);\n                                        puVar12 = NULL;\n                                        do {\n                                            uVar3 = *(puVar14 + 4);\n                                            uVar4 = *(puVar14 + 1);\n                                            uVar5 = *(puVar14 + 0xc);\n                                            *(*0x20 + -0x4e8) = *puVar14;\n                                            *(*0x20 + -0x4e4) = uVar3;\n                                            *(*0x20 + -0x4e0) = uVar4;\n                                            *(*0x20 + -0x4dc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x14);\n                                            uVar4 = *(puVar14 + 3);\n                                            uVar5 = *(puVar14 + 0x1c);\n                                            *(*0x20 + -0x4d8) = *(puVar14 + 2);\n                                            *(*0x20 + -0x4d4) = uVar3;\n                                            *(*0x20 + -0x4d0) = uVar4;\n                                            *(*0x20 + -0x4cc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x24);\n                                            uVar4 = *(puVar14 + 5);\n                                            uVar5 = *(puVar14 + 0x2c);\n                                            *(*0x20 + -0x4c8) = *(puVar14 + 4);\n                                            *(*0x20 + -0x4c4) = uVar3;\n                                            *(*0x20 + -0x4c0) = uVar4;\n                                            *(*0x20 + -0x4bc) = uVar5;\n                                            puVar15 = *(*0x20 + -0x4e0) + *(*0x20 + -0x410);\n                                            iVar9 = *(*0x20 + -0x4e8);\n                                            if (iVar9 != 2) {\n                                                if (iVar9 == 3) {\n                                                    if (*(*0x20 + -0x4c8) < 9) {\n                                                        if (*0x626890 == 0) {\n                                                            *(arg1_01 + puVar15) =\n                                                                 *(iVar8 + 0xc0 + *(*0x20 + -0x4c8) * 8);\n                                                        }\n                                                        else {\n                                                            *(*0x20 + -0x618) = 0x48dd53;\n                                                            iVar8 = fcn.0045ebe0(arg1_00, unaff_RBX, arg3);\n                                                        }\n                                                        goto code_r0x0048de31;\n                                                    }\n                                                }\n                                                else {\n                                                    if (iVar9 == 4) {\n                                                        uVar18 = *(*0x20 + -0x4c0);\n                                                        if (*(*0x20 + -0x4d8) == 4) {\n                                                            if (uVar18 < 0xf) {\n                                                                *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                goto code_r0x0048de31;\n                                                            }\n                                                        }\n                                                        else {\n                                                            if (*(*0x20 + -0x4d8) == 8) {\n                                                                if (uVar18 < 0xf) {\n                                                                    *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                    goto code_r0x0048de31;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x48de58;\n                                                                fcn.0045eee0(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x48de6b;\n                                                            fcn.00433560();\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x48de78;\n                                                        fcn.0045eee0(0xf);\n                                                    }\n                                                    *(*0x20 + -0x618) = 0x48de8b;\n                                                    fcn.00433560();\n                                                }\n                                                *(*0x20 + -0x618) = 0x48de98;\n                                                fcn.0045eee0(9);\n                                                break;\n                                            }\n                                            *(*0x20 + -0x528) = puVar12;\n                                            *(*0x20 + -0x358) = puVar14;\n                                            *(*0x20 + -0x618) = 0x48ddf2;\n                                            fcn.0048ac00(*(*0x20 + -0x4d8));\n                                            iVar8 = *(*0x20 + 0x20);\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            unaff_RBX = 0x4b5060;\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            puVar12 = *(*0x20 + -0x528);\n                                            arg3 = *(*0x20 + -0x538);\n                                            arg2 = *(*0x20 + -0x540);\n                                            puVar14 = *(*0x20 + -0x358);\ncode_r0x0048de31:\n                                            puVar12 = puVar12 + 1;\n                                            if (arg2 <= puVar12) goto code_r0x0048de3e;\ncode_r0x0048dcb8:\n                                            puVar14 = puVar14 + 6;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x618) = 0x48dea5;\n                                    arg1_00 = puVar15;\n                                    fcn.0045eee0(puVar15);\n                                }\n                                arg1_01 = 0x4ee7d0;\n                                *(*0x20 + -0x618) = 0x48deb8;\n                                fcn.00433560();\n                                puVar10 = puVar14;\n                                do {\n                                    puVar12 = puVar12 + 6;\ncode_r0x0048debf:\n                                    *(*0x20 + -0x528) = puVar10;\n                                    *(*0x20 + -0x358) = puVar12;\n                                    uVar3 = *(puVar12 + 4);\n                                    uVar4 = *(puVar12 + 1);\n                                    uVar5 = *(puVar12 + 0xc);\n                                    *(*0x20 + -0x3f8) = *puVar12;\n                                    *(*0x20 + -0x3f4) = uVar3;\n                                    *(*0x20 + -0x3f0) = uVar4;\n                                    *(*0x20 + -0x3ec) = uVar5;\n                                    uVar3 = *(puVar12 + 0x14);\n                                    uVar4 = *(puVar12 + 3);\n                                    uVar5 = *(puVar12 + 0x1c);\n                                    *(*0x20 + -1000) = *(puVar12 + 2);\n                                    *(*0x20 + -0x3e4) = uVar3;\n                                    *(*0x20 + -0x3e0) = uVar4;\n                                    *(*0x20 + -0x3dc) = uVar5;\n                                    uVar3 = *(puVar12 + 0x24);\n                                    uVar4 = *(puVar12 + 5);\n                                    uVar5 = *(puVar12 + 0x2c);\n                                    *(*0x20 + -0x3d8) = *(puVar12 + 4);\n                                    *(*0x20 + -0x3d4) = uVar3;\n                                    *(*0x20 + -0x3d0) = uVar4;\n                                    *(*0x20 + -0x3cc) = uVar5;\n                                    puVar14 = *(*0x20 + -0x3f0) + *(*0x20 + -0x4a0);\n                                    puVar17 = *(*0x20 + -0x3f8);\n                                    arg2_00 = puVar14 + arg2;\n                                    if (puVar17 == 0x2) {\ncode_r0x0048dfb5:\n                                        *(*0x20 + -0x618) = 0x48dfd5;\n                                        fcn.0048aca0(*(*0x20 + -1000));\n                                        puVar10 = *(*0x20 + -0x528);\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x4b5060;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        puVar12 = *(*0x20 + -0x358);\n                                        arg3 = *(*0x20 + -0x538);\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar15 = *(*0x20 + -0x548);\n                                    }\n                                    else {\n                                        if (puVar17 == 0x3) {\n                                            if (8 < *(*0x20 + -0x3d8)) {\n                                                *(*0x20 + -0x618) = 0x48e045;\n                                                fcn.0045eee0(9);\ncode_r0x0048e045:\n                                                *(*0x20 + -0x618) = 0x48e052;\n                                                fcn.0045eee0(0xf);\ncode_r0x0048e052:\n                                                *(*0x20 + -0x618) = 0x48e065;\n                                                fcn.00433560();\ncode_r0x0048e065:\n                                                *(*0x20 + -0x618) = 0x48e072;\n                                                fcn.0045eee0(0xf);\n                                                goto code_r0x0048e072;\n                                            }\n                                            *(*0x20 + *(*0x20 + -0x3d8) * 8 + -0x58) = *(arg2 + puVar14);\n                                            goto code_r0x0048dfb5;\n                                        }\n                                        if (puVar17 != 0x4) {\ncode_r0x0048e072:\n                                            *(*0x20 + -0x618) = 0x48e085;\n                                            fcn.00433560();\n                                            goto code_r0x0048e085;\n                                        }\n                                        puVar17 = *(*0x20 + -0x3d0);\n                                        arg2_00 = *(*0x20 + -1000);\n                                        if (arg2_00 == 0x4) {\n                                            if (0xe < puVar17) goto code_r0x0048e065;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = *(arg2 + puVar14);\n                                        }\n                                        else {\n                                            if (arg2_00 != 0x8) goto code_r0x0048e052;\n                                            puVar14 = *(arg2 + puVar14);\n                                            if (0xe < puVar17) goto code_r0x0048e045;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = puVar14;\n                                        }\n                                    }\n                                    puVar10 = puVar10 + 1;\n                                } while (puVar10 < puVar15);\n                                puVar10 = *(*0x20 + -0x530);\n                                unaff_RDI = arg3;\n                                goto code_r0x0048d6a3;\n                            }\n                            puVar10 = puVar14;\n                        } while (puVar15 == NULL);\n                        *(*0x20 + -0x618) = 0x48e0a5;\n                        fcn.00433560();\ncode_r0x0048e0a5:\n                        *(*0x20 + -0x618) = 0x48e0b0;\n                        fcn.0045efa0(puVar15);\ncode_r0x0048e0b0:\n                        *(*0x20 + -0x618) = 0x48e0bb;\n                        fcn.0045ef60(puVar15, arg2_00);\ncode_r0x0048e0bb:\n                        *(*0x20 + -0x618) = 0x48e0c6;\n                        fcn.0045eee0(puVar17);\ncode_r0x0048e0c6:\n                        *(*0x20 + -0x618) = 0x48e0d1;\n                        fcn.0045eee0(puVar17);\n                        unaff_RDI = arg3;\ncode_r0x0048e0d1:\n                        *(*0x20 + -0x618) = 0x48e0dc;\n                        fcn.0045efa0(puVar15);\ncode_r0x0048e0dc:\n                        *(*0x20 + -0x618) = 0x48e0e7;\n                        fcn.0045ef60(puVar15, arg2);\n                        arg3 = puVar14;\ncode_r0x0048e0e7:\n                        *(*0x20 + -0x618) = 0x48e0ef;\n                        fcn.0045eee0(puVar15);\ncode_r0x0048e0ef:\n                        *(*0x20 + -0x618) = 0x48e0f4;\n                        fcn.0045eee0(puVar15);\n                    }\n                    else {\n                        arg1_00 = iVar8 + iVar9;\n                        if (arg3 < 0x100001) goto code_r0x0048d67e;\n                    }\n                    unaff_RBX = arg3 & 0xffffffff;\n                    *(*0x20 + -0x618) = 0x48e105;\n                    fcn.0045efe0(puVar15, unaff_RBX);\n                }\n                *(*0x20 + -0x618) = 0x48e10c;\n                fcn.0045eee0(puVar15);\n            }\n            arg1 = 0x4b6d60;\n            *(*0x20 + -0x618) = 0x48e11b;\n            in_RAX = fcn.0040a180(0x4b6d60);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x48e135;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x0048d996:\n    puVar10 = *(*0x20 + -0x530);\n    goto code_r0x0048d6a3;\ncode_r0x0048de3e:\n    puVar10 = *(*0x20 + -0x530);\n    unaff_RDI = arg3;\n    goto code_r0x0048d6a3;\n}\n",
        "token_count": 10187
    },
    "004906a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00490c05)\n// WARNING: Removing unreachable block (ram,0x00490b1e)\n// WARNING: Removing unreachable block (ram,0x00490b2f)\n// WARNING: Removing unreachable block (ram,0x00490c38)\n// WARNING: Removing unreachable block (ram,0x00490bf4)\n// WARNING: Removing unreachable block (ram,0x00490c4a)\n\nint64_t fcn.004906a0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    ulong uVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    double dVar18;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x90) = arg3;\n            *(*0x20 + -0x30) = unaff_RSI;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x98) = arg1;\n            *(*0x20 + -0x118) = 0x49071b;\n            uVar5 = fcn.0048f4c0(arg1);\n            *(*0x20 + -0x50) = uVar5;\n            *(*0x20 + -0x58) = unaff_RBX;\n            uVar5 = *(*0x20 + -0x30);\n            *(*0x20 + -0x118) = 0x490748;\n            iVar6 = fcn.0048f4c0(*(*0x20 + -0x90));\n            if (iVar6 != *(*0x20 + -0x50)) {\n                return -1;\n            }\n            *(*0x20 + -0x118) = 0x49076c;\n            cVar3 = fcn.00403780(uVar5);\n            if (cVar3 == '\\0') {\n                return -1;\n            }\n            uVar5 = *(*0x20 + -0x98);\n            uVar8 = uVar5 & 0x1f;\n            if (0x11 < uVar8) {\n                if (uVar8 < 0x17) {\n                    if (uVar8 == 0x12) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x490f6b;\n                        iVar6 = fcn.004914e0(uVar5, uVar5, *(*0x20 + -0x90));\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x118) = 0x490f8d;\n                        uVar5 = fcn.0048ef80(*(*0x20 + -0x98));\n                        *(*0x20 + -0xb8) = uVar5;\n                        *(*0x20 + -0x118) = 0x490faf;\n                        uVar8 = fcn.0048ef80(*(*0x20 + -0x90));\n                        if (uVar8 <= *(*0x20 + -0xb8)) {\n                            if (uVar8 < *(*0x20 + -0xb8)) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        return -1;\n                    }\n                    if (uVar8 == 0x14) {\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar7 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x490cff;\n                        iVar6 = fcn.004914e0(uVar5, uVar5, uVar7);\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar10 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x490d25;\n                        fcn.0048e180(uVar10);\n                        *(*0x20 + -0x118) = 0x490d2a;\n                        iVar6 = fcn.0048f4c0(uVar10);\n                        if (iVar6 != 0) {\n                            iVar6 = *(iVar6 + 8);\n                        }\n                        if (iVar6 == 0) {\n                            iVar6 = 0;\n                            uVar9 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar2 = *0x5d26a0;\n                            if ((*0x5d2690 != '\\0') && (*0x5d2698 = iVar6,  uVar2 = uVar9,  *0x626890 != 0)) {\n                                *(*0x20 + -0x118) = 0x490d67;\n                                iVar6 = fcn.0045eb80(uVar10, uVar5, uVar7, in_R9);\n                                uVar2 = *0x5d26a0;\n                            }\n                            *0x5d26a0 = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x10) = uVar9;\n                            iVar6 = *(*0x20 + -0x18);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar9 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x80) = uVar9;\n                        *(*0x20 + -0x88) = iVar6;\n                        *(*0x20 + -0xd8) = uVar8;\n                        uVar5 = *(*0x20 + -0x90);\n                        uVar9 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x490de5;\n                        fcn.0048e180(uVar5);\n                        *(*0x20 + -0x118) = 0x490dea;\n                        iVar12 = fcn.0048f4c0(uVar5);\n                        if (iVar12 != 0) {\n                            iVar12 = *(iVar12 + 8);\n                        }\n                        if (iVar12 == 0) {\n                            iVar6 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar7 = *0x5d26a0;\n                            if ((*0x5d2690 != '\\0') && (*0x5d2698 = iVar12,  uVar7 = uVar9,  *0x626890 != 0)) {\n                                *(*0x20 + -0x118) = 0x490e27;\n                                iVar12 = fcn.0045eb80(uVar5, iVar6, uVar8, in_R9);\n                                uVar7 = *0x5d26a0;\n                            }\n                            *0x5d26a0 = uVar7;\n                            *(*0x20 + -0x28) = iVar12;\n                            *(*0x20 + -0x20) = uVar9;\n                            iVar6 = *(*0x20 + -0x28);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x118) = 0x490e97;\n                        iVar12 = fcn.004906a0(*(*0x20 + -0xd8), iVar6, uVar8);\n                        if (iVar12 != 0) {\n                            return iVar12;\n                        }\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar9 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x490ec6;\n                        uVar7 = fcn.0048e180(uVar9);\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x98) = uVar9;\n                        uVar5 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x490ef8;\n                        fcn.0048e180(uVar5);\n                        *(*0x20 + -0x118) = 0x490f1b;\n                        iVar6 = fcn.004906a0(*(*0x20 + -0x98), iVar6, uVar5);\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x16) {\ncode_r0x0049102f:\n                        *(*0x20 + -0x118) = 0x491047;\n                        uVar5 = fcn.0048ef80(uVar5);\n                        *(*0x20 + -0xa8) = uVar5;\n                        *(*0x20 + -0x118) = 0x491069;\n                        uVar8 = fcn.0048ef80(*(*0x20 + -0x90));\n                        if (*(*0x20 + -0xa8) < uVar8) {\n                            return -1;\n                        }\n                        if (uVar8 < *(*0x20 + -0xa8)) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 0x18) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x4910cb;\n                        uVar5 = fcn.0048f3e0(uVar5);\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0xb0) = uVar9;\n                        uVar5 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x4910f5;\n                        uVar9 = fcn.0048f3e0(*(*0x20 + -0x90));\n                        *(*0x20 + -0x78) = uVar9;\n                        *(*0x20 + -0xc0) = uVar5;\n                        *(*0x20 + -0x118) = 0x49111a;\n                        iVar6 = fcn.00402300(uVar9);\n                        if (iVar6 < 0) {\n                            return -1;\n                        }\n                        *(*0x20 + -0x118) = 0x49113e;\n                        iVar6 = fcn.00402300(*(*0x20 + -0x78));\n                        if (0 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                    if (uVar8 == 0x19) {\n                        iVar6 = 0;\n                        goto code_r0x004911f3;\n                    }\n                    if (uVar8 == 0x1a) goto code_r0x0049102f;\n                }\ncode_r0x0049119a:\n                pcVar1 = *(*(*0x20 + -0x50) + 0xf8);\n                *(*0x20 + -0x118) = 0x4911b3;\n                (*pcVar1)();\n                *(*0x20 + -0x118) = 0x4911cc;\n                fcn.0044ac00(0x15);\n                *(*0x20 + -0x118) = 0x4911d1;\n                fcn.0040a4c0();\n                *(*0x20 + -0x118) = 0x4911e5;\n                fcn.00433560();\n                while( true ) {\n                    iVar6 = *(*0x20 + -200) + 1;\n                    uVar5 = *(*0x20 + -0x98);\ncode_r0x004911f3:\n                    *(*0x20 + -200) = iVar6;\n                    *(*0x20 + -0x118) = 0x491210;\n                    iVar6 = fcn.0048eea0(uVar5);\n                    if (iVar6 <= *(*0x20 + -200)) break;\n                    uVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x118) = 0x491238;\n                    uVar10 = fcn.0048e360(uVar7);\n                    *(*0x20 + -0x60) = uVar10;\n                    *(*0x20 + -0x68) = uVar9;\n                    *(*0x20 + -0xa0) = uVar7;\n                    uVar9 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x49126f;\n                    fcn.0048e360(uVar9);\n                    *(*0x20 + -0x118) = 0x491292;\n                    iVar6 = fcn.004906a0(*(*0x20 + -0xa0), uVar5, uVar9);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                }\n                return 0;\n            }\n            if (uVar8 < 0xd) {\n                if (uVar8 == 1) {\n                    *(*0x20 + -0x118) = 0x490a39;\n                    uVar4 = fcn.0048cd80(uVar5);\n                    *(*0x20 + -0xd9) = uVar4;\n                    *(*0x20 + -0x118) = 0x490a5a;\n                    cVar3 = fcn.0048cd80(*(*0x20 + -0x90));\n                    if (cVar3 == *(*0x20 + -0xd9)) {\n                        return 0;\n                    }\n                    if (*(*0x20 + -0xd9) != '\\0') {\n                        return 1;\n                    }\n                    return -1;\n                }\n                if (4 < uVar8 - 2) {\n                    if (uVar8 < 7) goto code_r0x0049119a;\n                    if (uVar8 < 10) {\n                        if (uVar8 == 7) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else if (uVar8 == 8) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                    }\n                    else if (uVar8 == 10) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar8 == 0xb) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    uVar13 = *(*0x20 + -0x90) & 0x1f;\n                    *(*0x20 + -0x90) = uVar13;\n                    if (uVar13 < 10) {\n                        if (uVar13 == 7) {\n                            uVar13 = **(*0x20 + -0x30);\ncode_r0x004909da:\n                            if (uVar8 < uVar13) {\n                                return -1;\n                            }\n                            if (uVar13 < uVar8) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        if (uVar13 == 8) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x004909da;\n                        }\n                        if (uVar13 == 9) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x004909da;\n                        }\n                    }\n                    else {\n                        if (uVar13 == 10) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x004909da;\n                        }\n                        if (uVar13 == 0xb) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x004909da;\n                        }\n                        if (uVar13 == 0xc) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x004909da;\n                        }\n                    }\n                    goto code_r0x00491417;\n                }\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                }\n                else if (uVar8 == 4) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else if (uVar8 == 5) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                uVar8 = *(*0x20 + -0x90) & 0x1f;\n                *(*0x20 + -0x90) = uVar8;\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00490888;\n                    }\n                    if (uVar8 == 3) {\n                        iVar12 = **(*0x20 + -0x30);\ncode_r0x00490888:\n                        if (iVar6 < iVar12) {\n                            return -1;\n                        }\n                        if (iVar12 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 4) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00490888;\n                    }\n                    if (uVar8 == 5) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00490888;\n                    }\n                    if (uVar8 == 6) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00490888;\n                    }\n                }\n            }\n            else {\n                if (uVar8 < 0xf) {\n                    if (uVar8 == 0xd) {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xd) {\n                        dVar16 = **(*0x20 + -0x30);\ncode_r0x00490b16:\n                        if (dVar16 <= dVar15) {\n                            if (dVar15 <= dVar16) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0xe) {\n                        dVar16 = **(*0x20 + -0x30);\n                        goto code_r0x00490b16;\n                    }\n                }\n                else {\n                    unaff_RSI = uVar8 - 0xf;\n                    if (1 < unaff_RSI) {\n                        if (uVar8 == 0x11) {\n                            iVar6 = 0;\n                            while( true ) {\n                                *(*0x20 + -0xd0) = iVar6;\n                                *(*0x20 + -0x118) = 0x4912e8;\n                                iVar6 = fcn.0048e7e0(uVar5);\n                                if (iVar6 <= *(*0x20 + -0xd0)) {\n                                    return 0;\n                                }\n                                uVar9 = *(*0x20 + -0x40);\n                                uVar7 = *(*0x20 + -0x98);\n                                *(*0x20 + -0x118) = 0x491310;\n                                uVar10 = fcn.0048e4a0(uVar7);\n                                *(*0x20 + -0x60) = uVar10;\n                                *(*0x20 + -0x68) = uVar9;\n                                *(*0x20 + -0xa0) = uVar7;\n                                uVar9 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x118) = 0x491347;\n                                fcn.0048e4a0(uVar9);\n                                *(*0x20 + -0x118) = 0x49136a;\n                                iVar6 = fcn.004906a0(*(*0x20 + -0xa0), uVar5, uVar9);\n                                if (iVar6 != 0) break;\n                                iVar6 = *(*0x20 + -0xd0) + 1;\n                                uVar5 = *(*0x20 + -0x98);\n                            }\n                            return iVar6;\n                        }\n                        goto code_r0x0049119a;\n                    }\n                    if (uVar8 == 0xf) {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xf) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\ncode_r0x00490bec:\n                        if (dVar17 <= dVar15) {\n                            if (dVar15 <= dVar17) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        if (iVar6 == 0) {\n                            if (dVar18 <= dVar16) {\n                                if (dVar16 <= dVar18) {\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar6 = 1;\n                                }\n                            }\n                            else {\n                                iVar6 = -1;\n                            }\n                            return iVar6;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x10) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\n                        goto code_r0x00490bec;\n                    }\n                    *(*0x20 + -0x90) = uVar8;\n                    *(*0x20 + -0x118) = 0x4913a9;\n                    puVar11 = fcn.0040cc20();\n                    puVar11[1] = 0x15;\n                    *puVar11 = 0x4cc2b6;\n                    uVar8 = *(*0x20 + -0x90);\n                    puVar11[2] = uVar8;\n                    *(*0x20 + -0x118) = 0x4913d6;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x90) = uVar8;\n                *(*0x20 + -0x118) = 0x4913ea;\n                puVar11 = fcn.0040cc20();\n                puVar11[1] = 0x13;\n                *puVar11 = 0x4cb960;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x491417;\n                fcn.00433560();\ncode_r0x00491417:\n                *(*0x20 + -0x118) = 0x491425;\n                puVar11 = fcn.0040cc20();\n                puVar11[1] = 0x12;\n                *puVar11 = 0x4cb38f;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x491452;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x118) = 0x49145e;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x11;\n            *unaff_RBX = 0x4caf59;\n            arg1 = *(*0x20 + -0x90);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x118) = 0x49148b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + 0x20) = unaff_RDI;\n        *(puVar14 + 0x28) = unaff_RSI;\n        *(puVar14 + 0x30) = arg3;\n        *(puVar14 + -8) = 0x4914af;\n        fcn.0045c800();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        unaff_RDI = *(puVar14 + 0x20);\n        unaff_RSI = *(puVar14 + 0x28);\n        arg3 = *(puVar14 + 0x30);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 6253
    },
    "004935c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004935c0(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x4935f2;\n            iVar1 = func_0x00459c00();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar2 = *0x5d2370;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar2 = 0x4eec18;\n                    }\n                    return uVar2;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x5cad10;\n                }\n                if (iVar1 == 3) {\n                    return *0x5d2390;\n                }\n            }\n            *(*0x20 + -0x28) = 0x49368d;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x49369e;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x4936a8;\n            fcn.00435b80();\n            *(*0x20 + -0x28) = 0x4936ad;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x4936b2;\n            fcn.00435500();\n            unaff_RBX = 0x4ee600;\n            *(*0x20 + -0x28) = 0x4936c5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x4936d9;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 703
    },
    "00493700": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00493700(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                *(*0x20 + -0x28) = 0x4937c6;\n                puVar2 = fcn.0040cc20();\n                puVar2[1] = 0x21;\n                *puVar2 = 0x4cf567;\n                return 0x4eead8;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x493732;\n            iVar1 = fcn.00459c80();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar3 = *0x5d2370;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar3 = 0x4eec18;\n                    }\n                    return uVar3;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x5cad10;\n                }\n                if (iVar1 == 3) {\n                    return *0x5d2390;\n                }\n            }\n            *(*0x20 + -0x28) = 0x4937f1;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x493805;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x49380f;\n            fcn.00435b80();\n            *(*0x20 + -0x28) = 0x493814;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x493819;\n            fcn.00435500();\n            unaff_RBX = 0x4ee600;\n            *(*0x20 + -0x28) = 0x49382c;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x493845;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 763
    },
    "00493dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00493dc0(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    uint *puVar4;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d23a0 != 0) {\n        return 0;\n    }\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x004943fa;\n            goto code_r0x0049419c;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.00402300(0x4c88fa);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x004941a3;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x004943fa;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x004943fa;\n            goto code_r0x0049419c;\n        }\n        if (arg1 != 0x4) goto code_r0x004943fa;\n        iVar2 = fcn.00402300(0x4c8a5d);\n        if (0 < iVar2) {\n            iVar2 = fcn.00402300(0x4c8a65);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x004943fa;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x004943fa;\n            goto code_r0x0049419c;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x004943fa;\n                goto code_r0x0049419c;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x004943fa;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x004941a3;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x004943fa:\n                arg1_00 = 0x25;\n                uStack24 = fcn.0044ac00(0x25);\n                uStack40 = 0x4cfe33;\n                puVar3 = fcn.0040cc20();\n                puVar3[1] = uStack40;\n                if (*0x626890 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.0045eb60(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x004943fa;\ncode_r0x0049419c:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x004941a3:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.004934e0(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x5d1ab8 != NULL) {\n        in_R8 = **0x5d1ab8;\n        in_R9 = in_RAX;\n        puStack32 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x5d1ab8);\n        noname_1 = puStack32;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x626600 != '\\0')) {\n        if ((arg1 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.0046e1a0(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    if (arg1 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x0049437e;\n    }\n    else if ((arg1 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x0049437e;\n    uStack48 = 0;\n    uStack44 = 0;\n    noname_1 = *(in_RAX + 4);\n    arg1 = &uStack44;\n    in_R8 = NULL;\n    in_R9 = &uStack48;\n    iVar2 = fcn.0046e9a0(arg1, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4c92cf;\n    }\ncode_r0x0049437e:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045ea40(arg1, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045ea40(arg1, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1906
    },
    "004944c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004944c0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00459b60();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x5ca588)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.0046ca00(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.0046c140(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.0045a8e0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x4eec98;\n}\n",
        "token_count": 303
    },
    "00497ac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00497ac0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.0046cee0();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.0046d5c0();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040cc20();\n    iVar2 = fcn.0040cc20();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x626890 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045eb60(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045ea40(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.00416c20(0x4b5ca0);\n    fcn.00493dc0(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 450
    },
    "00498920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00498920(void)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t arg2;\n    uint64_t arg1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = 0x104;\n            do {\n                *(*0x20 + -0x1c) = uVar1;\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x48) = 0x498957;\n                uVar2 = fcn.00447160(uVar1);\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 == 0) goto code_r0x00498a2f;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x48) = 0x49897a;\n                uVar1 = fcn.0046da00();\n            } while (*(*0x20 + -0x1c) < uVar1);\n            if (uVar1 == 3) {\n                arg1 = *(*0x20 + -0x18);\n                if (1 < arg1) {\n                    iVar4 = *(*0x20 + -0x10);\n                    if (*(iVar4 + 2) != 0x3a) goto code_r0x004989c0;\n                    if (2 < arg1) {\n                        arg2 = arg1;\n                        if (*(iVar4 + 4) != 0x5c) goto code_r0x004989c0;\n                        goto code_r0x004989da;\n                    }\n                    goto code_r0x00498a19;\n                }\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                iVar4 = *(*0x20 + -0x10);\ncode_r0x004989c0:\n                arg2 = arg1;\n                if (uVar1 == 0) {\ncode_r0x004989da:\n                    arg1 = uVar1;\n                    if (arg1 <= arg2) {\n                        *(*0x20 + -0x48) = 0x4989ed;\n                        fcn.00467cc0(arg2);\n                        *(*0x20 + -0x48) = 0x4989fd;\n                        fcn.0044b3e0(arg1);\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x498a12;\n                    fcn.0045ef60(arg1, arg2);\n                }\n                else {\n                    uVar5 = uVar1 - 1;\n                    if (uVar5 < arg1) {\n                        if (*(iVar4 + uVar5 * 2) == 0x5c) {\n                            uVar1 = uVar5;\n                        }\n                        goto code_r0x004989da;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x498a19;\n                fcn.0045eee0(arg1);\ncode_r0x00498a19:\n                *(*0x20 + -0x48) = 0x498a25;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x48) = 0x498a2f;\n            fcn.0045eee0(arg1);\ncode_r0x00498a2f:\n            *(*0x20 + -0x48) = 0x498a36;\n            fcn.0045eee0(arg1);\n        }\n        *(puVar3 + -8) = 0x498a3c;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "00498d40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.00498d40(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int16_t *in_RAX;\n    int64_t iVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg2;\n    uint64_t uVar9;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x626602 != '\\0') {\n                return in_RAX;\n            }\n            if (unaff_RBX < 0xf8) {\n                return in_RAX;\n            }\n            if (*in_RAX == 0x5c5c) {\n                return in_RAX;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x498d95;\n            cVar5 = fcn.00498b40();\n            if (cVar5 == '\\0') {\n                return *(*0x20 + 8);\n            }\n            *(*0x20 + -0x18) = *(*0x20 + 0x10) + 4;\n            *(*0x20 + -0x38) = 0x498db6;\n            iVar6 = fcn.00447160(*(*0x20 + 0x10) + 4);\n            arg2 = *(*0x20 + -0x18);\n            uVar8 = arg2;\n            if (3 < arg2) {\n                uVar8 = 3;\n            }\n            if (iVar6 != 0x4c88d0) {\n                *(*0x20 + -0x10) = iVar6;\n                *(*0x20 + -0x38) = 0x498de5;\n                fcn.0045f840(uVar8);\n                iVar6 = *(*0x20 + -0x10);\n                arg2 = *(*0x20 + -0x18);\n            }\n            uVar8 = *(*0x20 + 0x10);\n            piVar7 = *(*0x20 + 8);\n            uVar2 = 0;\n            uVar3 = 3;\n            uVar4 = param_3;\ncode_r0x00498e40:\n            param_3 = uVar4;\n            unaff_RBX = uVar3;\n            uVar9 = uVar2;\n            if (uVar8 <= uVar9) {\n                if (unaff_RBX == 6) {\n                    if (arg2 < 7) goto code_r0x00498f5a;\n                    *(iVar6 + 6) = 0x5c;\n                    unaff_RBX = 7;\n                }\n                if (unaff_RBX <= arg2) {\n                    *(*0x20 + -0x38) = 0x498f45;\n                    piVar7 = fcn.0044afa0(unaff_RBX);\n                    return piVar7;\n                }\n                *(*0x20 + -0x38) = 0x498f5a;\n                uVar9 = arg2;\n                fcn.0045ef60(unaff_RBX, arg2);\ncode_r0x00498f5a:\n                *(*0x20 + -0x38) = 0x498f65;\n                uVar8 = arg2;\n                iVar6 = fcn.0045eee0(arg2);\n                goto code_r0x00498f65;\n            }\n            if (uVar8 <= uVar9) goto code_r0x00498fbd;\n            uVar1 = *(piVar7 + uVar9);\n            param_3 = uVar1;\n            uVar3 = unaff_RBX;\n            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                uVar2 = uVar9 + 1;\n                uVar4 = uVar9 + 1;\n                goto code_r0x00498e40;\n            }\n            if (uVar1 == 0x2e) {\n                param_4 = uVar9 + 1;\n                uVar2 = param_4;\n                uVar4 = param_4;\n                if (uVar8 == param_4) goto code_r0x00498e40;\n                if (uVar8 <= param_4) goto code_r0x00498fb5;\n                cVar5 = *(uVar9 + 1 + piVar7);\n                if ((cVar5 == '\\\\') || (cVar5 == '/')) goto code_r0x00498e40;\n            }\n            param_4 = uVar9 + 1;\n            if ((uVar8 <= param_4) || (uVar1 != 0x2e)) goto code_r0x00498eec;\n            if (param_4 < uVar8) {\n                uVar1 = *(uVar9 + 1 + piVar7);\n                param_3 = uVar1;\n                if (uVar1 == 0x2e) {\n                    param_3 = uVar9 + 2;\n                    if (uVar8 == param_3) {\n                        return piVar7;\n                    }\n                    if (param_3 < uVar8) {\n                        uVar1 = *(uVar9 + 2 + piVar7);\n                        param_3 = uVar1;\n                        if (uVar1 == 0x5c) {\n                            return piVar7;\n                        }\n                        if (uVar1 == 0x2f) {\n                            return piVar7;\n                        }\n                        goto code_r0x00498eec;\n                    }\n                }\n                else {\ncode_r0x00498eec:\n                    if (unaff_RBX < arg2) {\n                        *(iVar6 + unaff_RBX) = 0x5c;\n                        param_3 = unaff_RBX;\n                        for (; param_3 = param_3 + 1,  uVar2 = uVar9,  uVar3 = param_3,  uVar4 = uVar9,  uVar9 < uVar8;\n                            uVar9 = uVar9 + 1) {\n                            uVar1 = *(piVar7 + uVar9);\n                            param_4 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (arg2 <= param_3) {\n                                *(*0x20 + -0x38) = 0x498f9a;\n                                fcn.0045eee0(arg2);\n                                goto code_r0x00498f9a;\n                            }\ncode_r0x00498f65:\n                            *(iVar6 + param_3) = param_4;\n                        }\n                        goto code_r0x00498e40;\n                    }\ncode_r0x00498f9a:\n                    *(*0x20 + -0x38) = 0x498fa5;\n                    fcn.0045eee0(arg2);\n                    uVar8 = arg2;\n                }\n                *(*0x20 + -0x38) = 0x498fad;\n                fcn.0045eee0(uVar8);\n            }\n            *(*0x20 + -0x38) = 0x498fb5;\n            fcn.0045eee0(uVar8);\ncode_r0x00498fb5:\n            *(*0x20 + -0x38) = 0x498fbd;\n            fcn.0045eee0(uVar8);\ncode_r0x00498fbd:\n            *(*0x20 + -0x38) = 0x498fc5;\n            in_RAX = fcn.0045eee0(uVar8);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x498fd5;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1976
    },
    "004990a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049954e)\n// WARNING: Removing unreachable block (ram,0x0049959c)\n// WARNING: Removing unreachable block (ram,0x0049958e)\n// WARNING: Removing unreachable block (ram,0x004995ad)\n// WARNING: Removing unreachable block (ram,0x004995cd)\n// WARNING: Removing unreachable block (ram,0x004995bf)\n// WARNING: Removing unreachable block (ram,0x004995de)\n// WARNING: Removing unreachable block (ram,0x0049917d)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004990a0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    ulong uVar4;\n    uint64_t in_RDX;\n    ulong unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack736 [16];\n    uint32_t uStack720;\n    ulong uStack716;\n    uint uStack708;\n    uint uStack704;\n    uchar auStack700 [12];\n    uint uStack688;\n    uint uStack684;\n    ulong uStack680;\n    uint uStack672;\n    uint uStack668;\n    ulong uStack664;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint64_t uStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    int64_t iStack72;\n    uint32_t *puStack64;\n    uchar auStack48 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack32._0_8_ = SUB168(in_XMM15, 0),  &uStack680 < *(unaff_R14 + 0x10) || &uStack680 == *(unaff_R14 + 0x10)\n          ) {\n        fcn.0045c800();\n        unaff_RSI = unaff_RSI & 0xffffffff;\n    }\n    ppcStack16 = NULL;\n    if (unaff_RDI == 0) {\n        puVar2 = fcn.0040cc20();\n        puVar2[1] = unaff_RBX;\n        if (*0x626890 == 0) {\n            *puVar2 = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045eb60(unaff_RBX, in_RAX, in_R8, in_R9);\n        }\n        puVar2[3] = 0;\n        if (*0x626890 == 0) {\n            puVar2[2] = arg1;\n        }\n        else {\n            puVar2 = fcn.0045eb60(unaff_RBX, arg1, in_R8, in_R9);\n        }\n        puVar2[4] = 0x4eec98;\n        puVar2[5] = 0x4ee5b0;\n        return auStack32._0_8_;\n    }\n    if (unaff_RDI == 3) {\n        uVar1 = *arg1;\n        in_RDX = uVar1;\n        if ((uVar1 == 0x6e) || (uVar1 == 0x4e)) {\n            uVar1 = arg1[1];\n            in_RDX = uVar1;\n            if ((uVar1 == 0x75) || (uVar1 == 0x55)) {\n                uVar1 = arg1[2];\n                in_RDX = uVar1;\n                if ((uVar1 == 0x6c) || (uVar1 == 0x4c)) {\n                    return 0x4eed88;\n                }\n            }\n        }\n    }\n    fcn.00498d40();\n    fcn.0046ae60();\n    uStack716 = SUB168(in_XMM15, 0);\n    if (unaff_RDI == 0) {\n        fcn.0045eee0(0);\n        fcn.004329e0();\n        return auStack32._0_8_;\n    }\n    uStack80 = 0;\n    if (unaff_RDI == 0) {\n        uStack720 = SUB164(in_XMM15, 0);\n        uStack708 = SUB164(in_XMM15 >> 0x40, 0);\n        uStack704 = SUB164(in_XMM15 >> 0x60, 0);\n        puStack64 = &uStack720;\n        _auStack700 = in_XMM15;\n        iVar3 = fcn.0046d2c0(puStack64);\n        uVar4 = SUB168(in_XMM15, 0);\n        if ((iVar3 == 0) && (in_RDX = uStack720,  (uStack720 >> 10 & 1) == 0)) {\n            iStack72 = fcn.0040cc20();\n            *(iStack72 + 0x10) = uStack720;\n            *(iStack72 + 0x14) = uStack716;\n            *(iStack72 + 0x1c) = CONCAT44(uStack704, uStack708);\n            *(iStack72 + 0x24) = auStack700._0_8_;\n            *(iStack72 + 0x2c) = auStack700._8_4_;\n            *(iStack72 + 0x30) = uStack688;\n            iVar3 = fcn.00499d80(0, in_RDX, in_R8, in_R9);\n            if (iVar3 == 0) {\n                return 0x4eed88;\n            }\n            return uVar4;\n        }\n        if (((iVar3 != 0) && (in_RDX = 0x4ba880,  *(iVar3 + 8) == 0x4ba880)) && (_pe_dos_header == 0x20)) {\n            uStack684 = SUB164(in_XMM15, 0);\n            uStack680 = SUB168(in_XMM15 >> 0x20, 0);\n            uStack672 = SUB164(in_XMM15 >> 0x60, 0);\n            fcn.0045f101();\n            fcn.0046b6a0();\n            if (&uStack684 != NULL) {\n                puVar2 = fcn.0040cc20();\n                puVar2[1] = 0xd;\n                *puVar2 = 0x4ca0e1;\n                puVar2[3] = 0;\n                if (*0x626890 == 0) {\n                    puVar2[2] = arg1;\n                }\n                else {\n                    puVar2 = fcn.0045eb60(0, arg1, in_R8, in_R9);\n                }\n                puVar2[4] = &uStack684;\n                if (*0x626890 == 0) {\n                    puVar2[5] = puStack64;\n                }\n                else {\n                    fcn.0045eb60(unaff_RDI, puStack64, in_R8, in_R9);\n                }\n                return uVar4;\n            }\n            fcn.0046ca00();\n            iStack88 = fcn.0040cc20();\n            *(iStack88 + 0x10) = uStack684;\n            *(iStack88 + 0x14) = uStack680;\n            *(iStack88 + 0x1c) = CONCAT44(uStack668, uStack672);\n            *(iStack88 + 0x24) = uStack664;\n            *(iStack88 + 0x2c) = uStack656;\n            *(iStack88 + 0x30) = uStack652;\n            *(iStack88 + 0x34) = uStack648;\n            iVar3 = fcn.00499d80(0, in_RDX, in_R8, in_R9);\n            if (iVar3 == 0) {\n                return 0x4eed88;\n            }\n            return uVar4;\n        }\n        arg1_00 = fcn.0046c220(0, in_RDX, unaff_RSI & 0xffffffff, 0);\n        auStack736 = CONCAT88(arg1_00, 0x499980);\n        ppcStack16 = auStack736;\n        uVar4 = fcn.00499a80(arg1_00);\n        auStack32 = CONCAT88(uVar4, 0x4eed88);\n        auStack48 = ZEXT816(arg1_00) << 0x40;\n        (**ppcStack16)();\n        return auStack32._0_8_;\n    }\n    uStack96 = unaff_RSI;\n    puVar2 = fcn.0040cc20();\n    puVar2[1] = unaff_RBX;\n    if (*0x626890 == 0) {\n        *puVar2 = in_RAX;\n    }\n    else {\n        puVar2 = fcn.0045eb60(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar2[3] = unaff_RDI;\n    if (*0x626890 == 0) {\n        puVar2[2] = arg1;\n    }\n    else {\n        puVar2 = fcn.0045eb60(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    puVar2[4] = unaff_RDI;\n    if (*0x626890 == 0) {\n        puVar2[5] = uStack96;\n    }\n    else {\n        fcn.0045eb60(unaff_RBX, uStack96, in_R8, in_R9);\n    }\n    return uStack716;\n}\n",
        "token_count": 2193
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004a0220": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.004a0220(uint64_t *arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    ulong uVar1;\n    uint64_t *puVar2;\n    char cVar3;\n    uint64_t *in_RAX;\n    ulong uVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong *puVar15;\n    uint64_t **ppuVar16;\n    uint32_t uVar17;\n    uint64_t **arg1_00;\n    uint64_t uVar18;\n    uint8_t *puVar19;\n    uint64_t *puVar20;\n    uchar uVar21;\n    uint64_t uVar22;\n    int64_t *piVar23;\n    int64_t *piVar24;\n    int64_t *piVar25;\n    code *pcVar26;\n    uint64_t *unaff_RBX;\n    uchar *puVar27;\n    uchar *unaff_RBP;\n    uint64_t **unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t **ppuVar28;\n    uint8_t *puVar29;\n    uint64_t **in_R9;\n    uint64_t **ppuVar30;\n    int64_t unaff_R14;\n    bool bVar31;\n    \n    while (uVar17 = unaff_RSI,  puVar27 = *0x20, \n          *0x20 + -0x160 < *(unaff_R14 + 0x10) || *0x20 + -0x160 == *(unaff_R14 + 0x10)) {\ncode_r0x004a1ffe:\n        *(puVar27 + 8) = in_RAX;\n        *(puVar27 + 0x10) = unaff_RBX;\n        *(puVar27 + 0x18) = arg1;\n        *(puVar27 + 0x20) = unaff_RDI;\n        *(puVar27 + 0x28) = unaff_RSI;\n        *(puVar27 + 0x30) = arg3;\n        *(puVar27 + -8) = 0x4a2025;\n        fcn.0045c800();\n        in_RAX = *(puVar27 + 8);\n        unaff_RBX = *(puVar27 + 0x10);\n        arg1 = *(puVar27 + 0x18);\n        unaff_RDI = *(puVar27 + 0x20);\n        unaff_RSI = *(puVar27 + 0x28);\n        arg3 = *(puVar27 + 0x30);\n        *0x20 = puVar27;\n    }\n    puVar27 = *0x20 + -0x1e0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = uVar17;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xe0) = unaff_RDI;\n    *(*0x20 + -0x78) = arg1;\n    *(*0x20 + -0x80) = unaff_RBX;\n    if (((0 < arg3) && (unaff_RDI != NULL)) && ((unaff_RDI & 0x60) == 0)) {\n        *(*0x20 + -0x1e8) = 0x4a02c5;\n        uVar4 = fcn.0048e660(unaff_RDI);\n        iVar13 = *(*0x20 + 8);\n        *(iVar13 + 0x18) = uVar4;\n        if (*0x626890 == 0) {\n            *(iVar13 + 0x20) = arg1;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x4a02eb;\n            fcn.0045eb80(unaff_RDI, iVar13, arg3, in_R9);\n        }\n        *(*0x20 + -0x1e8) = 0x4a02fa;\n        cVar3 = fcn.0049f220();\n        if (cVar3 != '\\0') {\n            return;\n        }\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x78);\n        unaff_RBX = *(*0x20 + -0x80);\n        uVar17 = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0xe0);\n        arg3 = *(*0x20 + 0x30);\n    }\n    in_RAX[3] = 0;\n    if (*0x626890 == 0) {\n        in_RAX[4] = 0;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x4a036f;\n        in_RAX = fcn.0045ebc0(arg1, in_RAX + 4, 0, unaff_RDI);\n        in_R9 = unaff_RDI;\n    }\n    in_RAX[7] = unaff_RDI;\n    if (*0x626890 == 0) {\n        in_RAX[5] = unaff_RBX;\n        in_RAX[6] = arg1;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x4a039b;\n        fcn.0045eb80(arg1, in_RAX + 5, arg3, unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x4a03a5;\n        in_RAX = fcn.0045eb40();\n        in_R9 = unaff_RDI;\n    }\n    uVar22 = unaff_RDI & 0x1f;\n    if (uVar22 < 0x11) {\n        if (0xc < uVar22) {\n            if (0xe < uVar22) {\n                if (uVar22 == 0xf) {\n                    *(*0x20 + -0x1e8) = 0x4a13fc;\n                    fcn.0049de60(uVar17);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x4a1413;\n                fcn.0049de60(uVar17);\n                return;\n            }\n            if (uVar22 == 0xd) {\n                *(*0x20 + -0x1e8) = 0x4a13c5;\n                fcn.0049dd60(uVar17);\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x4a13d7;\n            fcn.0049dd60(uVar17);\n            return;\n        }\n        if (1 < uVar22) {\n            if (uVar22 < 7) {\n                if (uVar22 < 4) {\n                    if (uVar22 == 2) {\n                        uVar22 = *arg1;\n                    }\n                    else {\n                        uVar22 = *arg1;\n                    }\n                }\n                else if (uVar22 == 4) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 5) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n                *(*0x20 + -0x1e8) = 0x4a134b;\n                fcn.0049db60(1, uVar22);\n                return;\n            }\n            if (uVar22 < 10) {\n                if (uVar22 == 7) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 8) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n            }\n            else if (uVar22 == 10) {\n                uVar22 = *arg1;\n            }\n            else if (uVar22 == 0xb) {\n                uVar22 = *arg1;\n            }\n            else {\n                uVar22 = *arg1;\n            }\n            *(*0x20 + -0x1e8) = 0x4a139a;\n            fcn.0049db60(0, uVar22);\n            return;\n        }\n        if (uVar22 == 0) {\n            if (arg3 == NULL) {\n                uVar22 = in_RAX[1];\n                *(*0x20 + -0xe8) = uVar22 + 0x17;\n                uVar9 = *in_RAX;\n                uVar6 = in_RAX[2];\n                if (in_RAX[2] < uVar22 + 0x17) {\n                    *(*0x20 + -0xf0) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x4a11ba;\n                    uVar9 = fcn.00447240(uVar22);\n                    uVar6 = uVar22;\n                }\n                *(*0x20 + -0xf0) = uVar6;\n                *(*0x20 + -0x88) = uVar9;\n                uVar7 = 0x17;\n                *(*0x20 + -0x1e8) = 0x4a11ed;\n                fcn.0045f840(0x17);\n                puVar15 = *(*0x20 + 8);\n                puVar15[1] = *(*0x20 + -0xe8);\n                uVar4 = *(*0x20 + -0xf0);\n                puVar15[2] = uVar4;\n                if (*0x626890 == 0) {\n                    *puVar15 = *(*0x20 + -0x88);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x4a1233;\n                fcn.0045ea40(uVar7, uVar4, arg3, in_R9);\n                return;\n            }\n            if (uVar17 != 0x76) {\n                *(*0x20 + -0x1e8) = 0x4a12d1;\n                fcn.0049d560(arg1, unaff_RDI, arg3);\n                return;\n            }\n            uVar9 = in_RAX[1];\n            uVar22 = uVar9 + 5;\n            uVar6 = *in_RAX;\n            uVar8 = uVar9;\n            uVar18 = in_RAX[2];\n            if (in_RAX[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar9;\n                *(*0x20 + -0x1e8) = 0x4a127a;\n                uVar6 = fcn.00447240(uVar9);\n                uVar22 = *(*0x20 + -0xe8);\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0xf0);\n                uVar18 = uVar9;\n            }\n            *(uVar6 + uVar8) = 0x6c696e3c;\n            *(uVar6 + 4 + uVar8) = 0x3e;\n            in_RAX[1] = uVar22;\n            in_RAX[2] = uVar18;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar6;\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x4a12c5;\n            fcn.0045eb80(uVar8, unaff_RDI, arg3, in_R9);\n            return;\n        }\n        *(*0x20 + -0x1e8) = 0x4a12e5;\n        fcn.0048cd80(unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x4a12fb;\n        fcn.0049da60(*(*0x20 + 0x28));\n        return;\n    }\n    if (uVar22 < 0x16) {\n        if (0x13 < uVar22) {\n            if (uVar22 == 0x14) {\n                *(*0x20 + -0x1e8) = 0x4a072a;\n                fcn.0048e180(unaff_RDI);\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1e8) = 0x4a097d;\n                    fcn.004a0220(arg1, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n                    return;\n                }\n                piVar24 = *(*0x20 + 8);\n                if (*(piVar24 + 10) == '\\0') {\n                    uVar9 = piVar24[1];\n                    uVar22 = uVar9 + 5;\n                    iVar13 = *piVar24;\n                    uVar6 = uVar9;\n                    uVar8 = piVar24[2];\n                    if (piVar24[2] < uVar22) {\n                        *(*0x20 + -0xe8) = uVar9;\n                        *(*0x20 + -0xf0) = uVar22;\n                        *(*0x20 + -0x1e8) = 0x4a077a;\n                        iVar13 = fcn.00447240(uVar9);\n                        uVar22 = *(*0x20 + -0xf0);\n                        piVar24 = *(*0x20 + 8);\n                        uVar6 = *(*0x20 + -0xe8);\n                        uVar8 = uVar9;\n                    }\n                    *(iVar13 + uVar6) = 0x6c696e3c;\n                    *(iVar13 + 4 + uVar6) = 0x3e;\n                    piVar24[1] = uVar22;\n                    piVar24[2] = uVar8;\n                    if (*0x626890 == 0) {\n                        *piVar24 = iVar13;\n                        return;\n                    }\n                    *(*0x20 + -0x1e8) = 0x4a07c5;\n                    fcn.0045eb80(uVar6, uVar8, arg3, in_R9);\n                    return;\n                }\n                iVar13 = *(*0x20 + -0x78);\n                *(*0x20 + -0x1e8) = 0x4a07e7;\n                iVar11 = fcn.0048f4c0(*(*0x20 + -0xe0));\n                pcVar26 = *(iVar11 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x4a07f3;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x158) = iVar13;\n                puVar15 = *(*0x20 + 8);\n                uVar22 = puVar15[1];\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar22 + iVar13;\n                uVar4 = *puVar15;\n                uVar9 = puVar15[2];\n                if (puVar15[2] < uVar22 + iVar13) {\n                    *(*0x20 + -0xc0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x4a083e;\n                    uVar4 = fcn.00447240(uVar22);\n                    iVar13 = *(*0x20 + -0x158);\n                    uVar9 = uVar22;\n                }\n                *(*0x20 + -0xf8) = uVar9;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x4a0885;\n                fcn.0045f840(iVar13);\n                uVar9 = *(*0x20 + -0xf0);\n                piVar24 = *(*0x20 + 8);\n                piVar24[1] = uVar9;\n                uVar6 = *(*0x20 + -0xf8);\n                piVar24[2] = uVar6;\n                iVar11 = *(*0x20 + -0xe8);\n                uVar22 = iVar11 + *(*0x20 + -0x158) + 5;\n                if (*0x626890 == 0) {\n                    iVar14 = *(*0x20 + -0x88);\n                    *piVar24 = iVar14;\n                }\n                else {\n                    iVar14 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x4a08e5;\n                    fcn.0045eb80(uVar9, uVar6, iVar11, iVar13);\n                }\n                uVar8 = uVar9;\n                if (uVar6 < uVar22) {\n                    *(*0x20 + -0xe8) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x4a0905;\n                    iVar14 = fcn.00447240(uVar9);\n                    uVar22 = *(*0x20 + -0xe8);\n                    piVar24 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0xf0);\n                    uVar6 = uVar9;\n                }\n                *(iVar14 + uVar8) = 0x6c696e28;\n                *(iVar14 + 4 + uVar8) = 0x29;\n                piVar24[1] = uVar22;\n                piVar24[2] = uVar6;\n                if (*0x626890 == 0) {\n                    *piVar24 = iVar14;\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x4a094f;\n                fcn.0045eb80(uVar8, uVar6, iVar11, iVar13);\n                return;\n            }\n            if (*(in_RAX + 10) == '\\0') {\n                arg1_00 = in_RAX[1];\n                ppuVar16 = arg1_00 + 4;\n                in_R9 = *in_RAX;\n                ppuVar28 = in_RAX[2];\n                ppuVar30 = arg1_00;\n                if (in_RAX[2] < ppuVar16) {\n                    *(*0x20 + -0xe8) = arg1_00;\n                    *(*0x20 + -0xf0) = ppuVar16;\n                    *(*0x20 + -0x1e8) = 0x4a042e;\n                    in_R9 = fcn.00447240(arg1_00);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    ppuVar30 = *(*0x20 + -0xe8);\n                    ppuVar16 = *(*0x20 + -0xf0);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                    ppuVar28 = arg1_00;\n                }\n                *(in_R9 + ppuVar30) = 0x5b70616d;\n                in_RAX[1] = ppuVar16;\n                in_RAX[2] = ppuVar28;\n                if (*0x626890 == 0) {\n                    *in_RAX = in_R9;\n                    in_R9 = ppuVar30;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x4a049f;\n                    fcn.0045ebe0(arg1, unaff_RDI, arg3);\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a04b3;\n                iVar13 = fcn.0048f4c0(unaff_RDI);\n                pcVar26 = *(iVar13 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x4a04bf;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x148) = arg1;\n                puVar15 = *(*0x20 + 8);\n                puVar19 = puVar15[1];\n                *(*0x20 + -0xe8) = puVar19;\n                *(*0x20 + -0xf0) = puVar19 + arg1;\n                uVar4 = *puVar15;\n                puVar29 = puVar15[2];\n                if (puVar15[2] < puVar19 + arg1) {\n                    *(*0x20 + -0xb0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x4a050a;\n                    uVar4 = fcn.00447240(puVar19);\n                    arg1 = *(*0x20 + -0x148);\n                    puVar29 = puVar19;\n                }\n                *(*0x20 + -0xf8) = puVar29;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x4a0550;\n                fcn.0045f840(arg1);\n                uVar22 = *(*0x20 + -0xf0);\n                puVar20 = *(*0x20 + 8);\n                puVar20[1] = uVar22;\n                uVar9 = *(*0x20 + -0xf8);\n                puVar20[2] = uVar9;\n                if (*0x626890 == 0) {\n                    uVar6 = *(*0x20 + -0x88);\n                    *puVar20 = uVar6;\n                }\n                else {\n                    uVar6 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x4a0593;\n                    fcn.0045eb80(uVar22, uVar9, uVar4, arg1);\n                }\n                unaff_RDI = *(*0x20 + -0xe0);\n                if ((unaff_RDI >> 9 & 1) == 0) {\n                    if ((unaff_RDI >> 7 & 1) == 0) {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = in_R9;\n                    }\n                    else {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = *in_R9;\n                    }\n                    if (ppuVar16 == NULL) {\n                        iVar13 = *(*0x20 + -0x148);\n                        iVar11 = *(*0x20 + -0xe8);\n                        uVar8 = iVar11 + iVar13 + 5;\n                        uVar18 = uVar22;\n                        if (uVar9 < uVar8) {\n                            *(*0x20 + -0xe8) = uVar8;\n                            *(*0x20 + -0x1e8) = 0x4a06c5;\n                            uVar6 = fcn.00447240(uVar22);\n                            uVar8 = *(*0x20 + -0xe8);\n                            puVar20 = *(*0x20 + 8);\n                            uVar18 = *(*0x20 + -0xf0);\n                            uVar9 = uVar22;\n                        }\n                        *(uVar6 + uVar18) = 0x6c696e28;\n                        *(uVar6 + 4 + uVar18) = 0x29;\n                        puVar20[1] = uVar8;\n                        puVar20[2] = uVar9;\n                        if (*0x626890 == 0) {\n                            *puVar20 = uVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x4a070c;\n                            fcn.0045eb80(uVar18, uVar9, iVar13, iVar11);\n                        }\n                        return;\n                    }\n                }\n                else {\n                    in_R9 = *(*0x20 + -0x78);\n                }\n                uVar8 = uVar6;\n                if (uVar9 < *(*0x20 + -0xe8) + *(*0x20 + -0x148) + 1U) {\n                    *(*0x20 + -0x1e8) = 0x4a0605;\n                    uVar8 = fcn.00447240(uVar22);\n                    puVar20 = *(*0x20 + 8);\n                    puVar20[2] = uVar22;\n                    if (*0x626890 == 0) {\n                        *puVar20 = uVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a0625;\n                        uVar8 = fcn.0045ea40(uVar22, uVar9, unaff_RDI, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    in_R9 = *(*0x20 + -0x78);\n                    uVar22 = uVar6;\n                }\n                puVar20[1] = uVar22 + 1;\n                *(uVar8 + uVar22) = 0x7b;\n                arg3 = unaff_RDI;\n            }\n            *(*0x20 + -0x1e8) = 0x4a0665;\n            puVar5 = fcn.004902e0(unaff_RDI);\n            ppuVar16 = puVar5[1];\n            puVar15 = *puVar5;\n            if (ppuVar16 != NULL) {\n                *(*0x20 + -0xe8) = ppuVar16;\n                *(*0x20 + -0xd0) = puVar5;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x98) = puVar15;\n                    *(*0x20 + -0x118) = iVar13;\n                    uVar4 = puVar15[1];\n                    uVar7 = puVar15[2];\n                    uVar1 = *puVar15;\n                    if (0 < iVar13) {\n                        *(*0x20 + -0xe0) = uVar7;\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0x80) = uVar1;\n                        piVar24 = *(*0x20 + 8);\n                        if (*(piVar24 + 10) == '\\0') {\n                            iVar13 = piVar24[1];\n                            iVar11 = *piVar24;\n                            iVar14 = iVar11;\n                            if (piVar24[2] < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x4a1e91;\n                                iVar14 = fcn.00447240(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x626890 == 0) {\n                                    *piVar24 = iVar14;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x4a1eb0;\n                                    iVar14 = fcn.0045ea40(iVar13, ppuVar16, arg3, uVar4);\n                                }\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                iVar13 = iVar11;\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar9 = piVar24[1];\n                            uVar22 = uVar9 + 2;\n                            iVar11 = *piVar24;\n                            uVar6 = uVar9;\n                            uVar8 = piVar24[2];\n                            if (piVar24[2] < uVar22) {\n                                *(*0x20 + -0xf0) = uVar9;\n                                *(*0x20 + -0xf8) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x4a1dd1;\n                                iVar11 = fcn.00447240(uVar9);\n                                uVar7 = *(*0x20 + -0xe0);\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                uVar6 = *(*0x20 + -0xf0);\n                                uVar22 = *(*0x20 + -0xf8);\n                                iVar13 = *(*0x20 + -0x118);\n                                uVar8 = uVar9;\n                            }\n                            *(iVar11 + uVar6) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar8;\n                            if (*0x626890 == 0) {\n                                *piVar24 = iVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x4a1e58;\n                                fcn.0045eb60(iVar13, iVar11, uVar7, uVar4);\n                            }\n                        }\n                    }\n                    iVar13 = *(*0x20 + 0x30);\n                    arg3 = iVar13 + 1;\n                    *(*0x20 + -0xf0) = arg3;\n                    *(*0x20 + -0x1e8) = 0x4a1f34;\n                    fcn.004a0220(uVar4, iVar13, arg3);\n                    ppuVar16 = *(*0x20 + 8);\n                    puVar20 = ppuVar16[1];\n                    unaff_RSI = puVar20 + 1;\n                    puVar2 = *ppuVar16;\n                    unaff_RBX = puVar2;\n                    unaff_RDI = ppuVar16[2];\n                    if (ppuVar16[2] < unaff_RSI) {\n                        *(*0x20 + -0x1e8) = 0x4a1f5d;\n                        unaff_RBX = fcn.00447240(puVar20);\n                        ppuVar16 = *(*0x20 + 8);\n                        ppuVar16[2] = puVar20;\n                        unaff_RDI = ppuVar16;\n                        if (*0x626890 == 0) {\n                            *ppuVar16 = unaff_RBX;\n                            puVar20 = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x4a1f7c;\n                            unaff_RBX = fcn.0045ea40(puVar20, iVar13, arg3, uVar4);\n                            puVar20 = puVar2;\n                        }\n                    }\n                    ppuVar16[1] = puVar20 + 1;\n                    *(unaff_RBX + puVar20) = 0x3a;\n                    in_R9 = *(*(*0x20 + -0xd0) + 0x18);\n                    arg1 = *(*(*0x20 + -0xd0) + 0x20);\n                    puVar20 = *(*0x20 + -0x118);\n                    if (arg1 <= puVar20) break;\n                    puVar2 = in_R9[puVar20 * 3 + 1];\n                    arg3 = *(*0x20 + -0xf0);\n                    *(*0x20 + -0x1e8) = 0x4a1fd4;\n                    fcn.004a0220(puVar2, puVar20 * 3, arg3);\n                    iVar13 = *(*0x20 + -0x118) + 1;\n                    ppuVar16 = *(*0x20 + -0xe8);\n                    in_R9 = ppuVar16;\n                    if (ppuVar16 <= iVar13) goto code_r0x004a1c65;\n                    puVar15 = *(*0x20 + -0x98) + 0x18;\n                }\n                *(*0x20 + -0x1e8) = 0x4a1ffd;\n                in_RAX = fcn.0045eee0(arg1);\n                goto code_r0x004a1ffe;\n            }\ncode_r0x004a1c65:\n            piVar24 = *(*0x20 + 8);\n            if (*(piVar24 + 10) != '\\0') {\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x4a1c94;\n                    iVar14 = fcn.00447240(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x626890 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a1cb3;\n                        iVar14 = fcn.0045ea40(iVar13, piVar24, arg3, in_R9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            iVar13 = piVar24[1];\n            iVar11 = *piVar24;\n            piVar23 = piVar24;\n            iVar14 = iVar11;\n            if (piVar24[2] < iVar13 + 1U) {\n                *(*0x20 + -0x1e8) = 0x4a1cf1;\n                iVar14 = fcn.00447240(iVar13);\n                piVar23 = *(*0x20 + 8);\n                piVar23[2] = iVar13;\n                if (*0x626890 == 0) {\n                    *piVar23 = iVar14;\n                    iVar13 = iVar11;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x4a1d10;\n                    iVar14 = fcn.0045ea40(iVar13, piVar24, arg3, in_R9);\n                    iVar13 = iVar11;\n                }\n            }\n            piVar23[1] = iVar13 + 1;\n            *(iVar14 + iVar13) = 0x5d;\n            return;\n        }\n        if (uVar22 != 0x11) goto code_r0x004a110f;\n    }\n    else {\n        if (0x17 < uVar22) {\n            if (uVar22 == 0x18) {\n                *(*0x20 + -0x1e8) = 0x4a1138;\n                fcn.0048f3e0(unaff_RDI);\n                *(*0x20 + -0x1e8) = 0x4a1152;\n                fcn.0049e060(arg1, unaff_RDI);\n                return;\n            }\n            if (uVar22 == 0x19) {\n                if (*(in_RAX + 10) != '\\0') {\n                    *(*0x20 + -0x1e8) = 0x4a0f74;\n                    iVar13 = fcn.0048f4c0(unaff_RDI);\n                    pcVar26 = *(iVar13 + 0xf8);\n                    *(*0x20 + -0x1e8) = 0x4a0f82;\n                    uVar7 = (*pcVar26)();\n                    puVar15 = *(*0x20 + 8);\n                    puVar19 = puVar15[1];\n                    *(*0x20 + -0xe8) = arg1 + puVar19;\n                    uVar4 = *puVar15;\n                    puVar29 = puVar15[2];\n                    if (puVar15[2] < arg1 + puVar19) {\n                        *(*0x20 + -0xf0) = puVar19;\n                        *(*0x20 + -0x150) = arg1;\n                        *(*0x20 + -0xb8) = uVar7;\n                        *(*0x20 + -0x1e8) = 0x4a0fcd;\n                        uVar4 = fcn.00447240(puVar19);\n                        arg1 = *(*0x20 + -0x150);\n                        puVar29 = puVar19;\n                    }\n                    *(*0x20 + -0x88) = uVar4;\n                    *(*0x20 + -0xf0) = puVar29;\n                    *(*0x20 + -0x1e8) = 0x4a100d;\n                    fcn.0045f840(arg1);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0xe8);\n                    in_RAX[2] = *(*0x20 + -0xf0);\n                    if (*0x626890 == 0) {\n                        *in_RAX = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a1050;\n                        fcn.0045eb60(arg1, *(*0x20 + -0x88), uVar4, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar9 = in_RAX[1];\n                uVar22 = *in_RAX;\n                uVar6 = uVar22;\n                if (in_RAX[2] < uVar9 + 1) {\n                    *(*0x20 + -0x1e8) = 0x4a10a5;\n                    uVar8 = uVar9;\n                    uVar6 = fcn.00447240(uVar9);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = uVar9;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a10c5;\n                        uVar6 = fcn.0045ea40(uVar9, unaff_RDI, arg3, uVar8);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar9 = uVar22;\n                }\n                in_RAX[1] = uVar9 + 1;\n                *(uVar6 + uVar9) = 0x7b;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x120) = iVar13;\n                    *(*0x20 + -0x1e8) = 0x4a14a8;\n                    iVar13 = fcn.0048eea0(unaff_RDI);\n                    if (iVar13 <= *(*0x20 + -0x120)) break;\n                    if (*(*0x20 + -0x120) < 1) {\n                        piVar24 = *(*0x20 + 8);\n                    }\n                    else {\n                        piVar23 = *(*0x20 + 8);\n                        piVar24 = piVar23;\n                        if (*(piVar23 + 10) == '\\0') {\n                            iVar13 = piVar23[1];\n                            iVar11 = *piVar23;\n                            uVar22 = piVar23[2];\n                            iVar14 = iVar11;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x4a1585;\n                                iVar14 = fcn.00447240(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x626890 == 0) {\n                                    *piVar24 = iVar14;\n                                    iVar13 = iVar11;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x4a15a5;\n                                    iVar14 = fcn.0045ea40(iVar13, piVar23, uVar22, uVar9);\n                                    iVar13 = iVar11;\n                                }\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar6 = piVar23[1];\n                            uVar22 = uVar6 + 2;\n                            iVar13 = *piVar23;\n                            uVar8 = uVar6;\n                            uVar18 = piVar23[2];\n                            if (piVar23[2] < uVar22) {\n                                *(*0x20 + -0xe8) = uVar6;\n                                *(*0x20 + -0xf0) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x4a150f;\n                                iVar13 = fcn.00447240(uVar6);\n                                piVar24 = *(*0x20 + 8);\n                                uVar22 = *(*0x20 + -0xf0);\n                                uVar8 = *(*0x20 + -0xe8);\n                                uVar18 = uVar6;\n                            }\n                            *(iVar13 + uVar8) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar18;\n                            if (*0x626890 == 0) {\n                                *piVar24 = iVar13;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x4a155c;\n                                fcn.0045eb80(uVar8, piVar24, uVar18, uVar9);\n                            }\n                        }\n                    }\n                    if ((*(piVar24 + 0x4f) != '\\0') || (*(piVar24 + 10) != '\\0')) {\n                        *(*0x20 + -0x1e8) = 0x4a15f9;\n                        iVar13 = fcn.0048f4c0(*(*0x20 + -0xe0));\n                        pcVar26 = *(iVar13 + 0x50);\n                        *(*0x20 + -0x1e8) = 0x4a160a;\n                        (*pcVar26)();\n                        *(*0x20 + -0x70) = *(*0x20 + -0x1e0);\n                        *(*0x20 + -0x1f0) = unaff_RBP;\n                        *(*0x20 + -0x1e8) = 0x4a1632;\n                        fcn.0045f50c();\n                        unaff_RBP = *(*0x20 + -0x1f0);\n                        iVar13 = *(*0x20 + -0x68);\n                        if (iVar13 != 0) {\n                            *(*0x20 + -0x140) = iVar13;\n                            puVar20 = *(*0x20 + 8);\n                            uVar22 = puVar20[1];\n                            *(*0x20 + -0xe8) = uVar22;\n                            *(*0x20 + -0xf0) = iVar13 + uVar22;\n                            uVar9 = *puVar20;\n                            uVar6 = puVar20[2];\n                            if (puVar20[2] < iVar13 + uVar22) {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x70);\n                                *(*0x20 + -0x1e8) = 0x4a169f;\n                                uVar9 = fcn.00447240(uVar22);\n                                iVar13 = *(*0x20 + -0x140);\n                                uVar6 = uVar22;\n                            }\n                            *(*0x20 + -0x88) = uVar9;\n                            *(*0x20 + -0xf8) = uVar6;\n                            *(*0x20 + -0x1e8) = 0x4a16d6;\n                            fcn.0045f840(iVar13);\n                            iVar11 = *(*0x20 + -0xf0);\n                            piVar24 = *(*0x20 + 8);\n                            piVar24[1] = iVar11;\n                            uVar22 = *(*0x20 + -0xf8);\n                            piVar24[2] = uVar22;\n                            iVar14 = *(*0x20 + -0x140);\n                            iVar13 = iVar14 + *(*0x20 + -0xe8);\n                            if (*0x626890 == 0) {\n                                iVar12 = *(*0x20 + -0x88);\n                                *piVar24 = iVar12;\n                            }\n                            else {\n                                iVar12 = *(*0x20 + -0x88);\n                                *(*0x20 + -0x1e8) = 0x4a1731;\n                                fcn.0045eb80(iVar11, uVar22, iVar14, uVar9);\n                            }\n                            iVar10 = iVar12;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x4a1745;\n                                iVar10 = fcn.00447240(iVar11);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar11;\n                                if (*0x626890 == 0) {\n                                    *piVar24 = iVar10;\n                                    iVar11 = iVar12;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x4a1765;\n                                    iVar10 = fcn.0045ea40(iVar11, uVar22, iVar14, uVar9);\n                                    iVar11 = iVar12;\n                                }\n                            }\n                            piVar24[1] = iVar11 + 1;\n                            *(iVar10 + iVar11) = 0x3a;\n                        }\n                    }\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x1e8) = 0x4a1445;\n                    fcn.0049d200(*(*0x20 + -0xe0));\n                    arg3 = *(*0x20 + 0x30) + 1;\n                    *(*0x20 + -0x1e8) = 0x4a146e;\n                    fcn.004a0220(uVar4, *(*0x20 + 0x30), arg3);\n                    iVar13 = *(*0x20 + -0x120) + 1;\n                    unaff_RDI = *(*0x20 + -0xe0);\n                }\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x4a17b6;\n                    iVar14 = fcn.00447240(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x626890 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a17d5;\n                        iVar14 = fcn.0045ea40(iVar13, piVar24, arg3, uVar9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            if (uVar22 != 0x1a) {\n                *(*0x20 + -0x1e8) = 0x4a1125;\n                fcn.0049d2a0(arg1, unaff_RDI, arg3, in_R9);\n                return;\n            }\ncode_r0x004a110f:\n            *(*0x20 + -0x1e8) = 0x4a1117;\n            fcn.0049e860(arg1);\n            return;\n        }\n        if (uVar22 == 0x16) {\n            if (arg3 == NULL) {\n                *(*0x20 + -0x1e8) = 0x4a0dd1;\n                iVar13 = fcn.0048ef80(unaff_RDI);\n                bVar31 = iVar13 != 0;\n                arg1 = *(*0x20 + -0x78);\n                arg3 = *(*0x20 + 0x30);\n                unaff_RDI = *(*0x20 + -0xe0);\n            }\n            else {\n                bVar31 = false;\n            }\n            if (bVar31) {\n                *(*0x20 + -0x1e8) = 0x4a0e1f;\n                uVar4 = fcn.0048e180(unaff_RDI);\n                uVar17 = unaff_RDI & 0x1f;\n                if (uVar17 < 0x16) {\n                    if ((uVar17 == 0x11) || (uVar17 == 0x15)) {\ncode_r0x004a0e51:\n                        piVar24 = *(*0x20 + 8);\n                        iVar13 = piVar24[1];\n                        iVar11 = *piVar24;\n                        piVar23 = piVar24;\n                        iVar14 = iVar11;\n                        if (piVar24[2] < iVar13 + 1U) {\n                            *(*0x20 + -0x78) = arg1;\n                            *(*0x20 + -0x80) = uVar4;\n                            *(*0x20 + -0xe0) = unaff_RDI;\n                            *(*0x20 + -0x1e8) = 0x4a0e97;\n                            iVar12 = iVar11;\n                            iVar14 = fcn.00447240(iVar13);\n                            piVar23 = *(*0x20 + 8);\n                            piVar23[2] = iVar13;\n                            if (*0x626890 == 0) {\n                                *piVar23 = iVar14;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x4a0eb6;\n                                iVar14 = fcn.0045ea40(iVar13, piVar24, arg3, iVar12);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                            iVar13 = iVar11;\n                        }\n                        piVar23[1] = iVar13 + 1;\n                        *(iVar14 + iVar13) = 0x26;\n                        *(*0x20 + -0x1e8) = 0x4a0f05;\n                        fcn.004a0220(arg1, piVar23, *(*0x20 + 0x30) + 1);\n                        return;\n                    }\n                }\n                else if ((uVar17 == 0x17) || (uVar17 == 0x19)) goto code_r0x004a0e51;\n                arg1 = *(*0x20 + -0x78);\n            }\n            goto code_r0x004a110f;\n        }\n    }\n    *(*0x20 + -0x100) = uVar22;\n    if (uVar17 < 0x72) {\n        if ((uVar17 != 0x58) && (uVar17 != 0x71)) goto code_r0x004a0b03;\n    }\n    else if ((uVar17 != 0x73) && (uVar17 != 0x78)) goto code_r0x004a0b03;\n    *(*0x20 + -0x1e8) = 0x4a09d7;\n    iVar13 = fcn.0048f4c0(unaff_RDI);\n    *(*0x20 + -0x168) = iVar13;\n    *(*0x20 + -0xd8) = arg1;\n    pcVar26 = *(iVar13 + 0x48);\n    *(*0x20 + -0x1e8) = 0x4a09ed;\n    iVar13 = (*pcVar26)();\n    pcVar26 = *(iVar13 + 0x98);\n    *(*0x20 + -0x1e8) = 0x4a09f9;\n    iVar13 = (*pcVar26)();\n    if (iVar13 == 8) {\n        if (*(*0x20 + -0x100) == 0x17) {\n            iVar11 = *(*0x20 + -0x78);\n            iVar13 = *(*0x20 + -0xe0);\n            *(*0x20 + -0x1e8) = 0x4a0ac7;\n            iVar14 = fcn.0048ce60(iVar13);\n        }\n        else {\n            uVar4 = *(*0x20 + -0xe0);\n            if ((uVar4 >> 8 & 1) == 0) {\n                *(*0x20 + -0x1e8) = 0x4a0a3f;\n                uVar4 = fcn.0048e7e0(uVar4);\n                *(*0x20 + -0x110) = uVar4;\n                *(*0x20 + -0x1e8) = 0x4a0a59;\n                iVar14 = fcn.00447160(uVar4);\n                *(*0x20 + -0x90) = iVar14;\n                for (iVar12 = 0; iVar13 = *(*0x20 + -0x110),  iVar11 = iVar13,  iVar12 < iVar13; iVar12 = iVar12 + 1) {\n                    *(*0x20 + -0x128) = iVar12;\n                    puVar15 = *(*0x20 + -0x78);\n                    uVar4 = *(*0x20 + -0xe0);\n                    *(*0x20 + -0x1e8) = 0x4a1bb1;\n                    fcn.0048e4a0(uVar4);\n                    uVar22 = uVar4 & 0x1f;\n                    *(*0x20 + -0x100) = uVar22;\n                    if (uVar22 < 10) {\n                        if (uVar22 == 7) {\n                            uVar21 = *puVar15;\n                        }\n                        else if (uVar22 == 8) {\n                            uVar21 = *puVar15;\n                        }\n                        else {\n                            if (uVar22 != 9) {\ncode_r0x004a1c27:\n                                *(*0x20 + -0x1e8) = 0x4a1c33;\n                                puVar15 = fcn.0040cc20();\n                                puVar15[1] = 0x12;\n                                *puVar15 = 0x4cb38f;\n                                puVar15[2] = *(*0x20 + -0x100);\n                                *(*0x20 + -0x1e8) = 0x4a1c65;\n                                fcn.00433560();\n                                goto code_r0x004a1c65;\n                            }\n                            uVar21 = *puVar15;\n                        }\n                    }\n                    else if (uVar22 == 10) {\n                        uVar21 = *puVar15;\n                    }\n                    else if (uVar22 == 0xb) {\n                        uVar21 = *puVar15;\n                    }\n                    else {\n                        if (uVar22 != 0xc) goto code_r0x004a1c27;\n                        uVar21 = *puVar15;\n                    }\n                    iVar12 = *(*0x20 + -0x128);\n                    iVar14 = *(*0x20 + -0x90);\n                    *(iVar14 + iVar12) = uVar21;\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a0a7d;\n                fcn.0048e7e0(uVar4);\n                iVar11 = *(*0x20 + -0x78);\n                iVar13 = *(*0x20 + -0xe0);\n                *(*0x20 + -0x1e8) = 0x4a0a9f;\n                fcn.0048f140(iVar13);\n                *(*0x20 + -0x1e8) = 0x4a0aa5;\n                iVar14 = fcn.0048ce60(iVar13);\n            }\n        }\n        *(*0x20 + -0x108) = iVar13;\n        *(*0x20 + -0x110) = iVar11;\n        *(*0x20 + -0xa0) = iVar14;\n        pcVar26 = *(*(*0x20 + -0x168) + 0xf8);\n        *(*0x20 + -0x1e8) = 0x4a1b1a;\n        uVar4 = (*pcVar26)();\n        *(*0x20 + -0x1e8) = 0x4a1b4c;\n        fcn.0049e160(*(*0x20 + -0x110), pcVar26, uVar4, iVar11);\n        return;\n    }\n    in_RAX = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x78);\n    unaff_RDI = *(*0x20 + -0xe0);\n    arg3 = *(*0x20 + 0x30);\ncode_r0x004a0b03:\n    if (*(in_RAX + 10) == '\\0') {\n        uVar22 = in_RAX[1];\n        uVar9 = *in_RAX;\n        uVar6 = uVar9;\n        if (in_RAX[2] < uVar22 + 1) {\n            *(*0x20 + -0x1e8) = 0x4a0b3a;\n            uVar8 = uVar22;\n            uVar6 = fcn.00447240(uVar22);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar22;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a0b59;\n                uVar6 = fcn.0045ea40(uVar22, unaff_RDI, arg3, uVar8);\n            }\n            unaff_RDI = *(*0x20 + -0xe0);\n            arg3 = *(*0x20 + 0x30);\n            uVar22 = uVar9;\n        }\n        in_RAX[1] = uVar22 + 1;\n        *(uVar6 + uVar22) = 0x5b;\n        iVar13 = 0;\n        while( true ) {\n            *(*0x20 + -0x138) = iVar13;\n            *(*0x20 + -0x1e8) = 0x4a1a08;\n            iVar13 = fcn.0048e7e0(unaff_RDI);\n            if (iVar13 <= *(*0x20 + -0x138)) break;\n            if (0 < *(*0x20 + -0x138)) {\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                uVar9 = piVar24[2];\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (uVar9 < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x4a1a49;\n                    iVar14 = fcn.00447240(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x626890 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4a1a68;\n                        iVar14 = fcn.0045ea40(iVar13, piVar24, uVar9, uVar22);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x20;\n            }\n            uVar4 = *(*0x20 + -0x78);\n            *(*0x20 + -0x1e8) = 0x4a19a5;\n            fcn.0048e4a0(*(*0x20 + -0xe0));\n            arg3 = *(*0x20 + 0x30) + 1;\n            *(*0x20 + -0x1e8) = 0x4a19ce;\n            fcn.004a0220(uVar4, *(*0x20 + 0x30), arg3);\n            iVar13 = *(*0x20 + -0x138) + 1;\n            unaff_RDI = *(*0x20 + -0xe0);\n        }\n        piVar24 = *(*0x20 + 8);\n        iVar13 = piVar24[1];\n        iVar11 = *piVar24;\n        piVar23 = piVar24;\n        iVar14 = iVar11;\n        if (piVar24[2] < iVar13 + 1U) {\n            *(*0x20 + -0x1e8) = 0x4a1ab3;\n            iVar14 = fcn.00447240(iVar13);\n            piVar23 = *(*0x20 + 8);\n            piVar23[2] = iVar13;\n            if (*0x626890 == 0) {\n                *piVar23 = iVar14;\n                iVar13 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a1ad2;\n                iVar14 = fcn.0045ea40(iVar13, piVar24, arg3, uVar22);\n                iVar13 = iVar11;\n            }\n        }\n        piVar23[1] = iVar13 + 1;\n        *(iVar14 + iVar13) = 0x5d;\n        return;\n    }\n    *(*0x20 + -0x1e8) = 0x4a0bab;\n    iVar13 = fcn.0048f4c0(unaff_RDI);\n    pcVar26 = *(iVar13 + 0xf8);\n    *(*0x20 + -0x1e8) = 0x4a0bb7;\n    uVar7 = (*pcVar26)();\n    *(*0x20 + -0x160) = arg1;\n    puVar15 = *(*0x20 + 8);\n    puVar19 = puVar15[1];\n    *(*0x20 + -0xe8) = puVar19;\n    *(*0x20 + -0xf0) = arg1 + puVar19;\n    uVar4 = *puVar15;\n    puVar29 = puVar15[2];\n    if (puVar15[2] < arg1 + puVar19) {\n        *(*0x20 + -200) = uVar7;\n        *(*0x20 + -0x1e8) = 0x4a0c05;\n        uVar4 = fcn.00447240(puVar19);\n        arg1 = *(*0x20 + -0x160);\n        puVar29 = puVar19;\n    }\n    *(*0x20 + -0xf8) = puVar29;\n    *(*0x20 + -0x88) = uVar4;\n    *(*0x20 + -0x1e8) = 0x4a0c4b;\n    fcn.0045f840(arg1);\n    uVar22 = *(*0x20 + -0xf0);\n    puVar20 = *(*0x20 + 8);\n    puVar20[1] = uVar22;\n    uVar9 = *(*0x20 + -0xf8);\n    puVar20[2] = uVar9;\n    if (*0x626890 == 0) {\n        uVar6 = *(*0x20 + -0x88);\n        *puVar20 = uVar6;\n    }\n    else {\n        uVar6 = *(*0x20 + -0x88);\n        *(*0x20 + -0x1e8) = 0x4a0c8f;\n        fcn.0045eb80(uVar22, uVar9, uVar4, arg1);\n    }\n    if (*(*0x20 + -0x100) == 0x17) {\n        piVar24 = *(*0x20 + -0x78);\n        if (*piVar24 == 0) {\n            iVar13 = *(*0x20 + -0xe8);\n            iVar11 = *(*0x20 + -0x160);\n            uVar8 = iVar11 + iVar13 + 5;\n            uVar18 = uVar22;\n            if (uVar9 < uVar8) {\n                *(*0x20 + -0xe8) = uVar8;\n                *(*0x20 + -0x1e8) = 0x4a0cf1;\n                uVar6 = fcn.00447240(uVar22);\n                uVar8 = *(*0x20 + -0xe8);\n                puVar20 = *(*0x20 + 8);\n                uVar18 = *(*0x20 + -0xf0);\n                uVar9 = uVar22;\n            }\n            *(uVar6 + uVar18) = 0x6c696e28;\n            *(uVar6 + 4 + uVar18) = 0x29;\n            puVar20[1] = uVar8;\n            puVar20[2] = uVar9;\n            if (*0x626890 == 0) {\n                *puVar20 = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a0d36;\n                fcn.0045eb80(uVar18, uVar9, iVar13, iVar11);\n            }\n            return;\n        }\n    }\n    else {\n        piVar24 = *(*0x20 + -0x78);\n    }\n    iVar13 = *(*0x20 + -0xe8);\n    uVar8 = uVar6;\n    if (uVar9 < *(*0x20 + -0x160) + iVar13 + 1U) {\n        *(*0x20 + -0x1e8) = 0x4a0d7a;\n        uVar8 = fcn.00447240(uVar22);\n        puVar20 = *(*0x20 + 8);\n        puVar20[2] = uVar22;\n        if (*0x626890 == 0) {\n            *puVar20 = uVar8;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x4a0d99;\n            uVar8 = fcn.0045ea40(uVar22, uVar9, piVar24, iVar13);\n        }\n        piVar24 = *(*0x20 + -0x78);\n        uVar22 = uVar6;\n    }\n    puVar20[1] = uVar22 + 1;\n    *(uVar8 + uVar22) = 0x7b;\n    iVar11 = 0;\n    while( true ) {\n        *(*0x20 + -0x130) = iVar11;\n        *(*0x20 + -0x1e8) = 0x4a1869;\n        iVar11 = fcn.0048e7e0(*(*0x20 + -0xe0));\n        if (iVar11 <= *(*0x20 + -0x130)) break;\n        if (0 < *(*0x20 + -0x130)) {\n            piVar24 = *(*0x20 + 8);\n            uVar9 = piVar24[1];\n            uVar22 = uVar9 + 2;\n            iVar11 = *piVar24;\n            uVar6 = uVar9;\n            uVar8 = piVar24[2];\n            if (piVar24[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar9;\n                *(*0x20 + -0xf0) = uVar22;\n                *(*0x20 + -0x1e8) = 0x4a18c5;\n                iVar11 = fcn.00447240(uVar9);\n                piVar24 = *(*0x20 + 8);\n                uVar22 = *(*0x20 + -0xf0);\n                uVar6 = *(*0x20 + -0xe8);\n                uVar8 = uVar9;\n            }\n            *(iVar11 + uVar6) = 0x202c;\n            piVar24[1] = uVar22;\n            piVar24[2] = uVar8;\n            if (*0x626890 == 0) {\n                *piVar24 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4a1915;\n                fcn.0045eb80(uVar6, piVar24, uVar8, iVar13);\n            }\n        }\n        uVar4 = *(*0x20 + -0x78);\n        *(*0x20 + -0x1e8) = 0x4a180c;\n        fcn.0048e4a0(*(*0x20 + -0xe0));\n        *(*0x20 + -0x1e8) = 0x4a1835;\n        fcn.004a0220(uVar4, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n        iVar11 = *(*0x20 + -0x130) + 1;\n        piVar24 = *(*0x20 + -0x78);\n    }\n    piVar23 = *(*0x20 + 8);\n    iVar11 = piVar23[1];\n    iVar14 = *piVar23;\n    piVar25 = piVar23;\n    iVar12 = iVar14;\n    if (piVar23[2] < iVar11 + 1U) {\n        *(*0x20 + -0x1e8) = 0x4a1946;\n        iVar12 = fcn.00447240(iVar11);\n        piVar25 = *(*0x20 + 8);\n        piVar25[2] = iVar11;\n        if (*0x626890 == 0) {\n            *piVar25 = iVar12;\n            iVar11 = iVar14;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x4a1967;\n            iVar12 = fcn.0045ea40(iVar11, piVar23, piVar24, iVar13);\n            iVar11 = iVar14;\n        }\n    }\n    piVar25[1] = iVar11 + 1;\n    *(iVar12 + iVar11) = 0x7d;\n    return;\n}\n",
        "token_count": 16062
    },
    "004a2060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004a2060(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t *noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX <= unaff_RDI) {\n                return 0;\n            }\n            if (unaff_RDI < unaff_RBX) {\n                iVar1 = *(in_RAX + unaff_RDI * 0x10);\n                noname_2 = *(in_RAX + 8 + unaff_RDI * 0x10);\n                if (iVar1 == 0x4b47a0) {\n                    uVar4 = *noname_2;\n                }\n                else {\n                    uVar4 = 0;\n                    if (iVar1 == 0) {\n                        noname_2 = NULL;\n                        uVar5 = 0;\n                    }\n                    else {\n                        puVar2 = *0x5d26a0;\n                        if ((*0x5d2690 != '\\0') && (*0x5d2698 = iVar1,  puVar2 = noname_2,  *0x626890 != 0)) {\n                            *(*0x20 + -0x30) = 0x4a20fa;\n                            fcn.0045ebc0(arg1, unaff_RDI, noname_2, 0x4b47a0);\n                            puVar2 = *0x5d26a0;\n                        }\n                        *0x5d26a0 = puVar2;\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x10) = noname_2;\n                        if (*(*0x20 + -0x18) == 0) {\n                            uVar5 = 0;\n                            noname_2 = NULL;\n                        }\n                        else {\n                            uVar5 = *(*(*0x20 + -0x18) + 0x17) & 0x1f;\n                        }\n                    }\n                    uVar6 = uVar5;\n                    if (uVar6 - 2 < 5) {\n                        if (uVar6 < 4) {\n                            if (uVar6 == 2) {\n                                uVar4 = *noname_2;\n                            }\n                            else {\n                                uVar4 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 4) {\n                            uVar4 = *noname_2;\n                        }\n                        else if (uVar6 == 5) {\n                            uVar4 = *noname_2;\n                        }\n                        else {\n                            uVar4 = *noname_2;\n                        }\n                    }\n                    else if (uVar6 - 7 < 6) {\n                        if (uVar6 < 10) {\n                            if (uVar6 == 7) {\n                                uVar6 = *noname_2;\n                            }\n                            else if (uVar6 == 8) {\n                                uVar6 = *noname_2;\n                            }\n                            else {\n                                uVar6 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 10) {\n                            uVar6 = *noname_2;\n                        }\n                        else if (uVar6 == 0xb) {\n                            uVar6 = *noname_2;\n                        }\n                        else {\n                            uVar6 = *noname_2;\n                        }\n                        if (-1 < uVar6) {\n                            uVar4 = uVar6;\n                        }\n                    }\n                }\n                if (2000000 < uVar4 + 1000000) {\n                    uVar4 = 0;\n                }\n                return uVar4;\n            }\n            *(*0x20 + -0x30) = 0x4a2234;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4a224e;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1198
    },
    "004a2280": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004a2280(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 3) {\n        return 0;\n    }\n    iVar3 = 1;\n    while( true ) {\n        if (unaff_RBX <= iVar3) {\n            return 0;\n        }\n        if (*(in_RAX + iVar3) == ']') break;\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 < 2) {\n        bVar2 = false;\n        iVar5 = 0;\n        iVar4 = iVar3;\n    }\n    else {\n        bVar2 = false;\n        iVar5 = 0;\n        for (iVar4 = 1; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            uVar1 = *(in_RAX + iVar4);\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n            if (2000000 < iVar5 + 1000000U) {\n                bVar2 = false;\n                iVar5 = 0;\n                iVar4 = iVar3;\n                break;\n            }\n            iVar5 = (uVar1 - 0x30 & 0xff) + iVar5 * 10;\n            bVar2 = true;\n        }\n    }\n    if ((bVar2) && (iVar4 == iVar3)) {\n        return iVar5 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "004a97a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode * fcn.004a97a0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uchar (*in_RAX) [16];\n    ulong *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    code *pcVar8;\n    uchar (*pauVar9) [16];\n    uchar (*pauVar10) [16];\n    uint64_t uVar11;\n    int64_t iVar12;\n    code *arg1;\n    int64_t *piVar13;\n    code *pcVar14;\n    uint64_t uVar15;\n    code **arg3;\n    code *arg4;\n    int64_t unaff_R14;\n    code *pcStack424;\n    code *pcStack384;\n    int64_t iStack376;\n    int64_t iStack368;\n    int64_t iStack360;\n    int64_t iStack352;\n    int64_t iStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t iStack320;\n    uint64_t uStack312;\n    uint64_t uStack304;\n    uchar *puStack296;\n    ulong uStack288;\n    ulong uStack280;\n    uchar *puStack272;\n    uchar (*pauStack264) [16];\n    ulong uStack256;\n    int64_t *piStack248;\n    int64_t *piStack240;\n    int64_t *piStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    int64_t *piStack208;\n    int64_t *piStack200;\n    int64_t *piStack192;\n    int64_t *piStack184;\n    int64_t *piStack176;\n    int64_t *piStack168;\n    ulong *puStack160;\n    int64_t iStack152;\n    code *pcStack144;\n    code *pcStack136;\n    code *pcStack128;\n    uchar auStack120 [16];\n    uchar (*apauStack104 [3]) [16];\n    code *pcStack80;\n    ulong uStack72;\n    ulong uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (&pcStack384 < *(unaff_R14 + 0x10) || &pcStack384 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    pauVar9 = in_RAX;\n    if ((*(*in_RAX + 8) == 0) && (*in_RAX[0xc] == 0)) {\n        puVar3 = fcn.0040cc20();\n        puVar3[1] = 0x10;\n        *puVar3 = 0x4cab55;\n        *in_RAX[0xc] = 0x4eead8;\n        if (*0x626890 == 0) {\n            *(in_RAX[0xc] + 8) = puVar3;\n        }\n        else {\n            fcn.0045ea40(0x4eead8, in_RAX, param_3, param_4);\n        }\n    }\n    if (*pauVar9[0xc] != 0) {\n        piVar13 = *pauVar9[0xf];\n        if (*(pauVar9[0xf] + 8) != 0) {\n            uStack304 = 0;\n            iStack328 = *(pauVar9[0xf] + 8);\n            while( true ) {\n                piStack248 = piVar13;\n                (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                uStack304 = uStack304 + 1;\n                pauVar9 = in_RAX;\n                if (iStack328 <= uStack304) break;\n                piVar13 = piStack248 + 2;\n            }\n        }\n        iStack336 = *pauVar9[0x11];\n        piStack240 = *(pauVar9[0x10] + 8);\n        if (iStack336 != 0) {\n            uStack304 = 0;\n            while( true ) {\n                (**(*piStack240 + 0x18))(*(*piStack240 + 0x18), piStack240[1]);\n                uStack304 = uStack304 + 1;\n                pauVar9 = in_RAX;\n                if (iStack336 <= uStack304) break;\n                piStack240 = piStack240 + 2;\n            }\n        }\n        return *pauVar9[0xc];\n    }\n    uVar5 = *(*pauVar9 + 8);\n    pcVar8 = *pauVar9[4];\n    uStack256 = *(pauVar9[4] + 8);\n    uVar4 = fcn.004a9500(pcVar8);\n    if (pcVar8 != NULL) {\n        piVar13 = *in_RAX[0xf];\n        if (*(in_RAX[0xf] + 8) != 0) {\n            uStack304 = 0;\n            iStack344 = *(in_RAX[0xf] + 8);\n            while( true ) {\n                piStack232 = piVar13;\n                (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                uStack304 = uStack304 + 1;\n                if (iStack344 <= uStack304) break;\n                piVar13 = piStack232 + 2;\n            }\n        }\n        iStack352 = *in_RAX[0x11];\n        piStack224 = *(in_RAX[0x10] + 8);\n        if (iStack352 != 0) {\n            uStack304 = 0;\n            while( true ) {\n                (**(*piStack224 + 0x18))();\n                uStack304 = uStack304 + 1;\n                if (iStack352 <= uStack304) break;\n                piStack224 = piStack224 + 2;\n            }\n        }\n        return pcVar8;\n    }\n    *(*in_RAX + 8) = uVar5;\n    if (*0x626890 == 0) {\n        **in_RAX = uVar4;\n    }\n    else {\n        fcn.0045ea40(0, pauVar9, param_3, param_4);\n    }\n    if (*in_RAX[10] != 0) {\n        puVar3 = fcn.0040cc20();\n        puVar3[1] = 0x15;\n        *puVar3 = 0x4cc20e;\n        return 0x4eead8;\n    }\n    if (*in_RAX[0xb] != 0) {\n        (**(*in_RAX[0xb] + 0x20))();\n        cVar2 = fcn.00406540();\n        if (cVar2 != '\\0') {\n            piVar13 = *in_RAX[0xf];\n            if (*(in_RAX[0xf] + 8) != 0) {\n                iVar12 = 0;\n                iStack360 = *(in_RAX[0xf] + 8);\n                while( true ) {\n                    uStack304 = iVar12;\n                    piStack216 = piVar13;\n                    (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                    iVar12 = uStack304 + 1;\n                    if (iStack360 <= iVar12) break;\n                    piVar13 = piStack216 + 2;\n                }\n            }\n            piVar13 = *(in_RAX[0x10] + 8);\n            if (*in_RAX[0x11] != 0) {\n                iVar12 = 0;\n                iStack368 = *in_RAX[0x11];\n                while( true ) {\n                    uStack304 = iVar12;\n                    piStack208 = piVar13;\n                    (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                    iVar12 = uStack304 + 1;\n                    if (iStack368 <= iVar12) break;\n                    piVar13 = piStack208 + 2;\n                }\n            }\n            pcVar8 = (**(*in_RAX[0xb] + 0x28))();\n            return pcVar8;\n        }\n    }\n    iVar12 = *(in_RAX[8] + 8) + 3;\n    uStack304 = iVar12;\n    uVar5 = fcn.00447160(iVar12);\n    *in_RAX[0xe] = 0;\n    *(in_RAX[0xe] + 8) = uStack304;\n    pcStack128 = in_RAX[0xd] + 8;\n    pauVar9 = in_RAX;\n    if (*0x626890 == 0) {\n        *(in_RAX[0xd] + 8) = uVar5;\n    }\n    else {\n        fcn.0045ea40(iVar12, in_RAX, param_3, param_4);\n    }\n    apauStack104[0] = 0x4d2810;\n    apauStack104[1] = 0x4d2818;\n    apauStack104[2] = 0x4d2808;\n    iVar12 = 0;\n    do {\n        if (2 < iVar12) {\n            uVar11 = *pauVar9[0xe];\n            iVar12 = *(pauVar9[8] + 8);\n            uStack304 = uVar11 + iVar12;\n            pcStack144 = *(pauVar9[0xd] + 8);\n            uVar7 = uVar11;\n            uVar15 = *(pauVar9[0xe] + 8);\n            pcVar8 = *pauVar9[8];\n            if (*(pauVar9[0xe] + 8) < uStack304) {\n                iStack320 = iVar12;\n                uStack312 = uVar11;\n                pcStack136 = *pauVar9[8];\n                pcStack144 = fcn.00447240(uVar11);\n                uVar7 = uStack312;\n                pauVar9 = in_RAX;\n                iVar12 = iStack320;\n                uVar15 = uVar11;\n                pcVar8 = pcStack136;\n            }\n            if (uVar7 <= uStack304) {\n                arg1 = pcStack144 + (uVar7 << 3 & uVar7 - uVar15 >> 0x3f);\n                arg4 = pcVar8;\n                uStack312 = uVar15;\n                fcn.00411cc0(iVar12);\n                pcVar14 = pcStack128;\n                *in_RAX[0xe] = uStack304;\n                *(in_RAX[0xe] + 8) = uStack312;\n                pauVar9 = in_RAX;\n                if (*0x626890 == 0) {\n                    *(in_RAX[0xd] + 8) = pcStack144;\n                    pcVar14 = pcVar8;\n                }\n                else {\n                    fcn.0045eb60(iVar12, pcStack144, in_RAX, arg4);\n                }\n                iVar12 = *(pauVar9[2] + 8);\n                if (iVar12 == 0) {\n                    iVar12 = fcn.00495d60();\n                    pauVar9 = in_RAX;\n                }\n                else {\n                    pcVar14 = NULL;\n                    arg1 = *pauVar9[3];\n                }\n                if (pcVar14 != NULL) {\n                    return pcVar14;\n                }\n                puStack296 = *pauVar9[1];\n                if (*(pauVar9[1] + 8) == 0) {\n                    auStack120 = *pauVar9;\n                    puStack296 = auStack120;\n                }\n                fcn.004aa780(arg1);\n                uStack64 = fcn.004aab00(arg1);\n                pcStack80 = *in_RAX[4];\n                uStack72 = *(in_RAX[4] + 8);\n                auStack40 = *(in_RAX[0xd] + 8);\n                uVar5 = *(in_RAX[0xe] + 8);\n                auStack56 = CONCAT88(arg1, iVar12);\n                auStack24 = CONCAT88(*(in_RAX[9] + 8), uVar5);\n                pcVar8 = *(*in_RAX + 8);\n                arg3 = &pcStack80;\n                puStack272 = puStack296;\n                uVar4 = fcn.004961c0(puStack296, in_RAX, arg3);\n                pauVar9 = in_RAX;\n                if (*0x626890 == 0) {\n                    *in_RAX[10] = uVar4;\n                }\n                else {\n                    fcn.0045ea40(puStack272, in_RAX, arg3, uVar5);\n                }\n                if (pcVar8 == NULL) {\n                    iVar12 = *(pauVar9[0xf] + 8);\n                    piVar13 = *pauVar9[0xf];\n                    if (iVar12 != 0) {\n                        uVar11 = 0;\n                        while( true ) {\n                            uStack304 = uVar11;\n                            piStack168 = piVar13;\n                            (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                            uVar11 = uStack304 + 1;\n                            pauVar9 = in_RAX;\n                            if (iVar12 <= uVar11) break;\n                            piVar13 = piStack168 + 2;\n                        }\n                    }\n                    if (*(pauVar9[0x12] + 8) != 0) {\n                        uVar4 = fcn.00404c80();\n                        pauVar10 = in_RAX;\n                        if (*0x626890 == 0) {\n                            *(in_RAX[0x13] + 8) = uVar4;\n                        }\n                        else {\n                            fcn.0045ea40(in_RAX, pauVar9, arg3, uVar5);\n                        }\n                        iStack152 = *pauVar10[0x12];\n                        uStack304 = *(pauVar10[0x12] + 8);\n                        uVar11 = 0;\n                        pauVar9 = pauVar10;\n                        while (uVar11 < uStack304) {\n                            uStack288 = *(iStack152 + uVar11 * 8);\n                            uStack312 = uVar11;\n                            puStack160 = fcn.0040cc20();\n                            *puStack160 = 0x4aa700;\n                            if (*0x626890 == 0) {\n                                puStack160[1] = in_RAX;\n                            }\n                            else {\n                                fcn.0045eb60(0x4aa700, in_RAX, arg3, uVar5);\n                            }\n                            puVar3 = fcn.0040cc20();\n                            uVar4 = 0x4aa6a0;\n                            *puVar3 = 0x4aa6a0;\n                            if (*0x626890 == 0) {\n                                puVar3[1] = puStack160;\n                                puVar3[2] = uStack288;\n                            }\n                            else {\n                                fcn.0045eb60(0x4aa6a0, puStack160, arg3, uVar5);\n                                fcn.0045eb60(uVar4, uStack288, arg3, uVar5);\n                            }\n                            fcn.0043e6c0();\n                            pauVar9 = in_RAX;\n                            uVar11 = uStack312 + 1;\n                        }\n                    }\n                    if (*pauVar9[0xb] != 0) {\n                        uVar4 = fcn.00404c80();\n                        if (*0x626890 == 0) {\n                            *in_RAX[0x14] = uVar4;\n                        }\n                        else {\n                            fcn.0045ea40(in_RAX, pauVar9, arg3, uVar5);\n                        }\n                        puVar3 = fcn.0040cc20();\n                        *puVar3 = 0x4aa5e0;\n                        if (*0x626890 == 0) {\n                            puVar3[1] = in_RAX;\n                        }\n                        else {\n                            fcn.0045eb40(in_RAX);\n                        }\n                        fcn.0043e6c0();\n                    }\n                    return NULL;\n                }\n                iVar12 = *(pauVar9[0xf] + 8);\n                piVar13 = *pauVar9[0xf];\n                if (iVar12 != 0) {\n                    uStack304 = 0;\n                    while( true ) {\n                        piStack184 = piVar13;\n                        (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                        uStack304 = uStack304 + 1;\n                        pauVar9 = in_RAX;\n                        if (iVar12 <= uStack304) break;\n                        piVar13 = piStack184 + 2;\n                    }\n                }\n                iVar12 = *pauVar9[0x11];\n                piStack176 = *(pauVar9[0x10] + 8);\n                if (iVar12 != 0) {\n                    uStack304 = 0;\n                    while( true ) {\n                        (**(*piStack176 + 0x18))();\n                        uStack304 = uStack304 + 1;\n                        if (iVar12 <= uStack304) break;\n                        piStack176 = piStack176 + 2;\n                    }\n                }\n                return pcVar8;\n            }\n            fcn.0045efa0(uStack304);\n            in_RAX = pauVar9;\ncode_r0x004aa217:\n            pcStack384 = *in_RAX[0x11];\n            piStack192 = *(in_RAX[0x10] + 8);\n            if (pcStack384 != NULL) {\n                uStack304 = 0;\n                while( true ) {\n                    (**(*piStack192 + 0x18))();\n                    uStack304 = uStack304 + 1;\n                    pcStack144 = pcStack424;\n                    if (pcStack384 <= uStack304) break;\n                    piStack192 = piStack192 + 2;\n                }\n            }\n            return pcStack144;\n        }\n        pauVar9 = apauStack104[iVar12];\n        pcStack144 = **pauVar9;\n        pauVar10 = pauVar9;\n        uStack304 = iVar12;\n        uVar5 = (*pcStack144)();\n        if (pcStack144 != NULL) {\n            piVar13 = *in_RAX[0xf];\n            pcStack424 = pcStack144;\n            pauStack264 = pauVar9;\n            if (*(in_RAX[0xf] + 8) != 0) {\n                uStack304 = 0;\n                iStack376 = *(in_RAX[0xf] + 8);\n                while( true ) {\n                    piStack200 = piVar13;\n                    (**(*piVar13 + 0x18))(*(*piVar13 + 0x18), piVar13[1]);\n                    uStack304 = uStack304 + 1;\n                    if (iStack376 <= uStack304) break;\n                    piVar13 = piStack200 + 2;\n                }\n            }\n            goto code_r0x004aa217;\n        }\n        iVar12 = *in_RAX[0xe];\n        iVar1 = *(in_RAX[0xd] + 8);\n        iVar6 = iVar1;\n        pauVar9 = in_RAX;\n        if (*(in_RAX[0xe] + 8) < iVar12 + 1U) {\n            uStack280 = uVar5;\n            iVar6 = fcn.00447240(iVar12);\n            *(in_RAX[0xe] + 8) = iVar12;\n            pauVar10 = in_RAX;\n            if (*0x626890 == 0) {\n                *(in_RAX[0xd] + 8) = iVar6;\n                uVar5 = uStack280;\n                iVar12 = iVar1;\n                pauVar9 = in_RAX;\n            }\n            else {\n                iVar6 = fcn.0045ea40(iVar12, in_RAX, pauVar9, param_4);\n                uVar5 = uStack280;\n                iVar12 = iVar1;\n                pauVar9 = pauVar10;\n            }\n        }\n        *pauVar9[0xe] = iVar12 + 1;\n        if (*0x626890 == 0) {\n            *(iVar6 + iVar12 * 8) = uVar5;\n        }\n        else {\n            fcn.0045ea40(iVar12, pauVar10, pauVar9, iVar12 + 1);\n        }\n        iVar12 = uStack304 + 1;\n        param_4 = uStack304;\n    } while( true );\n}\n",
        "token_count": 4682
    },
    "00401640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004019db)\n\nvoid fcn.00401640(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong arg2_00;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040cc20();\n    iVar1 = fcn.0045f3bc();\n    if (*0x626890 == 0) {\n        *(iVar1 + 0x10) = 0x626d61;\n        *(iVar1 + 0x30) = 0x626d60;\n        *(iVar1 + 0x50) = 0x626d62;\n        *(iVar1 + 0x70) = 0x626d63;\n        *(iVar1 + 0x90) = 0x626d64;\n        *(iVar1 + 0xb0) = 0x626d65;\n        *(iVar1 + 0xd0) = 0x626d66;\n        *(iVar1 + 0xf0) = 0x626d67;\n        *(iVar1 + 0x110) = 0x626d69;\n        *(iVar1 + 0x130) = 0x626d6a;\n        *(iVar1 + 0x150) = 0x626d6b;\n        *(iVar1 + 0x170) = 0x626d6c;\n        *(iVar1 + 400) = 0x626d6e;\n        *(iVar1 + 0x1b0) = 0x626d6f;\n        uVar2 = 0x626d6d;\n        *(iVar1 + 0x1d0) = 0x626d6d;\n    }\n    else {\n        fcn.0045eb40(0x626d61);\n        fcn.0045eb40(0x626d60);\n        fcn.0045eb40(0x626d62);\n        fcn.0045eb40(0x626d63);\n        fcn.0045eb40(0x626d64);\n        fcn.0045eb40(0x626d65);\n        fcn.0045eb40(0x626d66);\n        fcn.0045eb40(0x626d67);\n        fcn.0045eb40(0x626d69);\n        fcn.0045eb40(0x626d6a);\n        fcn.0045eb40(0x626d6b);\n        fcn.0045eb40(0x626d6c);\n        fcn.0045eb40(0x626d6e);\n        fcn.0045eb40(0x626d6f);\n        uVar2 = 0x626d6d;\n        iVar1 = fcn.0045eb40();\n    }\n    *0x5d2658 = 0xf;\n    *0x5d2660 = 0xf;\n    if (*0x626890 != 0) {\n        fcn.0045ea40(uVar2, param_2, param_3, param_4);\n        iVar1 = *0x5d2650;\n    }\n    *0x5d2650 = iVar1;\n    fcn.00401b20(uVar2, param_2);\n    if (uStack40 != 0) {\n        fcn.00401b20(uVar2, param_2);\n        *0x62661c = uStack40;\n        fcn.00401b20(uVar2, param_2);\n        *0x626d6c = (uStack32 & 1) != 0;\n        *0x626d69 = (uStack32 >> 1 & 1) != 0;\n        *0x626d6d = (uStack32 >> 9 & 1) != 0;\n        *0x626d6e = (uStack32 >> 0x13 & 1) != 0;\n        *0x626d6f = (uStack32 >> 0x14 & 1) != 0;\n        *0x626d6a = (uStack32 >> 0x17 & 1) != 0;\n        *0x626d60 = (uStack32 >> 0x19 & 1) != 0;\n        *0x626d68 = (uStack32 >> 0x1b & 1) != 0;\n        uVar2 = uVar2 & 0xffffffffffffff00 | *0x626d68;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar2;\n        arg2 = uVar3;\n        *0x626d67 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401b40(uVar2, arg2);\n        }\n        uVar2 = 0;\n        *0x626d62 = 0;\n        if (6 < uStack40) {\n            fcn.00401b20(0, arg2);\n            *0x626d64 = (uStack36 >> 3 & 1) != 0;\n            uVar2 = uVar2 & 0xffffffffffffff00 | (uStack36 >> 5 & 1) != 0;\n            arg2_00 = 0;\n            *0x626d63 = 0;\n            *0x626d65 = (uStack36 >> 8 & 1) != 0;\n            *0x626d66 = (uStack36 >> 9 & 1) != 0;\n            *0x626d61 = (uStack36 >> 0x13 & 1) != 0;\n            fcn.00401b20(uVar2, 0);\n            if (uStack40 < 0x80000001) {\n                return;\n            }\n            fcn.00401b20(uVar2, arg2_00);\n            *0x626d6b = (uStack28 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x626d62 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1506
    },
    "00402300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402300(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x004021eb;\n        }\n        if (0x3f < uVar5) {\n            if (*0x626d63 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x0040213d;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x0040212b;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x0040213d;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x0040213d;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x0040212b;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x0040213d;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x0040213d;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00402176;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00402176:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x004021eb:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x0040212b:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x0040213d:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7672
    },
    "004024a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004024a0(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    uint64_t in_RAX;\n    uint8_t uVar3;\n    uchar auVar4 [16];\n    uint8_t uVar6;\n    uchar auVar5 [32];\n    uchar auVar7 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (*0x626d6a != '\\x01') {\n        fcn.00402040(uStackX24);\n        return;\n    }\n    uVar3 = uStackX16;\n    if (uStackX16 < 0x10) {\n        if (uStackX16 == 0) {\n            return;\n        }\n        if ((*pauStackX8 + 0x10 & 0xff0) != 0) {\n            uVar6 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) & (1 << (uVar3 & 0x3f)) - 1U);\n            return;\n        }\n        puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n        auVar4 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                           CONCAT114(-(puVar2[0xe] == uStackX24), \n                                     CONCAT113(-(puVar2[0xd] == uStackX24), \n                                               CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                         CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                   CONCAT110(-(puVar2[10] == uStackX24), \n                                                                             CONCAT19(-(puVar2[9] == uStackX24), \n                                                                                      CONCAT18(-(puVar2[8] == uStackX24)\n                                                                                               , CONCAT17(-(puVar2[7] ==\n                                                                                                           uStackX24), \n                                                                                                          CONCAT16(-(\n                                                            puVar2[6] == uStackX24), \n                                                            CONCAT15(-(puVar2[5] == uStackX24), \n                                                                     CONCAT14(-(puVar2[4] == uStackX24), \n                                                                              CONCAT13(-(puVar2[3] == uStackX24), \n                                                                                       CONCAT12(-(puVar2[2] == uStackX24\n                                                                                                 ), CONCAT11(-(puVar2[1]\n                                                                                                              == \n                                                            uStackX24), -(*puVar2 == uStackX24))))))))))))))));\n        popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 | (SUB161(auVar4 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar4 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar4 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar4 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar4 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe |\n               (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) & (0xffff >> (0x10 - uVar3 & 0x3f)) << (0x10 - uVar3 & 0x3f));\n        return;\n    }\n    if ((uStackX16 < 0x21) || (*0x626d63 != '\\x01')) {\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 <= pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar3 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar3, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt(SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar3 >> 7) << 0xf);\n        }\n        if ((uStackX16 & 0xf) != 0) {\n            uVar3 = 0x10 - (uStackX16 & 0xf);\n            uVar6 = -((*pauVar1)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                        CONCAT19(-((*pauVar1)[9] ==\n                                                                                                  uStackX24), \n                                                                                                 CONCAT18(-((*pauVar1)\n                                                                                                            [8] == \n                                                            uStackX24), \n                                                            CONCAT17(-((*pauVar1)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                                       CONCAT14(-((*pauVar1)[4] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT13(-((*pauVar1)[3]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT12(-((*\n                                                            pauVar1)[2] == uStackX24), \n                                                            CONCAT11(-((*pauVar1)[1] == uStackX24), \n                                                                     -((*pauVar1)[0] == uStackX24))))))))))))))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) &\n                   (0xffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        }\n        return;\n    }\n    pauVar1 = pauStackX8[-1] + uStackX16;\n    auVar5 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n    do {\n        auVar7 = vmovdqu_avx(*pauStackX8);\n        auVar7 = vpcmpeqb_avx2(auVar7, auVar5);\n        popcnt(SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 | (SUB321(auVar7 >> 0x17, 0) & 1) << 2 |\n               (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar7 >> 0x27, 0) & 1) << 4 |\n               (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar7 >> 0x37, 0) & 1) << 6 |\n               (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar7 >> 0x47, 0) & 1) << 8 |\n               (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar7 >> 0x57, 0) & 1) << 10 |\n               (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc |\n               (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe |\n               SUB321(auVar7 >> 0x7f, 0) << 0xf | (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 |\n               (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 |\n               (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 |\n               (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 |\n               SUB321(auVar7 >> 0xbf, 0) << 0x17 | (SUB321(auVar7 >> 199, 0) & 1) << 0x18 |\n               (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a |\n               (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c |\n               (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar7 >> 0xff, 0) << 0x1f);\n        pauStackX8 = pauStackX8[1];\n    } while (pauStackX8 <= pauVar1);\n    if (pauStackX8 != pauVar1) {\n        auVar7 = vmovdqu_avx(*pauVar1);\n        auVar5 = vpcmpeqb_avx2(auVar7, auVar5);\n        vzeroupper_avx();\n        uVar3 = 0x20 - (uVar3 & 0x1f);\n        popcnt((SUB321(auVar5 >> 7, 0) & 1 | (SUB321(auVar5 >> 0xf, 0) & 1) << 1 | (SUB321(auVar5 >> 0x17, 0) & 1) << 2\n                | (SUB321(auVar5 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar5 >> 0x27, 0) & 1) << 4 |\n                (SUB321(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar5 >> 0x37, 0) & 1) << 6 |\n                (SUB321(auVar5 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar5 >> 0x47, 0) & 1) << 8 |\n                (SUB321(auVar5 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar5 >> 0x57, 0) & 1) << 10 |\n                (SUB321(auVar5 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar5 >> 0x67, 0) & 1) << 0xc |\n                (SUB321(auVar5 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar5 >> 0x77, 0) & 1) << 0xe |\n                SUB321(auVar5 >> 0x7f, 0) << 0xf | (SUB321(auVar5 >> 0x87, 0) & 1) << 0x10 |\n                (SUB321(auVar5 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar5 >> 0x97, 0) & 1) << 0x12 |\n                (SUB321(auVar5 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar5 >> 0xa7, 0) & 1) << 0x14 |\n                (SUB321(auVar5 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar5 >> 0xb7, 0) & 1) << 0x16 |\n                SUB321(auVar5 >> 0xbf, 0) << 0x17 | (SUB321(auVar5 >> 199, 0) & 1) << 0x18 |\n                (SUB321(auVar5 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar5 >> 0xd7, 0) & 1) << 0x1a |\n                (SUB321(auVar5 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar5 >> 0xe7, 0) & 1) << 0x1c |\n                (SUB321(auVar5 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar5 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar5 >> 0xff, 0) << 0x1f) & (0xffffffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        return;\n    }\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5195
    },
    "00402620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00402620(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x626d63 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4145
    },
    "00402ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402ac0(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x626d63 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402aa3;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402aa3:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "00402ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402ec0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return unaff_RBX;\n            }\n            iVar1 = *(*in_RAX + 8);\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x402f16;\n                    iVar1 = fcn.00403100(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x402f4a;\n                iVar1 = fcn.00403100(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402f77;\n            fcn.00457000();\n            *(*0x20 + -0x38) = 0x402f90;\n            fcn.0044ac00(0x18);\n            *(*0x20 + -0x38) = 0x402f95;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x38) = 0x402fa5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x402fb5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 587
    },
    "00402fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402fe0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                return unaff_RBX;\n            }\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x403032;\n                    iVar1 = fcn.00403100(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x403066;\n                iVar1 = fcn.00403100(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x403093;\n            fcn.00457000();\n            *(*0x20 + -0x38) = 0x4030ac;\n            fcn.0044ac00(0x18);\n            *(*0x20 + -0x38) = 0x4030b1;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x38) = 0x4030c5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4030d5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00403100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00403100(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 0x14) & 8) != 0) {\n        iVar1 = *in_RAX;\n        if (iVar1 == 4) {\n            uVar3 = fcn.0045e940();\n            return uVar3;\n        }\n        if (iVar1 == 8) {\n            uVar3 = fcn.0045e980();\n            return uVar3;\n        }\n        uVar3 = fcn.0045e900(iVar1);\n        return uVar3;\n    }\n    uVar5 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar5 < 0x11) {\n        if (0xe < uVar5) {\n            if (uVar5 == 0xf) {\n                uVar3 = fcn.00402e00();\n                return uVar3;\n            }\n            uVar3 = fcn.00402e60();\n            return uVar3;\n        }\n        if (uVar5 == 0xd) {\n            uVar3 = fcn.00402c00();\n            return uVar3;\n        }\n        if (uVar5 == 0xe) {\n            uVar3 = fcn.00402d00();\n            return uVar3;\n        }\n    }\n    else if (uVar5 < 0x15) {\n        if (uVar5 == 0x11) {\n            for (uVar6 = 0; uVar6 <= in_RAX[8] && in_RAX[8] != uVar6; uVar6 = uVar6 + 1) {\n                arg1 = fcn.00403100(arg1);\n            }\n            return arg1;\n        }\n        if (uVar5 == 0x14) {\n            if (in_RAX[8] == 0) {\n                uVar3 = fcn.00402fe0();\n                return uVar3;\n            }\n            uVar3 = fcn.00402ec0();\n            return uVar3;\n        }\n    }\n    else {\n        if (uVar5 == 0x18) {\n            uVar3 = fcn.0045e920();\n            return uVar3;\n        }\n        if (uVar5 == 0x19) {\n            iVar1 = in_RAX[8];\n            puVar7 = in_RAX[7];\n            if (iVar1 == 0) {\n                return arg1;\n            }\n            iVar4 = 0;\n            while( true ) {\n                cVar2 = fcn.00457c60(arg1, *puVar7, in_R8);\n                if (cVar2 == '\\0') {\n                    arg1 = fcn.00403100(arg1);\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar1 <= iVar4) break;\n                puVar7 = puVar7 + 3;\n            }\n            return arg1;\n        }\n    }\n    fcn.00457000();\n    uVar3 = 0x18;\n    fcn.0044ac00(0x18);\n    fcn.0040a4c0();\n    fcn.00433560();\n    return uVar3;\n}\n",
        "token_count": 836
    },
    "00403860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403860(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (((*0x626d60 != '\\0') && (*0x626d6d != '\\0')) && (*0x626d6e != '\\0')) {\n        *0x626610 = 1;\n        fcn.0042f660(0x80);\n        return;\n    }\n    fcn.0042f660(0x20);\n    *0x6268c0 = *0x6268c0 | 1;\n    *0x6268c8 = *0x6268c8 | 1;\n    *0x6268d0 = *0x6268d0 | 1;\n    *0x6268d8 = *0x6268d8 | 1;\n    return;\n}\n",
        "token_count": 231
    },
    "00403980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403980(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x626890 != '\\0') {\n        fcn.00403920();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 63
    },
    "004042a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004042a0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.004041c0();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.004041c0();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x626780;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045c6c0();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00404460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404460(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.004041c0();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004041c0();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.004045c0(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00404500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404500(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.004041c0();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.004041c0();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.004045c0(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00404c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404c80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x404d9d;\n                            arg1 = fcn.0040c220(1);\n                            if (*0x626890 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404dba;\n                                arg1 = fcn.0045eb40(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x404d13;\n                                arg1 = fcn.0040c220();\n                                if (*0x626890 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x404d34;\n                                    arg1 = fcn.0045eb60(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x404d4a;\n                                uVar5 = fcn.0040cc20();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x404d65;\n                                uVar5 = fcn.0040c220(1);\n                                if (*0x626890 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x404d87;\n                                    fcn.0045ea40(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x626890 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x404dde;\n                            arg1 = fcn.0045eb40();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x404e05;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x40) = 0x404e16;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x404e27;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x404e37;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "00404ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404ea0(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x404fa5;\n                fcn.00436620();\n                *(*0x20 + -0x88) = 0x404fb6;\n                fcn.00433ce0();\n                param_1 = puVar3;\ncode_r0x00404fb9:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x626890 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x405037;\n                            fcn.0045ebc0(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x405045;\n                            puVar3 = fcn.0045ebc0(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x626890 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x405009;\n                        fcn.0045eb60(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x405011;\n                        fcn.0045ebc0(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x40501a;\n                        puVar3 = fcn.0045eb60(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x405500;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x405445;\n                    fcn.00405540(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x4053c9;\n                    fcn.00411b00(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x4053fd;\n                    fcn.0040ad60();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x4050c5;\n                    fcn.0040ad60();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x4050db;\n                puVar3 = fcn.00436840();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x626890 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x40512d;\n                    fcn.0045eb60(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x405139;\n                    fcn.0045ebc0(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x405146;\n                    puVar3 = fcn.0045ebe0(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x626890 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x405175;\n                    puVar3 = fcn.0045ebe0(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x626890 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4051ae;\n                    fcn.0045ea40(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x4051bb;\n                    puVar3 = fcn.0045eb60(iVar4, 0, param_3, arg4);\n                }\n                if (*0x626890 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4051e9;\n                    puVar3 = fcn.0045eb60(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x626890 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x405285;\n                        fcn.0045eb60(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x40528e;\n                        fcn.0045ea40(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x405296;\n                        fcn.0045ea40(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x626890 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40523c;\n                    fcn.0045ebe0(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x405245;\n                    fcn.0045ea40(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x40524d;\n                    fcn.0045ea40(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x4052cc;\n                fcn.00436620();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x626890 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x40530f;\n                        iVar4 = fcn.0045eb40();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x626890 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x40533c;\n                        iVar4 = fcn.0045eb60(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x40535e;\n                        fcn.0042b180();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x626890 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x405387;\n                        fcn.0045eb60(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x40538c;\n                    fcn.00436b40();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x405473;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x88) = 0x405486;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x88) = 0x405497;\n                fcn.00433ce0();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x6266c8 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404f27;\n                    fcn.0045e8c0(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404f65;\n                fcn.0040ab40();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00404fb9;\n            }\n            *(*0x20 + -0x88) = 0x4054a5;\n            fcn.0040ad60();\n            unaff_RBX = 0x4ee900;\n            *(*0x20 + -0x88) = 0x4054b8;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4054d1;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3981
    },
    "00405540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405540(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00405680(arg1);\n        if (*0x626890 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.0045eb40(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x626890 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045eb40();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045e8c0(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00436760(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 382
    },
    "00405780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405780(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x4057c5;\n                fcn.0040ab40();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x405b49;\n                fcn.0040ad60();\n                *(*0x20 + -0x40) = 0x405b5c;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x40) = 0x405b6f;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x405b7a;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x004058cc:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x004058d9;\n    piVar2 = NULL;\n    goto code_r0x0040580d;\ncode_r0x004058d9:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x626890 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405945;\n            fcn.0045eba0(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x40594e;\n            fcn.0045eba0(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x626890 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405917;\n        fcn.0045ebe0(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x40591f;\n        fcn.0045eba0(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x405928;\n        fcn.0045ebe0(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x0040580d:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x18) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x40582e;\n                fcn.00411da0();\n                if (*0x626890 == 0) {\n                    *(*(*0x20 + -0x18) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x405856;\n                    fcn.0045eb60(*(*0x20 + -0x18), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x18);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x405872;\n                fcn.0045e8c0(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x18);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x626890 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x4058c7;\n                fcn.0045eb60(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x004058cc;\n        }\n        goto code_r0x00405a3f;\n    }\n    goto code_r0x004058cc;\ncode_r0x00405a3f:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x00405a4c;\n    piVar2 = NULL;\n    goto code_r0x004059ac;\ncode_r0x00405a4c:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x626890 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405ab4;\n            fcn.0045eb80(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x405abd;\n            fcn.0045eb80(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x626890 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405a8a;\n        fcn.0045ebe0(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x405a92;\n        fcn.0045eb80(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x405a9b;\n        fcn.0045ebe0(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x004059ac:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x405af9;\n            fcn.0040ad60();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x405b10;\n                fcn.00436760();\n            }\n            return;\n        }\n        if (*0x626890 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4059d3;\n            fcn.0045eb80(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0x40) = 0x4059e5;\n            fcn.0045e8c0(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x20);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x626890 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405a3a;\n            fcn.0045eb60(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x00405a3f;\n}\n",
        "token_count": 2648
    },
    "00405be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405be0(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x405d86;\n                fcn.00436620();\n                *(*0x20 + -0x90) = 0x405d97;\n                fcn.00433ce0();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x405c6e;\n                            fcn.00411da0();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x6266c8 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405cc5;\n                    fcn.0045e8c0(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x405cff;\n                fcn.0040ab40();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x405d1f;\n                    fcn.0040ad60();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x405d3d;\n                        fcn.00411da0();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x626890 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x405e17;\n                        fcn.0045ebc0(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x405e25;\n                        piVar3 = fcn.0045ebc0(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x626890 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x405de9;\n                    fcn.0045eb60(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x405df1;\n                    fcn.0045ebc0(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x405dfa;\n                    piVar3 = fcn.0045eb60(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x4062c0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x406253;\n                fcn.00406300(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x405ebc;\n                    fcn.00411b00(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x405ed2;\n                fcn.00411da0();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x405f05;\n                fcn.0040ad60();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x405f34;\n                fcn.0040ad60();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x405f52;\n            piVar4 = fcn.00436840();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x626890 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405f9d;\n                fcn.0045eb60(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x405fa8;\n                piVar4 = fcn.0045eb60(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x626890 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405fd0;\n                fcn.0045ea40(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x405fdb;\n                piVar4 = fcn.0045eb60(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x626890 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x406025;\n                fcn.0045eb60(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x406033;\n                piVar4 = fcn.0045ebc0(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x626890 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x406068;\n                piVar4 = fcn.0045ebc0(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x626890 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x406105;\n                    fcn.0045ebc0(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x40610e;\n                    fcn.0045ea40(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x406116;\n                    fcn.0045ea40(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x626890 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x4060bc;\n                fcn.0045ebc0(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x4060c5;\n                fcn.0045ea40(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x4060cd;\n                fcn.0045ea40(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x40614c;\n            fcn.00436620();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x626890 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x40618f;\n                    iVar8 = fcn.0045eb40(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x4061b4;\n                    fcn.0042b180();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x626890 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4061f0;\n                    fcn.0045eb60(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x4061fc;\n                    fcn.0045eb60(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x406205;\n                fcn.00436b40();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x40627b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x40628f;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3955
    },
    "00406300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406300(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00405700(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.00411b00(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.00411b00(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x626890 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.0045ebc0(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x626890 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045eb40();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045e8c0(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00436760(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 595
    },
    "00409360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00409360(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    ulong uStack168;\n    uchar auStack136 [128];\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.00447160(1);\n    iVar2 = fcn.00455f60(1);\n    if (0 < iVar2) {\n        puVar3 = fcn.0040cc20();\n        puVar3[1] = 1;\n        puVar3[2] = 1;\n        if (*0x626890 == 0) {\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0045eb40(uVar1);\n        }\n        puVar3[4] = 0;\n        puVar3[5] = 2;\n        if (*0x626890 == 0) {\n            puVar3[3] = puVar3 + 6;\n        }\n        else {\n            fcn.0045eb40();\n        }\n        fcn.0045f1b0();\n        fcn.0044bec0();\n        fcn.0045f51a();\n        fcn.0045f51a();\n        return uStack168;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004097e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004097e0(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x4099fc;\n                    fcn.004571e0();\n                    *(*0x20 + -0x48) = 0x409a05;\n                    uVar3 = fcn.00457940(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x409a1b;\n                    iVar4 = fcn.0040cc20();\n                    if (*0x626890 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409a85;\n                        fcn.0045eb40(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x409a93;\n                        iVar4 = fcn.0045eb40(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x626890 != 0) goto code_r0x00409a65;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409a65;\n                        fcn.00433560();\ncode_r0x00409a65:\n                        *(*0x20 + -0x48) = 0x409a73;\n                        fcn.0045eb40(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40984d;\n                iVar4 = fcn.00409ae0(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x409865;\n                    fcn.0040ab40();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40987b;\n                    iVar4 = fcn.00409ae0(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x4098c7;\n                        puVar2 = fcn.0040cf80(0x628320);\n                        if (*0x626890 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x4098f2;\n                            iVar4 = fcn.0045eb40();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x409905;\n                            puVar2 = fcn.0045eb80(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x409916;\n                        fcn.00409ce0();\n                        *(*0x20 + -0x48) = 0x409925;\n                        fcn.00409b40();\n                        *(*0x20 + -0x48) = 0x409933;\n                        fcn.0040ad60();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x409898;\n                        fcn.0040ad60();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x409965;\n                    uVar3 = fcn.00409ce0();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x40997b;\n                    iVar4 = fcn.0040cc20();\n                    if (*0x626890 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4099e5;\n                        fcn.0045eb40(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x4099f3;\n                        iVar4 = fcn.0045eb40(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x626890 != 0) goto code_r0x004099c5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x4099c5;\n                        fcn.00433560();\ncode_r0x004099c5:\n                        *(*0x20 + -0x48) = 0x4099d3;\n                        fcn.0045eb40(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x409aa6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x409aba;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1893
    },
    "00409b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409b40(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x5ca5a0;\n                puVar2 = *0x5ca5a0;\n                if ((*0x5ca5a0)[1] < (uVar1 >> 2) * 3) goto code_r0x00409c2a;\n                *(*0x20 + -0x30) = *0x5ca5a0;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x409bad;\n                piVar3 = fcn.0040c220(1, *0x5ca5a0, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x4611c0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409be5;\n                fcn.0040a820();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x626890 != '\\0') {\n                        *(*0x20 + -0x50) = 0x409c0f;\n                        fcn.00403920();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x00409c2a:\n                    *0x5ca5a0 = puVar2;\n                    *(*0x20 + -0x50) = 0x409c35;\n                    fcn.00409c80();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x409c50;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x50) = 0x409c65;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x409c70;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 758
    },
    "00409ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409ce0(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409d27;\n            iVar3 = fcn.004570a0();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x50) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x00409da0:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409de5;\n                        uVar4 = fcn.00457480();\n                        *(*0x20 + -0x58) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409e05;\n                        uVar4 = fcn.004571e0();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409e12;\n                        uVar4 = fcn.00457940(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x409e2c;\n                        uVar5 = fcn.00457b00(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x409e3f;\n                            uVar5 = fcn.00457940(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x40a051;\n                                fcn.0045eee0(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x409f34;\n                            uVar6 = fcn.004571e0();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x50);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x409f54;\n                            iVar7 = fcn.00457480();\n                            iVar8 = *(*0x20 + -0x58);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x409f6f;\n                                fcn.00457940(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x409f8d;\n                                    cVar2 = fcn.00402620(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x409fac;\n                                fcn.00457b00(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x409fc5;\n                                    fcn.004571e0();\n                                    *(*0x20 + -0xb0) = 0x409fca;\n                                    fcn.00457940(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x40a005;\n                                        cVar2 = fcn.00402620(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00409e65;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40a05c;\n                    fcn.0045eee0(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x40a066;\n                fcn.0045efe0(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x40a073;\n            in_RAX = fcn.0045efe0(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x40a07e;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00409e65:\n    *(*0x20 + -0xb0) = 0x409e7d;\n    arg4 = fcn.00457740();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x626890 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x409eb9;\n            fcn.0045ea40(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x00409da0;\n}\n",
        "token_count": 2326
    },
    "0040a180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a180(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    puVar1 = fcn.0040cc20();\n    if (*0x626890 != 0) goto code_r0x0040a1ea;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00433560();\ncode_r0x0040a1ea:\n        iVar2 = fcn.0045eb40(arg1);\n        fcn.0045eb60(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045eb40(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 290
    },
    "0040a260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a260(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    puVar1 = fcn.0040cc20();\n    if (*0x626890 != 0) goto code_r0x0040a2dc;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00433560();\ncode_r0x0040a2dc:\n        iVar2 = fcn.0045eb40(arg1);\n        fcn.0045eb60(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045eb40(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 342
    },
    "0040a4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040a4c0(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x6276a0;\n    }\n    else {\n        puVar1 = fcn.0040c220(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x626890 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045eb40(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 206
    },
    "0040a560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040a560(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x6276a0;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040c220();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x626890 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045eb60(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 263
    },
    "0040a6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a6e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX != 0) {\n        fcn.004097e0(0);\n        return;\n    }\n    iVar1 = fcn.0040cc20();\n    if (*0x626890 != 0) goto code_r0x0040a74d;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x18) = in_XMM15;\n        fcn.00433560();\ncode_r0x0040a74d:\n        iVar1 = fcn.0045eb40();\n    } while( true );\n}\n",
        "token_count": 235
    },
    "0040ab40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ab40(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40ab9b;\n                fcn.004304e0();\n                iVar4 = 0;\n                if (1 < *0x626654) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40ac56;\n                        fcn.0045e5e0();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4d2ae8;\n                        *(*0x20 + -0x48) = 0x40ac2f;\n                        fcn.0045c6c0();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40acd8;\n                                    fcn.0042ffc0();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40ad05;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40ad10;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1121
    },
    "0040ad60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ad60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040add6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40add6;\n            uVar5 = fcn.00430360();\ncode_r0x0040add6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40ae25;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40ae30;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 644
    },
    "0040ae40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ae40(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40ae8e;\n                uVar1 = fcn.00430360();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40aea9;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40aeb4;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 406
    },
    "0040aec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040aec0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40aefb;\n                fcn.004304e0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x5ca598 == 0) {\n                        *(*0x20 + -0x30) = 0x40af45;\n                        fcn.0042ffc0();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40af8c;\n                            fcn.0042ffc0(iVar1);\n                            *(*0x20 + -0x28) = **0x5ca598;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40afa8;\n                            fcn.0045e620();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40af68;\n                    fcn.00433ce0();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40afe5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40aff0;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 730
    },
    "0040b000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040b000(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x5ca598 == 0) {\n                fcn.0042ffc0();\n            }\n            else {\n                while (iVar4 = fcn.0042ffc0(),  iVar4 < 0) {\n                    fcn.0045e620();\n                }\n            }\n            goto code_r0x0040b230;\n        }\n        fcn.004607e0();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00433ce0();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042ffc0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x5ca598;\n        if (iVar2 != 0) {\n            fcn.0045e620();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.004607e0();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042ffc0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00433ce0();\n    }\n    fcn.00433ce0();\ncode_r0x0040b230:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 757
    },
    "0040b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b4e0(void)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x55f5e4 == 0x10) {\n                for (iVar1 = 0; iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    *(iVar1 * 0x18 + 0x629350) = *(iVar1 * 2 + 0x55f5e0);\n                }\n                if (*0x626798 != 0) {\n                    if (*0x626798 < 0x80001) {\n                        if (0xfff < *0x626798) {\n                            if ((*0x626798 & *0x626798 - 1) == 0) {\n                                if ((*0x626790 & *0x626790 - 1) == 0) {\n                                    if (0x400000 < *0x626790) {\n                                        *0x626790 = 0;\n                                    }\n                                    if (*0x626790 != 0) {\n                                        while (*0x626790 != (1 << (*0x626788 & 0x3f) & -(*0x626788 < 0x40))) {\n                                            *0x626788 = *0x626788 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40b5aa;\n                                    fcn.00424220();\n                                    *(*0x20 + -0x28) = 0x40b5af;\n                                    *0x626750 = fcn.004149a0();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40b5ce;\n                                        puVar2 = fcn.00417440();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x5f8c90;\n                                        *0x5f8c90 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40b64a;\n                                fcn.00435480();\n                                *(*0x20 + -0x28) = 0x40b65b;\n                                fcn.00435d80();\n                                *(*0x20 + -0x28) = 0x40b667;\n                                fcn.00435a80();\n                                *(*0x20 + -0x28) = 0x40b678;\n                                fcn.00435d80();\n                                *(*0x20 + -0x28) = 0x40b67d;\n                                fcn.00435500();\n                                *(*0x20 + -0x28) = 0x40b68e;\n                                fcn.00433ce0();\n                            }\n                            *(*0x20 + -0x28) = 0x40b693;\n                            fcn.00435480();\n                            *(*0x20 + -0x28) = 0x40b6a5;\n                            fcn.00435d80();\n                            *(*0x20 + -0x28) = 0x40b6b1;\n                            fcn.00435a80();\n                            *(*0x20 + -0x28) = 0x40b6c5;\n                            fcn.00435d80();\n                            *(*0x20 + -0x28) = 0x40b6ca;\n                            fcn.00435500();\n                            *(*0x20 + -0x28) = 0x40b6db;\n                            fcn.00433ce0();\n                        }\n                        *(*0x20 + -0x28) = 0x40b6e5;\n                        fcn.00435480();\n                        *(*0x20 + -0x28) = 0x40b6f6;\n                        fcn.00435d80();\n                        *(*0x20 + -0x28) = 0x40b705;\n                        fcn.00435a80();\n                        *(*0x20 + -0x28) = 0x40b716;\n                        fcn.00435d80();\n                        *(*0x20 + -0x28) = 0x40b725;\n                        fcn.00435b80();\n                        *(*0x20 + -0x28) = 0x40b736;\n                        fcn.00435d80();\n                        *(*0x20 + -0x28) = 0x40b73b;\n                        fcn.00435500();\n                        *(*0x20 + -0x28) = 0x40b74c;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x28) = 0x40b751;\n                    fcn.00435480();\n                    *(*0x20 + -0x28) = 0x40b765;\n                    fcn.00435d80();\n                    *(*0x20 + -0x28) = 0x40b771;\n                    fcn.00435a80();\n                    *(*0x20 + -0x28) = 0x40b785;\n                    fcn.00435d80();\n                    *(*0x20 + -0x28) = 0x40b78f;\n                    fcn.00435b80();\n                    *(*0x20 + -0x28) = 0x40b7a5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x28) = 0x40b7aa;\n                    fcn.00435500();\n                    *(*0x20 + -0x28) = 0x40b7bb;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x28) = 0x40b7cc;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x28) = 0x40b7dd;\n            fcn.00433ce0();\n        }\n        *(puVar3 + -8) = 0x40b7e5;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "0040c220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040c220(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uchar uVar13;\n    ulong uVar14;\n    int64_t unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint8_t uVar19;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar20;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x62664c != 2) {\n                if (in_RAX == 0) {\n                    return 0x626818;\n                }\n                if (*0x626ae0 != '\\0') {\n                    if (*0x626aec != 0) {\n                        *(*0x20 + -0x78) = 0x40c2b9;\n                        iVar11 = fcn.0040cf80(0x628320);\n                        return iVar11;\n                    }\n                    if ((*0x6268e0 != '\\0') && (*(unaff_R14 + 0x98) == *0x6268e8)) {\n                        *0x6268f0 = *0x6268f0 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x626644 == 0) {\n                    uVar18 = 0;\n                }\n                else {\n                    uVar18 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (uVar18 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        uVar18 = *(*0x20 + -0x18);\n                    }\n                    iVar11 = *(uVar18 + 0x180) - in_RAX;\n                    *(uVar18 + 0x180) = iVar11;\n                    if (iVar11 < 0) {\n                        *(*0x20 + -0x10) = uVar18;\n                        *(*0x20 + -0x78) = 0x40c33f;\n                        fcn.0041b5a0();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        uVar18 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar11 = *(unaff_R14 + 0x30);\n                if (*(iVar11 + 0xc0) == 0) {\n                    if (*(iVar11 + 0x50) != unaff_R14) {\n                        *(iVar11 + 0xc0) = 1;\n                        iVar16 = *0x626750;\n                        if (*(iVar11 + 0xa0) != 0) {\n                            iVar16 = *(*(iVar11 + 0xa0) + 0x40);\n                        }\n                        if (iVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                uVar20 = true;\n                            }\n                            else {\n                                uVar20 = *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar11;\n                            *(*0x20 + -0x38) = iVar16;\n                            *(*0x20 + -0x4a) = uVar20;\n                            *(*0x20 + -0x18) = uVar18;\n                            if (in_RAX < 0x8001) {\n                                if ((uVar20 != false) && (in_RAX < 0x10)) {\n                                    uVar17 = *(iVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar17 = uVar17 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar17 = uVar17 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar17 = uVar17 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar17 < 0x11) && (iVar7 = *(iVar16 + 0x10),  iVar7 != 0)) {\n                                        *(iVar16 + 0x18) = in_RAX + uVar17;\n                                        *(iVar16 + 0x20) = *(iVar16 + 0x20) + 1;\n                                        *(iVar11 + 0xc0) = 0;\n                                        iVar6 = *(iVar11 + 0xd8);\n                                        *(iVar11 + 0xd8) = iVar6 + -1;\n                                        if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar7 + uVar17;\n                                    }\n                                    uVar17 = *(iVar16 + 0x50);\n                                    uVar8 = *(uVar17 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar8 != 0) {\n                                        for (; (uVar8 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar8 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar17 + 0x30) + iVar11;\n                                        if (*(uVar17 + 0x38) <= uVar4) goto code_r0x0040c532;\n                                        uVar1 = *(uVar17 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            uVar18 = iVar11 + 1;\n                                            *(uVar17 + 0x40) = uVar8 >> (uVar18 & 0x3f) & -(uVar18 < 0x40);\n                                            *(uVar17 + 0x30) = uVar1;\n                                            *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                            pauVar12 = *(uVar17 + 0x68) * uVar4 + *(uVar17 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040c532:\n                                        pauVar12 = NULL;\n                                    }\n                                    uVar13 = uVar18;\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x78) = 0x40c54f;\n                                        pauVar12 = fcn.0040c000();\n                                        iVar16 = *(*0x20 + -0x38);\n                                        uVar20 = *(*0x20 + -0x4a);\n                                        uVar17 = 5;\n                                        in_RAX = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(iVar16 + 0x18) && *(iVar16 + 0x18) != in_RAX) ||\n                                       (*(iVar16 + 0x10) == 0)) {\n                                        *(iVar16 + 0x10) = pauVar12;\n                                        *(iVar16 + 0x18) = in_RAX;\n                                    }\n                                    uVar14 = 0x10;\ncode_r0x0040c7ab:\n                                    uVar19 = 0;\n                                    goto code_r0x0040c85e;\n                                }\n                                if (0x3f8 < in_RAX) {\n                                    uVar18 = in_RAX - 0x381 >> 7;\n                                    if (uVar18 < 0xf9) {\n                                        uVar19 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                 [uVar18];\n                                        goto code_r0x0040c600;\n                                    }\n                                    goto code_r0x0040cac7;\n                                }\n                                uVar18 = in_RAX + 7 >> 3;\n                                if (uVar18 < 0x81) {\n                                    uVar19 = *(uVar18 + 0x55f4a0);\ncode_r0x0040c600:\n                                    if (uVar19 < 0x44) {\n                                        uVar5 = *(uVar19 * 2 + 0x55f5e0);\n                                        uVar18 = uVar19 << 1 & 0xff | uVar20;\n                                        if (uVar18 < 0x88) {\n                                            uVar17 = *(iVar16 + 0x28 + uVar18 * 8);\n                                            uVar18 = *(uVar17 + 0x40);\n                                            iVar11 = 0;\n                                            if (uVar18 != 0) {\n                                                for (; (uVar18 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                                }\n                                            }\n                                            if (uVar18 == 0) {\n                                                iVar11 = 0x40;\n                                            }\n                                            if (iVar11 < 0x40) {\n                                                uVar8 = *(uVar17 + 0x30) + iVar11;\n                                                if (*(uVar17 + 0x38) <= uVar8) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    goto code_r0x0040c6e5;\n                                                }\n                                                uVar4 = *(uVar17 + 0x30) + iVar11 + 1;\n                                                if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    pauVar12 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar17 + 0x40) =\n                                                         uVar18 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                                    *(uVar17 + 0x30) = uVar4;\n                                                    *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                                    pauVar12 = *(uVar17 + 0x68) * uVar8 + *(uVar17 + 0x18);\n                                                    param_1 = *(*0x20 + 0x18);\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040c6e5:\n                                                pauVar12 = NULL;\n                                            }\n                                            *(*0x20 + -0x30) = uVar5;\n                                            if (pauVar12 == NULL) {\n                                                uVar17 = uVar19 << 1 | uVar20;\n                                                *(*0x20 + -0x78) = 0x40c705;\n                                                pauVar12 = fcn.0040c000(param_1, 0, iVar16);\n                                                iVar16 = *(*0x20 + -0x38);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = param_1;\n                                                in_RAX = *(*0x20 + 8);\n                                                param_1 = *(*0x20 + 0x18);\n                                            }\n                                            else {\n                                                uVar13 = 0;\n                                            }\n                                            if ((param_1 != '\\0') && (*(uVar17 + 100) != '\\0')) {\n                                                *(*0x20 + -0x20) = pauVar12;\n                                                *(*0x20 + -0x4b) = uVar13;\n                                                *(*0x20 + -0x48) = uVar17;\n                                                *(*0x20 + -0x78) = 0x40c766;\n                                                fcn.0045f580(param_1, pauVar12, iVar16);\n                                                in_RAX = *(*0x20 + 8);\n                                                pauVar12 = *(*0x20 + -0x20);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = *(*0x20 + -0x4b);\n                                                uVar17 = *(*0x20 + -0x48);\n                                            }\n                                            uVar14 = *(*0x20 + -0x30);\n                                            goto code_r0x0040c7ab;\n                                        }\n                                        goto code_r0x0040caad;\n                                    }\n                                    goto code_r0x0040caba;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x40c7c5;\n                                uVar17 = fcn.00414e60();\n                                *(uVar17 + 0x30) = 1;\n                                *(uVar17 + 0x60) = 1;\n                                uVar14 = *(uVar17 + 0x68);\n                                pauVar12 = *(uVar17 + 0x18);\n                                if ((*(*0x20 + 0x18) == '\\0') || (*(uVar17 + 100) == '\\0')) {\n                                    uVar19 = 0;\n                                    uVar20 = *(*0x20 + -0x4a);\n                                }\n                                else {\n                                    uVar19 = *(*0x20 + -0x4a);\n                                    uVar20 = uVar19;\n                                    if (uVar19 == 0) {\n                                        *(*0x20 + -0x48) = uVar17;\n                                        *(*0x20 + -0x30) = uVar14;\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x78) = 0x40c80f;\n                                        fcn.0045f580();\n                                        uVar17 = *(*0x20 + -0x48);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        uVar14 = *(*0x20 + -0x30);\n                                        uVar19 = *(*0x20 + -0x4a);\n                                        uVar20 = uVar19;\n                                    }\n                                }\n                                uVar13 = 1;\n                                in_RAX = *(*0x20 + 8);\ncode_r0x0040c85e:\n                                *(*0x20 + -0x20) = pauVar12;\n                                *(*0x20 + -0x30) = uVar14;\n                                *(*0x20 + -0x4b) = uVar13;\n                                *(*0x20 + -0x49) = uVar19;\n                                *(*0x20 + -0x48) = uVar17;\n                                if (uVar20 == 0) {\n                                    *(*0x20 + -0x78) = 0x40c893;\n                                    fcn.00413140(in_RAX);\n                                    puVar9 = *(*0x20 + 0x10);\n                                    if (*puVar9 < *(*0x20 + 8)) {\n                                        uVar18 = 0;\n                                        if (puVar9[1] != 0) {\n                                            uVar18 = (*(*0x20 + 8) - *puVar9) + puVar9[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar18 = puVar9[1];\n                                    }\n                                    *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar18;\n                                }\n                                else {\n                                    uVar18 = 0;\n                                }\n                                *(*0x20 + -0x40) = uVar18;\n                                *(*0x20 + -0x78) = 0x40c8e5;\n                                fcn.0045e600();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                                if (*0x62664c != 0) {\n                                    *(*0x20 + -0x78) = 0x40c91b;\n                                    fcn.0041de40(*(*0x20 + -0x30));\n                                }\n                                if (*0x626698 < 1) {\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    if (*0x626698 == 1) {\n                                        uVar18 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        uVar17 = **(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x30);\n                                        if (uVar18 < uVar17) {\n                                            **(*0x20 + -0x38) = uVar17 - uVar18;\n                                            goto code_r0x0040c967;\n                                        }\n                                    }\n                                    *(*0x20 + -0x78) = 0x40c95b;\n                                    fcn.0040cd40(uVar18);\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\ncode_r0x0040c967:\n                                iVar11 = *(*0x20 + -0x28);\n                                *(iVar11 + 0xc0) = 0;\n                                iVar6 = *(iVar11 + 0xd8);\n                                *(iVar11 + 0xd8) = iVar6 + -1;\n                                if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x49) == '\\0') {\ncode_r0x0040c9ca:\n                                    if (*0x626ae0 != '\\0') {\n                                        if (*0x626ae4 != 0) {\n                                            *(*0x20 + -0x78) = 0x40c9f1;\n                                            fcn.0042b460(*(*0x20 + 0x10));\n                                            uVar18 = *(*0x20 + -0x30);\n                                        }\n                                        if ((*0x6268e0 != '\\0') && (*(unaff_R14 + 0x98) == *0x6268e8)) {\n                                            *0x6268f8 = *0x6268f8 + uVar18;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x18) != 0) {\n                                        piVar3 = *(*0x20 + -0x18) + 0x180;\n                                        *piVar3 = *piVar3 - (uVar18 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x4b) != '\\0') {\n                                        if (((*0x629348 == '\\0') || (*0x626668 != 0)) || (*0x62664c != 0)) {\n                                            bVar10 = false;\n                                        }\n                                        else {\n                                            bVar10 = *0x626ef8 <= *0x626f58;\n                                        }\n                                        if (bVar10) {\n                                            *(*0x20 + -0x78) = 0x40ca7c;\n                                            fcn.00417900(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x20);\n                                }\n                                if (*(*0x20 + -0x4a) != '\\0') {\n                                    *(*0x20 + -0x78) = 0x40c9c5;\n                                    fcn.0040cb60();\n                                    uVar18 = *(*0x20 + -0x30);\n                                    goto code_r0x0040c9ca;\n                                }\n                                *(*0x20 + -0x78) = 0x40caad;\n                                fcn.00433ce0();\ncode_r0x0040caad:\n                                *(*0x20 + -0x78) = 0x40caba;\n                                fcn.0045eee0(0x88);\ncode_r0x0040caba:\n                                *(*0x20 + -0x78) = 0x40cac7;\n                                fcn.0045eee0(0x44);\ncode_r0x0040cac7:\n                                *(*0x20 + -0x78) = 0x40cad4;\n                                fcn.0045ef00(0xf9);\n                            }\n                            param_1 = 0x81;\n                            *(*0x20 + -0x78) = 0x40cae5;\n                            fcn.0045ef00(0x81);\n                        }\n                        *(*0x20 + -0x78) = 0x40caf6;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x78) = 0x40cb07;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x78) = 0x40cb18;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x78) = 0x40cb29;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        puVar15[0x18] = param_1;\n        *(puVar15 + -8) = 0x40cb3d;\n        fcn.0045c800();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        param_1 = puVar15[0x18];\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 5224
    },
    "0040cb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cb60(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045c640();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045f580(uVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040cc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cc80(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40ccef;\n                fcn.0040c220(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40ccd2;\n                fcn.0040c220(1);\n                return;\n            }\n            unaff_RBX = 0x4ee930;\n            *(*0x20 + -0x28) = 0x40cd0c;\n            in_RAX = fcn.00433560(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40cd1c;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "0040cd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cd40(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x626750;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x626698 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40cd9e;\n                    iVar1 = fcn.0040ce20();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40cdc5;\n                fcn.0042aec0(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40cde5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40cdfa;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 597
    },
    "0040d0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d0a0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040d0f3:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40d1cd;\n                        iVar5 = fcn.00415d00();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40d14c;\n                        fcn.0040ab40();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x6268a8;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40d1aa;\n                        puVar8 = fcn.00415d00();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x6268a8) goto code_r0x0040d2f1;\n                            do {\n                                *(*0x20 + -0x48) = 0x40d2ef;\n                                fcn.00433ce0();\ncode_r0x0040d2f1:\n                                *(*0x20 + -0x48) = 0x40d2fd;\n                                fcn.0040ad60();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x626780;\n                            **ppuVar7 = *0x626780;\n                            LOCK();\n                            bVar9 = uVar4 == *0x626780;\n                            *0x626780 = *0x626780 ^ bVar9 * (*0x626780 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x6268a8) {\n                        *(*0x20 + -0x48) = 0x40d237;\n                        fcn.0040ad60();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x628320) {\n                        *(*0x20 + -0x48) = 0x40d25d;\n                        fcn.0042cce0();\n                        *(*0x20 + -0x48) = 0x40d271;\n                        fcn.0042cce0();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040d0f3;\n                    *(*0x20 + -0x48) = 0x40d310;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x48) = 0x40d325;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40d336;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40d34b;\n        fcn.00460f20();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1626
    },
    "0040d360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040d360(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x626798 & (uVar2 + *0x626798) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00416400(unaff_RDI);\n                fcn.00415f60();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "0040d460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d460(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *arg3;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uint8_t uVar9;\n    int64_t *in_R8;\n    uint64_t in_R9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar6 = *(in_RAX + 0x28);\n    iVar4 = in_RAX;\n    uVar7 = arg1;\n    if ((iVar6 == 0) || (arg3 = *(iVar6 + 0x10),  in_R8 = arg3,  arg3 == NULL)) {\n        arg3 = fcn.0040c220(1);\n    }\n    else {\n        in_R9 = *(unaff_RBX + 0x52);\n        piVar8 = arg3 + (in_R9 - 8);\n        if (*piVar8 == 0) {\n            in_R8 = arg3 + in_R9;\n            if (*0x626890 == 0) {\n                *(iVar6 + 0x10) = in_R8;\n            }\n            else {\n                iVar4 = fcn.0045ebc0(arg1, iVar6, in_R8, in_R9);\n            }\n        }\n        else {\n            if (*0x626890 == 0) {\n                *piVar8 = 0;\n            }\n            else {\n                piVar8 = arg3;\n                iVar4 = fcn.0045eb60(arg1, 0, arg3, in_R9);\n                in_R8 = arg3;\n                arg3 = piVar8;\n            }\n            if (*0x626890 == 0) {\n                *(*(iVar4 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar4 = fcn.0045eb60(uVar7, 0, in_R8, in_R9);\n            }\n        }\n    }\n    uVar9 = *(iVar4 + 9);\n    if (uVar9 < 0x10) {\n        *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        uVar10 = uVar7;\n    }\n    else {\n        uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n        uVar1 = uVar9 - 0xf;\n        uVar10 = uVar1;\n        uVar9 = uVar1;\n        uVar1 = -(uVar9 < 0x20);\n        in_R9 = uVar1;\n        uVar1 = (1 << (uVar9 & 0x1f) & uVar1) - 1;\n        in_R8 = uVar1;\n        if ((uVar1 & (SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0))) == 0) {\n            *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        }\n    }\n    iVar6 = *(unaff_RBX + 0x40);\n    if (*(iVar6 + 8) == 0) {\n        if (*(iVar4 + 0x28) == 0) {\n            uVar5 = fcn.0040cc20();\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                iVar4 = in_RAX;\n                fcn.0045ea40(uVar10, in_RAX, in_R8, in_R9);\n                uVar7 = arg1;\n            }\n        }\n        piVar8 = *(iVar4 + 0x28);\n        if (*piVar8 == 0) {\n            uVar5 = fcn.0040cc20();\n            if (*0x626890 == 0) {\n                **(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                fcn.0045ea40(in_RAX, piVar8, in_R8, in_R9);\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n        }\n        in_R8 = **(iVar4 + 0x28);\n        iVar4 = in_R8[1];\n        iVar2 = *in_R8;\n        in_R9 = in_R8[2];\n        iVar6 = iVar2;\n        if (in_R9 < iVar4 + 1U) {\n            arg2 = iVar2;\n            piVar8 = in_R8;\n            iVar6 = fcn.00447240(iVar4);\n            in_R8[2] = iVar4;\n            if (*0x626890 == 0) {\n                *in_R8 = iVar6;\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n            else {\n                iVar6 = fcn.0045ea40(iVar4, arg2, piVar8, in_R9);\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n        }\n        in_R8[1] = iVar4 + 1;\n        if (*0x626890 == 0) {\n            *(iVar6 + iVar4 * 8) = arg3;\n        }\n        else {\n            uVar7 = fcn.0045eb40();\n        }\n    }\n    if (*0x626890 == 0) {\n        *(uVar7 + *(unaff_RBX + 0x52) + -8) = arg3;\n    }\n    else {\n        fcn.0045ea40(*(unaff_RBX + 0x52), iVar6, in_R8, in_R9);\n    }\n    return arg3;\n}\n",
        "token_count": 1481
    },
    "0040d7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d7e0(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040cc20();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        arg2 = arg1;\n        uVar5 = fcn.0040d980(0);\n        if (*0x626890 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.0045ea40(arg1, arg2, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040cc20();\n            if (*0x626890 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045ea40(arg1, arg2, in_R8, in_R9);\n                fcn.0045eb60(arg1, uVar4, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 774
    },
    "0040d980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d980(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040dab2;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x55f5e0);\n                            goto code_r0x0040da80;\n                        }\n                        goto code_r0x0040db6c;\n                    }\n                    goto code_r0x0040db79;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x55f4a0);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x55f5e0);\n                        goto code_r0x0040da80;\n                    }\n                    goto code_r0x0040db86;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040da80:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040dab2;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040dab2:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40db0e;\n                        iVar3 = fcn.0040cc80(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40daf5;\n                            fcn.0045f580();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40dae8;\n                            fcn.00411e00();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x626890 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40db56;\n                            fcn.0045ea40(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40db6c;\n                fcn.00432260();\ncode_r0x0040db6c:\n                *(*0x20 + -0x40) = 0x40db79;\n                fcn.0045eee0(0x44);\ncode_r0x0040db79:\n                *(*0x20 + -0x40) = 0x40db86;\n                fcn.0045ef00(0xf9);\ncode_r0x0040db86:\n                *(*0x20 + -0x40) = 0x40db93;\n                fcn.0045eee0(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40dba5;\n            in_RAX = fcn.0045ef00(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40dbb9;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1586
    },
    "0040e020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040e020(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040e020:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40e07e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40e0b5;\n                    iVar5 = fcn.0040c220();\n                    if (*0x626890 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40e0dd;\n                        fcn.0045ea40(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40e13b;\n                        fcn.0040eec0(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40e2e2;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40e345;\n                                        fcn.00411b00(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040e4a1;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040e188;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040e188:\n                    if (piVar9[3] != 0) goto code_r0x0040e377;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040e377;\n                    }\n                    *(*0x20 + -0x80) = 0x40e0f4;\n                    fcn.0040ece0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040e4e5;\n        }\n        goto code_r0x0040e4f6;\n    }\n    goto code_r0x0040e50a;\ncode_r0x0040e377:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40e38a;\n        arg2 = fcn.0040d460(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40e3e5;\n        in_R8 = fcn.0040c220();\n        if (*0x626890 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40e3ff;\n            in_R8 = fcn.0045ea40(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40e445;\n        uVar10 = fcn.0040c220();\n        if (*0x626890 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40e45f;\n            fcn.0045ea40(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40e47d;\n    fcn.00411b00(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040e4a1:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40e4e5;\n    fcn.00433ce0();\ncode_r0x0040e4e5:\n    *(*0x20 + -0x80) = 0x40e4f6;\n    fcn.00433ce0();\ncode_r0x0040e4f6:\n    unaff_RBX = 0x4ee940;\n    *(*0x20 + -0x80) = 0x40e509;\n    in_RAX = fcn.00433560();\ncode_r0x0040e50a:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40e51e;\n    fcn.0045c800();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040e020;\n}\n",
        "token_count": 3003
    },
    "0040ece0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ece0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40ed59;\n            iVar1 = fcn.0040d980(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x626890 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40edaa;\n                fcn.0045eb40();\n                *(*0x20 + -0x40) = 0x40edb3;\n                fcn.0045ea40(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040ee14;\n            if (arg1_00[1] == 0) {\n                if (*0x626890 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40edf5;\n                    fcn.0045eba0(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x626890 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40ee14;\n                    fcn.0045eb40();\n                }\ncode_r0x0040ee14:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40ee33;\n                        iVar1 = fcn.0040cc20();\n                        if (*0x626890 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40ee55;\n                            fcn.0045ea40(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x626890 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40ee7b;\n                        fcn.0045eb80(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40ee96;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40eea6;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1353
    },
    "0040eec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040eec0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040ef60((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040ef60(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040f940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f940(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040f940:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40f994;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40f9c5;\n                    iVar5 = fcn.0040c220();\n                    if (*0x626890 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40f9e7;\n                        fcn.0045ea40(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40fa39;\n                        fcn.0040fc40(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040fa6b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040fbba;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040fa6b:\n                    if (piVar9[3] != 0) goto code_r0x0040fb62;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040fb62;\n                    }\n                    *(*0x20 + -0x38) = 0x40f9fb;\n                    fcn.0040ece0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040fbf4;\n        }\n        goto code_r0x0040fc05;\n    }\n    goto code_r0x0040fc19;\ncode_r0x0040fb62:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40fb75;\n        iVar6 = fcn.0040d460(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = uVar4 & 7;\n    *(arg1_01 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\ncode_r0x0040fbba:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40fbf4;\n    fcn.00433ce0();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040fbf4:\n    *(*0x20 + -0x38) = 0x40fc05;\n    fcn.00433ce0();\ncode_r0x0040fc05:\n    unaff_RBX = 0x4ee940;\n    *(*0x20 + -0x38) = 0x40fc18;\n    in_RAX = fcn.00433560();\ncode_r0x0040fc19:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40fc2c;\n    fcn.0045c800();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040f940;\n}\n",
        "token_count": 2015
    },
    "0040fc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fc40(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040fce0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040fce0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00410240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410240(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t arg1_02;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x00410240:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x410294;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar8 = *(*0x20 + 0x10);\n                *(piVar8 + 1) = *(piVar8 + 1) ^ 4;\n                if (piVar8[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x4102c5;\n                    iVar5 = fcn.0040c220();\n                    if (*0x626890 == 0) {\n                        piVar8 = *(*0x20 + 0x10);\n                        piVar8[2] = iVar5;\n                    }\n                    else {\n                        piVar8 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x4102e7;\n                        fcn.0045ea40(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_01 = (1 << (*(piVar8 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar8[3] != 0) {\n                        *(*0x20 + -0x10) = arg1_01;\n                        *(*0x20 + -0x38) = 0x410339;\n                        fcn.00410560(arg1_01);\n                        uVar4 = *(*0x20 + -0x18);\n                        arg1_01 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar8 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = arg1_01 * *(iVar5 + 0x52) + piVar8[2];\n                    do {\n                        arg1_02 = iVar2;\n                        for (arg1 = 0; arg1 < 8; arg1 = arg1 + 1) {\n                            if (*(arg1_02 + arg1) < 2) {\n                                uVar4 = arg1;\n                                iVar2 = arg1_02;\n                                if (iVar6 != 0) {\n                                    uVar4 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar4;\n                                if (*(arg1_02 + arg1) == 0) goto code_r0x0041036b;\n                            }\n                            else {\n                                in_R9 = arg1;\n                                if (*(*0x20 + 0x18) == *(arg1_02 + arg1 * 8 + 8)) goto code_r0x004104d1;\n                            }\n                        }\n                        iVar2 = *(arg1_02 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0041036b:\n                    if (piVar8[3] != 0) goto code_r0x00410468;\n                    uVar7 = *(piVar8 + 9);\n                    if ((*piVar8 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar8 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar8 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x00410468;\n                    }\n                    *(*0x20 + -0x38) = 0x4102fb;\n                    fcn.0040ece0();\n                    piVar8 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0041050b;\n        }\n        goto code_r0x0041051c;\n    }\n    goto code_r0x00410530;\ncode_r0x00410468:\n    arg1 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x41047b;\n        iVar6 = fcn.0040d460(arg1_02);\n        iVar5 = *(*0x20 + 8);\n        piVar8 = *(*0x20 + 0x10);\n        arg1 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_02 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = arg1 & 7;\n    *(arg1_02 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    if (*0x626890 == 0) {\n        *(arg1_02 + arg1 * 8 + 8) = in_R8;\n    }\n    else {\n        *(*0x20 + -0x38) = 0x4104ce;\n        fcn.0045ebc0(arg1, iVar5, in_R8, in_R9);\n    }\n    *piVar8 = *piVar8 + 1;\ncode_r0x004104d1:\n    arg1 = arg1 * *(iVar5 + 0x51);\n    if ((*(piVar8 + 1) & 4) != 0) {\n        *(piVar8 + 1) = *(piVar8 + 1) & 0xfb;\n        return arg1 + arg1_02 + 0x48;\n    }\n    *(*0x20 + -0x38) = 0x41050b;\n    fcn.00433ce0();\ncode_r0x0041050b:\n    *(*0x20 + -0x38) = 0x41051c;\n    fcn.00433ce0();\ncode_r0x0041051c:\n    unaff_RBX = 0x4ee940;\n    *(*0x20 + -0x38) = 0x41052f;\n    in_RAX = fcn.00433560();\ncode_r0x00410530:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + -8) = 0x410545;\n    fcn.0045c800();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    *0x20 = puVar9;\n    goto code_r0x00410240;\n}\n",
        "token_count": 2016
    },
    "00410560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410560(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.00410600((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.00410600(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00411240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00411240(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x00411240:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x411299;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x4112ca;\n                    iVar6 = fcn.0040c220();\n                    if (*0x626890 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x4112ec;\n                        fcn.0045ea40(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x411345;\n                        fcn.00411640(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x4114b3;\n                                        uVar4 = fcn.00402620(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x626890 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x411512;\n                                            fcn.0045eb40();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x0041158e;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x00411388;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x00411388:\n                    if (piVar10[3] != 0) goto code_r0x00411517;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x00411517;\n                    }\n                    *(*0x20 + -0x68) = 0x411305;\n                    fcn.0040ece0();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x004115cb;\n        }\n        goto code_r0x004115dc;\n    }\n    goto code_r0x004115f0;\ncode_r0x00411517:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x41152a;\n        unaff_RDI = fcn.0040d460(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x626890 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x411585;\n        fcn.0045ebe0(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x0041158e:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x4115cb;\n    fcn.00433ce0();\ncode_r0x004115cb:\n    *(*0x20 + -0x68) = 0x4115dc;\n    fcn.00433ce0();\ncode_r0x004115dc:\n    unaff_RBX = 0x4ee940;\n    *(*0x20 + -0x68) = 0x4115ef;\n    in_RAX = fcn.00433560();\ncode_r0x004115f0:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x411609;\n    fcn.0045c800();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x00411240;\n}\n",
        "token_count": 2657
    },
    "00411640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411640(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.004116e0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.004116e0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00411b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411b00(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x626894 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00412580(in_RAX[1]);\n        }\n        fcn.0045f840(*in_RAX);\n        if (*0x626895 != '\\0') {\n            fcn.00404460(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00411ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411ba0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x626894 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00412580(unaff_RDI);\n    }\n    fcn.0045f840(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.00432200();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x626890 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045eb80(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045eee0(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 429
    },
    "00411cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00411cc0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x626895 != '\\0') {\n        fcn.00404500(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x626894 != '\\0') {\n            fcn.00412580((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045f840(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 223
    },
    "00411da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411da0(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x626894 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00412580(in_RAX[1]);\n    }\n    fcn.0045f580(*in_RAX);\n    return;\n}\n",
        "token_count": 76
    },
    "00411fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411fc0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435500();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        else {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435500();\n    }\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    if (arg1 != 0) goto code_r0x00412110;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00433ce0();\ncode_r0x00412110:\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435500();\n        fcn.0041da00(arg1);\n    } while( true );\n}\n",
        "token_count": 444
    },
    "00412200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00412200(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x626ac0 != 0) {\n                fcn.00411fc0(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x626ac0 != 0)) {\n        fcn.00411fc0(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 465
    },
    "00412c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412c00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x00412c89;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x00412c89:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cfe0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cfe0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 673
    },
    "00412da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412da0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x626894 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1260);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1260) + 0x10;\n                            *(iVar1 + 0x1260) = iVar8;\n                            if (*(iVar1 + 0x1268) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042cfe0();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00457000();\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435500();\n            fcn.00433ce0();\n        }\n        fcn.00457000();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435d80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.004356e0();\n        fcn.00435500();\n        fcn.00433ce0();\n    }\n    fcn.00433ce0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 687
    },
    "00413de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413de0(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x413eac;\n                    arg3 = fcn.00414280(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x413f08;\n                        fcn.00435480();\n                        *(*0x20 + -0x70) = 0x413f19;\n                        fcn.00435d80();\n                        *(*0x20 + -0x70) = 0x413f25;\n                        fcn.00435a80();\n                        *(*0x20 + -0x70) = 0x413f36;\n                        fcn.00435d80();\n                        *(*0x20 + -0x70) = 0x413f45;\n                        fcn.00435a80();\n                        *(*0x20 + -0x70) = 0x413f4a;\n                        fcn.004356e0();\n                        *(*0x20 + -0x70) = 0x413f4f;\n                        fcn.00435500();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x413f65;\n                        uVar1 = fcn.00433ce0();\n                        goto code_r0x00413f65;\n                    }\ncode_r0x00413ec5:\n                    *(*0x20 + -0x70) = 0x413ef4;\n                    fcn.0045f580(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = in_XMM15;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00413f65;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00413f65;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x004140b0:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x004140e5;\ncode_r0x00414099:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x004140b0;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00413f65:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041407f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00414065;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x414027;\n                                        fcn.00414280(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x00413ec5;\n                                    }\n                                    *(*0x20 + -0x70) = 0x414056;\n                                    fcn.0045eee0(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x414065;\n                                fcn.0045eee0(0x28);\ncode_r0x00414065:\n                                *(*0x20 + -0x70) = 0x414072;\n                                fcn.0045eee0(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41407f;\n                            fcn.0045eee0(0x28);\ncode_r0x0041407f:\n                            *(*0x20 + -0x70) = 0x41408c;\n                            fcn.0045eee0(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x414099;\n                        uVar1 = fcn.0045eee0(0x28);\n                        goto code_r0x00414099;\n                    }\n                    *(*0x20 + -0x70) = 0x4140e5;\n                    fcn.0045eee0(0x28);\ncode_r0x004140e5:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x4140f2;\n                    fcn.0045eee0(0x28);\n                }\n                *(*0x20 + -0x70) = 0x4140f7;\n                fcn.00432260();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x414108;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x414139;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2434
    },
    "00414280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.00414280(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x00414452:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar15 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar4 = puVar6;\n            if (uVar1 < '\\0') break;\n            if (puVar15 == NULL) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar14 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar14 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar14;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar3 = 0; uVar3 < (uVar1 & 0x7f) >> 3; uVar3 = uVar3 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar1 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    puVar6 = puVar6 + (uVar1 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if (puVar15 == NULL) {\n            uVar3 = 0;\n            while( true ) {\n                uVar1 = *in_RAX;\n                puVar15 = puVar15 | (uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar1) break;\n                uVar3 = uVar3 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar3 = 0;\n        while( true ) {\n            uVar1 = *in_RAX;\n            uVar13 = uVar13 | -(uVar3 < 0x40) & (uVar1 & 0x7f) << (uVar3 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar3 = uVar3 + 7;\n        }\n        puVar2 = uVar13 * puVar15;\n        if (puVar15 < 0x3a) break;\n        iVar14 = puVar15 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar3 = iVar14 & 7;\n            puVar15 = puVar7 + -(iVar14 + 7U >> 3);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | (*puVar15 >> (-(uVar3 - 8) & 0x3f) & -(-(uVar3 - 8) < 0x40)) << (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | *puVar15 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 7;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n        else {\n            uVar3 = iVar14 & 3;\n            puVar15 = puVar7 + -(iVar14 + 3U >> 2);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | ((*puVar15 & 0xf) >> (-(uVar3 - 4) & 0x3f) & -(-(uVar3 - 4) < 0x40)) <<\n                                    (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | (*puVar15 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 3;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar16 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar16 = puVar16 + -1;\n            puVar9 = puVar6;\n            if (puVar15 <= puVar10) goto code_r0x00414605;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar16 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar16 = puVar16 + -1;\n        puVar9 = puVar6;\n        if (puVar15 <= puVar10) {\ncode_r0x00414605:\n            puVar6 = puVar10;\n            if (puVar15 < puVar10) {\n                puVar16 = -(puVar10 - puVar15 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar15 & 0x3f) & puVar16;\n                puVar6 = puVar15;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar2;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x0041466e;\n            }\n            puVar10 = puVar6 * 2;\n            puVar15 = puVar6;\n            if (0x39 < puVar10) goto code_r0x0041466e;\n            for (; puVar15 < 0x41; puVar15 = puVar15 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar15 & 0x3f) & -(puVar15 < 0x40) | puVar12;\n                puVar16 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar2 = fcn.00432260();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar16;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x0041466e:\n    while (puVar6 <= puVar2) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar2 = puVar2 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar2 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar2;\n    }\n    goto code_r0x00414452;\n}\n",
        "token_count": 2897
    },
    "004149a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004149a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x414a80);\n    fcn.0045c6c0();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x626c80;\n    }\n    if (*0x626698 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040ce20();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 248
    },
    "00415360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415486)\n\nint64_t fcn.00415360(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint64_t noname_1;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x4153a6;\n                fcn.00422f00();\n                if (*0x5d8810 != '\\0') {\n                    *(*0x20 + -0x58) = 0x4153b4;\n                    fcn.004525e0();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar5 = *0x5f8a10 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar5;\n                *(*0x20 + -0x10) = uVar5 * 5;\n                *(*0x20 + -0x58) = 0x4153eb;\n                iVar1 = fcn.0042c8e0();\n                if (iVar1 != 0) {\n                    cVar4 = '\\0';\n                    goto code_r0x004153f4;\n                }\ncode_r0x00415469:\n                uVar5 = *0x5d28dc & 0x80000000;\n                if (uVar5 == 0) {\n                    *0x5d28dc = *0x5d28dc + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x5f8a10;\n                *(*0x20 + -0x2c) = uVar5 == 0;\n                if (uVar5 == 0) {\n                    uVar5 = *(*0x20 + -0x3c);\n                    iVar1 = 100;\n                    while (noname_1 = uVar5,  -1 < iVar1) {\n                        if (1 < -(uVar5 - 1)) goto code_r0x00415696;\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x58) = 0x415505;\n                        iVar1 = fcn.0042c8e0();\n                        if (iVar1 == 0) {\n                            iVar1 = *(*0x20 + -0x38);\n                            noname_1 = *(*0x20 + -0x3c);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x58) = 0x41551c;\n                        uVar2 = fcn.00421b80();\n                        *(*0x20 + -0x20) = uVar2;\n                        if (iVar1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x415534;\n                            fcn.00422040();\n                            *(*0x20 + -0x58) = 0x415549;\n                            fcn.00421740();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x004153f4;\n                        }\n                        uVar5 = *(*0x20 + -0x3c);\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar1 < 0) goto code_r0x0041563b;\n                        uVar6 = -(noname_1 + -1);\n                        if (1 < uVar6) {\n                            *(*0x20 + -0x58) = 0x415696;\n                            fcn.0045eee0(2);\ncode_r0x00415696:\n                            *(*0x20 + -0x58) = 0x4156a5;\n                            fcn.0045eee0(2);\n                            goto code_r0x004156a5;\n                        }\n                        *(*0x20 + -0x38) = iVar1;\n                        iVar1 = uVar6 * 5;\n                        *(*0x20 + -0x58) = 0x4155ae;\n                        iVar3 = fcn.0042c8e0();\n                        if (iVar3 == 0) goto code_r0x0041563b;\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x58) = 0x4155c9;\n                        uVar2 = fcn.00421b80();\n                        *(*0x20 + -0x28) = uVar2;\n                        if (iVar3 == '\\0') goto code_r0x00415565;\n                        *(*0x20 + -0x58) = 0x4155e5;\n                        fcn.00422040();\n                        *(*0x20 + -0x58) = 0x4155ef;\n                        iVar1 = fcn.00411e60(iVar1, noname_1, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar1) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar1;\n                            *(*0x20 + -0x58) = 0x41562f;\n                            fcn.00421740();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x004153f4;\n                        }\n                        *(*0x20 + -0x58) = 0x415611;\n                        fcn.0042c740();\ncode_r0x00415565:\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                        noname_1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x00415650;\n            }\ncode_r0x004156a5:\n            *(*0x20 + -0x58) = 0x4156b2;\n            in_RAX = fcn.0045eee0(0x44);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4156bd;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x0041563b:\n    *(*0x20 + -0x58) = 0x415650;\n    fcn.00421740();\ncode_r0x00415650:\n    *(*0x20 + -0x3d) = *0x5d8810;\n    if (*0x5d8810 != '\\0') {\n        *(*0x20 + -0x58) = 0x415665;\n        fcn.004526e0();\n    }\n    *(*0x20 + -0x58) = 0x41566f;\n    iVar1 = fcn.004157e0();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    cVar4 = *(*0x20 + -0x3d);\ncode_r0x004153f4:\n    *(*0x20 + -0x18) = iVar1;\n    if ((*0x5d8810 != '\\0') && (cVar4 == '\\0')) {\n        *(*0x20 + -0x58) = 0x41540b;\n        fcn.004526e0();\n        iVar1 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n        *(*0x20 + -0x58) = 0x415433;\n        fcn.00411e40();\n        iVar1 = *(*0x20 + -0x18);\n        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n        return iVar1;\n    }\n    *(*0x20 + -0x58) = 0x415468;\n    fcn.00433ce0();\n    goto code_r0x00415469;\n}\n",
        "token_count": 2056
    },
    "004156e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004156e0(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x5f8a10;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x5f8a10 + 1) {\n                    *(unaff_RBX + 0x58) = *0x5f8a10 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x415789;\n                    fcn.00422040();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x5f8a10;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x41576d;\n                        fcn.0042c740((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x415753;\n                        fcn.0042c740((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x4157a5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4157b5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "00415d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415d80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x415dc5;\n            fcn.00430f80();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x415e70;\n                        fcn.00430f80();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x415eae;\n            fcn.00460380();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x415ecf;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x415ee5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x415eef;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x415f05;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x415f0f;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x415f14;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x415f19;\n            fcn.00435500();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x415f2a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x415f3a;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1120
    },
    "00415f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00415f60(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x415fae;\n            fcn.00431000();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x416065;\n                        fcn.00431000();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x4160b3;\n            fcn.00460380();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00416129;\n            do {\n                *(*0x20 + -0x60) = 0x4160d8;\n                fcn.00435480();\n                *(*0x20 + -0x60) = 0x4160e9;\n                fcn.00435d80();\n                *(*0x20 + -0x60) = 0x4160f3;\n                fcn.00435a80();\n                *(*0x20 + -0x60) = 0x416105;\n                fcn.00435d80();\n                *(*0x20 + -0x60) = 0x41610e;\n                fcn.00435a80();\n                *(*0x20 + -0x60) = 0x416113;\n                fcn.004356e0();\n                *(*0x20 + -0x60) = 0x416118;\n                fcn.00435500();\n                *(*0x20 + -0x60) = 0x416129;\n                iVar1 = fcn.00433ce0();\ncode_r0x00416129:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x416135;\n            fcn.00435480();\n            *(*0x20 + -0x60) = 0x416146;\n            fcn.00435d80();\n            *(*0x20 + -0x60) = 0x416150;\n            fcn.00435a80();\n            *(*0x20 + -0x60) = 0x416165;\n            fcn.00435d80();\n            *(*0x20 + -0x60) = 0x41616e;\n            fcn.00435a80();\n            *(*0x20 + -0x60) = 0x416173;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x416178;\n            fcn.00435500();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x416189;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x416199;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1466
    },
    "004161c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004161c0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.0042cce0();\n    fcn.00430f80();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.00460380();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00433ce0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 163
    },
    "00416460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416460(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00416460:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x62664c == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x4164ad;\n            fcn.0040ab40();\n            if ((*0x626720 != NULL) && (*(*0x626720 + 2) != 0x65)) goto code_r0x0041652f;\n            if (*0x626710 != NULL) goto code_r0x0041650b;\n            *(*0x20 + -0x28) = 0x4164dc;\n            *0x626710 = fcn.0040cf80(0x628318);\n            **0x626710 = *0x6266a0;\n            *0x6266a0 = *0x626710;\n            if (*0x626a00 != '\\0') goto code_r0x0041650b;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00416666;\n                }\n                else {\ncode_r0x0041650b:\n                    puVar1 = *0x626710;\n                    puVar4 = *0x626710 + 1;\n                    *0x626710 = (*0x626710)[1];\n                    *puVar4 = *0x626720;\n                    *0x626720 = puVar1;\ncode_r0x0041652f:\n                    puVar4 = *0x626720;\n                    uVar2 = *(*0x626720 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x626720 + 2) = *(*0x626720 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x626890 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x416598;\n                            fcn.0045ebe0(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x626890 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4165d8;\n                            fcn.0045eb40(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x4165e5;\n                            fcn.0045eb40(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x4165f2;\n                            fcn.0045eb40(*(*0x20 + 8));\n                        }\n                        *0x626607 = 1;\n                        *(*0x20 + -0x28) = 0x416607;\n                        fcn.0040ad60();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x41661b;\n                    uVar2 = fcn.0045eee0(0x65);\n                }\n                unaff_RSI = 0x626a00;\n                *(iVar3 + 0x626a00) = *(uVar2 + 0x55c290);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00416670;\n    }\n    goto code_r0x00416686;\ncode_r0x00416666:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x416670;\n    fcn.0045eee0(5);\ncode_r0x00416670:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x416685;\n    in_RAX = fcn.00433ce0();\ncode_r0x00416686:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x4166a5;\n    fcn.0045c800();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x00416460;\n}\n",
        "token_count": 1499
    },
    "004166e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004166e0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if ((*0x626606 == '\\0') || (*0x626607 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x626606 = '\\0';\n        *0x626607 = '\\0';\n        uVar1 = *0x5d1d08;\n    }\n    fcn.0040ad60();\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "00416760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041678c)\n\nvoid fcn.00416760(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626638 == 0) {\n        LOCK();\n        *0x626638 = 1;\n        fcn.0043e6c0();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00416c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041705c)\n\nvoid fcn.00416c20(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x626aec != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x416cb8;\n                        uVar3 = fcn.00412200(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x0041715d;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x4172e0;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x416ee5;\n                                fcn.0045c6c0();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x416e0a;\n                                                iVar4 = fcn.004570a0();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x416e25;\n                                                    iVar4 = fcn.004570a0();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x00416ffa;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x00416ffa;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x00416ffa;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x416de8;\n                                                    iVar4 = fcn.0040a780(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x00416ffa;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x416f45;\n                                            fcn.00416760();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x417280;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x416fcf;\n                                            fcn.0045c6c0();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x416ffa;\n                                        fcn.0045efa0(arg1_00);\ncode_r0x00416ffa:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x416fff;\n                                            uVar5 = fcn.00457000();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x417016;\n                                            fcn.00457000();\n                                            uVar3 = 0x4cf6fe;\n                                            *(*0x20 + -0xd8) = 0x417049;\n                                            fcn.0044ad80(0x22, uVar7, 0x4ca308, 0xe);\n                                            *(*0x20 + -0xd8) = 0x41704e;\n                                            fcn.00433ce0();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x41706a;\n                                    uVar5 = fcn.00457000();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x417085;\n                                    fcn.00457000();\n                                    uVar5 = 0x4cf6fe;\n                                    *(*0x20 + -0xd8) = 0x4170b8;\n                                    fcn.0044ad80(0x22, uVar7, 0x4ca308, 0xe);\n                                    *(*0x20 + -0xd8) = 0x4170bd;\n                                    fcn.00433ce0();\n                                }\n                                *(*0x20 + -0xd8) = 0x4170c5;\n                                uVar6 = fcn.00457000();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x4170dc;\n                                fcn.00457000();\n                                *(*0x20 + -0xd0) = 0x4cb0bf;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x417125;\n                                fcn.0044ae80(0x22, uVar7, 0x4ca308, 0xe);\n                                *(*0x20 + -0xd8) = 0x41712a;\n                                fcn.00433ce0();\n                            }\n                            *(*0x20 + -0xd8) = 0x417132;\n                            fcn.00457000();\n                            *(*0x20 + -0xd8) = 0x417158;\n                            fcn.0044aca0(0x29, uVar7, 0x4ca945, 0x10);\n                            *(*0x20 + -0xd8) = 0x41715d;\n                            fcn.00433ce0();\ncode_r0x0041715d:\n                            *(*0x20 + -0xd8) = 0x41716e;\n                            iVar4 = fcn.00433ce0();\n                            goto code_r0x0041716e;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x626818) {\n                            return;\n                        }\n                        uVar3 = 0x626818;\n                        for (iVar4 = 0x561f60; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x0041716e:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x4171f3;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0xd8) = 0x417205;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0xd8) = 0x41720a;\n                unaff_RDI = fcn.00457000();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x417230;\n                fcn.0044aca0(0x28, uVar3, 0x4ca0ad, 0xd);\n                *(*0x20 + -0xd8) = 0x417235;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x417246;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x417265;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3464
    },
    "00417320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417320(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x626890 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x41737f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.0045eb40();\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x417388;\n                    in_RAX = fcn.0045ebc0(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x626890 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4173cd;\n                        fcn.0045eba0(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4173e5;\n                fcn.00432260();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x4173f6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x417415;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 912
    },
    "00417440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00417440(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x417496;\n                        fcn.0045f580();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x4174c6;\n                    uVar3 = fcn.0040cf80(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x4174f6;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x417526;\n            fcn.00435480();\n            *(*0x20 + -0x38) = 0x417537;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x41753c;\n            fcn.00435500();\n            *(*0x20 + -0x38) = 0x41754d;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x417558;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "00417640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417640(void)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.00404c80();\n    puVar2 = fcn.0040cc20();\n    *puVar2 = 0x4177a0;\n    if (*0x626890 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045eb40(uVar1);\n    }\n    fcn.0043e6c0();\n    puVar2 = fcn.0040cc20();\n    *puVar2 = 0x417740;\n    if (*0x626890 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045eb40(uVar1);\n    }\n    fcn.0043e6c0();\n    fcn.00405ba0();\n    fcn.00405ba0();\n    *0x629348 = 1;\n    return;\n}\n",
        "token_count": 286
    },
    "00417900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00417dda)\n// WARNING: Removing unreachable block (ram,0x00417df1)\n\nvoid fcn.00417900(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            *(*0x20 + -0x4c) = arg1;\n            while( true ) {\n                if (((*0x629348 == '\\0') || (*0x626668 != 0)) || (*0x62664c != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x626ef8 <= *0x626f58;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x626ee0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x6299b8 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x55c390 < unaff_RBX - *0x6299b8;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x5d2d38;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x417a7a;\n                    iVar5 = fcn.00421c80();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x5d28d4 = *0x5d28d4 + 1;\n            }\n            *(*0x20 + -0x80) = 0x417aac;\n            fcn.00445680(0);\n            if (((*0x629348 == '\\0') || (*0x626668 != 0)) || (*0x62664c != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x626ef8 <= *0x626f58;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x626ee0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x6299b8 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x55c390 < *(*0x20 + -0x38) - *0x6299b8;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x5d2d38;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x417c1e;\n                fcn.004459c0(0);\n                return;\n            }\n            *0x5d2cf8 = iVar5 == 2;\n            if (*0x626ab8 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x626ab8 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x417ba5;\n            fcn.00445680(0);\n            *(*0x20 + -0x80) = 0x417bb8;\n            fcn.00445680(0);\n            if (*0x5d8810 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x5d8840;\n                *(*0x20 + -0x80) = 0x417bf4;\n                fcn.00451660(*0x20 + -0x28);\n                *0x5d8840 = *0x5d8840 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x5d26f8 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x417c52;\n                    fcn.00419560();\n                    *(*0x20 + -0x78) = 0x4d2950;\n                    *(*0x20 + -0x80) = 0x417c65;\n                    fcn.0045c6c0();\n                    *0x5d2d3c = *0x626650;\n                    *0x5d2d40 = *0x626650;\n                    if (*0x626654 < *0x626650) {\n                        *0x5d2d3c = *0x626654;\n                    }\n                    *0x5d2d78 = *0x626f58;\n                    *0x5d2d68 = 0;\n                    *0x5d2cf0 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x417cc5;\n                    fcn.004607e0();\n                    *0x5d2d48 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x5d2d48;\n                    *0x5d2d70 = *0x5d2d48;\n                    if (*0x5d8810 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x417d2a;\n                        fcn.00451660(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x4d2ac8;\n                    *(*0x20 + -0x80) = 0x417d3a;\n                    fcn.0045c6c0();\n                    *(*0x20 + -0x78) = 0x4d2958;\n                    *(*0x20 + -0x80) = 0x417d5e;\n                    fcn.0045c6c0();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417d77;\n                    fcn.0041a3e0();\n                    *0x5d2d38 = *0x5d2d38 + 1;\n                    *(*0x20 + -0x80) = 0x417d95;\n                    fcn.0041e040(*0x626650);\n                    *0x5d2d90 = *0x626f48;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x417db4;\n                        fcn.00441c20();\n                    }\n                    *0x62664c = 1;\n                    *0x626894 = 1;\n                    *0x626890 = 1;\n                    *0x5d2c70 = 0xffffffff;\n                    *0x5d2c80 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x417e18;\n                    fcn.0041a740();\n                    *(*0x20 + -0x80) = 0x417e1d;\n                    fcn.0041df60();\n                    *0x626644 = 1;\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x417fc0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x417e69;\n                    fcn.0045c6c0();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417e8e;\n                    fcn.004459c0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x417ee5;\n                        fcn.0045c640();\n                    }\n                    *(*0x20 + -0x80) = 0x417ef6;\n                    fcn.004459c0(0);\n                    return;\n                }\n                piVar1 = *(*0x5d26f0 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x5f8a10) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x5f8a10;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x417f16;\n            iVar5 = *0x5d26f8;\n            fcn.00435480();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x417f27;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x417f31;\n            fcn.00435b80();\n            *(*0x20 + -0x80) = 0x417f45;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x417f50;\n            fcn.00435a80();\n            *(*0x20 + -0x80) = 0x417f65;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x417f6e;\n            fcn.00435a80();\n            *(*0x20 + -0x80) = 0x417f73;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x417f78;\n            fcn.00435500();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x417f89;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x417f9d;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3378
    },
    "00418320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418320(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    uchar *arg1;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00445680(0);\n    while ((*0x62664c == 1 && (*0x5d2c70 == *0x5d2c80))) {\n        if (*0x5d2be0 == 0) {\n            if (*0x5d2c68 < *0x5d2c6c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        fcn.00445680(0);\n        *0x626648 = 0;\n        fcn.0045c6c0();\n        if (*0x626648 == 0) {\n            fcn.004607e0();\n            uVar3 = 0x4d2918;\n            *0x5d2d58 = 0x4d2918;\n            *0x5d2d70 = 0x4d2918;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x626890 == 0) {\n                arg2 = 0x4c8b76;\n                *(iVar1 + 200) = 0x4c8b76;\n            }\n            else {\n                arg2 = 0x4c8b76;\n                uVar3 = fcn.0045eb60(iVar1, 0x4c8b76, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x5d8810 != '\\0') {\n                uStack32 = 0;\n                fcn.00451660(&uStack32);\n            }\n            fcn.0045c6c0();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x418620);\n            arg1 = auStack24;\n            fcn.0045c6c0();\n            if (cStack41 == '\\0') {\n                *0x626644 = 0;\n                fcn.0041bba0();\n                fcn.004459c0(0);\n                fcn.00441c20();\n                fcn.0041e480(*0x626650);\n                fcn.00418880();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x626890 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045ea40(arg1, arg2, param_3, param_4);\n            }\n            fcn.0045c6c0();\n            fcn.004459c0(0);\n        }\n        else {\n            fcn.004459c0(0);\n        }\n    }\n    fcn.004459c0(0);\n    return;\n}\n",
        "token_count": 832
    },
    "00419c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419c60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x626ae4) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x419c8c;\n                fcn.0042b8a0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x62664c == 2) {\n                *(*0x20 + -0x20) = *0x5d2be0;\n                *0x5d2c78 = in_RAX;\n                if ((*0x5d2be0 == 0) && (*0x5d2c6c <= *0x5d2c68)) {\n                    if (0 < *0x626aac) {\n                        *(*0x20 + -0x78) = 0x419cda;\n                        fcn.0041a940();\n                    }\n                    if (*0x5d2be0 == 0) {\n                        *0x5d2cc8 = in_XMM15;\n                        if (*0x626890 == 0) {\n                            *0x5d2cc0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x419d14;\n                            fcn.0045eb40(0);\n                        }\n                        *(*0x20 + -0x10) = *0x5d26f0;\n                        *(*0x20 + -0x28) = *0x5d26f8;\n                        iVar3 = 0;\n                        iVar4 = *0x5d26f0;\n                        iVar5 = *0x5d26f8;\n                        while( true ) {\n                            iVar2 = *0x5d26f8;\n                            iVar1 = *0x5d26f0;\n                            if (iVar5 <= iVar3) {\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x419df5;\n                                fcn.0041ec80();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x626aac < 1) {\n                                *(*0x20 + -0x78) = 0x419d85;\n                                fcn.0042cf20();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x419d73;\n                                fcn.0042d0a0();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1238);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1240) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x419d3c;\n                            fcn.00423560();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x419e05;\n                        fcn.00435480();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x496);\n                        *(*0x20 + -0x78) = 0x419e25;\n                        fcn.00435480();\n                        *(*0x20 + -0x78) = 0x419e36;\n                        fcn.00435d80();\n                        *(*0x20 + -0x78) = 0x419e45;\n                        fcn.00435b80();\n                        *(*0x20 + -0x78) = 0x419e56;\n                        fcn.00435d80();\n                        *(*0x20 + -0x78) = 0x419e65;\n                        fcn.00435720();\n                        *(*0x20 + -0x78) = 0x419e6a;\n                        fcn.00435500();\n                        if (*(*(*0x20 + -0x18) + 0x1238) == 0) {\n                            *(*0x20 + -0x78) = 0x419f31;\n                            fcn.00435480();\n                            *(*0x20 + -0x78) = 0x419f45;\n                            fcn.00435d80();\n                            *(*0x20 + -0x78) = 0x419f4a;\n                            fcn.00435500();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1238) + 0x10);\n                            *(*0x20 + -0x78) = 0x419e8d;\n                            fcn.00435480();\n                            *(*0x20 + -0x78) = 0x419e9e;\n                            fcn.00435d80();\n                            *(*0x20 + -0x78) = 0x419ea8;\n                            fcn.00435b80();\n                            *(*0x20 + -0x78) = 0x419ead;\n                            fcn.00435500();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) goto code_r0x00419f0c;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                        *(*0x20 + -0x78) = 0x419ecc;\n                        fcn.00435480();\n                        *(*0x20 + -0x78) = 0x419edd;\n                        fcn.00435d80();\n                        *(*0x20 + -0x78) = 0x419ee7;\n                        fcn.00435b80();\n                        *(*0x20 + -0x78) = 0x419eec;\n                        fcn.00435500();\n                        do {\n                            *(*0x20 + -0x78) = 0x419ef1;\n                            fcn.00435480();\n                            *(*0x20 + -0x78) = 0x419ef6;\n                            fcn.004356e0();\n                            *(*0x20 + -0x78) = 0x419efb;\n                            fcn.00435500();\n                            *(*0x20 + -0x78) = 0x419f0c;\n                            fcn.00433ce0();\ncode_r0x00419f0c:\n                            *(*0x20 + -0x78) = 0x419f11;\n                            fcn.00435480();\n                            *(*0x20 + -0x78) = 0x419f25;\n                            fcn.00435d80();\n                            *(*0x20 + -0x78) = 0x419f2a;\n                            fcn.00435500();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x419f65;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x40) = *0x5d2c68;\n                *(*0x20 + -0x48) = *0x5d2c6c;\n                *(*0x20 + -0x28) = *0x5d2c88;\n                *(*0x20 + -0x30) = *0x5d2c90;\n                *(*0x20 + -0x50) = *0x5d2c98;\n                *(*0x20 + -0x58) = *0x5d2ca0;\n                *(*0x20 + -0x78) = 0x419fb0;\n                fcn.00435480();\n                *(*0x20 + -0x78) = 0x419fc5;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x419fcf;\n                fcn.00435be0();\n                *(*0x20 + -0x78) = 0x419fe5;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x419fef;\n                fcn.00435a80();\n                *(*0x20 + -0x78) = 0x41a005;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x41a00f;\n                fcn.00435a80();\n                *(*0x20 + -0x78) = 0x41a025;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x41a02f;\n                fcn.00435b80();\n                *(*0x20 + -0x78) = 0x41a045;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x41a04f;\n                fcn.00435b80();\n                *(*0x20 + -0x78) = 0x41a065;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x41a06f;\n                fcn.00435b80();\n                *(*0x20 + -0x78) = 0x41a085;\n                fcn.00435d80();\n                *(*0x20 + -0x78) = 0x41a08f;\n                fcn.00435b80();\n                *(*0x20 + -0x78) = 0x41a094;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x41a099;\n                fcn.00435500();\n                *(*0x20 + -0x78) = 0x41a0ac;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x78) = 0x41a0bd;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41a0c8;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2637
    },
    "0041a0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a0e0(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x62664c == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x41a119;\n                fcn.0040ab40();\n                *0x5f8a10 = *0x5f8a10 + 2;\n                *0x5d28dc = 0;\n                *0x5f8a38 = 0;\n                *0x5f8cd8 = *0x5f8cc0;\n                *0x5f8ce0 = *0x5f8cc8;\n                if (*0x626890 == 0) {\n                    *0x5f8cd0 = *0x5f8cb8;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x41a17b;\n                    fcn.0045eb40();\n                }\n                *0x5f8a60 = 0;\n                *0x5f8a68 = 0;\n                *(*0x20 + -0x28) = 0x41a1a5;\n                fcn.0040ad60();\n                *0x5d28e0 = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x41a1ca;\n                    fcn.0040ab40();\n                    *0x5f8a50 = 0;\n                    *(*0x20 + -0x28) = 0x41a1e5;\n                    fcn.0040ad60();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x41a23b;\n                        iVar2 = fcn.00421c80();\n                        if (iVar2 == -1) break;\n                        *0x5d28d8 = *0x5d28d8 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x41a24b;\n                    fcn.00423c80();\n                    do {\n                        *(*0x20 + -0x28) = 0x41a252;\n                        cVar1 = fcn.00423d80();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x41a25b;\n                    fcn.0042ad00();\n                    *(*0x20 + -0x28) = 0x41a265;\n                    fcn.0042ad80();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41a1f5;\n                fcn.0040ab40();\n                if (*0x5d28d0 != '\\0') {\n                    *0x5d28d0 = '\\0';\n                    *(*0x20 + -0x28) = 0x41a218;\n                    fcn.004378e0(1);\n                }\n                *(*0x20 + -0x28) = 0x41a226;\n                fcn.0040ad60();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x41a285;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41a290;\n        fcn.00460f20();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 952
    },
    "0041a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a3e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d1d30 != NULL) {\n        (***0x5d1d30)();\n    }\n    fcn.0040ab40();\n    iVar2 = *0x5d3240;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 8);\n        if (*0x626890 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045eb40(0);\n        }\n    }\n    if (*0x626890 == 0) {\n        *0x5d3240 = 0;\n    }\n    else {\n        fcn.0045eb40(0);\n    }\n    fcn.0040ad60();\n    fcn.0040ab40();\n    iVar2 = *0x5d3250;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 0x28);\n        if (*0x626890 == 0) {\n            *(iVar2 + 0x28) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045eb40(0);\n        }\n    }\n    if (*0x626890 == 0) {\n        *0x5d3250 = 0;\n    }\n    else {\n        fcn.0045eb40(0);\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 422
    },
    "0041a520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.0041a520(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.0045ef60(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.0045eee0(unaff_RBX);\n            goto code_r0x0041a5bc;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x0041a5bc:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x0041a5ed:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.0045eee0(unaff_RBX);\n            goto code_r0x0041a67e;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x0041a61b;\n        goto code_r0x0041a686;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x0041a697:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.0045eee0(arg1_00);\n        goto code_r0x0041a72c;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x0041a6cb;\n    goto code_r0x0041a734;\ncode_r0x0041a61b:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x0041a5ed;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x0041a5ed;\n    }\ncode_r0x0041a67e:\n    fcn.0045eee0(unaff_RBX);\ncode_r0x0041a686:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.0045eee0(arg1);\n    goto code_r0x0041a697;\ncode_r0x0041a6cb:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x0041a72c:\n            fcn.0045eee0(arg1_00);\ncode_r0x0041a734:\n            fcn.0045eee0(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.0045c800();\n            }\n            if (*0x5d1d18 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x5d1d18;\n                iVar8 = (*0x5d1d18)[1];\n            }\n            *0x5d2c88 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x5d2c88 < uVar9) {\n                    *0x5d2c88 = CONCAT88(*0x5d2c90, uVar9);\n                }\n            }\n            if (*0x5d1d18 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x5d1d18;\n                iVar8 = (*0x5d1d18)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x5d2c90 < uVar9) {\n                    *0x5d2c88 = CONCAT88(uVar9, *0x5d2c88);\n                }\n            }\n            *0x5f8cf0 = *0x5f8cc0;\n            *0x5f8cf8 = *0x5f8cc0;\n            if (*0x626890 == 0) {\n                *0x5f8ce8 = *0x5f8cb8;\n                *0x5d2c98 = *0x5f8cc0;\n            }\n            else {\n                *0x5d2c98 = fcn.0045eb40();\n            }\n            *0x5d2cc8 = *0x5d26d8;\n            *0x5d2cd0 = *0x5d26d8;\n            if (*0x626890 == 0) {\n                *0x5d2cc0 = *0x5d26d0;\n                *0x5d2ca0 = *0x5d26d8;\n            }\n            else {\n                *0x5d2ca0 = fcn.0045eb40();\n            }\n            iVar4 = SUB164(*0x5d2c88, 0);\n            iVar5 = SUB164(*0x5d2c88 >> 0x40, 0);\n            iVar3 = *0x5d2c98;\n            *0x5d2cb8 = *0x5d2ca0 + iVar4 + iVar5 + iVar3 + 2;\n            *0x5d2c68 = 0;\n            *0x5d2c6c = iVar4 + iVar5 + iVar3 + *0x5d2ca0 + 2;\n            *0x5d2ca8 = 2;\n            *0x5d2cac = iVar4 + 2;\n            *0x5d2cb0 = iVar5 + iVar4 + 2;\n            *0x5d2cb4 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x5d2cb8;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x0041a697;\n}\n",
        "token_count": 2042
    },
    "0041a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a740(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d1d18 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x5d1d18;\n        iVar5 = (*0x5d1d18)[1];\n    }\n    *0x5d2c88 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x5d2c88 < uVar8) {\n            *0x5d2c88 = CONCAT88(*0x5d2c90, uVar8);\n        }\n    }\n    if (*0x5d1d18 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x5d1d18;\n        iVar5 = (*0x5d1d18)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x5d2c90 < uVar8) {\n            *0x5d2c88 = CONCAT88(uVar8, *0x5d2c88);\n        }\n    }\n    *0x5f8cf0 = *0x5f8cc0;\n    *0x5f8cf8 = *0x5f8cc0;\n    if (*0x626890 == 0) {\n        *0x5f8ce8 = *0x5f8cb8;\n        *0x5d2c98 = *0x5f8cc0;\n    }\n    else {\n        *0x5d2c98 = fcn.0045eb40();\n    }\n    *0x5d2cc8 = *0x5d26d8;\n    *0x5d2cd0 = *0x5d26d8;\n    if (*0x626890 == 0) {\n        *0x5d2cc0 = *0x5d26d0;\n        *0x5d2ca0 = *0x5d26d8;\n    }\n    else {\n        *0x5d2ca0 = fcn.0045eb40();\n    }\n    iVar3 = SUB164(*0x5d2c88, 0);\n    iVar4 = SUB164(*0x5d2c88 >> 0x40, 0);\n    iVar2 = *0x5d2c98;\n    *0x5d2c68 = 0;\n    *0x5d2c6c = iVar3 + iVar4 + iVar2 + *0x5d2ca0 + 2;\n    *0x5d2ca8 = 2;\n    *0x5d2cac = iVar3 + 2;\n    *0x5d2cb0 = iVar4 + iVar3 + 2;\n    *0x5d2cb4 = iVar2 + iVar3 + iVar4 + 2;\n    *0x5d2cb8 = *0x5d2ca0 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 947
    },
    "0041b2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b2e0(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x5f8cf0;\n            if (unaff_RBX < *0x5f8cf0) {\n                uVar5 = *(*0x5f8ce8 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x5f8a10;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x5f8a70) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x5f8a10;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x626611 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x0041b4b7:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41b4c5;\n                                                    fcn.00435480();\n                                                    *(*0x20 + -0x80) = 0x41b4d6;\n                                                    fcn.00435d80();\n                                                    *(*0x20 + -0x80) = 0x41b4df;\n                                                    fcn.00435a80();\n                                                    *(*0x20 + -0x80) = 0x41b4e5;\n                                                    fcn.004356a0();\n                                                    *(*0x20 + -0x80) = 0x41b4ee;\n                                                    fcn.00435a80();\n                                                    *(*0x20 + -0x80) = 0x41b4f3;\n                                                    fcn.004356e0();\n                                                    *(*0x20 + -0x80) = 0x41b4f8;\n                                                    fcn.00435500();\n                                                    *(*0x20 + -0x80) = 0x41b509;\n                                                    fcn.00433ce0();\n                                                    goto code_r0x0041b509;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41b409;\n                                            fcn.0040ab40();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x41b4b7;\n                                                        fcn.00432260();\n                                                        goto code_r0x0041b4b7;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x41b485;\n                                                    fcn.0041d0a0(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x41b4a6;\n                                                    fcn.0041cf00(0x55c280);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41b425;\n                                            fcn.0040ad60();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041b389;\n                                        }\ncode_r0x0041b509:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41b513;\n                                        fcn.00435480();\n                                        *(*0x20 + -0x80) = 0x41b525;\n                                        fcn.00435d80();\n                                        *(*0x20 + -0x80) = 0x41b532;\n                                        fcn.00435a80();\n                                        *(*0x20 + -0x80) = 0x41b537;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x80) = 0x41b53c;\n                                        fcn.00435500();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41b54d;\n                                        fcn.00433ce0();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41b55a;\n                                    fcn.0045ef00(0x200);\n                                    goto code_r0x0041b55a;\n                                }\ncode_r0x0041b389:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041b55a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x41b567;\n                fcn.0045ef00(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41b56f;\n            in_RAX = fcn.0045eee0(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41b57f;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1923
    },
    "0041b5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b5a0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x626fa8;\n            iVar5 = -*(in_RAX + 0x180) * *0x626fe0;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x4ee570 * *0x626fe8;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x626fa8) {\n                if (*0x626fa8 < iVar5) {\n                    *(in_RAX + 0x180) = *0x626fa8 * *0x626fe8 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x626fa8 = *0x626fa8 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.00451660(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x5d8810 != '\\0') && (!bVar1)) {\n                fcn.00451660(0);\n                bVar1 = true;\n            }\n            fcn.0045c6c0();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.0045eb60(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.00418320();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x0041b7f1;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.0045c640();\n        }\n        cVar2 = fcn.0041bc20();\n    } while (cVar2 == '\\0');\ncode_r0x0041b7f1:\n    if (bVar1) {\n        fcn.00451660(0);\n    }\n    return;\n}\n",
        "token_count": 769
    },
    "0041b880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b880(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar10;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x41b8be;\n                in_RAX = fcn.0045eb40();\n            }\n            if (*0x626644 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x41b8f2;\n            fcn.004607e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x5d2c80 + -1;\n            uVar6 = *0x5d2c80 - 1;\n            uVar8 = *0x5d2c70;\n            *0x5d2c80 = iVar2;\n            if (*0x5d2c70 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x41b945;\n                fcn.00438040(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41b96f;\n                uVar5 = fcn.0041cce0();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x41b988;\n                fcn.00438040(2);\n                dVar4 = *0x626fe8;\n                dVar10 = *(*0x20 + -0x20) * *0x626fe8;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = dVar10 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x5d2c80 + 1;\n                uVar8 = *0x5d2c80 + 1;\n                *0x5d2c80 = iVar2;\n                if (uVar8 <= *0x5d2c70) {\n                    if (*0x5d2c70 == uVar8) {\n                        if (*0x5d2be0 == 0) {\n                            if (*0x5d2c68 < *0x5d2c6c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x626890 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x41ba38;\n                                fcn.0045eba0(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x41ba3d;\n                    fcn.004607e0();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1218);\n                    *(iVar1 + 0x1218) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x626fb0 = *0x626fb0 + iVar7;\n                        *(iVar1 + 0x1218) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x5d2c70;\n                *(*0x20 + -0x50) = 0x41bab7;\n                fcn.00435480(dVar10, dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x41bac8;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41bad1;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x41bae5;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41baee;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x41baf3;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41baf8;\n                fcn.00435500();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x41bb09;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x41bb16;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x41bb27;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x41bb30;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x41bb45;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x41bb4e;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x41bb53;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x41bb58;\n            fcn.00435500();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x41bb69;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x41bb79;\n        fcn.00460f20();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1820
    },
    "0041bd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041bd60(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x626fe8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d2d18 == 0) {\n        LOCK();\n        iVar2 = *0x626fa8;\n        *0x626fa8 = *0x626fa8 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040ab40();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x5d2d18;\n        if ((*0x5d2d18 == 0) || (iVar2 < 1)) goto code_r0x0041be89;\n        if ((*0x5d2d18 != 0) && (*0x5d2d18 = *(*0x5d2d18 + 0xa0),  *0x5d2d18 == 0)) {\n            *0x5d2d20 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.004378e0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x5d2d20 != 0) {\n        *(*0x5d2d20 + 0xa0) = iVar3;\n        iVar2 = *0x5d2d18;\n    }\n    *0x5d2d18 = iVar2;\n    *0x5d2d20 = iVar3;\n    iVar2 = 0;\ncode_r0x0041be89:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x626fa8;\n        *0x626fa8 = *0x626fa8 + iVar2 * *0x626fe0;\n    }\n    iVar2 = fcn.0040ad60(iVar3);\n    return iVar2;\n}\n",
        "token_count": 565
    },
    "0041bf00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041bf00(void)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int64_t *piVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (unaff_R14[3] <= *0x20 + -0x180 && *0x20 + -0x180 != unaff_R14[3]) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x12) >> 0xc & 1) != 0) {\n                uVar6 = *(in_RAX + 0x12) & 0xffffefff;\n                if (uVar6 < 3) {\n                    if (uVar6 == 1) goto code_r0x0041bf69;\n                }\n                else {\n                    if (4 < uVar6) {\n                        if (uVar6 == 6) {\n                            return 0;\n                        }\ncode_r0x0041c0ea:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x12);\n                        puVar7 = in_RAX[0x13];\n                        *(*0x20 + -0x188) = puVar7;\n                        *(*0x20 + -0x208) = 0x41c105;\n                        fcn.00435480();\n                        *(*0x20 + -0x208) = 0x41c116;\n                        fcn.00435d80();\n                        *(*0x20 + -0x208) = 0x41c125;\n                        fcn.00435d00();\n                        *(*0x20 + -0x208) = 0x41c136;\n                        fcn.00435d80();\n                        *(*0x20 + -0x208) = 0x41c145;\n                        fcn.00435b80();\n                        *(*0x20 + -0x208) = 0x41c156;\n                        fcn.00435d80();\n                        *(*0x20 + -0x208) = 0x41c165;\n                        fcn.00435a80();\n                        *(*0x20 + -0x208) = 0x41c16a;\n                        fcn.004356e0();\n                        *(*0x20 + -0x208) = 0x41c16f;\n                        fcn.00435500();\n                        *(*0x20 + -0x208) = 0x41c185;\n                        fcn.00433ce0();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x0041c199:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x41c1d6;\n                                fcn.0041cf00(0x55c280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41c212;\n                                fcn.0041cf00(0x55c280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41c256;\n                                fcn.0041cf00(0x55c280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar7 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x41c27d;\n                            fcn.00421040(0);\n                        }\n                        iVar5 = 0;\n                        *(*0x20 + -0x208) = 0x41c295;\n                        uVar3 = fcn.00421460(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar3;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x41c2aa;\n                                iVar4 = fcn.00421180();\n                                if (iVar4 == 0) {\n                                    while (iVar5 = *(*0x20 + -0x50),  iVar5 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar5 + 0x18);\n                                        *(iVar5 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x41c308;\n                                        fcn.00423a60();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar5 = 0x19;\n                                    *(*0x20 + -0x208) = 0x41c35e;\n                                    iVar4 = fcn.00433ce0();\n                                }\n                                else {\n                                    iVar4 = iVar4 - *(*0x20 + -0x80);\n                                    puVar7 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar5,  puVar7 != NULL) {\n                                    if (iVar4 < *puVar7) {\n                                        puVar7 = *(puVar7 + 4);\n                                    }\n                                    else {\n                                        if (iVar4 < *puVar7 + puVar7[1]) goto code_r0x0041c2c9;\n                                        puVar7 = *(puVar7 + 6);\n                                    }\n                                }\n                                puVar7 = NULL;\ncode_r0x0041c2c9:\n                            } while ((puVar7 == NULL) || (uVar1 = *(puVar7 + 2),  uVar1 == 0));\n                            *(puVar7 + 2) = 0;\n                            for (iVar5 = 0x561f60; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                                if ((*(iVar5 + 0x130) < uVar1 || *(iVar5 + 0x130) == uVar1) &&\n                                   (uVar1 <= *(iVar5 + 0x100) && *(iVar5 + 0x100) != uVar1)) goto code_r0x0041c3b6;\n                            }\n                            iVar5 = 0;\ncode_r0x0041c3b6:\n                            iVar5 = *(uVar1 + 0xc) + *(iVar5 + 0x128);\n                            if (*(uVar1 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar7;\n                                *(*0x20 + -0x28) = uVar1;\n                                *(*0x20 + -0x208) = 0x41c3ed;\n                                iVar4 = fcn.00414900();\n                                iVar5 = *(iVar4 + 0x18);\n                                puVar7 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar4 = 0;\n                            }\n                            *(*0x20 + -400) = iVar4;\n                            puVar7 = *puVar7 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x41c47c;\n                                fcn.0041cf00(iVar5);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x41c448;\n                                fcn.0041d420(iVar5);\n                            }\n                            iVar5 = *(*0x20 + -400);\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x208) = 0x41c49c;\n                                fcn.00425900(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041bf69:\n                    if (unaff_R14 != in_RAX) {\n                        if (in_RAX[0xe] == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + -0x198) = in_RAX[1] - *in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x41bfc7;\n                            fcn.00449e40();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41bff7;\n                        puVar2 = fcn.0045f154();\n                        uVar3 = puVar2[1];\n                        *(*0x20 + -0x80) = *puVar2;\n                        *(*0x20 + -0x78) = uVar3;\n                        if (puVar2[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41c03c;\n                            fcn.0041cf00(0x55c280);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41c620;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x41c0ba;\n                        fcn.00452f20(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar7 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar7 + 10);\n                        goto code_r0x0041c199;\n                    }\n                    *(*0x20 + -0x208) = 0x41c4b6;\n                    piVar8 = unaff_R14;\n                    in_RAX = fcn.00433ce0();\n                    uVar6 = piVar8;\n                }\n                if (uVar6 != 2) goto code_r0x0041c0ea;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x12);\n                *(*0x20 + -0x188) = in_RAX[0x13];\n                *(*0x20 + -0x208) = 0x41c4da;\n                fcn.00435480();\n                *(*0x20 + -0x208) = 0x41c4eb;\n                fcn.00435d80();\n                *(*0x20 + -0x208) = 0x41c4f8;\n                fcn.00435d00();\n                *(*0x20 + -0x208) = 0x41c509;\n                fcn.00435d80();\n                *(*0x20 + -0x208) = 0x41c513;\n                fcn.00435b80();\n                *(*0x20 + -0x208) = 0x41c525;\n                fcn.00435d80();\n                *(*0x20 + -0x208) = 0x41c530;\n                fcn.00435a80();\n                *(*0x20 + -0x208) = 0x41c535;\n                fcn.004356e0();\n                *(*0x20 + -0x208) = 0x41c53a;\n                fcn.00435500();\n                *(*0x20 + -0x208) = 0x41c54b;\n                in_RAX = fcn.00433ce0();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x12);\n            *(*0x20 + -0x188) = in_RAX[0x13];\n            *(*0x20 + -0x208) = 0x41c566;\n            fcn.00435480();\n            *(*0x20 + -0x208) = 0x41c577;\n            fcn.00435d80();\n            *(*0x20 + -0x208) = 0x41c585;\n            fcn.00435d00();\n            *(*0x20 + -0x208) = 0x41c596;\n            fcn.00435d80();\n            *(*0x20 + -0x208) = 0x41c5a5;\n            fcn.00435b80();\n            *(*0x20 + -0x208) = 0x41c5b6;\n            fcn.00435d80();\n            *(*0x20 + -0x208) = 0x41c5c5;\n            fcn.00435be0();\n            *(*0x20 + -0x208) = 0x41c5ca;\n            fcn.004356e0();\n            *(*0x20 + -0x208) = 0x41c5cf;\n            fcn.00435500();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x41c5e5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x41c5f5;\n        fcn.00460f20();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3461
    },
    "0041c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c8c0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x626894 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41cca5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41ccb5;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4d2a30;\n            }\n        }\n        else {\n            uVar8 = 0x4d2a38;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x5d2c6c <= *0x5d2c68) goto code_r0x0041c98f;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041cc02:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x5d3260 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041c98f:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x5d3260 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041cb8d;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x5d2be0 == 0) {\n                *(*0x20 + -0x60) = 0x41c9e5;\n                fcn.00423660();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041cbcf;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41ca45;\n                iVar4 = fcn.00423480(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41ca53;\n                    fcn.0042cfe0();\n                    *(*0x20 + -0x60) = 0x41ca5d;\n                    iVar4 = fcn.00423480();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041cb8d;\n            }\n            *(*0x20 + -0x60) = 0x41ca94;\n            fcn.0041d0a0(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x626f90 = *0x626f90 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41cadd;\n                    fcn.0041bd60();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41cb22;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041cb8d;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x5d2c68 + 1;\n    bVar10 = *0x5d2c6c <= *0x5d2c68;\n    *0x5d2c68 = uVar7;\n    if (bVar10) goto code_r0x0041c98f;\n    *(*0x20 + -0x60) = 0x41cc5f;\n    fcn.0041ab40();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41cc72;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041cb8d:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x626f90 = *0x626f90 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41cbb8;\n                fcn.0041bd60(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041cbdc;\ncode_r0x0041cbcf:\n    *(*0x20 + -0x60) = 0x41cbdc;\n    fcn.0045eee0(0xfd);\ncode_r0x0041cbdc:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041cc02;\n}\n",
        "token_count": 2476
    },
    "0041cce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041cce0(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041cce0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x626894 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5)) goto code_r0x0041ce9a;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x5d2be0 == 0) {\n                    *(*0x20 + -0x30) = 0x41cd6a;\n                    fcn.00423660();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x0041ceac;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41cdc5;\n                    iVar3 = fcn.00423480();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41cdd3;\n                        fcn.0042cfe0();\n                        *(*0x20 + -0x30) = 0x41cddd;\n                        iVar3 = fcn.00423480();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x5d2c6c <= *0x5d2c68) {\ncode_r0x0041ce9a:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x5d2c68 + 1;\n                    bVar6 = *0x5d2c6c <= *0x5d2c68;\n                    *0x5d2c68 = uVar2;\n                    if (bVar6) goto code_r0x0041ce9a;\n                    *(*0x20 + -0x30) = 0x41ce32;\n                    iVar5 = fcn.0041ab40(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41ce52;\n                    fcn.0041d0a0();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x626f90 = *0x626f90 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041ceb9;\n    }\n    goto code_r0x0041cecb;\ncode_r0x0041ceac:\n    *(*0x20 + -0x30) = 0x41ceb9;\n    fcn.0045eee0(0xfd);\ncode_r0x0041ceb9:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41ceca;\n    in_RAX = fcn.00433ce0();\ncode_r0x0041cecb:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41ceda;\n    fcn.00460f20();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041cce0;\n}\n",
        "token_count": 1302
    },
    "0041d6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d6e0(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x626611 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x626aac < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x5f8a70) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041d856;\n                        }\n                        goto code_r0x0041d8b4;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41d845;\n                    cVar4 = fcn.00415b00(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041d856:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041d884:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41d893;\n                            fcn.00423160();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041d884;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041d884;\n                    }\n                    *(*0x20 + -0x50) = 0x41d8b4;\n                    fcn.0045eee0(0xfd);\ncode_r0x0041d8b4:\n                    *(*0x20 + -0x50) = 0x41d8c5;\n                    fcn.0045ef00(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41d8d4;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x41d8e5;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41d8ef;\n                fcn.00435be0();\n                *(*0x20 + -0x50) = 0x41d905;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41d90f;\n                fcn.00435be0();\n                *(*0x20 + -0x50) = 0x41d925;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41d92f;\n                fcn.00435be0();\n                *(*0x20 + -0x50) = 0x41d945;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x41d94a;\n                fcn.00435500();\n                *(*0x20 + -0x50) = 0x41d965;\n                fcn.0041da00(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41d985;\n                fcn.0041da00(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41d9a5;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41d9b6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41d9da;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1831
    },
    "0041da00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041da00(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x5f8a70);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435500();\n    if (iVar3 == 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n        return;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435500();\n    if (*(iVar3 + 99) < *0x5cb018) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.004356e0();\n        fcn.00435500();\n    }\n    else {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n            }\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435be0();\n            fcn.00435500();\n            if (unaff_RDI == uVar4) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n            }\n            fcn.00435480();\n            fcn.004356e0();\n            fcn.00435500();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    return;\n}\n",
        "token_count": 944
    },
    "0041de40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041de40(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x626611 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x5f8a70) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1248;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.0045ef00(0x40);\n    }\n    fcn.00433ce0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 498
    },
    "0041e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e040(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0xb0) = 0;\n    *(in_RAX + 0xb8) = 0;\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = in_XMM15;\n    *(in_RAX + 0xd8) = in_XMM15;\n    *(in_RAX + 0xe8) = 0;\n    *(in_RAX + 0xf0) = unaff_RBX;\n    *(in_RAX + 0x90) = *(in_RAX + 0x98);\n    uVar2 = *(in_RAX + 0x78) + 0x10000;\n    if (*(in_RAX + 0x68) < uVar2) {\n        *(in_RAX + 0x68) = uVar2;\n    }\n    dVar5 = *0x4ee4f8 * arg1;\n    iVar3 = *0x4ee508 + dVar5;\n    *(in_RAX + 0xf8) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x4ee528;\n    if ((dVar6 < str.333333._0_8_) || (*0x4ee500 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0xf8) = iVar3 + -1;\n        }\n        *(in_RAX + 0x110) = (dVar5 - *(in_RAX + 0xf8)) / arg1;\n    }\n    else {\n        *(in_RAX + 0x110) = 0;\n    }\n    if (0 < *0x626ab8) {\n        *(in_RAX + 0xf8) = arg1;\n        *(in_RAX + 0x110) = 0;\n    }\n    iVar1 = *0x5d26f8;\n    iVar3 = *0x5d26f0;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1218) = in_XMM15;\n    }\n    fcn.0041e320();\n    if (0 < *0x626ab0) {\n        noname_0 = *(in_RAX + 0x100);\n        arg2 = *0x626f60;\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435780(noname_0, arg2);\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435780(noname_0, arg2);\n        fcn.004356e0();\n        fcn.00435500();\n    }\n    return;\n}\n",
        "token_count": 841
    },
    "0041e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041e480(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    ulong extraout_XMM0_Qa;\n    double dVar4;\n    double dVar5;\n    double dVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *0x626f50 = *0x626f48;\n    iVar3 = unaff_RBX - *(in_RAX + 0xf0);\n    dVar5 = *0x4ee4f8;\n    if (0 < iVar3) {\n        dVar5 = *0x4ee4f8 + *(in_RAX + 0xd0) / (iVar3 * arg1);\n    }\n    if (*(in_RAX + 0x78) <= *(in_RAX + 0x18)) {\n        *0x626f50 = *0x626f48;\n        return 0;\n    }\n    if (iVar3 < 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        dVar4 = *(in_RAX + 0xe8) / (iVar3 * arg1);\n    }\n    uVar2 = *(in_RAX + 0x78) - *(in_RAX + 0x18);\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    cVar1 = fcn.0041f220(*(in_RAX + 0x20), \n                         ((dVar4 + dVar5) * dVar6) /\n                         ((*0x4ee528 - dVar5) * (*(in_RAX + 0xb0) + *(in_RAX + 0xb8) + *(in_RAX + 0xc0))), *0x4ee528, \n                         in_RAX + 0x28);\n    *(in_RAX + 0x20) = extraout_XMM0_Qa;\n    if (cVar1 == '\\0') {\n        *(in_RAX + 0x20) = 0;\n    }\n    if (0 < *0x626ab0) {\n        fcn.00435480();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435b80(dVar5 * *0x4ee560);\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435500();\n        fcn.00435480();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435500();\n        arg2 = *(in_RAX + 0x78);\n        noname_0 = *(in_RAX + 0x68);\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435780(noname_0, arg2);\n        fcn.00435d80();\n        fcn.00435500();\n        if (cVar1 == '\\0') {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        fcn.00435480();\n        fcn.004356e0();\n        fcn.00435500();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.0040ad60();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1030
    },
    "0041e8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e8a0(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0xf8) < 1) {\n                return;\n            }\n            if (*0x626650 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x626650;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x5d26f8 <= iVar6) break;\n                if (*(*(*0x5d26f0 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41e9b0;\n                    cVar3 = fcn.00441200();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41e9e9;\n            in_RAX = fcn.0045eee0(*0x5d26f8);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41e9f4;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "0041ea00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ea92)\n\nulong fcn.0041ea00(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x626644 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41ec5c;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41ec6c;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1238) == 0)) ||\n       ((*(*(unaff_RBX + 0x1238) + 0x10) == 0 && (*(*(unaff_RBX + 0x1240) + 0x10) == 0)))) {\n        if (*0x5d2be0 == 0) {\n            if (*0x5d2c68 < *0x5d2c6c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x626728 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x626728 >> 0x13) << 3;\n        *0x626728 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0xf8);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0xf8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x110) == 0.0) {\n            *(*0x20 + -0x38) = 0x41ebf6;\n            fcn.0040a8e0(in_RAX, piVar6, 0x626728);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41eb5a;\n        fcn.004607e0();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0xf0);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x110) < *(iVar7 + 0x1220) / iVar5) {\n                *(*0x20 + -0x38) = 0x41ebc6;\n                fcn.0040a8e0();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1228) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1228) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41ec27;\n    fcn.00438040(1);\n    if (*0x5d8810 != '\\0') {\n        *(*0x20 + -0x38) = 0x41ec3c;\n        fcn.00452ac0();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1206
    },
    "0041ec80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ec80(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0xa8) = unaff_RBX;\n    *(in_RAX + 0x78) = unaff_RBX;\n    *(in_RAX + 0x80) = *(in_RAX + 0xb0);\n    *(in_RAX + 0x88) = *(in_RAX + 0xb0);\n    if (*0x5d8810 != '\\0') {\n        uStack16 = *0x626f58;\n        fcn.00451660(&uStack16);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0041ede0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ede0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        *0x626f58 = *0x626f58 + unaff_RBX;\n        if (*0x5d8810 != '\\0') {\n            fcn.00452d60();\n        }\n    }\n    if ((*0x626644 == 0) && (arg1 != 0)) {\n        LOCK();\n        iVar1 = *0x626f60 + arg1;\n        arg1 = *0x626f60;\n        *0x626f60 = iVar1;\n    }\n    if (*0x626644 != 0) {\n        fcn.0041e320(arg1);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0041eea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041eea0(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x24) + *(in_RAX + 0x2a) + *(in_RAX + 0x28)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x2a);\n    }\n    uVar4 = *(in_RAX + 2);\n    if ((*0x5d28dc != -0x80000000) && (uVar4 < *(in_RAX + 0x1e) + 0x100000U)) {\n        uVar4 = *(in_RAX + 0x1e) + 0x100000U;\n    }\n    iVar1 = *(in_RAX + 0x2a);\n    uVar3 = uVar2 - iVar1;\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4ee510;\n    if (*0x4ee580 <= dVar7) {\n        uVar5 = dVar7 - *0x4ee580 | 0x8000000000000000;\n    }\n    else {\n        uVar5 = dVar7;\n    }\n    if (uVar4 < uVar5 + iVar1) {\n        uVar4 = uVar5 + iVar1;\n    }\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4ee520;\n    if (*0x4ee580 <= dVar7) {\n        uVar3 = dVar7 - *0x4ee580 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar5 = uVar2 - *(in_RAX + 2);\n    if ((*(in_RAX + 2) < uVar2) && (uVar3 < uVar5)) {\n        uVar3 = uVar5;\n    }\n    uVar5 = uVar3 + iVar1;\n    if (uVar3 + iVar1 < uVar4) {\n        uVar5 = uVar4;\n    }\n    uVar3 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4ee540 * *0x4ee518 * *(in_RAX + 8);\n    if (*0x4ee580 <= dVar7) {\n        uVar3 = dVar7 - *0x4ee580 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar6 = uVar2 - uVar3;\n    if (uVar2 < uVar3) {\n        uVar6 = uVar4;\n    }\n    if (uVar6 < uVar4) {\n        uVar6 = uVar4;\n    }\n    if (uVar5 < uVar6) {\n        uVar6 = uVar5;\n    }\n    *(in_RAX + 6) = uVar6;\n    if (uVar2 < uVar6) {\n        uVar2 = uVar6;\n    }\n    *(in_RAX + 0x1a) = uVar2;\n    if (*0x5d8810 != '\\0') {\n        fcn.00452dc0();\n    }\n    if (*0x62664c != 0) {\n        fcn.0041e320(in_RAX);\n    }\n    return;\n}\n",
        "token_count": 1092
    },
    "0041f480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f480(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    uVar1 = *0x5d28a0;\n    if (*0x5d2890 != '\\0') {\n        *0x5d28a0 = 0;\n        fcn.0044f460(uVar1);\n        *0x5d2890 = '\\0';\n        *(*0x5d2888 + 0xa0) = 0;\n        fcn.0043c1c0();\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 193
    },
    "0041f660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f660(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    double dVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar3 = unaff_R14;\n            iVar2 = unaff_R14;\n            if (*0x626890 != 0) {\n                *(*0x20 + -0xa8) = 0x41f6b2;\n                fcn.0045eb40();\n                iVar2 = *0x5d2888;\n            }\n            *0x5d2888 = iVar2;\n            *(*0x20 + -0xa8) = 0x41f6c5;\n            fcn.0040ab40();\n            *0x5d2890 = 1;\n            *(*0x20 + -0xa8) = 0x41f6d8;\n            iVar2 = fcn.0040cc20();\n            if (*0x626890 == 0) {\n                *0x5d2898 = iVar2;\n                *(iVar2 + 0x18) = 0x4d2868;\n            }\n            else {\n                *(*0x20 + -0xa8) = 0x41f705;\n                fcn.0045ea40(iVar3, param_2, param_3, param_4);\n                *(*0x20 + -0xa8) = 0x41f715;\n                fcn.0045eb40(0x4d2868);\n            }\n            *(*0x20 + -0xa8) = 0x41f729;\n            fcn.00404e60();\n            *(*0x20 + -0xa8) = 0x41f74c;\n            fcn.00436620(0xd);\n            *(*0x20 + -0x48) = 0x3fd599999999999a;\n            *(*0x20 + -0x40) = 0x41486a0000000000;\n            *(*0x20 + -0x38) = 0x41cdcd6500000000;\n            *(*0x20 + -0x30) = 0x3f50624dd2f1a9fc;\n            *(*0x20 + -0x28) = 0x408f400000000000;\n            *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            iVar3 = 0;\n            dVar7 = *0x4ee4e8;\ncode_r0x0041f7aa:\n            *(*0x20 + -0x58) = iVar3;\n            *(*0x20 + -0x68) = dVar7;\n            dVar8 = 0.0;\n            uVar5 = 0;\n            while( true ) {\n                if ((*0x4ee578 <= dVar8) || (param_2 = *0x6282b0 - *0x6282c0,  param_2 <= *0x5f8a58))\n                goto code_r0x0041f7d5;\n                *(*0x20 + -0x60) = dVar8;\n                *(*0x20 + -0x78) = uVar5;\n                *(*0x20 + -0xa8) = 0x41f967;\n                fcn.004607e0();\n                *(*0x20 + -0x80) = *(*0x20 + -0xa0);\n                *(*0x20 + -0xa8) = 0x41f995;\n                iVar3 = fcn.0041faa0();\n                *(*0x20 + -0x70) = iVar3;\n                LOCK();\n                *0x5f89e0 = *0x5f89e0 + iVar3;\n                *(*0x20 + -0xa8) = 0x41f9ac;\n                fcn.004607e0();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x80) < *(*0x20 + -0xa0)) {\n                    dVar8 = (*(*0x20 + -0xa0) - *(*0x20 + -0x80)) + *(*0x20 + -0x60);\n                    uVar5 = *(*0x20 + -0x70);\n                }\n                else {\n                    if (*0x626798 == 0) goto code_r0x0041fa80;\n                    uVar5 = *(*0x20 + -0x70);\n                    uVar4 = SUB168(ZEXT816(uVar5) / ZEXT816(*0x626798), 0);\n                    param_2 = uVar5 % *0x626798;\n                    if (uVar4 < 0) {\n                        dVar7 = uVar4 >> 1 | SUB164(ZEXT816(uVar5) / ZEXT816(*0x626798), 0) & 1;\n                        dVar7 = dVar7 + dVar7;\n                    }\n                    else {\n                        dVar7 = uVar4;\n                    }\n                    dVar8 = *(*0x20 + -0x60) + dVar7 * *0x4ee568;\n                }\n                uVar5 = *(*0x20 + -0x78) + uVar5;\n                if (*0x626700 != 0) break;\n                dVar7 = *(*0x20 + -0x68);\n            }\n            dVar7 = *(*0x20 + -0x68);\ncode_r0x0041f7d5:\n            if (uVar5 == 0) {\n                *(*0x20 + -0xa8) = 0x41f8d6;\n                fcn.0040ab40();\n                *0x5d2890 = 1;\n                *(*0x20 + -0xa8) = 0x41f905;\n                fcn.00436620();\n                dVar7 = *(*0x20 + -0x68);\n                iVar3 = *(*0x20 + -0x58);\n                goto code_r0x0041f7aa;\n            }\n            if (*0x626798 <= uVar5) {\n                if (dVar8 < *0x4ee578) {\n                    dVar8 = *0x4ee578;\n                }\n                *(*0x20 + -0x50) = dVar8;\n                *(*0x20 + -0xa8) = 0x41f80f;\n                iVar3 = fcn.0041f520(dVar7, dVar8 / dVar7);\n                iVar2 = *(*0x20 + -0x58);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0xa8) = 0x41f87e;\n                    cVar1 = fcn.0041f220(*(*0x20 + -0x50) / (*0x626650 * (iVar3 + *(*0x20 + -0x50))));\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0xa8) = 0x41f89c;\n                        fcn.0040ab40();\n                        *0x5d28a4 = 1;\n                        *(*0x20 + -0xa8) = 0x41f8b1;\n                        fcn.0040ad60();\n                        iVar3 = 5000000000;\n                        dVar7 = *0x4ee4e8;\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x58);\n                        dVar7 = extraout_XMM0_Qa;\n                    }\n                }\n                else {\n                    param_2 = *(*0x20 + -0x50) + iVar3;\n                    iVar3 = iVar2 - param_2;\n                    if (iVar2 < param_2) {\n                        iVar3 = 0;\n                    }\n                    dVar7 = *(*0x20 + -0x68);\n                }\n                goto code_r0x0041f7aa;\n            }\n            *(*0x20 + -0xa8) = 0x41fa7c;\n            fcn.00433ce0();\ncode_r0x0041fa80:\n            *(*0x20 + -0xa8) = 0x41fa85;\n            in_RAX = fcn.00432260();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41fa90;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2212
    },
    "0041fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fca0(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41fcca;\n            fcn.00435480();\n            unaff_RBX = *0x6282c0;\n            if (*0x6282b0 - *0x6282c0 != 0) {\n                *(*0x20 + -0x10) = *0x6282c0;\n                *(*0x20 + -0x18) = (*0x6282b8 * 100) / (*0x6282b0 - *0x6282c0);\n                *(*0x20 + -0x30) = 0x41fd0d;\n                fcn.00435480();\n                *(*0x20 + -0x30) = 0x41fd1e;\n                fcn.00435d80();\n                *(*0x20 + -0x30) = 0x41fd29;\n                fcn.00435a80();\n                *(*0x20 + -0x30) = 0x41fd2e;\n                fcn.004356a0();\n                *(*0x20 + -0x30) = 0x41fd3c;\n                fcn.00435a80();\n                *(*0x20 + -0x30) = 0x41fd4d;\n                fcn.00435d80();\n                *(*0x20 + -0x30) = 0x41fd5b;\n                fcn.00435a80();\n                *(*0x20 + -0x30) = 0x41fd6c;\n                fcn.00435d80();\n                *(*0x20 + -0x30) = 0x41fd76;\n                fcn.00435a80();\n                *(*0x20 + -0x30) = 0x41fd87;\n                fcn.00435d80();\n                *(*0x20 + -0x30) = 0x41fd8c;\n                fcn.00435500();\n                if (*(*0x20 + 0x18) == '\\0') {\n                    if (*0x5d28a4 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41fda5;\n                        fcn.00435480();\n                        *(*0x20 + -0x30) = 0x41fdb6;\n                        fcn.00435d80();\n                        *(*0x20 + -0x30) = 0x41fdbb;\n                        fcn.00435500();\n                        *0x5d28a4 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41fdc9;\n                    fcn.00435480();\n                    *(*0x20 + -0x30) = 0x41fdda;\n                    fcn.00435d80();\n                    *(*0x20 + -0x30) = 0x41fddf;\n                    fcn.00435500();\n                }\n                *(*0x20 + -0x30) = 0x41fde5;\n                fcn.00435480();\n                *(*0x20 + -0x30) = 0x41fdea;\n                fcn.004356e0();\n                *(*0x20 + -0x30) = 0x41fdef;\n                fcn.00435500();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41fe17;\n                    fcn.0040ad60();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41fe26;\n            iVar2 = *0x6282b8;\n            in_EAX = fcn.00432260();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41fe39;\n        fcn.0045c800();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1230
    },
    "0041fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fe60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n    }\n    fcn.0040ab40();\n    if (0 < *0x626ac8) {\n        fcn.0041fca0(0);\n    }\n    fcn.0042c660();\n    fcn.0042c420();\n    *(in_RAX + 0x100f0) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e8) = *(in_RAX + 0x100e8) + 1;\n    *(in_RAX + 0x100f8) = 0;\n    *(in_RAX + 0x10108) = *0x55c3d0;\n    *(in_RAX + 0x10100) = *0x55c3b0;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 282
    },
    "004201e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004202dc)\n\nint64_t fcn.004201e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        iVar2 = arg1;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar2 = 0;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                uVar3 = *0x626798 >> 0xd;\n                if (uVar3 == 0) {\n                    uVar3 = 1;\n                }\n                *(*0x20 + -0x48) = uVar3;\n                uVar3 = unaff_RDI >> 0xd;\n                if ((unaff_RDI & 0x1fff) != 0) {\n                    uVar3 = (unaff_RDI >> 0xd) + 1;\n                }\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x80) = 0x420285;\n                iVar2 = fcn.00420620(arg1);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x4204a0;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + -0x48);\n                *(*0x20 + -0x10) = unaff_RDI;\n                if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                    iVar2 = arg1 - unaff_RBX;\n                }\n                else {\n                    iVar2 = 0;\n                }\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x80) = 0x42035b;\n                uVar1 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                if (arg1 == '\\0') {\n                    return 0;\n                }\n                *(*0x20 + -0x38) = uVar1;\n                *(*0x20 + -0x80) = 0x420385;\n                fcn.0040ab40();\n                if (*(*0x20 + -0x38) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x80) = 0x4203cf;\n                    uVar1 = fcn.00420d00(*(*0x20 + -0x48));\n                    *(*0x20 + -0x50) = 0x1ff;\n                    *(*0x20 + -0x80) = 0x4203f5;\n                    uVar1 = fcn.00420800(uVar1);\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x80) = 0x420412;\n                    fcn.0040ad60();\n                    return *(*0x20 + -0x50) << 0xd;\n                }\n                iVar2 = 0x2000;\n                *(*0x20 + -0x80) = 0x420450;\n                fcn.0045ef00(0x2000);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x80) = 0x420465;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = iVar2;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42047f;\n        fcn.00460f20();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1234
    },
    "00420800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00420800(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX * 0x400000 + arg1 * 0x2000;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x28) = iVar3 + -0x800000000000;\n            *(*0x20 + -0x50) = 0x42085a;\n            arg1 = unaff_RDI;\n            iVar3 = fcn.00427760(unaff_RDI);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x50) = 0x42087b;\n                fcn.0040ad60();\n                *(*0x20 + -0x10) = *(*0x20 + 8) + 0x100b8;\n                *(*0x20 + -0x50) = 0x420892;\n                fcn.0040ab40();\n                if (*(*0x20 + -0x18) < *(*(*0x20 + 8) + 0x10100) + 0x800000000000U) {\n                    *(*(*0x20 + 8) + 0x10100) = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x4208ca;\n                fcn.0040ad60();\n                if (*(*(*0x20 + 8) + 0x10120) == '\\0') {\n                    *(*0x20 + -0x50) = 0x4208eb;\n                    fcn.00415d80();\n                    iVar3 = *0x6282c0;\n                    *(*0x20 + -0x20) = *(*0x20 + 0x20) * 0x2000;\n                    LOCK();\n                    *0x6282c0 = *0x6282c0 + *(*0x20 + 0x20) * 0x2000;\n                    *(*0x20 + -0x50) = 0x420911;\n                    piVar4 = fcn.0042cda0(iVar3);\n                    iVar3 = *(*0x20 + -0x20);\n                    LOCK();\n                    iVar1 = *piVar4;\n                    *piVar4 = *piVar4 - iVar3;\n                    LOCK();\n                    piVar4 = piVar4 + 1;\n                    iVar2 = *piVar4;\n                    *piVar4 = *piVar4 + iVar3;\n                    *(*0x20 + -0x50) = 0x420933;\n                    fcn.0042ce80(iVar1, iVar2);\n                }\n                *(*0x20 + -0x50) = 0x420945;\n                fcn.0040ab40();\n                unaff_RDI = 1;\n                *(*0x20 + -0x50) = 0x42095e;\n                fcn.00428c20(*(*0x20 + 0x20));\n                if (*(*0x20 + 0x10) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x50) = 0x42099f;\n                    fcn.00429ec0(*(*0x20 + 0x20));\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0x2000;\n                *(*0x20 + -0x50) = 0x4209b8;\n                fcn.0045ef00(0x2000);\n            }\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x50) = 0x4209c9;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4209e5;\n        fcn.00460f20();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1233
    },
    "00420a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00420a00(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x00420b46;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x00420b46:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x00420b46;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x00420b46;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x00420b46;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x00420b46;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x420b85;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x420b95;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 858
    },
    "00421180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00421180(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00421180:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x421278;\n                    fcn.00423a60(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0042123b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x42120f;\n                    fcn.00423a60(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0042123b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x004212a6;\ncode_r0x0042123b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x4212a5;\n    in_RAX = fcn.0045eee0(0xfc);\ncode_r0x004212a6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x4212b0;\n    fcn.0045c800();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x00421180;\n}\n",
        "token_count": 909
    },
    "00421580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004216b6)\n// WARNING: Removing unreachable block (ram,0x00421683)\n\nint64_t fcn.00421580(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10130);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x5d28e0;\ncode_r0x004215c1:\n            if (0x10f < uVar3) {\n                if (*0x5d28e0 != 0xffffffff) {\n                    LOCK();\n                    *0x5d28e0 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x00421706;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x004216fa;\n                *(*0x20 + -0x28) = 0x42162a;\n                iVar1 = fcn.0042c8e0();\ncode_r0x00421660:\n                if (iVar1 != 0) {\n                    if (*0x5d28e0 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x5d28e0 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x004215c1;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x421657;\n                iVar1 = fcn.0042c8e0();\n                goto code_r0x00421660;\n            }\n            *(*0x20 + -0x28) = 0x4216fa;\n            fcn.0045eee0(2);\ncode_r0x004216fa:\n            *(*0x20 + -0x28) = 0x421706;\n            fcn.0045eee0(2);\ncode_r0x00421706:\n            *(*0x20 + -0x28) = 0x421713;\n            in_RAX = fcn.0045eee0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x42171e;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 803
    },
    "00421740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00421740(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5f8a10 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x626ab0) {\n                                *(*0x20 + -0x28) = *0x5f8a38;\n                                *(*0x20 + -0x10) = *0x626f58;\n                                *(*0x20 + -0x18) = *0x5f8a48;\n                                *(*0x20 + -0x20) = *0x5f8a50;\n                                *(*0x20 + -0x40) = 0x4217f0;\n                                arg2 = *0x5f8a48;\n                                fcn.00435480();\n                                *(*0x20 + -0x40) = 0x421805;\n                                fcn.00435d80();\n                                *(*0x20 + -0x40) = 0x421813;\n                                fcn.00435a80();\n                                *(*0x20 + -0x40) = 0x421825;\n                                fcn.00435d80();\n                                noname_0 = *(*0x20 + -0x18);\n                                *(*0x20 + -0x40) = 0x42183b;\n                                fcn.00435a80();\n                                *(*0x20 + -0x40) = 0x42184c;\n                                fcn.00435d80();\n                                *(*0x20 + -0x40) = 0x421856;\n                                fcn.00435a80();\n                                *(*0x20 + -0x40) = 0x421867;\n                                fcn.00435d80();\n                                *(*0x20 + -0x40) = 0x421872;\n                                fcn.00435780(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x421885;\n                                fcn.00435d80();\n                                *(*0x20 + -0x40) = 0x42188a;\n                                uVar2 = fcn.00435500();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x4218af;\n                fcn.00433ce0();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x4218c5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x4218d8;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 979
    },
    "00421900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00421900(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x421925;\n                iVar2 = fcn.00421c80();\n                if (iVar2 == -1) break;\n                *0x5d28d8 = *0x5d28d8 + 1;\n            }\n            if ((*0x5d28dc & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x5f8a10;\n                iVar2 = 0;\n                uVar1 = *0x5f8a10;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x4219cd;\n                        fcn.0041f480();\n                        *(*0x20 + -0x40) = 0x4219d2;\n                        fcn.00426c20();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x42197a;\n                    fcn.0042ca20(0x5f8d18);\n                    *(*0x20 + -0x40) = 0x42199c;\n                    fcn.0042ca20(*(*0x20 + -0x10) + 0x5f8d70);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x4219e8;\n                fcn.0045eee0(2);\n            }\n            *(*0x20 + -0x40) = 0x4219f9;\n            fcn.00433ce0();\n        }\n        *(puVar4 + -8) = 0x4219ff;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "00421a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421a20(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = unaff_R14;\n    if (*0x626890 != 0) {\n        fcn.0045eb40();\n        iVar2 = *0x5d28c8;\n    }\n    *0x5d28c8 = iVar2;\n    fcn.0040ab40();\n    *0x5d28d0 = 1;\n    fcn.00404e60();\n    fcn.00436620();\n    do {\n        while (iVar2 = fcn.00421c80(),  iVar2 != -1) {\n            *0x5d28d4 = *0x5d28d4 + 1;\n            fcn.0045c640();\n        }\n        while (cVar1 = fcn.00423d80(),  cVar1 != '\\0') {\n            fcn.0045c640();\n        }\n        fcn.0040ab40();\n        if (*0x5d28dc == -0x80000000) {\n            *0x5d28d0 = 1;\n            fcn.00436620();\n        }\n        else {\n            fcn.0040ad60();\n        }\n    } while( true );\n}\n",
        "token_count": 343
    },
    "00421b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421b80(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x421bf4;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x421c05;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 416
    },
    "00421c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421cc5)\n// WARNING: Removing unreachable block (ram,0x00421db6)\n\nulong fcn.00421c80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar7 = *0x5d28dc & 0x80000000;\n            if (uVar7 == 0) {\n                *0x5d28dc = *0x5d28dc + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x5f8a10;\n            *(*0x20 + -0x24) = uVar7 == 0;\n            if (uVar7 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x00421d11:\n            do {\n                *(*0x20 + -0x50) = 0x421d1d;\n                iVar5 = fcn.00421580();\n                if (iVar5 == 0) {\n                    uVar7 = *0x5d28dc & 0x80000000;\n                    if (uVar7 == 0) {\n                        *0x5d28dc = *0x5d28dc | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar7 == 0;\n                    iVar5 = -1;\ncode_r0x00421dd1:\n                    *(*0x20 + -0x32) = bVar9;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x50) = 0x421def;\n                    fcn.00421740(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x32) != '\\0') {\n                        *(*0x20 + -0x48) = 0x4d2ae0;\n                        *(*0x20 + -0x50) = 0x421e08;\n                        fcn.0045c6c0();\n                        *0x5d28a0 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x421d52;\n                    iVar6 = fcn.00421b80();\n                    *(*0x20 + -0x20) = iVar6;\n                    if (iVar5 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar6 + 0x20);\n                        *(*0x20 + -0x50) = 0x421d70;\n                        cVar4 = fcn.00422040();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x5f8a68 = *0x5f8a68 + iVar5;\n                        }\n                        bVar9 = false;\n                        goto code_r0x00421dd1;\n                    }\n                    goto code_r0x00421d11;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x31) = *(iVar5 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x421e5a;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x421e6b;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x421e78;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x421e89;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x421e92;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x421ea5;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x421eae;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x421eb3;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x421eb8;\n            fcn.00435500();\n            *(*0x20 + -0x50) = 0x421ec9;\n            fcn.00433ce0();\n        }\n        *(puVar8 + -8) = 0x421ecf;\n        fcn.0045c800();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1445
    },
    "00421ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421f1c)\n\nvoid fcn.00421ee0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x5d28dc & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x5d28dc = *0x5d28dc + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x5f8a10;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x421f7d;\n                    uVar2 = fcn.00421b80();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x421fae;\n                        fcn.00422040();\n                        *(*0x20 + -0x38) = 0x421fc5;\n                        fcn.00421740(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x421f9b;\n                    fcn.00421740();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x4d2ae8;\n                    *(*0x20 + -0x38) = 0x421fdf;\n                    fcn.0045c6c0();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x422028;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422033;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 770
    },
    "00422f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422f00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5f8a50 == 0.0) {\n        return;\n    }\n    if (*0x5d8810 != '\\0') {\n        fcn.004525e0();\n    }\n    do {\n        iVar1 = *0x5f8a40;\n        uVar3 = (*0x626f58 - *0x5f8a48) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x5f8a50 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x5f8a38 - iVar1) {\ncode_r0x00423019:\n                if (*0x5d8810 != '\\0') {\n                    fcn.004526e0();\n                }\n                return;\n            }\n            iVar2 = fcn.00421c80(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x5f8a50 = 0.0;\n                goto code_r0x00423019;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x5f8a40 == iVar1);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "00423160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423160(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x4231f5;\n                fcn.00423100();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x4231b9;\n                    fcn.00423ac0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x4231c7;\n                    iVar2 = fcn.004237e0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x62664c == 1)) {\n                    *(*0x20 + -0x28) = 0x423233;\n                    fcn.0041e8a0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x423247;\n            in_RAX = fcn.0045eee0(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x423257;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 789
    },
    "00423280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423280(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x4232c6;\n                fcn.00423100();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x62664c == 1)) {\n                        *(*0x20 + -0x58) = 0x4233c5;\n                        fcn.0041e8a0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x4233d7;\n                    fcn.00423ac0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x4233e5;\n                    iVar3 = fcn.004237e0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00423426;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x423378;\n                    fcn.0045f840(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x423426;\n            fcn.0045efa0(arg1);\ncode_r0x00423426:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x423433;\n            in_RAX = fcn.0045efa0(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42344d;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1371
    },
    "00423480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00423480(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x4234aa;\n                fcn.00423100();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x4234db;\n                    iVar3 = fcn.00423b20();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x4234f4;\n                    fcn.00423a60();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x423545;\n            in_RAX = fcn.0045eee0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423550;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00423560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00423560(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00423a60();\n        }\n        else {\n            fcn.00423ac0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00423a60();\n        }\n        else {\n            fcn.00423ac0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x5d2c60 = *0x5d2c60 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x626f90;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x626f90 = *0x626f90 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 373
    },
    "00423660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423660(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.00423bc0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.00423ac0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.004237e0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x62664c == 1) {\n            fcn.0041e8a0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00423720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423720(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423756;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x423765;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 261
    },
    "00423780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423780(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4237b6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4237c5;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 265
    },
    "004237e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004237e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d2be8 == 0) {\n        piVar1 = NULL;\n        goto code_r0x00423809;\n    }\n    while( true ) {\n        if (*0x5d2be8 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x5d2be8 >> 0x13) << 3;\n            *0x5d2be8 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00423780();\n            piVar1 = piStack32;\n        }\ncode_r0x00423809:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x5d2c38 != 0) {\n            fcn.0040ab40();\n            iStack72 = *0x5d2c38;\n            if (*0x5d2c38 != 0) {\n                fcn.00425d20();\n                fcn.00425ea0();\n            }\n            fcn.0040ad60();\n        }\n        if (iStack72 != 0) goto code_r0x004238fe;\n        auStack24 = CONCAT88(&iStack72, 0x423a00);\n        fcn.0045c6c0();\n        if (iStack72 != 0) break;\n        fcn.00433ce0();\n    }\n    fcn.0040ab40();\n    fcn.00425ea0();\n    fcn.0040ad60();\ncode_r0x004238fe:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.0040aa40();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00423a60();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 670
    },
    "00423c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423c80(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x423ca5;\n            fcn.0040ab40();\n            if (*0x5d2be0 == 0) {\n                *0x5d2be8 = 0;\n                if (*0x5d2c48 != NULL) {\n                    for (; *0x5d2c48 != NULL; *0x5d2c48 = **0x5d2c48) {\n                        (*0x5d2c48)[2] = 0x5d2c38;\n                    }\n                    if (*0x5d2c38 == 0) {\n                        *0x5d2c38 = *0x5d2c48;\n                        *0x5d2c40 = *0x5d2c50;\n                        *0x5d2c48 = in_XMM15;\n                    }\n                    else {\n                        **0x5d2c50 = *0x5d2c38;\n                        *(*0x5d2c38 + 8) = *0x5d2c50;\n                        *0x5d2c38 = *0x5d2c48;\n                        *0x5d2c48 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x423cd8;\n                fcn.0040ad60();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423d6b;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x423d71;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 526
    },
    "00423d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00423d80(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if ((*0x62664c == 0) && (*0x5d2c38 != 0)) {\n        fcn.0045c6c0();\n        uVar1 = *0x5d2c38;\n        fcn.0040ad60();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040ad60();\n    return 0;\n}\n",
        "token_count": 184
    },
    "004240e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004240e1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "00424181": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00424181(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "00424380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00424380(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10180)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x5d8810 != '\\0') {\n        fcn.004525e0();\n    }\n    arg1 = *(in_RAX + 0x103f8);\n    bVar6 = false;\ncode_r0x0042442d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00424538:\n            if (bVar6) {\n                fcn.0040ad60();\n            }\n            if (*0x5d8810 != '\\0') {\n                fcn.004526e0();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10188);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10188;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x0042442d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10180;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10180) = 0x8000000000000000;\n            goto code_r0x00424538;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040ab40();\n        }\n        uVar7 = fcn.004245c0(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10188) = *(in_RAX + 0x10188) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 853
    },
    "004245c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004245f2)\n\nulong fcn.004245c0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar8 = unaff_RSI;\n        uVar11 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x5d28dc & 0x80000000;\n            if (uVar6 == 0) {\n                *0x5d28dc = *0x5d28dc + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x5f8a10;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x424770;\n                    fcn.00421740(*(*0x20 + -0x84));\n                    if (*0x5d8810 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x424785;\n                        fcn.0040ad60();\n                        *(*0x20 + -0xa8) = 0x42479e;\n                        fcn.00452640(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x4247aa;\n                        fcn.0040ab40();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar8 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar11 = arg3;\n                if (arg1 <= uVar8) goto code_r0x0042497f;\n                uVar9 = *(unaff_RBX + uVar8 * 8);\n                uVar8 = uVar9 >> 0x14;\n                if (0x3f < uVar8) goto code_r0x00424972;\n                uVar8 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (uVar9 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar9 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar11 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar8 + uVar11 + 0x21000;\n                iVar12 = uVar8 + uVar11 + 0x21040;\n                uVar11 = arg3 >> 3;\n                if (-iVar1 < uVar11 || -uVar11 == iVar1) {\n                    uVar11 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar11;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x38) = uVar9;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar12;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar13 = 0; uVar13 < uVar11; uVar13 = uVar13 + 1) {\n                    *(*0x20 + -0x10) = unaff_RDI + uVar13;\n                    if (uVar11 <= uVar13) {\ncode_r0x0042495a:\n                        *(*0x20 + -0xa8) = 0x424965;\n                        fcn.0045eee0(uVar11);\n                        goto code_r0x00424965;\n                    }\n                    uVar10 = *(unaff_RDI + uVar13) & ~*(uVar13 + iVar12);\n                    if (uVar10 != 0) {\n                        *(*0x20 + -0x60) = uVar13;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar10) != 0) {\n                                uVar9 = uVar9 + uVar13 * 8 + uVar5;\n                                if (0x1ff < uVar9) {\n                                    *(*0x20 + -0xa8) = 0x42495a;\n                                    fcn.0045ef00(0x200);\n                                    goto code_r0x0042495a;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar10;\n                                uVar2 = *(uVar8 + 0x20000 + uVar9 * 8);\n                                *(*0x20 + -0xa8) = 0x42486e;\n                                iVar4 = fcn.00421b80();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x4248ae;\n                                    fcn.0040ad60();\n                                    *(*0x20 + -0xa8) = 0x4248ba;\n                                    uVar3 = fcn.00422040();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x4248ca;\n                                    fcn.0040ab40();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    uVar10 = ~*(*(*0x20 + -0x60) + *(*0x20 + -0x20)) & **(*0x20 + -0x10);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar11 = *(*0x20 + -0x68);\n                                uVar9 = *(*0x20 + -0x38);\n                                iVar12 = *(*0x20 + -0x20);\n                                uVar13 = *(*0x20 + -0x60);\n                                uVar8 = *(*0x20 + -0x58);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar11 * 8;\n                arg3 = arg3 + uVar11 * -8;\n            }\ncode_r0x00424965:\n            *(*0x20 + -0xa8) = 0x424972;\n            fcn.0045efc0(0x40);\ncode_r0x00424972:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x42497f;\n            fcn.0045ef00(0x40);\ncode_r0x0042497f:\n            *(*0x20 + -0xa8) = 0x424987;\n            in_RAX = fcn.0045ef00(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = uVar8;\n        *(puVar7 + 0x30) = uVar11;\n        *(puVar7 + -8) = 0x4249ab;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2394
    },
    "00424de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424de0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00424e37;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00424e37:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045eee0(0x80);\n            }\n            uVar3 = fcn.00417440(iVar2 + 0x16a38);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00417440();\n    return uVar3;\n}\n",
        "token_count": 461
    },
    "00425ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425ea0(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x425f1d;\n            fcn.00435480();\n            *(*0x20 + -0x38) = 0x425f2e;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425f38;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425f3d;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425f47;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425f4c;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425f56;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425f5b;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425f65;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425f6a;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425f6f;\n            fcn.00435500();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425f85;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425f95;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 820
    },
    "00425fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425fc0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x425fe7;\n            iVar6 = fcn.00424180();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x42600e;\n                fcn.00421ee0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x42603e;\n                fcn.0040ab40();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x426093;\n                        fcn.0040ad60();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x5f8a70) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x426165;\n                        fcn.0040ad60();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x4261ab;\n                    fcn.0045ef00(0x40);\n                }\n                *(*0x20 + -0x48) = 0x4261b8;\n                fcn.0045ef00(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x4261c9;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x4261d9;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1419
    },
    "00426200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00426200(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x426226;\n            iVar4 = fcn.00424180();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x42624d;\n                fcn.00421ee0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x42626f;\n                fcn.0040ab40();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x004262b0;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x004262b0:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00426339;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x5f8a70) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00426339:\n                        *(*0x20 + -0x48) = 0x426345;\n                        fcn.0040ad60();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x42638b;\n                    fcn.0045ef00(0x40);\n                }\n                *(*0x20 + -0x48) = 0x426398;\n                fcn.0045ef00(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x4263a9;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x4263b8;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1204
    },
    "004263e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004263e0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    puVar5 = fcn.00417440();\n    fcn.0040ad60();\n    *(puVar5 + 10) = 1;\n    if (*0x626890 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.0045eb40(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x626890 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045eb60(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.0045eb40(uStack0000000000000028);\n    }\n    cVar4 = fcn.00425fc0();\n    if (cVar4 != '\\0') {\n        if (*0x62664c != 0) {\n            fcn.00412200(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041d0a0();\n            fcn.0041cf00(0x55c280);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040ab40();\n    *0x5ff3d8 = *0x5ff3d8 - *0x5ff3a8;\n    *puVar5 = *0x5ff3c0;\n    *0x5ff3c0 = puVar5;\n    fcn.0040ad60();\n    return 0;\n}\n",
        "token_count": 652
    },
    "00426da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426da0(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x55d880 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x626890 == 0) {\n                    *(in_RAX + 0x10118) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x426def;\n                    in_RAX = fcn.0045eb40();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x426e06;\n                fcn.0042bb60();\n                *(*0x20 + -0x28) = 0x426e10;\n                fcn.004290a0();\n                arg1_00 = *0x55c3b8;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x55c3b8;\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x10110) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x426e4b;\n                    fcn.0045ea40(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x10100) = *0x55c3b8;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x55d880;\n            *(*0x20 + -0x28) = 0x426e6d;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x426e7e;\n            fcn.00435d80();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x426e9a;\n            fcn.00435b80(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x426e9f;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x426ea5;\n            fcn.00435500();\n            *(*0x20 + -0x28) = 0x426eaa;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x426ebb;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x426ec5;\n            fcn.00435b80();\n            *(*0x20 + -0x28) = 0x426eca;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x426ecf;\n            fcn.00435500();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x426ee5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x426efa;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1004
    },
    "00427b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00427b20(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10120) != '\\0') goto code_r0x00427b92;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x5f8a70);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00427b92:\n                *(*0x20 + -0x20) = 0x427b9d;\n                iVar1 = fcn.0042bd20();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x55c3b0;\n            }\n            *(*0x20 + -0x20) = 0x427bcc;\n            in_RAX = fcn.0045ef00(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x427bdc;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 520
    },
    "00428960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00428960(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00428a79;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00428a79:\n                    *(*0x20 + -0x40) = 0x428a7e;\n                    iVar2 = fcn.00427c00();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x55c3b8;\n                        }\n                        return 0;\n                    }\ncode_r0x00428ab8:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x428ad4;\n                    fcn.00427760(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x428a45;\n                    iVar2 = fcn.0042a500(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00428ab8;\n                    }\n                    *(*0x20 + -0x40) = 0x428b27;\n                    fcn.00435480();\n                    *(*0x20 + -0x40) = 0x428b38;\n                    fcn.00435d80();\n                    *(*0x20 + -0x40) = 0x428b45;\n                    fcn.00435a80();\n                    *(*0x20 + -0x40) = 0x428b56;\n                    fcn.00435d80();\n                    *(*0x20 + -0x40) = 0x428b65;\n                    fcn.00435a80();\n                    *(*0x20 + -0x40) = 0x428b6a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428b6f;\n                    fcn.00435500();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x428b85;\n                    fcn.00435480();\n                    *(*0x20 + -0x40) = 0x428b96;\n                    fcn.00435d80();\n                    *(*0x20 + -0x40) = 0x428ba9;\n                    fcn.00435a80();\n                    *(*0x20 + -0x40) = 0x428bba;\n                    fcn.00435d80();\n                    *(*0x20 + -0x40) = 0x428bc5;\n                    fcn.00435be0();\n                    *(*0x20 + -0x40) = 0x428bca;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428bcf;\n                    fcn.00435500();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x428be5;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x40) = 0x428bf2;\n                fcn.0045ef00(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x428bfd;\n            in_RAX = fcn.0045ef00(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x428c0d;\n        fcn.00460f20();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1564
    },
    "00428c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428c20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    char unaff_DIL;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = unaff_RBX + 0x800000000000;\n            if (uVar7 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            iVar1 = unaff_RBX + arg1 * 0x2000;\n            iVar3 = arg1 * 0x2000 + unaff_RBX + -1;\n            if ((unaff_DIL == '\\0') && (*(in_RAX + 0x10108) + 0x800000000000U < iVar1 + 0x7fffffffffffU)) {\n                *(in_RAX + 0x10108) = iVar3;\n            }\n            if (arg1 == 1) break;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = uVar7 >> 0x16;\n            uVar5 = iVar1 + 0x7fffffffffff;\n            uVar8 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar10 = (iVar3 & 0x3fffff) >> 0xd;\n            if (uVar8 == uVar9) {\n                uVar7 = uVar7 >> 0x23;\n                if (uVar7 < 0x2000) {\n                    *(*0x20 + -0x58) = 0x428d94;\n                    fcn.00429fc0((uVar10 - unaff_RBX) + 1);\n                    goto code_r0x00428e29;\n                }\n                *(*0x20 + -0x58) = 0x428e47;\n                fcn.0045ef00(0x2000);\n                uVar5 = uVar9;\ncode_r0x00428e4b:\n                while( true ) {\n                    uVar10 = uVar5 + 1;\n                    if (uVar8 <= uVar10) {\n                        if (0x1fff < *(*0x20 + -0x18) >> 0x23) {\n                            *(*0x20 + -0x58) = 0x428ec5;\n                            iVar3 = fcn.0045ef00(0x2000);\n                            goto code_r0x00428ec5;\n                        }\n                        *(*0x20 + -0x58) = 0x428eb1;\n                        fcn.00429fc0(*(*0x20 + -0x28) + 1);\n                        goto code_r0x00428e29;\n                    }\n                    if (0x1fff < uVar10 >> 0xd) break;\n                    uVar5 = (uVar10 & 0x1fff) * 0x80 + *(uVar7 + 0x78 + (uVar10 >> 0xd) * 8);\n                    uVar9 = uVar10;\n                    for (iVar3 = 0; uVar10 = uVar5,  uVar5 = uVar9,  iVar3 < 8; iVar3 = iVar3 + 1) {\ncode_r0x00428ec5:\n                        *(uVar10 + iVar3 * 8) = 0;\n                        uVar5 = uVar10;\n                    }\n                }\n                *(*0x20 + -0x58) = 0x428ee5;\n                fcn.0045ef00(0x2000);\n            }\n            else if (uVar7 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar5;\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x28) = uVar10;\n                *(*0x20 + -0x30) = uVar9;\n                uVar9 = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x58) = 0x428d48;\n                fcn.00429fc0(-(unaff_RBX - 0x200));\n                uVar7 = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x30);\n                goto code_r0x00428e4b;\n            }\n            unaff_DIL = uVar8;\n            arg1 = 0x2000;\n            *(*0x20 + -0x58) = 0x428ef2;\n            in_RAX = fcn.0045ef00(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        puVar6[0x20] = unaff_DIL;\n        *(puVar6 + -8) = 0x428f0c;\n        fcn.00460f20();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_DIL = puVar6[0x20];\n        *0x20 = puVar6;\n    } while( true );\n    if (uVar7 >> 0x23 < 0x2000) {\n        uVar4 = unaff_RBX & 0x3fffff;\n        uVar5 = uVar4 >> 0x13;\n        if (uVar5 < 8) {\n            puVar2 = (uVar7 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar7 >> 0x23) * 8) + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 >> 0xd & 0x3f));\n            goto code_r0x00428df5;\n        }\n        *(*0x20 + -0x58) = 0x428e1c;\n        fcn.0045ef00(8);\n    }\n    *(*0x20 + -0x58) = 0x428e29;\n    fcn.0045ef00(0x2000);\ncode_r0x00428e29:\n    arg1 = *(*0x20 + -0x10);\ncode_r0x00428df5:\n    *(*0x20 + -0x58) = 0x428e05;\n    fcn.00427180(arg1);\n    return;\n}\n",
        "token_count": 1748
    },
    "004290a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004290a0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x55d8c0;\n            *(*0x20 + -0x28) = *0x55d8c8;\n            *(*0x20 + -0x24) = *0x55d8cc;\n            *(*0x20 + -0x20) = *0x55d8d0;\n            *(*0x20 + -0x1c) = *0x55d8d4;\n            *(*0x20 + -0x18) = *0x55d8d8;\n            *(*0x20 + -0x14) = *0x55d8dc;\n            *(*0x20 + -0x10) = *0x55d8e0;\n            *(*0x20 + -0xc) = *0x55d8e4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x42913d;\n                iVar3 = fcn.00416300(arg1, *0x626798 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x626890 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4291ad;\n                    fcn.0045eb60(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x4291cd;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4291d8;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 938
    },
    "004297c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004297c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00429880();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "004299c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004299c0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uchar (*pauVar3) [16];\n    int64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004299c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar2 = *in_RAX;\n        uVar8 = iVar2 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar8;\n        uVar7 = uVar8 >> 0x16;\n        *(*0x20 + -0x18) = uVar7;\n        uVar5 = (iVar2 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar5;\n        uVar4 = 0;\n        do {\n            if (0x3f < uVar4) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x429b6c;\n                fcn.00427180(0x40);\n                pauVar3 = *(*0x20 + 8);\n                *pauVar3 = in_XMM15;\n                *pauVar3[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x00429ba5;\n                uVar9 = uVar5 + uVar4 >> 6;\n                if (7 < uVar9) goto code_r0x00429b94;\n                puVar1 = (uVar7 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar8 >> 0x23) * 8) + uVar9 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar5 + uVar4 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x00429b87;\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x50) = 0x429b0b;\n                fcn.00429ec0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar4 = *(*0x20 + -0x28);\n                uVar8 = *(*0x20 + -0x10);\n                uVar7 = *(*0x20 + -0x18);\n            }\n            uVar4 = uVar4 + 1;\n        } while( true );\n    }\n    goto code_r0x00429bb3;\ncode_r0x00429b87:\n    *(*0x20 + -0x50) = 0x429b94;\n    fcn.0045ef00(0x2000);\ncode_r0x00429b94:\n    *(*0x20 + -0x50) = 0x429ba5;\n    fcn.0045ef00(8);\ncode_r0x00429ba5:\n    *(*0x20 + -0x50) = 0x429bb2;\n    in_RAX = fcn.0045ef00(0x2000);\ncode_r0x00429bb3:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x429bc5;\n    fcn.00460f20();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x004299c0;\n}\n",
        "token_count": 1195
    },
    "00429ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429ec0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar5 & 0x3f);\n            return;\n        }\n        uVar7 = (arg1 + unaff_RBX) - 1;\n        uVar8 = uVar7 >> 6;\n        if (uVar8 == uVar6) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f);\n            return;\n        }\n        if (uVar8 < 8) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar5 & 0x3f);\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar8) {\n                *(in_RAX + uVar6 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar7 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar8 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045ef00(8);\n    }\n    uVar8 = 8;\n    iVar4 = fcn.0045ef00(8);\n    uVar7 = unaff_RBX >> 0xc;\n    if (uVar7 < 8) {\n        uVar5 = uVar6;\n        if (uVar8 == 1) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar6 = (uVar8 + uVar6) - 1;\n        uVar9 = uVar6 >> 6;\n        if (uVar9 == uVar7) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~((1 << (uVar8 & 0x3f) & -(uVar8 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar9 < 8) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar7 = uVar7 + 1,  uVar7 < uVar9) {\n                *(iVar4 + uVar7 * 8) = 0;\n            }\n            uVar1 = (uVar6 & 0x3f) + 1;\n            puVar2 = iVar4 + uVar9 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045ef00(8);\n    }\n    fcn.0045ef00(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 938
    },
    "00429fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429fc0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar7 = uVar2 >> 6;\n        if (uVar7 == uVar6) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar7 < 8) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar7) {\n                *(in_RAX + uVar6 * 8) = 0;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar7 * 8;\n            *puVar3 = *puVar3 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045ef00(8);\n    }\n    fcn.0045ef00(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 510
    },
    "0042a0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a0e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x42a227;\n                in_RAX = fcn.0045ef00(8);\n                goto code_r0x0042a227;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x626615 == 0) {\n                        *(*0x20 + -0x40) = 0x42a1e5;\n                        uVar4 = fcn.00401d00();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x626615 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x42a178;\n                        in_R8 = fcn.00401d00();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x626615;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x42a253;\n                            in_R9 = fcn.00401d00();\n                            in_RDX = *0x626615;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x0042a227:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x42a2ae;\n                        iVar3 = fcn.00401d00();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((-(uVar1 < 0x40) & 1 << (uVar1 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x42a2d1;\n                fcn.0045ef00(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x42a2de;\n            in_RAX = fcn.0045ef00(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x42a2f3;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1391
    },
    "0042a500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a500(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.0042a6c0(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.0042a5c0(arg1);\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "0042a880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a880(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x0042a8c3;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x0042a8c3:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42a8d9;\n                iVar1 = fcn.0040cf80(0x628300);\n                *0x6266d0 = *0x6266d0 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x42a912;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a925;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 545
    },
    "0042a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a940(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a985;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a990;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 288
    },
    "0042ad80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ad80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if (*0x626744 == '\\0') {\n        fcn.0042ade0();\n        *0x626744 = '\\x01';\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 125
    },
    "0042b260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b260(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42b2b5;\n            fcn.0045f174();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x42b317;\n                uVar1 = fcn.00455f60(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x42b2ff;\n                uVar1 = fcn.00452f20(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x42b32a;\n            fcn.0040ab40();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x42b426;\n            in_RAX = fcn.0045ef20(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42b445;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x42b35b;\n    uVar1 = fcn.0042aa00(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x42b38a;\n            pdVar2 = fcn.0042a9a0();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x42b3c5;\n            iVar3 = fcn.0042a9a0();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x0042b400;\n        }\n    }\n    *(*0x20 + -0x170) = 0x42b3d8;\n    pdVar2 = fcn.0042a9a0();\n    *pdVar2 = *0x4ee528 + *pdVar2;\n    *(*0x20 + -0x170) = 0x42b3f2;\n    iVar3 = fcn.0042a9a0();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x0042b400:\n    *(*0x20 + -0x170) = 0x42b40c;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 1175
    },
    "0042bb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bb60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040cf80(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x626890 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045ea40(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 243
    },
    "0042cf20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cf20(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x626895 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42cf85;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42cf90;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "0042cfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cfe0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1260) = iVar1 + 0x1270;\n        return;\n    }\n    if ((*0x626895 != '\\0') && (in_RAX != 0)) {\n        fcn.004042a0();\n        if (*0x626894 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1260) = iVar1 + 0x1270;\n            return;\n        }\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 216
    },
    "0042d0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d0a0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1260) - (in_RAX + 0x1270) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1260) = 0;\n                if (*0x626611 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1270 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42d11b;\n                        fcn.0041d660(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42d13e;\n                    fcn.0042cf20();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x1270 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42d185;\n                        iVar3 = fcn.00412200(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042d32d;\n                                iVar2 = *(*(uVar4 * 8 + 0x5f8a70) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x0042d325;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1270 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1248) = *(in_RAX + 0x1248) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42d2fc;\n                    fcn.00423280(arg1);\n                    *(*0x20 + -0x48) = 0x42d30d;\n                    fcn.0042cf20();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42d325;\n                fcn.0045ef60(arg1, 0x200);\ncode_r0x0042d325:\n                *(*0x20 + -0x48) = 0x42d32d;\n                fcn.0045eee0(arg1);\ncode_r0x0042d32d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42d33a;\n                fcn.0045ef00(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42d345;\n            in_RAX = fcn.0045ef40(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42d350;\n        fcn.00460f20();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1575
    },
    "0042d360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d360(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626658 == 0) {\n        fcn.0040ab40();\n        if (*0x626658 == 0) {\n            fcn.0042d7e0();\n            *0x626658 = 1;\n        }\n        fcn.0040ad60();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042d460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d460(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042d476;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042d476:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042d48e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042d48e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042d5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d5a0(char param_1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    int32_t unaff_EBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar4 = in_RAX + 0x18;\n            if (unaff_EBX == 0x77) {\n                puVar4 = in_RAX + 0x20;\n            }\n            do {\n                LOCK();\n                uVar3 = *puVar4;\n                *puVar4 = *puVar4 ^ (uVar3 == 1) * *puVar4;\n                if (uVar3 == 1) {\n                    return 1;\n                }\n                LOCK();\n                uVar3 = *puVar4;\n                *puVar4 = *puVar4 ^ (uVar3 == 0) * (*puVar4 ^ 2);\n                if (uVar3 == 0) {\n                    if (param_1 == '\\0') {\n                        uVar1 = *(in_RAX + 0x10);\n                        if ((uVar1 & 1) == 0) {\n                            if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) ||\n                               ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))) {\n                                uVar3 = 2;\n                            }\n                            else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n                                uVar3 = 3;\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 1;\n                        }\n                        if (uVar3 == 0) goto code_r0x0042d674;\n                    }\n                    else {\ncode_r0x0042d674:\n                        *(*0x20 + -0x10) = puVar4;\n                        param_1 = '\\x02';\n                        *(*0x20 + -0x38) = 0x42d697;\n                        uVar3 = fcn.00436620();\n                        puVar4 = *(*0x20 + -0x10);\n                    }\n                    uVar2 = *puVar4;\n                    *puVar4 = 0;\n                    if (uVar2 < 3) {\n                        return uVar3 & 0xffffffffffffff00 | uVar2 == 1;\n                    }\n                    *(*0x20 + -0x38) = 0x42d6da;\n                    fcn.00433ce0();\n                    break;\n                }\n            } while ((*puVar4 == 1) || (*puVar4 == 0));\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x42d6eb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_EBX;\n        puVar5[0x14] = param_1;\n        *(puVar5 + -8) = 0x42d6fe;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_EBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x14];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 909
    },
    "0042d720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042d720(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040cf80(0x628320);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xf0) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xf0 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040ad60();\n    return puVar1;\n}\n",
        "token_count": 265
    },
    "0042d8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d8e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00431000();\n    if (iStack16 == 0) {\n        fcn.00460380();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "0042d9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d9a0(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x626660 != 0) {\n                return *0x626660;\n            }\n            *0x626660 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x55c3a0;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42d9fc;\n            uVar1 = fcn.00431000();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42da27;\n            fcn.00460380();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42da48;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x42da59;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x42da65;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x42da76;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x42da7b;\n            fcn.00435500();\n            *(*0x20 + -0x48) = 0x42da8c;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x42da92;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 707
    },
    "0042daa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042daa0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x55c3a0 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x626650;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x55c3a0;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42dc07;\n                fcn.00431100();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42dc4c;\n                    fcn.00460380();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42dc97;\n                        fcn.00435480();\n                        *(*0x20 + -0x888) = 0x42dca8;\n                        fcn.00435d80();\n                        *(*0x20 + -0x888) = 0x42dcb4;\n                        fcn.00435b80();\n                        *(*0x20 + -0x888) = 0x42dcc5;\n                        fcn.00435d80();\n                        *(*0x20 + -0x888) = 0x42dcca;\n                        fcn.00435500();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42dcdb;\n                        fcn.00433ce0();\n                        goto code_r0x0042dcdb;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x626660 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42dd25;\n                            fcn.0042d9a0();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x5d1cb8;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42dd85;\n                        fcn.00431080();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42ddab;\n                            fcn.00460380();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42ddd7;\n                        fcn.0042de40(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042dcdb:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42de0b;\n                fcn.0045eee0(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42de10;\n            in_RAX = fcn.00432260();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42de1b;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2005
    },
    "0042dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042dfc0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x6267e8 == 0) {\n                arg1 = 0x626dc0;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x626dc0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42e011;\n                fcn.00430f00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x626dc0) = 0x5c;\n                    *0x6267e8 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042e05f;\n                }\n            }\n            else {\ncode_r0x0042e05f:\n                if (*0x626612 == '\\0') {\n                    uVar1 = *0x6267e8;\n                    if (*0x6267e8 < 0x106) {\n                        *(*0x20 + -0x20) = *0x6267e8 + arg1;\n                        if (*0x6267e8 + arg1 < 0x106) {\n                            uVar2 = 0x626dc0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x6267e8;\n                            *(*0x20 + -0x50) = 0x42e10f;\n                            uVar2 = fcn.00447240(*0x6267e8);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42e138;\n                        fcn.0045f840(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42e15f;\n                            fcn.00430e80();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42e189;\n                        fcn.0045eee0(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42e193;\n                    fcn.0045ef40(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x5d1c78;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42e098;\n                    fcn.00430f80();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42e19d;\n                fcn.0045eee0(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42e1ae;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42e1c5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1234
    },
    "0042e1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e1e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42e245;\n            fcn.00430e80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42e2a7;\n                iVar1 = fcn.0042df00(0x10);\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x160) = 0x42e2c5;\n                    fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x5d1c60;\n                }\n                *0x5d1c60 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42e327;\n                uVar3 = fcn.0042df00(0x1b);\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x160) = 0x42e345;\n                    fcn.0045ea40(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x5d1c68;\n                }\n                *0x5d1c68 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e385;\n                iVar1 = fcn.0042df00(0xf);\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x160) = 0x42e3a5;\n                    fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x5d1c78;\n                }\n                *0x5d1c78 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e3dd;\n                iVar2 = fcn.0042df00(0xf);\n                iVar1 = iVar2;\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x160) = 0x42e3fb;\n                    iVar2 = fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x5d1c80;\n                }\n                *0x5d1c80 = iVar1;\n                if ((iVar2 == 0) || (*0x5d1c78 == 0)) {\n                    *0x626612 = false;\n                }\n                else {\n                    *0x626612 = *0x5d1c60 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42e454;\n                iVar1 = fcn.0042dfc0(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42e4a8;\n                    uVar3 = fcn.0042df00(0x12);\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x160) = 0x42e4c6;\n                        fcn.0045ea40(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x5d1ca0;\n                    }\n                    *0x5d1ca0 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42e4ee;\n                    iVar1 = fcn.0042dfc0(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42e547;\n                        uVar3 = fcn.0042df00(0x16);\n                        if (*0x626890 != 0) {\n                            *(*0x20 + -0x160) = 0x42e565;\n                            fcn.0045ea40(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x5d1c88;\n                        }\n                        *0x5d1c88 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42e5b5;\n                        uVar3 = fcn.0042df00(0x11);\n                        if (*0x626890 != 0) {\n                            *(*0x20 + -0x160) = 0x42e5d3;\n                            fcn.0045ea40(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x5d1ca8;\n                        }\n                        *0x5d1ca8 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42e625;\n                        uVar3 = fcn.0042df00(0x17);\n                        if (*0x626890 != 0) {\n                            *(*0x20 + -0x160) = 0x42e645;\n                            fcn.0045ea40(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x5d1cb0;\n                        }\n                        *0x5d1cb0 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42e66d;\n                        iVar1 = fcn.0042dfc0(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42e6b4;\n                            iVar1 = fcn.0042df00(0x10);\n                            if (*0x626890 != 0) {\n                                *(*0x20 + -0x160) = 0x42e6d2;\n                                fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x5d1cc0;\n                            }\n                            *0x5d1cc0 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42e707;\n                            iVar2 = fcn.0042df00(0xe);\n                            iVar1 = iVar2;\n                            if (*0x626890 != 0) {\n                                *(*0x20 + -0x160) = 0x42e725;\n                                iVar2 = fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x5d1cc8;\n                            }\n                            *0x5d1cc8 = iVar1;\n                            if ((*0x5d1cc0 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42e76c;\n                                iVar1 = fcn.0042dfc0(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42e7c5;\n                                    iVar2 = fcn.0042df00(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x626890 != 0) {\n                                        *(*0x20 + -0x160) = 0x42e7e5;\n                                        iVar2 = fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x5d1cb8;\n                                    }\n                                    *0x5d1cb8 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42e83a;\n                                        iVar1 = fcn.0042df00(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42e849;\n                                            fcn.0042f380();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42e86a;\n                                    fcn.00433ce0();\n                                }\n                                *(*0x20 + -0x160) = 0x42e87b;\n                                fcn.00433ce0();\n                            }\n                            *(*0x20 + -0x160) = 0x42e88c;\n                            fcn.00433ce0();\n                        }\n                        *(*0x20 + -0x160) = 0x42e89d;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x160) = 0x42e8ae;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x160) = 0x42e8bf;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x160) = 0x42e8d0;\n            fcn.00433ce0();\n        }\n        *(puVar6 + -8) = 0x42e8d6;\n        fcn.0045c800();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3604
    },
    "0042eb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042ebe1)\n// WARNING: Removing unreachable block (ram,0x0042ebf6)\n\nulong fcn.0042eb00(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00430f80();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.00430e80();\n    return 0;\n}\n",
        "token_count": 184
    },
    "0042ec20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042ec20(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626608 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.00430e80();\n            return uStack16;\n        }\n        fcn.00430e80();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "0042f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f380(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42f3ea;\n            iVar1 = fcn.0042df00(0x18);\n            iVar2 = iVar1;\n            if (*0x626890 != 0) {\n                *(*0x20 + -0x98) = 0x42f408;\n                iVar1 = fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x5d1c70;\n            }\n            *0x5d1c70 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42f455;\n                iVar2 = fcn.0042df00(0x18);\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x98) = 0x42f473;\n                    fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x5d1c90;\n                }\n                *0x5d1c90 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42f4c9;\n                iVar1 = fcn.0042df00(0x1a);\n                iVar2 = iVar1;\n                if (*0x626890 != 0) {\n                    *(*0x20 + -0x98) = 0x42f4e7;\n                    iVar1 = fcn.0045ea40(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x5d1c98;\n                }\n                *0x5d1c98 = iVar2;\n                if ((*0x5d1c90 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x5d1c98;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42f525;\n                    fcn.00430e80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x5d1c90;\n                            *(*0x20 + -0x88) = 0x6267c0;\n                            *(*0x20 + -0x98) = 0x42f576;\n                            fcn.00430e80();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x626613 = 1;\n                            *0x6267b8 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42f605;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x98) = 0x42f616;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x98) = 0x42f627;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x98) = 0x42f638;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42f645;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1565
    },
    "0042f700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f700(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042f700:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42f725;\n        iVar1 = fcn.00430e20();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42f76f;\n                    iVar1 = fcn.00447160(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x5d2718 = uVar6;\n                    *0x5d2720 = uVar6;\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x68) = 0x42f7a5;\n                        fcn.0045ea40(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x5d2710;\n                    }\n                    *0x5d2710 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042f7da;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042f92f;\n    }\n    goto code_r0x0042f940;\ncode_r0x0042f7da:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42f865;\n        fcn.00430e80();\n        *(*0x20 + -0x18) = 0x4b6180;\n        *(*0x20 + -0x10) = 0x4d2898;\n        *(*0x20 + -0x68) = 0x42f8a5;\n        uVar2 = fcn.0045ab40(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42f8c5;\n        fcn.00430f00();\n        *(*0x20 + -0x68) = 0x42f8de;\n        fcn.0042e960();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042f925;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42f7fd;\n    uVar2 = fcn.0044bc60();\n    iVar7 = *0x5d2710;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x5d2718;\n    if (*0x5d2718 <= uVar4) goto code_r0x0042f91a;\n    *(*0x5d2710 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x626890 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42f83d;\n        fcn.0045ea40(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42f91a;\n            fcn.0045eee0(0);\n            goto code_r0x0042f91a;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042f7da;\ncode_r0x0042f91a:\n    *(*0x20 + -0x68) = 0x42f925;\n    fcn.0045eee0(uVar6);\ncode_r0x0042f925:\n    *(*0x20 + -0x68) = 0x42f92f;\n    fcn.0045eee0(uVar4);\ncode_r0x0042f92f:\n    *(*0x20 + -0x68) = 0x42f93c;\n    fcn.0045eee0(0x1000000);\ncode_r0x0042f940:\n    *(puVar8 + -8) = 0x42f945;\n    fcn.0045c800();\n    *0x20 = puVar8;\n    goto code_r0x0042f700;\n}\n",
        "token_count": 1590
    },
    "0042f9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042f9e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.00430e80();\n    }\n    else if (in_RAX == 2) {\n        fcn.00430e80();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045ef20(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042fb1b:\n            fcn.00431080();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.00430f00();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042fba0(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042fb1b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "0042ffc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042ffc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.00430f00();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.004607e0();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.00431000();\n            if (uStack56 != 1) break;\n            fcn.004607e0();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045c6c0();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045c6c0();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045c6c0();\n    return 0xffffffff;\n}\n",
        "token_count": 430
    },
    "00430360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430360(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.00430e80();\n    if (iStack16 == 0) {\n        fcn.0045c6c0();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "004304e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004304e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.00431000();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045c6c0();\n        }\n        fcn.00431000();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045c6c0();\n            fcn.00430e80();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004307e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004307e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x430853;\n            fcn.00431180();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x430896;\n                fcn.0040ab40();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x626608 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x4308e5;\n                    fcn.00431000();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x00430918;\n                }\n                else {\ncode_r0x00430918:\n                    *(*0x20 + -0xb8) = 0x430925;\n                    fcn.0040ad60();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x430965;\n                    fcn.00430f80();\n                    puVar3 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x4309ce;\n                            fcn.0045e880();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x4309f7;\n                        fcn.00435480();\n                        *(*0x20 + -0xb8) = 0x430a08;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x430a12;\n                        fcn.00435be0();\n                        *(*0x20 + -0xb8) = 0x430a25;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x430a2f;\n                        fcn.00435be0();\n                        *(*0x20 + -0xb8) = 0x430a45;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x430a4a;\n                        fcn.00435500();\n                        *(*0x20 + -0xb8) = 0x430a5b;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0xb8) = 0x430a65;\n                    fcn.00460380();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x430a86;\n                    fcn.00435480();\n                    *(*0x20 + -0xb8) = 0x430a97;\n                    fcn.00435d80();\n                    *(*0x20 + -0xb8) = 0x430aa5;\n                    fcn.00435a80();\n                    *(*0x20 + -0xb8) = 0x430aaa;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x430aaf;\n                    fcn.00435500();\n                    *(*0x20 + -0xb8) = 0x430ac5;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0xb8) = 0x430aca;\n                fcn.00460380();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x430aeb;\n                fcn.00435480();\n                *(*0x20 + -0xb8) = 0x430afc;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x430b06;\n                fcn.00435a80();\n                *(*0x20 + -0xb8) = 0x430b0b;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x430b10;\n                fcn.00435500();\n                *(*0x20 + -0xb8) = 0x430b25;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0xb8) = 0x430b2a;\n            fcn.00460380();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x430b4b;\n            fcn.00435480();\n            *(*0x20 + -0xb8) = 0x430b5c;\n            fcn.00435d80();\n            *(*0x20 + -0xb8) = 0x430b66;\n            fcn.00435a80();\n            *(*0x20 + -0xb8) = 0x430b6b;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x430b70;\n            fcn.00435500();\n            *(*0x20 + -0xb8) = 0x430b85;\n            fcn.00433ce0();\n        }\n        *(puVar5 + -8) = 0x430b8b;\n        fcn.0045c800();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2299
    },
    "00430d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00430d40(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2b0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045e620();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 246
    },
    "00431460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00431460(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x4314cd;\n                fcn.0040ab40();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x4314ee;\n                    uVar6 = fcn.0040ad60();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x43156b;\n                fcn.00431180();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x4318ad;\n                fcn.00460380();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x4318ce;\n                fcn.00435480();\n                *(*0x20 + -0x560) = 0x4318df;\n                fcn.00435d80();\n                *(*0x20 + -0x560) = 0x4318e9;\n                fcn.00435a80();\n                *(*0x20 + -0x560) = 0x4318ee;\n                fcn.004356e0();\n                *(*0x20 + -0x560) = 0x4318f3;\n                fcn.00435500();\n                *(*0x20 + -0x560) = 0x431905;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x560) = 0x431916;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x431925;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x43159a;\n    fcn.0040ad60();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x4315d5;\n    fcn.0040ab40();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4315ef;\n    fcn.00430e80();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x431830;\n        fcn.0040ad60();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x43184a;\n        uVar6 = fcn.00430e80();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x431638;\n    fcn.00430f00();\n    *(*0x20 + -0x560) = 0x43165a;\n    fcn.0040ad60();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x00431708;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x00431708;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22b0) == '\\0') {\n            bVar12 = false;\n            goto code_r0x00431708;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x00431708:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x43172c;\n        cVar5 = fcn.00434f40(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045ff00;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x431785;\n            fcn.00430f00();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4317d0;\n    fcn.00430e80();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4317fe;\n    uVar6 = fcn.00430e80();\n    return uVar6;\n}\n",
        "token_count": 2710
    },
    "00431940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431940(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x431967;\n            fcn.0044d780();\n            *(*0x20 + -0x20) = 0x43196c;\n            piVar1 = fcn.0044df00();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4319b8;\n                fcn.00433ce0();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x4319c7;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4319dc;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 564
    },
    "00431a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431a00(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x431a46;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x431a56;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 350
    },
    "004322c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004322c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1;\n    ulong noname_1;\n    ulong *puVar2;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0x90) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4322fc;\n                iVar1 = fcn.00432460(iVar1, unaff_R14);\n                if (*(iVar1 + 0x20) == 0) {\n                    arg1 = *(*0x20 + -0x10);\n                    noname_1 = *(arg1 + 0x28);\n                    if (*0x626890 == 0) {\n                        *(iVar1 + 0x28) = noname_1;\n                        *(arg1 + 0x28) = iVar1;\n                        *(iVar1 + 0x18) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x432331;\n                        fcn.0045eb60(arg1, noname_1, param_3, param_4);\n                        *(*0x20 + -0x28) = 0x43233a;\n                        fcn.0045ea40(arg1, noname_1, param_3, param_4);\n                        *(*0x20 + -0x28) = 0x432348;\n                        iVar1 = fcn.0045eb40(*(*0x20 + 8));\n                    }\n                    *(iVar1 + 0x10) = **0x20;\n                    *(iVar1 + 8) = *0x20 + 8;\n                    *(*0x20 + -0x28) = 0x43235f;\n                    fcn.0045e9e0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43238e;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x28) = 0x43239f;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x4323aa;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 716
    },
    "00432460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00432460(uint64_t arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar8 + 0xa0);\n    uVar9 = uVar7;\n    if (*(uVar7 + 0x70) != 0) goto code_r0x004324cf;\n    if (*0x5d3250 == 0) goto code_r0x004324cf;\n    fcn.0040ab40();\n    arg2 = uVar7 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar7;\n    while( true ) {\n        while ((iVar8 = *0x5d3250,  *(uVar7 + 0x70) < *(uVar7 + 0x78) >> 1 && (*0x5d3250 != 0))) {\n            if (*0x626890 == 0) {\n                puVar1 = *0x5d3250 + 0x28;\n                *0x5d3250 = *(*0x5d3250 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045ebe0(uVar7, arg2, *0x5d3250);\n                arg2 = fcn.0045eb60(uVar7, 0, iVar8, iVar8 + 0x28);\n            }\n            iVar6 = *(uVar7 + 0x70);\n            iVar4 = *(uVar7 + 0x68);\n            iVar5 = iVar4;\n            if (*(uVar7 + 0x78) < iVar6 + 1U) {\n                arg3 = iVar8;\n                arg4 = iVar6;\n                iVar5 = fcn.00447240(iVar6);\n                *(uStack16 + 0x78) = iVar6;\n                uVar7 = uStack16;\n                arg2 = uStack24;\n                if (*0x626890 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar5 = fcn.0045ea40(iVar6, uStack16, arg3, arg4);\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar7 + 0x70) = iVar6 + 1;\n            if (*0x626890 == 0) {\n                *(iVar5 + iVar6 * 8) = iVar8;\n            }\n            else {\n                fcn.0045ebc0(uVar7, arg2, iVar8, iVar6);\n            }\n        }\n        fcn.0040ad60();\n        arg1 = uVar7;\n        iVar8 = iStack40;\n        uVar9 = uStack16;\ncode_r0x004324cf:\n        iVar6 = *(uVar9 + 0x70);\n        if (iVar6 == 0) {\n            iVar4 = 0;\n            goto code_r0x0043251c;\n        }\n        iVar4 = *(*(uVar9 + 0x68) + -8 + iVar6 * 8);\n        if (*0x626890 == 0) {\n            *(*(uVar9 + 0x68) + -8 + iVar6 * 8) = 0;\n        }\n        else {\n            fcn.0045ebe0(arg1, arg2, iVar6);\n        }\n        uVar7 = iVar6 - 1;\n        arg2 = *(uVar9 + 0x78);\n        if (uVar7 <= arg2) break;\n        fcn.0045ef60(uVar7, arg2);\n    }\n    *(uVar9 + 0x70) = uVar7;\ncode_r0x0043251c:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040cc20();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1171
    },
    "004326a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004326a0(ulong arg1, ulong arg2)\n\n{\n    uint64_t arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    int64_t arg3;\n    int64_t iVar7;\n    ulong in_R9;\n    int64_t iVar8;\n    uint64_t arg1_02;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x626890 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.0045ebc0(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.00432960();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.004329a0();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        iVar5 = 0;\n        iVar6 = 0;\n        iVar7 = arg3;\n        iVar4 = arg2_00;\n        while( true ) {\n            arg1_02 = *(iVar4 + 0x70);\n            if (arg1_02 <= *(iVar4 + 0x78) >> 1) break;\n            arg1_00 = arg1_02 - 1;\n            if (arg1_02 <= arg1_00) {\ncode_r0x00432945:\n                fcn.0045eee0(arg1_02);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = *(*(iVar4 + 0x68) + -8 + arg1_02 * 8);\n            if (*0x626890 == 0) {\n                *(*(iVar4 + 0x68) + -8 + arg1_02 * 8) = 0;\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            else {\n                fcn.0045eb80(iVar5, iVar6, iVar7, iVar4);\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            if (*(iVar4 + 0x78) < arg1_00) {\n                fcn.0045ef60(arg1_00, *(iVar4 + 0x78));\n                goto code_r0x00432945;\n            }\n            *(iVar4 + 0x70) = arg1_00;\n            iVar6 = iVar5;\n            if (arg2_01 != 0) {\n                if (*0x626890 == 0) {\n                    *(arg1_01 + 0x28) = iVar5;\n                    iVar6 = arg2_01;\n                }\n                else {\n                    fcn.0045eb80(arg1_01, arg2_01, iVar7, iVar4);\n                    iVar6 = arg2_01;\n                }\n            }\n        }\n        fcn.0040ab40();\n        if (*0x626890 == 0) {\n            *(iVar5 + 0x28) = *0x5d3250;\n            *0x5d3250 = iVar6;\n        }\n        else {\n            fcn.0045eb60(iVar5, *0x5d3250, iVar7, iVar4);\n            fcn.0045eb40(iVar6);\n        }\n        fcn.0040ad60();\n    }\n    if (*0x626890 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.00411da0();\n    }\n    iVar6 = *(arg2_00 + 0x70);\n    iVar7 = *(arg2_00 + 0x68);\n    iVar4 = iVar7;\n    if (*(arg2_00 + 0x78) < iVar6 + 1U) {\n        iVar5 = arg3;\n        iVar8 = arg2_00;\n        iVar4 = fcn.00447240(iVar6);\n        *(arg2_00 + 0x78) = iVar6;\n        if (*0x626890 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n            iVar6 = iVar7;\n        }\n        else {\n            iVar4 = fcn.0045ea40(iVar6, arg2_00, iVar5, iVar8);\n            iVar6 = iVar7;\n        }\n    }\n    *(arg2_00 + 0x70) = iVar6 + 1;\n    if (*0x626890 == 0) {\n        *(iVar4 + iVar6 * 8) = in_RAX;\n    }\n    else {\n        fcn.0045ea40(iVar6, iVar6 + 1, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1403
    },
    "004329e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004329e0(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x626890 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x432a6b;\n                    iVar3 = fcn.0045ebe0(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x626890 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432a90;\n                    fcn.0045eba0(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x432a09;\n                fcn.004326a0(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x432a13;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x432aaa;\n            cVar2 = fcn.00433180(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x626890 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432ad7;\n                    fcn.0045eb40();\n                }\n                *(*0x20 + -0x40) = 0x432adc;\n                fcn.004326a0(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x432b0b;\n            fcn.00433ce0();\n        }\n        *(puVar5 + -8) = 0x432b11;\n        fcn.0045c800();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 944
    },
    "00432b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432b80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.0040a780(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040a780(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.0040a4c0();\n                    *(in_RAX + 8) = 0x4b4e60;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045ea40(0x4b4e60, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.0040a4c0();\n                *(in_RAX + 8) = 0x4b4e60;\n                if (*0x626890 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045ea40(0x4b4e60, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00432b20();\n    return;\n}\n",
        "token_count": 460
    },
    "00432ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432ce0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00432ce0(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435500();\n    fcn.004082c0(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 289
    },
    "00433180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00433180(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *noname_1_00;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    \ncode_r0x00433180:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        noname_1_00 = *(unaff_RBX + 0x30);\n        iVar7 = 0;\n        uVar9 = 0;\n        do {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar9 < 0) goto code_r0x0043342a;\n                uVar8 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n                uVar3 = uVar8;\n                iVar7 = 0;\n                uVar9 = 0;\n                goto code_r0x00433204;\n            }\n            if (uVar9 < 0) goto code_r0x00433445;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            uVar9 = uVar9 + 7;\n        } while (uVar9 < 0x1d);\n        goto code_r0x0043342f;\n    }\n    goto code_r0x0043344b;\n    while( true ) {\n        if (uVar9 < 0) goto code_r0x00433425;\n        iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n        uVar9 = uVar9 + 7;\n        if (0x1c < uVar9) break;\ncode_r0x00433204:\n        uVar1 = *noname_1_00;\n        noname_1_00 = noname_1_00 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar9 < 0) goto code_r0x0043340c;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x2c) = uVar8;\n            uVar8 = *(*(unaff_RBX + 0x38) - uVar3);\n            uVar9 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            goto code_r0x00433275;\n        }\n    }\ncode_r0x00433411:\n    *(*0x20 + -0x48) = 0x433425;\n    fcn.00433560();\ncode_r0x00433425:\n    *(*0x20 + -0x48) = 0x43342a;\n    fcn.00432200();\ncode_r0x0043342a:\n    *(*0x20 + -0x48) = 0x43342f;\n    fcn.00432200();\ncode_r0x0043342f:\n    unaff_RBX = 0x4ee960;\n    *(*0x20 + -0x48) = 0x433445;\n    fcn.00433560();\ncode_r0x00433445:\n    *(*0x20 + -0x48) = 0x43344a;\n    in_RAX = fcn.00432200();\ncode_r0x0043344b:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x43345a;\n    fcn.0045c800();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00433180;\ncode_r0x004333ef:\n    *(*0x20 + -0x48) = 0x4333f4;\n    fcn.00432200();\ncode_r0x004333f4:\n    *(*0x20 + -0x48) = 0x433407;\n    fcn.00433560();\ncode_r0x00433407:\n    *(*0x20 + -0x48) = 0x43340c;\n    fcn.00432200();\ncode_r0x0043340c:\n    *(*0x20 + -0x48) = 0x433411;\n    fcn.00432200();\n    goto code_r0x00433411;\ncode_r0x00433275:\n    do {\n        uVar9 = uVar9 - 1;\n        if (uVar9 < 0) {\n            return 1;\n        }\n        iVar7 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x00433407;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x004333f4;\n        }\n        if (uVar4 < 0) goto code_r0x004333ef;\n        uVar10 = 1 << (uVar9 & 0x1f) & -(uVar9 < 0x20);\n    } while ((uVar10 & uVar8) == 0);\n    *(*0x20 + -0x28) = uVar9;\n    *(*0x20 + -0x18) = noname_1_00;\n    uVar2 = *(*(unaff_RBX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7));\n    *(*0x20 + -0x10) = unaff_RBX + 0x18;\n    uVar4 = uVar8 & ~uVar10;\n    if (*0x626890 == 0) {\n        *(unaff_RBX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x4332fc;\n        fcn.0045eb40();\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(unaff_RBX + 0x38) - uVar3) = uVar4;\n    *(*0x20 + -0x20) = *(unaff_RBX + 0x20);\n    uVar2 = *(unaff_RBX + 0x18);\n    *(*0x20 + -0x48) = 0x433325;\n    uVar3 = fcn.00433480(uVar2, noname_1_00, uVar9, uVar4);\n    iVar5 = *(*0x20 + -0x20);\n    if ((iVar5 == 0) || (*(iVar5 + 0x31) == '\\0')) {\n        if (*0x626890 == 0) {\n            iVar5 = *(*0x20 + 0x10);\n            *(iVar5 + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x43335d;\n            uVar3 = fcn.0045eb60(iVar5, 0, uVar9, uVar4);\n            iVar5 = *(*0x20 + 0x10);\n        }\n        if ((*(iVar5 + 0x20) == 0) || (*(*(iVar5 + 0x20) + 0x30) == '\\0')) {\n            noname_1_00 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar9 = *(*0x20 + -0x28);\n            uVar8 = *(*0x20 + -0x2d);\n            goto code_r0x00433275;\n        }\n        uVar9 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar9 = 1;\n    }\n    return uVar9;\n}\n",
        "token_count": 2171
    },
    "00433480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433480(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00433c80();\n        arg1_00 = puStackX8;\n        if (*0x626890 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045ea40(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x626890 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.0045ea40(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x626890 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045ea40(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "00433560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433560(ulong param_1, ulong param_2, ulong param_3, char *param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t arg2;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    char *pcVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x626890 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x43363e;\n                                fcn.0045eb60(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            arg2 = *0x626670;\n                            *(*0x20 + -0xc0) = 0x433666;\n                            *0x626670 = *0x626670 + 1;\n                            fcn.00432de0(*0x20 + 8);\ncode_r0x00433666:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                pcVar10 = *(iVar3 + 0x28);\n                                if (pcVar10 == NULL) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x4338e9;\n                                    fcn.00432b80(uVar4);\n                                    *(*0x20 + -0xc0) = 0x4338f7;\n                                    fcn.00434080();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                arg2_00 = iVar3 + 0x28;\n                                if (*pcVar10 != '\\0') {\n                                    if (*(pcVar10 + 0x20) != 0) {\n                                        *(*(pcVar10 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x626890 == 0) {\n                                        *(pcVar10 + 0x20) = 0;\n                                        uVar7 = arg2;\n                                        arg2 = arg2_00;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4336b7;\n                                        iVar3 = fcn.0045eba0(pcVar10 + 0x20, arg2_00, param_3, param_4);\n                                        uVar7 = arg2_00;\n                                        arg2 = arg2_00;\n                                    }\n                                    arg2_00 = arg2;\n                                    if (pcVar10[2] == '\\0') {\n                                        if (*0x626890 == 0) {\n                                            *(pcVar10 + 0x18) = 0;\n                                            arg2 = uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x4336e6;\n                                            iVar3 = fcn.0045eba0(pcVar10 + 0x18, arg2, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar10 + 0x28);\n                                        if (*0x626890 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x433705;\n                                            fcn.0045eb40();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x43370d;\n                                        fcn.004326a0(uVar4, arg2);\n                                        goto code_r0x00433666;\n                                    }\n                                }\n                                *pcVar10 = '\\x01';\n                                pcVar6 = pcVar10 + 0x20;\n                                if (*0x626890 == 0) {\n                                    *(pcVar10 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433745;\n                                    fcn.0045eba0(pcVar6, arg2_00, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = arg2_00;\n                                *(*0x20 + -0x70) = pcVar10;\n                                *(*0x20 + -0x60) = pcVar6;\n                                if (pcVar10[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x4337a5;\n                                    uVar4 = fcn.00433c80();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x4337b8;\n                                    (*pcVar1)();\n                                    arg2 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433767;\n                                    cVar2 = fcn.00433180(pcVar6, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        arg2 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        arg2 = *(*0x20 + -0x70);\n                                        if (*(*(arg2 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x43378c;\n                                            fcn.00432de0(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            arg2 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar3 = *(*0x20 + -0x48);\n                                if (*(iVar3 + 0x28) != arg2) goto code_r0x00433a7e;\n                                if (*0x626890 == 0) {\n                                    *(arg2 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4337f9;\n                                    cVar2 = fcn.0045eba0(iVar3, arg2, param_3, param_4);\n                                }\n                                uVar4 = *(arg2 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(arg2 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x626890 == 0) {\n                                        *(arg2 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43382d;\n                                        cVar2 = fcn.0045eb80(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x626890 == 0) {\n                                        *(iVar3 + 0x28) = *(arg2 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43384e;\n                                        fcn.0045eb80(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x433856;\n                                    fcn.004326a0(iVar3, arg2);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar3 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar8 = *(*0x20 + -0x28);\n                            if (*0x626890 == 0) {\n                                *(iVar3 + 0x20) = iVar8;\n                                pcVar10 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar10 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x43389e;\n                                cVar2 = fcn.0045eb60(iVar3, iVar8, param_3, param_4);\n                            }\n                            if (((iVar8 == 0) || (*(iVar8 + 0x32) == '\\0')) || (*(iVar8 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x626670 = *0x626670 - 1;\n                                pcVar6 = *(iVar3 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    pcVar5 = pcVar6;\n                                    pcVar6 = *(pcVar6 + 0x28);\n                                }\n                                else {\n                                    pcVar5 = NULL;\n                                }\n                                while ((pcVar6 != NULL && (*pcVar6 == '\\0'))) {\n                                    if (pcVar6[2] == '\\0') {\n                                        pcVar5 = pcVar6;\n                                        pcVar6 = *(pcVar6 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar5;\n                                        if (pcVar5 == NULL) {\n                                            if (*0x626890 == 0) {\n                                                *(iVar3 + 0x28) = *(pcVar6 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x433994;\n                                                fcn.0045eb80(iVar3, pcVar6, param_3, pcVar10);\n                                                param_4 = pcVar10;\n                                            }\n                                        }\n                                        else if (*0x626890 == 0) {\n                                            *(pcVar5 + 0x28) = *(pcVar6 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = pcVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x433965;\n                                            fcn.0045eb80(iVar3, pcVar6, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar6 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x4339a5;\n                                        fcn.004326a0(uVar4, pcVar6);\n                                        iVar3 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        pcVar10 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        pcVar6 = *(*0x20 + -0x78);\n                                        pcVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x626890 == 0) {\n                                    *(iVar3 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4339e5;\n                                    fcn.0045eb60(iVar3, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar8 = *(iVar3 + 0x20);\n                                    if (iVar8 == 0) goto code_r0x00433a3f;\n                                    if (*(iVar8 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar8 + 0x18);\n                                    if (*0x626890 == 0) {\n                                        *(iVar3 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x433a0d;\n                                        fcn.0045eb60(iVar3, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar8 == 0) goto code_r0x00433a3f;\n                                do {\n                                    *(iVar3 + 0x110) = param_3;\n                                    *(iVar3 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x433a2e;\n                                    fcn.0045c640();\n                                    *(*0x20 + -0xc0) = 0x433a3f;\n                                    fcn.00433ce0();\ncode_r0x00433a3f:\n                                    *(iVar3 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar3 + 0x110) = *(iVar8 + 0x28);\n                            *(iVar3 + 0x118) = *(iVar8 + 0x20);\n                            *(*0x20 + -0xc0) = 0x433a6d;\n                            fcn.0045c640();\n                            *(*0x20 + -0xc0) = 0x433a7e;\n                            fcn.00433ce0();\ncode_r0x00433a7e:\n                            *(*0x20 + -0xc0) = 0x433a8f;\n                            fcn.00433ce0();\n                        }\n                        *(*0x20 + -0xc0) = 0x433a94;\n                        fcn.00435480();\n                        *(*0x20 + -0xc0) = 0x433aa5;\n                        fcn.00435d80();\n                        *(*0x20 + -0xc0) = 0x433aaa;\n                        fcn.00435500();\n                        *(*0x20 + -0xc0) = 0x433abf;\n                        fcn.004082c0();\n                        *(*0x20 + -0xc0) = 0x433ac5;\n                        fcn.00435480();\n                        *(*0x20 + -0xc0) = 0x433aca;\n                        fcn.004356e0();\n                        *(*0x20 + -0xc0) = 0x433acf;\n                        fcn.00435500();\n                        *(*0x20 + -0xc0) = 0x433ae5;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0xc0) = 0x433aea;\n                    fcn.00435480();\n                    *(*0x20 + -0xc0) = 0x433afb;\n                    fcn.00435d80();\n                    *(*0x20 + -0xc0) = 0x433b05;\n                    fcn.00435500();\n                    *(*0x20 + -0xc0) = 0x433b1a;\n                    fcn.004082c0();\n                    *(*0x20 + -0xc0) = 0x433b1f;\n                    fcn.00435480();\n                    *(*0x20 + -0xc0) = 0x433b25;\n                    fcn.004356e0();\n                    *(*0x20 + -0xc0) = 0x433b2a;\n                    fcn.00435500();\n                    *(*0x20 + -0xc0) = 0x433b2f;\n                    fcn.00435480();\n                    *(*0x20 + -0xc0) = 0x433b45;\n                    fcn.00435d80();\n                    *(*0x20 + -0xc0) = 0x433b4a;\n                    fcn.00435500();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x433b70;\n                    fcn.00435480();\n                    *(*0x20 + -0xc0) = 0x433b7f;\n                    fcn.00435d80();\n                    *(*0x20 + -0xc0) = 0x433b85;\n                    fcn.00435500();\n                    *(*0x20 + -0xc0) = 0x433b8a;\n                    fcn.00435480();\n                    *(*0x20 + -0xc0) = 0x433b8f;\n                    fcn.004356e0();\n                    *(*0x20 + -0xc0) = 0x433b94;\n                    fcn.00435500();\n                    *(*0x20 + -0xc0) = 0x433ba5;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0xc0) = 0x433baa;\n                fcn.00435480();\n                *(*0x20 + -0xc0) = 0x433bbb;\n                fcn.00435d80();\n                *(*0x20 + -0xc0) = 0x433bc5;\n                fcn.00435500();\n                *(*0x20 + -0xc0) = 0x433bda;\n                fcn.004082c0();\n                *(*0x20 + -0xc0) = 0x433bdf;\n                fcn.00435480();\n                *(*0x20 + -0xc0) = 0x433be5;\n                fcn.004356e0();\n                *(*0x20 + -0xc0) = 0x433bea;\n                fcn.00435500();\n                *(*0x20 + -0xc0) = 0x433bfb;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0xc0) = 0x433c05;\n            fcn.00435480();\n            *(*0x20 + -0xc0) = 0x433c16;\n            fcn.00435d80();\n            *(*0x20 + -0xc0) = 0x433c1b;\n            fcn.00435500();\n            *(*0x20 + -0xc0) = 0x433c30;\n            fcn.004082c0();\n            *(*0x20 + -0xc0) = 0x433c35;\n            fcn.00435480();\n            *(*0x20 + -0xc0) = 0x433c3a;\n            fcn.004356e0();\n            *(*0x20 + -0xc0) = 0x433c3f;\n            fcn.00435500();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x433c50;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x433c65;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4800
    },
    "00433ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433ca0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00433ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433ce0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.0045c6c0();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.00433f40();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 117
    },
    "00434200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00434200(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5ff360 == 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n                fcn.0042f960();\n            }\n            fcn.0042f960();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x626668;\n    LOCK();\n    *0x626668 = *0x626668 + 1;\n    fcn.0040ab00(iVar2);\n    if ((0 < *0x626ad0) || (0 < *0x626acc)) {\n        fcn.00441420();\n    }\n    fcn.00437b00();\n    return 1;\n}\n",
        "token_count": 486
    },
    "00434380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00434380(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435500();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    uVar4 = *0x55c288;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x55c288 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x55c288 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.00435480(arg1, uVar5, *0x55c288);\n                fcn.00435d80();\n                fcn.00435500();\n                fcn.00455680(0);\n            }\n        }\n        else {\n            fcn.00435480(arg1, uVar5, *0x55c288);\n            fcn.004356e0();\n            fcn.00435500();\n            fcn.00456420();\n            fcn.00455680(0);\n        }\n        if ((*0x626604 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x626604 = '\\x01';\n            fcn.00456660();\n        }\n    }\n    fcn.0040ad60();\n    LOCK();\n    iVar3 = *0x626668 + -1;\n    bVar6 = *0x626668 != 1;\n    *0x626668 = iVar3;\n    if (bVar6) {\n        fcn.0040ab40();\n        fcn.0040ab40();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 743
    },
    "00434620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00434620(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2b0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "004346a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004346a0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044d780();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x24) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00434c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434c40(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x434c94;\n                fcn.00437ba0(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x434cae;\n                    fcn.004378e0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x434ce5;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x434cf6;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434d05;\n            fcn.00435d00();\n            *(*0x20 + -0x50) = 0x434d16;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434d25;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x434d36;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434d45;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x434d4a;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x434d4f;\n            fcn.00435500();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x434d6f;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x434d85;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434d8f;\n            fcn.00435d00();\n            *(*0x20 + -0x50) = 0x434da5;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434daf;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x434dc5;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x434dd0;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x434dd5;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x434dda;\n            fcn.00435500();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x434deb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x434dfe;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1164
    },
    "00460bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460bc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045c640();\n    }\n    else {\n        fcn.0045c640();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "00435500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435500(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040ad60();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00435560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435560(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x43559d;\n            fcn.00435300(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x0043563d:\n                *(*0x20 + -0x38) = 0x435651;\n                fcn.004592e0(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x0043563d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x43560c;\n                fcn.0045f840(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x43566d;\n            in_RAX = fcn.0045ef60(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x435685;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 863
    },
    "00436620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436620(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x43669e;\n                    fcn.0045eb80(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4366aa;\n                    fcn.0045ea40(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x4366f6;\n                fcn.0045c640();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x436712;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x436730;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 829
    },
    "00436840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00436840(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0x9b8) != 0) goto code_r0x004368a5;\n    arg4 = unaff_R14;\n    fcn.0040ab40();\n    param_2 = uVar7 + 0x9b0;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x5d3240,  uVar10 = *(uVar7 + 0x9c0) >> 1,  *(uVar7 + 0x9b8) < uVar10 &&\n               (uVar10 = *0x5d3240,  *0x5d3240 != 0))) {\n            if (*0x626890 == 0) {\n                puVar1 = *0x5d3240 + 8;\n                *0x5d3240 = *(*0x5d3240 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045ebe0(uVar7, param_2, *0x5d3240);\n                fcn.0045ebe0(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0x9b8);\n            iVar9 = *(uVar7 + 0x9b0);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0x9c0) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.00447240(arg4);\n                *(uStack16 + 0x9c0) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x626890 == 0) {\n                    *(uStack16 + 0x9b0) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.0045ea40(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0x9b8) = arg4 + 1;\n            if (*0x626890 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.0045ebc0(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.0040ad60();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar5 = fcn.0040cc20();\n            param_2 = *(uStack16 + 0x9b8);\n            uVar7 = *(uStack16 + 0x9b0);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0x9c0) < param_2 + 1) {\n                uVar6 = fcn.00447240(param_2);\n                *(uStack16 + 0x9c0) = param_2;\n                if (*0x626890 == 0) {\n                    *(uStack16 + 0x9b0) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.0045ea40(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0x9b8) = param_2 + 1;\n            if (*0x626890 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.0045ea40(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x004368a5:\n        uVar7 = *(uVar8 + 0x9b8);\n        arg4 = *(uVar8 + 0x9b0);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x626890 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.0045ebe0(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0x9c0);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0x9b8) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.00433ce0();\n            }\n            fcn.0045ef60(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.0045eee0(uVar7);\n    } while( true );\n}\n",
        "token_count": 1479
    },
    "00436b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436b40(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0x9b8);\n                                        if (arg1_01 <= *(iVar4 + 0x9c0) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x00436df1:\n                                            fcn.0045eee0(arg1_01);\n                                            goto code_r0x00436dfc;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8);\n                                        if (*0x626890 == 0) {\n                                            *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.0045eb80(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0x9c0) < arg1) {\n                                            fcn.0045ef60(arg1, *(iVar4 + 0x9c0));\n                                            goto code_r0x00436df1;\n                                        }\n                                        *(iVar4 + 0x9b8) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x626890 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045eb80(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.0040ab40();\n                                    if (*0x626890 == 0) {\n                                        *(iVar5 + 8) = *0x5d3240;\n                                        *0x5d3240 = iVar6;\n                                    }\n                                    else {\n                                        fcn.0045eb60(iVar5, *0x5d3240, iVar7, iVar4);\n                                        fcn.0045eb40(iVar6);\n                                    }\n                                    fcn.0040ad60();\n                                }\n                                iVar6 = *(arg2 + 0x9b8);\n                                iVar7 = *(arg2 + 0x9b0);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0x9c0) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.00447240(iVar6);\n                                    *(arg2 + 0x9c0) = iVar6;\n                                    if (*0x626890 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045ea40(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = iVar6 + 1;\n                                if (*0x626890 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045ea40(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x00436dfc:\n                            fcn.00433ce0();\n                        }\n                        fcn.00433ce0();\n                    }\n                    fcn.00433ce0();\n                }\n                fcn.00433ce0();\n            }\n            fcn.00433ce0();\n        }\n        fcn.00433ce0();\n    }\n    fcn.00433ce0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1341
    },
    "00436fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436fe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x43701b;\n                fcn.0040ab40();\n                uVar2 = *0x5d26d0;\n                arg1_00 = *0x5d26d8;\n                uVar3 = *0x5d26d0;\n                if (*0x5d26e0 < *0x5d26d8 + 1) {\n                    *(*0x20 + -0x58) = 0x437045;\n                    arg1 = *0x5d26d8;\n                    uVar3 = fcn.00447240(*0x5d26d8);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x5d26e0 = arg1;\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x58) = 0x43706a;\n                        uVar3 = fcn.0045ea40(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x5d26d0;\n                    }\n                }\n                *0x5d26d0 = uVar2;\n                *0x5d26d8 = arg1_00 + 1;\n                if (*0x626890 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x43709d;\n                    fcn.0045eb60(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x5d26d8 != 0) {\n                    uVar2 = *0x5d1cd0;\n                    if ((*0x5d1cd0 != *0x5d26d0) && (uVar2 = *0x5d26d0,  *0x626890 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x5d26d0;\n                        *(*0x20 + -0x58) = 0x4370d4;\n                        fcn.00403920();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x5d1cd0 = uVar2;\n                    uVar1 = *0x6266a8;\n                    *0x6266a8 = *0x5d26d8;\n                    *(*0x20 + -0x58) = 0x437105;\n                    fcn.0040ad60(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x437116;\n                fcn.0045eee0(0);\n            }\n            *(*0x20 + -0x58) = 0x437127;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x437132;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 974
    },
    "004376e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004376e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00455f60(0x20);\n    }\n    fcn.0040ab40();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00437680();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.0045e980();\n    fcn.0045e8c0(uVar4, arg2);\n    uVar3 = fcn.0045e980();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x120) = *0x5d1cd8;\n    }\n    else {\n        fcn.0045eb40();\n    }\n    if (*0x626890 != '\\0') {\n        fcn.00403920();\n    }\n    *0x5d1cd8 = in_RAX;\n    fcn.0040ad60();\n    uVar4 = fcn.0040cc20();\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045ea40(in_RAX, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 614
    },
    "004378e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004378e0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x5d8810 != '\\0') {\n                *(*0x20 + -0x58) = 0x43790f;\n                fcn.00452ac0();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x437951;\n                fcn.00438040(1);\n                *(*0x20 + -0x58) = 0x437970;\n                fcn.00442240(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x437975;\n                fcn.0043a940();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x4379cc;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x4379dd;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4379e7;\n            fcn.00435d00();\n            *(*0x20 + -0x58) = 0x4379f8;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x437a05;\n            fcn.00435b80();\n            *(*0x20 + -0x58) = 0x437a16;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x437a25;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x437a2a;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437a2f;\n            fcn.00435500();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x437a4f;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x437a65;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x437a6f;\n            fcn.00435d00();\n            *(*0x20 + -0x58) = 0x437a85;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x437a8f;\n            fcn.00435b80();\n            *(*0x20 + -0x58) = 0x437aa5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x437ab0;\n            fcn.00435a80();\n            *(*0x20 + -0x58) = 0x437ab5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437aba;\n            fcn.00435500();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x437acb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x437adf;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1396
    },
    "00438040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00438040(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uint32_t unaff_EBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x4383e0));\n        uStack64 = auStack24;\n        fcn.0045c6c0();\n    }\n    iVar9 = 0;\n    piVar6 = NULL;\n    while( true ) {\n        LOCK();\n        puVar1 = in_RAX + 0x90;\n        uVar2 = *puVar1;\n        if (unaff_EBX == uVar2) {\n            *puVar1 = arg1;\n            uVar4 = unaff_EBX;\n        }\n        else {\n            uVar4 = *puVar1;\n        }\n        piVar5 = uVar4;\n        if (unaff_EBX == uVar2) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00433ce0();\n            pcVar3 = swi(3);\n            piVar6 = (*pcVar3)();\n            return piVar6;\n        }\n        if (iVar9 == 0) {\n            fcn.004607e0();\n            piVar6 = uStack64 + 0x271;\n        }\n        fcn.004607e0();\n        piStack40 = piVar6;\n        iStack32 = iVar9;\n        if (uStack64 < piVar6) {\n            iVar9 = 0;\n            while ((piVar6 = piStack40,  iVar9 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x0043834d:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045e5e0();\n                iVar9 = iVar9 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4d2ae8;\n            fcn.0045c6c0();\n            fcn.004607e0();\n            piVar6 = 0x4d34ac;\n        }\n        iVar9 = iStack32 + 1;\n    }\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.004607e0();\n            piVar5 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar5;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.004607e0();\n            *(in_RAX + 0xc0) = uStack64;\n            piVar5 = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar8 = *(in_RAX + 200);\n            if (uVar8 < 0) {\n                LOCK();\n                piVar5 = *0x5d4938;\n                *0x5d4938 = *0x5d4938 + 1;\n            }\n            else {\n                if (uVar8 < 0x10) {\n                    iVar9 = 0;\n                }\n                else {\n                    iVar7 = 0x3f;\n                    if (uVar8 != 0) {\n                        for (; uVar8 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                        }\n                    }\n                    if (uVar8 == 0) {\n                        iVar7 = -1;\n                    }\n                    iVar9 = iVar7 + -3;\n                    if (iVar9 * 0x10 < 0x2d0) {\n                        iVar7 = uVar8 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                        uVar8 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                    }\n                    else {\n                        iVar9 = 0x2c;\n                        uVar8 = 0xf;\n                    }\n                }\n                uVar8 = iVar9 * 0x10 + uVar8;\n                if (0x2cf < uVar8) {\n                    iVar9 = 0x2d0;\n                    fcn.0045ef00(0x2d0);\n                    goto code_r0x0043834d;\n                }\n                piVar5 = uVar8 * 8 + 0x5d32b8;\n                LOCK();\n                *piVar5 = *piVar5 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1322
    },
    "00438480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00438480(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4384e5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4384f8;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "004385a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004385a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    ulong in_RAX;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = 0;\n    fcn.00445680(0);\n    arg2 = *(unaff_R14 + 0x30);\n    *(arg2 + 0xd0) = unaff_RBX;\n    if (*0x626890 == 0) {\n        *(arg2 + 200) = in_RAX;\n    }\n    else {\n        fcn.0045ea40(arg1, arg2, param_3, param_4);\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 230
    },
    "00438720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438720(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    arg1 = **(in_GS_OFFSET + 0x28);\n    piVar1 = *(arg1 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(arg1 + 0x30);\n    *(iVar3 + 0xd0) = 0;\n    if (*0x626890 == 0) {\n        *(iVar3 + 200) = 0;\n    }\n    else {\n        fcn.0045eb60(arg1, 0, param_3, param_4);\n    }\n    fcn.004459c0(0);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(arg1 + 0xb1) != '\\0')) {\n        *(arg1 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00438b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00438b40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00438b40:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x626658 != 0) {\n            *(*0x20 + -0x60) = 0x438b85;\n            uVar4 = fcn.0042daa0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x438b94;\n            fcn.0043c1c0();\n        }\n        *(*0x20 + -0x60) = 0x438ba5;\n        fcn.0040ab40();\n        if (*0x626664 != 0) {\n            *0x626664 = 0;\n        }\n        *(*0x20 + -0x60) = 0x438bcb;\n        uVar4 = fcn.0043fb00();\n        *(*0x20 + -0x18) = uVar4;\n        *0x5d3260 = 0;\n        if (*0x5d3270 != 0) {\n            *0x5d3270 = 0;\n            *(*0x20 + -0x60) = 0x438bf9;\n            fcn.0040ae40();\n        }\n        *(*0x20 + -0x60) = 0x438c07;\n        fcn.0040ad60();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x438c75;\n                fcn.004607e0();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x438cb4;\n                    fcn.00451660(0);\n                }\n                *(*0x20 + -0x60) = 0x438cb9;\n                fcn.0043a940();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x438c6d;\n                fcn.00439dc0(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00438cf4;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x438c5a;\n                fcn.0040ae40();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00438d06;\ncode_r0x00438cf4:\n    *(*0x20 + -0x60) = 0x438d05;\n    in_AL = fcn.00433ce0();\ncode_r0x00438d06:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x438d0f;\n    fcn.0045c800();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x00438b40;\n}\n",
        "token_count": 1134
    },
    "00438ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438ec0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626603 == '\\0') {\n        *0x626603 = '\\x01';\n        fcn.00439a00();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00438f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438f60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x5d2da0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x30) = 0x438f9a;\n                fcn.00430ba0();\n                if (*(*(*0x20 + -0x18) + 0x50) != 0) {\n                    *(*0x20 + -0x30) = 0x438fb4;\n                    fcn.004482a0();\n                    if (*0x626890 == 0) {\n                        *(*(*0x20 + -0x18) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x438fdc;\n                        fcn.0045eb60(*(*0x20 + -0x18), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x438fe9;\n                fcn.0040ab40();\n                iVar4 = *(*0x20 + -0x18);\n                piVar3 = 0x5d1cd8;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x120);\n                        if (*0x626890 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x43902c;\n                            fcn.0045eb60(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x626890 == 0) {\n                                *(iVar4 + 0x270) = *0x5d3258;\n                                *0x5d3258 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x30) = 0x43906e;\n                                fcn.0045eb80(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x30) = 0x43907a;\n                                fcn.0045eb40();\n                            }\n                        }\n                        *(*0x20 + -0x30) = 0x439088;\n                        fcn.0040ad60();\n                        iVar4 = *0x626768;\n                        LOCK();\n                        *0x626768 = *0x626768 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x4390a5;\n                        fcn.004404c0(*(*0x20 + -0x18), iVar4);\n                        *(*0x20 + -0x30) = 0x4390aa;\n                        fcn.0043a660();\n                        *(*0x20 + -0x30) = 0x4390b8;\n                        fcn.0040ab40();\n                        *0x5d31c0 = *0x5d31c0 + 1;\n                        *(*0x20 + -0x30) = 0x4390c5;\n                        fcn.00440680();\n                        *(*0x20 + -0x30) = 0x4390d3;\n                        fcn.0040ad60();\n                        *(*0x20 + -0x30) = 0x4390dd;\n                        fcn.00430c40();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x439105;\n                        fcn.004307a0(*(*0x20 + -0x18));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x439125;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x30) = 0x43912a;\n            fcn.004404c0();\n            *(*0x20 + -0x30) = 0x43912f;\n            fcn.0043a660();\n            *(*0x20 + -0x30) = 0x43913d;\n            fcn.0040ab40();\n            *0x5d31c0 = *0x5d31c0 + 1;\n            *(*0x20 + -0x30) = 0x439149;\n            fcn.00440680();\n            *(*0x20 + -0x30) = 0x439157;\n            fcn.0040ad60();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x43916e;\n            fcn.0040aec0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x439193;\n            in_AL = fcn.00433ce0();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x43919d;\n        fcn.0045c800();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1457
    },
    "004391c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004391c0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x439219;\n            fcn.0040ab40();\n            if (*0x5d3288 == 0) {\n                *0x5d3288 = *0x626650 + -1;\n                if (*0x626890 == 0) {\n                    *0x5d3280 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x43925c;\n                    fcn.0045ea40(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x5d26f8;\n                iVar9 = *0x5d26f0;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2270;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x43929b;\n                fcn.00441160();\n                for (iVar8 = *0x5d31d0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2270) == 1) {\n                        *(iVar8 + 0x2270) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x4392da;\n                        (*pcVar6)();\n                        *0x5d3288 = *0x5d3288 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x5d3288;\n                *(*0x20 + -0x68) = 0x439305;\n                fcn.0040ad60();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x439314;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x5d26f0;\n                *(*0x20 + -0x40) = *0x5d26f8;\n                iVar9 = *0x5d26f0;\n                iVar10 = *0x5d26f8;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2270) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x5d8810 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x439398;\n                            fcn.00452ca0();\n                            *(*0x20 + -0x68) = 0x4393a5;\n                            fcn.00452520();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x4393b5;\n                        fcn.0043a660();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x4393ec;\n                        cVar7 = fcn.0040b2a0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x4393db;\n                        fcn.00441160();\n                    }\n                    *0x5d3290 = 0;\n                }\n                if (*0x5d3288 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x5d26f8 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x439445;\n                            fcn.0040ab40();\n                            if (*0x626890 == 0) {\n                                *0x5d3280 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x439469;\n                                fcn.0045eb40(0);\n                            }\n                            *(*0x20 + -0x68) = 0x439477;\n                            fcn.0040ad60();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x5d26f0 + iVar8 * 8) + 0x2270) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x4394be;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x68) = 0x4394cf;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x68) = 0x4394e5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4394f0;\n        fcn.00460f20();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1950
    },
    "00439500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00439500(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2270;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x5d3280)();\n    fcn.0040ab40();\n    iVar3 = *0x5d3288 + -1;\n    bVar4 = *0x5d3288 == 1;\n    *0x5d3288 = iVar3;\n    if (bVar4) {\n        fcn.0040ae40();\n    }\n    uVar2 = fcn.0040ad60();\n    return uVar2;\n}\n",
        "token_count": 263
    },
    "004395c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004395c0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00443b00();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar5 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.00440340();\n    }\n    if (*0x5d3258 != 0) {\n        fcn.0040ab40();\n        iStack48 = *0x5d3258;\n        iVar4 = 0;\n        while (iStack48 != 0) {\n            if (*(iStack48 + 0xec) == 0) {\n                fcn.0045c6c0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack48 = *(iStack48 + 0x270);\n            }\n            else {\n                arg2 = *(iStack48 + 0x270);\n                if (*0x626890 == 0) {\n                    *(iStack48 + 0x270) = iVar4;\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n                else {\n                    fcn.0045ea40(iStack48, arg2, in_R8, in_R9);\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n            }\n        }\n        if (*0x626890 != 0) {\n            fcn.0045ea40(0, arg2, in_R8, in_R9);\n            iVar4 = *0x5d3258;\n        }\n        *0x5d3258 = iVar4;\n        fcn.0040ad60();\n    }\n    piVar3 = fcn.0040cc20();\n    if (*0x626890 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.0045eb40();\n    }\n    fcn.004376e0();\n    iVar4 = fcn.0043e560();\n    if (*0x626890 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.0045ea40(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x626890 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.0045eb40();\n    }\n    if (in_RAX == *(*(iVar5 + 0x30) + 0xa0)) {\n        fcn.004404c0();\n    }\n    iVar2 = *(*(iVar5 + 0x30) + 0xd8);\n    *(*(iVar5 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00443c40();\n    return piVar3;\n}\n",
        "token_count": 883
    },
    "00439a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439a80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.004395c0(0xffffffffffffffff);\n    iVar3 = fcn.0043e560();\n    *(iVar3 + 0x40) = 0x45ea01;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.00438040(6);\n    iVar5 = iVar2;\n    if (*0x626890 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.0045eb40();\n    }\n    if (*0x626890 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045ea40(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x23c) = *(iVar5 + 0x23c) + 1;\n    *(iVar5 + 0x130) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x5d3180 + 1;\n    *0x5d3180 = *0x5d3180 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.00436fe0();\n    iVar1 = *0x5d31c8;\n    LOCK();\n    *0x5d31c8 = *0x5d31c8 + 1;\n    uVar4 = fcn.00439cc0(iVar1);\n    *(iVar2 + 0x128) = uVar4;\n    *0x626630 = *0x626630 + 1;\n    *0x6266f8 = iVar2;\n    return;\n}\n",
        "token_count": 628
    },
    "00439cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439d60)\n\nuint64_t fcn.00439cc0(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x6266f8 == 1) {\n            fcn.004607c0();\n        }\n        if ((*0x6266f8 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x626634 = *0x626634 + 1;\n        }\n        fcn.004606e0();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x6266f8;\n    *0x6266f8 = *0x6266f8 ^ *0x6266f8 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "00439dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439dc0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x439dfb;\n            iVar3 = fcn.004395c0(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x439ee6;\n                fcn.00439f60();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x439e54;\n            fcn.0040ab40();\n            if (*0x626960 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x626948;\n                *0x626948 = iVar3;\n                if (*0x626950 != '\\0') {\n                    *0x626950 = '\\0';\n                    *(*0x20 + -0x30) = 0x439e9d;\n                    fcn.0040ae40();\n                }\n                *(*0x20 + -0x30) = 0x439eab;\n                fcn.0040ad60();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x439f2b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x439f45;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 926
    },
    "00439f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439f60(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x62660b == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x43a025;\n                fcn.00443b00();\n                *(*0x20 + -0x40) = 0x43a02f;\n                fcn.00430640();\n                *(*0x20 + -0x40) = 0x43a03b;\n                fcn.00443c40();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x5d1a90 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.0045c600;\n                *(*0x20 + -0x40) = 0x439fcf;\n                fcn.00443b00();\n                *(*0x20 + -0x38) = *0x5d1a90;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x439fe9;\n                fcn.0045e620();\n                *(*0x20 + -0x40) = 0x43a009;\n                fcn.00443c40();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x43a056;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x43a065;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 657
    },
    "0043a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a080(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x626960 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x626960 = 1;\n    fcn.00439dc0(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "0043a260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a260(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x43a2b9;\n                        fcn.0040ab40();\n                        *(*0x20 + -0x30) = 0x43a2c7;\n                        fcn.00441d60();\n                        *(*0x20 + -0x30) = 0x43a2d5;\n                        fcn.0040ad60();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x43a2ed;\n                        fcn.0040aec0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x43a316;\n                        fcn.00440340();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x43a345;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x30) = 0x43a356;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x30) = 0x43a367;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x43a36d;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 577
    },
    "0043a3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a3a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x43a3e5;\n            fcn.0040ab40();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x43a3f4;\n                iVar5 = fcn.00442120();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x43a505;\n                    fcn.0040ad60();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x0043a525:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x5d31dc + -1;\n                    uVar7 = *0x5d31dc - 1;\n                    uVar8 = uVar7;\n                    *0x5d31dc = iVar2;\n                    if (-1 < uVar7) goto code_r0x0043a525;\n                    *(*0x20 + -0x48) = 0x43a56b;\n                    cVar4 = fcn.00433ce0();\n                    goto code_r0x0043a56b;\n                }\n            }\n            iVar3 = *0x5d31a0;\n            if (*0x5d31a0 != 0) {\n                *0x5d31a0 = *(*0x5d31a0 + 0x128);\n                *0x5d31a8 = *0x5d31a8 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x43a430;\n                uVar6 = fcn.00437680();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x43a445;\n                fcn.0040ad60();\n                *(*0x20 + -0x48) = 0x43a46f;\n                fcn.00439dc0(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x43a4b8;\n            fcn.0040ad60();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x0043a56b:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x43a589;\n                        fcn.0040ae40();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x194) != *(iVar5 + 0x194));\n                    if ((*(iVar5 + 0x194) == *(iVar5 + 400)) && (*(iVar5 + 0x998) == 0)) goto code_r0x0043a56b;\n                    *(*0x20 + -0x48) = 0x43a607;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x48) = 0x43a618;\n                fcn.00433ce0();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x43a629;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x43a638;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1561
    },
    "0043a660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a660(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x5d31f0 != 0)) {\n        fcn.0043a3a0();\n        return;\n    }\n    if (*0x626644 != 0) {\n        if ((*(in_RAX + 0x1238) == 0) || ((*(*(in_RAX + 0x1238) + 0x10) == 0 && (*(*(in_RAX + 0x1240) + 0x10) == 0)))) {\n            if (*0x5d2be0 == 0) {\n                if (*0x5d2c68 < *0x5d2c6c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.0043a3a0();\n            return;\n        }\n    }\n    uVar2 = *0x5d31dc + *0x5d31d8;\n    if ((*0x5d31dc + *0x5d31d8 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x5d31dc == 0)) {\n        *0x5d31dc = 1;\n        fcn.0043a3a0();\n        return;\n    }\n    fcn.0040ab40(uVar2);\n    if (*0x5d3260 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x5d3264 + -1;\n        bVar5 = *0x5d3264 == 1;\n        *0x5d3264 = iVar3;\n        if (bVar5) {\n            fcn.0040ae40();\n        }\n        fcn.0040ad60();\n        return;\n    }\n    if (*(in_RAX + 0x2270) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2270) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2270) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x5d3280)();\n        iVar3 = *0x5d3288 + -1;\n        bVar5 = *0x5d3288 == 1;\n        *0x5d3288 = iVar3;\n        if (bVar5) {\n            fcn.0040ae40();\n        }\n    }\n    if (*0x5d31f0 == 0) {\n        if ((*0x5d31d8 == *0x626650 + -1) && (*0x5d3188 != 0)) {\n            fcn.0040ad60();\n            fcn.0043a3a0();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1208);\n        iVar4 = *(in_RAX + 0x1210);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.00442000();\n        fcn.0040ad60();\n        if (iVar4 != 0) {\n            fcn.0043c0e0();\n        }\n        return;\n    }\n    fcn.0040ad60();\n    fcn.0043a3a0();\n    return;\n}\n",
        "token_count": 976
    },
    "0043a9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a9c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x43aa10;\n                    fcn.004404c0();\n                    *(*0x20 + -0x50) = 0x43aa15;\n                    fcn.0043a660();\n                }\n                *(*0x20 + -0x50) = 0x43aa1f;\n                fcn.00440620();\n                *(*0x20 + -0x50) = 0x43aa25;\n                fcn.00438f00();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x43aa56;\n                    fcn.00440340();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x43aa7d;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x43aa8e;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43aa99;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x43aaaa;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43aaaf;\n                fcn.00435500();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x43aae5;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x43aaf6;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43ab05;\n                fcn.00435d00();\n                *(*0x20 + -0x50) = 0x43ab16;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43ab25;\n                fcn.00435b80();\n                *(*0x20 + -0x50) = 0x43ab36;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43ab45;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x43ab4a;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43ab4f;\n                fcn.00435500();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x43ab6f;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x43ab85;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43ab8f;\n                fcn.00435d00();\n                *(*0x20 + -0x50) = 0x43aba5;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43abaf;\n                fcn.00435b80();\n                *(*0x20 + -0x50) = 0x43abc5;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x43abd0;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x43abd5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43abda;\n                fcn.00435500();\n                *(*0x20 + -0x50) = 0x43abeb;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x50) = 0x43abfc;\n            fcn.00433ce0();\n        }\n        *(puVar3 + -8) = 0x43ac05;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1387
    },
    "0043ac20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ac20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43ac5f;\n                    fcn.00440620();\n                    *(*0x20 + -0x28) = 0x43ac65;\n                    uVar2 = fcn.004404c0();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43ac7e;\n                    fcn.0040ae40();\n                    *(*0x20 + -0x28) = 0x43ac85;\n                    fcn.0043a260();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43aca5;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x28) = 0x43acb6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43acc5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 493
    },
    "0043ace0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ace0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d3260 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x0043ad30:\n                    *(*0x20 + -0x28) = 0x43ad35;\n                    uVar2 = fcn.004404c0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43ad48;\n                    fcn.0040ab40();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x5d3264 + -1;\n                    bVar5 = *0x5d3264 == 1;\n                    *0x5d3264 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x43ad74;\n                        fcn.0040ae40();\n                    }\n                    *(*0x20 + -0x28) = 0x43ad85;\n                    fcn.0040ad60();\n                    *(*0x20 + -0x28) = 0x43ad8a;\n                    fcn.0043a260();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x5d31dc + -1;\n                iVar3 = *0x5d31dc + -1;\n                *0x5d31dc = iVar1;\n                if (-1 < iVar3) goto code_r0x0043ad30;\n                *(*0x20 + -0x28) = 0x43ada5;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x28) = 0x43adb6;\n            fcn.00433ce0();\n        }\n        *(puVar4 + -8) = 0x43adbc;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "0043ade0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ade0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626890 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045ea40(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x626890 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.0045eba0(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00438040(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x5d3298) {\n        fcn.00431380();\n    }\n    if (*0x5d8810 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.00452be0();\n        }\n        fcn.00452880();\n    }\n    fcn.0045c620();\n    return;\n}\n",
        "token_count": 480
    },
    "0043af60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b198)\n// WARNING: Removing unreachable block (ram,0x0043b19d)\n\nuint64_t fcn.0043af60(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\ncode_r0x0043af8e:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x5d3260 != 0) {\n        fcn.0043ace0();\n    }\n    if (*(uVar2 + 0x2270) != 0) {\n        fcn.00439500();\n    }\n    uVar3 = fcn.0043c8e0();\n    if (((*0x626606 != '\\0') && (*0x626607 != '\\0')) && (iVar4 = fcn.004166e0(),  iVar4 != 0)) {\n        fcn.004378e0(1);\n    }\n    iVar4 = **0x5ca598;\n    if (iVar4 != 0) {\n        fcn.0045e620();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.00442680();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x5d31f0 != 0) {\n        fcn.0040ab40();\n        uStack56 = fcn.00441dc0();\n        fcn.0040ad60();\n        if (uStack56 != 0) {\n            return uStack56;\n        }\n    }\n    if (*0x626658 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x62665c == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x5d3188 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042daa0(),  uVar5 != 0)) {\n        fcn.0043c1c0();\n        fcn.00438040(1);\n        if (*0x5d8810 != '\\0') {\n            fcn.00452ac0();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x626650 - *0x5d31d8;\n        bVar12 = *0x5d31dc << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x626650;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x0043b148;\n    uVar5 = 0;\n    goto code_r0x0043b1a7;\ncode_r0x0043b148:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x5d31dc;\n        *0x5d31dc = *0x5d31dc + 1;\n    }\n    uVar9 = fcn.0043ba00();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x0043b1a7:\n        if (*0x626644 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1238) == 0) || ((*(*(uVar2 + 0x1238) + 0x10) == 0 && (*(*(uVar2 + 0x1240) + 0x10) == 0))))\n        {\n            if (*0x5d2be0 == 0) {\n                if (*0x5d2c68 < *0x5d2c6c) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x0043b22c;\n        while( true ) {\n            if (*0x626728 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x626728 >> 0x13) << 3;\n                *0x626728 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1228) = 3;\n                uVar2 = piVar10[2];\n                fcn.00438040(1);\n                if (*0x5d8810 != '\\0') {\n                    fcn.00452ac0();\n                }\n                return uVar2;\n            }\ncode_r0x0043b22c:\n            noname_2 = *0x5d27a0;\n            arg3 = *0x5d2760;\n            uStack48 = *0x5d26f0;\n            uStack104 = *0x5d26f8;\n            uStack96 = *0x5d2700;\n            uStack72 = *0x5d2750;\n            uStack80 = *0x5d2790;\n            uVar9 = *0x5d26f8;\n            fcn.0040ab40();\n            if ((*0x5d3260 != 0) || (*(uVar2 + 0x2270) != 0)) break;\n            if (*0x5d31f0 != 0) {\n                uStack64 = fcn.00441dc0();\n                fcn.0040ad60();\n                return uStack64;\n            }\n            uVar6 = fcn.004404c0();\n            if (uVar6 == uVar2) {\n                fcn.00442000();\n                fcn.0040ad60();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x0043b423:\n                    iVar4 = *0x5d3188;\n                    if (*0x626658 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x62665c == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x5d3188 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x626658 != 0) && ((*0x5d3190 == 0 || (uVar7 < *0x5d3190)))) {\n                            fcn.0042d9a0();\n                        }\ncode_r0x0043b7e0:\n                        fcn.0043a260();\n                        goto code_r0x0043af8e;\n                    }\n                    uVar9 = 0x5d3190;\n                    *0x5d3190 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.004607e0();\n                            }\n                            uVar3 = fcn.0042daa0(unaff_R14, 0x5d3190);\n                            uVar2 = *0x5d3190;\n                            *0x5d3190 = 0;\n                            fcn.004607e0(uVar2);\n                            iVar4 = *0x5d3188;\n                            *0x5d3188 = iStack232;\n                            if ((*0x626700 == 0) || (uVar3 != 0)) {\n                                fcn.0040ab40(iVar4);\n                                iStack40 = fcn.00442120();\n                                fcn.0040ad60();\n                                if (iStack40 == 0) {\n                                    fcn.0043c1c0();\n                                    goto code_r0x0043b7e0;\n                                }\n                                fcn.00440340();\n                                if (uVar3 != 0) {\n                                    fcn.0043c1c0();\n                                    fcn.00438040(1);\n                                    if (*0x5d8810 != '\\0') {\n                                        fcn.00452ac0();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x5d31dc = *0x5d31dc + 1;\n                                }\n                            }\n                            else {\n                                fcn.0043a260();\n                            }\n                            goto code_r0x0043af8e;\n                        }\n                        fcn.00433ce0();\n                    }\n                    fcn.00433ce0();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x5d31dc - 1;\n                    uVar8 = *0x5d31dc - 1;\n                    uVar9 = uVar8;\n                    *0x5d31dc = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.0043bd80(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.0043bf60();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.00440340();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x5d31dc = *0x5d31dc + 1;\n                                *(iStack40 + 0x1228) = 3;\n                                fcn.00438040(1);\n                                if (*0x5d8810 != '\\0') {\n                                    fcn.00452ac0();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.0043bec0(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x0043b423;\n                        }\n                        fcn.00440340();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x5d31dc = *0x5d31dc + 1;\n                        goto code_r0x0043af8e;\n                    }\n                }\n                fcn.00433ce0();\n            }\n            fcn.00433ce0();\n        }\n        fcn.0040ad60();\n    }\n    goto code_r0x0043af8e;\n}\n",
        "token_count": 2781
    },
    "0043bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043c039)\n\nint64_t fcn.0043bf60(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626644 == 0) {\n        return 0;\n    }\n    if (*0x5d2be0 == 0) {\n        if (*0x5d2c68 < *0x5d2c6c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0040ab40();\n        iVar2 = fcn.00442120();\n        if (iVar2 == 0) {\n            fcn.0040ad60();\n            return 0;\n        }\n        if (*0x626644 != 0) {\n            if (*0x626728 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x626728 >> 0x13) << 3;\n                *0x626728 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.00442000();\n                fcn.0040ad60();\n                return 0;\n            }\n            fcn.0040ad60();\n            return iVar2;\n        }\n        fcn.00442000();\n        fcn.0040ad60();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 407
    },
    "0043c140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c140(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x5d31dc + -1) {\n                    *(*0x20 + -0x20) = 0x43c185;\n                    *0x5d31dc = *0x5d31dc + -1;\n                    fcn.0043a940();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43c1a5;\n                *0x5d31dc = *0x5d31dc + -1;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x20) = 0x43c1b6;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x43c1bc;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 379
    },
    "0043c1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043c1c0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x5d8810 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.00452ac0();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00438040(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040ab40();\n        iVar2 = *0x5d31e0;\n        iVar4 = *0x5d31e8;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x5d31e8 != 0)) {\n            *(*0x5d31e8 + 0xa0) = iStack64;\n            iVar2 = *0x5d31e0;\n        }\n        *0x5d31e8 = iVar4;\n        *0x5d31e0 = iVar2;\n        *0x5d31f0 = *0x5d31f0 + arg1;\n        piVar1 = fcn.0040ad60();\n        while ((arg1 != 0 && (*0x5d31d8 != 0))) {\n            piVar1 = fcn.0043a3a0();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x5d31d8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040ab40();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x5d31e8 == 0) {\n                *0x5d31e0 = auStack48._0_8_;\n            }\n            else {\n                *(*0x5d31e8 + 0xa0) = auStack48._0_8_;\n            }\n            *0x5d31e8 = auStack48._8_8_;\n        }\n        *0x5d31f0 = *0x5d31f0 + iVar2;\n        fcn.0040ad60();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x5d31d8 != 0))) {\n            fcn.0043a3a0();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.00442540(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1084
    },
    "0043c4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c4e0(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x130) != 0) {\n                    *(*0x20 + -0x48) = 0x43c51d;\n                    fcn.0043a9c0();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x130);\n                    *(*0x20 + -0x48) = 0x43c537;\n                    fcn.0043ade0(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x22b0) = 0;\n                            if (*0x5d3260 == 0) break;\n                            *(*0x20 + -0x48) = 0x43c87a;\n                            fcn.0043ace0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x2270) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43c58c;\n                            fcn.00439500();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0x998) != 0 || (param_2 = *(iVar3 + 400),  *(iVar3 + 0x194) != *(iVar3 + 400)))))\n                        break;\n                        *(*0x20 + -0x48) = 0x43c5d3;\n                        fcn.0043c8e0();\n                        if ((*0x5d8810 == '\\0') && (*0x5d8811 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43c5ea;\n                            iVar3 = fcn.004514e0();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x43c605;\n                                fcn.00438040(1);\n                                *(*0x20 + -0x48) = 0x43c611;\n                                fcn.00452ac0();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x626644 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x43c654;\n                            iVar3 = fcn.0041ea00();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x5d31f0)) {\n                                *(*0x20 + -0x48) = 0x43c6a9;\n                                fcn.0040ab40();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x43c6c5;\n                                uVar4 = fcn.00441dc0();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x43c6d8;\n                                fcn.0040ad60();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43c705;\n                            iVar3 = fcn.00442680();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43c719;\n                            iVar3 = fcn.0043af60();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43c73e;\n                            fcn.0043c140();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x5d31f8 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43c769;\n                            uVar1 = fcn.00456aa0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043c83b:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43c845;\n                                fcn.0043a940();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43c86b;\n                                fcn.0043ade0(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x43c553;\n                            fcn.0043ac20();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43c799;\n                            fcn.0040ab40();\n                            if (*0x5d31f8 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x43c7b8;\n                                cVar2 = fcn.00456aa0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43c827;\n                                fcn.0040ad60();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043c83b;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x5d3208 != 0) {\n                                *(*0x5d3208 + 0xa0) = iVar3;\n                                iVar6 = *0x5d3200;\n                            }\n                            *0x5d3200 = iVar6;\n                            *0x5d3210 = *0x5d3210 + 1;\n                            *(*0x20 + -0x48) = 0x43c80f;\n                            *0x5d3208 = iVar3;\n                            fcn.0040ad60();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x43c898;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x48) = 0x43c8a9;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x48) = 0x43c8ba;\n            fcn.00433ce0();\n        }\n        *(puVar8 + -8) = 0x43c8c5;\n        fcn.0045c800();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2490
    },
    "0043c8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043c8e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(in_RAX + 0x1208);\n    iVar2 = *(in_RAX + 0x1210);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.004607e0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x229c) <= *(in_RAX + 0x2298) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040ab40();\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.00450260();\n        do {\n            if (*(in_RAX + 0x2288) == 0) break;\n            iVar1 = fcn.004506a0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2288) >> 2 < *(in_RAX + 0x229c))) {\n        fcn.00450b00();\n    }\n    fcn.0040ad60();\n    return unaff_RBX;\n}\n",
        "token_count": 491
    },
    "0043cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043cca0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43ccdf;\n                fcn.00438040(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43cd0e;\n                fcn.0040ab40();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x5d31e8 != 0) {\n                    *(*0x5d31e8 + 0xa0) = iVar1;\n                    iVar2 = *0x5d31e0;\n                }\n                *0x5d31e0 = iVar2;\n                *0x5d31f0 = *0x5d31f0 + 1;\n                *(*0x20 + -0x38) = 0x43cd5f;\n                *0x5d31e8 = iVar1;\n                fcn.0040ad60();\n                *(*0x20 + -0x38) = 0x43cd65;\n                fcn.0043c4e0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43cd90;\n            fcn.00435480();\n            *(*0x20 + -0x38) = 0x43cda5;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43cdaf;\n            fcn.00435d00();\n            *(*0x20 + -0x38) = 0x43cdc5;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43cdcf;\n            fcn.00435b80();\n            *(*0x20 + -0x38) = 0x43cde5;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43cdf0;\n            fcn.00435a80();\n            *(*0x20 + -0x38) = 0x43cdf5;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43cdfa;\n            fcn.00435500();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43ce1a;\n            fcn.00435480();\n            *(*0x20 + -0x38) = 0x43ce2b;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43ce35;\n            fcn.00435d00();\n            *(*0x20 + -0x38) = 0x43ce46;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43ce50;\n            fcn.00435b80();\n            *(*0x20 + -0x38) = 0x43ce65;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x43ce70;\n            fcn.00435a80();\n            *(*0x20 + -0x38) = 0x43ce75;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43ce7a;\n            fcn.00435500();\n            *(*0x20 + -0x38) = 0x43ce8b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43ce96;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1225
    },
    "0043d000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d000(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d8810 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.00451660(0);\n    }\n    fcn.0043cca0();\n    return;\n}\n",
        "token_count": 139
    },
    "0043d080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d080(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x5d8810 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43d0b2;\n                fcn.00452a40();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043d0fe;\n                *(*0x20 + -0x48) = 0x43d0e7;\n                iVar1 = fcn.0044d780();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x25) & 2) == 0) {\ncode_r0x0043d0fe:\n                        *(*0x20 + -0x48) = 0x43d10d;\n                        fcn.00438480(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43d145;\n                        fcn.00437ba0(9);\n                        *(*0x20 + -0x48) = 0x43d14a;\n                        fcn.0043c4e0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43d159;\n                    uVar2 = fcn.0044df00();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43d168;\n                    fcn.00435480();\n                    *(*0x20 + -0x48) = 0x43d179;\n                    fcn.00435d80();\n                    *(*0x20 + -0x48) = 0x43d188;\n                    fcn.00435d80();\n                    *(*0x20 + -0x48) = 0x43d199;\n                    fcn.00435d80();\n                    *(*0x20 + -0x48) = 0x43d19e;\n                    fcn.00435500();\n                    *(*0x20 + -0x48) = 0x43d1af;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x48) = 0x43d1c5;\n                in_RAX = fcn.00433ce0();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43d1e6;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x43d1f7;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d205;\n            fcn.00435d00();\n            *(*0x20 + -0x48) = 0x43d216;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d225;\n            fcn.00435b80();\n            *(*0x20 + -0x48) = 0x43d236;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d245;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x43d24a;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43d24f;\n            fcn.00435500();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43d26f;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x43d285;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d28f;\n            fcn.00435d00();\n            *(*0x20 + -0x48) = 0x43d2a5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d2af;\n            fcn.00435b80();\n            *(*0x20 + -0x48) = 0x43d2c5;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x43d2d0;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x43d2d5;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43d2da;\n            fcn.00435500();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43d2eb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43d2f6;\n        fcn.00460f20();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1560
    },
    "0043d760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d760(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00436fc0();\n        }\n        return;\n    }\n    fcn.00433ce0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 295
    },
    "0043d7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d7c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043d760();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00438040(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045c6c0();\n    }\n    if (*0x5d8810 != '\\0') {\n        fcn.0045c6c0();\n        fcn.0043d760();\n    }\n    if (*0x5d3270 != 0) {\n        fcn.0045c6c0();\n        fcn.0043d760();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2270) != 0) {\n        fcn.0045c6c0();\n        fcn.0043d760();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x5d3260 != 0) {\n        fcn.0045c6c0();\n        fcn.0043d760();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 566
    },
    "0043e080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043e159)\n\nulong fcn.0043e080(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x5d3264 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.004403a0();\n            fcn.0043e240();\n            return 1;\n        }\n    }\n    if (*0x5d31d0 != 0) {\n        fcn.0045c6c0();\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0043e240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e240(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x5d8810 != '\\0') {\n            fcn.0045c6c0();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0043e7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e7e0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auVar4 [16];\n    char cVar5;\n    uint8_t uVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t iVar13;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + -0x28) = unaff_R14;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x18) = arg1;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(*(unaff_R14 + 0x30) + 0xa0);\n                *(*0x20 + -0x50) = 0x43e83d;\n                iVar7 = fcn.0043f060();\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x50) = 0x43e84f;\n                    uVar8 = fcn.0043e560();\n                    *(*0x20 + -0x30) = uVar8;\n                    *(*0x20 + -0x50) = 0x43e865;\n                    fcn.00438040(6);\n                    *(*0x20 + -0x50) = 0x43e86f;\n                    fcn.00436fe0();\n                    iVar7 = *(*0x20 + -0x30);\n                }\n                if (*(iVar7 + 8) != 0) {\n                    if (*(iVar7 + 0x90) == 6) {\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x38) = *(iVar7 + 8);\n                        *(*0x20 + -0x20) = iVar7 + 0x38;\n                        *(*0x20 + -0x50) = 0x43e8b2;\n                        fcn.0045f580();\n                        iVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + -0x30);\n                        *(iVar11 + 0x38) = iVar7 + -0x20;\n                        *(iVar11 + 0x80) = iVar7 + -0x20;\n                        *(iVar11 + 0x40) = 0x45ea01;\n                        *(iVar11 + 0x48) = iVar11;\n                        *(*0x20 + -0x50) = 0x43e8ef;\n                        fcn.00449dc0(iVar11, iVar11, in_R8, in_R9);\n                        iVar7 = *(*0x20 + -0x30);\n                        *(iVar7 + 0x128) = *(*0x20 + 0x18);\n                        *(*0x20 + -0x50) = 0x43e90a;\n                        uVar8 = fcn.0043eba0();\n                        if (*0x626890 == 0) {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(iVar11 + 0x130) = uVar8;\n                        }\n                        else {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(*0x20 + -0x50) = 0x43e933;\n                            fcn.0045ea40(iVar11, iVar7, in_R8, in_R9);\n                        }\n                        *(iVar11 + 0x138) = **(*0x20 + 8);\n                        *(*0x20 + -0x50) = 0x43e94c;\n                        cVar5 = fcn.00456aa0();\n                        if (cVar5 == '\\0') {\n                            iVar7 = *(*(*(*0x20 + -0x28) + 0x30) + 0x90);\n                            if (iVar7 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                            }\n                            else if (*0x626890 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(iVar13 + 0x168) = *(iVar7 + 0x168);\n                            }\n                            else {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(*0x20 + -0x50) = 0x43e9b4;\n                                fcn.0045eba0(iVar11, *(*0x20 + -0x28), iVar13, in_R9);\n                            }\n                        }\n                        else {\n                            LOCK();\n                            *0x5d31c8 = *0x5d31c8 + 1;\n                            iVar13 = *(*0x20 + -0x30);\n                        }\n                        uVar9 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                        auVar4 = ZEXT816(uVar9) * ZEXT816(uVar9 ^ 0xe7037ed1a0b428db);\n                        *(*(unaff_R14 + 0x30) + 0xf0) = uVar9;\n                        uVar6 = SUB161(auVar4, 0) ^ SUB161(auVar4 >> 0x40, 0);\n                        *(iVar13 + 0xbd) = uVar6;\n                        if ((uVar6 & 7) == 0) {\n                            *(iVar13 + 0xbc) = 1;\n                        }\n                        *(*0x20 + -0x50) = 0x43ea13;\n                        fcn.00438040(1);\n                        piVar10 = *(*0x20 + -0x30);\n                        iVar11 = piVar10[1] - *piVar10;\n                        iVar7 = *(*0x20 + -0x18);\n                        if (iVar7 == 0) {\n                            LOCK();\n                            *0x626f78 = *0x626f78 + iVar11;\n                        }\n                        else {\n                            iVar3 = *(iVar7 + 0x22a8);\n                            iVar13 = iVar3 + iVar11;\n                            *(iVar7 + 0x22a8) = iVar13;\n                            if (0x3ffe < iVar3 + iVar11 + 0x1fffU) {\n                                LOCK();\n                                *0x626f78 = *0x626f78 + iVar13;\n                                *(iVar7 + 0x22a8) = 0;\n                            }\n                        }\n                        iVar11 = *0x5d3180;\n                        if (*(iVar7 + 0x188) == *(iVar7 + 0x180)) {\n                            LOCK();\n                            iVar13 = *0x5d3180 + 1;\n                            *0x5d3180 = *0x5d3180 + 0x10;\n                            *(iVar7 + 0x180) = iVar13;\n                            *(iVar7 + 0x188) = iVar11 + 0x11;\n                        }\n                        piVar10[0x13] = *(iVar7 + 0x180);\n                        *(iVar7 + 0x180) = *(iVar7 + 0x180) + 1;\n                        if (*0x5d8810 != '\\0') {\n                            *(*0x20 + -0x50) = 0x43eada;\n                            fcn.004527a0();\n                            piVar10 = *(*0x20 + -0x30);\n                        }\n                        iVar2 = *(*(*(*0x20 + -0x28) + 0x30) + 0xd8);\n                        *(*(*(*0x20 + -0x28) + 0x30) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return piVar10;\n                    }\n                    *(*0x20 + -0x50) = 0x43eb29;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x50) = 0x43eb3a;\n                fcn.00433ce0();\n            }\n            arg1 = *(unaff_R14 + 0x30);\n            *(arg1 + 0xc4) = 0xffffffff;\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x50) = 0x43eb59;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x43eb6e;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2246
    },
    "0043eba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043eba0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x626ad4 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x626ad4 < iVar9) {\n                iVar9 = *0x626ad4;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43ec45;\n            uVar4 = fcn.00447160(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43ec8d;\n                fcn.00411cc0(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43ecaf;\n                fcn.0045f0ae();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43ece7;\n                uVar4 = fcn.00452f20(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43ecfe;\n                puVar5 = fcn.00447160(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43ed2e;\n                    fcn.0045f840(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x626890 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ede6;\n                    fcn.00411b00(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43edf2;\n                puVar6 = fcn.0040cc20();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x626890 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ee25;\n                    puVar6 = fcn.0045eb40(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43ee3f;\n            in_RAX = fcn.0045efa0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43ee4a;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1618
    },
    "0043ee60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ee60(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43eeb4;\n                    fcn.004482a0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43efa5;\n                    fcn.0040ab40();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x5d3228;\n                        *0x5d3228 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x5d3220;\n                        *0x5d3220 = *(*0x20 + -0x38);\n                    }\n                    *0x5d3230 = *0x5d3230 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43f025;\n                    fcn.0040ad60();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43f03b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43f04b;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1216
    },
    "0043f060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043f060(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x5d3220 == 0 && (*0x5d3228 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if (*piVar1 == 0) {\n                    fcn.0045c6c0();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040ab40();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x5d3220 == 0) {\n                if (*0x5d3228 == 0) break;\n                iVar2 = *0x5d3228;\n                *0x5d3228 = *(*0x5d3228 + 0xa0);\n            }\n            else {\n                iVar2 = *0x5d3220;\n                *0x5d3220 = *(*0x5d3220 + 0xa0);\n            }\n            *0x5d3230 = *0x5d3230 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.0040ad60();\n    } while( true );\n}\n",
        "token_count": 511
    },
    "0043f260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043f260(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040ab40();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x5d3228;\n        *0x5d3228 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x5d3220;\n        *0x5d3220 = auStack72._0_8_;\n    }\n    *0x5d3230 = *0x5d3230 + iVar2;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 602
    },
    "0043f440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f440(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0x238);\n    if (iVar1 != 0) {\n        *(*(unaff_R14 + 0x30) + 0x238) = iVar1 + -1;\n        iVar2 = *(unaff_R14 + 0x30);\n        if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n            *(iVar2 + 0x130) = 0;\n            *(unaff_R14 + 0xe8) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0043f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f4a0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.0045c6c0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043f580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f580(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f5dc;\n                in_RAX = fcn.0045eb40();\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f611;\n                in_RAX = fcn.0045eb40();\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43f625;\n            fcn.0042cf20(in_RAX + 0x498);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar5 = *(*0x20 + 0x10);\n                if (iVar5 != 0) {\n                    *(*0x20 + -0x20) = 0x43f65a;\n                    uVar2 = fcn.004149a0();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar5 = *(*0x20 + 0x10);\n                    goto code_r0x0043f667;\n                }\n                if (*0x626750 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x626750;\n                    goto code_r0x0043f667;\n                }\n            }\n            else {\n                iVar5 = *(*0x20 + 0x10);\ncode_r0x0043f667:\n                arg1 = *0x5d2798;\n                iVar6 = ((iVar5 >> 0x1f) >> 0x1b) + iVar5 >> 5;\n                uVar4 = iVar5 + iVar6 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar6;\n                    if (uVar3 < *0x5d2798) {\n                        puVar1 = *0x5d2790 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x5d2758) {\n                            puVar1 = *0x5d2750 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43f6df;\n                        fcn.0045eee0(*0x5d2758);\n                    }\n                    *(*0x20 + -0x20) = 0x43f6e7;\n                    fcn.0045eee0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43f6ec;\n                fcn.00432200();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43f6fd;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x43f70c;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1172
    },
    "0043f720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f720(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar1 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar1;\n        iVar2 = *(in_RAX + 0x198 + (uVar1 & 0xff) * 8);\n        *(iVar2 + 0xa0) = *0x5d31e0;\n        if (*0x5d31e8 == 0) {\n            *0x5d31e8 = iVar2;\n        }\n        *0x5d31f0 = *0x5d31f0 + 1;\n        *0x5d31e0 = iVar2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x5d31e0;\n        if (*0x5d31e8 == 0) {\n            *0x5d31e8 = iVar2;\n        }\n        *0x5d31f0 = *0x5d31f0 + 1;\n        *0x5d31e0 = iVar2;\n        *(in_RAX + 0x998) = 0;\n    }\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0040ab40();\n        fcn.0040ab40();\n        fcn.00450000(*(in_RAX + 0x2288));\n        *(in_RAX + 0x2288) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar2 = in_RAX;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x2280) = 0;\n        }\n        else {\n            fcn.0045eb60(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x2298) = 0;\n        *(iVar2 + 0x1208) = 0;\n        fcn.0040ad60();\n        fcn.0040ad60();\n    }\n    if (*0x62664c != 0) {\n        fcn.0042d0a0();\n        fcn.00423560(in_RAX);\n    }\n    fcn.00411e00(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n    }\n    else {\n        fcn.0045eb60(in_RAX, in_RAX + 0x9c8, param_3, param_4);\n    }\n    fcn.00411e00();\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.0045eb60(in_RAX, in_RAX + 0x80, param_3, param_4);\n    }\n    fcn.0045c6c0();\n    fcn.00414b00(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043f260();\n    fcn.004515a0();\n    *(in_RAX + 0x1218) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1031
    },
    "0043fb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043fb00(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x626650) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x626650;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x5d8810 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43fb7c;\n                    fcn.00451660(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43fb85;\n                fcn.004607e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x5d32a0 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x5d32a8 = *0x5d32a8 + uVar13 * (iVar6 - *0x5d32a0);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x5d32a0 = iVar6;\n                if (*0x5d26f8 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43fc17;\n                    fcn.0040ab40();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x5d2700 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43fc5c;\n                        uVar5 = fcn.00447160(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43fc86;\n                        fcn.00411cc0(uVar5);\n                        *0x5d26f8 = *(*0x20 + -0x48);\n                        *0x5d2700 = *0x5d26f8;\n                        if (*0x626890 == 0) {\n                            *0x5d26f0 = *(*0x20 + -0x10);\n                            piVar16 = *0x5d26f8;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43fcc7;\n                            fcn.0045eba0(uVar5, *0x5d26f8, uVar7, arg4);\n                            piVar16 = *0x5d26f8;\n                        }\ncode_r0x0043fcce:\n                        *0x5d26f8 = piVar16;\n                        unaff_RSI = *0x5d2758;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x5d2760 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43fd33;\n                            uVar5 = fcn.00447000(*0x5d2758);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x626890 != 0) {\n                                *(*0x20 + -0xb0) = 0x43fd65;\n                                piVar16 = *0x5d2758;\n                                *0x5d2758 = unaff_RBX;\n                                piVar15 = *0x5d2760;\n                                *0x5d2760 = unaff_RBX;\n                                fcn.0045ea40(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x5d2750;\n                                piVar16 = *0x5d2758;\n                                piVar15 = *0x5d2760;\n                            }\n                            *0x5d2760 = piVar15;\n                            *0x5d2758 = piVar16;\n                            *0x5d2750 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43fd7f;\n                            uVar5 = fcn.00447000(*0x5d2798);\n                            *0x5d27a0 = *(*0x20 + -0x50);\n                            piVar16 = *0x5d27a0;\n                            if (*0x626890 != 0) {\n                                *(*0x20 + -0xb0) = 0x43fdb0;\n                                piVar16 = *0x5d2798;\n                                *0x5d2798 = *0x5d27a0;\n                                fcn.0045ea40(piVar16, *0x5d27a0, uVar7, arg4);\n                                uVar5 = *0x5d2790;\n                                piVar16 = *0x5d2798;\n                            }\ncode_r0x0043fdb2:\n                            *0x5d2798 = piVar16;\n                            *0x5d2790 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43fdbe;\n                            fcn.0040ad60();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043fe00;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x5d2760;\n                        if (unaff_RBX <= *0x5d2760) {\n                            piVar15 = *0x5d27a0;\n                            *0x5d2758 = unaff_RBX;\n                            uVar5 = *0x5d2790;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x5d27a0) goto code_r0x0043fdb2;\n                            goto code_r0x004402f9;\n                        }\n                        goto code_r0x00440305;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x5d2700;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x5d2700) goto code_r0x0043fcce;\n                }\n                else {\ncode_r0x0043fe00:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x5d26f8;\n                        piVar15 = piVar16;\n                        if (*0x5d26f8 <= unaff_RSI) goto code_r0x004402f1;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x5d26f0)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43fe47;\n                            iVar6 = fcn.0040cc20();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43fe65;\n                        fcn.0043f580();\n                        piVar12 = *0x5d26f8;\n                        piVar15 = *0x5d26f0;\n                        if (*0x5d26f8 <= *(*0x20 + -0x40)) goto code_r0x004402ec;\n                        piVar15 = *0x5d26f0 + *(*0x20 + -0x40);\n                        if (*0x626890 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43feaf;\n                            fcn.00403920();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043ff78:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043ff80:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x5d26f0;\n                        piVar12 = *0x5d26f8;\n                        if (*0x5d26f8 != NULL) {\n                            iVar6 = **0x5d26f0;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43ffc5;\n                            fcn.00440340();\n                            if (*0x5d8810 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43ffd3;\n                                fcn.00452880();\n                            }\n                            goto code_r0x0043ffd3;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043ff78;\n                            if (*0x5d8810 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43ff15;\n                                fcn.00451660(0);\n                                *(*0x20 + -0xb0) = 0x43ff2d;\n                                fcn.00452520();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043ff80;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43ff76;\n                        fcn.00415280();\n                        piVar16 = unaff_RBX;\ncode_r0x0043ffd3:\n                        *0x626750 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x5d26f8,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x5d26f8;\n                            if (*0x5d26f8 <= piVar16) goto code_r0x004402d8;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43fffa;\n                            fcn.0043f720();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x5d26f8) {\ncode_r0x004400c5:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x5d2820 = uVar9;\n                                    *0x5d2830 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x5d2828,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x5d2830 + 1;\n                                            uVar10 = *0x5d2830;\n                                            uVar8 = *0x5d2828;\n                                            if (*0x5d2838 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x4401fe;\n                                                uVar9 = *0x5d2830;\n                                                uVar10 = *0x5d2828;\n                                                uVar8 = fcn.00447240(*0x5d2830);\n                                                uVar4 = uVar8;\n                                                *0x5d2838 = uVar9;\n                                                if (*0x626890 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x440225;\n                                                    uVar8 = fcn.0045ea40(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x5d2828;\n                                                }\n                                                *0x5d2828 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x5d2830 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x626650 = uVar9;\n                                    return;\n                                }\n                                if (*0x5d26f8 <= uVar18) break;\n                                uVar11 = (*0x5d26f0)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x5d31a0;\n                                    do {\n                                    } while (*(uVar11 + 0x194) != *(uVar11 + 0x194));\n                                    if ((*(uVar11 + 0x194) == *(uVar11 + 400)) && (*(uVar11 + 0x998) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x440145;\n                                        fcn.00442000();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x5d31a0 != 0) {\n                                            *0x5d31a0 = *(*0x5d31a0 + 0x128);\n                                            *0x5d31a8 = *0x5d31a8 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x4402ba;\n                            fcn.0045eee0(*0x5d26f8);\ncode_r0x004402ba:\n                            *(*0x20 + -0xb0) = 0x4402c5;\n                            fcn.0045ef60(piVar16, piVar12);\ncode_r0x004402c5:\n                            *(*0x20 + -0xb0) = 0x4402cd;\n                            fcn.0045ef60(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x44004c;\n                            fcn.0040ab40();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x5d2700;\n                            if (piVar15 <= *0x5d2700) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x5d2760;\n                                *0x5d26f8 = piVar15;\n                                if (piVar16 <= *0x5d2760) {\n                                    piVar12 = *0x5d27a0;\n                                    *0x5d2758 = piVar16;\n                                    if (piVar16 <= *0x5d27a0) {\n                                        *(*0x20 + -0xb0) = 0x4400be;\n                                        *0x5d2798 = piVar16;\n                                        fcn.0040ad60();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x004400c5;\n                                    }\n                                    goto code_r0x004402ba;\n                                }\n                                goto code_r0x004402c5;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x4402d8;\n                        piVar15 = piVar16;\n                        fcn.0045ef60(piVar12, piVar16);\ncode_r0x004402d8:\n                        *(*0x20 + -0xb0) = 0x4402e5;\n                        piVar12 = unaff_RSI;\n                        fcn.0045eee0(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x4402ec;\n                    fcn.0045eee0(piVar12);\ncode_r0x004402ec:\n                    *(*0x20 + -0xb0) = 0x4402f1;\n                    fcn.0045eee0(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x004402f1:\n                    *(*0x20 + -0xb0) = 0x4402f9;\n                    fcn.0045eee0(piVar12);\ncode_r0x004402f9:\n                    *(*0x20 + -0xb0) = 0x440305;\n                    fcn.0045ef60(unaff_RBX, piVar15);\ncode_r0x00440305:\n                    *(*0x20 + -0xb0) = 0x44030d;\n                    fcn.0045ef60(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x440315;\n                fcn.0045ef60(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x440326;\n            in_EAX = fcn.00433ce0();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x440330;\n        fcn.0045c800();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 5016
    },
    "00440340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440340(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004403a0();\n    fcn.00415280();\n    if (*0x5d8810 != '\\0') {\n        fcn.004524c0();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "004403a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004403a0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00433ce0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.004356e0();\n        fcn.00435500();\n        fcn.00433ce0();\n    } while( true );\n}\n",
        "token_count": 286
    },
    "004404c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004404c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x5d8810 != '\\0') {\n                        *(*0x20 + -0x48) = 0x44051e;\n                        fcn.00452520();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x44055d;\n                fcn.00435480();\n                *(*0x20 + -0x48) = 0x44056e;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x440578;\n                fcn.00435d00();\n                *(*0x20 + -0x48) = 0x440589;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x440593;\n                fcn.00435d00();\n                *(*0x20 + -0x48) = 0x4405a5;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x4405af;\n                fcn.00435be0();\n                *(*0x20 + -0x48) = 0x4405c5;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x4405cf;\n                fcn.00435a80();\n                *(*0x20 + -0x48) = 0x4405d4;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x4405d9;\n                fcn.00435500();\n                *(*0x20 + -0x48) = 0x4405ea;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x48) = 0x4405fb;\n            fcn.00433ce0();\n        }\n        *(puVar4 + -8) = 0x440605;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 831
    },
    "00440680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440680(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x62660c != '\\0') || (*0x62660a != '\\0')) {\n                return;\n            }\n            if (*0x626668 != 0) {\n                return;\n            }\n            if ((*0x62660b == '\\0') && (*0x626603 != '\\0')) {\n                *(*0x20 + -0x50) = 0x4406e6;\n                *0x6266f8 = fcn.00439cc0();\n                uVar5 = *0x626630 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x5d31ac;\n            uVar6 = *0x5d31a8;\n            iVar8 = *0x5d31b0 - *0x5d31c0;\n            uVar12 = *0x5d31bc;\n            uVar7 = ((iVar8 - *0x5d31a8) - *0x5d31ac) - *0x5d31bc;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x5d31a8;\n            uVar11 = *0x5d31bc;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x440960;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x44076e;\n                fcn.00437140();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x626700 == 0) {\ncode_r0x0044079e:\n                        uVar6 = *0x5d26f8;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x5d26f8 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x4407fb;\n                                fcn.0040ad60();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x44080c;\n                                fcn.00433ce0();\n                                goto code_r0x0044080c;\n                            }\n                            if (*(*(*0x5d26f0 + iVar2 * 8) + 0x2288) != 0) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x440789;\n                    iVar2 = fcn.00450fa0();\n                    if (uVar9 == 0) goto code_r0x0044079e;\n                    puVar3 = 0x5d31d0;\n                    *0x626700 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0044080c:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x5d31a0;\n                    if (*0x5d31a0 != 0) {\n                        uVar6 = *(*0x5d31a0 + 0x128);\n                        *0x5d31a8 = *0x5d31a8 - 1;\n                        *0x5d31a0 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x440865;\n                        fcn.0040ae40();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x440885;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x50) = 0x440893;\n                fcn.0040ad60();\n                *(*0x20 + -0x50) = 0x4408a5;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x4408bc;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x4408cd;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x4408d9;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x4408ea;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x4408f6;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x440907;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x440914;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x440925;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x440931;\n            fcn.00435b80();\n            *(*0x20 + -0x50) = 0x440936;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x44093b;\n            fcn.00435500();\n            *(*0x20 + -0x50) = 0x44094c;\n            fcn.00433ce0();\n        }\n        *(puVar10 + -8) = 0x440952;\n        fcn.0045c800();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1721
    },
    "00440f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00440f20(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x5d26f8; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x5d26f0 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.00441200();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar6 = *0x5d31dc + *0x5d31d8 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040ad60();\n                        fcn.00440620();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x5d8810 != '\\0') {\n                                fcn.00452ca0();\n                                fcn.00452520();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.0043a660();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.00440620();\n                        fcn.0040ab40();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040ad60();\n    return iVar4;\n}\n",
        "token_count": 748
    },
    "00441160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00441160(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x5d26f8,  iVar1 = *0x5d26f0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.00441200();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 229
    },
    "00441200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441200(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x626ad8 == 0) {\n                *(in_RAX + 0x22b0) = 1;\n                fcn.00431460();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "00441420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441420(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004607e0();\n    if (*0x6267d8 == 0) {\n        *0x6267d8 = iStack184;\n    }\n    fcn.0040ab40();\n    iStack40 = *0x6267d8;\n    uStack48 = *0x5d31d8;\n    uStack56 = *0x5d31dc;\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435b80(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435500();\n    if (in_AL != '\\0') {\n        uStack48 = *0x5d3260;\n        iStack40 = *0x5d31ac;\n        uStack56 = *0x5d3270;\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.004356e0();\n        fcn.00435500();\n    }\n    iVar3 = *0x5d26f8;\n    iStack16 = *0x5d26f0;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00435480();\n            fcn.004356a0();\n            fcn.00435500();\n            if (iVar4 == 0) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n            }\n            fcn.00435480();\n            fcn.00435a80(uVar1);\n            fcn.00435500();\n            if (iVar4 == *0x5d26f8 + -1) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0x9a8);\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435a80(uVar1);\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.004356e0();\n            fcn.00435500();\n        }\n    }\n    iVar4 = *0x5d1cd8;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.00435d80();\n            fcn.00435720();\n            fcn.00435d80();\n            fcn.00435720();\n            fcn.00435d80();\n            fcn.00435b80();\n            fcn.004356e0();\n            fcn.00435500();\n            iVar4 = *(iStack32 + 0x120);\n        }\n        fcn.00437140();\n        fcn.0040ad20();\n        return;\n    }\n    fcn.0040ad20();\n    return;\n}\n",
        "token_count": 1346
    },
    "00441c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441c20(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar2 = *0x5d3210;\n    uVar1 = in_AL ^ 1;\n    if (*0x5d31f8 != uVar1) {\n        *0x5d31f8 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040ad60();\n        }\n        else {\n            *0x5d3210 = 0;\n            if (*0x5d3208 != 0) {\n                *(*0x5d3208 + 0xa0) = 0;\n                if (*0x5d31e8 == 0) {\n                    *0x5d31e0 = *0x5d3200;\n                }\n                else {\n                    *(*0x5d31e8 + 0xa0) = *0x5d3200;\n                }\n                *0x5d31e8 = *0x5d3208;\n            }\n            *0x5d31f0 = *0x5d31f0 + iVar2;\n            *0x5d3200 = in_XMM15;\n            fcn.0040ad60();\n            while ((iVar2 != 0 && (*0x5d31d8 != 0))) {\n                fcn.0043a3a0();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 424
    },
    "00442540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442540(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040ab40();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x5d31e0;\n        iVar3 = *0x5d31e8;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x5d31e8 != 0)) {\n            *(*0x5d31e8 + 0xa0) = uVar4;\n            uVar5 = *0x5d31e0;\n        }\n        *0x5d31e8 = iVar3;\n        *0x5d31e0 = uVar5;\n        *0x5d31f0 = *0x5d31f0 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040ad60();\n    }\n    return;\n}\n",
        "token_count": 566
    },
    "00442840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00442840(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045c6c0();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 565
    },
    "004429e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004429e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x442a1d;\n            iVar5 = fcn.00442840(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x198 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 400)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x194) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x442a9a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x442aae;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "00442ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442ae0(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x442b51;\n                    fcn.00442ae0();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x6268e0 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x442b85;\n                    fcn.004607e0();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x6268f8;\n                    uVar7 = *0x6268f0;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x442c0d;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x6268e0 == '\\0') goto code_r0x00442de2;\n                *(*0x20 + -0x130) = 0x442c4c;\n                fcn.004607e0(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0xc0) = *0x6268f0;\n                *(*0x20 + -200) = *0x6268f8;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x442c91;\n                fcn.0044d780();\n                *(*0x20 + -0x130) = 0x442c96;\n                uVar3 = fcn.0044dfc0();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x442cb4;\n                fcn.00435480();\n                *(*0x20 + -0x130) = 0x442cc5;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442cd7;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442ce8;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442ced;\n                fcn.00435500();\n                *(*0x20 + -0x130) = 0x442d0e;\n                uVar4 = fcn.0041a520(0x18);\n                *(*0x20 + -0x130) = 0x442d25;\n                uVar3 = fcn.0044afa0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442d37;\n                fcn.00435480();\n                *(*0x20 + -0x130) = 0x442d49;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442d5a;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442d5f;\n                fcn.00435500();\n                *(*0x20 + -0x130) = 0x442d7e;\n                uVar4 = fcn.0041a520(0x18);\n                *(*0x20 + -0x130) = 0x442d91;\n                uVar3 = fcn.0044afa0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442da5;\n                fcn.00435480();\n                *(*0x20 + -0x130) = 0x442db7;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442dc8;\n                fcn.00435d80();\n                *(*0x20 + -0x130) = 0x442dcd;\n                fcn.00435500();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x00442fc5;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x442e78;\n                    uVar4 = fcn.0044afa0(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x442e8a;\n                    fcn.00435480();\n                    *(*0x20 + -0x130) = 0x442e9c;\n                    fcn.00435d80();\n                    *(*0x20 + -0x130) = 0x442ead;\n                    fcn.00435d80();\n                    *(*0x20 + -0x130) = 0x442eb2;\n                    fcn.00435500();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00442fa6;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x442f45;\n                        uVar4 = fcn.0044afa0(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x442f57;\n                        fcn.00435480();\n                        *(*0x20 + -0x130) = 0x442f69;\n                        fcn.00435d80();\n                        *(*0x20 + -0x130) = 0x442f7a;\n                        fcn.00435d80();\n                        *(*0x20 + -0x130) = 0x442f7f;\n                        fcn.00435500();\n                        *(*0x20 + -0x130) = 0x442f85;\n                        fcn.00435480();\n                        *(*0x20 + -0x130) = 0x442f8a;\n                        fcn.004356e0();\n                        *(*0x20 + -0x130) = 0x442f8f;\n                        fcn.00435500();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00442de2:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x442fa6;\n                    fcn.0045eee0(0x18);\ncode_r0x00442fa6:\n                    *(*0x20 + -0x130) = 0x442fb3;\n                    fcn.0045eee0(0x18);\n                }\n                *(*0x20 + -0x130) = 0x442fc5;\n                fcn.0045eee0(0x18);\ncode_r0x00442fc5:\n                *(*0x20 + -0x130) = 0x442fd2;\n                fcn.0045eee0(0x18);\n            }\n            *(*0x20 + -0x130) = 0x442fe5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x442ff0;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2832
    },
    "00443000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443000(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = unaff_RBX;\n    *0x626624 = in_EAX;\n    if (*0x626890 != 0) {\n        fcn.0045eb80(arg1, arg2, arg3, arg4);\n        uVar1 = *0x5d1ce0;\n    }\n    *0x5d1ce0 = uVar1;\n    return;\n}\n",
        "token_count": 189
    },
    "00443060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044319a)\n// WARNING: Removing unreachable block (ram,0x004431ab)\n// WARNING: Removing unreachable block (ram,0x004431bc)\n// WARNING: Removing unreachable block (ram,0x004431cd)\n// WARNING: Removing unreachable block (ram,0x004431de)\n// WARNING: Removing unreachable block (ram,0x004431ef)\n// WARNING: Removing unreachable block (ram,0x00443205)\n// WARNING: Removing unreachable block (ram,0x00443216)\n// WARNING: Removing unreachable block (ram,0x00443227)\n// WARNING: Removing unreachable block (ram,0x00443238)\n\nulong fcn.00443060(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x6267f0 = 0x2a;\n    *0x6267f8 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 269
    },
    "00443c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443c40(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00443cb6;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x443c90;\n                    fcn.0040ab40();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x443caa;\n                        fcn.0040ae40();\n                    }\n                    *(*0x20 + -0x20) = 0x443cb6;\n                    fcn.0040ad60();\n                }\ncode_r0x00443cb6:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x443cfb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x443d06;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00443fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443fe0(uint64_t *arg1)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uint16_t uVar3;\n    uchar auVar4 [16];\n    int64_t in_RAX;\n    uint64_t *puVar5;\n    ulong *puVar6;\n    uint64_t *arg4;\n    uint64_t *arg3;\n    ulong uVar7;\n    uint64_t *puVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t *puVar11;\n    uint64_t *puVar12;\n    uchar uVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint64_t *noname_1;\n    uint64_t *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t *unaff_RDI;\n    uint64_t *in_R8;\n    ulong uVar17;\n    uint64_t uVar18;\n    uint64_t *arg4_00;\n    int64_t iVar19;\n    uint64_t *puVar20;\n    uint64_t *puVar21;\n    int64_t iVar22;\n    uint64_t *unaff_R13;\n    int64_t *piVar23;\n    uint64_t *unaff_R14;\n    uint64_t *unaff_R15;\n    int64_t in_GS_OFFSET;\n    bool bVar24;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20 + -0xb8;\n        puVar16 = *0x20;\n        if (unaff_R14[2] <= puVar5 && puVar5 != unaff_R14[2]) {\n            puVar16 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar20 = unaff_RSI + unaff_RDI;\n            puVar11 = puVar20;\n            if (puVar20 < 0x10001) {\n                iVar19 = unaff_RDI + unaff_RSI + -0x20000;\n                uVar14 = puVar20 * 2 & iVar19 >> 0x3f;\n                puVar11 = unaff_RBX + uVar14;\n                if (puVar20 <= -iVar19) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 0x30) = in_R8;\n                    *(*0x20 + -0xa8) = puVar20;\n                    *(*0x20 + -0xb0) = uVar14;\n                    *(*0x20 + -0x88) = puVar11;\n                    *(*0x20 + 8) = in_RAX;\n                    if (*0x6266c8 == 0) {\n                        unaff_RSI = 0;\n                        puVar12 = puVar20;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x444094;\n                        fcn.0045e8c0(puVar20, uVar14);\n                        in_XMM15_Da = 0;\n                        in_XMM15_Db = 0;\n                        in_XMM15_Dc = 0;\n                        in_XMM15_Dd = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        unaff_RSI = *(*0x20 + -0x138);\n                        puVar12 = *(*0x20 + -0xa8);\n                        uVar14 = *(*0x20 + -0xb0);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        in_R8 = *(*0x20 + 0x30);\n                        puVar11 = *(*0x20 + -0x88);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    puVar8 = NULL;\n                    puVar20 = NULL;\n                    while (puVar21 = puVar20,  puVar21 < puVar12) {\n                        iVar19 = puVar21 * 0x10;\n                        if (*(in_RAX + iVar19) == 0) {\n                            unaff_R13 = in_RAX + iVar19 + 8;\n                            if (*0x626890 == 0) {\n                                *(in_RAX + 8 + iVar19) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x4441d6;\n                                in_RAX = fcn.0045ebe0(puVar12, uVar14, in_R8);\n                                unaff_R15 = puVar11;\n                            }\n                        }\n                        else {\n                            unaff_R15 = 0xa0761d6478bd642f;\n                            unaff_R13 = *(unaff_R14[6] + 0xf0) + -0x5f89e29b87429bd1;\n                            auVar4 = ZEXT816(unaff_R13) * ZEXT816(unaff_R13 ^ 0xe7037ed1a0b428db);\n                            *(unaff_R14[6] + 0xf0) = unaff_R13;\n                            puVar5 = (SUB164(auVar4, 0) ^ SUB164(auVar4 >> 0x40, 0)) * (puVar8 + 1U & 0xffffffff) >>\n                                     0x20;\n                            puVar20 = puVar12;\n                            if (puVar12 <= puVar5) goto code_r0x004454a5;\n                            if (puVar12 <= puVar8) goto code_r0x00445498;\n                            *(unaff_RBX + puVar8 * 2) = *(unaff_RBX + puVar5 * 2);\n                            *(unaff_RBX + puVar5 * 2) = puVar21;\n                            in_RAX = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0xb0);\n                            puVar11 = *(*0x20 + -0x88);\n                            puVar8 = puVar8 + 1U;\n                        }\n                        puVar5 = puVar21;\n                        puVar20 = puVar21 + 1;\n                    }\n                    puVar20 = puVar8;\n                    if (puVar8 <= puVar12) {\n                        puVar20 = NULL;\ncode_r0x00444200:\n                        puVar21 = puVar8;\n                        if (puVar8 <= puVar20) {\n                            while (puVar20 = puVar21 - 1,  -1 < puVar20) {\n                                uVar3 = *(puVar11 + puVar20 * 2);\n                                arg4_00 = puVar11;\n                                if (puVar12 <= uVar3) goto code_r0x004453e5;\n                                *(*0x20 + -0xe8) = puVar20;\n                                *(*0x20 + -0x104) = uVar3;\n                                puVar5 = *(in_RAX + uVar3 * 0x10);\n                                *(*0x20 + -0x68) = puVar5;\n                                *(puVar11 + puVar20 * 2) = *(unaff_RBX + uVar14);\n                                puVar21 = puVar20;\n                                unaff_R15 = NULL;\n                                while (puVar11 = unaff_RDI,  noname_1 = unaff_R15 * 2 + 1,  unaff_RDI = puVar11, \n                                      noname_1 < puVar21) {\n                                    unaff_R13 = unaff_R15 * 2 + 2;\n                                    if (unaff_R13 < puVar21) {\n                                        puVar20 = puVar21;\n                                        if (puVar8 <= noname_1) goto code_r0x004453d8;\n                                        puVar21 = *(arg4_00 + unaff_R15 * 4 + 2);\n                                        if (puVar12 <= puVar21) goto code_r0x004453d0;\n                                        puVar21 = *(in_RAX + puVar21 * 0x10);\n                                        if (puVar8 <= unaff_R13) goto code_r0x004453c5;\n                                        *(*0x20 + -0xf0) = unaff_R15;\n                                        unaff_R15 = *(arg4_00 + unaff_R15 * 4 + 4);\n                                        if (puVar12 <= unaff_R15) goto code_r0x004453bd;\n                                        if (puVar21 < *(in_RAX + unaff_R15 * 0x10)) {\n                                            puVar21 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                            noname_1 = unaff_R13;\n                                        }\n                                        else {\n                                            puVar21 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                        }\n                                    }\n                                    if (puVar8 <= noname_1) goto code_r0x004453b2;\n                                    uVar3 = *(arg4_00 + noname_1 * 2);\n                                    unaff_R13 = uVar3;\n                                    if (puVar12 <= unaff_R13) goto code_r0x004453aa;\n                                    *(*0x20 + -0x102) = uVar3;\n                                    unaff_R13 = *(in_RAX + unaff_R13 * 0x10);\n                                    if (unaff_R13 <= puVar5) {\n                                        uVar3 = *(*0x20 + -0x104);\n                                        break;\n                                    }\n                                    if (puVar8 <= unaff_R15) goto code_r0x0044539f;\ncode_r0x0044529e:\n                                    *(arg4_00 + unaff_R15 * 2) = *(*0x20 + -0x102);\n                                    puVar5 = *(*0x20 + -0x68);\n                                    uVar3 = *(*0x20 + -0x104);\n                                    unaff_RDI = puVar11;\n                                    unaff_R15 = noname_1;\n                                }\n                                unaff_R13 = uVar3;\n                                if (puVar8 <= unaff_R15) goto code_r0x00445394;\n                                *(arg4_00 + unaff_R15 * 2) = uVar3;\n                                uVar14 = *(*0x20 + -0xb0);\n                                puVar11 = arg4_00;\n                            }\n                            *(*0x20 + -0x100) = unaff_RSI;\n                            *(*0x20 + -0xf8) = puVar8;\n                            *(*0x20 + -0x140) = 0x4442d0;\n                            fcn.00443d20(puVar12, uVar14, puVar12);\n                            noname_1 = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 8);\n                            unaff_RSI = *(*0x20 + -0xf8);\n                            arg4_00 = *(*0x20 + 0x10);\n                            arg3 = NULL;\n                            unaff_RBX = puVar12;\n                            puVar12 = *(*0x20 + -0xa8);\n                            break;\n                        }\n                        puVar5 = *(unaff_RBX + puVar20 * 2);\n                        if (puVar5 < puVar12) {\n                            uVar10 = *(in_RAX + puVar5 * 0x10);\n                            *(*0x20 + -0x60) = uVar10;\n                            arg4_00 = puVar11;\n                            unaff_R13 = puVar20;\n                            goto code_r0x0044540e;\n                        }\ncode_r0x00445485:\n                        *(*0x20 + -0x140) = 0x44548d;\n                        fcn.0045eee0(puVar12);\n                        puVar20 = puVar8;\n                    }\n                    *(*0x20 + -0x140) = 0x445498;\n                    fcn.0045ef60(puVar20, puVar12);\ncode_r0x00445498:\n                    *(*0x20 + -0x140) = 0x4454a5;\n                    fcn.0045eee0(puVar20);\ncode_r0x004454a5:\n                    *(*0x20 + -0x140) = 0x4454aa;\n                    fcn.0045eee0(puVar20);\n                }\n                *(*0x20 + -0x140) = 0x4454b5;\n                puVar11 = puVar20;\n                fcn.0045f020(puVar20, puVar20);\n                arg1 = puVar20;\n            }\n            unaff_RBX = 0x10000;\n            *(*0x20 + -0x140) = 0x4454bf;\n            in_RAX = fcn.0045efe0(arg1, puVar11);\n        }\n        *(puVar16 + 8) = in_RAX;\n        *(puVar16 + 0x10) = unaff_RBX;\n        *(puVar16 + 0x18) = arg1;\n        *(puVar16 + 0x20) = unaff_RDI;\n        *(puVar16 + 0x28) = unaff_RSI;\n        puVar16[0x30] = in_R8;\n        *(puVar16 + -8) = 0x4454e5;\n        fcn.0045c800();\n        in_RAX = *(puVar16 + 8);\n        unaff_RBX = *(puVar16 + 0x10);\n        arg1 = *(puVar16 + 0x18);\n        unaff_RDI = *(puVar16 + 0x20);\n        unaff_RSI = *(puVar16 + 0x28);\n        in_R8 = puVar16[0x30];\n        *0x20 = puVar16;\n    } while( true );\ncode_r0x00444300:\n    if (arg3 < unaff_RSI) {\n        puVar21 = *(arg4_00 + arg3 * 2);\n        if (puVar12 <= puVar21) {\n            *(*0x20 + -0x140) = 0x44529e;\n            in_R8 = puVar12;\n            in_RAX = fcn.0045eee0(puVar12);\n            goto code_r0x0044529e;\n        }\n        *(*0x20 + -0xb0) = puVar21;\n        puVar20 = puVar21 * 0x10;\n        puVar5 = arg4[puVar21 * 2];\n        *(*0x20 + -0x70) = puVar5;\n        puVar11 = puVar21;\n        if (puVar21 < noname_1) {\n            if (*(puVar5 + 0x1c) != 0) {\n                puVar11 = *(*0x20 + -0x88);\ncode_r0x00444d25:\n                *(*0x20 + -0x140) = 0x444d33;\n                arg3 = puVar12;\n                fcn.00443e20(puVar12, noname_1, puVar12);\n                *(*0x20 + -0x140) = 0x444d46;\n                fcn.00433560();\n                goto code_r0x00444d46;\n            }\n            goto code_r0x00444d81;\n        }\n        do {\n            piVar23 = puVar5[9];\n            if (piVar23 == NULL) {\n                piVar23 = NULL;\n                break;\n            }\n            uVar14 = piVar23[1];\n            if (uVar14 == 0) {\n                if (*0x626890 == 0) {\n                    *(puVar5 + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x140) = 0x445059;\n                    fcn.0045eb60(arg3, 0, puVar12, arg4_00);\n                    *(*0x20 + -0x140) = 0x445065;\n                    arg4 = fcn.0045eb60(arg3, uVar7, puVar12, arg4_00);\n                }\n            }\n            else if (*0x626890 == 0) {\n                *(uVar14 + 0x10) = 0;\n                puVar5[9] = uVar14;\n                piVar23[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = puVar5 + 9;\n                uVar7 = 0;\n                *(*0x20 + -0x140) = 0x445012;\n                fcn.0045eb60(arg3, 0, puVar12, arg4_00);\n                *(*0x20 + -0x140) = 0x445025;\n                fcn.0045ebe0(arg3, uVar7, puVar12);\n                *(*0x20 + -0x140) = 0x44502e;\n                arg4 = fcn.0045eb60(arg3, uVar7, puVar12, uVar14);\n                noname_1 = *(*0x20 + 0x20);\n            }\n            if (*(piVar23 + 0x34) == '\\0') {\n                unaff_R15 = NULL;\n            }\n            else {\n                iVar19 = *piVar23;\n                LOCK();\n                piVar2 = iVar19 + 0x178;\n                bVar24 = *piVar2 == 0;\n                if (bVar24) {\n                    *piVar2 = 1;\n                }\n                unaff_R15 = (iVar19 & 0xffffff00 | bVar24) ^ 1;\n            }\n        } while (unaff_R15 != '\\0');\n        if (piVar23 != NULL) {\n            *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x445580;\n            *(*0x20 + -0x38) = arg4;\n            *(*0x20 + -0x30) = puVar12;\n            *(*0x20 + -0x28) = puVar12;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = puVar12;\n            uVar7 = *(arg4 + 1 + puVar20);\n            *(*0x20 + -0x140) = 0x44527a;\n            fcn.00406300(uVar7);\n            iVar19 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x004443e8;\n        }\n        if (*puVar5 != 0) {\n            iVar19 = puVar5[6] * *(puVar5 + 3) + puVar5[2];\n            if (*(arg4 + 1 + puVar20) != 0) {\n                *(*0x20 + -0x98) = iVar19;\n                *(*0x20 + -0x140) = 0x44516e;\n                fcn.00411b00(iVar19);\n                iVar19 = *(*0x20 + -0x98);\n            }\n            *(*0x20 + -0x140) = 0x44518b;\n            fcn.00411da0(iVar19);\n            piVar23 = *(*0x20 + -0x70);\n            iVar19 = piVar23[6] + 1;\n            piVar23[6] = iVar19;\n            if (piVar23[1] == iVar19) {\n                piVar23[6] = 0;\n            }\n            *piVar23 = *piVar23 + -1;\n            *(*0x20 + -0x140) = 0x4451d9;\n            fcn.00443e20(*(*0x20 + -0xa8), iVar19, *(*0x20 + -0xa8));\n            iVar19 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x004443e8;\n        }\n        if (*(puVar5 + 0x1c) != 0) {\n            *(*0x20 + -0xa8) = puVar20;\n            *(*0x20 + -0x140) = 0x4450fa;\n            fcn.00443e20(puVar12, noname_1, puVar12);\n            if (*(*(*0x20 + 8) + 8 + *(*0x20 + -0xa8)) != 0) {\n                *(*0x20 + -0x140) = 0x445125;\n                fcn.00411da0();\n            }\n            iVar19 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\ncode_r0x004443e8:\n            if (0 < iVar19) {\n                *(*0x20 + -0x106) = uVar13;\n                *(*0x20 + -0xe0) = uVar7;\n                *(*0x20 + -0x140) = 0x444408;\n                fcn.0042b180(*(*0x20 + -0x100));\n                uVar7 = *(*0x20 + -0xe0);\n            }\n            return uVar7;\n        }\n    }\n    else {\n        arg4_00 = *(*0x20 + 0x30);\n        if (*(*0x20 + 0x30) == 0) {\n            *(*0x20 + -0x140) = 0x4443d8;\n            fcn.00443e20(puVar12, noname_1, puVar12);\n            iVar19 = -1;\n            uVar7 = 0xffffffffffffffff;\n            uVar13 = 0;\n            goto code_r0x004443e8;\n        }\n        if (unaff_R14[0x29] == 0) {\n            *(*0x20 + -0x80) = unaff_R14;\n            puVar8 = unaff_R14 + 0x29;\n            *(*0x20 + -0x48) = puVar8;\n            puVar11 = *(*0x20 + -0x88);\n            iVar19 = 0;\n            arg4_00 = unaff_R14;\n            puVar20 = puVar8;\n            while (iVar19 < unaff_RSI) {\n                puVar11 = *(puVar11 + iVar19 * 2);\n                arg3 = puVar12;\n                if (puVar12 <= puVar11) goto code_r0x00444d5f;\n                *(*0x20 + -0xb0) = puVar11;\n                *(*0x20 + -0xb8) = iVar19;\n                *(*0x20 + -0x90) = puVar20;\n                *(*0x20 + -0xc0) = puVar11 * 0x10;\n                *(*0x20 + -0x70) = arg4[puVar11 * 2];\n                *(*0x20 + -0x140) = 0x4444bb;\n                puVar6 = fcn.00436840();\n                if (*0x626890 == 0) {\n                    uVar7 = *(*0x20 + -0x80);\n                    *puVar6 = uVar7;\n                }\n                else {\n                    uVar7 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x140) = 0x4444e5;\n                    puVar6 = fcn.0045eb60(puVar8, uVar7, puVar12, arg4_00);\n                }\n                *(puVar6 + 0x34) = 1;\n                arg4 = *(*0x20 + 8);\n                uVar17 = *(arg4 + *(*0x20 + -0xc0) + 8);\n                if (*0x626890 == 0) {\n                    puVar6[3] = uVar17;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x444513;\n                    puVar6 = fcn.0045ebc0(puVar8, uVar7, uVar17, arg4);\n                }\n                puVar6[5] = 0;\n                iVar19 = *(*0x20 + -0x100);\n                if (iVar19 != 0) {\n                    puVar6[5] = 0xffffffffffffffff;\n                }\n                if (*0x626890 == 0) {\n                    iVar22 = *(*0x20 + -0x70);\n                    puVar6[10] = iVar22;\n                    **(*0x20 + -0x90) = puVar6;\n                }\n                else {\n                    iVar22 = *(*0x20 + -0x70);\n                    *(*0x20 + -0x140) = 0x444565;\n                    fcn.0045ebc0(iVar19, uVar7, iVar22, arg4);\n                    *(*0x20 + -0x140) = 0x444572;\n                    puVar6 = fcn.0045ea40(iVar19, uVar7, iVar22, arg4);\n                }\n                noname_1 = *(*0x20 + 0x20);\n                if (*(*0x20 + -0xb0) < noname_1) {\n                    if (*0x626890 == 0) {\n                        puVar6[1] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x4445b6;\n                        puVar6 = fcn.0045ebc0(iVar19, uVar7, 0, arg4);\n                    }\n                    iVar15 = *(iVar22 + 0x50);\n                    if (iVar15 == 0) {\n                        if (*0x626890 == 0) {\n                            puVar6[2] = 0;\n                            *(iVar22 + 0x48) = puVar6;\n                            *(iVar22 + 0x50) = puVar6;\n                        }\n                        else {\n                            uVar17 = 0;\n                            *(*0x20 + -0x140) = 0x44463a;\n                            fcn.0045ebc0(iVar19, uVar7, 0, arg4);\n                            *(*0x20 + -0x140) = 0x444645;\n                            fcn.0045ea40(iVar19, uVar7, uVar17, arg4);\n                            *(*0x20 + -0x140) = 0x44464d;\n                            puVar6 = fcn.0045ea40(iVar19, uVar7, uVar17, arg4);\n                        }\n                    }\n                    else if (*0x626890 == 0) {\n                        puVar6[2] = iVar15;\n                        *(iVar15 + 8) = puVar6;\n                        *(iVar22 + 0x50) = puVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x4445f4;\n                        fcn.0045ebc0(iVar19, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x140) = 0x4445fd;\n                        fcn.0045ea40(iVar19, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x140) = 0x444605;\n                        puVar6 = fcn.0045ea40(iVar19, uVar7, iVar15, arg4);\n                    }\n                }\n                else {\n                    if (*0x626890 == 0) {\n                        puVar6[1] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x44467b;\n                        puVar6 = fcn.0045ebc0(iVar19, uVar7, 0, arg4);\n                    }\n                    iVar15 = *(iVar22 + 0x40);\n                    if (iVar15 == 0) {\n                        if (*0x626890 == 0) {\n                            puVar6[2] = 0;\n                            *(iVar22 + 0x38) = puVar6;\n                            *(iVar22 + 0x40) = puVar6;\n                        }\n                        else {\n                            uVar17 = 0;\n                            *(*0x20 + -0x140) = 0x4446fa;\n                            fcn.0045ebc0(iVar19, uVar7, 0, arg4);\n                            *(*0x20 + -0x140) = 0x444705;\n                            fcn.0045ea40(iVar19, uVar7, uVar17, arg4);\n                            *(*0x20 + -0x140) = 0x44470d;\n                            puVar6 = fcn.0045ea40(iVar19, uVar7, uVar17, arg4);\n                        }\n                    }\n                    else if (*0x626890 == 0) {\n                        puVar6[2] = iVar15;\n                        *(iVar15 + 8) = puVar6;\n                        *(iVar22 + 0x40) = puVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x4446b4;\n                        fcn.0045ebc0(iVar19, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x140) = 0x4446bd;\n                        fcn.0045ea40(iVar19, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x140) = 0x4446c5;\n                        puVar6 = fcn.0045ea40(iVar19, uVar7, iVar15, arg4);\n                    }\n                }\n                puVar20 = puVar6 + 8;\n                unaff_RSI = *(*0x20 + -0xf8);\n                puVar11 = *(*0x20 + -0x88);\n                puVar8 = *(*0x20 + -0x48);\n                puVar12 = *(*0x20 + -0xa8);\n                arg4_00 = *(*0x20 + -0x80);\n                puVar5 = puVar11;\n                iVar19 = *(*0x20 + -0xb8) + 1;\n            }\n            *(*0x20 + -0x50) = arg4_00 + 0x11;\n            if (*0x626890 == 0) {\n                arg4_00[0x11] = 0;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x444745;\n                fcn.0045eb80(puVar8, noname_1, puVar12, arg4_00);\n            }\n            puVar1 = arg4_00 + 0xb9;\n            uVar13 = *puVar1;\n            *puVar1 = 1;\n            *(*0x20 + -0x140) = 0x444772;\n            fcn.00436620(9, puVar1, uVar13);\n            iVar19 = *(*0x20 + -0x80);\n            *(iVar19 + 0xb8) = 0;\n            iVar22 = *(*0x20 + -0xa8);\n            *(*0x20 + -0x140) = 0x4447a9;\n            fcn.00443d20(iVar22, iVar19, iVar22);\n            iVar19 = *(*0x20 + -0x80);\n            *(iVar19 + 0x178) = 0;\n            arg3 = *(iVar19 + 0x88);\n            if (*0x626890 == 0) {\n                *(iVar19 + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x4447e8;\n                fcn.0045ebe0(iVar22, iVar19, arg3);\n            }\n            puVar20 = *(iVar19 + 0x148);\n            for (puVar5 = puVar20; puVar5 != NULL; puVar5 = puVar5[8]) {\n                *(puVar5 + 0x34) = 0;\n                if (*0x626890 == 0) {\n                    puVar5[3] = 0;\n                    puVar5[10] = 0;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x44482b;\n                    fcn.0045eb60(iVar19, 0, arg3, puVar5);\n                    *(*0x20 + -0x140) = 0x444836;\n                    puVar20 = fcn.0045eb60(iVar19, 0, arg3, puVar5);\n                    iVar22 = iVar19;\n                }\n            }\n            if (*0x626890 == 0) {\n                *(iVar19 + 0x148) = 0;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x444865;\n                puVar20 = fcn.0045eb60(iVar22, 0, arg3, 0);\n            }\n            *(*0x20 + -0x58) = arg3;\n            noname_1 = *(*0x20 + 0x20);\n            arg4 = *(*0x20 + 8);\n            puVar12 = *(*0x20 + -0xa8);\n            unaff_RSI = *(*0x20 + -0xf8);\n            puVar11 = *(*0x20 + -0x88);\n            arg4_00 = NULL;\n            iVar22 = -1;\n            puVar5 = NULL;\n            uVar14 = 0xffffffffffffffff;\n            iVar19 = 0;\n            while (iVar19 < unaff_RSI) {\n                unaff_R15 = *(puVar11 + iVar19 * 2);\n                if (puVar12 <= unaff_R15) goto code_r0x00444d57;\n                *(*0x20 + -0xb0) = unaff_R15;\n                puVar11 = arg4 + unaff_R15 * 2;\n                if (puVar20 == arg3) {\n                    if (0 < puVar20[5]) {\n                        uVar14 = puVar20[5];\n                    }\n                    puVar5 = *(puVar20 + 0x35);\n                    iVar22 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar10 = arg4[unaff_R15 * 2];\n                    puVar11 = arg4_00;\n                    if (*(*0x20 + -0xb0) < noname_1) {\n                        uVar9 = puVar20[2];\n                        puVar12 = puVar20 + 1;\n                        uVar18 = puVar20[1];\n                        if (uVar9 == 0) {\n                            if (uVar18 == 0) {\n                                if (*(uVar10 + 0x48) == puVar20) {\n                                    if (*0x626890 == 0) {\n                                        *(uVar10 + 0x48) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        iVar15 = uVar10 + 0x48;\n                                        uVar7 = 0;\n                                        *(*0x20 + -0x140) = 0x444afb;\n                                        fcn.0045ebc0(uVar10, iVar15, 0, arg4_00);\n                                        *(*0x20 + -0x140) = 0x444b05;\n                                        puVar20 = fcn.0045ebc0(uVar10, iVar15, uVar7, arg4_00);\n                                        puVar11 = arg4_00;\n                                    }\n                                }\n                            }\n                            else if (*0x626890 == 0) {\n                                *(uVar18 + 0x10) = 0;\n                                *(uVar10 + 0x48) = uVar18;\n                                puVar20[1] = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x444aa6;\n                                fcn.0045eba0(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x140) = 0x444aaf;\n                                fcn.0045ebc0(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x140) = 0x444ab7;\n                                puVar20 = fcn.0045eba0(uVar10, puVar12, uVar18, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (uVar18 == 0) {\n                            if (*0x626890 == 0) {\n                                *(uVar9 + 8) = 0;\n                                *(uVar10 + 0x50) = uVar9;\n                                puVar20[2] = 0;\n                            }\n                            else {\n                                iVar15 = uVar9 + 8;\n                                uVar7 = 0;\n                                *(*0x20 + -0x140) = 0x444a48;\n                                fcn.0045ebc0(uVar10, iVar15, 0, arg4_00);\n                                *(*0x20 + -0x140) = 0x444a54;\n                                fcn.0045eb40();\n                                *(*0x20 + -0x140) = 0x444a5c;\n                                puVar20 = fcn.0045ebc0(uVar9, iVar15, uVar7, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (*0x626890 == 0) {\n                            *(uVar9 + 8) = uVar18;\n                            *(uVar18 + 0x10) = uVar9;\n                            *(puVar20 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x140) = 0x4449e5;\n                            fcn.0045ebc0(uVar9 + 8, puVar12, uVar18, arg4_00);\n                            *(*0x20 + -0x140) = 0x4449f1;\n                            fcn.0045eb40(uVar9);\n                            *(*0x20 + -0x140) = 0x4449fb;\n                            fcn.0045eb40(0);\n                            *(*0x20 + -0x140) = 0x444a05;\n                            puVar20 = fcn.0045eb40();\n                            puVar11 = arg4_00;\n                        }\n                    }\n                    else {\n                        uVar9 = puVar20[2];\n                        puVar12 = puVar20 + 1;\n                        uVar18 = puVar20[1];\n                        if (uVar9 == 0) {\n                            if (uVar18 == 0) {\n                                if (*(uVar10 + 0x38) == puVar20) {\n                                    if (*0x626890 == 0) {\n                                        *(uVar10 + 0x38) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        iVar15 = uVar10 + 0x38;\n                                        uVar7 = 0;\n                                        *(*0x20 + -0x140) = 0x444c6b;\n                                        fcn.0045ebc0(uVar10, iVar15, 0, arg4_00);\n                                        *(*0x20 + -0x140) = 0x444c74;\n                                        puVar20 = fcn.0045ebc0(uVar10, iVar15, uVar7, arg4_00);\n                                        puVar11 = arg4_00;\n                                    }\n                                }\n                            }\n                            else if (*0x626890 == 0) {\n                                *(uVar18 + 0x10) = 0;\n                                *(uVar10 + 0x38) = uVar18;\n                                puVar20[1] = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x444c17;\n                                fcn.0045eba0(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x140) = 0x444c25;\n                                fcn.0045ebc0(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x140) = 0x444c2d;\n                                puVar20 = fcn.0045eba0(uVar10, puVar12, uVar18, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (uVar18 == 0) {\n                            if (*0x626890 == 0) {\n                                *(uVar9 + 8) = 0;\n                                *(uVar10 + 0x40) = uVar9;\n                                puVar20[2] = 0;\n                            }\n                            else {\n                                iVar15 = uVar9 + 8;\n                                uVar7 = 0;\n                                *(*0x20 + -0x140) = 0x444bba;\n                                fcn.0045ebc0(uVar10, iVar15, 0, arg4_00);\n                                *(*0x20 + -0x140) = 0x444bc6;\n                                fcn.0045eb40();\n                                *(*0x20 + -0x140) = 0x444bce;\n                                puVar20 = fcn.0045ebc0(uVar9, iVar15, uVar7, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (*0x626890 == 0) {\n                            *(uVar9 + 8) = uVar18;\n                            *(uVar18 + 0x10) = uVar9;\n                            *(puVar20 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x140) = 0x444b56;\n                            fcn.0045ebc0(uVar9 + 8, puVar12, uVar18, arg4_00);\n                            *(*0x20 + -0x140) = 0x444b65;\n                            fcn.0045eb40(uVar9);\n                            *(*0x20 + -0x140) = 0x444b6f;\n                            fcn.0045eb40(0);\n                            *(*0x20 + -0x140) = 0x444b77;\n                            puVar20 = fcn.0045eb40();\n                            puVar11 = arg4_00;\n                        }\n                    }\n                    arg3 = *(*0x20 + -0x58);\n                }\n                *(*0x20 + -0xb0) = iVar19;\n                *(*0x20 + -0x105) = puVar5;\n                *(*0x20 + -0xe0) = iVar22;\n                *(*0x20 + -0x78) = puVar11;\n                *(*0x20 + -0xd8) = uVar14;\n                uVar14 = puVar20[8];\n                *(*0x20 + -0xa0) = uVar14;\n                if (*0x626890 == 0) {\n                    puVar20[8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x444cd9;\n                    fcn.0045eb60(puVar11, 0, arg3, uVar14);\n                }\n                *(*0x20 + -0x140) = 0x4448b2;\n                fcn.00436b40();\n                puVar12 = *(*0x20 + -0xa8);\n                unaff_RSI = *(*0x20 + -0xf8);\n                puVar11 = *(*0x20 + -0x88);\n                iVar22 = *(*0x20 + -0xe0);\n                arg4_00 = *(*0x20 + -0x78);\n                puVar20 = *(*0x20 + -0xa0);\n                noname_1 = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x58);\n                arg4 = *(*0x20 + 8);\n                puVar5 = *(*0x20 + -0x105);\n                uVar14 = *(*0x20 + -0xd8);\n                unaff_R15 = puVar20;\n                iVar19 = *(*0x20 + -0xb0) + 1;\n            }\n            if (arg4_00 != NULL) {\n                *(*0x20 + -200) = iVar22;\n                *(*0x20 + -0xd0) = uVar14;\n                if (iVar22 < noname_1) {\n                    if (puVar5 == '\\0') goto code_r0x00444d25;\n                    puVar5 = NULL;\n                }\n                *(*0x20 + -0x106) = puVar5;\n                *(*0x20 + -0x140) = 0x444d0f;\n                fcn.00443e20(puVar12, noname_1, puVar12);\n                iVar19 = *(*0x20 + -0xd0);\n                uVar7 = *(*0x20 + -200);\n                uVar13 = *(*0x20 + -0x106);\n                goto code_r0x004443e8;\n            }\ncode_r0x00444d46:\n            *(*0x20 + -0x140) = 0x444d57;\n            fcn.00433ce0();\ncode_r0x00444d57:\n            *(*0x20 + -0x140) = 0x444d5f;\n            fcn.0045eee0(puVar12);\n            puVar20 = arg4;\ncode_r0x00444d5f:\n            *(*0x20 + -0x140) = 0x444d6a;\n            puVar12 = arg3;\n            fcn.0045eee0(arg3);\n        }\n        arg4 = 0x11;\n        *(*0x20 + -0x140) = 0x444d7b;\n        fcn.00433ce0();\ncode_r0x00444d81:\n        do {\n            piVar23 = puVar5[7];\n            if (piVar23 == NULL) {\n                piVar23 = NULL;\n                break;\n            }\n            uVar14 = piVar23[1];\n            if (uVar14 == 0) {\n                if (*0x626890 == 0) {\n                    *(puVar5 + 7) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x140) = 0x444e1d;\n                    fcn.0045eb60(arg3, 0, puVar12, arg4_00);\n                    *(*0x20 + -0x140) = 0x444e27;\n                    arg4 = fcn.0045eb60(arg3, uVar7, puVar12, arg4_00);\n                }\n            }\n            else if (*0x626890 == 0) {\n                *(uVar14 + 0x10) = 0;\n                puVar5[7] = uVar14;\n                piVar23[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = puVar5 + 7;\n                uVar7 = 0;\n                *(*0x20 + -0x140) = 0x444dd6;\n                fcn.0045eb60(arg3, 0, puVar12, arg4_00);\n                *(*0x20 + -0x140) = 0x444de9;\n                fcn.0045ebe0(arg3, uVar7, puVar12);\n                *(*0x20 + -0x140) = 0x444df2;\n                arg4 = fcn.0045eb60(arg3, uVar7, puVar12, uVar14);\n                noname_1 = *(*0x20 + 0x20);\n            }\n            if (*(piVar23 + 0x34) == '\\0') {\n                unaff_R15 = NULL;\n            }\n            else {\n                iVar19 = *piVar23;\n                LOCK();\n                piVar2 = iVar19 + 0x178;\n                bVar24 = *piVar2 == 0;\n                if (bVar24) {\n                    *piVar2 = 1;\n                }\n                unaff_R15 = (iVar19 & 0xffffff00 | bVar24) ^ 1;\n            }\n        } while (unaff_R15 != '\\0');\n        if (piVar23 != NULL) {\n            *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x445520;\n            *(*0x20 + -0x38) = arg4;\n            *(*0x20 + -0x30) = puVar12;\n            *(*0x20 + -0x28) = puVar12;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = puVar12;\n            uVar7 = *(arg4 + 1 + puVar20);\n            *(*0x20 + -0x140) = 0x444f85;\n            fcn.00405540(uVar7);\n            iVar19 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x004443e8;\n        }\n        if (*puVar5 <= puVar5[1] && puVar5[1] != *puVar5) {\n            uVar7 = *(arg4 + 1 + puVar20);\n            *(*0x20 + -0x140) = 0x444e99;\n            fcn.00411b00(uVar7);\n            piVar23 = *(*0x20 + -0x70);\n            iVar19 = piVar23[5];\n            piVar23[5] = iVar19 + 1;\n            if (piVar23[1] == iVar19 + 1) {\n                piVar23[5] = 0;\n            }\n            *piVar23 = *piVar23 + 1;\n            *(*0x20 + -0x140) = 0x444ee5;\n            fcn.00443e20(*(*0x20 + -0xa8), piVar23, *(*0x20 + -0xa8));\n            iVar19 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x004443e8;\n        }\n    }\n    puVar8 = 0x1;\n    arg3 = arg3 + 1;\n    unaff_RBX = arg4;\n    goto code_r0x00444300;\ncode_r0x00445394:\n    *(*0x20 + -0x140) = 0x44539f;\n    fcn.0045eee0(puVar8);\ncode_r0x0044539f:\n    puVar12 = puVar8;\n    *(*0x20 + -0x140) = 0x4453aa;\n    puVar8 = puVar12;\n    fcn.0045eee0(puVar12);\ncode_r0x004453aa:\n    *(*0x20 + -0x140) = 0x4453b2;\n    fcn.0045eee0(puVar12);\ncode_r0x004453b2:\n    puVar12 = puVar8;\n    *(*0x20 + -0x140) = 0x4453bd;\n    puVar8 = puVar12;\n    fcn.0045eee0(puVar12);\ncode_r0x004453bd:\n    *(*0x20 + -0x140) = 0x4453c5;\n    fcn.0045eee0(puVar12);\ncode_r0x004453c5:\n    puVar12 = puVar8;\n    *(*0x20 + -0x140) = 0x4453d0;\n    puVar8 = puVar12;\n    fcn.0045eee0(puVar12);\ncode_r0x004453d0:\n    *(*0x20 + -0x140) = 0x4453d8;\n    fcn.0045eee0(puVar12);\n    puVar20 = puVar21;\ncode_r0x004453d8:\n    puVar12 = puVar8;\n    *(*0x20 + -0x140) = 0x4453e5;\n    puVar8 = puVar12;\n    fcn.0045eee0(puVar12);\ncode_r0x004453e5:\n    *(*0x20 + -0x140) = 0x4453ed;\n    in_RAX = fcn.0045eee0(puVar12);\n    while( true ) {\n        uVar3 = *(*0x20 + -0x102);\n        *(arg4_00 + puVar20 * 2) = uVar3;\n        uVar10 = *(*0x20 + -0x60);\n        uVar14 = *(*0x20 + -0xb0);\n        puVar20 = unaff_R15;\n        unaff_R15 = uVar3;\ncode_r0x0044540e:\n        if (puVar20 < 1) goto code_r0x00444233;\n        unaff_R15 = puVar20 + (-1 - (puVar20 + -1 >> 0x3f)) >> 1;\n        if (puVar8 <= unaff_R15) goto code_r0x00445477;\n        uVar3 = *(arg4_00 + unaff_R15 * 2);\n        if (puVar12 <= uVar3) goto code_r0x00445470;\n        *(*0x20 + -0x102) = uVar3;\n        if (uVar10 <= *(in_RAX + uVar3 * 0x10)) break;\n        if (puVar8 <= puVar20) goto code_r0x00445465;\n    }\n    uVar14 = *(*0x20 + -0xb0);\ncode_r0x00444233:\n    uVar3 = *(unaff_RBX + unaff_R13 * 2);\n    puVar5 = uVar3;\n    if (puVar8 <= puVar20) {\n        *(*0x20 + -0x140) = 0x445465;\n        fcn.0045eee0(puVar8);\ncode_r0x00445465:\n        puVar12 = puVar8;\n        *(*0x20 + -0x140) = 0x445470;\n        puVar8 = puVar12;\n        fcn.0045eee0(puVar12);\ncode_r0x00445470:\n        *(*0x20 + -0x140) = 0x445477;\n        fcn.0045eee0(puVar12);\ncode_r0x00445477:\n        puVar12 = puVar8;\n        *(*0x20 + -0x140) = 0x445485;\n        puVar8 = puVar12;\n        fcn.0045eee0(puVar12);\n        goto code_r0x00445485;\n    }\n    *(arg4_00 + puVar20 * 2) = uVar3;\n    puVar20 = unaff_R13 + 1;\n    puVar11 = arg4_00;\n    goto code_r0x00444200;\n}\n",
        "token_count": 12995
    },
    "004455e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004455e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045e8c0(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00436760();\n    return;\n}\n",
        "token_count": 156
    },
    "00445680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00445680(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x44597b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x445994;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x4456f2;\n    iVar5 = fcn.00436840();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x6266c8 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x445756;\n        fcn.0045e8c0(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x626760 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x4457b0;\n            fcn.0045e8c0(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x5d4940;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x5d4940;\n        *(*0x20 + -0x68) = 0x445815;\n        fcn.0040ab40();\n        piVar1 = *(*0x20 + -0x30) + 0x5d4950;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x00445843;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x00445843:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x445905;\n            fcn.0040ad60(iVar2);\ncode_r0x00445905:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x44592f;\n                fcn.0042b180(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x445939;\n            uVar6 = fcn.00436b40();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x445865;\n        fcn.00445be0(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x44588c;\n        fcn.00436620(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x004458b7;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x004458b7:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00445905;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1848
    },
    "004459c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004459c0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x5d4950) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x5d4950;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x5d4940;\n            *(*0x20 + -0x50) = 0x445a54;\n            fcn.0040ab40();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x445b06;\n                uVar4 = fcn.0040ad60();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x445a85;\n            iVar7 = fcn.00445f80(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x445aae;\n            fcn.0040ad60();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x445adb;\n                fcn.004598a0();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x445ba5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x445bb9;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x00445b80;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x00445b80:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x445b32;\n    uVar4 = fcn.004455e0(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x445b57;\n        uVar4 = fcn.0045c640();\n    }\n    return uVar4;\n}\n",
        "token_count": 1276
    },
    "00445be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445be0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t *noname_1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00445be0:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x626890 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x445c2a;\n            fcn.0045ebe0(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x445c36;\n            fcn.0045eb80(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x445c45;\n            fcn.0045ebe0(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x445c4d;\n            in_RAX = fcn.0045ebe0(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x626890 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445e2b;\n                            fcn.0045eb40();\n                        }\n                    }\n                    else if (*0x626890 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445e11;\n                        fcn.0045eb40();\n                    }\n                    if (*0x626890 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445e4b;\n                        fcn.0045eb40();\n                        *(*0x20 + -0x28) = 0x445e56;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x626890 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445cb1;\n                        fcn.0045eb40();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x626890 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445cdc;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x626890 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445cf7;\n                        iVar2 = fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x626890 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d12;\n                        iVar2 = fcn.0045eb80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x626890 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445d31;\n                            fcn.0045eb40();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x626890 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445d52;\n                            fcn.0045eb40();\n                        }\n                    }\n                    if (*0x626890 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d6b;\n                        fcn.0045ebe0(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x626890 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d87;\n                        iVar2 = fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x626890 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445da5;\n                            fcn.0045ebe0(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x626890 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445dd3;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445ddc;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445de5;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445dee;\n                        fcn.0045ea40(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x626890 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x445ebd;\n            unaff_RDI = arg3;\n            fcn.0045eb60(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x445ec5;\n            arg3 = unaff_RDI;\n            fcn.0045eb40();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x445f12;\n                fcn.00446400(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00445f1e;\n                *(*0x20 + -0x28) = 0x445f05;\n                fcn.004462c0(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00445f32;\ncode_r0x00445f1e:\n    unaff_RBX = 0x4ee990;\n    *(*0x20 + -0x28) = 0x445f31;\n    in_RAX = fcn.00433560();\ncode_r0x00445f32:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x445f4b;\n    fcn.0045c800();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00445be0;\n}\n",
        "token_count": 2527
    },
    "00445f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00445f80(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045e8c0(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00446207;\n                fcn.004462c0(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00446207:\n            fcn.00446400(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x626890 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045eb60(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x626890 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045eb60(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x626890 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045eb60(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x626890 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.0045eba0(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x626890 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.0045eb60(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x626890 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.0045eb60(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x626890 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045eba0(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x626890 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.0045eb60(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x626890 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045eba0(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x626890 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045eb60(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x626890 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045eb60(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x626890 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045eb60(noname_0, 0, param_3, param_4);\n            fcn.0045eb60(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x626890 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045eb60(noname_0, 0, param_3, param_4);\n        fcn.0045eba0(noname_0, uVar6, param_3, param_4);\n        fcn.0045eb60(noname_0, uVar6, param_3, param_4);\n        fcn.0045eb60(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1842
    },
    "004462c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004462c0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x626890 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x446305;\n                fcn.0045eb80(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44630e;\n                fcn.0045eb40();\n                *(*0x20 + -0x20) = 0x446317;\n                in_RAX = fcn.0045eba0(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x626890 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x446334;\n                    in_RAX = fcn.0045eb80(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x626890 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44634c;\n                in_RAX = fcn.0045eb60(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x626890 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4463ad;\n                fcn.0045eb40();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x446371;\n                fcn.0045eb40();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x626890 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x446391;\n                    fcn.0045eb40();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x4463c8;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4463d8;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 949
    },
    "00446400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446400(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x626890 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x446445;\n                fcn.0045eb80(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44644e;\n                fcn.0045eb40();\n                *(*0x20 + -0x20) = 0x446457;\n                in_RAX = fcn.0045eba0(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x626890 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x446474;\n                    in_RAX = fcn.0045eb80(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x626890 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44648c;\n                in_RAX = fcn.0045eb60(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x626890 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4464ed;\n                fcn.0045eb40();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4464b1;\n                fcn.0045eb40();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x626890 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4464d1;\n                    fcn.0045eb40();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x446508;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x446518;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 948
    },
    "00446700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446700(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x562010) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x562018) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.004346a0(),  cVar2 != '\\0')) {\n            fcn.004469e0(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045ff00)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x45ea20;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 591
    },
    "00446980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446980(ulong arg1)\n\n{\n    if ((*0x62660c == '\\0') && (*0x62660a == '\\0')) {\n        if (*0x62660e != '\\0') {\n            return 0;\n        }\n        fcn.004469e0(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "004469e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004469e0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x626668 != 0) {\n        fcn.0042f960();\n    }\n    *0x626668 = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356a0();\n    fcn.00435be0();\n    fcn.004356a0();\n    fcn.00435be0();\n    fcn.004356a0();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    piVar1 = puVar3[6];\n    if (((*(piVar1 + 0x1d) != '\\0') && (*piVar1 == arg1)) && (piVar1[0x12] != 0)) {\n        if (*0x62660b != '\\0') {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        arg1 = *(puVar3[6] + 0x90);\n    }\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x55c288 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.004556e0(0);\n        fcn.00456660();\n        fcn.00407160();\n    }\n    fcn.0042f960();\n    return;\n}\n",
        "token_count": 554
    },
    "00447000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00447000(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x0044706a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x0044706a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x447089;\n                    iVar3 = fcn.0040c220(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4470ac;\n                        fcn.0045f580(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x4470c5;\n                    iVar3 = fcn.0040c220(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x626890 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4470e7;\n                        fcn.00412a00(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x447105;\n                fcn.0045f840(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4ee9a0;\n            *(*0x20 + -0x48) = 0x447128;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x447145;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1011
    },
    "00447240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00447240(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x4ee870;\n            *(*0x20 + -0x68) = 0x4478d8;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x4478f7;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x626818;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0xff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = unaff_RDI + (unaff_RDI + ((unaff_RDI + 0x60 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x004472ae;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x004472ae:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00447379:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x004476a9;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xac070);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x55f5e0);\n                        goto code_r0x00447379;\n                    }\n                    goto code_r0x00447839;\n                }\n                goto code_r0x00447846;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x55f4a0;\n                piVar6 = *(piVar6 + 0xabe94);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x55f5e0);\n                    goto code_r0x00447379;\n                }\n                goto code_r0x00447853;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00447454:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x004476a9;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xac070);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x55f5e0);\n                            goto code_r0x00447454;\n                        }\n                        goto code_r0x00447805;\n                    }\n                    goto code_r0x00447812;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x55f4a0;\n                    piVar10 = *(piVar10 + 0xabe94);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x55f5e0);\n                        goto code_r0x00447454;\n                    }\n                    goto code_r0x0044781f;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00447574:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x004476a9:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x4476ec;\n                                uVar4 = fcn.0040c220(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x447709;\n                                fcn.0045f580();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x44772a;\n                                uVar4 = fcn.0040c220(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x626890 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x44775b;\n                                    fcn.00412a00((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x447774;\n                            fcn.0045f840(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x4ee870;\n                        *(*0x20 + -0x68) = 0x4477a5;\n                        fcn.00433560();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x004477a5:\n                        *(*0x20 + -0x68) = 0x4477af;\n                        fcn.0045eee0(0x44);\ncode_r0x004477af:\n                        *(*0x20 + -0x68) = 0x4477b9;\n                        fcn.0045ef00(0xf9);\ncode_r0x004477b9:\n                        *(*0x20 + -0x68) = 0x4477c5;\n                        fcn.0045eee0(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x004477c5;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xac070);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x55f5e0);\n                                goto code_r0x00447574;\n                            }\n                            goto code_r0x004477cf;\n                        }\n                        goto code_r0x004477dc;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xabe94);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x55f5e0);\n                            goto code_r0x00447574;\n                        }\n                        goto code_r0x004477e9;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00447675:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x004476a9;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x55f5e0);\n                                goto code_r0x00447675;\n                            }\n                            goto code_r0x004477a5;\n                        }\n                        goto code_r0x004477af;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x55f4a0);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x55f5e0);\n                            goto code_r0x00447675;\n                        }\n                        goto code_r0x004477b9;\n                    }\ncode_r0x004477c5:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x4477cf;\n                    fcn.0045ef00(0x81);\ncode_r0x004477cf:\n                    *(*0x20 + -0x68) = 0x4477dc;\n                    fcn.0045eee0(0x44);\ncode_r0x004477dc:\n                    *(*0x20 + -0x68) = 0x4477e9;\n                    fcn.0045ef00(0xf9);\ncode_r0x004477e9:\n                    *(*0x20 + -0x68) = 0x4477f6;\n                    fcn.0045eee0(0x44);\n                }\n                *(*0x20 + -0x68) = 0x447805;\n                fcn.0045ef00(0x81);\n                piVar8 = piVar7;\ncode_r0x00447805:\n                *(*0x20 + -0x68) = 0x447812;\n                fcn.0045eee0(0x44);\ncode_r0x00447812:\n                *(*0x20 + -0x68) = 0x44781f;\n                fcn.0045ef00(0xf9);\ncode_r0x0044781f:\n                *(*0x20 + -0x68) = 0x44782c;\n                fcn.0045eee0(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x447839;\n            fcn.0045ef00(0x81);\n            piVar8 = piVar10;\ncode_r0x00447839:\n            *(*0x20 + -0x68) = 0x447846;\n            fcn.0045eee0(0x44);\ncode_r0x00447846:\n            *(*0x20 + -0x68) = 0x447853;\n            fcn.0045ef00(0xf9);\ncode_r0x00447853:\n            *(*0x20 + -0x68) = 0x447865;\n            fcn.0045eee0(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x447872;\n        in_RAX = fcn.0045ef00(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4193
    },
    "00447920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00447920(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x626c08);\n                if (iVar1 != 0) goto code_r0x004479be;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x626c08;\n                *(*0x20 + -0x40) = 0x447986;\n                iVar1 = fcn.00424b20();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x447a4f;\n                                    fcn.00425ea0();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x004479be:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x4479f5;\n                                            fcn.00425d20();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x447a18;\n                                    iVar1 = fcn.00433ce0();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x447a6f;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x40) = 0x447a85;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x40) = 0x447a96;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x40) = 0x447aa5;\n            in_AL = fcn.0045eee0(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x447aaf;\n        fcn.0045c800();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "00447ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447ac0(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x5f8a70) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x447b76;\n                            fcn.00425ea0(0x626c00);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00447b85;\n                        }\n                    }\n                    else {\ncode_r0x00447b85:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x62664c != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x447bd3;\n                            fcn.00425d20(0x626c00);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x447bf1;\n                            fcn.00425900(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x447c05;\n                        fcn.0045eee0(2);\n                    }\n                    *(*0x20 + -0x38) = 0x447c0f;\n                    fcn.0045eee0(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x447c25;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x38) = 0x447c32;\n            in_RAX = fcn.0045ef00(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x447c45;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 908
    },
    "00447c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447c60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x626c00;\n                *(*0x20 + -0x40) = 0x447cb1;\n                fcn.0040ab40();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x447cc5;\n                    puVar3 = fcn.00447920();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x447d14;\n                fcn.0040ad60();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x447d55;\n            in_RAX = fcn.0045eee0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x447d65;\n        fcn.00460f20();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "00447d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447d80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x626c00;\n                *(*0x20 + -0x40) = 0x447df4;\n                fcn.0040ab40();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x447e17;\n                    fcn.00447ac0();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x447e4f;\n                fcn.0040ad60();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x447e8a;\n            in_RAX = fcn.0045eee0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x447e99;\n        fcn.00460f20();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 779
    },
    "00447ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447ec0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040ab40();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00447ac0();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040ad60();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00447fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00447fc0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x626aa8 != 0) {\n                        uVar6 = -*0x626798;\n                        piVar8 = (*0x626798 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44804c;\n                        puVar2 = fcn.00415d00();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x448075;\n                        fcn.00433ce0();\n                        goto code_r0x00448075;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00448075:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x4480a5;\n                        fcn.0040ab40();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x627468);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x4480d9;\n                                fcn.00425d20();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4480f1;\n                            fcn.0040ad60();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x448111;\n                                iVar3 = fcn.00424b20(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44814e;\n                                    fcn.00433ce0();\n                                    goto code_r0x0044814e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044814e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x448158;\n                        uVar1 = fcn.0045eee0(0x23);\n                        goto code_r0x00448158;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00448158:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x626c00;\n                            *(*0x20 + -0x78) = 0x4481a7;\n                            fcn.0040ab40();\n                            *(*0x20 + -0x78) = 0x4481b1;\n                            uVar4 = fcn.00447920();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x4481c5;\n                            fcn.0040ad60();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x448205;\n                                fcn.00447c60();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x448252;\n                        fcn.0045eee0(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44825c;\n                    fcn.0045eee0(2);\n                }\n                *(*0x20 + -0x78) = 0x44826d;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x78) = 0x44827e;\n            uVar1 = fcn.00433ce0();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x448288;\n        fcn.00460f20();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1826
    },
    "004482a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004482a0(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x626aa8 != 0) {\n                    *(*0x20 + -0x80) = 0x44837d;\n                    fcn.00415d80();\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x5f8a70) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x62664c == 0) {\n                                *(*0x20 + -0x80) = 0x448375;\n                                fcn.00425900(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x4483b5;\n                            fcn.0040ab40();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x4483de;\n                                fcn.00425ea0(0x627468);\n                                *(*0x20 + -0x80) = 0x4483ec;\n                                fcn.0040ad60();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x4483f8;\n                            in_RAX = fcn.0045eee0(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x44840b;\n                        fcn.00435480();\n                        *(*0x20 + -0x80) = 0x448415;\n                        fcn.00435be0();\n                        *(*0x20 + -0x80) = 0x44841a;\n                        fcn.004356a0();\n                        *(*0x20 + -0x80) = 0x448425;\n                        fcn.00435d00();\n                        *(*0x20 + -0x80) = 0x44842a;\n                        fcn.004356e0();\n                        *(*0x20 + -0x80) = 0x44842f;\n                        fcn.00435500();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x448445;\n                        fcn.00433ce0();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x448452;\n                    uVar6 = fcn.0045ef00(0x40);\n                    goto code_r0x00448452;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x00448452:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x626c00;\n                        *(*0x20 + -0x80) = 0x4484b9;\n                        fcn.0040ab40();\n                        *(*0x20 + -0x80) = 0x4484c8;\n                        fcn.00447ac0();\n                        *(*0x20 + -0x80) = 0x4484d4;\n                        fcn.0040ad60();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x80) = 0x448516;\n                            fcn.00447d80();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x44855a;\n                    fcn.0045eee0(2);\n                }\n                *(*0x20 + -0x80) = 0x448565;\n                fcn.0045eee0(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x448576;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x448586;\n        fcn.00460f20();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1871
    },
    "004485a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004485a0(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00448771:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x44878f;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x626ac0 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x4486f0;\n                            uVar9 = fcn.0044df00();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x4486ff;\n                            fcn.00435480();\n                            *(*0x20 + -0x68) = 0x448710;\n                            fcn.00435d80();\n                            *(*0x20 + -0x68) = 0x44871f;\n                            fcn.00435d80();\n                            *(*0x20 + -0x68) = 0x448730;\n                            fcn.00435d80();\n                            *(*0x20 + -0x68) = 0x44873a;\n                            fcn.00435d00();\n                            *(*0x20 + -0x68) = 0x44874b;\n                            fcn.00435d80();\n                            *(*0x20 + -0x68) = 0x448755;\n                            fcn.00435be0();\n                            *(*0x20 + -0x68) = 0x44875a;\n                            fcn.004356e0();\n                            *(*0x20 + -0x68) = 0x44875f;\n                            fcn.00435500();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x448770;\n                            in_RAX = fcn.00433ce0();\n                            goto code_r0x00448771;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x0044861e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x0044861e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x0044861e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1595
    },
    "00448da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00448da0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x626f78;\n                        *0x626f78 = *0x626f78 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22a8);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22a8) = iVar1;\n                        uVar9 = iVar3 + iVar8 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x626f78 = *0x626f78 + iVar1;\n                            *(iVar2 + 0x22a8) = 0;\n                            uVar9 = 0x626f78;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x448e86;\n                    uVar5 = fcn.00447fc0();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x448eaf;\n                    fcn.0045f166();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + -0x140);\n                        if ((*(*0x20 + -0x148) < uVar9) &&\n                           (uVar11 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x4490c8;\n                            fcn.00433ce0();\n                            goto code_r0x004490c8;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar9 = 0;\n                        for (uVar11 = *(iVar8 + 0x148); uVar11 != 0; uVar11 = *(uVar11 + 0x40)) {\n                            uVar12 = *(*(uVar11 + 0x50) + 0x18) + *(uVar11 + 0x18);\n                            if (((uVar6 <= uVar12) && (uVar12 < uVar7)) && (uVar9 < uVar12)) {\n                                uVar9 = uVar12;\n                            }\ncode_r0x004490c8:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b8) = 0x449112;\n                        iVar8 = fcn.00448c20(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x448f74;\n                    fcn.0045f840(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x448fda;\n                    fcn.00448b20();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x449095;\n                    fcn.00452f20(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x4490a7;\n                    fcn.004482a0();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x44913d;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x44914e;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x44915e;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2188
    },
    "00449dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00449dc0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x449da0;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x626890 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.0045eb80(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00449e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00449e40(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x626ab4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x449f09;\n                            iVar2 = fcn.0044d780(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x24) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x449f66;\n                            fcn.00448da0();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x449f95;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0x20) = 0x449fa6;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x20) = 0x449fb7;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x20) = 0x449fc8;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x449fd3;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 810
    },
    "0044a180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044a180(uchar param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            iVar6 = in_RAX[3];\n            if (iVar6 == 0) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = iVar6;\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x38) = in_RAX[1];\n            *(*0x20 + -0xb8) = 0x44a1fc;\n            iVar4 = fcn.0044d2a0();\n            iVar6 = *(*0x20 + -0x80);\n            if (iVar4 == iVar6) {\n                iVar3 = -1;\n            }\n            else {\n                *(*0x20 + -0x80) = iVar6 + -1;\n                *(*0x20 + -0xb8) = 0x44a235;\n                iVar3 = fcn.0044e5a0(1);\n                iVar6 = *(*0x20 + -0x80);\n            }\n            *(*0x20 + -0x80) = iVar6;\n            if (iVar3 == -1) {\n                iVar3 = 0;\n            }\n            *(*0x20 + -0x84) = iVar3;\n            iVar6 = *(*0x20 + 8);\n            iVar4 = *(iVar6 + 0x38) - *(iVar6 + 0x28);\n            if (iVar4 == 0) {\n                iVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x30);\n                iVar10 = 0;\n                goto code_r0x0044a331;\n            }\n            iVar12 = *(*0x20 + -0x30);\n            if (*(iVar12 + 0x27) < 2) {\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = NULL;\n            }\n            else {\n                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x2c);\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x78) = iVar4;\n            if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                iVar10 = piVar11[1];\n                if (iVar10 < 1) {\n                    iVar10 = 0;\ncode_r0x0044a331:\n                    if ((*(iVar6 + 0x48) == 0) || (*(iVar6 + 0x50) != 0)) {\ncode_r0x0044a410:\n                        if (*(iVar6 + 0x50) == 0) {\n                            if (*(iVar12 + 0x27) < 3) {\n                                puVar7 = NULL;\n                            }\n                            else {\n                                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x30);\n                                puVar7 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n                            }\n                            if (puVar7 != NULL) {\n                                uVar5 = *puVar7;\n                                *(*0x20 + -0x20) = puVar7 + 1;\n                                *(*0x20 + -0x18) = uVar5;\n                                *(*0x20 + -0x10) = uVar5;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x626870;\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 1;\n                        }\n                        return iVar10;\n                    }\n                    if (*(iVar12 + 0x27) == '\\0') {\n                        piVar11 = NULL;\n                    }\n                    else {\n                        uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x28);\n                        piVar11 = *(iVar8 + 0x130) + uVar2 & (uVar2 == 0xffffffff) - 1;\n                    }\n                    if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                        *(*0x20 + -0x50) = piVar11;\n                        if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x0044a410;\n                        *(*0x20 + -0xb8) = 0x44a509;\n                        uVar5 = fcn.0044df00();\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x58) = iVar8;\n                        *(*0x20 + -0x60) = **(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x44a525;\n                        fcn.00435480();\n                        *(*0x20 + -0xb8) = 0x44a536;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a545;\n                        fcn.00435b80(*(*0x20 + -0x84));\n                        *(*0x20 + -0xb8) = 0x44a556;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a565;\n                        fcn.00435b80();\n                        *(*0x20 + -0xb8) = 0x44a576;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a585;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a596;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a5a5;\n                        fcn.00435be0();\n                        *(*0x20 + -0xb8) = 0x44a5b6;\n                        fcn.00435d80();\n                        *(*0x20 + -0xb8) = 0x44a5bb;\n                        fcn.00435500();\n                        iVar8 = 0x10;\n                        *(*0x20 + -0xb8) = 0x44a5cc;\n                        fcn.00433ce0();\n                    }\n                    *(*0x20 + -0xb8) = 0x44a5d4;\n                    uVar5 = fcn.0044df00();\n                    *(*0x20 + -0x40) = uVar5;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x70) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xb8) = 0x44a5fd;\n                    fcn.00435480();\n                    *(*0x20 + -0xb8) = 0x44a60e;\n                    fcn.00435d80();\n                    *(*0x20 + -0xb8) = 0x44a61d;\n                    fcn.00435d80();\n                    *(*0x20 + -0xb8) = 0x44a62e;\n                    fcn.00435d80();\n                    *(*0x20 + -0xb8) = 0x44a638;\n                    fcn.00435be0();\n                    *(*0x20 + -0xb8) = 0x44a649;\n                    fcn.00435d80();\n                    *(*0x20 + -0xb8) = 0x44a653;\n                    fcn.00435be0();\n                    *(*0x20 + -0xb8) = 0x44a658;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x44a65d;\n                    fcn.00435500();\n                    iVar8 = 0x10;\n                    *(*0x20 + -0xb8) = 0x44a66e;\n                    fcn.00433ce0();\n                }\n                else {\n                    *(*0x20 + -0x48) = piVar11;\n                    if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x0044a331;\n                }\n                *(*0x20 + -0xb8) = 0x44a676;\n                uVar5 = fcn.0044df00();\n                *(*0x20 + -0x40) = uVar5;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x60) = **(*0x20 + -0x48);\n                *(*0x20 + -0xb8) = 0x44a692;\n                fcn.00435480();\n                *(*0x20 + -0xb8) = 0x44a6a5;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a6b1;\n                fcn.00435b80(*(*0x20 + -0x84));\n                *(*0x20 + -0xb8) = 0x44a6c5;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a6cf;\n                fcn.00435b80();\n                *(*0x20 + -0xb8) = 0x44a6e5;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a6f4;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a705;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a70f;\n                fcn.00435be0();\n                *(*0x20 + -0xb8) = 0x44a725;\n                fcn.00435d80();\n                *(*0x20 + -0xb8) = 0x44a72a;\n                fcn.00435500();\n                iVar8 = 0x10;\n                *(*0x20 + -0xb8) = 0x44a73b;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0xb8) = 0x44a745;\n            uVar5 = fcn.0044df00();\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x58) = iVar8;\n            *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xb8) = 0x44a765;\n            fcn.00435480();\n            *(*0x20 + -0xb8) = 0x44a776;\n            fcn.00435d80();\n            *(*0x20 + -0xb8) = 0x44a785;\n            fcn.00435d80();\n            *(*0x20 + -0xb8) = 0x44a796;\n            fcn.00435d80();\n            param_1 = *(*0x20 + -0x78);\n            *(*0x20 + -0xb8) = 0x44a7a8;\n            fcn.00435be0();\n            *(*0x20 + -0xb8) = 0x44a7b9;\n            fcn.00435d80();\n            *(*0x20 + -0xb8) = 0x44a7c5;\n            fcn.00435be0();\n            *(*0x20 + -0xb8) = 0x44a7ca;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x44a7cf;\n            fcn.00435500();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xb8) = 0x44a7e5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x44a7f9;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3227
    },
    "0044a960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044a960(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x0044a960:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == NULL) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x0044a9a0;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x0044aba5;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x0044a9a0:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x0044aa07;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x0044aa07;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x0044aa07:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x44aa7b;\n                            iVar2 = fcn.0045eee0(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x44aa25;\n                    iVar2 = fcn.0044b0a0();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX == NULL) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x44aadc;\n                            fcn.0045f840(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x44ab50;\n                    fcn.0045efa0(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x44ab58;\n                in_RAX = fcn.0045eee0(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x0044abb7;\ncode_r0x0044aba5:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x44abb6;\n    in_RAX = fcn.00433ce0();\ncode_r0x0044abb7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x44abd0;\n    fcn.0045c800();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x0044a960;\n}\n",
        "token_count": 1890
    },
    "0044afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044afa0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040c220(0);\n            }\n            fcn.0045f840(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x567ec0;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0044c5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0044c5a0(void)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack136;\n    ulong uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    while (auStack120 < *(unaff_R14 + 0x10) || auStack120 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iStack136 = SUB168(in_XMM15, 0);\n    uStack128 = SUB168(in_XMM15 >> 0x40, 0);\n    auStack120 = in_XMM15;\n    auStack104 = in_XMM15;\n    fcn.00456ea0();\n    if ((iStack136 == 0) && (auStack120._0_8_ == 0)) {\n        return 0;\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar4 = 0;\n    while( true ) {\n        uVar2 = fcn.0045aa40();\n        fcn.0045aa40(iStack136);\n        uStack56 = fcn.0045f1b0();\n        uStack64 = auStack120._0_8_;\n        uStack48 = auStack120._0_8_;\n        uStack40 = uStack128;\n        uStack32 = auStack120._8_8_;\n        uVar1 = arg1 + 1;\n        uStack72 = uVar2;\n        if (uVar5 < arg1 + 1) {\n            iVar3 = fcn.00447240(arg1);\n            uVar1 = iVar4 + 1;\n            iVar4 = iVar3;\n            uVar5 = arg1;\n        }\n        arg1 = uVar1;\n        if (*0x626890 == 0) {\n            fcn.0045f51a(in_RAX, uVar5, arg1);\n        }\n        else {\n            fcn.00411b00(auStack88);\n        }\n        if (auStack104._0_8_ == 0) break;\n        fcn.00456ea0();\n    }\n    fcn.00456ea0();\n    return iVar4;\n}\n",
        "token_count": 604
    },
    "0044c820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044c820(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    uint uVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *arg2;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x44c845;\n            ppiVar2 = fcn.0040cc20();\n            *(*0x20 + -0x18) = ppiVar2;\n            for (iVar5 = 0x561f60; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                if (*(iVar5 + 0x218) == '\\0') {\n                    *(*0x20 + -0x10) = iVar5;\n                    piVar6 = ppiVar2[1];\n                    piVar7 = *ppiVar2;\n                    piVar3 = piVar7;\n                    if (ppiVar2[2] < piVar6 + 1U) {\n                        *(*0x20 + -0x70) = 0x44c89a;\n                        arg2 = piVar6;\n                        piVar3 = fcn.00447240(piVar6);\n                        ppiVar2 = *(*0x20 + -0x18);\n                        ppiVar2[2] = piVar6;\n                        if (*0x626890 == 0) {\n                            *ppiVar2 = piVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c8b6;\n                            piVar3 = fcn.0045ea40(piVar6, arg2, param_3, param_4);\n                        }\n                        iVar5 = *(*0x20 + -0x10);\n                        piVar6 = piVar7;\n                    }\n                    param_3 = piVar6 + 1;\n                    ppiVar2[1] = param_3;\n                    if (*0x626890 == 0) {\n                        piVar3[piVar6] = iVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x44c8e5;\n                        ppiVar2 = fcn.0045eb40();\n                    }\n                    if ((*(iVar5 + 0x1f0) == 0) && (*(iVar5 + 0x1f8) == 0)) {\n                        iVar8 = *(iVar5 + 0xd8) - *(iVar5 + 0xd0);\n                        *(*0x20 + -0x28) = iVar8;\n                        *(*0x20 + -0x70) = 0x44c925;\n                        uVar1 = fcn.00414180();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x1f0) = uVar1;\n                        if (*0x626890 == 0) {\n                            *(iVar5 + 0x1f8) = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c94e;\n                            fcn.0045eb80(iVar5, piVar6, param_3, param_4);\n                        }\n                        iVar9 = *(iVar5 + 0xe8) - *(iVar5 + 0xe0);\n                        *(*0x20 + -0x20) = iVar9;\n                        *(*0x20 + -0x70) = 0x44c96d;\n                        uVar1 = fcn.00414180();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x200) = uVar1;\n                        iVar8 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x626890 == 0) {\n                            *(iVar5 + 0x208) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c9a5;\n                            fcn.0045eb80(iVar5, iVar8, param_3, param_4);\n                        }\n                        param_3 = 0x626f80;\n                        LOCK();\n                        *0x626f80 = *0x626f80 + iVar8;\n                        ppiVar2 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar6 = ppiVar2[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar6 <= piVar7) goto code_r0x0044ca26;\n                iVar5 = (*ppiVar2)[piVar7];\n                if (*(iVar5 + 0x1e8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x626890 == 0) {\n                **ppiVar2 = iVar5;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x44c9ee;\n                ppiVar2 = fcn.0045eba0(piVar7, piVar6, param_3, param_4);\n            }\n            piVar6 = ppiVar2[1];\n            if (piVar7 < piVar6) {\n                if (*0x626890 == 0) {\n                    (*ppiVar2)[piVar7] = 0x561f60;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44ca25;\n                    ppiVar2 = fcn.0045eb40(0x561f60);\n                }\ncode_r0x0044ca26:\n                if (*0x626890 != '\\0') {\n                    *(*0x20 + -0x70) = 0x44ca3e;\n                    fcn.00403920();\n                    ppiVar2 = *(*0x20 + -0x18);\n                }\n                uVar4 = *0x5d1d18;\n                *0x5d1d18 = ppiVar2;\n                return uVar4;\n            }\n            *(*0x20 + -0x70) = 0x44ca65;\n            fcn.0045eee0(piVar6);\n        }\n        *(puVar10 + -8) = 0x44ca6b;\n        fcn.0045c800();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1578
    },
    "0044ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ca80(void)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    ulong *arg1;\n    ulong *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong *puVar14;\n    ulong *arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *in_RAX;\n            uVar2 = *puVar9;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff0) && (*(puVar9 + 4) == '\\0')) && (*(puVar9 + 5) == '\\0')) &&\n                ((*(puVar9 + 6) == '\\x01' && (*(puVar9 + 7) == '\\b')))) &&\n               (puVar14 = puVar9[3],  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar9 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x0044cfd5;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar9;\n                        *(*0x20 + -0x100) = 0x44cd26;\n                        uVar10 = fcn.0044d2a0();\n                        arg1 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (arg1 <= puVar14) goto code_r0x0044cfca;\n                        *(*0x20 + -0xd0) = uVar10;\n                        *(*0x20 + -0x100) = 0x44cd65;\n                        iVar8 = fcn.0044d2a0();\n                        *(*0x20 + -200) = iVar8;\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0xa0);\n                        *(*0x20 + -0x80) = arg1;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != arg1) || (*(iVar11 + 0xa8) != iVar8)) goto code_r0x0044cf25;\n                        iVar8 = *(iVar11 + 0x1d8);\n                        arg1_00 = *(iVar11 + 0x1d0);\n                        if (iVar8 == 0) {\n                            return;\n                        }\n                        *(*0x20 + -0x60) = iVar8;\n                        iVar11 = 0;\n                        goto code_r0x0044cdea;\n                    }\n                    puVar14 = *(puVar9 + puVar12);\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x0044d10d;\n                } while (*(puVar9 + puVar12) <= *(puVar9 + puVar12 + 1));\n                arg1 = in_RAX[0xe];\n                puVar3 = in_RAX[0xd];\n                puVar14 = *(puVar9 + puVar12 * 8 + 4);\n                if (puVar14 < arg1) {\n                    puVar9 = *(puVar9 + puVar12 * 8 + 0xc);\n                    if (puVar9 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = puVar14 + puVar3;\n                            *(*0x20 + -0x100) = 0x44cba6;\n                            uVar10 = fcn.0044df00(puVar9 + puVar3);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar10 = 0x4c88e5;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar10;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x44cbd4;\n                        uVar10 = fcn.0044df00();\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0x88);\n                        iVar8 = *(iVar11 + 0x80);\n                        puVar9 = *(*0x20 + -0xb8);\n                        if (puVar9 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar9 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar10;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar9 * 8);\n                                *(*0x20 + -0x48) = *(iVar11 + 0x198);\n                                *(*0x20 + -0x78) = *(iVar11 + 0x1a0);\n                                *(*0x20 + -0x100) = 0x44cc54;\n                                fcn.00435480();\n                                *(*0x20 + -0x100) = 0x44cc65;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44cc72;\n                                fcn.00435be0();\n                                *(*0x20 + -0x100) = 0x44cc77;\n                                fcn.004356a0();\n                                *(*0x20 + -0x100) = 0x44cc8c;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44cc9d;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44ccaa;\n                                fcn.00435be0();\n                                *(*0x20 + -0x100) = 0x44ccaf;\n                                fcn.004356a0();\n                                *(*0x20 + -0x100) = 0x44ccc5;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44ccd6;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44cceb;\n                                fcn.00435d80();\n                                *(*0x20 + -0x100) = 0x44ccf0;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44ccf5;\n                                fcn.00435500();\n                                iVar11 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar11) {\n                                    arg1_00 = puVar12[0xe];\n                                    puVar9 = puVar12[0x11];\n                                    if (puVar9 <= arg1) {\ncode_r0x0044d0c9:\n                                        *(*0x20 + -0x100) = 0x44d0d4;\n                                        fcn.0045eee0(puVar9);\n                                        break;\n                                    }\n                                    puVar9 = *(puVar12[0x10] + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar9) {\ncode_r0x0044d0be:\n                                        *(*0x20 + -0x100) = 0x44d0c9;\n                                        fcn.0045eee0(arg1_00);\n                                        goto code_r0x0044d0c9;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44d08f;\n                                    uVar10 = fcn.0044df00();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44d0be;\n                                        fcn.0045eee0(arg1);\n                                        goto code_r0x0044d0be;\n                                    }\ncode_r0x0044cfdc:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar10;\n                                    *(*0x20 + -0x68) = *(arg1_00 + puVar14);\n                                    *(*0x20 + -0x100) = 0x44cffc;\n                                    fcn.00435480();\n                                    *(*0x20 + -0x100) = 0x44d00d;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x100) = 0x44d01a;\n                                    fcn.00435be0();\n                                    *(*0x20 + -0x100) = 0x44d01f;\n                                    fcn.004356a0();\n                                    *(*0x20 + -0x100) = 0x44d034;\n                                    fcn.00435d80();\n                                    *(*0x20 + -0x100) = 0x44d039;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x100) = 0x44d03e;\n                                    fcn.00435500();\n                                    iVar11 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x44d0e5;\n                                fcn.00433ce0();\n                            }\n                            *(*0x20 + -0x100) = 0x44d0f0;\n                            fcn.0045eee0(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x44d0fb;\n                        puVar9 = arg1;\n                        fcn.0045eee0(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x44d105;\n                    fcn.0045eee0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x44d10d;\n                fcn.0045eee0(arg1);\ncode_r0x0044d10d:\n                *(*0x20 + -0x100) = 0x44d115;\n                in_RAX = fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar9 + 4);\n            *(*0x20 + -0x98) = *(puVar9 + 5);\n            *(*0x20 + -0xa0) = *(puVar9 + 6);\n            *(*0x20 + -0xa8) = *(puVar9 + 7);\n            *(*0x20 + -0x80) = puVar9[3];\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x33];\n            *(*0x20 + -0x60) = in_RAX[0x34];\n            *(*0x20 + -0x100) = 0x44d171;\n            fcn.00435480();\n            *(*0x20 + -0x100) = 0x44d185;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d18e;\n            fcn.00435be0();\n            *(*0x20 + -0x100) = 0x44d19f;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d1a9;\n            fcn.00435a80();\n            *(*0x20 + -0x100) = 0x44d1ba;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d1c5;\n            fcn.00435a80();\n            *(*0x20 + -0x100) = 0x44d1d6;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d1e5;\n            fcn.00435a80();\n            *(*0x20 + -0x100) = 0x44d1f6;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d205;\n            fcn.00435a80();\n            *(*0x20 + -0x100) = 0x44d216;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d225;\n            fcn.00435be0();\n            *(*0x20 + -0x100) = 0x44d236;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d245;\n            fcn.00435be0();\n            *(*0x20 + -0x100) = 0x44d256;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d26b;\n            fcn.00435d80();\n            *(*0x20 + -0x100) = 0x44d270;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44d275;\n            fcn.00435500();\n            *(*0x20 + -0x100) = 0x44d286;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x44d291;\n        fcn.0045c800();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x0044cdea:\n    *(*0x20 + -0x30) = *arg1_00;\n    uVar2 = *(arg1_00 + 0xc);\n    uVar4 = *(arg1_00 + 2);\n    uVar5 = *(arg1_00 + 0x14);\n    *(*0x20 + -0x28) = *(arg1_00 + 1);\n    *(*0x20 + -0x24) = uVar2;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar2 = *(arg1_00 + 0x1c);\n    uVar4 = *(arg1_00 + 4);\n    uVar5 = *(arg1_00 + 0x24);\n    *(*0x20 + -0x18) = *(arg1_00 + 3);\n    *(*0x20 + -0x14) = uVar2;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (puVar14[1] != *(*0x20 + -0x18)) {\ncode_r0x0044ce6e:\n        iVar11 = *(*(*0x20 + 8) + 0x1c0);\n        *(*0x20 + -0x40) = iVar11;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1c8);\n        arg1 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44ceb9;\n        fcn.00435480();\n        *(*0x20 + -0x100) = 0x44ceca;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cedf;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cef0;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cf05;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cf0a;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44cf0f;\n        fcn.00435500();\n        *(*0x20 + -0x100) = 0x44cf25;\n        fcn.00433ce0();\ncode_r0x0044cf25:\n        *(*0x20 + -0x88) = *(iVar11 + 0xa8);\n        *(*0x20 + -0x100) = 0x44cf36;\n        fcn.00435480();\n        *(*0x20 + -0x100) = 0x44cf47;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cf51;\n        fcn.00435be0();\n        *(*0x20 + -0x100) = 0x44cf65;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cf6f;\n        fcn.00435be0();\n        *(*0x20 + -0x100) = 0x44cf85;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cf8f;\n        fcn.00435be0();\n        *(*0x20 + -0x100) = 0x44cfa5;\n        fcn.00435d80();\n        *(*0x20 + -0x100) = 0x44cfaf;\n        fcn.00435be0();\n        *(*0x20 + -0x100) = 0x44cfb4;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44cfb9;\n        fcn.00435500();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x44cfca;\n        fcn.00433ce0();\ncode_r0x0044cfca:\n        *(*0x20 + -0x100) = 0x44cfd5;\n        fcn.0045eee0(arg1);\ncode_r0x0044cfd5:\n        *(*0x20 + -0x100) = 0x44cfdc;\n        uVar10 = fcn.0045eee0(arg1);\n        goto code_r0x0044cfdc;\n    }\n    *(*0x20 + -0x78) = iVar11;\n    *(*0x20 + -0x50) = arg1_00;\n    *(*0x20 + -0x100) = 0x44ce49;\n    cVar6 = fcn.00402620(*(*0x20 + -0x18), iVar8);\n    if (cVar6 == '\\0') goto code_r0x0044ce6e;\n    iVar11 = *(*0x20 + -0x78) + 1;\n    if (*(*0x20 + -0x60) <= iVar11) {\n        return;\n    }\n    arg1_00 = *(*0x20 + -0x50) + 0x28;\n    iVar8 = *(*0x20 + -0x60);\n    goto code_r0x0044cdea;\n}\n",
        "token_count": 4856
    },
    "0044d2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044d2a0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar4 = unaff_RBX & 0xffffffff;\n    uVar3 = *(in_RAX + 0xb0) + uVar4;\n    iVar1 = *(in_RAX + 0x140);\n    puVar5 = *(in_RAX + 0x138);\n    if (1 < iVar1) {\n        iVar6 = 0;\n        while( true ) {\n            if (((*puVar5 <= uVar4) && (uVar4 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar4)))) break;\n            iVar6 = iVar6 + 1;\n            if (iVar1 <= iVar6) goto code_r0x0044d31b;\n            puVar5 = puVar5 + 3;\n        }\n        uVar3 = (puVar5[2] + uVar4) - *puVar5;\ncode_r0x0044d31b:\n        if (*(in_RAX + 0xb8) < uVar3) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435be0();\n            fcn.00435d80();\n            fcn.00435be0();\n            fcn.00435d80();\n            fcn.00435be0();\n            fcn.004356e0();\n            fcn.00435500();\n            fcn.00433ce0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 434
    },
    "0044d780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044d780(void)\n\n{\n    uint32_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x561f60; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x0044d7c0;\n    }\n    iVar4 = 0;\ncode_r0x0044d7c0:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x140);\n    piVar6 = *(iVar4 + 0x138);\n    if (uVar5 < 2) goto code_r0x0044d7fc;\n    in_R9 = NULL;\n    do {\n        uVar1 = iVar2;\n        piVar3 = piVar6[2];\n        if (in_RAX < piVar3) {\n            return 0;\n        }\n        if (in_RAX < (piVar6[1] - *piVar6) + piVar3) {\n            uVar1 = *piVar6 + (in_RAX - piVar3);\n            in_R9 = piVar3;\ncode_r0x0044d7fc:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                piVar6 = *(arg1 + 4 + in_RAX) + *arg1;\n                do {\n                    arg1 = piVar6;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    piVar6 = arg1 + 1;\n                    if (in_RAX <= piVar6) goto code_r0x0044d898;\n                    in_R9 = uVar5 + piVar6 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    piVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (piVar3 < arg1) {\n                        return piVar3 + in_RAX;\n                    }\n                    fcn.0045eee0(arg1);\n                }\n                fcn.0045eee0(in_RAX);\ncode_r0x0044d898:\n                fcn.0045eee0(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.0045ef00(0x10);\n        }\n        else {\n            in_R9 = in_R9 + 1;\n            if (uVar5 <= in_R9) goto code_r0x0044d7fc;\n        }\n        piVar6 = piVar6 + 3;\n    } while( true );\n}\n",
        "token_count": 857
    },
    "0044d900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044dbcc)\n// WARNING: Removing unreachable block (ram,0x0044dbd9)\n// WARNING: Removing unreachable block (ram,0x0044dd50)\n// WARNING: Removing unreachable block (ram,0x0044dbe9)\n// WARNING: Removing unreachable block (ram,0x0044dcef)\n// WARNING: Removing unreachable block (ram,0x0044dde1)\n// WARNING: Removing unreachable block (ram,0x0044de3b)\n// WARNING: Removing unreachable block (ram,0x0044dd67)\n// WARNING: Removing unreachable block (ram,0x0044de4c)\n\nuint fcn.0044d900(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x0044d969;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x0044d969:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (*0x626668 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.0044d720();\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435be0();\n                fcn.004356e0();\n                fcn.00435500();\n                iVar7 = fcn.00433ce0();\ncode_r0x0044da96:\n                do {\n                    iStack56 = iVar7;\n                    fcn.0044d720();\n                    iVar7 = fcn.0044e780(arg1);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.0045eee0(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    uStack32 = unaff_RBX;\n                    iStack24 = in_RAX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.0044d720();\n                    uStack140 = 0xffffffff;\n                    arg1 = uVar6 - uStack64;\n                    iVar7 = (-arg1 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x0044da96;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1524
    },
    "0044e920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e920(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44e9ae;\n                        cVar8 = fcn.0044ec00(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x626890 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44ea25;\n                                fcn.0045eb60(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x44eb0b;\n                                    iVar9 = fcn.00447240(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x626890 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44eb2c;\n                                        iVar9 = fcn.0045ea40(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44ebc5;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee880;\n            *(*0x20 + -0x90) = 0x44ebd8;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44ebe8;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1911
    },
    "0044ec00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ec00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x0044edf2:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x55c398, iVar13);\n                            iVar7 = *0x55c398 - iVar13;\n                            bVar16 = *0x55c398 == iVar13;\n                            if (iVar13 < *0x55c398) {\n                                *(*0x20 + -0x58) = in_XMM15;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x55c398;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x55c398;\n                                    *(*0x20 + -0xb8) = 0x44ee68;\n                                    iVar7 = fcn.00447240(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x626890 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x44ee87;\n                                        iVar7 = fcn.0045ea40(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x0044eee2:\n                        *(*0x20 + -0xb8) = 0x44eeea;\n                        fcn.00457000();\n                        *(*0x20 + -0xb8) = 0x44ef10;\n                        fcn.0044aca0(0x16, uVar6, 0x4d1b4d, 0x37);\n                        *(*0x20 + -0xb8) = 0x44ef15;\n                        fcn.0040a4c0();\n                        *(*0x20 + -0xb8) = 0x44ef25;\n                        fcn.00433560();\n                        goto code_r0x0044ef25;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x0044edf2;\n                    goto code_r0x0044eee2;\n                }\ncode_r0x0044ecd7:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x55c398, iVar13);\n                iVar7 = *0x55c398 - iVar13;\n                bVar16 = *0x55c398 == iVar13;\n                if (iVar13 < *0x55c398) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x55c398;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x55c398;\n                        *(*0x20 + -0xb8) = 0x44ed65;\n                        iVar7 = fcn.00447240(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x626890 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44ed85;\n                            iVar7 = fcn.0045ea40(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x44ec9d;\n                        uVar6 = fcn.0044ec00(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x0044eee2;\n                }\n                goto code_r0x0044ecd7;\n            }\n            if (uVar10 == 0x16) goto code_r0x0044ecd7;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x0044eee2;\n                goto code_r0x0044ecd7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x44ef7e;\n                cVar5 = fcn.0044ec00((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x0044ef25:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x44efb6;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44efcb;\n        fcn.0045c800();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2916
    },
    "0044f2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044f2c0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x626658 == 0) {\n                *(*0x20 + -0x58) = 0x44f2f0;\n                fcn.0042d360();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x2288);\n                arg3_00 = *(in_RAX + 0x2280);\n                arg4 = *(in_RAX + 0x2290);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44f34c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00447240(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2290) = iVar4;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + 0x2280) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44f377;\n                        iVar3 = fcn.0045ea40(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x2288) = iVar4 + 1;\n                if (*0x626890 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44f3ad;\n                    fcn.0045eb80(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x2290);\n                *(*0x20 + -0x58) = 0x44f3cd;\n                fcn.00451080(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x2288);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x2280) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1208) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x2298;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44f418;\n                fcn.0045eee0(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44f429;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44f439;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1090
    },
    "0044f460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044f460(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.0045c6c0();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.00451420();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x0044f550;\n                    if (uVar2 == 9) goto code_r0x0044f5b8;\n                    fcn.00451420();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x0044f550:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.00451420();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x0044f5b8:\n        fcn.0045c6c0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1036
    },
    "0044f720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f720(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x2288);\n            if (unaff_RBX < uVar3) {\n                piVar1 = *(*(in_RAX + 0x2280) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    uVar3 = *(in_RAX + 0x2288);\n                    arg3 = uVar3 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044f7b6:\n                        arg4 = *(in_RAX + 0x2288);\n                        if (arg3 < arg4) {\n                            if (*0x626890 == 0) {\n                                *(*(in_RAX + 0x2280) + -8 + uVar3 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44f7f0;\n                                in_RAX = fcn.0045eba0(uVar3, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2290);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2288) = arg3;\n                                uVar3 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x2280);\n                                    arg1 = *(in_RAX + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44f845;\n                                    uVar2 = fcn.00451080(arg1, uVar2, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar2;\n                                    uVar2 = *(*(*0x20 + 8) + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44f871;\n                                    fcn.00451200(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar3 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2288) == 0) {\n                                        *(in_RAX + 0x1208) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                                return uVar3;\n                            }\n                            *(*0x20 + -0x38) = 0x44f8d2;\n                            fcn.0045ef60(arg3, arg2);\n                        }\n                        uVar3 = arg4;\n                        *(*0x20 + -0x38) = 0x44f8dd;\n                        fcn.0045eee0(uVar3);\ncode_r0x0044f8dd:\n                        *(*0x20 + -0x38) = 0x44f8e5;\n                        fcn.0045eee0(uVar3);\n                    }\n                    else if (arg3 < uVar3) {\n                        if (unaff_RBX < uVar3) {\n                            if (*0x626890 == 0) {\n                                *(*(in_RAX + 0x2280) + unaff_RBX * 8) = *(*(in_RAX + 0x2280) + -8 + uVar3 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44f7b6;\n                                in_RAX = fcn.0045ebe0(uVar3, arg2, arg3);\n                            }\n                            goto code_r0x0044f7b6;\n                        }\n                        goto code_r0x0044f8dd;\n                    }\n                    *(*0x20 + -0x38) = 0x44f8ed;\n                    fcn.0045eee0(uVar3);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44f8fe;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x38) = 0x44f906;\n            in_RAX = fcn.0045eee0(uVar3);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44f916;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1352
    },
    "0044f940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f940(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x2288);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x2280)) {\n                    ***(in_RAX + 0x2280) = 0;\n                    iVar1 = *(in_RAX + 0x2288);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x2280))[iVar1 + -1];\n                        if (*0x626890 == 0) {\n                            **(in_RAX + 0x2280) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44f9bf;\n                            in_RAX = fcn.0045ebc0(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x2280);\n                    arg4 = *(in_RAX + 0x2288);\n                    if (arg1 < arg4) {\n                        if (*0x626890 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44f9f9;\n                            in_RAX = fcn.0045eba0(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2290);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2288) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x2290);\n                                *(*0x20 + -0x30) = 0x44fa34;\n                                fcn.00451200(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2288) == 0) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44fa85;\n                        fcn.0045ef60(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44fa90;\n                    in_R9 = arg4;\n                    fcn.0045eee0(arg4);\n                }\n                *(*0x20 + -0x30) = 0x44faa5;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x30) = 0x44faac;\n            in_RAX = fcn.0045eee0(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44fab7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 960
    },
    "00450960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450960(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.0044f940(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.00451420();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.00451200(*(in_RAX + 0x2290));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.00451420();\n        }\n        if (*(in_RAX + 0x2288) == 0) {\n            *(in_RAX + 0x1208) = 0;\n        }\n        else {\n            *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n        }\n    }\n    fcn.0040ad60();\n    (**arg2)(uVar1);\n    fcn.0040ab40();\n    return;\n}\n",
        "token_count": 489
    },
    "00451080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00451080(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x4510b1;\n                fcn.00451420();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x4510e8;\n                    fcn.00451420();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0045119a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0045118f;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x451146;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045ebe0(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x626890 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x451174;\n                            unaff_RDI = fcn.0045eba0(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x45118f;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x0045118f:\n                *(*0x20 + -0x28) = 0x45119a;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x0045119a:\n                *(*0x20 + -0x28) = 0x4511a5;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x4511b0;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4511ca;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1270
    },
    "00451200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451200(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x451231;\n                fcn.00451420();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x451268;\n                    fcn.00451420();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x004513c7;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x004513bc;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x004513b1;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x004513a6;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0045139b;\n                    if (unaff_RBX <= arg3) goto code_r0x00451390;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x451350;\n                        in_RAX = fcn.0045ebe0(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x626890 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x45137b;\n                            fcn.0045eba0(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x451390;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x00451390:\n                *(*0x20 + -0x28) = 0x45139b;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x0045139b:\n                *(*0x20 + -0x28) = 0x4513a6;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x004513a6:\n                *(*0x20 + -0x28) = 0x4513b1;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x004513b1:\n                *(*0x20 + -0x28) = 0x4513bc;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x004513bc:\n                *(*0x20 + -0x28) = 0x4513c7;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x004513c7:\n                *(*0x20 + -0x28) = 0x4513d2;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x4513dd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4513f7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1810
    },
    "004514e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004514e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*0x5d8868 != 0) && ((*0x5d8858 != 0 || (*0x5d8811 != '\\0')))) {\n        fcn.0040ab40();\n        iVar1 = *0x5d8868;\n        if ((*0x5d8868 != 0) && ((*0x5d8858 != 0 || (*0x5d8811 != '\\0')))) {\n            *0x5d8868 = 0;\n            fcn.0040ad60();\n            return iVar1;\n        }\n        fcn.0040ad60();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "004515a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004515a0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040ab40();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x5d8858 != NULL) {\n        **0x5d8860 = puVar1;\n        puVar2 = *0x5d8858;\n    }\n    *0x5d8858 = puVar2;\n    *0x5d8860 = puVar1;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 247
    },
    "00451660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451660(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.00451d20();\n    if ((*0x5d8810 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.00451da0();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.00451760(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.00451da0();\n    return;\n}\n",
        "token_count": 246
    },
    "00451c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00451c00(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x451c85;\n                arg1 = fcn.00455f60(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x451c65;\n                arg1 = fcn.004560e0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x451cc5;\n                uVar1 = fcn.004520a0(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x451cd9;\n            in_RAX = fcn.0045ef60(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x451cf8;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 824
    },
    "00451da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451da0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_EAX == -1) {\n        fcn.0040ad60();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00451e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00451e20(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d8808 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x5d8808 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x5d8808;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x451e79;\n                fcn.0040ab40();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x5d8858;\n            puVar2 = *0x5d8860;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x5d8858 != NULL)) {\n                **0x5d8860 = in_RAX;\n                puVar3 = *0x5d8858;\n                puVar2 = in_RAX;\n            }\n            *0x5d8860 = puVar2;\n            *0x5d8858 = puVar3;\n            if (*0x5d8850 == NULL) {\n                *(*0x20 + -0x38) = 0x451ee8;\n                puVar3 = fcn.00415d00();\n                if (puVar3 != NULL) goto code_r0x00451ef1;\n            }\n            else {\n                puVar3 = *0x5d8850;\n                *0x5d8850 = **0x5d8850;\ncode_r0x00451ef1:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x451f0d;\n                fcn.0045e8c0(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x00452052;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x00452035;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x452019;\n                                fcn.0040ad60();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x452035;\n                        fcn.0045eee0(0xfbe8);\ncode_r0x00452035:\n                        *(*0x20 + -0x38) = 0x452045;\n                        fcn.0045eee0(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x452052;\n                    fcn.0045eee0(0xfbe8);\ncode_r0x00452052:\n                    *(*0x20 + -0x38) = 0x45205f;\n                    fcn.0045eee0(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x45206c;\n                fcn.0045eee0(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x45207d;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x45208c;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1593
    },
    "004523a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004523a0(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x452408;\n                    piVar1 = fcn.00415d00();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0045242c;\n                    }\n                    goto code_r0x00452465;\n                }\n            }\n            else {\ncode_r0x0045242c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x452465;\n                fcn.0045ef00(0xfff8);\ncode_r0x00452465:\n                *(*0x20 + -0x28) = 0x452476;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x452487;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x452497;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 666
    },
    "00452520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452520(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.00451660(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "004525e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004525e0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x452634;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x45263a;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 297
    },
    "00452640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452640(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.00451660(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004526e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004526e0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x452759;\n                    fcn.00451660(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x452785;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x45278b;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "00452880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452880(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1228) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x452969;\n                    fcn.00451660(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x4529ae;\n                fcn.00451660(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1228) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1228) * 8 + 0x5e88a8);\n                *(*0x20 + -0x68) = 0x452928;\n                fcn.00451660(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4529c5;\n            fcn.0045eee0(4);\n        }\n        *(puVar3 + -8) = 0x4529cb;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 686
    },
    "00452ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452ca0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.00451660(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00454a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454a60(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar uVar8;\n    int64_t unaff_RDI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x27);\n            if (uVar1 < 6) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar6;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar6;\n            *(*0x20 + -0x90) = 0x454b38;\n            uVar4 = fcn.0044e5a0(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar8 = 0xff;\n            }\n            else {\n                uVar8 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar8;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x454f60;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x454e80;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar6 = 0;\n            cVar5 = '\\0';\n            while (uVar6 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar6);\n                uVar9 = uVar6 + 1;\n                *(*0x20 + -0x58) = uVar9;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x454c1d;\n                            fcn.00435480();\n                            *(*0x20 + -0x90) = 0x454c2e;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x454c33;\n                            fcn.00435500();\n                        }\n                        *(*0x20 + -0x90) = 0x454c38;\n                        fcn.00435480();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x454c49;\n                        fcn.00435d80();\n                        *(*0x20 + -0x90) = 0x454c4e;\n                        fcn.00435500();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x454c7c;\n                            fcn.00435480();\n                            *(*0x20 + -0x90) = 0x454c8d;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x454c92;\n                            fcn.00435500();\n                        }\n                        *(*0x20 + -0x90) = 0x454c97;\n                        fcn.00435480();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x454ca8;\n                        fcn.00435d80();\n                        *(*0x20 + -0x90) = 0x454cad;\n                        fcn.00435500();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x00454d3e:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar6;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x454d55;\n                            fcn.00435480();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x454d66;\n                            fcn.00435d80();\n                            *(*0x20 + -0x90) = 0x454d6b;\n                            fcn.00435500();\n                            uVar6 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar9 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar9) {\n                            *(*0x20 + -0x90) = 0x454e25;\n                            fcn.0045eee0(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar6 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x454dab;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar6 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x00454dfe:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x454dd9;\n                        fcn.00435480();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x454dea;\n                        fcn.00435d80();\n                        *(*0x20 + -0x90) = 0x454def;\n                        fcn.00435500();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x00454dfe;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x00454d3e;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x454ce5;\n                        fcn.00435480();\n                        *(*0x20 + -0x90) = 0x454cf6;\n                        fcn.00435d80();\n                        *(*0x20 + -0x90) = 0x454cfb;\n                        fcn.00435500();\n                    }\n                    *(*0x20 + -0x90) = 0x454d05;\n                    fcn.00435480();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x454d16;\n                    fcn.00435d80();\n                    *(*0x20 + -0x90) = 0x454d1b;\n                    fcn.00435500();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar6 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x454e2f;\n            in_RAX = fcn.0045eee0(0xab);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x454e49;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2540
    },
    "00455420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00455420(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044d780();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00456180(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.004554c0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 226
    },
    "00455ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00455ae0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435500();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044d780();\n        cVar1 = fcn.00456240(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.00455ca0(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    iVar2 = fcn.0044d780();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00456240();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.004554c0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 471
    },
    "00456180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00456180(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00456240(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00456240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00456240(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar3;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x55c288 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar2 = fcn.0044df00();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402ac0(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar3 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar3) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar3 = true;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 659
    },
    "00456b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456b80(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d1cf8 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00456ca0(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.00456ea0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.004356e0();\n        fcn.00435500();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00456ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00456ca0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00456ea0();\n        if (arg1[3] == 0) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        else {\n            fcn.0044bba0();\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.004356e0();\n            fcn.00435500();\n        }\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435500();\n        if (arg1[1] != 0) {\n            fcn.0044bba0();\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.004356a0();\n            fcn.00435500();\n        }\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.004356e0();\n        fcn.00435500();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 407
    },
    "00456ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456ea0(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*0x626668 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable.Ld_M_fL.0;\n    }\n    else {\n        pcVar1 = 0x4d2850;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 166
    },
    "00456f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456f20(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x5d1d00 == 0) {\n                return;\n            }\n            if ((*0x626668 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable.Ld_M_fL.0;\n            }\n            else {\n                pcVar1 = 0x4d2850;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x456faa;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x456fc5;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x456fdf;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 625
    },
    "00457000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00457000(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x457025;\n            fcn.004571e0();\n            *(*0x20 + -0x20) = 0x45702a;\n            iVar1 = fcn.00457940(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x457075;\n            in_RAX = fcn.0045efa0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x457085;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 468
    },
    "00457c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00457c60(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(in_RAX + iVar4 + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00432200();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 1) {\n        uVar3 = uVar3 & 0xffffffffffffff00 | *(in_RAX + 2) == '_';\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 320
    },
    "00457d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00457d00(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x562180 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x5620b8 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x457d7a;\n                fcn.0045f178();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x457da5;\n            uVar5 = fcn.0040d7e0(*0x20 + -0x1b8);\n            if (*0x5d1d18 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x5d1d18;\n                piVar16 = (*0x5d1d18)[1];\n                piVar12 = (*0x5d1d18)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x150);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x158);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x210) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x457ffc;\n                            piVar7 = fcn.0040f600(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x458025;\n                        piVar7 = fcn.0040f600(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x00457f7e;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x458059;\n                            iVar13 = fcn.00447240(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x626890 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x45809d;\n                            fcn.0045eb60(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x4580b4;\n                        puVar8 = fcn.0040f940(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x626890 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x4580ef;\n                            fcn.0045eb60(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x00457f7e:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x210) == 0) {\n                        *(*0x20 + -0x2c0) = 0x457e77;\n                        uVar5 = fcn.0040d7e0(0);\n                        uVar11 = *0x5d2770;\n                        uVar10 = *0x5d2778;\n                        uVar6 = *0x5d2770;\n                        if (*0x5d2780 < *0x5d2778 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x457ea9;\n                            uVar6 = fcn.00447240(*0x5d2778);\n                            uVar18 = uVar6;\n                            *0x5d2780 = uVar10;\n                            if (*0x626890 != 0) {\n                                *(*0x20 + -0x2c0) = 0x457ece;\n                                uVar6 = fcn.0045ea40(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x5d2770;\n                            }\n                            *0x5d2770 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x5d2778 = uVar10 + 1;\n                        if (*0x626890 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x210) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x457f0e;\n                            fcn.0045ea40(uVar10, *0x5d2778, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x457f25;\n                            fcn.0045ea40(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x150);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x158);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x458151;\n                            piVar7 = fcn.0040f600(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x45824f;\n                                fcn.0045f199();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x458268;\n                                uVar4 = fcn.0044be80();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x45828c;\n                                cVar3 = fcn.004582e0(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x0045817e;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x0045817e:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x4581a5;\n                            puVar8 = fcn.0040f940(uVar11);\n                            if (*0x626890 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x4581d5;\n                                fcn.0045eb60(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x4582c5;\n            fcn.0045eee0(0);\n        }\n        *(puVar15 + -8) = 0x4582cb;\n        in_RAX = fcn.0045c800();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3328
    },
    "004594c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004594c0(void)\n\n{\n    if (*0x626890 != '\\0') {\n        fcn.00403920();\n    }\n    fcn.004646c0();\n    return;\n}\n",
        "token_count": 47
    },
    "00459520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459520(ulong arg1)\n\n{\n    if (*0x626890 != '\\0') {\n        fcn.00403920();\n    }\n    fcn.00464680(arg1);\n    return;\n}\n",
        "token_count": 50
    },
    "00459840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459840(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = in_RAX;\n    if (*0x626890 != 0) {\n        fcn.0045ea40(arg1, arg2, arg3, arg4);\n        uVar1 = *0x5d1d30;\n    }\n    *0x5d1d30 = uVar1;\n    return;\n}\n",
        "token_count": 170
    },
    "004599a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004599a0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4599c9;\n            iVar3 = fcn.0042d720();\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x10) = iVar3 + 0x28;\n            *(*0x20 + -0x38) = 0x4599e5;\n            fcn.0040ab40();\n            iVar3 = *(*0x20 + -0x18);\n            if ((*(iVar3 + 0x20) == 0) || (*(iVar3 + 0x20) == 1)) {\n                if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x18) == 1)) {\n                    *(iVar3 + 8) = *(*0x20 + 8);\n                    *(iVar3 + 0x30) = 0;\n                    uVar4 = *(iVar3 + 0x10);\n                    while( true ) {\n                        if ((uVar4 >> 1 & 1) == 0) {\n                            bVar6 = false;\n                        }\n                        else {\n                            LOCK();\n                            bVar6 = uVar4 == *(iVar3 + 0x10);\n                            if (bVar6) {\n                                *(iVar3 + 0x10) = uVar4 ^ 2;\n                            }\n                            bVar6 = !bVar6;\n                        }\n                        if (!bVar6) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + 1;\n                    *(iVar3 + 0x18) = 0;\n                    *(iVar3 + 0x88) = 0;\n                    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n                    *(iVar3 + 0x20) = 0;\n                    *(iVar3 + 0xe0) = 0;\n                    *(iVar3 + 0xe8) = iVar3;\n                    uVar4 = *(iVar3 + 0x10);\n                    uVar1 = *(iVar3 + 0x30);\n                    if (*(iVar3 + 0x88) < 0) {\n                        uVar1 = *(iVar3 + 0x30) | 4;\n                    }\n                    while( true ) {\n                        LOCK();\n                        if (uVar4 == *(iVar3 + 0x10)) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x10) = uVar4 & 2 | uVar1;\n                    *(*0x20 + -0x38) = 0x459ac5;\n                    fcn.0040ad60();\n                    *(*0x20 + -0x38) = 0x459ad4;\n                    iVar2 = fcn.0042d8e0();\n                    if (iVar2 != 0) {\n                        *(*0x20 + -0x1c) = iVar2;\n                        *(*0x20 + -0x38) = 0x459aed;\n                        fcn.0042d3e0();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x459b25;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x38) = 0x459b36;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x459b45;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1043
    },
    "00459b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459b60(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x30) != '\\0') {\n                if ((*(in_RAX + 0x20) == 0) || (*(in_RAX + 0x20) == 1)) {\n                    if ((*(in_RAX + 0x18) == 0) || (*(in_RAX + 0x18) == 1)) {\n                        *(*0x20 + -0x20) = 0x459bad;\n                        fcn.0042d3e0();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x459bc8;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x20) = 0x459bd9;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x20) = 0x459bea;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x459bf5;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 419
    },
    "00459e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459e20(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    int64_t arg1;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            *(*0x20 + -0x38) = 0x459e51;\n            fcn.0040ab40();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x30) == '\\0') break;\n            *(*0x20 + -0x38) = 0x45a045;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x45a050;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    *(arg1 + 0x90) = *(arg1 + 0x90) + 1;\n    uVar8 = *(arg1 + 0x10);\n    uVar4 = *(arg1 + 0x30);\n    if (*(arg1 + 0x88) < 0) {\n        uVar4 = *(arg1 + 0x30) | 4;\n    }\n    arg3 = uVar4 | 8;\n    if (*(arg1 + 0xe0) < 0) {\n        uVar4 = uVar4 | 8;\n    }\n    while( true ) {\n        LOCK();\n        if (uVar8 == *(arg1 + 0x10)) break;\n        uVar8 = *(arg1 + 0x10);\n    }\n    *(arg1 + 0x10) = uVar8 & 2 | uVar4;\n    do {\n        uVar5 = *(arg1 + 0x18);\n        if (uVar5 == 1) {\n            uVar5 = 0;\n            goto code_r0x00459efd;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 0;\n            goto code_r0x00459efd;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x18;\n        uVar7 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar5 == uVar7) * *puVar1;\n    } while (uVar5 != uVar7);\n    if (uVar5 == 2) {\n        uVar5 = 0;\n    }\ncode_r0x00459efd:\n    do {\n        uVar7 = *(arg1 + 0x20);\n        if (uVar7 == 1) {\n            uVar7 = 0;\n            goto code_r0x00459f2e;\n        }\n        if (uVar7 == 0) {\n            uVar7 = 0;\n            goto code_r0x00459f2e;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x20;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar7 == uVar2) * *puVar1;\n        if (uVar7 == uVar2) {\n            if (uVar7 == 2) {\n                uVar7 = 0;\n            }\ncode_r0x00459f2e:\n            *(*0x20 + -0x18) = uVar5;\n            *(*0x20 + -0x20) = uVar7;\n            if (*(arg1 + 0x58) != 0) {\n                *(*0x20 + -0x38) = 0x459f48;\n                fcn.0044f460();\n                if (*0x626890 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x58) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = 0x459f72;\n                    fcn.0045eb60(arg1, 0, arg3, in_R9);\n                }\n            }\n            if (*(arg1 + 0xb0) != 0) {\n                *(*0x20 + -0x38) = 0x459f92;\n                fcn.0044f460();\n                if (*0x626890 == 0) {\n                    *(*(*0x20 + 8) + 0xb0) = 0;\n                }\n                else {\n                    *(*0x20 + -0x38) = 0x459fc5;\n                    fcn.0045eb40(0);\n                }\n            }\n            *(*0x20 + -0x38) = 0x459fd1;\n            fcn.0040ad60();\n            iVar3 = *0x62665c;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x62665c = *0x62665c + -1;\n                *(*0x20 + -0x38) = 0x459ff6;\n                fcn.00436760(iVar3);\n            }\n            iVar3 = *0x62665c;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x62665c = *0x62665c + -1;\n                *(*0x20 + -0x38) = 0x45a025;\n                fcn.00436760(iVar3);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1485
    },
    "0045a0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0045a0e0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t *piVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00433ce0();\n        iVar2 = unaff_R14[6];\n        piVar1 = iVar2 + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        return **(iVar2 + 0xa0);\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar4 = fcn.0043e080();\n    if (cVar4 != '\\0') {\n        if (*0x5d8810 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                fcn.0045c6c0();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00438040(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x5d31f8 != '\\0') && (unaff_R14 = fcn.00456aa0(),  unaff_R14 == '\\0')) {\n            unaff_R14 = fcn.004365e0();\n        }\n        return unaff_R14;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x5d8810 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x4d2ae8;\n            fcn.0045c6c0();\n        }\n        fcn.0045e8c0(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    piVar5 = fcn.0045c640();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return piVar5;\n}\n",
        "token_count": 861
    },
    "0045a3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0045a3a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x626654 < 2)) || (*0x626650 <= *0x5d31d8 + *0x5d31dc + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "0045a680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.0045a680(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t *puVar5;\n    ulong *puVar6;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if (*0x5d2810 == 0) {\n        iVar3 = fcn.0040d760();\n        if (*0x626890 != 0) {\n            fcn.0045ea40(param_1, param_2, param_3, param_4);\n            iVar3 = *0x5d2810;\n        }\n        *0x5d2810 = iVar3;\n        uVar4 = fcn.0040d760();\n        if (*0x626890 != 0) {\n            fcn.0045ea40(param_1, param_2, param_3, param_4);\n            uVar4 = *0x5d2818;\n        }\n        *0x5d2818 = uVar4;\n        *0x5d2808 = 0xffffffff;\n    }\n    uVar4 = *0x5d2818;\n    puVar5 = fcn.004100a0(in_RAX);\n    uVar2 = *0x5d2808;\n    uVar1 = *puVar5;\n    if (uVar4 == '\\0') {\n        arg1 = *0x5d2808;\n        *0x5d2808 = *0x5d2808 - 1;\n        puVar6 = fcn.0040f940(arg1);\n        if (*0x626890 == 0) {\n            *puVar6 = in_RAX;\n        }\n        else {\n            fcn.0045eb40();\n        }\n        puVar5 = fcn.00410240(in_RAX);\n        *puVar5 = uVar2;\n        uVar1 = uVar2;\n    }\n    fcn.0040ad60();\n    return uVar1;\n}\n",
        "token_count": 537
    },
    "0045ab40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045ab40(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar8 = 0x38;\n                }\n                else {\n                    iVar8 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar8 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar8 = 0;\n                    while (iVar8 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar8;\n                        *(*0x20 + -0x100) = 0x45ac05;\n                        fcn.0044e920();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar8 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar12 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar12 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar12 << 3;\n                        uVar11 = piVar12 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar8 = 0x38;\n                            }\n                            else {\n                                iVar8 = 0x48;\n                            }\n                            arg1 = *(iVar8 + in_RAX + uVar11);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar8 = 0x38;\n                                }\n                                else {\n                                    iVar8 = 0x48;\n                                }\n                                uVar7 = *(*(iVar8 + in_RAX + uVar11) + 0x17) & 0x1f;\n                                arg1 = uVar7;\n                                cVar6 = uVar7;\n                                if ((cVar6 != '\\r') && (cVar6 != '\\x0e')) {\n                                    if (*0x55c398 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45ad3b;\n                                        fcn.0040ab40();\n                                        iVar8 = *0x6265e8;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x45ad65;\n                                        ppiVar3 = fcn.0040dbe0(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar8 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x45aefd;\n                                            fcn.0040ad60();\n                                            *(*0x20 + -0x100) = 0x45af07;\n                                            fcn.0044efe0();\n                                            return;\n                                        }\n                                        iVar8 = *0x6265e8;\n                                        if (*0x6265e8 == 0) {\n                                            *(*0x20 + -0x100) = 0x45ad7f;\n                                            iVar8 = fcn.0040d760();\n                                            if (*0x626890 != 0) {\n                                                *(*0x20 + -0x100) = 0x45ad9d;\n                                                fcn.0045ea40(arg1, arg2, arg3, arg4);\n                                                iVar8 = *0x6265e8;\n                                            }\n                                        }\n                                        *0x6265e8 = iVar8;\n                                        bVar13 = *0x6265f0 < 2000;\n                                        if (*0x6265f0 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x45adcf;\n                                            uVar4 = fcn.0045f1b0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar9 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar9;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar13) {\n                                                *(*0x20 + -0xe0) = uVar4;\n                                                if (*0x626890 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45ae6f;\n                                                    fcn.0045f51a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x45ae8c;\n                                                    fcn.00411b00(*0x20 + -0x58);\n                                                    uVar9 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar9;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x45aeb3;\n                                                puVar5 = fcn.0040e020(*0x20 + -0xa8);\n                                                *puVar5 = *(*0x20 + -0xe0);\n                                                *0x6265f0 = *0x6265f0 + 1;\n                                                *(*0x20 + -0x100) = 0x45aed0;\n                                                fcn.0040ad60();\n                                                *(*0x20 + -0x100) = 0x45aeda;\n                                                fcn.0044efe0();\n                                                return;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x45af25;\n                                            fcn.0045eee0(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x45af33;\n                                        fcn.0040ad60();\n                                        *(*0x20 + -0x100) = 0x45af45;\n                                        fcn.00433ce0();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45af58;\n                                    fcn.00433560();\n                                }\n                                *(*0x20 + -0x100) = 0x45af6b;\n                                fcn.00433560();\n                            }\n                            *(*0x20 + -0x100) = 0x45af7e;\n                            fcn.00433560();\n                        }\n                        *(*0x20 + -0x100) = 0x45af91;\n                        fcn.00433560();\n                    }\n                    *(*0x20 + -0x100) = 0x45af99;\n                    fcn.0045efa0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x45afa6;\n                fcn.0045ef20(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x4ee8a0;\n            *(*0x20 + -0x100) = 0x45afb9;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + -8) = 0x45afcd;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2784
    },
    "0045b000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b000(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x626612 == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x5d1c80;\n        *(iVar2 + 0x2c8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.004039c0();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f4a0();\n    return;\n}\n",
        "token_count": 453
    },
    "0045e620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e620(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + 0x28);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.0045b8a0();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x45e689;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + 0x28) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 394
    },
    "0045e8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045e8c0(ulong noname_0, ulong arg2)\n\n{\n    if (*0x626d6b == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0045e900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045e900(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x626610 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x6268c0 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x626b80, auVar5 ^ *0x626b80);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4eefc0));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4eeec0);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x626b90, auVar5 ^ *0x626b90);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x626b90, auVar5 ^ *0x626b90);\n                auVar8 = aesenc(auVar5 ^ *0x626ba0, auVar5 ^ *0x626ba0);\n                auVar5 = aesenc(auVar5 ^ *0x626bb0, auVar5 ^ *0x626bb0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x626b90, auVar5 ^ *0x626b90);\n                auVar8 = aesenc(auVar5 ^ *0x626ba0, auVar5 ^ *0x626ba0);\n                auVar9 = aesenc(auVar5 ^ *0x626bb0, auVar5 ^ *0x626bb0);\n                auVar10 = aesenc(auVar5 ^ *0x626bc0, auVar5 ^ *0x626bc0);\n                auVar11 = aesenc(auVar5 ^ *0x626bd0, auVar5 ^ *0x626bd0);\n                auVar12 = aesenc(auVar5 ^ *0x626be0, auVar5 ^ *0x626be0);\n                auVar5 = aesenc(auVar5 ^ *0x626bf0, auVar5 ^ *0x626bf0);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x626b90, auVar5 ^ *0x626b90);\n            auVar8 = aesenc(auVar5 ^ *0x626ba0, auVar5 ^ *0x626ba0);\n            auVar9 = aesenc(auVar5 ^ *0x626bb0, auVar5 ^ *0x626bb0);\n            auVar10 = aesenc(auVar5 ^ *0x626bc0, auVar5 ^ *0x626bc0);\n            auVar11 = aesenc(auVar5 ^ *0x626bd0, auVar5 ^ *0x626bd0);\n            auVar12 = aesenc(auVar5 ^ *0x626be0, auVar5 ^ *0x626be0);\n            auVar5 = aesenc(auVar5 ^ *0x626bf0, auVar5 ^ *0x626bf0);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3944
    },
    "0045e920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045e920(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uchar (**in_RAX) [16];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    \n    if (*0x626610 == '\\0') {\n        while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n            fcn.0045c800();\n        }\n        uVar3 = fcn.00409520(in_RAX[1]);\n        return uVar3;\n    }\n    pauVar1 = in_RAX[1];\n    pauVar2 = *in_RAX;\n    auVar4 = pinsrw(ZEXT816(unaff_RBX), pauVar1, 4);\n    auVar4 = pshufhw(auVar4, auVar4, 0);\n    auVar5 = aesenc(auVar4 ^ *0x626b80, auVar4 ^ *0x626b80);\n    if (pauVar1 < 0x10) {\n        if (pauVar1 == NULL) {\n            auVar4 = aesenc(auVar5, auVar5);\n            return SUB168(auVar4, 0);\n        }\n        if ((pauVar2[1] & 0xff0) == 0) {\n            auVar4 = pshufb(*(*pauVar1 + pauVar2[-1]), *(pauVar1 * 0x10 + 0x4eefc0));\n        }\n        else {\n            auVar4 = *pauVar2 & *(pauVar1 * 0x10 + 0x4eeec0);\n        }\n    }\n    else {\n        if (pauVar1 != 0x10) {\n            if (pauVar1 < 0x21) {\n                auVar4 = aesenc(auVar4 ^ *0x626b90, auVar4 ^ *0x626b90);\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                return SUB168(auVar4, 0) ^ SUB168(auVar5, 0);\n            }\n            if (pauVar1 < 0x41) {\n                auVar6 = aesenc(auVar4 ^ *0x626b90, auVar4 ^ *0x626b90);\n                auVar7 = aesenc(auVar4 ^ *0x626ba0, auVar4 ^ *0x626ba0);\n                auVar4 = aesenc(auVar4 ^ *0x626bb0, auVar4 ^ *0x626bb0);\n                auVar7 = *(*pauVar1 + pauVar2[-2]) ^ auVar7;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                return SUB168(auVar4, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar5, 0) ^ SUB168(auVar7, 0);\n            }\n            if (pauVar1 <= pe_nt_image_headers64) {\n                auVar6 = aesenc(auVar4 ^ *0x626b90, auVar4 ^ *0x626b90);\n                auVar7 = aesenc(auVar4 ^ *0x626ba0, auVar4 ^ *0x626ba0);\n                auVar8 = aesenc(auVar4 ^ *0x626bb0, auVar4 ^ *0x626bb0);\n                auVar9 = aesenc(auVar4 ^ *0x626bc0, auVar4 ^ *0x626bc0);\n                auVar10 = aesenc(auVar4 ^ *0x626bd0, auVar4 ^ *0x626bd0);\n                auVar11 = aesenc(auVar4 ^ *0x626be0, auVar4 ^ *0x626be0);\n                auVar4 = aesenc(auVar4 ^ *0x626bf0, auVar4 ^ *0x626bf0);\n                auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n                auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n                auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(pauVar2[2] ^ auVar7, pauVar2[2] ^ auVar7);\n                auVar8 = aesenc(pauVar2[3] ^ auVar8, pauVar2[3] ^ auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                       SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n            }\n            auVar6 = aesenc(auVar4 ^ *0x626b90, auVar4 ^ *0x626b90);\n            auVar7 = aesenc(auVar4 ^ *0x626ba0, auVar4 ^ *0x626ba0);\n            auVar8 = aesenc(auVar4 ^ *0x626bb0, auVar4 ^ *0x626bb0);\n            auVar9 = aesenc(auVar4 ^ *0x626bc0, auVar4 ^ *0x626bc0);\n            auVar10 = aesenc(auVar4 ^ *0x626bd0, auVar4 ^ *0x626bd0);\n            auVar11 = aesenc(auVar4 ^ *0x626be0, auVar4 ^ *0x626be0);\n            auVar4 = aesenc(auVar4 ^ *0x626bf0, auVar4 ^ *0x626bf0);\n            auVar5 = *(*pauVar1 + pauVar2[-8]) ^ auVar5;\n            auVar6 = *(*pauVar1 + pauVar2[-7]) ^ auVar6;\n            auVar7 = *(*pauVar1 + pauVar2[-6]) ^ auVar7;\n            auVar8 = *(*pauVar1 + pauVar2[-5]) ^ auVar8;\n            auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n            auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n            auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n            auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n            uVar3 = pauVar1[-1] + 0xf >> 7;\n            do {\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, *pauVar2);\n                auVar6 = aesenc(auVar6, pauVar2[1]);\n                auVar7 = aesenc(auVar7, pauVar2[2]);\n                auVar8 = aesenc(auVar8, pauVar2[3]);\n                auVar9 = aesenc(auVar9, pauVar2[4]);\n                auVar10 = aesenc(auVar10, pauVar2[5]);\n                auVar11 = aesenc(auVar11, pauVar2[6]);\n                auVar4 = aesenc(auVar4, pauVar2[7]);\n                pauVar2 = pauVar2[8];\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar4, auVar4);\n            auVar4 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar4 = aesenc(auVar4, auVar4);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                   SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n        }\n        auVar4 = *pauVar2;\n    }\n    auVar4 = aesenc(auVar4 ^ auVar5, auVar4 ^ auVar5);\n    auVar4 = aesenc(auVar4, auVar4);\n    auVar4 = aesenc(auVar4, auVar4);\n    return SUB168(auVar4, 0);\n}\n",
        "token_count": 3221
    },
    "0045e940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045e940(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x626610 != '\\0') {\n        auVar1 = pinsrd(ZEXT816(unaff_RBX), *in_RAX, 2);\n        auVar1 = aesenc(auVar1, *0x626b80);\n        auVar1 = aesenc(auVar1, *0x626b90);\n        auVar1 = aesenc(auVar1, *0x626ba0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x6268c0 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d124b) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 291
    },
    "0045e980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045e980(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x626610 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x626b80);\n        auVar1 = aesenc(auVar1, *0x626b90);\n        auVar1 = aesenc(auVar1, *0x626ba0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x6268c0 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 291
    },
    "0045f580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045f580(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x626d63 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4866
    },
    "0045f840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045f840(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x62660f & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x626d66 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13217
    },
    "004607e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004607e0(void)\n\n{\n    if (*0x626613 == '\\0') {\n        return;\n    }\n    fcn.0042f200();\n    return;\n}\n",
        "token_count": 42
    },
    "00460840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00460840(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x626613 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042f280();\n    return iVar1;\n}\n",
        "token_count": 100
    },
    "00460ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460ae0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x626890 == 0) {\n                *0x5d1ce8 = 0x460280;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42f0a5;\n                fcn.0045eb60(arg1, 0x460280, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42f115;\n                    fcn.0042e1e0();\n                    *(puVar5 + -0x68) = 0x42f11a;\n                    fcn.00446540();\n                    *(puVar5 + -0x68) = 0x42f11f;\n                    fcn.004465e0();\n                    *(puVar5 + -0x68) = 0x42f125;\n                    fcn.0042ece0();\n                    *(puVar5 + -0x68) = 0x42f12c;\n                    *0x626674 = fcn.0042ec20();\n                    *(puVar5 + -0x68) = 0x42f137;\n                    fcn.0042eda0();\n                    *(puVar5 + -0x68) = 0x42f13c;\n                    *0x626654 = fcn.0042eb00();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42f16e;\n                    fcn.00430e80();\n                    *0x626798 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42f1af;\n                    fcn.00430f00();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x4d1b17);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42f0f4;\n                    uVar3 = fcn.00458fa0(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x626b00;\n                *(uVar4 + 0x626b00) = uVar3;\n                *0x626628 = *0x626628 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42f1d7;\n            fcn.0045eee0(100);\n        }\n        *(puVar6 + -8) = 0x42f1dd;\n        fcn.0045c800();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1162
    },
    "00460cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437484)\n\nvoid fcn.00460cc0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x5d31b8 = 10000;\n            iVar2 = 0x561f60;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x43733a;\n                fcn.0044ca80();\n                iVar2 = *(*(puVar4 + -0x20) + 0x220);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                param_2 = 0x626c00;\n                *(iVar2 * 0x40 + 0x626c08) = 0;\n                *(iVar2 * 0x40 + 0x626c10) = 0;\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                param_2 = 0x627468;\n                *(iVar2 * 0x10 + 0x627468) = 0;\n                *(iVar2 * 0x10 + 0x627470) = 0;\n            }\n            *(puVar4 + -0x58) = 0x4373ab;\n            fcn.0040b4e0();\n            *(puVar4 + -0x58) = 0x4373b0;\n            fcn.004372a0();\n            *(puVar4 + -0x58) = 0x4373b5;\n            fcn.00403860();\n            *(puVar4 + -0x58) = 0x4373ca;\n            fcn.0042f660(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x4373e5;\n            fcn.004376e0(uVar1);\n            *(puVar4 + -0x58) = 0x4373ea;\n            fcn.0044c820();\n            *(puVar4 + -0x58) = 0x4373ef;\n            fcn.00457d00();\n            *(puVar4 + -0x58) = 0x4373f4;\n            fcn.0040a0a0();\n            *(puVar4 + -0x58) = 0x4373f9;\n            fcn.0044a820();\n            *(puVar4 + -0x58) = 0x437409;\n            fcn.0042f700();\n            *(puVar4 + -0x58) = 0x43740e;\n            fcn.00443660();\n            *(puVar4 + -0x58) = 0x437413;\n            fcn.00417580();\n            *(puVar4 + -0x58) = 0x437425;\n            fcn.0040ab40();\n            *(puVar4 + -0x58) = 0x43742a;\n            fcn.004607e0();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x5d3188 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x626654;\n            *(puVar4 + -0x58) = 0x437465;\n            fcn.004076a0();\n            *(puVar4 + -0x58) = 0x43746a;\n            fcn.0044bac0();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x437493;\n            iVar3 = fcn.0043fb00();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x4374aa;\n                fcn.0040ad60();\n                if (1 < *0x626aa0) {\n                    *0x626895 = 1;\n                    *0x626890 = CONCAT31(*0x626891, 1);\n                    *(puVar4 + -0x10) = *0x5d26f0;\n                    *(puVar4 + -0x28) = *0x5d26f8;\n                    iVar2 = 0;\n                    arg1 = *0x5d26f0;\n                    param_2 = *0x5d26f8;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x437585;\n                        fcn.0042cf20(arg1, iVar2 + 0x1260);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x5cae38 == 0) {\n                    *0x5cae38 = 7;\n                    if (*0x626890 == 0) {\n                        *0x5cae30 = 0x4c9009;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x437526;\n                        fcn.0045ea40(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x5cae88 == 1) {\n                    *0x5cae88 = 0;\n                    if (*0x626890 == 0) {\n                        *0x5cae80 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43755f;\n                        fcn.0045ea40(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x4375b6;\n            fcn.00433ce0();\n        }\n        *(puVar5 + -8) = 0x4375bc;\n        fcn.0045c800();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1630
    },
    "00460ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460ce0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00438dc0();\n    fcn.00438f60();\n    return;\n}\n",
        "token_count": 199
    },
    "00460dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443466)\n// WARNING: Removing unreachable block (ram,0x00443468)\n// WARNING: Removing unreachable block (ram,0x0044346e)\n// WARNING: Removing unreachable block (ram,0x00443489)\n// WARNING: Removing unreachable block (ram,0x0044348f)\n// WARNING: Removing unreachable block (ram,0x00443491)\n// WARNING: Removing unreachable block (ram,0x00443497)\n// WARNING: Removing unreachable block (ram,0x004434aa)\n// WARNING: Removing unreachable block (ram,0x004434b0)\n// WARNING: Removing unreachable block (ram,0x004434c9)\n// WARNING: Removing unreachable block (ram,0x004434cb)\n// WARNING: Removing unreachable block (ram,0x004434d7)\n// WARNING: Removing unreachable block (ram,0x004434f1)\n// WARNING: Removing unreachable block (ram,0x004434f3)\n// WARNING: Removing unreachable block (ram,0x00443512)\n// WARNING: Removing unreachable block (ram,0x0044351c)\n// WARNING: Removing unreachable block (ram,0x0044352d)\n// WARNING: Removing unreachable block (ram,0x004434d4)\n// WARNING: Removing unreachable block (ram,0x0044353e)\n// WARNING: Removing unreachable block (ram,0x0044354f)\n// WARNING: Removing unreachable block (ram,0x00443565)\n// WARNING: Removing unreachable block (ram,0x00443576)\n// WARNING: Removing unreachable block (ram,0x00443587)\n\nvoid fcn.00460dc0(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x4435a9;\n                                                fcn.00433ce0();\n                                            }\n                                            *(puVar8 + -0x48) = 0x4435ba;\n                                            fcn.00433ce0();\n                                        }\n                                        *(puVar8 + -0x48) = 0x4435cb;\n                                        fcn.00433ce0();\n                                    }\n                                    *(puVar8 + -0x48) = 0x4435dc;\n                                    fcn.00433ce0();\n                                }\n                                *(puVar8 + -0x48) = 0x4435ed;\n                                fcn.00433ce0();\n                            }\n                            *(puVar8 + -0x48) = 0x4435fe;\n                            fcn.00433ce0();\n                        }\n                        *(puVar8 + -0x48) = 0x44360f;\n                        fcn.00433ce0();\n                    }\n                    *(puVar8 + -0x48) = 0x443625;\n                    fcn.00433ce0();\n                }\n                *(puVar8 + -0x48) = 0x443636;\n                fcn.00433ce0();\n            }\n            *(puVar8 + -0x48) = 0x443647;\n            fcn.00433ce0();\n        }\n        *(puVar9 + -8) = 0x44364d;\n        fcn.0045c800();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1683
    },
    "00460f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460f00(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x130 && puVar16 + -0x130 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1b0;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x158) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b8) = 0x449c5b;\n                fcn.00435480();\n                *(puVar16 + -0x1b8) = 0x449c6c;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449c76;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449c87;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449c94;\n                fcn.00435d00();\n                *(puVar16 + -0x1b8) = 0x449ca5;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449cb2;\n                fcn.00435d00();\n                *(puVar16 + -0x1b8) = 0x449cc5;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449cd2;\n                fcn.00435d00();\n                *(puVar16 + -0x1b8) = 0x449ce5;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449cf2;\n                fcn.00435d00();\n                *(puVar16 + -0x1b8) = 0x449cf7;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x449cfc;\n                fcn.00435500();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b8) = 0x449d65;\n                fcn.00455780(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b8) = 0x449d76;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b8) = 0x449d87;\n            fcn.00433ce0();\n        }\n        *(puVar17 + -8) = 0x449d8d;\n        fcn.0045c800();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1b0) = puVar10 + 7;\n            *(puVar16 + -0x1b8) = 0x4492b4;\n            fcn.0045c620();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x180) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b8) = 0x44936e;\n                fcn.00435480();\n                *(puVar16 + -0x1b8) = 0x44937f;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449389;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x44939a;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x4493a7;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x4493b8;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x4493c5;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x4493d6;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x4493e5;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x4493f6;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449405;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449416;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449425;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449436;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449445;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449456;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449465;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449476;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x449485;\n                fcn.00435be0();\n                *(puVar16 + -0x1b8) = 0x449496;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x4494a5;\n                fcn.00435d00();\n                *(puVar16 + -0x1b8) = 0x4494b6;\n                fcn.00435d80();\n                *(puVar16 + -0x1b8) = 0x4494bb;\n                fcn.00435500();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x180);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00449562:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x168) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b8) = 0x44957a;\n                    iVar9 = fcn.0044d780(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x168);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x449594;\n                        iVar8 = fcn.0044e420();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x168);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x55c3c8) && (uVar12 <= *0x55c3c0)) {\n                        *(puVar16 + -0x160) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x449609;\n                        fcn.00438040(8);\n                        *(puVar16 + -0x1b8) = 0x44961b;\n                        fcn.00448da0();\n                        *(puVar16 + -0x1b8) = 0x449632;\n                        fcn.00438040(2);\n                        *(puVar16 + -0x1b0) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b8) = 0x449647;\n                        fcn.0045c620();\n                        return;\n                    }\n                    if (*0x55c3c0 <= *0x55c3c8) goto code_r0x0044975b;\n                    *(puVar16 + -0x1b8) = 0x44967d;\n                    fcn.00435480();\n                    *(puVar16 + -0x1b8) = 0x44968e;\n                    fcn.00435d80();\n                    *(puVar16 + -0x1b8) = 0x44969a;\n                    fcn.00435a80();\n                    *(puVar16 + -0x1b8) = 0x4496ab;\n                    fcn.00435d80();\n                    *(puVar16 + -0x1b8) = 0x4496b0;\n                    fcn.00435500();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b8) = 0x4496d4;\n                        fcn.00435480();\n                        *(puVar16 + -0x1b8) = 0x4496e5;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x4496ef;\n                        fcn.00435be0();\n                        *(puVar16 + -0x1b8) = 0x449705;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x449712;\n                        fcn.00435be0();\n                        *(puVar16 + -0x1b8) = 0x449725;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x449732;\n                        fcn.00435be0();\n                        *(puVar16 + -0x1b8) = 0x449745;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x44974a;\n                        fcn.00435500();\n                        *(puVar16 + -0x1b8) = 0x44975b;\n                        fcn.00433ce0();\ncode_r0x0044975b:\n                        *(puVar16 + -0x1b8) = 0x449765;\n                        fcn.00435480();\n                        *(puVar16 + -0x1b8) = 0x449776;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x449785;\n                        fcn.00435a80();\n                        *(puVar16 + -0x1b8) = 0x449796;\n                        fcn.00435d80();\n                        *(puVar16 + -0x1b8) = 0x44979b;\n                        fcn.00435500();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b8) = 0x44952a;\n                            fcn.00449e40();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b8) = 0x44954d;\n                            fcn.0043d080(puVar13);\n                        }\n                        *(puVar16 + -0x1b8) = 0x44955a;\n                        fcn.0043d000();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00449562;\n                    }\n                    *(puVar16 + -0x1b8) = 0x4497d6;\n                    fcn.00433ce0();\n                }\n                *(puVar16 + -0x1b8) = 0x4497e7;\n                puVar10 = fcn.00433ce0();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x184) = *(puVar10 + 0x12);\n            *(puVar16 + -0x150) = puVar10[0x13];\n            *(puVar16 + -0x1b8) = 0x449805;\n            fcn.00435480();\n            *(puVar16 + -0x1b8) = 0x449816;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x449825;\n            fcn.00435d00();\n            *(puVar16 + -0x1b8) = 0x449836;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x449845;\n            fcn.00435b80();\n            *(puVar16 + -0x1b8) = 0x449856;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x449865;\n            fcn.00435be0();\n            *(puVar16 + -0x1b8) = 0x449876;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x44987b;\n            fcn.00435500();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b8) = 0x449893;\n            fcn.00435480();\n            *(puVar16 + -0x1b8) = 0x4498a5;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x4498af;\n            fcn.00435be0();\n            *(puVar16 + -0x1b8) = 0x4498c5;\n            fcn.00435d80();\n            *(puVar16 + -0x1b8) = 0x4498d2;\n            fcn.00435be0();\n            *(puVar16 + -0x1b8) = 0x4498d7;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x4498dc;\n            fcn.00435500();\n            *(puVar16 + -0x1b8) = 0x4498ed;\n            fcn.00433ce0();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b8) = 0x4498fe;\n        puVar10 = fcn.00433ce0();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b8) = 0x449952;\n    iVar9 = fcn.0044d780(uVar15);\n    if (iVar9 != 0) goto code_r0x00449bd6;\n    uVar11 = 9;\n    uVar14 = 0x4c9382;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x170) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x178) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = *puVar13;\n        *(puVar16 + -0x110) = puVar13[1];\n        *(puVar16 + -0x118) = *(puVar16 + -0x70);\n        *(puVar16 + -0x120) = *(puVar16 + -0x78);\n        *(puVar16 + -0x128) = *(puVar16 + -0x50);\n        *(puVar16 + -0x130) = puVar13[8];\n        *(puVar16 + -0x138) = puVar13[7];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b8) = 0x4499f9;\n        fcn.00435480();\n        *(puVar16 + -0x1b8) = 0x449a0a;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a1c;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a2d;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a37;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449a48;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a52;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449a65;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a72;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449a85;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449a92;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449aa5;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449ab2;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449ac5;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449ad2;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449ae5;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449af2;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449b05;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449b12;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449b25;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449b2f;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449b45;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449b4f;\n        fcn.00435be0();\n        *(puVar16 + -0x1b8) = 0x449b65;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449b72;\n        fcn.00435d00();\n        *(puVar16 + -0x1b8) = 0x449b85;\n        fcn.00435d80();\n        *(puVar16 + -0x1b8) = 0x449b8a;\n        fcn.00435500();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b8) = 0x449bc5;\n        fcn.00455780(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b8) = 0x449bd6;\n        iVar9 = fcn.00433ce0();\ncode_r0x00449bd6:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b8) = 0x449beb;\n        uVar11 = fcn.0044df00();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x170) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b8) = 0x449c11;\n        iVar9 = fcn.0044d2a0(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x170);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7109
    },
    "00464e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00464e80(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t *noname_1;\n    int64_t **ppiVar7;\n    uchar *puVar8;\n    int32_t *arg2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong arg3;\n    ulong uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack0000000000000028;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    ulong uStack24;\n    char cStack16;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack56 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x626617)) {\n        auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    uVar9 = 0x4bc840;\n    if (auStack56._0_8_ == 0x4bc840) {\n        uVar6 = *auStack56._8_8_;\n        cStack16 = *(auStack56._8_8_ + 1);\n    }\n    else {\n        cStack16 = 0;\n        uVar6 = 0;\n    }\n    uStack24 = uVar6;\n    auStack40._0_8_ = unaff_RBX;\n    auStack40._8_8_ = arg1;\n    fcn.0040dbe0(auStack40);\n    if ((uVar6 != '\\0') &&\n       (auStack40._0_8_ = fcn.00465400(uStack0000000000000028),  auStack40._8_8_ = unaff_RDI,  unaff_RDI != '\\0')) {\n        return auStack40._0_8_;\n    }\n    LOCK();\n    if (*in_RAX == 0) {\n        *in_RAX = 1;\n    }\n    else {\n        fcn.004658a0();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack72 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x626617)) {\n        auStack72 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack72._0_8_ == 0x4bc840) {\n        uVar6 = *auStack72._8_8_;\n        cVar4 = *(auStack72._8_8_ + 1);\n    }\n    else {\n        cVar4 = '\\0';\n        uVar6 = 0;\n    }\n    arg3 = uVar6;\n    uStack24 = uVar6;\n    cStack16 = cVar4;\n    auStack40._8_8_ = arg1;\n    puVar5 = fcn.0040dbe0(auStack40);\n    uVar3 = *puVar5;\n    if (uVar6 == '\\0') {\n        uVar3 = *(in_RAX + 6);\n        auStack40._8_8_ = arg1;\n        fcn.0040dbe0(auStack40);\n        if (uVar3 == '\\0') {\n            if (cVar4 == '\\0') {\n                fcn.00465640();\n                cStack16 = '\\x01';\n                uStack24 = uVar6;\n                uVar6 = fcn.0040a340();\n                fcn.00464560(uVar6);\n            }\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar5 = fcn.0040cc20();\n            *puVar5 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (*0x626890 == 0) {\n                puVar5[1] = uStack0000000000000028;\n            }\n            else {\n                fcn.0045eb60(unaff_RDI, uStack0000000000000028, arg3, uVar9);\n            }\n            noname_1 = fcn.0040cc20();\n            if (*0x626890 == 0) {\n                *noname_1 = puVar5;\n            }\n            else {\n                fcn.0045eb60(uVar6, puVar5, arg3, uVar9);\n            }\n            puVar8 = auStack40;\n            ppiVar7 = fcn.0040e020(puVar8);\n            if (*0x626890 == 0) {\n                *ppiVar7 = noname_1;\n            }\n            else {\n                fcn.0045eb60(puVar8, noname_1, arg3, uVar9);\n            }\n        }\n        else {\n            uVar9 = fcn.00465400(uStack0000000000000028);\n            auStack40 = CONCAT88(unaff_RDI, uVar9);\n            fcn.00465560();\n            unaff_RDI = uVar9;\n        }\n    }\n    else {\n        cVar4 = fcn.00459520(0);\n        if (cVar4 != '\\0') {\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar8 = auStack40;\n            arg2 = in_RAX;\n            puVar5 = fcn.0040e020(puVar8);\n            if (*0x626890 == 0) {\n                *puVar5 = uVar3;\n            }\n            else {\n                fcn.0045ea40(puVar8, arg2, arg3, uVar9);\n            }\n        }\n        uVar9 = fcn.00465400(uStack0000000000000028);\n        auStack40 = CONCAT88(unaff_RDI, uVar9);\n        unaff_RDI = uVar9;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00465ba0();\n    }\n    return unaff_RDI;\n}\n",
        "token_count": 1468
    },
    "00465400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00465400(ulong arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    puVar3 = *in_RAX;\n    if (puVar3 == *0x5d1d60) {\n        return 0;\n    }\n    if (puVar3 != NULL) {\n        return *puVar3;\n    }\n    puVar3 = fcn.0040cc20();\n    *puVar3 = unaff_RBX;\n    if (*0x626890 == 0) {\n        puVar3[1] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045eb60(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    while( true ) {\n        cVar2 = fcn.00459520(puVar3);\n        if (cVar2 != '\\0') {\n            return unaff_RBX;\n        }\n        puVar1 = *in_RAX;\n        if (puVar1 == *0x5d1d60) break;\n        if (puVar1 != NULL) {\n            return *puVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00465560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465560(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(in_RAX + 0x20) + 1;\n    *(in_RAX + 0x20) = iVar1;\n    if (*(in_RAX + 0x18) == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = **(in_RAX + 0x18);\n    }\n    if (iVar2 <= iVar1) {\n        arg1 = fcn.0040a340();\n        fcn.00464560(arg1);\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045eb40(0);\n        }\n        *(in_RAX + 0x20) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00465640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465640(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_R14;\n    ulong uStack120;\n    ulong uStack112;\n    ulong *puStack104;\n    ulong *puStack96;\n    uchar auStack64 [56];\n    \n    while (auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x18) != 0) {\n        return;\n    }\n    uVar5 = 0;\n    uVar3 = fcn.0040d7e0(0);\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x18) = uVar3;\n    }\n    else {\n        fcn.0045ea40(uVar5, in_RAX, param_3, param_4);\n    }\n    fcn.0045f1ab();\n    fcn.0040e540(&puStack104, in_RAX, param_3, param_4);\n    while (puStack104 != NULL) {\n        uVar3 = *puStack96;\n        uVar5 = *puStack104;\n        uVar1 = puStack104[1];\n        cVar2 = fcn.00465820();\n        if (cVar2 == '\\0') {\n            uStack120 = uVar5;\n            uStack112 = uVar1;\n            puVar4 = fcn.0040e020(&uStack120);\n            if (*0x626890 == 0) {\n                *puVar4 = uVar3;\n            }\n            else {\n                fcn.0045eb40(uVar3);\n            }\n        }\n        fcn.0040e7c0();\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "004658a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004658a0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.0045a3a0();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.0045a420();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.0045a060();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.0045a9c0();\n        }\n        fcn.0045a880(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.0045a9c0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.0045a060();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 805
    },
    "00465c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465c80(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.004658a0();\n    }\n    auStack56 = CONCAT88(in_RAX + 1, 0x465e00);\n    ppcStack16 = auStack56;\n    if (*in_RAX == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x465dc0);\n        ppcStack24 = auStack40;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 314
    },
    "00465e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465e60(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        return;\n    }\n    arg1_00 = arg1;\n    piVar1 = fcn.004661e0();\n    if (*piVar1 == 0) {\n        *piVar1 = unaff_RBX;\n        if (*0x626890 == 0) {\n            piVar1[1] = arg1;\n        }\n        else {\n            fcn.0045eb60(arg1_00, arg1, in_R8, in_R9);\n        }\n        unaff_RBX = 0;\n        arg1 = 0;\n    }\n    if (unaff_RBX != 0) {\n        fcn.00466a40(arg1);\n    }\n    fcn.0045a340();\n    return;\n}\n",
        "token_count": 283
    },
    "00465f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465f40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = fcn.004661e0();\n    arg1 = *piVar1;\n    *piVar1 = 0;\n    if (*0x626890 == 0) {\n        piVar1[1] = 0;\n    }\n    else {\n        fcn.0045eba0(arg1, piVar1[1], param_3, param_4);\n    }\n    if ((arg1 == 0) && (arg1 = fcn.00466c20(),  arg1 == 0)) {\n        arg1 = fcn.00466020();\n    }\n    fcn.0045a340();\n    if ((arg1 == 0) && (*(in_RAX + 0x20) != NULL)) {\n        (***(in_RAX + 0x20))();\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00466020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466020(void)\n\n{\n    uint64_t uVar1;\n    ulong *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar3 = in_RAX[1];\n    uVar5 = *in_RAX;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        if (iVar3 == -1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (iVar4 + unaff_RBX + 1) % iVar3;\n        }\n        iVar2 = fcn.00466ca0(iVar3, iVar2 << 7);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    uVar1 = in_RAX[3];\n    if (uVar1 <= unaff_RBX) {\n        return 0;\n    }\n    iVar4 = in_RAX[2];\n    iVar2 = unaff_RBX * 0x80;\n    iVar3 = *(iVar4 + iVar2);\n    if (iVar3 != 0) {\n        *(iVar4 + iVar2) = 0;\n        if (*0x626890 == 0) {\n            *(iVar4 + 8 + iVar2) = 0;\n        }\n        else {\n            fcn.0045eb40(0, iVar4, iVar3, *(iVar4 + 8 + iVar2), uVar5);\n        }\n        return iVar3;\n    }\n    iVar4 = 0;\n    while( true ) {\n        if (uVar1 <= iVar4) {\n            in_RAX[3] = 0;\n            return 0;\n        }\n        if (uVar1 == 0xffffffffffffffff) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (iVar4 + unaff_RBX) % uVar1;\n        }\n        iVar3 = fcn.00466ca0(uVar1, iVar3 << 7);\n        if (iVar3 != 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 547
    },
    "00466260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466260(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t arg2;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&ppcStack16 < *(unaff_R14 + 0x10) || &ppcStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    fcn.0045a340();\n    LOCK();\n    if (*0x626820 == 0) {\n        *0x626820 = 1;\n    }\n    else {\n        fcn.004658a0();\n    }\n    auStack32 = CONCAT88(0x626820, 0x466500);\n    ppcStack16 = auStack32;\n    uVar1 = fcn.0045a320();\n    uVar3 = *0x5d27b0;\n    iVar4 = *in_RAX;\n    if (in_RAX[1] < uVar1 || in_RAX[1] == uVar1) {\n        if (iVar4 == 0) {\n            uVar5 = *0x5d27b8;\n            uVar2 = *0x5d27b0;\n            if ((*0x5d27c0 < *0x5d27b8 + 1) &&\n               (arg1 = *0x5d27b8,  arg2 = *0x5d27b8,  uVar2 = fcn.00447240(*0x5d27b8),  uVar5 = uVar3,  uVar3 = uVar2, \n               *0x5d27c0 = arg1,  *0x626890 != 0)) {\n                uVar2 = fcn.0045ea40(arg1, arg2, param_3, param_4);\n                uVar3 = *0x5d27b0;\n            }\n            *0x5d27b0 = uVar3;\n            *0x5d27b8 = uVar5 + 1;\n            if (*0x626890 == 0) {\n                *(uVar2 + uVar5 * 8) = in_RAX;\n            }\n            else {\n                fcn.0045eb40();\n            }\n        }\n        uVar3 = fcn.00406600();\n        iVar4 = fcn.00447160(uVar3);\n        if (uVar3 != 0) {\n            fcn.004594c0();\n            in_RAX[1] = uVar3;\n            if (uVar1 < uVar3) {\n                (**ppcStack16)();\n                return uVar1 * 0x80 + iVar4;\n            }\n            fcn.0045eee0(uVar3);\n        }\n        fcn.0045eee0(uVar3);\n        fcn.004329e0();\n        return 0;\n    }\n    (**ppcStack16)();\n    return uVar1 * 0x80 + iVar4;\n}\n",
        "token_count": 748
    },
    "00466700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00466700(uint64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t *in_RAX;\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        arg1_00 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = in_RAX[2];\n            arg4 = in_RAX[1];\n            uVar1 = *in_RAX >> 0x20;\n            if (uVar1 == *in_RAX + arg1_00) {\n                return 0;\n            }\n            uVar2 = uVar1 & arg1_00 - 1;\n            if (uVar2 < arg1_00) {\n                arg2 = uVar2 * 0x10;\n                if (*(arg4 + arg2) == 0) {\n                    iVar4 = 0x4b68a0;\n                    if (unaff_RBX != 0) {\n                        iVar4 = unaff_RBX;\n                    }\n                    *(arg4 + arg2) = iVar4;\n                    uVar2 = 0;\n                    if (unaff_RBX != 0) {\n                        uVar2 = arg1;\n                    }\n                    if (*0x626890 == 0) {\n                        *(arg4 + 8 + arg2) = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x46678f;\n                        in_RAX = fcn.0045eb80(arg1, arg2, arg1_00 - 1, arg4);\n                    }\n                    LOCK();\n                    *in_RAX = *in_RAX + 0x100000000;\n                    return 1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x20) = 0x4667cf;\n            in_RAX = fcn.0045eee0(arg1_00);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1_00;\n        *(puVar3 + -8) = 0x4667e5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 726
    },
    "00466800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466800(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                iVar5 = uVar1 >> 0x20;\n                if (uVar1 == iVar5) {\n                    return 0;\n                }\n                uVar6 = iVar5 - 1;\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar6 << 0x20 | uVar1 & 0xffffffff));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg2 = *(uVar2 + 8 + iVar4);\n                arg3 = *(uVar2 + iVar4);\n                if ((arg3 == 0x4b68a0) && (arg2 == 0)) {\n                    arg3 = 0;\n                    arg2 = 0;\n                }\n                arg4 = uVar2 + iVar4 + 8;\n                if (*0x626890 == 0) {\n                    *(uVar2 + iVar4) = 0;\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4668be;\n                    fcn.0045eba0(in_RAX, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4668c6;\n                    fcn.0045eba0(in_RAX, arg2, arg3, arg4);\n                }\n                return arg3;\n            }\n            *(*0x20 + -0x20) = 0x4668f3;\n            in_RAX = fcn.0045eee0(uVar1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x4668fe;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 720
    },
    "00466920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00466920(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t arg2;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar6 = uVar1;\n                if (uVar6 == uVar1 >> 0x20) {\n                    return 0;\n                }\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar1 & 0xffffffff00000000 | uVar6 + 1));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg1 = *(uVar2 + 8 + iVar4);\n                arg2 = *(uVar2 + iVar4);\n                if ((arg2 == 0x4b68a0) && (arg1 == 0)) {\n                    arg2 = 0;\n                    arg1 = 0;\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = arg2;\n                if (*0x626890 == 0) {\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4669df;\n                    fcn.0045eb80(arg1, arg2, uVar2 + iVar4, arg4);\n                }\n                *(*0x20 + -0x30) = 0x4669e9;\n                fcn.004594c0();\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x30) = 0x466a1a;\n            in_RAX = fcn.0045eee0(uVar1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x466a25;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 718
    },
    "00466a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00466a40(ulong arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t noname_1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t arg1_01;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar4 = *in_RAX;\n    noname_1 = iVar4;\n    if (iVar4 == 0) {\n        noname_1 = fcn.0040cc20();\n        arg1_00 = 8;\n        uVar2 = fcn.00447160(8);\n        *(noname_1 + 0x10) = 8;\n        *(noname_1 + 0x18) = 8;\n        if (*0x626890 == 0) {\n            *(noname_1 + 8) = uVar2;\n            *in_RAX = noname_1;\n        }\n        else {\n            fcn.0045ea40(arg1_00, iVar4, in_R8, in_R9);\n            fcn.0045eb80(arg1_00, iVar4, in_R8, in_R9);\n        }\n        fcn.004594c0(in_RAX);\n    }\n    cVar1 = fcn.00466700(arg1);\n    if (cVar1 == '\\0') {\n        iVar4 = *(noname_1 + 0x10);\n        iVar3 = fcn.0040cc20();\n        iVar4 = iVar4 * 2;\n        if (0x3fffffff < iVar4) {\n            iVar4 = 0x40000000;\n        }\n        if (*0x626890 == 0) {\n            *(iVar3 + 0x28) = noname_1;\n        }\n        else {\n            fcn.0045eb60(iVar4, noname_1, in_R8, in_R9);\n        }\n        arg1_01 = iVar4;\n        uVar2 = fcn.00447160(iVar4);\n        *(iVar3 + 0x10) = iVar4;\n        *(iVar3 + 0x18) = iVar4;\n        if (*0x626890 == 0) {\n            *(iVar3 + 8) = uVar2;\n            *in_RAX = iVar3;\n        }\n        else {\n            fcn.0045ea40(arg1_01, iVar4, in_R8, in_R9);\n            fcn.0045eb80(arg1_01, iVar4, in_R8, in_R9);\n        }\n        fcn.004594c0(noname_1);\n        fcn.00466700(arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 668
    },
    "00466f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00466f60(uint64_t arg1, ulong noname_1, code *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00466f60:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x38) = arg4;\n        *(*0x20 + 0x30) = arg3;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x80) = 0x466fc5;\n        iVar3 = fcn.0040a620(unaff_RDI);\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x4670ce;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x10));\n            return iVar3;\n        }\n        *(*0x20 + -0x80) = 0x466fea;\n        iVar3 = fcn.0040a620(*(*0x20 + 0x10));\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x4670ab;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x20));\n            return iVar3;\n        }\n        unaff_RBX = *(*0x20 + 0x28);\n        if (unaff_RBX == 0) {\n            if ((*(*0x20 + 0x18) == 0x4eeb18) && (iVar3 = *(*(*0x20 + 0x20) + 0x10),  iVar3 < 0x8000)) {\n                if (iVar3 < 1) {\n                    iVar3 = 1;\n                }\n            }\n            else {\n                iVar3 = 0x8000;\n            }\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x80) = 0x467077;\n            unaff_RBX = fcn.00447160(iVar3);\n            unaff_RDI = *(*0x20 + -0x50);\n            uVar5 = unaff_RDI;\n        }\n        else {\n            unaff_RDI = *(*0x20 + 0x38);\n            uVar5 = *(*0x20 + 0x30);\n        }\n        *(*0x20 + -0x20) = uVar5;\n        *(*0x20 + -0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = unaff_RDI;\n        iVar3 = 0;\n        do {\n            *(*0x20 + -0x30) = iVar3;\n            unaff_RSI = *(*0x20 + 0x18);\n            arg3 = *(unaff_RSI + 0x18);\n            *(*0x20 + -0x80) = 0x467112;\n            arg1 = (*arg3)();\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar5;\n            if (arg1 < 1) {\n                iVar3 = *(*0x20 + -0x30);\n            }\n            else {\n                if (*(*0x20 + -0x28) < arg1) goto code_r0x0046721d;\n                *(*0x20 + -0x48) = arg1;\n                pcVar1 = *(*(*0x20 + 8) + 0x18);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = 0x467164;\n                iVar4 = (*pcVar1)(arg1);\n                if (iVar4 < 0) {\n                    iVar6 = *(*0x20 + -0x48);\ncode_r0x0046717a:\n                    if (iVar7 == 0) {\n                        iVar7 = *0x5d2430;\n                    }\n                    iVar4 = 0;\n                }\n                else {\n                    iVar6 = *(*0x20 + -0x48);\n                    if (iVar6 < iVar4) goto code_r0x0046717a;\n                }\n                iVar3 = *(*0x20 + -0x30) + iVar4;\n                if (iVar7 != 0) {\n                    return iVar3;\n                }\n                if (iVar6 != iVar4) {\n                    return iVar3;\n                }\n                unaff_RBX = *(*0x20 + -0x40);\n            }\n            if (unaff_RBX != 0) {\n                if (*0x5d23d0 == unaff_RBX) {\n                    *(*0x20 + -0x38) = iVar3;\n                    *(*0x20 + -0x80) = 0x4671dc;\n                    cVar2 = fcn.00403780(*0x5d23d8);\n                    if (cVar2 == '\\0') {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                }\n                return iVar3;\n            }\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + -0x28);\n            uVar5 = *(*0x20 + -0x20);\n        } while( true );\n    }\n    goto code_r0x00467226;\ncode_r0x0046721d:\n    *(*0x20 + -0x80) = 0x467225;\n    in_RAX = fcn.0045ef60(arg1, *(*0x20 + -0x28));\ncode_r0x00467226:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = unaff_RDI;\n    *(puVar8 + 0x28) = unaff_RSI;\n    *(puVar8 + 0x30) = arg3;\n    *(puVar8 + 0x38) = arg4;\n    *(puVar8 + -8) = 0x46724e;\n    fcn.0045c800();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    unaff_RSI = *(puVar8 + 0x28);\n    arg3 = *(puVar8 + 0x30);\n    arg4 = *(puVar8 + 0x38);\n    *0x20 = puVar8;\n    goto code_r0x00466f60;\n}\n",
        "token_count": 1788
    },
    "00468160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00468160(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x46819b;\n            uVar1 = fcn.0046ae60();\n            iVar3 = *0x5d1c28;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x004681b6;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x004681b6:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x4681ea;\n                pcVar2 = fcn.00410a40(*(*0x20 + 8));\n                unaff_RBX = *0x5d25e0;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x468272;\n                    uVar1 = fcn.00461080();\n                    goto code_r0x00468272;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x468217;\n                fcn.0044ac00(*0x5d25e8);\n                *(*0x20 + -0xa8) = 0x46821c;\n                iVar3 = fcn.0046ae60();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x00468236;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x00468236:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x46824b;\n                    uVar1 = fcn.00461020();\ncode_r0x00468272:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x468288;\n                        uVar1 = fcn.0046afc0();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x4682a5;\n                        uVar1 = fcn.0040cc20();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x4682b7;\n                        uVar1 = fcn.0040a440();\n                        uVar5 = 0x4eec98;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x4eec98;\n                        if (*0x626890 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x4682e5;\n                            fcn.0045ea40(0x4eec98, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + 0x10);\n                        if (*0x626890 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x468319;\n                            fcn.0045eb60(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x4c8782;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x468349;\n                        uVar1 = fcn.0044ad80(0xf, puVar4, 0x4c8782, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4ca6ad;\n                        if (*0x626890 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x46836d;\n                            fcn.0045ea40(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x468397;\n                    puVar4 = fcn.0040cc20();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar4[1] = uVar1;\n                    if (*0x626890 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x4683c9;\n                        puVar4 = fcn.0045eb60(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x58);\n                    return puVar4;\n                }\n                *(*0x20 + -0xa8) = 0x468408;\n                fcn.0045eee0(0);\n            }\n            *(*0x20 + -0xa8) = 0x468412;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x468425;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1638
    },
    "00468440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00468440(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x4eec98;\n                    iVar4 = 0;\n                    goto code_r0x004684e9;\n                }\n            }\n            *(*0x20 + -0x98) = arg1 + 1;\n            *(*0x20 + -0xc0) = 0x4684c5;\n            iVar4 = fcn.00447000(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0x98);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x004684e9:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x00468500;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x00468500:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0xc0) = 0x468518;\n                iVar6 = iVar4;\n                uVar1 = fcn.004610c0();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x90) = iVar4;\n                    *(*0x20 + -0xc0) = 0x468536;\n                    uVar2 = fcn.0046afc0();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar4;\n                    *(*0x20 + -0xc0) = 0x46854c;\n                    uVar2 = fcn.0040cc20();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xc0) = 0x46855b;\n                    uVar2 = fcn.0040a440();\n                    uVar1 = 0x4eec98;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x4eec98;\n                    if (*0x626890 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x468585;\n                        fcn.0045ea40(0x4eec98, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar3[3] = uVar2;\n                    if (*0x626890 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xc0) = 0x4685b9;\n                        fcn.0045ebc0(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -200) = unaff_RBP;\n                    *(*0x20 + -0xc0) = 0x4685d1;\n                    fcn.0045f1ab();\n                    *(*0x20 + -0x68) = 0x4ca69e;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4ca2fa;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4c8782;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xc0) = 0x468671;\n                    uVar1 = fcn.0044a960(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x626890 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x468692;\n                        fcn.0045ea40(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar1;\n                *(*0x20 + -0xc0) = 0x4686bc;\n                puVar3 = fcn.0040cc20();\n                if (*0x626890 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x4686e5;\n                    puVar3 = fcn.0045eb60(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + 0x18);\n                if (*0x626890 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x468719;\n                    puVar3 = fcn.0045eb60(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x88);\n                return puVar3;\n            }\n            *(*0x20 + -0xc0) = 0x468758;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x46876d;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1859
    },
    "004687a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004687a0(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004658a0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x468900);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.00468160();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.004594c0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 349
    },
    "00468960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00468960(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004658a0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x468b20);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.004687a0();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.00468440(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.004594c0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 392
    },
    "00468ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00468ce0(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t arg1;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t arg1_01;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    iStack40 = 0;\n    iVar1 = fcn.0046d0c0();\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack56 = CONCAT88(iVar1, 0x468f80);\n    ppcStack16 = auStack56;\n    arg2 = fcn.00447160(0x32);\n    arg1 = 0;\n    uVar5 = 0;\n    arg1_01 = 0x32;\n    arg1_00 = 0;\n    do {\n        if (0xffffff < arg1) {\ncode_r0x00468f32:\n            fcn.0045eee0(0x1000000);\n            fcn.004329e0();\n            return iStack40;\n        }\n        uVar6 = arg1_00;\n        if (*(iVar1 + arg1 * 2) == 0) {\n            if (arg1 <= uVar5) {\n                auStack32 = CONCAT88(arg1_01, arg1_00);\n                iStack40 = arg2;\n                (**ppcStack16)();\n                return iStack40;\n            }\n            if (arg1 < uVar5) {\n                fcn.0045efa0(arg1);\n                goto code_r0x00468f32;\n            }\n            uVar2 = fcn.00467cc0(-(uVar5 - 0x1000000));\n            uVar3 = fcn.0044b3e0(arg1 - uVar5);\n            uVar6 = arg1_00 + 1;\n            if (arg1_01 < uVar6) {\n                arg1_01 = arg1_00;\n                iVar4 = fcn.00447240(arg1_00);\n                uVar6 = arg2 + 1;\n                arg2 = iVar4;\n            }\n            iVar4 = arg1_00 * 0x10;\n            *(arg2 + 8 + iVar4) = uVar2;\n            if (*0x626890 == 0) {\n                *(arg2 + iVar4) = uVar3;\n            }\n            else {\n                fcn.0045ea40(arg1_01, arg2, arg2 + iVar4, in_R9);\n            }\n            uVar5 = arg1 + 1;\n        }\n        arg1 = arg1 + 1;\n        arg1_00 = uVar6;\n    } while( true );\n}\n",
        "token_count": 730
    },
    "00469aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.00469aa0(int64_t param_1)\n\n{\n    char *pcVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    pcVar1 = fcn.00469960();\n    if (param_1 == 0) {\n        if (((2 < unaff_RBX) && ((*pcVar1 == '\\\\' || (*pcVar1 == '/')))) && ((pcVar1[1] == '\\\\' || (pcVar1[1] == '/'))))\n        {\n            return NULL;\n        }\n        return pcVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 183
    },
    "00469b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint8_t * fcn.00469b60(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    uint8_t *puVar3;\n    uint8_t *in_RDX;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                return NULL;\n            }\n            if (2 < unaff_RDI) {\n                uVar1 = *arg1;\n                in_RDX = uVar1;\n                if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                    uVar1 = arg1[1];\n                    in_RDX = uVar1;\n                    if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                        return arg1;\n                    }\n                }\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RDI < 2) || (arg1[1] != 0x3a)) {\n                *(*0x20 + -0xa8) = 0x469d25;\n                fcn.00469aa0();\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                cVar2 = **(*0x20 + 0x18);\n                if ((cVar2 != '\\\\') && (cVar2 != '/')) {\n                    *(*0x20 + -0xa8) = 0x469dac;\n                    fcn.0044aca0(unaff_RBX, in_RDX, *(*0x20 + 0x18), *(*0x20 + 0x20));\n                    *(*0x20 + -0xa8) = 0x469db1;\n                    puVar3 = fcn.00469960();\n                    return puVar3;\n                }\n                if (0x1 < unaff_RBX) {\n                    *(*0x20 + -0xa8) = 0x469d73;\n                    fcn.0044ac00(2);\n                    *(*0x20 + -0xa8) = 0x469d78;\n                    puVar3 = fcn.00469960();\n                    return puVar3;\n                }\n                *(*0x20 + -0xa8) = 0x469e05;\n                in_RDX = unaff_RBX;\n                fcn.0045ef20(2, unaff_RBX);\n            }\n            else {\n                if (unaff_RDI == 2) {\n                    return NULL;\n                }\n                if ((arg1[2] == 0x5c) || (arg1[2] == 0x2f)) {\n                    return arg1;\n                }\n                *(*0x20 + -0xa8) = 0x469c3d;\n                puVar3 = fcn.00469aa0();\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                in_RDX = *(*0x20 + 0x18);\n                uVar5 = *in_RDX;\n                if (uVar5 - 0x61 < 0x1a) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                if (unaff_RBX != NULL) {\n                    uVar6 = *puVar3;\n                    if (uVar6 - 0x61 < 0x1a) {\n                        uVar6 = uVar6 - 0x20;\n                    }\n                    if (uVar6 == uVar5) {\n                        *(*0x20 + -0xa8) = 0x469cb3;\n                        fcn.0044aca0(unaff_RBX, *(*0x20 + 0x20), in_RDX + 2, *(*0x20 + 0x20) + -2);\n                        *(*0x20 + -0xa8) = 0x469cb8;\n                        puVar3 = fcn.00469960();\n                        return puVar3;\n                    }\n                    *(*0x20 + -0xa8) = 0x469cd8;\n                    puVar3 = fcn.00469960();\n                    return puVar3;\n                }\n            }\n            *(*0x20 + -0xa8) = 0x469e0f;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x469e29;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1327
    },
    "0046b5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0046b5a0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint auStack32 [2];\n    ulong uStack24;\n    uint uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 2) {\n        uStack24 = 0;\n        auStack32[0] = 0x18;\n        uStack16 = 1;\n        iVar1 = fcn.0046c3c0(auStack32);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *in_RAX = 0;\n        in_RAX[1] = 0;\n        return 0;\n    }\n    return 0x4eec98;\n}\n",
        "token_count": 232
    },
    "00473fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00473fa0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *arg1;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t *piVar5;\n    uint64_t arg1_02;\n    uint64_t uVar6;\n    ulong arg4;\n    ulong arg3;\n    int64_t unaff_R14;\n    uint32_t uStack640;\n    uchar auStack592 [8];\n    uchar auStack584 [504];\n    int64_t iStack80;\n    uchar *puStack72;\n    ulong uStack64;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    ulong uStack16;\n    \n    while (auStack584 < *(unaff_R14 + 0x10) || auStack584 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack16 = 0;\n    iStack40 = 0;\n    fcn.0043f3c0();\n    uStack16 = 0x4d2840;\n    fcn.00447160(0);\n    iVar2 = fcn.0045f118();\n    uVar4 = 0x100;\n    piVar5 = NULL;\n    arg1_01 = 0;\n    arg1 = auStack592;\n    arg1_02 = 0;\n    do {\n        uStack640 = uVar4;\n        iStack80 = iVar2;\n        while( true ) {\n            arg1_00 = uVar4;\n            if (uVar4 == 0) goto code_r0x0047430d;\n            arg4 = 0;\n            arg3 = 0;\n            puStack72 = arg1;\n            iVar2 = fcn.0046bca0(arg1, arg1, 0, 0);\n            if (iVar2 == 0) break;\n            if (iVar2 == 0) {\ncode_r0x0047428c:\n                iStack40 = iStack80;\n                auStack32 = CONCAT88(arg1_01, arg1_02);\n                auStack56 = CONCAT88(piVar5, iVar2);\n                fcn.0043f440();\n                return iStack40;\n            }\n            if ((*(iVar2 + 8) != 0x4ba880) || (*piVar5 != 0xea)) {\n                if ((iVar2 != 0) && ((*(iVar2 + 8) == 0x4ba880 && (*piVar5 == 0x103)))) {\n                    iStack40 = iStack80;\n                    auStack32 = CONCAT88(arg1_01, arg1_02);\n                    fcn.0043f440();\n                    return iStack40;\n                }\n                goto code_r0x0047428c;\n            }\n            uVar4 = uVar4 << 1;\n            uStack640 = uVar4;\n            arg1 = fcn.00447160(uVar4 & 0xffffffff);\n            uVar4 = uVar4 & 0xffffffff;\n        }\n        arg1_00 = uStack640;\n        if (uVar4 < arg1_00) {\n            fcn.0045ef60(arg1_00, uVar4);\ncode_r0x0047430d:\n            fcn.0045eee0(arg1_00);\n            fcn.004329e0();\n            return iStack40;\n        }\n        uVar3 = fcn.0046af40(uVar4);\n        iVar1 = iStack80;\n        uVar6 = arg1_02 + 1;\n        iVar2 = iStack80;\n        if (arg1_01 < uVar6) {\n            arg1_01 = arg1_02;\n            uStack64 = uVar3;\n            iVar2 = fcn.00447240(arg1_02);\n            uVar6 = iVar1 + 1;\n            uVar3 = uStack64;\n        }\n        *(iVar2 + 8 + arg1_02 * 0x10) = arg1_00;\n        if (*0x626890 == 0) {\n            *(iVar2 + arg1_02 * 0x10) = uVar3;\n        }\n        else {\n            fcn.0045ea40(arg1_01, iVar2, arg3, arg4);\n        }\n        piVar5 = piVar5 + 1;\n        arg1 = puStack72;\n        arg1_02 = uVar6;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00474580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004745cf)\n// WARNING: Removing unreachable block (ram,0x0047461d)\n// WARNING: Removing unreachable block (ram,0x004745d9)\n// WARNING: Removing unreachable block (ram,0x00474608)\n// WARNING: Removing unreachable block (ram,0x004745de)\n// WARNING: Removing unreachable block (ram,0x004745ea)\n// WARNING: Removing unreachable block (ram,0x00474654)\n\nulong fcn.00474580(ulong arg1, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00474380(arg1, arg2, 0x40);\n    return 0;\n}\n",
        "token_count": 206
    },
    "004746a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004747a0)\n// WARNING: Removing unreachable block (ram,0x004747a9)\n// WARNING: Removing unreachable block (ram,0x004747b2)\n\nulong fcn.004746a0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *noname_1;\n    ulong arg1_00;\n    ulong uVar1;\n    int64_t iVar2;\n    uchar *arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg1_02;\n    uchar *unaff_RDI;\n    ulong *puVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x7e8 && *0x20 + -0x7e8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x868;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x828) = in_RAX;\n            *(*0x20 + -0x870) = 0x4746e5;\n            noname_1 = fcn.0046ae60();\n            if (unaff_RDI == NULL) {\n                unaff_RBX = arg1;\n                if (arg1 != 0) {\n                    unaff_RDI = NULL;\n                    goto code_r0x00474700;\n                }\n            }\n            else {\n                noname_1 = NULL;\ncode_r0x00474700:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = noname_1;\n                puVar4 = *0x20 + -0x820;\n                for (iVar2 = 0x100; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                *(*0x20 + -0x830) = 0;\n                arg1_01 = *0x20 + -0x820;\n                *(*0x20 + -0x870) = 0x47474d;\n                iVar2 = fcn.00474b40(arg1_01, noname_1, 0, 0);\n                if (((iVar2 != 0) && (*(iVar2 + 8) == 0x4ba880)) && (*noname_1 == 2)) {\n                    *(*0x20 + -0x870) = 0x474788;\n                    fcn.004749a0();\n                    if (arg1_01 != NULL) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x870) = 0x474796;\n                    fcn.0046ae60();\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                arg1_02 = 0x400;\n                unaff_RDI = *0x20 + -0x820;\n                while( true ) {\n                    uVar1 = 0x4ba880;\n                    if (((iVar2 == 0) || (*(iVar2 + 8) != 0x4ba880)) ||\n                       ((*noname_1 != 0xea || (*(*0x20 + -0x830) <= arg1_02)))) {\n                        if (iVar2 == 0) {\n                            *(*0x20 + -0x870) = 0x474930;\n                            uVar1 = fcn.0046af40(arg1_02);\n                            return uVar1;\n                        }\n                        return 0;\n                    }\n                    unaff_RBX = *(*0x20 + -0x830);\n                    *(*0x20 + -0x870) = 0x4748ea;\n                    arg1_00 = fcn.00447160(unaff_RBX);\n                    if (*(*0x20 + -0x830) == 0) break;\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x82c) = *(*0x20 + -0x830);\n                    noname_1 = *(*0x20 + -0x20);\n                    *(*0x20 + -0x870) = 0x474892;\n                    iVar2 = fcn.00474b40(arg1_00, uVar1, 0, *(*0x20 + -0x18));\n                    arg1_02 = *(*0x20 + -0x82c);\n                    unaff_RDI = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x870) = 0x47494b;\n                fcn.0045eee0(0);\n                *(*0x20 + -0x870) = 0x474955;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x870) = 0x47495f;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x474974;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1332
    },
    "0047a980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047a980(void)\n\n{\n    uchar uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x68) = 0x47a9a5;\n            iVar3 = fcn.0047a8c0();\n            uVar4 = *(iVar3 + 0x10);\n            arg1 = *(iVar3 + 0x18);\n            if (arg1 == 0) {\n                return 0x4c88c7;\n            }\n            uVar7 = unaff_RSI;\n            if (*(iVar3 + 0x60) == NULL) {\n                iVar11 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar11 = *(*0x20 + 0x10);\n                if ((*(iVar3 + 0x50) <= iVar11) && (uVar7 = *(iVar3 + 0x58),  iVar11 < *(iVar3 + 0x58))) {\n                    return **(iVar3 + 0x60);\n                }\n            }\n            unaff_RBX = *(iVar3 + 0x30);\n            piVar12 = *(iVar3 + 0x28);\n            if ((unaff_RBX == 0) || (*piVar12 != iVar11 && iVar11 <= *piVar12)) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x68) = 0x47aa28;\n                uVar9 = unaff_RBX;\n                uVar4 = fcn.0047ac20();\n                arg1 = *(*(*0x20 + -0x10) + 0x10);\n                unaff_RBX = *(*(*0x20 + -0x10) + 0x18);\n                if (uVar4 < unaff_RBX) {\n                    return *(uVar4 * 0x20 + arg1);\n                }\n                *(*0x20 + -0x68) = 0x47aac5;\n                uVar4 = unaff_RBX;\n                iVar3 = fcn.0045eee0(unaff_RBX);\n                uVar10 = unaff_R13;\n            }\n            else {\n                uVar7 = 0;\n                uVar9 = 0x7fffffffffffffff;\n                uVar10 = unaff_RBX;\n            }\n            while (uVar8 = uVar10,  arg1_00 = uVar9,  uVar9 = uVar8 - uVar7,  unaff_RSI = uVar7,  1 < uVar9) {\n                uVar10 = uVar9 / 2 + uVar7;\n                unaff_R13 = uVar9;\n                if (unaff_RBX <= uVar10) goto code_r0x0047abf0;\n                uVar9 = piVar12[uVar10 * 2];\n                unaff_R13 = uVar10;\n                if (piVar12[uVar10 * 2] <= iVar11) {\n                    uVar7 = uVar10;\n                    uVar9 = arg1_00;\n                    uVar10 = uVar8;\n                    unaff_R13 = uVar8;\n                }\n            }\n            if (uVar7 < unaff_RBX) {\n                unaff_RSI = uVar7 * 0x10;\n                if (*(piVar12 + uVar7 * 2 + 1) < arg1) {\n                    iVar13 = *(piVar12 + uVar7 * 2 + 1) * 0x20;\n                    uVar5 = *(iVar13 + uVar4);\n                    uVar2 = *(iVar13 + 8 + uVar4);\n                    iVar11 = piVar12[uVar7 * 2];\n                    uVar1 = *(iVar13 + 0x18 + uVar4);\n                    if ((uVar7 == unaff_RBX - 1) && (*(iVar3 + 0x48) != 0)) {\n                        *(*0x20 + -0x20) = *(iVar13 + 0x10 + uVar4);\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x30) = iVar11;\n                        *(*0x20 + -0x39) = uVar1;\n                        *(*0x20 + -0x38) = arg1_00;\n                        *(*0x20 + -0x68) = 0x47ab8e;\n                        uVar5 = fcn.0047ad00(arg1_00);\n                        if (uVar7 != '\\0') {\n                            return uVar5;\n                        }\n                        uVar5 = *(*0x20 + -0x18);\n                    }\n                    return uVar5;\n                }\n                *(*0x20 + -0x68) = 0x47abe5;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x68) = 0x47abf0;\n            fcn.0045eee0(unaff_RBX);\ncode_r0x0047abf0:\n            *(*0x20 + -0x68) = 0x47abfb;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x47ac0b;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1525
    },
    "0047ac20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0047ac20(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (*(in_RAX + 0x30) != 0) {\n        iVar5 = 0;\n        iVar4 = *(in_RAX + 0x28);\n        while( true ) {\n            if (*(iVar4 + 8) == '\\0') {\n                uVar2 = *(in_RAX + 0x18);\n                iVar4 = *(in_RAX + 0x10);\n                uVar3 = *(*(in_RAX + 0x28) + 8);\n                if (uVar2 <= uVar3) {\n                    fcn.0045eee0(uVar2);\n                    pcVar1 = swi(3);\n                    uVar2 = (*pcVar1)();\n                    return uVar2;\n                }\n                if (*(uVar3 * 0x20 + 0x18 + iVar4) != '\\0') {\n                    while (uVar3 = uVar3 - 1,  -1 < uVar3) {\n                        if (*(uVar3 * 0x20 + 0x18 + iVar4) == '\\0') {\n                            return uVar3;\n                        }\n                    }\n                }\n                uVar3 = 0;\n                while( true ) {\n                    if (uVar2 <= uVar3) {\n                        return 0;\n                    }\n                    if (*(uVar3 * 0x20 + 0x18 + iVar4) == '\\0') break;\n                    uVar3 = uVar3 + 1;\n                }\n                return uVar3;\n            }\n            iVar5 = iVar5 + 1;\n            if (*(in_RAX + 0x30) <= iVar5) break;\n            iVar4 = iVar4 + 0x10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "0047b5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0047b5a0(void)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    char *in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t arg1;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    char cVar11;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar11 = *in_RAX;\n            if (cVar11 == '+') {\n                uVar7 = unaff_RBX - 1;\n                in_RAX = in_RAX + (-uVar7 >> 0x3f & 1);\n                cVar11 = false;\n            }\n            else {\n                uVar7 = unaff_RBX;\n                if (cVar11 == '-') {\n                    uVar7 = unaff_RBX - 1;\n                    unaff_RBX = -uVar7 >> 0x3f & 1;\n                    in_RAX = in_RAX + unaff_RBX;\n                }\n                cVar11 = cVar11 == '-';\n            }\n            *(*0x20 + -0x79) = cVar11;\n            if (uVar7 == 0) {\n                iVar9 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                iVar10 = 0;\n            }\n            else {\n                *(*0x20 + -0x78) = uVar7;\n                *(*0x20 + -0x10) = in_RAX;\n                uVar4 = 0;\n                iVar10 = 0;\n                do {\n                    if (uVar7 <= uVar4) {\n                        if (iVar10 < 0) {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            iVar10 = 0;\n                        }\n                        else {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047b740;\n                    }\n                    uVar2 = in_RAX[uVar4];\n                    if (in_RAX[uVar4] < 0x80) {\n                        uVar5 = uVar4;\n                        arg1 = uVar7;\n                        uVar4 = uVar4 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = uVar4;\n                        *(*0x20 + -0x48) = iVar10;\n                        *(*0x20 + -0xa0) = 0x47b691;\n                        uVar2 = fcn.00458fa0(uVar4);\n                        uVar5 = *(*0x20 + -0x30);\n                        iVar10 = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x78);\n                        cVar11 = *(*0x20 + -0x79);\n                        in_RAX = *(*0x20 + -0x10);\n                        unaff_RBX = uVar7;\n                        uVar4 = uVar7;\n                    }\n                    if (9 < uVar2 - 0x30) {\n                        if ((uVar5 == 0) || (iVar10 < 0)) {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            iVar10 = 0;\n                        }\n                        else {\n                            if (arg1 < uVar5) goto code_r0x0047baed;\n                            iVar9 = arg1 - uVar5;\n                            pcVar6 = in_RAX + (uVar5 & -iVar9 >> 0x3f);\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047b740;\n                    }\n                    iVar10 = uVar2 + iVar10 * 10 + -0x30;\n                    uVar7 = arg1;\n                } while (iVar10 < 0xa9);\n                iVar9 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                iVar10 = 0;\n            }\ncode_r0x0047b740:\n            if (!bVar1) {\n                return 0;\n            }\n            iVar3 = iVar10 * 0xe10;\n            if ((iVar9 == 0) || (*pcVar6 != ':')) {\n                if (cVar11 != '\\0') {\n                    iVar3 = iVar10 * -0xe10;\n                }\n                return iVar3;\n            }\n            uVar7 = iVar9 - 1;\n            pcVar6 = pcVar6 + (-uVar7 >> 0x3f & 1);\n            if (iVar9 == 1) {\n                iVar10 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = iVar9;\n                *(*0x20 + -0x60) = iVar3;\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x18) = pcVar6;\n                uVar4 = 0;\n                arg1 = 0;\n                do {\n                    if (uVar7 <= uVar4) {\n                        if (arg1 < 0) {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            arg1 = 0;\n                        }\n                        else {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047b8e0;\n                    }\n                    uVar2 = pcVar6[uVar4];\n                    if (pcVar6[uVar4] < 0x80) {\n                        uVar5 = uVar7;\n                        unaff_RBX = uVar4;\n                        uVar4 = uVar4 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x38) = uVar4;\n                        *(*0x20 + -0x50) = arg1;\n                        *(*0x20 + -0xa0) = 0x47b82a;\n                        uVar2 = fcn.00458fa0(uVar4);\n                        uVar5 = *(*0x20 + -0x28);\n                        pcVar6 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x50);\n                        cVar11 = *(*0x20 + -0x79);\n                        iVar9 = *(*0x20 + -0x68);\n                        iVar3 = *(*0x20 + -0x60);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar4 = uVar7;\n                    }\n                    if (9 < uVar2 - 0x30) {\n                        if ((unaff_RBX == 0) || (arg1 < 0)) {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            arg1 = 0;\n                        }\n                        else {\n                            if (uVar5 < unaff_RBX) goto code_r0x0047bae5;\n                            iVar10 = (iVar9 - unaff_RBX) + -1;\n                            pcVar6 = pcVar6 + (unaff_RBX & -iVar10 >> 0x3f);\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047b8e0;\n                    }\n                    arg1 = (uVar2 + arg1 * 10) - 0x30;\n                    uVar7 = uVar5;\n                } while (arg1 < 0x3c);\n                iVar10 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                arg1 = 0;\n            }\ncode_r0x0047b8e0:\n            if (!bVar1) {\n                return 0;\n            }\n            iVar3 = iVar3 + arg1 * 0x3c;\n            if ((iVar10 == 0) || (*pcVar6 != ':')) {\n                if (cVar11 != '\\0') {\n                    iVar3 = -iVar3;\n                }\n                return iVar3;\n            }\n            uVar7 = iVar10 - 1;\n            pcVar6 = pcVar6 + (-uVar7 >> 0x3f & 1);\n            if (iVar10 == 1) {\n                bVar1 = false;\n                arg1 = 0;\n                goto code_r0x0047b982;\n            }\n            *(*0x20 + -0x60) = iVar3;\n            *(*0x20 + -0x70) = iVar10;\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0x20) = pcVar6;\n            uVar4 = 0;\n            arg1 = 0;\n            while( true ) {\n                if (uVar7 <= uVar4) {\n                    if (arg1 < 0) {\n                        bVar1 = false;\n                        arg1 = 0;\n                    }\n                    else {\n                        bVar1 = true;\n                    }\n                    goto code_r0x0047b982;\n                }\n                uVar2 = pcVar6[uVar4];\n                if (pcVar6[uVar4] < 0x80) {\n                    uVar5 = uVar7;\n                    unaff_RBX = uVar4;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x40) = uVar4;\n                    *(*0x20 + -0x58) = arg1;\n                    *(*0x20 + -0xa0) = 0x47ba0c;\n                    uVar2 = fcn.00458fa0(uVar4);\n                    uVar5 = *(*0x20 + -0x28);\n                    pcVar6 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x58);\n                    cVar11 = *(*0x20 + -0x79);\n                    iVar3 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + -0x40);\n                    uVar4 = uVar7;\n                }\n                if (9 < uVar2 - 0x30) break;\n                arg1 = (uVar2 + arg1 * 10) - 0x30;\n                uVar7 = uVar5;\n                if (0x3b < arg1) {\n                    bVar1 = false;\n                    arg1 = 0;\n                    goto code_r0x0047b982;\n                }\n            }\n            if ((unaff_RBX == 0) || (arg1 < 0)) {\n                bVar1 = false;\n                arg1 = 0;\n                goto code_r0x0047b982;\n            }\n            if (unaff_RBX <= uVar5) {\n                bVar1 = true;\ncode_r0x0047b982:\n                if (!bVar1) {\n                    return 0;\n                }\n                iVar10 = iVar3 + arg1;\n                if (cVar11 != '\\0') {\n                    iVar10 = -(iVar3 + arg1);\n                }\n                return iVar10;\n            }\n            *(*0x20 + -0xa0) = 0x47bae5;\n            fcn.0045efa0(uVar5);\ncode_r0x0047bae5:\n            *(*0x20 + -0xa0) = 0x47baed;\n            fcn.0045efa0(uVar5);\ncode_r0x0047baed:\n            *(*0x20 + -0xa0) = 0x47baf8;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x47bb08;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2847
    },
    "0047bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0047bb20(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *in_RAX;\n    char *pcVar4;\n    ulong uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    char *unaff_RDI;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x50) = in_XMM15;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            if (unaff_RBX == NULL) {\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x70) = in_XMM15;\n                *(*0x20 + -0x60) = in_XMM15;\n                return *(*0x20 + -0x78);\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*in_RAX != 'J') {\n                if (*in_RAX != 'M') {\n                    *(*0x20 + 8) = in_RAX;\n                    pcVar9 = NULL;\n                    pcVar12 = NULL;\n                    pcVar4 = unaff_RBX;\n                    break;\n                }\n                pcVar12 = unaff_RBX + -1;\n                pcVar4 = in_RAX + (-pcVar12 >> 0x3f & 1);\n                if (unaff_RBX != 0x1) {\n                    *(*0x20 + -0x80) = pcVar12;\n                    *(*0x20 + -0x18) = pcVar4;\n                    uVar11 = 0;\n                    pcVar9 = NULL;\n                    goto code_r0x0047bf4b;\n                }\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n                goto code_r0x0047c03b;\n            }\n            pcVar12 = unaff_RBX + -1;\n            pcVar4 = in_RAX + (-pcVar12 >> 0x3f & 1);\n            if (unaff_RBX == 0x1) {\n                cVar2 = '\\0';\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047c418;\n            }\n            *(*0x20 + -0x80) = pcVar12;\n            *(*0x20 + -0x10) = pcVar4;\n            pcVar9 = NULL;\n            pcVar6 = NULL;\n            while( true ) {\n                if (pcVar12 <= pcVar9) {\n                    if (pcVar6 < 1) {\n                        cVar2 = '\\0';\n                        pcVar6 = NULL;\n                        pcVar9 = NULL;\n                        unaff_RBX = NULL;\n                    }\n                    else {\n                        cVar2 = '\\x01';\n                        pcVar9 = NULL;\n                        unaff_RBX = NULL;\n                    }\n                    goto code_r0x0047c418;\n                }\n                uVar3 = pcVar9[pcVar4];\n                if (pcVar9[pcVar4] < 0x80) {\n                    pcVar7 = pcVar9;\n                    pcVar8 = pcVar12;\n                    pcVar9 = pcVar9 + 1;\n                }\n                else {\n                    *(*0x20 + -0x88) = pcVar9;\n                    *(*0x20 + -0xb8) = pcVar6;\n                    *(*0x20 + -0x110) = 0x47c4ba;\n                    uVar3 = fcn.00458fa0(pcVar9);\n                    pcVar7 = *(*0x20 + -0x88);\n                    pcVar8 = *(*0x20 + -0x80);\n                    pcVar6 = *(*0x20 + -0xb8);\n                    pcVar4 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    pcVar9 = pcVar12;\n                }\n                if (9 < uVar3 - 0x30) break;\n                pcVar6 = uVar3 + pcVar6 * 10 + -0x30;\n                pcVar12 = pcVar8;\n                if (0x16d < pcVar6) {\n                    cVar2 = '\\0';\n                    pcVar6 = NULL;\n                    pcVar9 = NULL;\n                    unaff_RBX = NULL;\n                    goto code_r0x0047c418;\n                }\n            }\n            if ((pcVar7 == NULL) || (pcVar6 < 1)) {\n                cVar2 = '\\0';\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047c418;\n            }\n            if (pcVar7 <= pcVar8) goto code_r0x0047c538;\n            *(*0x20 + -0x110) = 0x47c594;\n            in_RAX = fcn.0045efa0(pcVar8);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x47c5a5;\n        fcn.0045c800();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n    while (pcVar12 = uVar11 + pcVar12 * 10 + -0x30,  pcVar4 = unaff_RBX,  pcVar12 < 0x16e) {\n        if (pcVar4 <= pcVar9) {\n            if (pcVar12 < 0) {\n                bVar1 = false;\n                pcVar9 = NULL;\n                pcVar12 = NULL;\n                unaff_RBX = NULL;\n            }\n            else {\n                bVar1 = true;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n            }\n            goto code_r0x0047bd56;\n        }\n        uVar11 = pcVar9[in_RAX];\n        if (pcVar9[in_RAX] < 0x80) {\n            pcVar6 = pcVar9;\n            unaff_RBX = pcVar4;\n            pcVar9 = pcVar9 + 1;\n        }\n        else {\n            *(*0x20 + -0xa8) = pcVar9;\n            *(*0x20 + -0xd8) = pcVar12;\n            *(*0x20 + -0x110) = 0x47bcb1;\n            uVar3 = fcn.00458fa0(pcVar9);\n            pcVar6 = *(*0x20 + -0xa8);\n            pcVar12 = *(*0x20 + -0xd8);\n            uVar11 = uVar3;\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n            pcVar9 = pcVar4;\n        }\n        if (9 < uVar11 - 0x30U) {\n            if ((pcVar6 == NULL) || (pcVar12 < 0)) {\n                bVar1 = false;\n                pcVar9 = NULL;\n                pcVar12 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047bd56;\n            }\n            if (pcVar6 <= unaff_RBX) {\n                pcVar9 = unaff_RBX + -pcVar6;\n                unaff_RBX = in_RAX + (pcVar6 & -pcVar9 >> 0x3f);\n                bVar1 = true;\n                goto code_r0x0047bd56;\n            }\n            *(*0x20 + -0x110) = 0x47bf45;\n            pcVar4 = fcn.0045efa0(unaff_RBX);\n            goto code_r0x0047bf4b;\n        }\n    }\n    bVar1 = false;\n    pcVar9 = NULL;\n    pcVar12 = NULL;\n    unaff_RBX = NULL;\ncode_r0x0047bd56:\n    if (!bVar1) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 1;\n    *(*0x20 + -0x48) = pcVar12;\n    goto code_r0x0047bdb7;\ncode_r0x0047c366:\n    pcVar6 = uVar3 + pcVar6 * 10 + -0x30;\n    pcVar12 = pcVar8;\n    if (6 < pcVar6) goto code_r0x0047c37f;\n    goto code_r0x0047c2f6;\ncode_r0x0047c37f:\n    bVar1 = false;\n    pcVar6 = NULL;\n    pcVar9 = NULL;\n    unaff_RDI = NULL;\n    goto code_r0x0047c276;\ncode_r0x0047c538:\n    pcVar9 = unaff_RBX + (-1 - pcVar7);\n    unaff_RBX = pcVar4 + (pcVar7 & -pcVar9 >> 0x3f);\n    cVar2 = '\\x01';\ncode_r0x0047c418:\n    if (cVar2 == '\\0') {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 0;\n    *(*0x20 + -0x48) = pcVar6;\n    goto code_r0x0047bdb7;\n    while (uVar11 = (uVar3 + uVar11 * 10) - 0x30,  pcVar9 = pcVar12,  pcVar12 = pcVar6,  uVar11 < 0xd) {\ncode_r0x0047bf4b:\n        if (pcVar12 <= pcVar9) {\n            if (uVar11 < 1) {\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n            }\n            else {\n                pcVar12 = NULL;\n                bVar1 = true;\n                pcVar4 = NULL;\n            }\n            goto code_r0x0047c03b;\n        }\n        uVar3 = pcVar9[pcVar4];\n        if (pcVar9[pcVar4] < 0x80) {\n            pcVar6 = pcVar12;\n            pcVar12 = pcVar9 + 1;\n        }\n        else {\n            *(*0x20 + -0x90) = pcVar9;\n            *(*0x20 + -0xc0) = uVar11;\n            *(*0x20 + -0x110) = 0x47bf85;\n            uVar3 = fcn.00458fa0(pcVar9);\n            pcVar9 = *(*0x20 + -0x90);\n            pcVar6 = *(*0x20 + -0x80);\n            uVar11 = *(*0x20 + -0xc0);\n            pcVar4 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (9 < uVar3 - 0x30) {\n            if ((pcVar9 == NULL) || (uVar11 < 1)) {\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n            }\n            else {\n                if (pcVar6 < pcVar9) goto code_r0x0047c40d;\n                pcVar12 = unaff_RBX + (-1 - pcVar9);\n                pcVar4 = pcVar4 + (pcVar9 & -pcVar12 >> 0x3f);\n                bVar1 = true;\n            }\n            goto code_r0x0047c03b;\n        }\n    }\n    pcVar12 = NULL;\n    bVar1 = false;\n    pcVar4 = NULL;\n    uVar11 = 0;\ncode_r0x0047c03b:\n    if (((!bVar1) || (pcVar12 == NULL)) || (*pcVar4 != '.')) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0xb0) = uVar11;\n    pcVar9 = pcVar12 + -1;\n    pcVar4 = pcVar4 + (-pcVar9 >> 0x3f & 1);\n    if (pcVar12 == 0x1) {\n        unaff_RDI = NULL;\n        bVar1 = false;\n        pcVar4 = NULL;\n        unaff_RBX = NULL;\n    }\n    else {\n        *(*0x20 + -0x80) = pcVar9;\n        *(*0x20 + -0x20) = pcVar4;\n        *(*0x20 + -0xe0) = pcVar12;\n        pcVar7 = NULL;\n        unaff_RBX = NULL;\n        do {\n            if (pcVar9 <= pcVar7) {\n                if (unaff_RBX < 1) {\n                    unaff_RDI = NULL;\n                    bVar1 = false;\n                    pcVar4 = NULL;\n                    unaff_RBX = NULL;\n                }\n                else {\n                    unaff_RDI = NULL;\n                    bVar1 = true;\n                    pcVar4 = NULL;\n                }\n                goto code_r0x0047c1d2;\n            }\n            uVar3 = pcVar7[pcVar4];\n            if (pcVar7[pcVar4] < 0x80) {\n                pcVar8 = pcVar9;\n                pcVar6 = pcVar7;\n                pcVar7 = pcVar7 + 1;\n            }\n            else {\n                *(*0x20 + -0x98) = pcVar7;\n                *(*0x20 + -200) = unaff_RBX;\n                *(*0x20 + -0x110) = 0x47c112;\n                uVar3 = fcn.00458fa0(pcVar7);\n                pcVar8 = *(*0x20 + -0x80);\n                pcVar6 = *(*0x20 + -0x98);\n                uVar11 = *(*0x20 + -0xb0);\n                pcVar12 = *(*0x20 + -0xe0);\n                pcVar4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -200);\n                pcVar7 = pcVar9;\n            }\n            if (9 < uVar3 - 0x30) {\n                if ((pcVar6 == NULL) || (unaff_RBX < 1)) {\n                    unaff_RDI = NULL;\n                    bVar1 = false;\n                    pcVar4 = NULL;\n                    unaff_RBX = NULL;\n                }\n                else {\n                    if (pcVar8 < pcVar6) goto code_r0x0047c405;\n                    unaff_RDI = pcVar12 + (-1 - pcVar6);\n                    pcVar4 = pcVar4 + (pcVar6 & -unaff_RDI >> 0x3f);\n                    bVar1 = true;\n                }\n                goto code_r0x0047c1d2;\n            }\n            unaff_RBX = uVar3 + unaff_RBX * 10 + -0x30;\n            pcVar9 = pcVar8;\n        } while (unaff_RBX < 6);\n        unaff_RDI = NULL;\n        bVar1 = false;\n        pcVar4 = NULL;\n        unaff_RBX = NULL;\n    }\ncode_r0x0047c1d2:\n    if (((!bVar1) || (unaff_RDI == NULL)) || (*pcVar4 != '.')) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    pcVar12 = unaff_RDI + -1;\n    pcVar4 = pcVar4 + (-pcVar12 >> 0x3f & 1);\n    if (unaff_RDI != 0x1) {\n        *(*0x20 + -0xe8) = unaff_RDI;\n        *(*0x20 + -0xf0) = unaff_RBX;\n        *(*0x20 + -0x80) = pcVar12;\n        *(*0x20 + -0x28) = pcVar4;\n        pcVar9 = NULL;\n        pcVar6 = NULL;\ncode_r0x0047c2f6:\n        if (pcVar9 < pcVar12) {\n            uVar3 = pcVar9[pcVar4];\n            if (pcVar9[pcVar4] < 0x80) {\n                pcVar7 = pcVar9;\n                pcVar8 = pcVar12;\n                pcVar9 = pcVar9 + 1;\n            }\n            else {\n                *(*0x20 + -0xa0) = pcVar9;\n                *(*0x20 + -0xd0) = pcVar6;\n                *(*0x20 + -0x110) = 0x47c325;\n                uVar3 = fcn.00458fa0(pcVar9);\n                pcVar7 = *(*0x20 + -0xa0);\n                pcVar6 = *(*0x20 + -0xd0);\n                uVar11 = *(*0x20 + -0xb0);\n                pcVar8 = *(*0x20 + -0x80);\n                unaff_RDI = *(*0x20 + -0xe8);\n                pcVar4 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + -0xf0);\n                pcVar9 = pcVar12;\n            }\n            if (uVar3 - 0x30 < 10) goto code_r0x0047c366;\n            if ((pcVar7 == NULL) || (pcVar6 < 0)) {\n                bVar1 = false;\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RDI = NULL;\n            }\n            else {\n                if (pcVar8 < pcVar7) {\n                    *(*0x20 + -0x110) = 0x47c405;\n                    fcn.0045efa0(pcVar8);\ncode_r0x0047c405:\n                    *(*0x20 + -0x110) = 0x47c40d;\n                    fcn.0045efa0(pcVar8);\ncode_r0x0047c40d:\n                    *(*0x20 + -0x110) = 0x47c418;\n                    pcVar9 = pcVar6;\n                    cVar2 = fcn.0045efa0(pcVar6);\n                    goto code_r0x0047c418;\n                }\n                pcVar9 = unaff_RDI + (-1 - pcVar7);\n                unaff_RDI = pcVar4 + (pcVar7 & -pcVar9 >> 0x3f);\n                bVar1 = true;\n            }\n        }\n        else if (pcVar6 < 0) {\n            bVar1 = false;\n            pcVar6 = NULL;\n            pcVar9 = NULL;\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar1 = true;\n            pcVar9 = NULL;\n            unaff_RDI = NULL;\n        }\n        goto code_r0x0047c276;\n    }\n    bVar1 = false;\n    pcVar6 = NULL;\n    pcVar9 = NULL;\n    unaff_RDI = NULL;\ncode_r0x0047c276:\n    if (!bVar1) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 2;\n    *(*0x20 + -0x48) = pcVar6;\n    *(*0x20 + -0x40) = unaff_RBX;\n    *(*0x20 + -0x38) = uVar11;\n    unaff_RBX = unaff_RDI;\ncode_r0x0047bdb7:\n    if ((pcVar9 != NULL) && (*unaff_RBX == '/')) {\n        *(*0x20 + -0x110) = 0x47be65;\n        uVar5 = fcn.0047b5a0(pcVar9 + -1);\n        if (unaff_RDI == '\\0') {\n            *(*0x20 + -0x78) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            return *(*0x20 + -0x78);\n        }\n        *(*0x20 + -0x30) = uVar5;\n        *(*0x20 + -0x78) = *(*0x20 + -0x50);\n        *(*0x20 + -0x70) = *(*0x20 + -0x48);\n        *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n        *(*0x20 + -0x68) = *(*0x20 + -0x40);\n        *(*0x20 + -100) = *(*0x20 + -0x3c);\n        *(*0x20 + -0x60) = *(*0x20 + -0x38);\n        *(*0x20 + -0x5c) = *(*0x20 + -0x34);\n        *(*0x20 + -0x58) = *(*0x20 + -0x30);\n        *(*0x20 + -0x54) = *(*0x20 + -0x2c);\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x30) = 0x1c20;\n    *(*0x20 + -0x78) = *(*0x20 + -0x50);\n    *(*0x20 + -0x70) = *(*0x20 + -0x48);\n    *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n    *(*0x20 + -0x68) = *(*0x20 + -0x40);\n    *(*0x20 + -100) = *(*0x20 + -0x3c);\n    *(*0x20 + -0x60) = *(*0x20 + -0x38);\n    *(*0x20 + -0x5c) = *(*0x20 + -0x34);\n    *(*0x20 + -0x58) = *(*0x20 + -0x30);\n    *(*0x20 + -0x54) = *(*0x20 + -0x2c);\n    return *(*0x20 + -0x78);\n}\n",
        "token_count": 5523
    },
    "0047c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0047c5c0(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t iVar6;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    int64_t iStack0000000000000030;\n    \n    iVar4 = in_RAX >> 0x3f;\n    if (unaff_RBX == 0) {\n        iVar3 = arg1 * 0x15180;\n        if ((((in_RAX & 3) != 0) ||\n            ((in_RAX == ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 &&\n             (0xa3d70a3d70a3d6 <\n              (in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4))))) ||\n           (arg1 < 0x3c)) {\n            iVar3 = iVar3 + -0x15180;\n        }\n    }\n    else if (unaff_RBX == 1) {\n        iVar3 = arg1 * 0x15180;\n    }\n    else if (unaff_RBX == 2) {\n        uVar2 = in_RAX;\n        if (unaff_RSI < 3) {\n            uVar2 = in_RAX - 1;\n        }\n        iVar5 = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + uVar2 >> 6) - (uVar2 >> 0x3f);\n        iVar7 = uVar2 + iVar5 * -100;\n        iVar6 = (unaff_RSI +\n                ((unaff_RSI + SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RSI + 9) >> 0x40, 0) + 9 >> 3) -\n                (unaff_RSI + 9 >> 0x3f)) * -0xc) * 0x1a;\n        iVar3 = iVar6 + 0x102;\n        iVar5 = ((iVar6 + SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + 0x102 >> 3) -\n                (iVar3 >> 0x3f)) + iVar7 + (iVar7 + ((iVar7 >> 0x3f) >> 0x3e) >> 2) +\n                (((iVar5 >> 0x3f) >> 0x3e) + iVar5 >> 2) + iVar5 * -2;\n        iVar5 = iVar5 + ((iVar5 + 1) / 7) * -7;\n        iVar3 = iVar5 + 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar5 + 8;\n        }\n        arg1 = arg1 - iVar3;\n        if (arg1 < 0) {\n            arg1 = arg1 + 7;\n        }\n        for (iVar3 = 1; iStack0000000000000030 = arg3,  iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n            if (((unaff_RSI == 2) && ((in_RAX & 3) == 0)) &&\n               ((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                           100 ||\n                ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                 0xa3d70a3d70a3d7)))) {\n                iVar5 = 0x1d;\n            }\n            else {\n                if (0xc < unaff_RSI) goto code_r0x0047c967;\n                if (0xc < unaff_RSI - 1) goto code_r0x0047c95d;\n                iVar5 = *(unaff_RSI * 4 + 0x55de00) - *(unaff_RSI * 4 + 0x55ddfc);\n            }\n            if (iVar5 <= arg1 + 7) break;\n            arg1 = arg1 + 7;\n        }\n        if (0xc < unaff_RSI - 1) {\n            fcn.0045eee0(0xd);\ncode_r0x0047c95d:\n            fcn.0045eee0(0xd);\ncode_r0x0047c967:\n            fcn.0045eee0(0xd);\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        iVar5 = *(unaff_RSI * 4 + 0x55ddfc);\n        iVar3 = iVar5 + arg1;\n        if (((in_RAX & 3) == 0) &&\n           (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 ||\n             ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n              0xa3d70a3d70a3d7)) && (2 < unaff_RSI)))) {\n            iVar3 = arg1 + iVar5 + 1;\n        }\n        iVar3 = iVar3 * 0x15180;\n    }\n    else {\n        iVar3 = 0;\n    }\n    return (iVar3 + arg3) - arg4;\n}\n",
        "token_count": 1516
    },
    "0047cdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047ce50)\n// WARNING: Removing unreachable block (ram,0x0047ce9f)\n// WARNING: Removing unreachable block (ram,0x0047ce8a)\n// WARNING: Removing unreachable block (ram,0x0047ce93)\n// WARNING: Removing unreachable block (ram,0x0047d021)\n// WARNING: Removing unreachable block (ram,0x0047d074)\n// WARNING: Removing unreachable block (ram,0x0047d08f)\n// WARNING: Removing unreachable block (ram,0x0047d078)\n// WARNING: Removing unreachable block (ram,0x0047d08a)\n// WARNING: Removing unreachable block (ram,0x0047cf41)\n// WARNING: Removing unreachable block (ram,0x0047cfa3)\n// WARNING: Removing unreachable block (ram,0x0047cf99)\n// WARNING: Removing unreachable block (ram,0x0047cfb0)\n// WARNING: Removing unreachable block (ram,0x0047d012)\n\nulong fcn.0047cdc0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [48];\n    ulong uStack16;\n    \n    while (uVar1 = SUB168(in_XMM15, 0),  auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack16 = 0;\n    fcn.00473ea0(0x37);\n    return uVar1;\n}\n",
        "token_count": 373
    },
    "0047d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0047d560(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong arg1;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t unaff_RBX;\n    uint64_t noname_1;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        noname_1 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            noname_1 = *(unaff_RBX + 2);\n            uVar1 = *(unaff_RBX + 0xc);\n            arg1 = 1;\n            *(*0x20 + -0x68) = 0x47d5aa;\n            uVar4 = fcn.0047a360(1, noname_1, uVar1, 0);\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x18) = noname_1;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x47d5be;\n            iVar5 = fcn.00479f60(arg1);\n            iVar8 = *(*0x20 + 0x10);\n            iVar5 = *(iVar8 + 4) - iVar5;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 7;\n            }\n            if (*(iVar8 + 6) - 1 < 4) {\n                iVar8 = iVar5 + *(iVar8 + 6) * 7 + -6;\n                goto code_r0x0047d6bc;\n            }\n            uVar6 = *(iVar8 + 2);\n            if (((uVar6 == 2) && (uVar3 = *(*0x20 + 8),  (uVar3 & 3) == 0)) &&\n               ((uVar3 != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar3) >> 0x40, 0) + uVar3 >> 6) -\n                          (uVar3 >> 0x3f)) * 100 ||\n                (noname_1 = 0xa3d70a3d70a3d6, \n                (uVar3 * -0x70a3d70a3d70a3d7 << 0x3c | uVar3 * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                0xa3d70a3d70a3d7)))) {\n                iVar7 = 0x1d;\ncode_r0x0047d6ad:\n                iVar8 = iVar5 + 0x1d;\n                if (iVar7 < iVar5 + 0x1d) {\n                    iVar8 = iVar5 + 0x16;\n                }\ncode_r0x0047d6bc:\n                if (*(*0x20 + -0x20) < 0) {\n                    iVar5 = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                return iVar5 + (iVar8 + -1) * 0x15180 + -0xe7791f700;\n            }\n            if (uVar6 < 0xd) {\n                uVar2 = *(uVar6 * 4 + 0x55de00);\n                noname_1 = uVar2;\n                if (uVar6 - 1 < 0xd) {\n                    iVar7 = uVar2 - *(uVar6 * 4 + 0x55ddfc);\n                    goto code_r0x0047d6ad;\n                }\n                *(*0x20 + -0x68) = 0x47d712;\n                fcn.0045eee0(0xd);\n            }\n            *(*0x20 + -0x68) = 0x47d71f;\n            in_RAX = fcn.0045eee0(0xd);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = noname_1;\n        *(puVar9 + -8) = 0x47d72f;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1203
    },
    "0047d740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047d740(int32_t *arg1, ulong noname_1, int32_t *arg3)\n\n{\n    bool bVar1;\n    int32_t *arg1_00;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    ulong uVar7;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int32_t *piVar13;\n    int64_t unaff_RDI;\n    int32_t *in_R9;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5d29c8 = 5;\n            if (*0x626890 == 0) {\n                *0x5d29c0 = 0x4c8b1c;\n            }\n            else {\n                unaff_RDI = 0x5d29c0;\n                *(*0x20 + -0x98) = 0x47d79d;\n                in_RAX = fcn.0045eb60(arg1, 0x4c8b1c, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            uVar7 = 1;\n            if (*(in_RAX + 0x46) != 0) {\n                uVar7 = 2;\n            }\n            *(*0x20 + -0x58) = uVar7;\n            *(*0x20 + -0x98) = 0x47d7cc;\n            uVar4 = uVar7;\n            puVar2 = fcn.00447160(uVar7);\n            *0x5d29d8 = *(*0x20 + -0x58);\n            *0x5d29e0 = *0x5d29d8;\n            if (*0x626890 != 0) {\n                unaff_RDI = 0x5d29d0;\n                *(*0x20 + -0x98) = 0x47d7fd;\n                fcn.0045ea40(uVar4, *0x5d29d8, arg3, in_R9);\n                puVar2 = *0x5d29d0;\n            }\n            *0x5d29d0 = puVar2;\n            *(*0x20 + -0x98) = 0x47d80a;\n            uVar3 = fcn.0047d1c0();\n            puVar2 = *0x5d29d0;\n            arg1 = *0x5d29d8;\n            if (*0x5d29d8 != NULL) {\n                (*0x5d29d0)[1] = uVar7;\n                if (*0x626890 == 0) {\n                    *puVar2 = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x47d846;\n                    fcn.0045ea40(uVar4, puVar2, arg3, in_R9);\n                }\n                if (*(*0x20 + -0x58) == 1) {\n                    puVar2[2] = **(*0x20 + 8) * -0x3c;\n                    *0x5d2a10 = 0x8000000000000000;\n                    arg1 = 0x7fffffffffffffff;\n                    *0x5d2a18 = 0x7fffffffffffffff;\n                    puVar6 = puVar2;\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x98) = 0x47da4e;\n                        fcn.0045eb60(uVar4, puVar2, arg3, in_R9);\n                        puVar6 = *0x5d2a20;\n                    }\n                    *0x5d2a20 = puVar6;\n                    uVar7 = 1;\n                    *(*0x20 + -0x98) = 0x47da65;\n                    puVar6 = fcn.00447160(1);\n                    *0x5d29f0 = 0x1;\n                    *0x5d29f8 = 1;\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x98) = 0x47da99;\n                        fcn.0045ea40(uVar7, puVar2, arg3, in_R9);\n                        puVar6 = *0x5d29e8;\n                    }\n                    *0x5d29e8 = puVar6;\n                    **0x5d29e8 = *0x5d2a10;\n                    if (*0x5d29f0 == NULL) {\n                        *(*0x20 + -0x98) = 0x47dad8;\n                        puVar2 = *0x5d29e8;\n                        iVar5 = fcn.0045eee0(0);\n                        goto code_r0x0047dad8;\n                    }\n                    *(*0x5d29e8 + 1) = 0;\n                    return;\n                }\n                arg1 = *(*0x20 + 8);\n                puVar2[2] = (arg1[0x15] + *arg1) * -0x3c;\n                puVar2 = *0x5d29d0;\n                arg3 = *0x5d29d8;\n                if (0x1 < *0x5d29d8) {\n                    (*0x5d29d0)[5] = unaff_RDI;\n                    if (*0x626890 == 0) {\n                        puVar2[4] = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x98) = 0x47d8a6;\n                        fcn.0045eb40();\n                    }\n                    puVar2[6] = (arg1[0x2a] + *arg1) * -0x3c;\n                    *(puVar2 + 7) = 1;\n                    *(*0x20 + -0x72) = *(arg1 + 0x46);\n                    *(*0x20 + -0x74) = *(arg1 + 0x9a);\n                    uVar7 = 400;\n                    *(*0x20 + -0x98) = 0x47d8e6;\n                    puVar2 = fcn.00447160(400);\n                    *0x5d29f0 = 0x190;\n                    *0x5d29f8 = 400;\n                    iVar5 = *(*0x20 + 8) + 0x44;\n                    iVar10 = *(*0x20 + 8) + 0x98;\n                    uVar9 = *(*0x20 + -0x72);\n                    iVar12 = iVar5;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar12 = iVar10;\n                    }\n                    *(*0x20 + -0x30) = iVar12;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar10 = iVar5;\n                    }\n                    *(*0x20 + -0x38) = iVar10;\n                    if (*0x626890 != 0) {\n                        *(*0x20 + -0x98) = 0x47d951;\n                        fcn.0045ea40(uVar7, iVar10, uVar9, iVar5);\n                        puVar2 = *0x5d29e8;\n                    }\n                    *0x5d29e8 = puVar2;\n                    *(*0x20 + -0x98) = 0x47d956;\n                    uVar4 = fcn.0047a2c0(uVar7);\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x18) = 400;\n                    *(*0x20 + -0x10) = uVar7;\n                    if (*(*0x20 + -0x20) < 0) {\n                        *(*0x20 + -0x18) = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = *(*0x20 + -0x20) & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x98) = 0x47d9b5;\n                    iVar5 = fcn.00479f00(0);\n                    *(*0x20 + -0x70) = iVar5;\n                    bVar14 = *(*0x20 + -0x74) < *(*0x20 + -0x72);\n                    uVar9 = *(*0x20 + -0x74) & 0xff00 | bVar14;\n                    *(*0x20 + -0x75) = bVar14;\n                    bVar1 = !bVar14;\n                    piVar13 = *(*0x20 + -0x72) & 0xff00 | bVar1;\n                    *(*0x20 + -0x76) = bVar1;\n                    unaff_RDI = iVar5 + -100;\n                    arg3 = bVar1;\n                    *(*0x20 + -0x50) = arg3;\n                    *(*0x20 + -0x48) = bVar14;\n                    piVar8 = NULL;\n                    in_R9 = bVar14;\n                    while( true ) {\n                        arg1_00 = *0x5d29f0;\n                        if (iVar5 + 100 <= unaff_RDI) {\n                            return;\n                        }\n                        arg1 = piVar13;\n                        if (*0x5d29f0 <= piVar8) goto code_r0x0047dc32;\n                        *(*0x20 + -0x28) = *0x5d29e8;\n                        *(*0x20 + -0x68) = unaff_RDI;\n                        *(*0x20 + -0x60) = piVar8;\n                        *(*0x20 + -0x98) = 0x47db65;\n                        iVar5 = fcn.0047d560(piVar8, uVar9);\n                        arg1 = *(*0x20 + -0x50);\n                        piVar8 = *0x5d29d8;\n                        if (*0x5d29d8 <= arg1) goto code_r0x0047dc2a;\n                        arg3 = *(*0x20 + -0x60);\n                        unaff_RDI = arg3 * 0x10;\n                        iVar10 = *(*0x20 + -0x28);\n                        *(iVar10 + unaff_RDI) = iVar5 - (*0x5d29d0)[arg1 * 4 + 2];\n                        arg1 = *(*0x20 + -0x75);\n                        *(iVar10 + 8 + unaff_RDI) = *(*0x20 + -0x75);\n                        piVar8 = *0x5d29f0;\n                        if (*0x5d29f0 <= arg3 + 1U) goto code_r0x0047dc25;\n                        *(*0x20 + -0x28) = *0x5d29e8;\n                        *(*0x20 + -0x40) = arg3 + 1U;\n                        *(*0x20 + -0x98) = 0x47dbe5;\n                        iVar5 = fcn.0047d560();\n                        arg1 = *(*0x20 + -0x48);\n                        puVar2 = *0x5d29d0;\n                        if (*0x5d29d8 <= arg1) break;\ncode_r0x0047dad8:\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar12 = *(*0x20 + -0x28);\n                        *(iVar12 + iVar10 * 0x10) = iVar5 - puVar2[arg1 * 4 + 2];\n                        piVar13 = *(*0x20 + -0x76);\n                        *(iVar12 + 8 + iVar10 * 0x10) = *(*0x20 + -0x76);\n                        unaff_RDI = *(*0x20 + -0x68) + 1;\n                        piVar8 = *(*0x20 + -0x60) + 2;\n                        iVar5 = *(*0x20 + -0x70);\n                        uVar9 = *(*0x20 + -0x75);\n                        arg3 = *(*0x20 + -0x50);\n                        in_R9 = arg1;\n                    }\n                    *(*0x20 + -0x98) = 0x47dc25;\n                    piVar8 = *0x5d29d8;\n                    fcn.0045eee0(*0x5d29d8);\ncode_r0x0047dc25:\n                    *(*0x20 + -0x98) = 0x47dc2a;\n                    fcn.0045eee0(piVar8);\ncode_r0x0047dc2a:\n                    *(*0x20 + -0x98) = 0x47dc32;\n                    fcn.0045eee0(piVar8);\ncode_r0x0047dc32:\n                    *(*0x20 + -0x98) = 0x47dc3d;\n                    fcn.0045eee0(arg1_00);\n                }\n                *(*0x20 + -0x98) = 0x47dc4a;\n                fcn.0045eee0(arg3);\n            }\n            *(*0x20 + -0x98) = 0x47dc54;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x47dc5f;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 3250
    },
    "0047f080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047f080(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RSI;\n    uint64_t uVar3;\n    uint64_t unaff_RDI;\n    int64_t arg1_00;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI - arg1 == 1) {\n        while (uVar2 = unaff_RSI,  unaff_RDI < uVar2) {\n            uStack24 = unaff_RDI + uVar2 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            unaff_RSI = uStack24;\n            if (cVar1 != '\\0') {\n                unaff_RDI = uStack24 + 1;\n                unaff_RSI = uVar2;\n            }\n        }\n        while (arg1 < unaff_RDI - 1) {\n            uStack16 = arg1 + 1;\n            (**(in_RAX + 0x28))(uStack16);\n            arg1 = uStack16;\n        }\n        return;\n    }\n    uStack16 = unaff_RDI;\n    if (unaff_RSI - unaff_RDI != 1) {\n        uStack24 = unaff_RSI + arg1 >> 1;\n        iVar4 = unaff_RDI + uStack24;\n        uVar2 = unaff_RDI;\n        arg1_00 = arg1;\n        if (uStack24 < unaff_RDI) {\n            uVar2 = uStack24;\n            arg1_00 = iVar4 - unaff_RSI;\n        }\n        while (uVar3 = uVar2,  arg1_00 < uVar3) {\n            uVar2 = arg1_00 + uVar3 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 == '\\0') {\n                arg1_00 = uVar2 + 1;\n                uVar2 = uVar3;\n            }\n        }\n        iVar4 = iVar4 - arg1_00;\n        if ((arg1_00 < uStack16) && (uStack16 < iVar4)) {\n            fcn.0047f420(arg1_00);\n        }\n        if ((arg1 < arg1_00) && (arg1_00 < uStack24)) {\n            fcn.0047f080(arg1);\n        }\n        if ((uStack24 < iVar4) && (iVar4 < unaff_RSI)) {\n            fcn.0047f080(uStack24);\n        }\n        return;\n    }\n    while (uVar2 = unaff_RDI,  arg1 < uVar2) {\n        uStack24 = arg1 + uVar2 >> 1;\n        cVar1 = (**(in_RAX + 0x20))(uStack24);\n        unaff_RDI = uStack24;\n        if (cVar1 == '\\0') {\n            arg1 = uStack24 + 1;\n            unaff_RDI = uVar2;\n        }\n    }\n    for (; arg1 < uStack16; uStack16 = uStack16 - 1) {\n        (**(in_RAX + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "00480120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00480120(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 800) != 0) {\n        if (unaff_RBX < 1) {\n            if (unaff_RBX < 0) {\n                for (; unaff_RBX < -0x3c; unaff_RBX = unaff_RBX + 0x3c) {\n                    fcn.0047fd00();\n                }\n                fcn.0047fd00();\n            }\n        }\n        else {\n            for (; 0x3c < unaff_RBX; unaff_RBX = unaff_RBX + -0x3c) {\n                fcn.0047ff00();\n            }\n            fcn.0047ff00();\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004801e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004801e0(void)\n\n{\n    code *pcVar1;\n    uchar *in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    bool bVar3;\n    \n    if ((unaff_RBX < 0) || (*(in_RAX + 800) <= unaff_RBX)) {\n        return;\n    }\n    if (799 < unaff_RBX) {\n        fcn.0045eee0(800);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((in_RAX[unaff_RBX] == 0x35) && (*(in_RAX + 800) == unaff_RBX + 1)) {\n        if (in_RAX[0x331] != '\\0') goto code_r0x00480251;\n        if (unaff_RBX < 1) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = in_RAX[unaff_RBX - 1] - 0x30 & 1;\n        }\n    }\n    else {\n        bVar3 = 0x34 < in_RAX[unaff_RBX];\n    }\n    if (bVar3 == false) {\n        *(in_RAX + 800) = unaff_RBX;\n        while (iVar2 = *(in_RAX + 800),  0 < iVar2) {\n            if (799 < iVar2 - 1U) {\n                iVar2 = 800;\n                in_RAX = fcn.0045eee0(800);\n                goto code_r0x004802be;\n            }\n            if (in_RAX[iVar2 + -1] != '0') break;\n            *(in_RAX + 800) = iVar2 - 1U;\n        }\n        if (iVar2 != 0) {\n            return;\n        }\n        *(in_RAX + 0x328) = 0;\n        return;\n    }\ncode_r0x00480251:\n    iVar2 = unaff_RBX - 1;\n    while( true ) {\n        if (iVar2 < 0) {\n            *in_RAX = 0x31;\n            *(in_RAX + 800) = 1;\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + 1;\n            return;\n        }\n        if (in_RAX[iVar2] < 0x39) break;\ncode_r0x004802be:\n        iVar2 = iVar2 + -1;\n    }\n    in_RAX[iVar2] = in_RAX[iVar2] + 1;\n    *(in_RAX + 800) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 595
    },
    "00480320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00480320(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint8_t uVar6;\n    uint32_t unaff_EDI;\n    uint64_t *arg4;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    bool bVar12;\n    uint in_XMM0_Da;\n    uint extraout_XMM0_Da;\n    uint in_XMM0_Db;\n    uint extraout_XMM0_Db;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar6 = unaff_EDI;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == 0x20) {\n                uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n                arg4 = 0x55c9a0;\n                goto code_r0x0048037f;\n            }\n            if (arg3 == 0x40) break;\n            unaff_RBX = 0x4ee9b0;\n            *(*0x20 + -0x138) = 0x4809bd;\n            in_RAX = fcn.00433560();\n            in_XMM0_Da = extraout_XMM0_Da;\n            in_XMM0_Db = extraout_XMM0_Db;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        puVar5[0x28] = uVar6;\n        *(puVar5 + 0x30) = unaff_RSI;\n        *(puVar5 + 0x38) = arg3;\n        *(puVar5 + -8) = 0x4809e7;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        in_XMM0_Da = *(puVar5 + 0x20);\n        in_XMM0_Db = *(puVar5 + 0x20) >> 0x20;\n        unaff_EDI = puVar5[0x28];\n        unaff_RSI = *(puVar5 + 0x30);\n        arg3 = *(puVar5 + 0x38);\n        *0x20 = puVar5;\n    } while( true );\n    uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    arg4 = 0x55c9c0;\ncode_r0x0048037f:\n    *(*0x20 + -0xa8) = uVar10;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    uVar8 = *arg4;\n    uVar1 = arg4[1];\n    uVar4 = -(uVar1 + uVar8 < 0x40);\n    *(*0x20 + -0x90) = -(uVar1 < 0x40);\n    *(*0x20 + -0x98) = -(uVar8 < 0x40);\n    uVar7 = uVar10 >> (uVar1 + uVar8 & 0x3f);\n    uVar1 = (*(*0x20 + -0x90) & 1 << (uVar1 & 0x3f)) - 1;\n    uVar11 = uVar10 >> (uVar8 & 0x3f) & -(uVar8 < 0x40) & uVar1;\n    uVar8 = 1 << (uVar8 & 0x3f) & *(*0x20 + -0x98);\n    uVar10 = uVar8 - 1 & *(*0x20 + -0xa8);\n    if (uVar11 == uVar1) {\n        if (uVar10 == 0) {\n            if ((uVar4 & uVar7) == 0) {\n                iVar2 = 4;\n                uVar3 = 0x4c8949;\n            }\n            else {\n                iVar2 = 4;\n                uVar3 = 0x4c894d;\n            }\n        }\n        else {\n            iVar2 = 3;\n            uVar3 = 0x4c88b2;\n        }\n        *(*0x20 + -0x90) = unaff_RBX + iVar2;\n        uVar10 = *(*0x20 + 0x18);\n        if (*(*0x20 + 0x18) < unaff_RBX + iVar2) {\n            *(*0x20 + -200) = iVar2;\n            *(*0x20 + -0x50) = uVar3;\n            *(*0x20 + -0x138) = 0x48049d;\n            in_RAX = fcn.00447240(unaff_RBX);\n            iVar2 = *(*0x20 + -200);\n            uVar10 = unaff_RBX;\n        }\n        *(*0x20 + -0xa0) = uVar10;\n        *(*0x20 + -0x40) = in_RAX;\n        *(*0x20 + -0x138) = 0x4804d4;\n        fcn.0045f840(iVar2);\n        return *(*0x20 + -0x40);\n    }\n    if (uVar11 == 0) {\n        uVar11 = 1;\n    }\n    else {\n        uVar10 = uVar10 | uVar8;\n    }\n    bVar12 = (uVar4 & uVar7) != 0;\n    uVar8 = bVar12;\n    uVar4 = uVar1 & 0xffffffffffffff00 | uVar8;\n    iVar2 = uVar11 + arg4[2];\n    if (uVar6 == 0x62) {\n        *(*0x20 + -0x138) = 0x48099a;\n        uVar3 = fcn.00481e80(*(*0x20 + 0x18), uVar4, iVar2, arg4);\n        return uVar3;\n    }\n    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n        *(*0x20 + -0x138) = 0x480556;\n        uVar3 = fcn.00482040(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    if (*0x55c281 == '\\0') {\n        *(*0x20 + -0x138) = 0x480975;\n        uVar3 = fcn.00480a20(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xc9) = bVar12;\n    *(*0x20 + 0x30) = unaff_RSI;\n    *(*0x20 + 0x28) = uVar6;\n    *(*0x20 + -0x38) = in_XMM15;\n    *(*0x20 + -0x28) = in_XMM15;\n    *(*0x20 + -0x18) = in_XMM15;\n    if (-1 < unaff_RSI) {\n        if (uVar6 == 0x66) {\n            bVar12 = false;\n        }\n        else {\n            iVar9 = unaff_RSI;\n            if (uVar6 < 0x48) {\n                if (uVar6 == 0x45) {\ncode_r0x004805e6:\n                    iVar9 = unaff_RSI + 1;\n                }\n                else if (uVar6 == 0x47) {\ncode_r0x004805fc:\n                    if (unaff_RSI == 0) {\n                        unaff_RSI = 1;\n                        iVar9 = unaff_RSI;\n                    }\n                }\n            }\n            else {\n                if (uVar6 == 0x65) goto code_r0x004805e6;\n                if (uVar6 == 0x67) goto code_r0x004805fc;\n            }\n            *(*0x20 + -0x48) = arg4;\n            *(*0x20 + -0xb8) = iVar2;\n            *(*0x20 + -0xc0) = uVar10;\n            *(*0x20 + -0x90) = unaff_RSI;\n            *(*0x20 + -0x88) = in_XMM15;\n            *(*0x20 + -0x80) = in_XMM15;\n            if ((arg3 == 0x20) && (iVar9 < 10)) {\n                *(*0x20 + -0x38) = *0x20 + -0x88;\n                *(*0x20 + -0x30) = 0x18;\n                *(*0x20 + -0x28) = 0x18;\n                uVar10 = *arg4;\n                *(*0x20 + -0x138) = 0x48069c;\n                fcn.00482800(iVar2 - uVar10, uVar10, 0x20);\n                uVar4 = *(*0x20 + -0xc9);\n                unaff_RSI = *(*0x20 + -0x90);\n                unaff_EDI = *(*0x20 + 0x28);\n                uVar10 = *(*0x20 + -0xc0);\n                bVar12 = true;\n            }\n            else {\n                if (iVar9 < 0x13) {\n                    *(*0x20 + -0xb0) = iVar9;\n                    *(*0x20 + -0x38) = *0x20 + -0x88;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x28) = 0x18;\n                    uVar10 = *arg4;\n                    *(*0x20 + -0x138) = 0x48073c;\n                    fcn.00482aa0(iVar2 - uVar10, uVar10, arg3);\n                    iVar9 = *(*0x20 + -0xb0);\n                    uVar4 = *(*0x20 + -0xc9);\n                    unaff_RSI = *(*0x20 + -0x90);\n                    unaff_EDI = *(*0x20 + 0x28);\n                    uVar10 = *(*0x20 + -0xc0);\n                }\n                bVar12 = iVar9 < 0x13;\n            }\n        }\n        if (!bVar12) {\n            *(*0x20 + -0x138) = 0x4807c5;\n            uVar3 = fcn.00480a20(*(*0x20 + 0x18), unaff_EDI, uVar4 & 0xffffffff, uVar10);\n            return uVar3;\n        }\n        goto code_r0x00480903;\n    }\n    *(*0x20 + -0x70) = in_XMM15;\n    *(*0x20 + -0x60) = in_XMM15;\n    *(*0x20 + -0x38) = *0x20 + -0x70;\n    *(*0x20 + -0x30) = 0x20;\n    *(*0x20 + -0x28) = 0x20;\n    uVar10 = *arg4;\n    *(*0x20 + -0x138) = 0x48082b;\n    fcn.00483020(iVar2 - uVar10, uVar10);\n    uVar6 = *(*0x20 + 0x28);\n    if (uVar6 < 0x48) {\n        if (uVar6 == 0x45) {\ncode_r0x0048086f:\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) + -1) {\n                unaff_RSI = *(*0x20 + -0x20) + -1;\n            }\n        }\n        else if (uVar6 == 0x47) {\ncode_r0x004808d3:\n            unaff_RSI = *(*0x20 + -0x20);\n        }\n        else {\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    else {\n        if (uVar6 == 0x65) goto code_r0x0048086f;\n        if (uVar6 == 0x66) {\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) - *(*0x20 + -0x18)) {\n                unaff_RSI = *(*0x20 + -0x20) - *(*0x20 + -0x18);\n            }\n        }\n        else {\n            if (uVar6 == 0x67) goto code_r0x004808d3;\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    uVar4 = *(*0x20 + -0xc9);\ncode_r0x00480903:\n    *(*0x20 + -0x130) = *(*0x20 + -0x38);\n    *(*0x20 + -300) = *(*0x20 + -0x34);\n    *(*0x20 + -0x128) = *(*0x20 + -0x30);\n    *(*0x20 + -0x124) = *(*0x20 + -0x2c);\n    *(*0x20 + -0x120) = *(*0x20 + -0x28);\n    *(*0x20 + -0x11c) = *(*0x20 + -0x24);\n    *(*0x20 + -0x118) = *(*0x20 + -0x20);\n    *(*0x20 + -0x114) = *(*0x20 + -0x1c);\n    *(*0x20 + -0x110) = *(*0x20 + -0x18);\n    *(*0x20 + -0x10c) = *(*0x20 + -0x14);\n    *(*0x20 + -0x108) = *(*0x20 + -0x10);\n    *(*0x20 + -0x104) = *(*0x20 + -0xc);\n    *(*0x20 + -0x138) = 0x480945;\n    uVar3 = fcn.00480e40(*(*0x20 + 0x18), uVar4, unaff_RSI);\n    return uVar3;\n}\n",
        "token_count": 3520
    },
    "004810c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004810c0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    ulong unaff_RBP;\n    int64_t iVar10;\n    int64_t *unaff_RDI;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uint8_t uVar14;\n    bool bVar15;\n    uchar in_XMM15 [16];\n    \ncode_r0x004810c0:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x618 && *0x20 + -0x618 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x698;\n        *(*0x20 + -8) = unaff_RBP;\n        if (unaff_RBX == 0) {\n            *(in_RAX + 800) = 0;\n            return;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        iVar7 = unaff_RDI[2];\n        *(*0x20 + -0x688) = iVar7 + 1;\n        if ((iVar7 + 1 < arg1) &&\n           (iVar10 = *(in_RAX + 0x328) - *(in_RAX + 800),  iVar5 = (arg1 - *unaff_RDI) * 100, \n           iVar7 = iVar5 + iVar10 * -0x14c,  iVar7 == 0 || SBORROW8(iVar5, iVar10 * 0x14c) != iVar7 < 0)) {\n            return;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x340) = in_XMM15;\n        *(*0x20 + -0x6a8) = *0x20 + -8;\n        *(*0x20 + -0x6a0) = 0x48117b;\n        fcn.0045f0a9();\n        uVar2 = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x481197;\n        fcn.0047fbc0(unaff_RBX * 2 + 1);\n        *(*0x20 + -0x6a0) = 0x4811be;\n        fcn.00480120();\n        if ((1 << (**(*0x20 + 0x20) & 0x3f) & -(**(*0x20 + 0x20) < 0x40)) < *(*0x20 + 0x10)) {\n            iVar7 = *(*0x20 + 0x18);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x18);\n            if (iVar7 != *(*0x20 + -0x688)) {\n                iVar7 = iVar7 + -1;\n            }\n        }\n        *(*0x20 + -0x680) = iVar7;\n        *(*0x20 + -0x678) = in_XMM15;\n        *(*0x20 + -0x6a8) = uVar2;\n        *(*0x20 + -0x6a0) = 0x48124f;\n        fcn.0045f0a9();\n        unaff_RBP = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x481265;\n        fcn.0047fbc0();\n        iVar7 = *(*0x20 + -0x680);\n        iVar5 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x481285;\n        fcn.00480120();\n        puVar3 = *(*0x20 + 8);\n        unaff_RDI = NULL;\n        uVar6 = 0;\n        unaff_RBX = (iVar7 - iVar5) - 1;\n        do {\n            iVar7 = *(*0x20 + -0x18);\n            iVar5 = *(puVar3 + 0x328);\n            uVar8 = unaff_RDI + (iVar5 - iVar7);\n            iVar10 = *(puVar3 + 800);\n            if (iVar10 <= uVar8) {\n                return;\n            }\n            uVar1 = unaff_RDI + (*(*0x20 + -0x350) - iVar7);\n            if ((uVar1 < 0) || (*(*0x20 + -0x358) == uVar1 || *(*0x20 + -0x358) < uVar1)) {\n                uVar11 = 0x30;\n            }\n            else {\n                if (799 < uVar1) goto code_r0x0048157f;\n                uVar11 = *(*0x20 + (uVar1 - 0x678));\n            }\n            if (uVar8 < 0) {\n                uVar13 = 0x30;\n            }\n            else {\n                if (799 < uVar8) goto code_r0x00481572;\n                uVar13 = puVar3[uVar8];\n            }\n            if (unaff_RDI < *(*0x20 + -0x20)) {\n                if (0x31f < unaff_RDI) goto code_r0x00481565;\n                uVar14 = (*0x20 + -0x340)[unaff_RDI];\n            }\n            else {\n                uVar14 = 0x30;\n            }\n            if (uVar11 == uVar13) {\n                uVar12 = *(*0x20 + 0x10);\n                if ((*(*0x20 + 0x10) & 1) == 0) {\n                    bVar15 = *(*0x20 + -0x358) == unaff_RDI + (*(*0x20 + -0x350) - iVar7) + 1;\n                }\n                else {\n                    bVar15 = false;\n                }\n            }\n            else {\n                uVar12 = *(*0x20 + 0x10);\n                bVar15 = true;\n            }\n            if (uVar6 == 0) {\n                if (uVar13 + 1 < uVar14) {\n                    uVar6 = 2;\n                }\n                else {\n                    if (uVar14 == uVar13) goto code_r0x004813d3;\n                    uVar6 = 1;\n                }\n            }\n            else {\ncode_r0x004813d3:\n                if ((uVar6 == 1) && ((uVar13 != 0x39 || (uVar14 != 0x30)))) {\n                    uVar6 = 2;\n                }\n            }\n            if (uVar6 == 0) {\n                bVar4 = false;\n            }\n            else if (((uVar12 & 1) == 0) || (1 < uVar6)) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = unaff_RDI + 1 < *(*0x20 + -0x20);\n            }\n            if (bVar15) {\n                if (bVar4) {\n                    *(*0x20 + -0x6a0) = 0x48146f;\n                    fcn.004801e0();\n                    return;\n                }\n                if (bVar15) goto code_r0x00481430;\n            }\n            if (bVar4) {\n                iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (iVar7 < iVar10) {\n                    while( true ) {\n                        if (uVar8 < 0) {\n                            *puVar3 = 0x31;\n                            *(puVar3 + 800) = 1;\n                            *(puVar3 + 0x328) = *(puVar3 + 0x328) + 1;\n                            return;\n                        }\n                        if (799 < uVar8) break;\n                        if (puVar3[uVar8] < 0x39) {\n                            puVar3[uVar8] = puVar3[uVar8] + 1;\n                            *(puVar3 + 800) = uVar8 + 1;\n                            return;\n                        }\n                        uVar8 = uVar8 - 1;\n                    }\n                    *(*0x20 + -0x6a0) = 0x481509;\n                    fcn.0045eee0(800);\n                    return;\n                }\n                return;\n            }\n            unaff_RDI = unaff_RDI + 1;\n            unaff_RBX = uVar8;\n        } while( true );\n    }\n    goto code_r0x0048158d;\ncode_r0x00481430:\n    iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n    if (iVar7 < 0) {\n        return;\n    }\n    if (iVar10 <= iVar7) {\n        return;\n    }\n    *(puVar3 + 800) = iVar7;\n    do {\n        iVar7 = *(puVar3 + 800);\n        if (iVar7 < 1) {\ncode_r0x00481548:\n            if (iVar7 != 0) {\n                return;\n            }\n            *(puVar3 + 0x328) = 0;\n            return;\n        }\n        if (799 < iVar7 - 1U) break;\n        uVar8 = puVar3[iVar7 + -1];\n        if (puVar3[iVar7 + -1] != 0x30) goto code_r0x00481548;\n        *(puVar3 + 800) = iVar7 - 1U;\n    } while( true );\n    *(*0x20 + -0x6a0) = 0x481565;\n    fcn.0045eee0(800);\n    unaff_RBX = uVar8;\ncode_r0x00481565:\n    *(*0x20 + -0x6a0) = 0x481572;\n    fcn.0045eee0(800);\ncode_r0x00481572:\n    *(*0x20 + -0x6a0) = 0x48157f;\n    fcn.0045eee0(800);\ncode_r0x0048157f:\n    arg1 = 800;\n    *(*0x20 + -0x6a0) = 0x48158c;\n    in_RAX = fcn.0045eee0(800);\ncode_r0x0048158d:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x4815a6;\n    fcn.0045c800();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x004810c0;\n}\n",
        "token_count": 2620
    },
    "004815c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004815c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar in_R8B;\n    uchar uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        cVar8 = unaff_RDI;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = in_RAX;\n            *(*0x20 + 0x58) = unaff_RSI;\n            *(*0x20 + 0x60) = in_R8B;\n            uVar5 = unaff_RBX;\n            if (cVar8 != '\\0') {\n                uVar5 = unaff_RBX + 1;\n                uVar2 = in_RAX;\n                uVar7 = arg1;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar5) {\n                    *(*0x20 + 0x40) = unaff_RBX;\n                    *(*0x20 + -0x90) = 0x48162e;\n                    uVar2 = fcn.00447240(unaff_RBX);\n                    uVar5 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar7 = unaff_RBX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar2 + uVar6) = 0x2d;\n                in_RAX = uVar2;\n                arg1 = uVar7;\n                unaff_RBX = uVar6;\n            }\n            cVar8 = unaff_RDI;\n            if (*(*0x20 + 0x20) == 0) {\n                uVar13 = 0x30;\ncode_r0x00481684:\n                uVar6 = uVar5 + 1;\n                uVar3 = in_RAX;\n                uVar7 = arg1;\n                uVar2 = uVar5;\n                if (arg1 < uVar6) {\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x42) = uVar13;\n                    *(*0x20 + -0x90) = 0x4816af;\n                    uVar3 = fcn.00447240(uVar5);\n                    uVar6 = in_RAX + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar13 = *(*0x20 + -0x42);\n                    uVar7 = uVar5;\n                    unaff_RBX = in_RAX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar3 + uVar2) = uVar13;\n                uVar5 = uVar6;\n                if (unaff_RSI < 1) goto code_r0x0048180f;\n                uVar5 = uVar6 + 1;\n                uVar4 = uVar3;\n                uVar1 = uVar7;\n                uVar2 = uVar6;\n                if (uVar7 < uVar5) {\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x90) = 0x481705;\n                    uVar4 = fcn.00447240(uVar6);\n                    uVar5 = uVar3 + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar1 = uVar6;\n                    unaff_RBX = uVar3;\n                    unaff_RDI = uVar7;\n                }\n                uVar7 = uVar1;\n                cVar8 = unaff_RDI;\n                *(uVar4 + uVar2) = 0x2e;\n                uVar2 = unaff_RSI + 1U;\n                if (*(*0x20 + 0x20) < unaff_RSI + 1U) {\n                    uVar2 = *(*0x20 + 0x20);\n                }\n                if (uVar2 < 2) {\n                    iVar9 = 1;\n                    uVar3 = uVar4;\n                    goto code_r0x00481a60;\n                }\n                uVar3 = *(*0x20 + 0x18);\n                uVar6 = *(*0x20 + 8);\n                if (uVar2 <= uVar3) {\n                    *(*0x20 + -0x40) = uVar2;\n                    uVar1 = (uVar2 + uVar5) - 1;\n                    *(*0x20 + -0x18) = uVar1;\n                    if (uVar7 < uVar1) {\n                        *(*0x20 + -0x28) = uVar5;\n                        *(*0x20 + -0x10) = (-(uVar3 - 1) >> 0x3f & 1) + uVar6;\n                        *(*0x20 + -0x90) = 0x4817b4;\n                        uVar4 = fcn.00447240(uVar5);\n                        uVar2 = *(*0x20 + -0x40);\n                        uVar7 = uVar5;\n                    }\n                    *(*0x20 + -0x20) = uVar7;\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x90) = 0x4817e5;\n                    fcn.0045f840(uVar2 - 1);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x10);\ncode_r0x00481a60:\n                    for (; iVar9 <= unaff_RSI; iVar9 = iVar9 + 1) {\n                        uVar2 = uVar3;\n                        uVar6 = uVar5;\n                        uVar4 = uVar5 + 1;\n                        if (uVar7 < uVar5 + 1) {\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x30) = uVar5;\n                            *(*0x20 + -0x90) = 0x481a90;\n                            uVar2 = fcn.00447240(uVar5);\n                            iVar9 = *(*0x20 + -0x40);\n                            unaff_RSI = *(*0x20 + 0x58);\n                            in_R8B = *(*0x20 + 0x60);\n                            uVar6 = *(*0x20 + -0x30);\n                            uVar7 = uVar5;\n                            uVar4 = uVar3 + 1;\n                        }\n                        uVar5 = uVar4;\n                        *(uVar2 + uVar6) = 0x30;\n                        uVar3 = uVar2;\n                    }\ncode_r0x0048180f:\n                    uVar6 = uVar5 + 1;\n                    uVar4 = uVar3;\n                    uVar2 = uVar5;\n                    if (uVar7 < uVar6) {\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x90) = 0x481832;\n                        uVar4 = fcn.00447240(uVar5);\n                        uVar6 = uVar3 + 1;\n                        in_R8B = *(*0x20 + 0x60);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar5;\n                    }\n                    *(uVar4 + uVar2) = in_R8B;\n                    iVar9 = *(*0x20 + 0x28) + -1;\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar9 = 0;\n                    }\n                    if (iVar9 < 0) {\n                        iVar9 = -iVar9;\n                        uVar13 = 0x2d;\n                    }\n                    else {\n                        uVar13 = 0x2b;\n                    }\n                    *(*0x20 + -0x38) = iVar9;\n                    uVar5 = uVar6 + 1;\n                    uVar3 = uVar4;\n                    uVar2 = uVar6;\n                    if (uVar7 < uVar5) {\n                        *(*0x20 + -0x18) = uVar6;\n                        *(*0x20 + -0x42) = uVar13;\n                        *(*0x20 + -0x90) = 0x4818a9;\n                        uVar3 = fcn.00447240(uVar6);\n                        uVar5 = uVar4 + 1;\n                        iVar9 = *(*0x20 + -0x38);\n                        uVar13 = *(*0x20 + -0x42);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar6;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(uVar3 + uVar2) = uVar13;\n                    if (iVar9 < 10) {\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x90) = 0x4818e8;\n                            uVar3 = fcn.00447240(uVar5);\n                            iVar9 = *(*0x20 + -0x38);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = 0x30;\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else if (iVar9 < 100) {\n                        iVar10 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        iVar9 = iVar9 + iVar10 * -10;\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x90) = 0x481957;\n                            uVar3 = fcn.00447240(uVar5);\n                            iVar10 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = iVar10 + '0';\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else {\n                        iVar10 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar9) >> 0x40, 0) + iVar9;\n                        iVar11 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        cVar8 = iVar11 + ((iVar11 & 0xff) / 10) * -10;\n                        iVar9 = iVar9 + iVar11 * -10;\n                        if (uVar7 < uVar5 + 3) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x41) = cVar8;\n                            *(*0x20 + -0x90) = 0x481a05;\n                            uVar3 = fcn.00447240(uVar5);\n                            cVar8 = *(*0x20 + -0x41);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x20);\n                        }\n                        *(uVar3 + uVar5) = (iVar10 >> 6) + '0';\n                        *(uVar3 + 1 + uVar5) = cVar8 + '0';\n                        *(uVar3 + 2 + uVar5) = iVar9 + '0';\n                    }\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x481ac5;\n                fcn.0045ef60(uVar2, uVar3);\n            }\n            else {\n                uVar6 = *(*0x20 + 0x10);\n                if (*(*0x20 + 0x10) != 0) {\n                    uVar13 = **(*0x20 + 8);\n                    goto code_r0x00481684;\n                }\n            }\n            arg1 = uVar6;\n            *(*0x20 + -0x90) = 0x481acf;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar12 + 0x38) = in_RAX;\n        *(puVar12 + 0x40) = unaff_RBX;\n        *(puVar12 + 0x48) = arg1;\n        puVar12[0x50] = cVar8;\n        *(puVar12 + 0x58) = unaff_RSI;\n        puVar12[0x60] = in_R8B;\n        *(puVar12 + -8) = 0x481af3;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 0x38);\n        unaff_RBX = *(puVar12 + 0x40);\n        arg1 = *(puVar12 + 0x48);\n        unaff_RDI = puVar12[0x50];\n        unaff_RSI = *(puVar12 + 0x58);\n        in_R8B = puVar12[0x60];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3412
    },
    "00482800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00482800(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < unaff_RDI) {\n                if (unaff_RDI < 10) {\n                    if (unaff_EBX == 0) {\n                        *(in_RAX + 0x18) = in_XMM15;\n                        return;\n                    }\n                    uVar2 = unaff_EBX * 2 + 1;\n                    iVar4 = 0x3f;\n                    if (uVar2 != 0) {\n                        for (; uVar2 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n                        }\n                    }\n                    uVar2 = arg1;\n                    if (iVar4 < 0x19) {\n                        uVar1 = -(-(iVar4 + -0x19) < 0x20);\n                        arg3 = uVar1;\n                        unaff_EBX = unaff_EBX << (-(iVar4 + -0x19) & 0x1f) & uVar1;\n                        uVar2 = (iVar4 + arg1) - 0x19;\n                    }\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    unaff_RDI = unaff_RDI - (uVar2 * 0x13441 + 0x1ce618 >> 0x12);\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    arg1 = unaff_RDI - 1;\n                    if (arg1 < 0x1c) {\n                        arg3 = arg3 & 0xffffffffffffff00 | -1 < arg1;\n                    }\n                    else {\n                        arg3 = 0;\n                    }\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x1d) = arg3;\n                    *(*0x20 + -0x1c) = unaff_EBX;\n                    *(*0x20 + -0x48) = 0x4828d0;\n                    uVar1 = fcn.00483a40(arg1, arg1, arg3);\n                    if (uVar2 < 0) break;\n                    *(*0x20 + -0x48) = 0x482a45;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x48) = 0x482a58;\n                fcn.00433560();\n            }\n            unaff_EBX = 0x4ee9c0;\n            *(*0x20 + -0x48) = 0x482a6b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x482a85;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n    if (*(*0x20 + -0x10) + 9U < 10) {\n        if (*(*0x20 + -0x1c) != 0) {\n            uVar7 = *(*0x20 + -0x1c);\n            for (iVar4 = 0; SBORROW8(iVar4, -*(*0x20 + -0x18)) != iVar4 + *(*0x20 + -0x18) < 0; iVar4 = iVar4 + 1) {\n                if (uVar7 != (uVar7 / 5) * 5) goto code_r0x00482908;\n                uVar7 = uVar7 / 5;\n            }\n        }\n        cVar5 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00482908:\n        cVar5 = *(*0x20 + -0x1d);\n    }\n    uVar2 = -uVar2;\n    uVar6 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1 & uVar1;\n    if (cVar5 == '\\0') {\n        uVar2 = uVar2 - 1;\n        uVar7 = -(uVar2 < 0x20);\n        uVar1 = uVar2 & 0xffffff00 | (uVar8 >> (uVar2 & 0x1f) & -(uVar2 < 0x20)) == 1;\n        goto code_r0x004829a0;\n    }\n    uVar9 = -(uVar2 - 1 < 0x20);\n    uVar7 = uVar9;\n    uVar9 = 1 << (uVar2 - 1 & 0x1f) & uVar9;\n    if (uVar9 < uVar8) {\ncode_r0x00482971:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar5 = arg1 & 0xffffffff;\n            if (cVar5 == '\\0') goto code_r0x00482971;\n            if ((uVar9 == uVar8) && (cVar5 != '\\0')) {\n                uVar1 = uVar1 >> (uVar2 & 0x1f) & -(uVar2 < 0x20) & 1;\n                goto code_r0x004829a0;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x004829a0:\n    if (uVar8 != 0) {\n        uVar6 = 0;\n    }\n    *(*0x20 + -0x48) = 0x4829c5;\n    fcn.00482d40(uVar6 ^ 1, uVar1, uVar7, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1677
    },
    "00482aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00482aa0(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t noname_2;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 0x13) {\n                if (unaff_RBX == 0) {\n                    *(in_RAX + 0x18) = in_XMM15;\n                    return;\n                }\n                iVar3 = 0x3f;\n                if (unaff_RBX != 0) {\n                    for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                    }\n                }\n                if (unaff_RBX == 0) {\n                    iVar3 = -1;\n                }\n                uVar4 = arg1;\n                if (iVar3 + 1 < 0x37) {\n                    unaff_RBX = unaff_RBX << (-(iVar3 + -0x36) & 0x3f) & -(-(iVar3 + -0x36) < 0x40);\n                    uVar4 = (iVar3 + arg1) - 0x36;\n                }\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 8) = in_RAX;\n                unaff_RDI = unaff_RDI - (uVar4 * 0x13441 + 0x4105b6 >> 0x12);\n                *(*0x20 + -0x10) = unaff_RDI;\n                arg1 = unaff_RDI - 1;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x21) = arg1 < 0x38;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x482b70;\n                uVar2 = fcn.00483b20(arg1);\n                if (uVar4 < 0) break;\n                *(*0x20 + -0x50) = 0x482ce5;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee9f0;\n            *(*0x20 + -0x50) = 0x482cf8;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x482d12;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    if (*(*0x20 + -0x10) + 0x15U < 0x16) {\n        if (*(*0x20 + -0x18) != 0) {\n            uVar8 = *(*0x20 + -0x18);\n            for (iVar3 = 0; SBORROW8(iVar3, -*(*0x20 + -0x20)) != iVar3 + *(*0x20 + -0x20) < 0; iVar3 = iVar3 + 1) {\n                if (uVar8 != (uVar8 / 5) * 5) goto code_r0x00482ba5;\n                uVar8 = uVar8 / 5;\n            }\n        }\n        cVar6 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00482ba5:\n        cVar6 = *(*0x20 + -0x21);\n    }\n    uVar4 = -uVar4;\n    uVar7 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar4 & 0x3f) & -(uVar4 < 0x40)) - 1 & uVar2;\n    if (cVar6 == '\\0') {\n        uVar4 = uVar4 - 1;\n        noname_2 = -(uVar4 < 0x40);\n        uVar1 = uVar4 & 0xffffff00 | (uVar8 >> (uVar4 & 0x3f) & noname_2) == 1;\n        goto code_r0x00482c42;\n    }\n    noname_2 = -(uVar4 - 1 < 0x40);\n    uVar9 = 1 << (uVar4 - 1 & 0x3f) & noname_2;\n    if (uVar9 < uVar8) {\ncode_r0x00482c12:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar6 = arg1 & 0xffffffff;\n            if (cVar6 == '\\0') goto code_r0x00482c12;\n            if ((uVar9 == uVar8) && (cVar6 != '\\0')) {\n                uVar1 = uVar2 >> (uVar4 & 0x3f) & -(uVar4 < 0x40) & 1;\n                goto code_r0x00482c42;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x00482c42:\n    if (uVar8 != 0) {\n        uVar7 = 0;\n    }\n    *(*0x20 + -0x50) = 0x482c65;\n    fcn.00482d40(uVar7 ^ 1, uVar1, noname_2, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1584
    },
    "00483020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00483020(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint32_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *unaff_RDI;\n    char cVar16;\n    ulong uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uint64_t uVar20;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 0) {\n                *(in_RAX + 0x18) = in_XMM15;\n                return;\n            }\n            if (arg1 < 1) {\n                iVar14 = 0;\n                if (unaff_RBX != 0) {\n                    for (; (unaff_RBX >> iVar14 & 1) == 0; iVar14 = iVar14 + 1) {\n                    }\n                }\n                uVar9 = -arg1;\n                if (SBORROW8(iVar14, uVar9) == iVar14 + arg1 < 0) {\n                    *(*0x20 + -0x98) = 0x483085;\n                    fcn.00483540(-(uVar9 < 0x40) & unaff_RBX >> (uVar9 & 0x3f), iVar14, 0);\n                    return;\n                }\n            }\n            uVar9 = *unaff_RDI;\n            if ((unaff_RBX == (1 << (uVar9 & 0x3f) & -(uVar9 < 0x40))) && (arg1 != (unaff_RDI[2] - uVar9) + 1)) {\n                iVar10 = unaff_RBX * 4;\n                iVar14 = iVar10 + 2;\n                arg1 = arg1 + -2;\n                iVar1 = iVar10;\n            }\n            else {\n                iVar10 = unaff_RBX << 1;\n                iVar14 = unaff_RBX * 2 + 1;\n                arg1 = arg1 + -1;\n                iVar1 = unaff_RBX * 2;\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x98) = 0x48325b;\n                fcn.00483540(iVar10, unaff_RBX, 0);\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = iVar1 + -1;\n            *(*0x20 + -0x18) = iVar10;\n            *(*0x20 + -0x50) = iVar14;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            iVar14 = arg1 * -0x13441 >> 0x12;\n            *(*0x20 + -0x58) = iVar14;\n            iVar14 = iVar14 + 1;\n            *(*0x20 + -0x48) = iVar14;\n            uVar17 = 0x55c9a0;\n            if (unaff_RDI == 0x55c9a0) {\n                *(*0x20 + -0x98) = 0x483152;\n                uVar4 = fcn.00483a40(iVar14, unaff_RBX, 0x55c9a0);\n                *(*0x20 + -0x60) = uVar4;\n                *(*0x20 + -0x62) = iVar14;\n                uVar6 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x48316e;\n                uVar4 = fcn.00483a40(uVar6, unaff_RBX, uVar17);\n                *(*0x20 + -0x5c) = uVar4;\n                *(*0x20 + -0x61) = uVar6;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x48318a;\n                uVar5 = fcn.00483a40(arg1, unaff_RBX, uVar17);\n                uVar9 = *(*0x20 + -0x60);\n                uVar20 = *(*0x20 + -0x5c);\n                unaff_RDI = uVar5;\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            else {\n                *(*0x20 + -0x98) = 0x4831b0;\n                uVar17 = fcn.00483b20(iVar14);\n                *(*0x20 + -0x28) = uVar17;\n                *(*0x20 + -0x62) = iVar14;\n                uVar17 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x4831cd;\n                uVar6 = fcn.00483b20(uVar17);\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x61) = uVar17;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x4831ea;\n                unaff_RDI = fcn.00483b20(arg1);\n                uVar9 = *(*0x20 + -0x28);\n                uVar20 = *(*0x20 + -0x20);\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            if (iVar14 < 0) break;\n            unaff_RBX = 0x4eea00;\n            *(*0x20 + -0x98) = 0x48350c;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + -8) = 0x483526;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        *0x20 = puVar12;\n    } while( true );\n    iVar1 = *(*0x20 + -0x48);\n    if (0x37 < iVar1) {\n        arg1 = 0;\n        cVar3 = '\\0';\n        cVar16 = '\\0';\n    }\n    cVar7 = arg1;\n    if (*(*0x20 + -0x58) + 0x19U < 0x18) {\n        iVar10 = -iVar1;\n        if (*(*0x20 + -0x40) != 0) {\n            uVar15 = *(*0x20 + -0x40);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00483439;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar16 = '\\x01';\ncode_r0x00483439:\n        if (*(*0x20 + -0x18) != 0) {\n            uVar15 = *(*0x20 + -0x18);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00483496;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar3 = '\\x01';\ncode_r0x00483496:\n        if (*(*0x20 + -0x50) != 0) {\n            uVar15 = *(*0x20 + -0x50);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00483281;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n    }\ncode_r0x00483281:\n    *(*0x20 + -0x30) = unaff_RDI;\n    uVar11 = -iVar14;\n    uVar15 = -(uVar11 < 0x40);\n    uVar8 = uVar11;\n    uVar18 = (1 << (uVar8 & 0x3f) & uVar15) - 1;\n    noname_1 = uVar9 >> (uVar8 & 0x3f) & uVar15;\n    uVar15 = uVar20 >> (uVar8 & 0x3f) & uVar15;\n    uVar20 = uVar20 & uVar18;\n    if ((cVar7 == '\\0') || ((*(*0x20 + -0x30) & uVar18) != 0)) {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    else {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    if (cVar3 == '\\0') {\n        uVar2 = -(uVar11 - 1 < 0x40);\n        uVar13 = uVar2 & 0xffffff00 | (uVar20 >> (uVar11 - 1 & 0x3f) & uVar2) == 1;\n    }\n    else {\n        uVar11 = 1 << (uVar11 - 1 & 0x3f) & -(uVar11 - 1 < 0x40);\n        if (uVar11 < uVar20) {\n            uVar13 = 1;\n        }\n        else if (uVar11 == uVar20) {\n            uVar13 = uVar15 & 1;\n        }\n        else {\n            uVar13 = 0;\n        }\n    }\n    if (((cVar16 == '\\0') || ((uVar18 & uVar9) != 0)) || ((uVar5 & 1) != 0)) {\n        noname_1 = noname_1 + 1;\n    }\n    *(*0x20 + -0x98) = 0x4833c5;\n    fcn.00483540(uVar15, noname_1, uVar13);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x58)) + -1;\n    return;\n}\n",
        "token_count": 2764
    },
    "00483540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00483540(char *arg1, ulong noname_1, char **arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_RAX;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t noname_1_00;\n    char *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    char *unaff_RSI;\n    char **unaff_RDI;\n    char **ppcVar9;\n    uint32_t uVar10;\n    char **arg1_00;\n    int64_t unaff_R14;\n    char *unaff_R15;\n    \n    do {\n        cVar8 = unaff_RSI;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            pcVar5 = (unaff_RBX >> 1) / 500000000;\n            unaff_RBX = unaff_RBX + pcVar5 * -1000000000;\n            pcVar6 = (arg1 >> 1) / 500000000;\n            arg1_00 = arg1 + pcVar6 * -1000000000;\n            noname_1_00 = (unaff_RDI >> 1) / 500000000;\n            if (noname_1_00 == 0) {\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x483659;\n                fcn.00483840(arg1_00, noname_1_00, arg3, 8);\n                goto code_r0x00483659;\n            }\n            if (pcVar5 < noname_1_00) {\n                uVar10 = arg1_00;\n                if (cVar8 == '\\0') {\n                    unaff_RSI = NULL;\n                }\n                else {\n                    unaff_RSI = uVar10 == 0;\n                }\n                if (uVar10 < 0x1dcd6501) {\n                    arg3 = (uVar10 & 0xffffff00 | uVar10 == 500000000) & arg3;\n                }\n                else {\n                    arg3 = 0x1;\n                }\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x483634;\n                arg1_00 = arg3;\n                fcn.00483840(pcVar6, noname_1_00, arg3, 8);\n                *(*(*0x20 + 8) + 0x20) = *(*(*0x20 + 8) + 0x20) + 9;\n                goto code_r0x00483659;\n            }\n            in_RAX[3] = NULL;\n            pcVar3 = 0x9;\n            ppcVar9 = unaff_RDI >> 1;\n            unaff_RDI = arg1_00;\ncode_r0x0048372f:\n            cVar8 = unaff_RSI;\n            if (pcVar6 != 0) {\n                cVar4 = pcVar6 + ((pcVar6 & 0xffffffff) / 10) * -10;\n                unaff_R15 = pcVar3 + -1;\n                arg1 = in_RAX[1];\n                arg1_00 = *in_RAX;\n                pcVar6 = (pcVar6 & 0xffffffff) / 10;\n                if (arg1 <= unaff_R15) goto code_r0x004837dc;\ncode_r0x0048371a:\n                (pcVar3 + -1)[arg1_00] = cVar4 + '0';\n                pcVar3 = unaff_R15;\n                pcVar5 = unaff_RBX;\n                ppcVar9 = unaff_RDI;\n                goto code_r0x0048372f;\n            }\n            pcVar6 = in_RAX[1];\n            pcVar1 = *in_RAX;\n            pcVar2 = in_RAX[2];\n            if (pcVar3 <= pcVar6) {\n                in_RAX[1] = pcVar6 + -pcVar3;\n                in_RAX[2] = pcVar2 + -pcVar3;\n                if (*0x626890 == 0) {\n                    *in_RAX = pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3);\n                    arg1_00 = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4837aa;\n                    pcVar3 = fcn.0045eb60(pcVar6 + -pcVar3, pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3), arg3, \n                                          in_RAX);\n                    arg1_00 = unaff_RDI;\n                }\n                in_RAX[3] = -(pcVar3 + -9);\n                in_RAX = -(pcVar3 + -9) + 8;\n                *(*0x20 + -0x30) = 0x4837cd;\n                fcn.00483840(arg1_00, in_RAX, arg3, in_RAX);\ncode_r0x00483659:\n                unaff_RDI = *(*0x20 + 8);\n                while (pcVar6 = unaff_RDI[3],  0 < pcVar6) {\n                    pcVar5 = unaff_RDI[1];\n                    unaff_RBX = *unaff_RDI;\n                    if (pcVar5 <= pcVar6 + -1) goto code_r0x00483715;\n                    if ((pcVar6 + -1)[unaff_RBX] != '0') break;\n                    unaff_RDI[3] = pcVar6 + -1;\n                }\ncode_r0x00483693:\n                pcVar6 = unaff_RDI[3];\n                if (pcVar6 < 1) {\n                    return;\n                }\n                pcVar5 = unaff_RDI[1];\n                unaff_RBX = *unaff_RDI;\n                if (pcVar5 == NULL) goto code_r0x0048370e;\n                if (*unaff_RBX != '0') {\n                    return;\n                }\n                unaff_RDI[3] = pcVar6 + -1;\n                unaff_RDI[4] = unaff_RDI[4] + -1;\n                pcVar5 = unaff_RDI[1];\n                pcVar6 = *unaff_RDI;\n                unaff_RBX = unaff_RDI[2];\n                if (pcVar5 != NULL) {\n                    unaff_RSI = pcVar5 + -1;\n                    unaff_RDI[1] = unaff_RSI;\n                    unaff_RDI[2] = unaff_RBX + -1;\n                    if (*0x626890 == 0) {\n                        *unaff_RDI = pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x4836f8;\n                        fcn.0045eb60(pcVar5, pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1), arg3, in_RAX);\n                    }\n                    goto code_r0x00483693;\n                }\n                *(*0x20 + -0x30) = 0x48370e;\n                fcn.0045efa0(0);\ncode_r0x0048370e:\n                *(*0x20 + -0x30) = 0x483715;\n                fcn.0045eee0(pcVar5);\ncode_r0x00483715:\n                *(*0x20 + -0x30) = 0x48371a;\n                pcVar3 = fcn.0045eee0(pcVar5);\n                cVar4 = pcVar5;\n                goto code_r0x0048371a;\n            }\n            *(*0x20 + -0x30) = 0x4837dc;\n            arg1 = unaff_RBX;\n            fcn.0045efc0(pcVar6);\n            unaff_RBX = pcVar5;\n            unaff_RDI = ppcVar9;\ncode_r0x004837dc:\n            *(*0x20 + -0x30) = 0x4837e7;\n            in_RAX = fcn.0045ef00(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = cVar8;\n        puVar7[0x29] = arg3;\n        *(puVar7 + -8) = 0x48380b;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = puVar7[0x28];\n        arg3 = puVar7[0x29];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2187
    },
    "00484260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00484260(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x4842e6;\n                in_RAX = fcn.00447160(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x484308;\n                    fcn.0045f840(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x484365;\n                iVar2 = fcn.00447240(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 == 0) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x48462a;\n                        iVar2 = fcn.00447240(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x484405;\n                    uVar1 = fcn.0047e620();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x484485;\n                        iVar2 = fcn.00447240(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4ca965);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x4844ff;\n                        iVar3 = fcn.00447240(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4ca965);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x48457e;\n                        iVar2 = fcn.00447240(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x4845d4;\n                    iVar2 = fcn.00484820(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x484665;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045efa0(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x484693;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2678
    },
    "00485040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00485040(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            while( true ) {\n                if (unaff_RBX == 0) {\n                    return 1;\n                }\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x48507d;\n                iVar1 = fcn.0047e620();\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < unaff_RBX) break;\n                uVar2 = uVar2 - unaff_RBX;\n                in_RAX = (-uVar2 >> 0x3f & unaff_RBX) + *(*0x20 + -0x10);\n                if (unaff_RBX < 2) {\n                    if (iVar1 == 0xfffd) {\n                        return 0;\n                    }\n                    if (iVar1 < 0x20) {\n                        unaff_RBX = uVar2;\n                        if (iVar1 != 9) {\n                            return 0;\n                        }\n                    }\n                    else if ((iVar1 == 0x60) || (unaff_RBX = uVar2,  iVar1 == 0x7f)) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = uVar2;\n                    if (iVar1 == 0xfeff) {\n                        return 0;\n                    }\n                }\n            }\n            *(*0x20 + -0x30) = 0x48510e;\n            in_RAX = fcn.0045efa0(uVar2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x48511e;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "00489420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00489420(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    ulong *in_RAX;\n    int64_t iVar7;\n    int64_t arg1;\n    int64_t *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t **arg3_00;\n    int64_t **ppiVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = in_RAX[1];\n            arg1 = in_RAX[4];\n            iVar1 = in_RAX[3];\n            iVar7 = iVar1;\n            if (in_RAX[5] < arg1 + 1U) {\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0xd8) = 0x489485;\n                arg3 = iVar1;\n                iVar7 = fcn.00447240(arg1);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = arg1;\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x18) = iVar7;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x4894ab;\n                    iVar7 = fcn.0045ea40(arg1, arg2, arg3, in_R9);\n                }\n                uVar8 = *(*0x20 + -0x88);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = iVar1;\n            }\n            in_RAX[4] = arg1 + 1;\n            *(iVar7 + arg1 * 8) = uVar8;\n            if (*unaff_RBX == 0) {\n                in_RAX[6] = -*(unaff_RBX + 0x15) & (*(unaff_RBX + 0x15) + in_RAX[6]) - 1;\n                return NULL;\n            }\n            *(*0x20 + -0x50) = *in_RAX;\n            uVar3 = *(in_RAX + 0xc);\n            uVar4 = *(in_RAX + 2);\n            uVar5 = *(in_RAX + 0x14);\n            *(*0x20 + -0x48) = *(in_RAX + 1);\n            *(*0x20 + -0x44) = uVar3;\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x3c) = uVar5;\n            uVar3 = *(in_RAX + 0x1c);\n            uVar4 = *(in_RAX + 4);\n            uVar5 = *(in_RAX + 0x24);\n            *(*0x20 + -0x38) = *(in_RAX + 3);\n            *(*0x20 + -0x34) = uVar3;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x2c) = uVar5;\n            uVar3 = *(in_RAX + 0x2c);\n            uVar4 = *(in_RAX + 6);\n            uVar5 = *(in_RAX + 0x34);\n            *(*0x20 + -0x28) = *(in_RAX + 5);\n            *(*0x20 + -0x24) = uVar3;\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x1c) = uVar5;\n            uVar3 = *(in_RAX + 0x3c);\n            uVar4 = *(in_RAX + 8);\n            uVar5 = *(in_RAX + 0x44);\n            *(*0x20 + -0x18) = *(in_RAX + 7);\n            *(*0x20 + -0x14) = uVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar5;\n            *(*0x20 + -0xd8) = 0x48951e;\n            cVar6 = fcn.00489980(0);\n            if (cVar6 != '\\0') {\n                return NULL;\n            }\n            if (*0x626890 == 0) {\n                arg3_00 = *(*0x20 + 8);\n                *arg3_00 = *(*0x20 + -0x50);\n                uVar3 = *(*0x20 + -0x44);\n                uVar4 = *(*0x20 + -0x40);\n                uVar5 = *(*0x20 + -0x3c);\n                *(arg3_00 + 1) = *(*0x20 + -0x48);\n                *(arg3_00 + 0xc) = uVar3;\n                *(arg3_00 + 2) = uVar4;\n                *(arg3_00 + 0x14) = uVar5;\n                uVar3 = *(*0x20 + -0x34);\n                uVar4 = *(*0x20 + -0x30);\n                uVar5 = *(*0x20 + -0x2c);\n                *(arg3_00 + 3) = *(*0x20 + -0x38);\n                *(arg3_00 + 0x1c) = uVar3;\n                *(arg3_00 + 4) = uVar4;\n                *(arg3_00 + 0x24) = uVar5;\n                uVar3 = *(*0x20 + -0x24);\n                uVar4 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x1c);\n                *(arg3_00 + 5) = *(*0x20 + -0x28);\n                *(arg3_00 + 0x2c) = uVar3;\n                *(arg3_00 + 6) = uVar4;\n                *(arg3_00 + 0x34) = uVar5;\n                uVar3 = *(*0x20 + -0x14);\n                uVar4 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0xc);\n                *(arg3_00 + 7) = *(*0x20 + -0x18);\n                *(arg3_00 + 0x3c) = uVar3;\n                *(arg3_00 + 8) = uVar4;\n                *(arg3_00 + 0x44) = uVar5;\n            }\n            else {\n                *(*0x20 + -0xd8) = 0x489596;\n                fcn.00411b00(*0x20 + -0x50);\n                arg3_00 = *(*0x20 + 8);\n            }\n            in_R9 = **(*0x20 + 0x10);\n            uVar9 = *(*(*0x20 + 0x10) + 0x15);\n            arg3_00[6] = -uVar9 & arg3_00[6] + (uVar9 - 1);\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x80) = 1;\n            *(*0x20 + -0x70) = in_R9;\n            piVar10 = arg3_00[6];\n            *(*0x20 + -0x68) = piVar10;\n            arg1_00 = arg3_00[1];\n            piVar2 = *arg3_00;\n            unaff_RBX = piVar2;\n            ppiVar12 = arg3_00;\n            if (arg3_00[2] < arg1_00 + 1U) {\n                *(*0x20 + -0x90) = in_R9;\n                *(*0x20 + -0xd8) = 0x489616;\n                unaff_RBX = fcn.00447240(arg1_00);\n                ppiVar12 = *(*0x20 + 8);\n                ppiVar12[2] = arg1_00;\n                if (*0x626890 == 0) {\n                    *ppiVar12 = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x489635;\n                    unaff_RBX = fcn.0045ea40(arg1_00, piVar10, arg3_00, in_R9);\n                }\n                in_R9 = *(*0x20 + -0x90);\n                arg1_00 = piVar2;\n            }\n            ppiVar12[1] = arg1_00 + 1;\n            piVar10 = unaff_RBX + arg1_00 * 6;\n            uVar3 = *(*0x20 + -0x7c);\n            uVar4 = *(*0x20 + -0x78);\n            uVar5 = *(*0x20 + -0x74);\n            *piVar10 = *(*0x20 + -0x80);\n            *(piVar10 + 4) = uVar3;\n            *(piVar10 + 1) = uVar4;\n            *(piVar10 + 0xc) = uVar5;\n            uVar3 = *(*0x20 + -0x6c);\n            uVar4 = *(*0x20 + -0x68);\n            uVar5 = *(*0x20 + -100);\n            *(unaff_RBX + arg1_00 * 6 + 2) = *(*0x20 + -0x70);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x14) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 3) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x1c) = uVar5;\n            uVar3 = *(*0x20 + -0x5c);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x54);\n            *(unaff_RBX + arg1_00 * 6 + 4) = *(*0x20 + -0x60);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x24) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 5) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x2c) = uVar5;\n            ppiVar12[6] = ppiVar12[6] + in_R9;\n            piVar10 = ppiVar12[1];\n            if (piVar10 - 1U < piVar10) {\n                return *ppiVar12 + piVar10 * 6 + -6;\n            }\n            *(*0x20 + -0xd8) = 0x4896ef;\n            in_RAX = fcn.0045eee0(piVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x4896ff;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2843
    },
    "00489720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00489720(void)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    uchar uVar9;\n    int64_t iVar10;\n    int64_t *arg2_00;\n    int64_t *piVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar10 = *(in_RAX + 0x20);\n            iVar3 = *(in_RAX + 0x18);\n            arg3 = *(in_RAX + 8);\n            iVar8 = iVar3;\n            if (*(in_RAX + 0x28) < iVar10 + 1U) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = arg3;\n                *(*0x20 + -0x90) = 0x489785;\n                iVar8 = fcn.00447240(iVar10);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = iVar10;\n                if (*0x626890 == 0) {\n                    *(arg2 + 0x18) = iVar8;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4897ab;\n                    iVar8 = fcn.0045ea40(iVar10, arg2, arg3, in_R9);\n                }\n                arg3 = *(*0x20 + -0x40);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar10 = iVar3;\n            }\n            in_R9 = iVar10 + 1;\n            *(in_RAX + 0x20) = in_R9;\n            *(iVar8 + iVar10 * 8) = arg3;\n            uVar2 = *(unaff_RBX + 0x17);\n            if (((uVar2 & 0x20) == 0) || (*(unaff_RBX + 8) != 0)) {\n                *(*0x20 + -0x90) = 0x4897f8;\n                cVar7 = fcn.0048a0c0(8, uVar2, arg3);\n                uVar9 = 1;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x489812;\n                cVar7 = fcn.0048a0c0(8, uVar2, arg3);\n                uVar9 = 0;\n            }\n            if (cVar7 != '\\0') {\n                return 0;\n            }\n            arg2_00 = *(*0x20 + 8);\n            arg2_00[6] = arg2_00[6] + 7U & 0xfffffffffffffff8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x38) = 1;\n            *(*0x20 + -0x28) = 8;\n            *(*0x20 + -0x20) = arg2_00[6];\n            iVar10 = arg2_00[1];\n            iVar3 = *arg2_00;\n            piVar11 = arg2_00;\n            unaff_RBX = iVar3;\n            if (arg2_00[2] < iVar10 + 1U) {\n                *(*0x20 + -0x41) = uVar9;\n                *(*0x20 + -0x90) = 0x489889;\n                iVar8 = iVar10;\n                unaff_RBX = fcn.00447240(iVar10);\n                piVar11 = *(*0x20 + 8);\n                piVar11[2] = iVar10;\n                if (*0x626890 == 0) {\n                    *piVar11 = unaff_RBX;\n                    iVar10 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4898a8;\n                    unaff_RBX = fcn.0045ea40(iVar10, arg2_00, iVar8, in_R9);\n                    iVar10 = iVar3;\n                }\n            }\n            piVar11[1] = iVar10 + 1;\n            puVar1 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x34);\n            uVar5 = *(*0x20 + -0x30);\n            uVar6 = *(*0x20 + -0x2c);\n            *puVar1 = *(*0x20 + -0x38);\n            puVar1[1] = uVar4;\n            puVar1[2] = uVar5;\n            puVar1[3] = uVar6;\n            iVar10 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x24);\n            uVar5 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0x1c);\n            *(iVar10 + 0x10) = *(*0x20 + -0x28);\n            *(iVar10 + 0x14) = uVar4;\n            *(iVar10 + 0x18) = uVar5;\n            *(iVar10 + 0x1c) = uVar6;\n            uVar4 = *(*0x20 + -0x14);\n            uVar5 = *(*0x20 + -0x10);\n            uVar6 = *(*0x20 + -0xc);\n            *(iVar10 + 0x20) = *(*0x20 + -0x18);\n            *(iVar10 + 0x24) = uVar4;\n            *(iVar10 + 0x28) = uVar5;\n            *(iVar10 + 0x2c) = uVar6;\n            piVar11[6] = piVar11[6] + 8;\n            arg1 = piVar11[1];\n            if (arg1 - 1 < arg1) {\n                return arg1 * 0x30 + *piVar11 + -0x30;\n            }\n            *(*0x20 + -0x90) = 0x489945;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x489955;\n        fcn.0045c800();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1739
    },
    "00489980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00489980(int64_t arg1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg2;\n    uint64_t *unaff_RBX;\n    uint64_t in_R8;\n    int64_t arg3;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t *puStackX16;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong uStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    uint uStack124;\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [8];\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    ulong uStack48;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [8];\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        puStackX16 = unaff_RBX;\n    }\n    uVar7 = *(unaff_RBX + 0x17) & 0x1f;\n    if (0x10 < uVar7) {\n        if (uVar7 < 0x17) {\n            if (uVar7 < 0x14) {\n                if (uVar7 == 0x11) {\n                    if (unaff_RBX[8] == 0) {\n                        return 1;\n                    }\n                    if (unaff_RBX[8] == 1) {\n                        uVar4 = fcn.00489980(arg1);\n                        return uVar4;\n                    }\n                    return 0;\n                }\n            }\n            else if (uVar7 == 0x14) {\n                uVar4 = fcn.0048a0c0(8, 0x14, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0x19) {\n                if (uVar7 == 0x17) {\n                    uVar4 = fcn.0048a0c0(8, 0x17, in_R8);\n                    return uVar4;\n                }\n                uVar4 = fcn.0048a0c0(8, uVar7, in_R8);\n                return uVar4;\n            }\n            if (uVar7 == 0x19) {\n                uStack160 = unaff_RBX[8];\n                uStack168 = 0;\n                puStackX16 = unaff_RBX;\n                goto code_r0x00489cb8;\n            }\n            if (uVar7 != 0x1a) goto code_r0x00489c55;\n        }\n        uVar4 = fcn.0048a0c0(*unaff_RBX, *unaff_RBX, in_R8);\n        return uVar4;\n    }\n    if (uVar7 < 0xc) {\n        if (uVar7 < 7) {\n            in_R8 = uVar7 - 1;\n            if (in_R8 < 5) goto code_r0x00489aab;\n            if (uVar7 == 6) {\ncode_r0x00489adf:\n                uVar4 = fcn.0048a0c0(8, uVar7, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0xb) goto code_r0x00489aab;\n            if (uVar7 == 0xb) goto code_r0x00489adf;\n        }\ncode_r0x00489c55:\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.004356e0();\n        fcn.00435500();\n        fcn.00433560();\n        do {\n            uStack168 = uStack168 + 1;\ncode_r0x00489cb8:\n            if (uStack160 <= uStack168) {\n                return 1;\n            }\n            if (puStackX16[8] <= uStack168) {\n                uVar4 = fcn.0045eee0(puStackX16[8]);\n                return uVar4;\n            }\n            cVar2 = fcn.00489980((*(puStackX16[7] + 0x10 + uStack168 * 0x18) >> 1) + arg1);\n        } while (cVar2 != '\\0');\n        return 0;\n    }\n    if (0xe < uVar7) {\n        if (uVar7 == 0xf) {\n            if ((*0x55c370 < in_RAX[8] + 2) || (*0x55c378 < 4)) {\n                uVar4 = 0;\n            }\n            else {\n                for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                    uStack96 = SUB168(in_XMM15 >> 0x40, 0);\n                    _auStack104 = CONCAT88(arg1 + iVar9 * 4, 4);\n                    _auStack88 = CONCAT88(uStack96, 4);\n                    _auStack72 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                    iVar6 = in_RAX[1];\n                    iVar5 = *in_RAX;\n                    iVar3 = iVar5;\n                    if (in_RAX[2] < iVar6 + 1U) {\n                        iVar10 = iVar9;\n                        iVar8 = iVar6;\n                        iVar3 = fcn.00447240(iVar6);\n                        in_RAX[2] = iVar6;\n                        if (*0x626890 == 0) {\n                            *in_RAX = iVar3;\n                            iVar6 = iVar5;\n                        }\n                        else {\n                            iVar3 = fcn.0045ea40(iVar6, iVar10, iVar8, in_R9);\n                            iVar6 = iVar5;\n                        }\n                    }\n                    in_RAX[1] = iVar6 + 1;\n                    in_R9 = iVar3 + iVar6 * 0x30;\n                    *in_R9 = auStack104._0_4_;\n                    in_R9[1] = auStack104._4_4_;\n                    in_R9[2] = uStack96;\n                    in_R9[3] = uStack96._4_4_;\n                    iVar3 = iVar3 + iVar6 * 0x30;\n                    *(iVar3 + 0x10) = auStack88._0_4_;\n                    *(iVar3 + 0x14) = auStack88._4_4_;\n                    *(iVar3 + 0x18) = uStack80;\n                    *(iVar3 + 0x1c) = uStack76;\n                    *(iVar3 + 0x20) = auStack72._0_4_;\n                    *(iVar3 + 0x24) = auStack72._4_4_;\n                    *(iVar3 + 0x28) = uStack64;\n                    *(iVar3 + 0x2c) = uStack60;\n                    in_RAX[8] = in_RAX[8] + 1;\n                }\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if ((in_RAX[8] + 2 <= *0x55c370) && (7 < *0x55c378)) {\n            for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                uStack144 = SUB168(in_XMM15 >> 0x40, 0);\n                iVar6 = arg1 + iVar9 * 8;\n                _auStack136 = CONCAT88(uStack144, 8);\n                _auStack120 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar5 = in_RAX[1];\n                iVar10 = *in_RAX;\n                iVar3 = iVar10;\n                if (in_RAX[2] < iVar5 + 1U) {\n                    iVar8 = iVar9;\n                    arg3 = iVar5;\n                    iVar3 = fcn.00447240(iVar5);\n                    in_RAX[2] = iVar5;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar3;\n                        iVar5 = iVar10;\n                    }\n                    else {\n                        iVar3 = fcn.0045ea40(iVar5, iVar8, arg3, in_R9);\n                        iVar5 = iVar10;\n                    }\n                }\n                in_RAX[1] = iVar5 + 1;\n                in_R9 = iVar3 + iVar5 * 0x30;\n                uStack144._0_4_ = iVar6;\n                uStack144._4_4_ = iVar6 >> 0x20;\n                *in_R9 = 4;\n                in_R9[1] = 0;\n                in_R9[2] = uStack144;\n                in_R9[3] = uStack144._4_4_;\n                iVar3 = iVar3 + iVar5 * 0x30;\n                *(iVar3 + 0x10) = auStack136._0_4_;\n                *(iVar3 + 0x14) = auStack136._4_4_;\n                *(iVar3 + 0x18) = uStack128;\n                *(iVar3 + 0x1c) = uStack124;\n                *(iVar3 + 0x20) = auStack120._0_4_;\n                *(iVar3 + 0x24) = auStack120._4_4_;\n                *(iVar3 + 0x28) = uStack112;\n                *(iVar3 + 0x2c) = uStack108;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    if (uVar7 != 0xc) {\n        uVar7 = *unaff_RBX;\n        if ((*0x55c370 < in_RAX[8] + 1) || (*0x55c378 < uVar7)) {\n            uVar4 = 0;\n        }\n        else {\n            for (iVar9 = 0; iVar9 < 1; iVar9 = iVar9 + 1) {\n                uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n                _auStack56 = CONCAT88(arg1 + iVar9 * uVar7, 4);\n                _auStack40 = CONCAT88(uStack48, uVar7);\n                _auStack24 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar6 = in_RAX[1];\n                iVar5 = *in_RAX;\n                iVar3 = iVar5;\n                if (in_RAX[2] < iVar6 + 1U) {\n                    arg2 = uVar7;\n                    iVar10 = iVar9;\n                    iVar8 = iVar6;\n                    iVar3 = fcn.00447240(iVar6);\n                    in_RAX[2] = iVar6;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar3;\n                        iVar6 = iVar5;\n                    }\n                    else {\n                        iVar3 = fcn.0045ea40(iVar6, arg2, iVar10, iVar8);\n                        iVar6 = iVar5;\n                    }\n                }\n                in_RAX[1] = iVar6 + 1;\n                puVar1 = iVar3 + iVar6 * 0x30;\n                *puVar1 = auStack56._0_4_;\n                puVar1[1] = auStack56._4_4_;\n                puVar1[2] = uStack48;\n                puVar1[3] = uStack48._4_4_;\n                iVar3 = iVar3 + iVar6 * 0x30;\n                *(iVar3 + 0x10) = auStack40._0_4_;\n                *(iVar3 + 0x14) = auStack40._4_4_;\n                *(iVar3 + 0x18) = uStack32;\n                *(iVar3 + 0x1c) = uStack28;\n                *(iVar3 + 0x20) = auStack24._0_4_;\n                *(iVar3 + 0x24) = auStack24._4_4_;\n                *(iVar3 + 0x28) = uStack16;\n                *(iVar3 + 0x2c) = uStack12;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            uVar4 = 1;\n        }\n        return uVar4;\n    }\ncode_r0x00489aab:\n    uVar4 = fcn.0048a0c0(*unaff_RBX, *unaff_RBX, in_R8);\n    return uVar4;\n}\n",
        "token_count": 3003
    },
    "0048a0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048a0c0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    ulong uVar9;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 9) {\n                if ((unaff_SIL == 0) || (arg1 == 8)) {\n                    if (in_RAX[7] + unaff_RDI <= *0x55c380) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 0x20) = unaff_RDI;\n                        *(*0x20 + 0x28) = unaff_SIL;\n                        *(*0x20 + 0x18) = arg1;\n                        for (arg2 = 0; arg2 < unaff_RDI; arg2 = arg2 + 1) {\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            uVar9 = 2;\n                            if ((unaff_SIL & 1 << (arg2 & 0x1f) & -(arg2 < 0x20)) != 0) {\n                                uVar9 = 3;\n                            }\n                            *(*0x20 + -0x38) = uVar9;\n                            *(*0x20 + -0x30) = unaff_RBX + arg2 * arg1;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x18) = in_RAX[7];\n                            arg1_00 = in_RAX[1];\n                            arg3_00 = arg1_00 + 1;\n                            iVar2 = *in_RAX;\n                            iVar7 = iVar2;\n                            if (in_RAX[2] < arg3_00) {\n                                *(*0x20 + -0x40) = arg2;\n                                *(*0x20 + -0x88) = 0x48a225;\n                                iVar7 = fcn.00447240(arg1_00);\n                                piVar3 = *(*0x20 + 8);\n                                piVar3[2] = arg1_00;\n                                if (*0x626890 == 0) {\n                                    *piVar3 = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x88) = 0x48a245;\n                                    iVar7 = fcn.0045ea40(arg1_00, arg2, arg3_00, arg1);\n                                }\n                                arg2 = *(*0x20 + -0x40);\n                                unaff_SIL = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                arg1 = *(*0x20 + 0x18);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                arg1_00 = iVar2;\n                            }\n                            in_RAX[1] = arg1_00 + 1;\n                            puVar1 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x34);\n                            uVar5 = *(*0x20 + -0x30);\n                            uVar6 = *(*0x20 + -0x2c);\n                            *puVar1 = *(*0x20 + -0x38);\n                            puVar1[1] = uVar4;\n                            puVar1[2] = uVar5;\n                            puVar1[3] = uVar6;\n                            iVar7 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x24);\n                            uVar5 = *(*0x20 + -0x20);\n                            uVar6 = *(*0x20 + -0x1c);\n                            *(iVar7 + 0x10) = *(*0x20 + -0x28);\n                            *(iVar7 + 0x14) = uVar4;\n                            *(iVar7 + 0x18) = uVar5;\n                            *(iVar7 + 0x1c) = uVar6;\n                            uVar4 = *(*0x20 + -0x14);\n                            uVar5 = *(*0x20 + -0x10);\n                            uVar6 = *(*0x20 + -0xc);\n                            *(iVar7 + 0x20) = *(*0x20 + -0x18);\n                            *(iVar7 + 0x24) = uVar4;\n                            *(iVar7 + 0x28) = uVar5;\n                            *(iVar7 + 0x2c) = uVar6;\n                            in_RAX[7] = in_RAX[7] + 1;\n                        }\n                        return 1;\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x88) = 0x48a2a7;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee660;\n            *(*0x20 + -0x88) = 0x48a2ba;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        puVar8[0x28] = unaff_SIL;\n        *(puVar8 + -8) = 0x48a2d9;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_SIL = puVar8[0x28];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1597
    },
    "0048ad40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048ad40(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RSI >> 9 & 1) != 0) {\n                *(*0x20 + -0x1a0) = unaff_RSI;\n                *(*0x20 + -0x180) = unaff_RDI;\n                *(*0x20 + -0x188) = arg1;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x1b1) = *(arg1 + 0x17);\n                *(*0x20 + -0x288) = 0x48adcc;\n                iVar1 = fcn.0048f4c0(unaff_RSI);\n                uVar5 = *(*0x20 + -0x1b1) & 0x1f | *(*0x20 + -0x1a0) & 0x1e0;\n                if (iVar1 == 0x4ef0c0) {\n                    *(*0x20 + -0x1a8) = uVar5;\n                    *(*0x20 + -400) = unaff_RDI;\n                    *(*0x20 + -0x1b0) = 0x48f740;\n                    *(*0x20 + -0xc0) = in_XMM15;\n                    *(*0x20 + -0x290) = unaff_RBP;\n                    *(*0x20 + -0x288) = 0x48ae4f;\n                    fcn.0045f18f();\n                    uVar3 = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x48ae5d;\n                    fcn.0048bf60();\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x280);\n                    *(*0x20 + -0x290) = uVar3;\n                    *(*0x20 + -0x288) = 0x48ae8f;\n                    fcn.0045f4c6();\n                    *(*0x20 + -0x178) = *(*0x20 + -0xc0);\n                    *(*0x20 + -0x290) = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x48aecf;\n                    fcn.0045f4c6();\n                    *(*0x20 + -0x288) = 0x48aedf;\n                    puVar2 = fcn.0040cc20();\n                    *puVar2 = *(*0x20 + -0x1b0);\n                    if (*0x626890 == 0) {\n                        puVar2[1] = *(*0x20 + -0xd0);\n                    }\n                    else {\n                        *(*0x20 + -0x288) = 0x48af0b;\n                        puVar2 = fcn.0045eb40();\n                    }\n                    *(*0x20 + -0x198) = puVar2;\n                    puVar2[2] = *(*0x20 + -0xe8);\n                    uVar5 = *(*0x20 + -200);\n                    *(puVar2 + 3) = *(*0x20 + -200);\n                    iVar1 = *(*0x20 + -0x1a0) >> 10;\n                    puVar2[4] = iVar1;\n                    puVar2[7] = *(*0x20 + -0x1a8);\n                    if (*0x626890 == 0) {\n                        uVar3 = *(*0x20 + -0x188);\n                        puVar2[5] = uVar3;\n                        puVar2[6] = *(*0x20 + -0x180);\n                    }\n                    else {\n                        uVar3 = *(*0x20 + -0x188);\n                        *(*0x20 + -0x288) = 0x48af7b;\n                        fcn.0045eb40();\n                        *(*0x20 + -0x288) = 0x48af8c;\n                        fcn.0045ebe0(uVar3, uVar5, iVar1);\n                    }\n                    *(*0x20 + -0x288) = 0x48afa5;\n                    fcn.0048cf60(uVar3, uVar5, iVar1);\n                    return;\n                }\n                arg1 = 0x4c3300;\n                *(*0x20 + -0x288) = 0x48afe9;\n                fcn.0040a260(0x4c3300);\n            }\n            unaff_RBX = 0x4ee750;\n            *(*0x20 + -0x288) = 0x48affc;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = uVar5;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x48b01b;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1512
    },
    "0048b040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0048b040(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    uint64_t uVar4;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack80 = *unaff_RBX;\n    uStack72 = *(unaff_RBX + 1);\n    uStack68 = *(unaff_RBX + 0xc);\n    uStack64 = *(unaff_RBX + 2);\n    uStack60 = *(unaff_RBX + 0x14);\n    uStack56 = *(unaff_RBX + 3);\n    uStack52 = *(unaff_RBX + 0x1c);\n    uStack48 = *(unaff_RBX + 4);\n    uStack44 = *(unaff_RBX + 0x24);\n    uStack40 = *(unaff_RBX + 5);\n    uStack36 = *(unaff_RBX + 0x2c);\n    uStack32 = *(unaff_RBX + 6);\n    uStack28 = *(unaff_RBX + 0x34);\n    uStack24 = *(unaff_RBX + 7);\n    uStack20 = *(unaff_RBX + 0x3c);\n    uStack16 = *(unaff_RBX + 8);\n    uStack12 = *(unaff_RBX + 0x44);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        uVar4 = iVar2 + uVar3 * -8;\n        if (uVar4 < 0) {\n            fcn.00432200();\n            break;\n        }\n        if ((1 << (uVar4 & 0x1f) & -(uVar4 < 0x20) & *(in_RAX + 0x18 + uVar3)) == 0) {\n            unaff_RBX[iVar2 + 0x18] = 0;\n        }\n        else {\n            unaff_RBX[iVar2 + 0x18] = (&uStack80)[iVar2];\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045eee0(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 659
    },
    "0048b840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048b840(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x48b865;\n            fcn.0045a580();\n            *(*0x20 + -0x20) = 0x48b86a;\n            iVar1 = fcn.0048b100(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x48b8b5;\n            in_RAX = fcn.0045efa0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x48b8c5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "0048bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048bf60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *arg1;\n    uint uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x338 && *0x20 + -0x338 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x3b8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x3c8) = *0x20 + -8;\n            *(*0x20 + -0x3c0) = 0x48bfaf;\n            iVar2 = fcn.0045f18f();\n            unaff_RBP = *(*0x20 + -0x3c8);\n            arg2 = *(iVar2 + 0x17) & 0x1f;\n            if (arg2 == 0x13) {\n                if ((unaff_RBX == 0) || (arg2 = *(unaff_RBX + 0x17) & 0x1f,  arg2 != 0x14)) {\n                    *(*0x20 + 200) = unaff_RBX;\n                    *(*0x20 + 0xc0) = iVar2;\n                    *(*0x20 + -0x270) = iVar2;\n                    *(*0x20 + -0x268) = unaff_RBX;\n                    *(*0x20 + -0x280) = iVar2;\n                    *(*0x20 + -0x278) = unaff_RBX;\n                    arg1_00 = *0x20 + -0x280;\n                    *(*0x20 + -0x3c0) = 0x48c035;\n                    fcn.00464be0(arg1_00);\n                    if (arg1_00 == '\\0') {\n                        uVar7 = *(*0x20 + 200);\n                        *(*0x20 + -0x3c0) = 0x48c15b;\n                        fcn.0048a300();\n                        *(*0x20 + 8) = *(*0x20 + -0x3b8);\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x48c18f;\n                        fcn.0045f4c6();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        *(*0x20 + -0x2f0) = *(*0x20 + 0xa0) + *(*0x20 + 0x80);\n                        *(*0x20 + -0x3c0) = 0x48c1b7;\n                        puVar3 = fcn.0040cc20();\n                        *(puVar3 + 0x15) = 8;\n                        *puVar3 = *(*0x20 + -0x2f0) + 7U & 0xfffffffffffffff8;\n                        puVar3[1] = **(*0x20 + 0xb0) << 3;\n                        arg1 = *(*0x20 + 0xb0);\n                        if (*arg1 == 0) {\n                            bVar9 = *(*0x20 + 200) == 0;\ncode_r0x0048c23d:\n                            *(*0x20 + -0x2a0) = puVar3;\n                            if (bVar9) {\n                                *(*0x20 + -0x3c0) = 0x48c2cb;\n                                fcn.0048b840();\n                                uVar4 = 0x4c874b;\n                                param_4 = 1;\n                                *(*0x20 + -0x3c0) = 0x48c2f7;\n                                fcn.0044aca0(9, arg2, 0x4c874b, 1);\n                            }\n                            else {\n                                *(*0x20 + -0x3c0) = 0x48c24f;\n                                uVar4 = fcn.0048b840();\n                                *(*0x20 + -0x288) = uVar4;\n                                *(*0x20 + -0x2e8) = uVar7;\n                                *(*0x20 + -0x3c0) = 0x48c26c;\n                                fcn.0048b840();\n                                *(*0x20 + -0x3b8) = 0x4c874b;\n                                *(*0x20 + -0x3b0) = 1;\n                                uVar4 = 0x4c8778;\n                                param_4 = 2;\n                                *(*0x20 + -0x3c0) = 0x48c2bc;\n                                fcn.0044ae80(0xb, arg2, 0x4c8778, 2);\n                            }\n                            *(*0x20 + -0x3c0) = 0x48c305;\n                            fcn.0048b2a0(0, arg2);\n                            *(*0x20 + -0x3c0) = 0x48c30a;\n                            uVar1 = fcn.0045a680();\n                            *(*(*0x20 + -0x2a0) + 0x28) = uVar1;\n                            *(*0x20 + -0x3c0) = 0x48c325;\n                            uVar5 = fcn.0040cc20();\n                            *(*0x20 + -0x290) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x48c339;\n                            puVar6 = fcn.0040cc20();\n                            *puVar6 = 0x48c640;\n                            if (*0x626890 == 0) {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                puVar6[1] = uVar5;\n                                arg2 = *(*0x20 + -0x290);\n                                *(arg2 + 0x20) = puVar6;\n                            }\n                            else {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                *(*0x20 + -0x3c0) = 0x48c377;\n                                fcn.0045eb40();\n                                arg2 = *(*0x20 + -0x290);\n                                *(*0x20 + -0x3c0) = 0x48c388;\n                                fcn.0045ea40(uVar5, arg2, uVar4, param_4);\n                            }\n                            *(*0x20 + -0x270) = *(*0x20 + 0xc0);\n                            param_3 = *(*0x20 + 200);\n                            *(*0x20 + -0x268) = param_3;\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x48c3cf;\n                            fcn.0045f18b();\n                            *(*0x20 + -0xd0) = uVar5;\n                            *(*0x20 + -200) = arg2;\n                            *(*0x20 + -0xc0) = *(*0x20 + 8);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x48c412;\n                            fcn.0045f4c6();\n                            uVar4 = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x48c42a;\n                            uVar5 = fcn.0040a340();\n                            *(*0x20 + -0x298) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x48c446;\n                            fcn.0040a340();\n                            *(*0x20 + -0x3c0) = 0x48c46b;\n                            fcn.00464e80(*(*0x20 + -0x298));\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = uVar4;\n                            *(*0x20 + -0x3c0) = 0x48c48f;\n                            iVar2 = fcn.0045f18b();\n                            unaff_RBP = *(*0x20 + -0x3c8);\n                            if (iVar2 == 0x4bdbc0) {\n                                *(*0x20 + -0xd0) = *0x4bb800;\n                                *(*0x20 + -0x3c8) = unaff_RBP;\n                                *(*0x20 + -0x3c0) = 0x48c4cf;\n                                fcn.0045f4b8();\n                                *(*0x20 + -0x260) = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x48c50f;\n                                fcn.0045f4b8();\n                                *(*0x20 + 8) = *(*0x20 + -0x250);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x48c552;\n                                fcn.0045f4c6();\n                                return;\n                            }\n                            *(*0x20 + -0x3c0) = 0x48c575;\n                            fcn.0040a180(0x4b6d60);\n                        }\n                        else {\n                            arg2 = *(arg1 + 4);\n                            uVar7 = *(arg1 + 2);\n                            if (arg2 != 0) {\n                                if (*0x626890 == 0) {\n                                    puVar3[4] = uVar7;\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                else {\n                                    *(*0x20 + -0x3c0) = 0x48c225;\n                                    puVar3 = fcn.0045eb80(arg1, arg2, param_3, param_4);\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                goto code_r0x0048c23d;\n                            }\n                        }\n                        *(*0x20 + -0x3c0) = 0x48c57f;\n                        fcn.0045eee0(arg2);\n                    }\n                    else {\n                        *(*0x20 + -0xd0) = in_XMM15;\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x48c06f;\n                        iVar2 = fcn.0045f18b();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        if (iVar2 == 0x4bdbc0) {\n                            *(*0x20 + -0xd0) = *0x4bb800;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x48c0af;\n                            fcn.0045f4b8();\n                            *(*0x20 + -0x198) = *(*0x20 + -0xd0);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x48c0ef;\n                            fcn.0045f4b8();\n                            *(*0x20 + 8) = *(*0x20 + -0x188);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x48c132;\n                            fcn.0045f4c6();\n                            return;\n                        }\n                    }\n                    *(*0x20 + -0x3c0) = 0x48c58e;\n                    fcn.0040a180(0x4b6d60);\n                }\n                *(*0x20 + -0x3c0) = 0x48c596;\n                fcn.0048b840();\n                *(*0x20 + -0x3c0) = 0x48c5af;\n                fcn.0044ac00(0x2c);\n                *(*0x20 + -0x3c0) = 0x48c5b4;\n                fcn.0040a4c0();\n                *(*0x20 + -0x3c0) = 0x48c5c5;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x3c0) = 0x48c5ca;\n            fcn.0048b840();\n            *(*0x20 + -0x3c0) = 0x48c5e5;\n            fcn.0044ac00(0x25);\n            *(*0x20 + -0x3c0) = 0x48c5ea;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x3c0) = 0x48c5f9;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar8 + 0xc0) = in_RAX;\n        *(puVar8 + 200) = unaff_RBX;\n        *(puVar8 + -8) = 0x48c60f;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 0xc0);\n        unaff_RBX = *(puVar8 + 200);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3317
    },
    "0048c680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c680(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar8 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(arg1 + 8) == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = *(arg1 + 0x17) & 0x1f;\n            if (0x14 < uVar8) {\n                if (0x18 < uVar8) {\n                    if (uVar8 == 0x19) {\n                        iVar6 = *(arg1 + 0x40);\n                        *(*0x20 + -0x10) = iVar6;\n                        uVar8 = 0;\n                        while( true ) {\n                            if (iVar6 <= uVar8) {\n                                return;\n                            }\n                            iVar6 = *(arg1 + 0x38);\n                            unaff_RBX = *(arg1 + 0x40);\n                            if (unaff_RBX <= uVar8) break;\n                            *(*0x20 + -0x20) = uVar8;\n                            uVar2 = *(iVar6 + 8 + uVar8 * 0x18);\n                            *(*0x20 + -0x68) = 0x48c745;\n                            fcn.0048c680(uVar2);\n                            uVar8 = *(*0x20 + -0x20) + 1;\n                            iVar6 = *(*0x20 + -0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x68) = 0x48c791;\n                        in_RAX = fcn.0045eee0(unaff_RBX);\n                        goto code_r0x0048c791;\n                    }\n                    if (uVar8 != 0x1a) {\n                        return;\n                    }\n                }\n                break;\n            }\n            if (uVar8 == 0x11) {\n                uVar8 = 0;\n                goto code_r0x0048c8f2;\n            }\n            if (uVar8 - 0x12 < 2) break;\n            if (uVar8 != 0x14) {\n                return;\n            }\n            while( true ) {\n                uVar1 = *in_RAX;\n                uVar8 = unaff_RBX >> 3;\n                if (uVar8 <= uVar1) break;\n                if ((uVar1 & 7) == 0) {\n                    uVar7 = *(in_RAX + 4);\n                    uVar3 = *(in_RAX + 2);\n                    uVar8 = uVar3;\n                    if (*(in_RAX + 6) < uVar7 + 1) {\n                        *(*0x20 + -0x68) = 0x48c939;\n                        uVar8 = fcn.00447240(uVar7);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = uVar7;\n                        if (*0x626890 == 0) {\n                            *(in_RAX + 2) = uVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x48c95a;\n                            uVar8 = fcn.0045ea40(uVar7, in_RAX, unaff_RBX, in_R9);\n                        }\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar7 = uVar3;\n                    }\n                    *(in_RAX + 4) = uVar7 + 1;\n                    *(uVar8 + uVar7) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                if (arg1 <= *in_RAX >> 3) goto code_r0x0048cab7;\n                *in_RAX = *in_RAX + 1;\n            }\n            if ((uVar1 & 7) == 0) {\n                uVar7 = *(in_RAX + 4);\n                uVar3 = *(in_RAX + 2);\n                uVar8 = uVar3;\n                if (*(in_RAX + 6) < uVar7 + 1) {\n                    *(*0x20 + -0x68) = 0x48c9b8;\n                    uVar8 = fcn.00447240(uVar7);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 6) = uVar7;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + 2) = uVar8;\n                        uVar7 = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x48c9d9;\n                        uVar8 = fcn.0045ea40(uVar7, in_RAX, unaff_RBX, in_R9);\n                        uVar7 = uVar3;\n                    }\n                }\n                *(in_RAX + 4) = uVar7 + 1;\n                *(uVar8 + uVar7) = 0;\n            }\n            arg1 = *(in_RAX + 4);\n            uVar1 = *in_RAX;\n            in_R9 = uVar1;\n            uVar7 = uVar1 >> 3;\n            if (uVar7 < arg1) {\n                in_R9 = uVar1 & 7;\n                *(*(in_RAX + 2) + uVar7) = *(uVar7 + *(in_RAX + 2)) | 1 << (uVar1 & 7);\n                uVar1 = *in_RAX;\n                *in_RAX = uVar1 + 1;\n                if ((uVar1 + 1 & 7) == 0) {\n                    iVar6 = *(in_RAX + 4);\n                    iVar4 = *(in_RAX + 2);\n                    iVar5 = iVar4;\n                    if (*(in_RAX + 6) < iVar6 + 1U) {\n                        *(*0x20 + -0x68) = 0x48ca49;\n                        iVar5 = fcn.00447240(iVar6);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = iVar6;\n                        if (*0x626890 == 0) {\n                            *(in_RAX + 2) = iVar5;\n                            iVar6 = iVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x48ca6b;\n                            iVar5 = fcn.0045ea40(iVar6, in_RAX, uVar7, in_R9);\n                            iVar6 = iVar4;\n                        }\n                    }\n                    *(in_RAX + 4) = iVar6 + 1;\n                    *(iVar5 + iVar6) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                uVar8 = *in_RAX >> 3;\n                if (uVar8 < arg1) {\n                    *(*(in_RAX + 2) + uVar8) = *(uVar8 + *(in_RAX + 2)) | 1 << (*in_RAX & 7);\n                    *in_RAX = *in_RAX + 1;\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x48caaf;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x68) = 0x48cab7;\n            fcn.0045eee0(arg1);\ncode_r0x0048cab7:\n            *(*0x20 + -0x68) = 0x48cabe;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = uVar8;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x48cad3;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x0048c796:\n    uVar1 = *in_RAX;\n    if (unaff_RBX >> 3 <= uVar1) {\n        if ((uVar1 & 7) == 0) {\n            iVar6 = *(in_RAX + 4);\n            iVar4 = *(in_RAX + 2);\n            iVar5 = iVar4;\n            if (*(in_RAX + 6) < iVar6 + 1U) {\n                *(*0x20 + -0x68) = 0x48c851;\n                iVar5 = fcn.00447240(iVar6);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 6) = iVar6;\n                if (*0x626890 == 0) {\n                    *(in_RAX + 2) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x48c872;\n                    iVar5 = fcn.0045ea40(iVar6, in_RAX, unaff_RBX, in_R9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(in_RAX + 4) = iVar6 + 1;\n            *(iVar5 + iVar6) = 0;\n        }\n        uVar8 = *(in_RAX + 2);\n        arg1 = *(in_RAX + 4);\n        uVar7 = *in_RAX >> 3;\n        if (uVar7 < arg1) {\n            *(uVar8 + uVar7) = *(uVar7 + uVar8) | 1 << (*in_RAX & 7);\n            *in_RAX = *in_RAX + 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x48c8b6;\n            fcn.0045eee0(arg1);\ncode_r0x0048c8b6:\n            *(*0x20 + -0x68) = 0x48c8bd;\n            fcn.0045eee0(arg1);\n            do {\n                *(*0x20 + -0x18) = uVar8;\n                uVar2 = *(arg1 + 0x30);\n                *(*0x20 + -0x68) = 0x48c8db;\n                fcn.0048c680(uVar2);\n                uVar8 = *(*0x20 + -0x18) + 1;\n                arg1 = *(*0x20 + 0x18);\ncode_r0x0048c8f2:\n            } while (*(arg1 + 0x40) != uVar8 && uVar8 <= *(arg1 + 0x40));\n        }\n        return;\n    }\n    if ((uVar1 & 7) == 0) {\n        iVar6 = *(in_RAX + 4);\n        iVar4 = *(in_RAX + 2);\n        iVar5 = iVar4;\n        if (*(in_RAX + 6) < iVar6 + 1U) {\n            *(*0x20 + -0x68) = 0x48c7d2;\n            iVar5 = fcn.00447240(iVar6);\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 6) = iVar6;\n            if (*0x626890 == 0) {\n                *(in_RAX + 2) = iVar5;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x48c7f3;\n                iVar5 = fcn.0045ea40(iVar6, in_RAX, unaff_RBX, in_R9);\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar6 = iVar4;\n        }\n        *(in_RAX + 4) = iVar6 + 1;\n        *(iVar5 + iVar6) = 0;\n    }\n    arg1 = *(in_RAX + 4);\n    uVar8 = *in_RAX >> 3;\n    if (arg1 <= uVar8) goto code_r0x0048c8b6;\ncode_r0x0048c791:\n    *in_RAX = *in_RAX + 1;\n    goto code_r0x0048c796;\n}\n",
        "token_count": 3012
    },
    "0048cd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.0048cd80(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((arg1 & 0x1f) == 1) {\n        return *unaff_RBX;\n    }\n    uVar1 = fcn.0048cd20();\n    puVar2 = fcn.0040cc20();\n    puVar2[1] = unaff_RBX;\n    if (*0x626890 != 0) goto code_r0x0048ce0d;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00433560();\ncode_r0x0048ce0d:\n        puVar2 = fcn.0045eb40(uVar1);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "0048ce60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048ce60(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    pcVar4 = arg1 & 0x1f;\n    if (pcVar4 == 0x17) {\n        iVar1 = fcn.0048b9e0();\n        pcVar4 = *(iVar1 + 0x98);\n        iVar1 = (*pcVar4)();\n        if (iVar1 == 8) {\n            return *unaff_RBX;\n        }\n        unaff_RBX = 0x4ee7a0;\n        fcn.00433560();\n    }\n    uVar2 = fcn.0048cd20();\n    puVar3 = fcn.0040cc20();\n    puVar3[1] = unaff_RBX;\n    if (*0x626890 != 0) goto code_r0x0048cf27;\n    *puVar3 = uVar2;\n    do {\n        puVar3[2] = pcVar4;\n        fcn.00433560();\ncode_r0x0048cf27:\n        puVar3 = fcn.0045eb40(uVar2);\n    } while( true );\n}\n",
        "token_count": 341
    },
    "0048cf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048cf60(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t noname_1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            noname_1_00 = *(arg1 + 0x17) & 0x1f;\n            if (noname_1_00 == 0x14) {\n                noname_1_00 = *(arg1 + 0x38);\n                if (arg3 <= *(arg1 + 0x40) && *(arg1 + 0x40) != arg3) {\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x28) = noname_1_00;\n                    *(*0x20 + -0x80) = 0x48cfe5;\n                    puVar2 = fcn.0045a580();\n                    if ((*puVar2 & 1) != 0) {\n                        noname_1_00 = **(*0x20 + -0x20);\n                        if (noname_1_00 != 0) {\n                            uVar4 = *(noname_1_00 + 8);\n                            if (*(*0x20 + 0x30) < 100000) {\n                                *(*0x20 + -0x30) = noname_1_00;\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x80) = 0x48d049;\n                                fcn.0045a5c0();\n                                return *(*0x20 + -0x38);\n                            }\n                            goto code_r0x0048d16e;\n                        }\n                        goto code_r0x0048d178;\n                    }\n                    goto code_r0x0048d1bc;\n                }\n            }\n            else {\n                *(*0x20 + -0x80) = 0x48d070;\n                iVar3 = fcn.0048b900();\n                if (*(*0x20 + 0x30) < unaff_RBX) {\n                    iVar5 = *(*0x20 + 0x30) * 0x10;\n                    uVar1 = *(iVar3 + 4 + iVar5);\n                    noname_1_00 = uVar1;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = *(iVar3 + 8 + iVar5);\n                    *(*0x20 + -0x80) = 0x48d0aa;\n                    puVar2 = fcn.0045a580();\n                    arg1_00 = *puVar2;\n                    if ((*puVar2 & 1) != 0) {\n                        *(*0x20 + -0x80) = 0x48d0be;\n                        uVar4 = fcn.0040cc20();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = 0x48d0d1;\n                        uVar4 = fcn.0045a600();\n                        if (*0x626890 == 0) {\n                            **(*0x20 + -0x10) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x80) = 0x48d0ee;\n                            fcn.0045ea40(arg1_00, noname_1_00, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x80) = 0x48d0fd;\n                        fcn.0045a5c0();\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x80) = 0x48d147;\n                    fcn.0044aca0(9, noname_1_00, 0x4cbf05, 0x15);\n                    *(*0x20 + -0x80) = 0x48d14c;\n                    fcn.0040a4c0();\n                    *(*0x20 + -0x80) = 0x48d15b;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x80) = 0x48d16e;\n                fcn.00433560();\ncode_r0x0048d16e:\n                *(*0x20 + -0x80) = 0x48d178;\n                fcn.0045eee0(100000);\ncode_r0x0048d178:\n                *(*0x20 + -0x80) = 0x48d1a8;\n                fcn.0044aca0(9, noname_1_00, 0x4cf1aa, 0x21);\n                *(*0x20 + -0x80) = 0x48d1ad;\n                fcn.0040a4c0();\n                *(*0x20 + -0x80) = 0x48d1bc;\n                fcn.00433560();\ncode_r0x0048d1bc:\n                arg1 = 9;\n                unaff_RDI = *(*0x20 + 8);\n                unaff_RSI = *(*0x20 + 0x10);\n                arg3 = 0x4cbf05;\n                in_R9 = 0x15;\n                *(*0x20 + -0x80) = 0x48d1ec;\n                fcn.0044aca0(9, noname_1_00, 0x4cbf05, 0x15);\n                *(*0x20 + -0x80) = 0x48d1f1;\n                fcn.0040a4c0();\n                *(*0x20 + -0x80) = 0x48d205;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee7c0;\n            *(*0x20 + -0x80) = 0x48d218;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x48d23c;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1859
    },
    "0048e7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0048e7e0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x13) {\n                if (arg1 == 0x11) {\n                    return in_RAX[8];\n                }\n                if (arg1 != 0x12) {\ncode_r0x0048e8c8:\n                    *(*0x20 + -0x28) = 0x48e8d4;\n                    puVar2 = fcn.0040cc20();\n                    puVar2[1] = 0x11;\n                    *puVar2 = 0x4caf6a;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x28) = 0x48e8fe;\n                    fcn.00433560();\n                    goto code_r0x0048e8fe;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x48e850;\n                    iVar1 = fcn.00459580();\n                    return iVar1;\n                }\n            }\n            else {\n                if (arg1 != 0x15) {\n                    if (arg1 == 0x17) {\n                        return *(unaff_RBX + 8);\n                    }\n                    if (arg1 == 0x18) {\n                        return *(unaff_RBX + 8);\n                    }\n                    goto code_r0x0048e8c8;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x48e890;\n                    iVar1 = fcn.004596e0();\n                    return iVar1;\n                }\ncode_r0x0048e8fe:\n                *(*0x20 + -0x28) = 0x48e911;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee730;\n            *(*0x20 + -0x28) = 0x48e925;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x48e93a;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 835
    },
    "0048e960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048e960(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x48e990;\n                arg1 = fcn.004596a0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x48e9cf;\n                    fcn.0048ed20(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x48e9ec;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x28) = 0x48e9ff;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x48ea0a;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 396
    },
    "0048ea20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048ea20(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x48ea50;\n                arg1 = fcn.004596c0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x48ea8f;\n                    fcn.0048ed20(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x48eaac;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x28) = 0x48eabf;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x48eaca;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 394
    },
    "0048eae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0048eae0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *arg2;\n    int64_t **in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = in_RAX[2];\n            if (arg2 != NULL) {\n                *(*0x20 + -0x10) = in_RAX + 3;\n                if (in_RAX[5] == NULL) {\n                    if ((**in_RAX == 8) && ((*in_RAX)[1] != 0)) {\n                        *(*0x20 + -0x30) = 0x48eb45;\n                        fcn.00459600(in_RAX + 3, arg2, arg3, arg4);\ncode_r0x0048eb5e:\n                        *(*0x20 + -0x30) = 0x48eb68;\n                        uVar2 = fcn.004596a0();\n                        return uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x48eb4f;\n                    iVar1 = fcn.004596a0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x30) = 0x48eb5e;\n                        fcn.00459660();\n                        goto code_r0x0048eb5e;\n                    }\n                    *(*0x20 + -0x30) = 0x48eb8b;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x30) = 0x48eb9e;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x30) = 0x48ebb1;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x48ebbc;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 616
    },
    "0048ebe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048ebe0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar4 = arg1 & 0x1f;\n    if (uVar4 == 0x15) {\n        puVar1 = fcn.0040cc20();\n        puVar1[2] = arg1;\n        if (*0x626890 == 0) {\n            *puVar1 = in_RAX;\n            puVar1[1] = unaff_RBX;\n        }\n        else {\n            iVar2 = fcn.0045eb40(in_RAX);\n            fcn.0045eb60(iVar2 + 8, unaff_RBX, in_R8, in_R9);\n        }\n        return;\n    }\n    uVar3 = fcn.0048cd20();\n    puVar1 = fcn.0040cc20();\n    puVar1[1] = unaff_RBX;\n    if (*0x626890 != 0) goto code_r0x0048eccd;\n    *puVar1 = uVar3;\n    do {\n        puVar1[2] = uVar4;\n        fcn.00433560();\ncode_r0x0048eccd:\n        puVar1 = fcn.0045eb40(uVar3);\n    } while( true );\n}\n",
        "token_count": 392
    },
    "0048eea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048eea0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((arg1 & 0x1f) == 0x19) {\n        return *(in_RAX + 0x40);\n    }\n    uVar1 = fcn.0048cd20();\n    puVar2 = fcn.0040cc20();\n    puVar2[1] = unaff_RBX;\n    if (*0x626890 != 0) goto code_r0x0048ef2d;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00433560();\ncode_r0x0048ef2d:\n        puVar2 = fcn.0045eb40(uVar1);\n    } while( true );\n}\n",
        "token_count": 265
    },
    "0048ef80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0048ef80(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    uint32_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = arg1;\n            arg1 = uVar3 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x16) {\n                if (arg1 == 0x12) {\ncode_r0x0048f066:\n                    if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                        if ((uVar3 >> 7 & 1) != 0) {\n                            unaff_RBX = *unaff_RBX;\n                        }\n                        return unaff_RBX;\n                    }\n                    *(*0x20 + -0x30) = 0x48f0a9;\n                    fcn.00433560();\ncode_r0x0048f0a9:\n                    *(*0x20 + -0x30) = 0x48f0b5;\n                    puVar2 = fcn.0040cc20();\n                    puVar2[1] = 0x15;\n                    *puVar2 = 0x4cc2cb;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x30) = 0x48f0df;\n                    fcn.00433560();\n                    goto code_r0x0048f0df;\n                }\n                if (arg1 != 0x13) {\n                    if (arg1 != 0x15) goto code_r0x0048f0a9;\n                    goto code_r0x0048f066;\n                }\n                if ((uVar3 >> 9 & 1) != 0) {\n                    return 0x48f740;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    if ((uVar3 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    if (unaff_RBX != NULL) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    return unaff_RBX;\n                }\n            }\n            else {\n                if (arg1 != 0x16) {\n                    if (arg1 == 0x17) {\n                        return *unaff_RBX;\n                    }\n                    if (arg1 == 0x1a) goto code_r0x0048f066;\n                    goto code_r0x0048f0a9;\n                }\n                if (in_RAX[1] != 0) goto code_r0x0048f066;\n                *(*0x20 + -0x18) = *unaff_RBX;\n                *(*0x20 + -0x30) = 0x48f03f;\n                cVar1 = fcn.004597a0();\n                if (cVar1 != '\\0') {\n                    return *(*0x20 + -0x18);\n                }\ncode_r0x0048f0df:\n                *(*0x20 + -0x30) = 0x48f0f2;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee730;\n            *(*0x20 + -0x30) = 0x48f105;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x48f11a;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1067
    },
    "0048f140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0048f140(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar8;\n    int64_t unaff_RDI;\n    ulong *in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg1;\n            uVar4 = arg1;\n            arg1 = uVar4 & 0x1f;\n            if (arg1 == 0x11) {\n                if ((uVar4 >> 8 & 1) != 0) {\n                    arg1 = *(in_RAX + 0x40);\n                    in_RAX = *(in_RAX + 0x38);\n                    puVar3 = unaff_RBX;\ncode_r0x0048f1a5:\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= arg1)) {\n                        *(*0x20 + -0x28) = in_RAX;\n                        *(*0x20 + -0x20) = puVar3;\n                        *(*0x20 + -0x38) = arg1;\n                        *(*0x20 + -0x50) = 0x48f1e5;\n                        piVar1 = fcn.0040cc20();\n                        *piVar1 = 0;\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1[1] = *(*0x20 + 0x28) - iVar6;\n                        iVar5 = *(*0x20 + -0x38) - iVar6;\n                        piVar1[2] = iVar5;\n                        if (iVar5 < 1) {\n                            if (*0x626890 == 0) {\n                                *piVar1 = *(*0x20 + -0x20);\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x48f25e;\n                                fcn.0045eb60(iVar5, *(*0x20 + -0x20), in_R8, in_R9);\n                            }\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            iVar8 = *(*0x20 + -0x28);\n                            iVar6 = iVar6 * **(iVar8 + 0x30) + *(*0x20 + -0x20);\n                            if (*0x626890 == 0) {\n                                *piVar1 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x48f23c;\n                                fcn.0045eb60(iVar5, iVar6, *(*0x20 + -0x20), in_R9);\n                            }\n                        }\n                        return iVar8;\n                    }\n                    goto code_r0x0048f374;\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    puVar3 = *unaff_RBX;\n                    arg1 = unaff_RBX[2];\n                    in_R8 = puVar3;\n                    goto code_r0x0048f1a5;\n                }\n                if (arg1 == 0x18) {\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= unaff_RBX[1])) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x50) = 0x48f2d0;\n                        piVar2 = fcn.0040cc20();\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1 = *(*0x20 + -0x10) + 1;\n                        if (*piVar1 != iVar6 && iVar6 <= *piVar1) {\n                            iVar5 = **(*0x20 + -0x10);\n                            piVar2[1] = *(*0x20 + 0x28) - iVar6;\n                            iVar5 = iVar5 + iVar6;\n                            if (*0x626890 == 0) {\n                                *piVar2 = iVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x48f30f;\n                                fcn.0045eb60(iVar6, iVar5, in_R8, in_R9);\n                            }\n                        }\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x50) = 0x48f339;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x30) = arg1;\n                *(*0x20 + -0x50) = 0x48f34a;\n                puVar3 = fcn.0040cc20();\n                puVar3[1] = 0x13;\n                *puVar3 = 0x4cb999;\n                arg1 = *(*0x20 + -0x30);\n                puVar3[2] = arg1;\n                *(*0x20 + -0x50) = 0x48f374;\n                fcn.00433560();\ncode_r0x0048f374:\n                *(*0x20 + -0x50) = 0x48f387;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee700;\n            *(*0x20 + -0x50) = 0x48f39a;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x48f3b9;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1669
    },
    "004902e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004902e0(ulong arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    ulong uVar3;\n    int64_t arg3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t noname_0;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_01;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    while (&iStack56 < *(unaff_R14 + 0x10) || &iStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iStack24 = unaff_RBX;\n    uStack16 = in_RAX;\n    iVar2 = fcn.0048f4c0(arg1);\n    iVar2 = (**(iVar2 + 0x98))();\n    if (iVar2 != 0x15) {\n        return NULL;\n    }\n    arg1_00 = fcn.0048e7e0(arg1);\n    iStack32 = fcn.00447160(arg1_00);\n    iStack40 = fcn.00447160(arg1_00);\n    uStack48 = fcn.0048ebe0(arg1);\n    noname_0 = 0;\n    iVar2 = iStack40;\n    uVar9 = 0;\n    uVar7 = arg1_00;\n    iStack56 = iStack32;\n    while (uVar6 = noname_0,  cVar1 = fcn.0048eae0(noname_0, arg1_00, iStack56, in_R9),  cVar1 != '\\0') {\n        uVar3 = fcn.0048e960();\n        iVar4 = iStack56;\n        uVar10 = uVar9 + 1;\n        iVar8 = iVar2;\n        arg3 = iStack56;\n        if (uVar7 < uVar10) {\n            uVar7 = uVar9;\n            iStack24 = iVar2;\n            uStack16 = uVar3;\n            arg3 = fcn.00447240(uVar9);\n            uVar10 = iVar4 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n        }\n        arg2 = uVar9 * 3;\n        *(arg3 + 0x10 + uVar9 * 0x18) = uVar6;\n        arg1_01 = arg3 + uVar9 * 0x18;\n        iVar4 = arg3 + uVar9 * 0x18 + 8;\n        iStack56 = arg3;\n        if (*0x626890 == 0) {\n            *(arg3 + uVar9 * 0x18) = uVar3;\n            *(arg3 + 8 + uVar9 * 0x18) = iVar8;\n        }\n        else {\n            fcn.0045ea40(arg1_01, arg2, arg3, iVar4);\n            fcn.0045eb80(arg1_01, arg2, arg3, iVar4);\n        }\n        uVar3 = fcn.0048ea20();\n        uVar6 = noname_0 + 1;\n        if (arg1_00 < uVar6) {\n            arg1_00 = noname_0;\n            iStack24 = iVar8;\n            uStack16 = uVar3;\n            iVar4 = fcn.00447240(noname_0);\n            uVar6 = iVar2 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n            iVar2 = iVar4;\n        }\n        *(iVar2 + 0x10 + noname_0 * 0x18) = arg1_01;\n        iVar4 = iVar2 + noname_0 * 0x18;\n        in_R9 = iVar2 + noname_0 * 0x18 + 8;\n        uVar9 = uVar10;\n        if (*0x626890 == 0) {\n            *(iVar2 + noname_0 * 0x18) = uVar3;\n            *(iVar2 + 8 + noname_0 * 0x18) = iVar8;\n            noname_0 = uVar6;\n        }\n        else {\n            fcn.0045ea40(iVar4, arg1_00, iVar2, in_R9);\n            fcn.0045eb80(iVar4, arg1_00, iVar2, in_R9);\n            noname_0 = uVar6;\n        }\n    }\n    piVar5 = fcn.0040cc20();\n    piVar5[1] = uVar9;\n    piVar5[2] = uVar7;\n    if (*0x626890 == 0) {\n        *piVar5 = iStack56;\n    }\n    else {\n        piVar5 = fcn.0045eb40(iStack56);\n    }\n    piVar5[4] = noname_0;\n    piVar5[5] = arg1_00;\n    if (*0x626890 == 0) {\n        piVar5[3] = iVar2;\n    }\n    else {\n        piVar5 = fcn.0045eb40(iVar2);\n    }\n    fcn.0047eec0();\n    return piVar5;\n}\n",
        "token_count": 1293
    },
    "004914e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004914e0(ulong arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    uint64_t uVar3;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar2 = arg1;\n            uVar3 = uVar2 & 0x1f;\n            *(*0x20 + -0x10) = uVar3;\n            uVar5 = arg3;\n            if (uVar3 < 0x15) {\n                unaff_RDI = uVar3 - 0x12;\n                if (unaff_RDI < 2) goto code_r0x00491552;\n                if (uVar3 == 0x14) {\ncode_r0x0049153f:\n                    unaff_RBX = *unaff_RBX;\n                    goto code_r0x0049156b;\n                }\n            }\n            else {\n                if (0x16 < uVar3) {\n                    if (uVar3 == 0x17) goto code_r0x0049153f;\n                    if (uVar3 != 0x1a) goto code_r0x004916ef;\n                }\ncode_r0x00491552:\n                if ((uVar2 >> 9 & 1) != 0) {\ncode_r0x00491600:\n                    arg3 = uVar5 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (arg3 < 0x15) {\n                        if (1 < arg3 - 0x12) {\n                            if (arg3 == 0x14) {\ncode_r0x00491634:\n                                unaff_RSI = *unaff_RSI;\n                                goto code_r0x0049165b;\n                            }\ncode_r0x00491681:\n                            *(*0x20 + -0x28) = 0x49168d;\n                            puVar1 = fcn.0040cc20();\n                            puVar1[1] = 0x13;\n                            *puVar1 = 0x4cb986;\n                            puVar1[2] = *(*0x20 + -0x10);\n                            *(*0x20 + -0x28) = 0x4916b7;\n                            fcn.00433560();\n                            goto code_r0x004916b7;\n                        }\n                    }\n                    else if (0x16 < arg3) {\n                        if (arg3 == 0x17) goto code_r0x00491634;\n                        if (arg3 != 0x1a) goto code_r0x00491681;\n                    }\n                    if ((uVar5 >> 9 & 1) != 0) {\n                        return 0;\n                    }\n                    if ((uVar5 >> 7 & 1) != 0) {\n                        unaff_RSI = *unaff_RSI;\n                    }\ncode_r0x0049165b:\n                    if (unaff_RSI != NULL) {\n                        return 0;\n                    }\n                    return 1;\n                }\n                if ((uVar2 >> 7 & 1) != 0) {\n                    unaff_RBX = *unaff_RBX;\n                }\ncode_r0x0049156b:\n                if (unaff_RBX != NULL) goto code_r0x00491600;\n                arg3 = uVar5 & 0x1f;\n                *(*0x20 + -0x10) = arg3;\n                if (arg3 < 0x15) {\n                    if (arg3 - 0x12 < 2) goto code_r0x004915bf;\n                    if (arg3 == 0x14) {\ncode_r0x004915ac:\n                        unaff_RSI = *unaff_RSI;\n                        goto code_r0x004915d4;\n                    }\n                }\n                else {\n                    if (arg3 < 0x17) {\ncode_r0x004915bf:\n                        if ((uVar5 >> 9 & 1) == 0) {\n                            if ((uVar5 >> 7 & 1) != 0) {\n                                unaff_RSI = *unaff_RSI;\n                            }\ncode_r0x004915d4:\n                            if (unaff_RSI == NULL) {\n                                return 0;\n                            }\n                        }\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg3 == 0x17) goto code_r0x004915ac;\n                    if (arg3 == 0x1a) goto code_r0x004915bf;\n                }\ncode_r0x004916b7:\n                *(*0x20 + -0x28) = 0x4916c5;\n                puVar1 = fcn.0040cc20();\n                puVar1[1] = 0x13;\n                *puVar1 = 0x4cb986;\n                puVar1[2] = *(*0x20 + -0x10);\n                *(*0x20 + -0x28) = 0x4916ef;\n                fcn.00433560();\n            }\ncode_r0x004916ef:\n            *(*0x20 + -0x28) = 0x4916fb;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4cb986;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x491725;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x491749;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1677
    },
    "00491a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00491a20(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.00467cc0(arg1);\n        uVar1 = fcn.0044b3e0(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00493260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00493260(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                uVar5 = 0x7ffff80000000000;\n                iVar7 = 0x80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                uVar5 = 0x7ffff800000;\n                iVar7 = 0x800000;\n            }\n            while ((uVar1 = *in_RAX,  (uVar1 & uVar4) != 0 && ((uVar1 & 0x7ffff8) != 0))) {\n                uVar8 = ~uVar4 & uVar1;\n                if ((uVar1 & uVar5) != 0) {\n                    uVar8 = (~uVar4 & uVar1) - iVar7;\n                }\n                uVar8 = uVar8 - 8;\n                LOCK();\n                bVar9 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ uVar8);\n                uVar2 = uVar1 ^ !bVar9 * (uVar1 ^ *in_RAX);\n                if (bVar9) {\n                    if ((uVar1 & uVar5) != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x28) = 0x493312;\n                        uVar2 = fcn.0045a8e0();\n                        uVar8 = *(*0x20 + -0x10);\n                    }\n                    return uVar2 & 0xffffffffffffff00 | (uVar8 & 0x7ffff9) == 1;\n                }\n            }\n            unaff_BL = ' ';\n            *(*0x20 + -0x28) = 0x493345;\n            in_RAX = fcn.00433560(puVar3);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x493354;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 748
    },
    "00493380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00493380(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x4933d3;\n                    uVar3 = fcn.004944c0();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x4933fe;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x493409;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 422
    },
    "00493a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00493a40(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar5 = *(in_RAX + 0x38);\n            if (*(iVar5 + 0x1b8) == 0) {\n                *(*0x20 + -0x58) = 0x493d25;\n                puVar7 = fcn.0040cc20();\n                puVar7[1] = 0x36;\n                *puVar7 = 0x4d1aab;\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = iVar5;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar5 + 0x1b8;\n            iVar2 = *(in_RAX + 0x28);\n            uVar1 = *(iVar5 + 0x21f);\n            *(*0x20 + -0x58) = 0x493a98;\n            iVar5 = fcn.004935c0(uVar1);\n            if (iVar5 != 0) {\n                return 0;\n            }\n            pcVar3 = **(*0x20 + 0x10);\n            *(*0x20 + -0x58) = 0x493ab8;\n            iVar5 = (*pcVar3)();\n            if (iVar5 == 0) {\n                iVar5 = *(*0x20 + 8);\n                if (*(*(iVar5 + 0x38) + 0x21c) != '\\0') {\n                    return *(iVar5 + 0x30);\n                }\n            }\n            else {\n                if (((iVar5 == 0) || (*(iVar5 + 8) != 0x4ba880)) || (*iVar2 != 0x3e5)) {\n                    return 0;\n                }\n                iVar5 = *(*0x20 + 8);\n            }\n            iVar2 = *(iVar5 + 0x28);\n            uVar1 = *(*(*0x20 + -0x10) + 0x21f);\n            *(*0x20 + -0x58) = 0x493b25;\n            iVar5 = fcn.00493700(uVar1);\n            if (iVar5 == 0) {\n                if (*(*(*0x20 + 8) + 0x2c) == 0) {\n                    return *(*(*0x20 + 8) + 0x30);\n                }\n                *(*0x20 + -0x58) = 0x493c86;\n                piVar6 = fcn.0040a440();\n                if (((*0x4eeca0 != 0x4ba880) || (*piVar6 != 0xea)) && ((*0x4eeca0 != 0x4ba880 || (*piVar6 != 0x2738))))\n                {\n                    return 0;\n                }\n                return *(*(*0x20 + 8) + 0x30);\n            }\n            *(*0x20 + -0x20) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if ((iVar5 != 0) && (*(iVar5 + 8) == 0x4bb120)) goto code_r0x00493b9a;\n            if (*0x5d2370 == iVar5) {\n                *(*0x20 + -0x58) = 0x493b5c;\n                cVar4 = fcn.00403780(*0x5d2378);\n                if (cVar4 != '\\0') {\ncode_r0x00493b9a:\n                    piVar6 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x493bad;\n                    iVar5 = fcn.0046c040();\n                    if ((iVar5 != 0) && (((iVar5 == 0 || (*(iVar5 + 8) != 0x4ba880)) || (*piVar6 != 0x490)))) {\n                        do {\n                            *(*0x20 + -0x58) = 0x493d5b;\n                            fcn.00433560();\n                        } while( true );\n                    }\n                    iVar5 = *(*0x20 + 8);\n                    if (*(*(*0x20 + -0x10) + 0x1b8) != 0) {\n                        *(*0x20 + -0x58) = 0x493bfe;\n                        fcn.00459dc0();\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    if (*(iVar5 + 0x2c) == 0) {\n                        return *(iVar5 + 0x30);\n                    }\n                    *(*0x20 + -0x58) = 0x493c19;\n                    fcn.0040a440();\n                    return 0;\n                }\n                iVar5 = *(*0x20 + -0x28);\n            }\n            if (*0x5cad10 == iVar5) {\n                *(*0x20 + -0x58) = 0x493b92;\n                cVar4 = fcn.00403780(*0x5cad18);\n                if (cVar4 != '\\0') goto code_r0x00493b9a;\n            }\n            pcVar3 = *(*(*0x20 + -0x28) + 0x18);\n            *(*0x20 + -0x58) = 0x493d72;\n            (*pcVar3)();\n            *(*0x20 + -0x58) = 0x493d8b;\n            fcn.0044ac00(0x22);\n            *(*0x20 + -0x58) = 0x493d90;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x58) = 0x493d9f;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x493daf;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1596
    },
    "004945e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004945e0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = fcn.00492fe0();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x5d2370;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x4eec18;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.0046c040(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00459e20();\n    }\n    uVar2 = fcn.00493380();\n    fcn.0045a7c0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "00494740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00494740(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = fcn.00493100();\n    if (cVar1 == '\\0') {\n        iVar3 = *0x5d2370;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar3 = 0x4eec18;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (iVar3 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x494b40);\n        ppcStack16 = auStack40;\n        if (0x40000000 < arg1) {\n            arg1 = 0x40000000;\n        }\n        if (*(in_RAX + 0x21f) == '\\0') {\n            *(in_RAX + 0x58) = arg1;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x60) = 0;\n            }\n            else {\n                fcn.0045eb40();\n            }\n            if (arg1 != NULL) {\n                if (*0x626890 == 0) {\n                    *(in_RAX + 0x60) = unaff_RBX;\n                }\n                else {\n                    fcn.0045eb40();\n                }\n            }\n            uVar2 = fcn.00493a40();\n            bVar4 = false;\n        }\n        else {\n            LOCK();\n            bVar4 = *(in_RAX + 0x1c0) == 0;\n            if (bVar4) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar4) {\n                fcn.004658a0();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x494ae0);\n            ppcStack24 = auStack56;\n            if (*(in_RAX + 0x220) == '\\x02') {\n                uVar2 = fcn.00494ba0(arg1);\n            }\n            else {\n                uVar2 = fcn.0046b440(arg1, in_RAX);\n                if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4ba880)) &&\n                   (*arg1 == 0x3e3)) {\n                    unaff_RBX = *0x5d2370;\n                }\n            }\n            if (unaff_RBX != 0) {\n                uVar2 = 0;\n            }\n            bVar4 = true;\n        }\n        if (bVar4) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 788
    },
    "00494ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00494ba0(uint32_t *arg1)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint32_t *in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    ulong uVar9;\n    uint32_t *puVar10;\n    uint32_t *arg1_00;\n    uint32_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t *in_R8;\n    uint32_t *in_R9;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t unaff_R14;\n    \n    while (puVar11 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00495033:\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x49504c;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    }\n    puVar11 = *0x20 + -0x70;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == NULL) {\n        return 0;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (*(in_RAX + 0x78) == 0) {\n        uVar9 = 10000;\n        *(*0x20 + -0x78) = 0x494bff;\n        uVar4 = fcn.00447160(10000);\n        iVar6 = *(*0x20 + 8);\n        *(iVar6 + 0x1e8) = 0;\n        *(iVar6 + 0x1f0) = 10000;\n        if (*0x626890 == 0) {\n            *(iVar6 + 0x1e0) = uVar4;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x494c38;\n            fcn.0045ea40(uVar9, iVar6, in_R8, in_R9);\n        }\n        uVar9 = 40000;\n        *(*0x20 + -0x78) = 0x494c4b;\n        uVar4 = fcn.00447160(40000);\n        in_RAX = *(*0x20 + 8);\n        *(in_RAX + 0x80) = 0;\n        *(in_RAX + 0x82) = 40000;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x7e) = uVar4;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x494c85;\n            fcn.0045ea40(uVar9, in_RAX, in_R8, in_R9);\n        }\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\ncode_r0x00494cbd:\n    if (*(in_RAX + 0x80) != *(in_RAX + 0x84) && *(in_RAX + 0x84) <= *(in_RAX + 0x80)) goto code_r0x00494e51;\n    *(*0x20 + -0x40) = *(in_RAX + 0x7c) - *(in_RAX + 0x7a);\n    *(*0x20 + -0x78) = 0x494cf0;\n    uVar5 = fcn.0040cc20();\n    iVar6 = *(*0x20 + -0x40);\n    if (*(*0x20 + 0x18) < *(*0x20 + -0x40)) {\n        iVar6 = *(*0x20 + 0x18);\n    }\n    unaff_RBX = *(*0x20 + 8);\n    in_RAX = *(unaff_RBX + 0x7c);\n    unaff_RDI = *(unaff_RBX + 0x78);\n    in_R8 = *(unaff_RBX + 0x7a);\n    arg1 = in_R8 + 1;\n    if (arg1 <= in_RAX) {\n        if (in_R8 < arg1) {\n            *(*0x20 + -0x10) = uVar5;\n            pcVar3 = **0x5ca590;\n            unaff_RBX = unaff_RDI + in_R8 * 2;\n            *(*0x20 + -0x78) = 0x494d5c;\n            iVar6 = (*pcVar3)(iVar6, *0x5ca590);\n            if (iVar6 != 0) {\n                return 0;\n            }\n            in_RAX = *(*0x20 + 8);\n            in_R8 = *(in_RAX + 0x78);\n            arg1_00 = *(in_RAX + 0x7c);\n            arg1 = *(*0x20 + -0x10);\n            puVar10 = *arg1 + *(in_RAX + 0x7a);\n            if (puVar10 <= arg1_00) {\n                *(*0x20 + -0x48) = puVar10;\n                *(*0x20 + -0x20) = in_R8;\n                *(in_RAX + 0x7a) = 0;\n                unaff_RBX = *(in_RAX + 0x82);\n                *(*0x20 + -0x28) = unaff_RBX;\n                iVar6 = *(in_RAX + 0x7e);\n                *(*0x20 + -0x18) = iVar6;\n                puVar7 = NULL;\n                arg1_00 = NULL;\n                do {\n                    if (puVar7 < puVar10) {\n                        if (puVar7 < puVar10) {\n                            uVar2 = *(in_R8 + puVar7 * 2);\n                            uVar13 = uVar2;\n                            puVar8 = puVar7;\n                            if (uVar13 - 0xd800 < 0x800) {\n                                puVar8 = puVar7 + 1;\n                                if (puVar10 != puVar8) {\n                                    if (puVar8 < puVar10) {\n                                        if ((uVar13 < 0xdc00) &&\n                                           (uVar14 = *(in_R8 + puVar7 * 2 + 2) - 0xdc00,  uVar14 < 0x400)) {\n                                            uVar13 = ((uVar13 - 0xd800) * 0x400 | uVar14) + 0x10000;\n                                        }\n                                        else {\n                                            uVar13 = 0xfffd;\n                                        }\n                                        if (uVar13 == 0xfffd) {\n                                            puVar8 = puVar7;\n                                        }\n                                        goto code_r0x00494f8f;\n                                    }\n                                    goto code_r0x00494ffb;\n                                }\n                                if (*arg1 == 0) {\n                                    uVar13 = 0xfffd;\n                                    puVar8 = puVar7;\n                                    goto code_r0x00494f8f;\n                                }\n                                in_R8 = *(in_RAX + 0x7c);\n                                if (*(in_RAX + 0x7c) != NULL) {\n                                    *(in_RAX + 0x7a) = 1;\n                                    in_R8 = *(in_RAX + 0x78);\n                                    *in_R8 = uVar2;\n                                    goto code_r0x00494df1;\n                                }\n                            }\n                            else {\ncode_r0x00494f8f:\n                                *(*0x20 + -0x30) = arg1_00;\n                                *(*0x20 + -0x38) = puVar8;\n                                in_RAX = unaff_RBX - arg1_00;\n                                in_R8 = (-in_RAX >> 0x3f & arg1_00) + iVar6;\n                                uVar5 = uVar13;\n                                *(*0x20 + -0x78) = 0x494fc5;\n                                iVar6 = fcn.0047e900();\n                                puVar10 = iVar6 + *(*0x20 + -0x30);\n                                unaff_RBX = *(*0x20 + -0x28);\n                                arg1_00 = puVar10;\n                                if (puVar10 <= unaff_RBX) goto code_r0x00494ed5;\n                                *(*0x20 + -0x78) = 0x494ffb;\n                                fcn.0045ef60(puVar10, unaff_RBX);\n                                unaff_RBX = in_RAX;\ncode_r0x00494ffb:\n                                *(*0x20 + -0x78) = 0x495005;\n                                fcn.0045eee0(puVar10);\n                            }\n                            arg1_00 = in_R8;\n                            puVar10 = 0x1;\n                            *(*0x20 + -0x78) = 0x495012;\n                            in_R8 = arg1_00;\n                            fcn.0045ef60(1, arg1_00);\n                        }\n                        *(*0x20 + -0x78) = 0x495017;\n                        fcn.0045eee0(puVar10);\n                        break;\n                    }\ncode_r0x00494df1:\n                    *(in_RAX + 0x80) = arg1_00;\n                    *(in_RAX + 0x82) = unaff_RBX;\n                    if (*0x626890 == 0) {\n                        *(in_RAX + 0x7e) = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x494e25;\n                        fcn.0045eb60(puVar10, iVar6, in_R8, arg1);\n                    }\n                    *(in_RAX + 0x84) = 0;\n                    if (*arg1 != 0) goto code_r0x00494caa;\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\ncode_r0x00494e51:\n                    arg1_00 = *(in_RAX + 0x80);\n                    iVar6 = *(in_RAX + 0x7e);\n                    uVar5 = *(in_RAX + 0x82);\n                    puVar10 = *(in_RAX + 0x84);\n                    if (puVar10 <= arg1_00) {\n                        iVar12 = 0;\n                        goto code_r0x00494e90;\n                    }\n                    *(*0x20 + -0x78) = 0x494ed5;\n                    unaff_RBX = arg1_00;\n                    fcn.0045efa0(arg1_00);\ncode_r0x00494ed5:\n                    puVar7 = *(*0x20 + -0x38) + 1;\n                    arg1 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    puVar10 = *(*0x20 + -0x48);\n                    in_R8 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                } while( true );\n            }\n            *(*0x20 + -0x78) = 0x49501c;\n            fcn.0045ef60(puVar10, arg1_00);\n            unaff_RDI = uVar5;\n        }\n        *(*0x20 + -0x78) = 0x495027;\n        fcn.0045eee0(arg1);\n    }\n    *(*0x20 + -0x78) = 0x495032;\n    in_R9 = arg1;\n    in_RAX = fcn.0045ef60(arg1, in_RAX);\n    goto code_r0x00495033;\ncode_r0x00494caa:\n    arg1 = *(*0x20 + 0x18);\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x00494cbd;\ncode_r0x00494e90:\n    if ((arg1_00 - puVar10 <= iVar12) || (arg1 <= iVar12)) goto code_r0x00494eb2;\n    cVar1 = *(iVar6 + (puVar10 - uVar5 >> 0x3f & puVar10) + iVar12);\n    if (cVar1 == '\\x1a') {\n        if (iVar12 == 0) {\n            *(in_RAX + 0x84) = *(in_RAX + 0x84) + 1;\n        }\ncode_r0x00494eb2:\n        *(in_RAX + 0x84) = *(in_RAX + 0x84) + iVar12;\n        return iVar12;\n    }\n    *(unaff_RBX + iVar12) = cVar1;\n    iVar12 = iVar12 + 1;\n    goto code_r0x00494e90;\n}\n",
        "token_count": 3122
    },
    "004950e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004950e0(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t *arg3;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          auStack40 + 8 < *(unaff_R14 + 0x10) || auStack40 + 8 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = fcn.00493100();\n    if (cVar1 == '\\0') {\n        iVar6 = *0x5d2370;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar6 = 0x4eec18;\n        }\n    }\n    else {\n        iVar6 = 0;\n    }\n    if (iVar6 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x495600);\n        ppcStack16 = auStack40;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            bVar7 = false;\n        }\n        else {\n            LOCK();\n            bVar7 = *(in_RAX + 0x1c0) == 0;\n            if (bVar7) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar7) {\n                fcn.004658a0();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x4955a0);\n            ppcStack24 = auStack56;\n            bVar7 = true;\n        }\n        iVar6 = 0;\n        while( true ) {\n            if (arg1 == NULL) {\n                if (bVar7) {\n                    (**ppcStack24)();\n                }\n                (**ppcStack16)();\n                return iVar6;\n            }\n            arg3 = arg1;\n            if (0x40000000 < arg1) {\n                arg3 = 0x40000000;\n            }\n            if (*(in_RAX + 0x21f) == '\\0') {\n                *(in_RAX + 0x128) = arg3;\n                iVar4 = in_RAX + 0x130;\n                iVar3 = in_RAX;\n                piVar2 = arg1;\n                iVar5 = iVar6;\n                if (*0x626890 == 0) {\n                    *(in_RAX + 0x130) = 0;\n                }\n                else {\n                    fcn.0045eba0(in_RAX, arg1, arg3, iVar4);\n                }\n                if (arg3 != NULL) {\n                    if (*0x626890 == 0) {\n                        *(iVar3 + 0x130) = unaff_RBX;\n                    }\n                    else {\n                        fcn.0045eb80(iVar3, piVar2, iVar5, iVar4);\n                    }\n                }\n                iVar4 = 0x4d27e0;\n                piVar2 = fcn.00493a40();\n            }\n            else {\n                iVar4 = unaff_RBX;\n                if (*(in_RAX + 0x220) == '\\x02') {\n                    piVar2 = fcn.00495660(arg3);\n                }\n                else {\n                    piVar2 = fcn.0046b500(arg3, arg1);\n                    if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4ba880)) &&\n                       (*arg3 == 0x3e3)) {\n                        iVar4 = *0x5d2370;\n                    }\n                }\n                if (iVar4 != 0) {\n                    piVar2 = NULL;\n                }\n            }\n            iVar6 = iVar6 + piVar2;\n            if (iVar4 != 0) break;\n            if (arg1 < piVar2) {\n                fcn.0045efa0(arg1);\n                fcn.004329e0();\n                return 0;\n            }\n            unaff_RDI = unaff_RDI - piVar2;\n            arg1 = arg1 - piVar2;\n            unaff_RBX = unaff_RBX + (piVar2 & -unaff_RDI >> 0x3f);\n        }\n        if (bVar7) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return iVar6;\n    }\n    return 0;\n}\n",
        "token_count": 1107
    },
    "00495660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * fcn.00495660(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *arg4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint8_t *unaff_RDI;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00495660:\n    puVar8 = *0x20;\n    puVar9 = unaff_RDI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x448 && *0x20 + -0x448 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x4c8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x4d8) = *0x20 + -8;\n        *(*0x20 + -0x4d0) = 0x4956bb;\n        iVar3 = fcn.0045f060();\n        unaff_RBP = *(*0x20 + -0x4d8);\n        puVar9 = *(iVar3 + 0x1d0);\n        puVar10 = *(iVar3 + 0x1d8);\n        uVar4 = *(iVar3 + 0x1c8);\n        *(*0x20 + -0x10) = iVar3 + 0x1c8;\n        puVar7 = arg1;\n        if (puVar9 != NULL) {\n            *(*0x20 + -0x438) = puVar9 + arg1;\n            if (puVar10 < puVar9 + arg1) {\n                *(*0x20 + -0x440) = puVar9;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x4d0) = 0x49571f;\n                uVar4 = fcn.00447240(puVar9);\n                arg1 = *(*0x20 + 0x18);\n                puVar10 = puVar9;\n            }\n            *(*0x20 + -0x440) = puVar10;\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x4d0) = 0x495756;\n            fcn.0045f840(arg1);\n            iVar3 = *(*0x20 + 8);\n            *(iVar3 + 0x1d0) = in_XMM15;\n            if (*0x626890 == 0) {\n                *(iVar3 + 0x1c8) = 0;\n            }\n            else {\n                *(*0x20 + -0x4d0) = 0x495795;\n                fcn.0045eb40(0);\n            }\n            unaff_RDI = *(*0x20 + -0x440);\n            arg1 = *(*0x20 + -0x438);\n            unaff_RBX = *(*0x20 + -0x18);\n            puVar7 = *(*0x20 + 0x18);\n        }\n        puVar9 = 0x100;\n        puVar10 = NULL;\n        arg4 = *0x20 + -0x430;\n        do {\n            *(*0x20 + -0x468) = puVar9;\n            *(*0x20 + -0x470) = puVar10;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x460) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (arg1 < 4) {\n                if (arg1 == NULL) {\ncode_r0x00495973:\n                    if (arg1 != NULL) {\n                        *(*0x20 + -0x4d0) = 0x495988;\n                        uVar5 = fcn.00447160(arg1);\n                        uVar4 = *(*0x20 + -0x460);\n                        iVar3 = *(*0x20 + 8);\n                        *(iVar3 + 0x1d0) = uVar4;\n                        *(iVar3 + 0x1d8) = uVar4;\n                        if (*0x626890 == 0) {\n                            *(iVar3 + 0x1c8) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x4d0) = 0x4959c5;\n                            fcn.0045ea40(uVar4, iVar3, puVar10, arg4);\n                        }\n                        unaff_RBX = *(*0x20 + -0x20);\n                        if (unaff_RBX != *(iVar3 + 0x1c8)) {\n                            *(*0x20 + -0x4d0) = 0x4959de;\n                            fcn.0045f840(uVar4);\n                        }\n                        puVar7 = *(*0x20 + 0x18);\n                        puVar9 = *(*0x20 + -0x468);\n                        puVar10 = *(*0x20 + -0x470);\n                        arg4 = *(*0x20 + -0x28);\n                    }\n                    goto code_r0x00495a20;\n                }\n                if (arg1 < (*(*unaff_RBX + 0x560580) & 7)) {\n                    iVar3 = (*(*unaff_RBX + 0x560580) >> 4) * 2;\n                    if ((arg1 < 2) ||\n                       (((*(iVar3 + 0x55d160) <= unaff_RBX[1] && (unaff_RBX[1] <= *(iVar3 + 0x55d161))) &&\n                        ((arg1 < 3 || ((0x7f < unaff_RBX[2] && (unaff_RBX[2] < 0xc0)))))))) goto code_r0x00495973;\n                }\n            }\n            *(*0x20 + -0x458) = unaff_RDI;\n            *(*0x20 + -0x4d0) = 0x4958e5;\n            uVar2 = fcn.0047e460(unaff_RDI);\n            puVar9 = *(*0x20 + -0x470);\n            puVar10 = puVar9 + 1;\n            if (*(*0x20 + -0x468) < puVar10) {\n                *(*0x20 + -0x484) = uVar2;\n                *(*0x20 + -0x448) = arg1;\n                iVar3 = *(*0x20 + -0x28);\n                *(*0x20 + -0x4d0) = 0x495925;\n                arg4 = fcn.00447240(puVar9);\n                puVar10 = iVar3 + 1;\n                unaff_RBX = *(*0x20 + -0x448);\n                uVar2 = *(*0x20 + -0x484);\n                puVar7 = *(*0x20 + -0x470);\n            }\n            else {\n                arg4 = *(*0x20 + -0x28);\n                puVar7 = puVar9;\n                unaff_RBX = arg1;\n                puVar9 = *(*0x20 + -0x468);\n            }\n            *(arg4 + puVar7 * 4) = uVar2;\n            arg1 = *(*0x20 + -0x460);\n            if (arg1 < unaff_RBX) goto code_r0x00495b9e;\n            unaff_RDI = *(*0x20 + -0x458) - unaff_RBX;\n            arg1 = arg1 + -unaff_RBX;\n            unaff_RBX = (unaff_RBX & -unaff_RDI >> 0x3f) + *(*0x20 + -0x20);\n            puVar7 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00495ba7;\ncode_r0x00495a20:\n    if (puVar10 == NULL) {\n        return puVar7;\n    }\n    arg1 = puVar10;\n    if (16000 < puVar10) {\n        arg1 = 0x3e80;\n    }\n    if (puVar9 < arg1) goto code_r0x00495b96;\n    if (puVar10 < arg1) goto code_r0x00495b8b;\n    *(*0x20 + -0x468) = puVar9;\n    *(*0x20 + -0x470) = puVar10;\n    *(*0x20 + -0x28) = arg4;\n    *(*0x20 + -0x450) = arg1;\n    *(*0x20 + -0x4d0) = 0x495a77;\n    unaff_RBX = fcn.00467b20(puVar9);\n    iVar3 = *(*0x20 + -0x468);\n    iVar1 = *(*0x20 + -0x450);\n    *(*0x20 + -0x468) = iVar3 - iVar1;\n    puVar10 = *(*0x20 + -0x470) - iVar1;\n    *(*0x20 + -0x470) = puVar10;\n    arg4 = *(*0x20 + -0x28) + (iVar1 << 2 & -(iVar3 - iVar1) >> 0x3f);\n    *(*0x20 + -0x28) = arg4;\n    while (arg1 != NULL) {\n        *(*0x20 + -0x478) = puVar9;\n        *(*0x20 + -0x480) = arg1;\n        *(*0x20 + -0x30) = unaff_RBX;\n        *(*0x20 + -0x488) = 0;\n        puVar10 = *(*(*0x20 + 8) + 0x10);\n        puVar9 = *0x20 + -0x488;\n        *(*0x20 + -0x4d0) = 0x495b55;\n        iVar3 = fcn.0046e520(arg1);\n        if (iVar3 != 0) {\n            return NULL;\n        }\n        uVar6 = *(*0x20 + -0x488);\n        arg1_00 = *(*0x20 + -0x480);\n        if (arg1_00 < uVar6) {\n            *(*0x20 + -0x4d0) = 0x495b8b;\n            fcn.0045efa0(arg1_00);\n            goto code_r0x00495b8b;\n        }\n        puVar9 = *(*0x20 + -0x478) - uVar6;\n        unaff_RBX = (uVar6 << 1 & -puVar9 >> 0x3f) + *(*0x20 + -0x30);\n        arg4 = *(*0x20 + -0x28);\n        puVar10 = *(*0x20 + -0x470);\n        arg1 = arg1_00 - uVar6;\n    }\n    puVar7 = *(*0x20 + 0x18);\n    puVar9 = *(*0x20 + -0x468);\n    unaff_RBX = arg1;\n    goto code_r0x00495a20;\ncode_r0x00495b8b:\n    arg1 = puVar10;\n    *(*0x20 + -0x4d0) = 0x495b96;\n    fcn.0045efa0(arg1);\ncode_r0x00495b96:\n    *(*0x20 + -0x4d0) = 0x495b9e;\n    fcn.0045ef60(arg1, puVar9);\ncode_r0x00495b9e:\n    *(*0x20 + -0x4d0) = 0x495ba6;\n    in_RAX = fcn.0045efa0(arg1);\ncode_r0x00495ba7:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = puVar9;\n    *(puVar8 + -8) = 0x495bc5;\n    fcn.0045c800();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    *0x20 = puVar8;\n    goto code_r0x00495660;\n}\n",
        "token_count": 2957
    },
    "00495d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t fcn.00495d60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int16_t *piVar5;\n    uint64_t arg1;\n    uint64_t uVar6;\n    int16_t *noname_0;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uint64_t uStack40;\n    uint64_t uStack24;\n    uchar auStack32 [16];\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack40 = 0;\n    if ((in_RAX != 0) && (*(in_RAX + 0x20) != 0)) {\n        iVar1 = fcn.00491d00(0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        auStack56 = ZEXT816(0x496080);\n        noname_0 = NULL;\n        auStack32 = in_XMM15;\n        while( true ) {\n            for (piVar5 = noname_0; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n            uVar2 = piVar5 - noname_0 >> 1;\n            if (uVar2 == 0) break;\n            if (0x3fffffff < uVar2) {\n                fcn.0045f000(noname_0, uVar2);\n                fcn.004329e0();\n                return uStack40;\n            }\n            uVar3 = fcn.00467cc0(uVar2);\n            uVar4 = fcn.0044b3e0(uVar2);\n            uVar2 = uStack40;\n            arg1 = SUB168(auStack32, 0);\n            uVar6 = arg1;\n            if (uStack24 < arg1 + 1) {\n                uStack40 = fcn.00447240(arg1);\n                uVar6 = uVar2;\n                uStack24 = arg1;\n            }\n            auStack32 = CONCAT88(uStack24, uVar6 + 1);\n            iVar1 = uVar6 * 0x10;\n            *(uStack40 + 8 + iVar1) = uVar3;\n            piVar5 = noname_0 + (piVar5 - noname_0) + 2U;\n            if (*0x626890 == 0) {\n                *(uStack40 + iVar1) = uVar4;\n                noname_0 = piVar5;\n            }\n            else {\n                fcn.0045ea40(iVar1, uStack40, noname_0, in_R9);\n                noname_0 = piVar5;\n            }\n        }\n        (*auStack56._0_8_)();\n        return uStack40;\n    }\n    uVar2 = fcn.00468ce0();\n    return uVar2;\n}\n",
        "token_count": 728
    },
    "004962c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004962c0(int64_t arg1, ulong noname_1, ulong *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong *puVar8;\n    int64_t arg1_00;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong *unaff_RDI;\n    int64_t iVar12;\n    ulong uVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x58 && *0x20 + -0x58 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if ((arg3 == NULL) || (arg3[8] != 0)) {\ncode_r0x004963ca:\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                uVar13 = arg3[1];\n                *(*0x20 + -0x50) = *arg3;\n                *(*0x20 + -0x48) = uVar13;\n                iVar10 = arg3[2];\n                uVar13 = arg3[3];\n                uVar4 = arg3[4];\n                *(*0x20 + -0x40) = iVar10;\n                *(*0x20 + -0x38) = uVar13;\n                *(*0x20 + -0x30) = uVar4;\n                uVar13 = arg3[8];\n                *(*0x20 + -0x10) = uVar13;\n                if (iVar10 == 0) {\n                    *(*0x20 + -0xe0) = 0x49644d;\n                    uVar4 = fcn.00495d60();\n                    *(*0x20 + -0x38) = unaff_RBX;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x40) = uVar4;\n                    if (unaff_RDI != NULL) {\n                        return 0;\n                    }\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar4 = arg3[6];\n                *(*0x20 + -0x70) = uVar4;\n                *(*0x20 + -0xe0) = 0x496489;\n                uVar4 = fcn.00447160(uVar4);\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                *(*0x20 + -0x28) = uVar4;\n                iVar10 = *(*0x20 + 0x30);\n                iVar9 = *(iVar10 + 0x28);\n                *(*0x20 + -0x58) = iVar9;\n                iVar12 = *(iVar10 + 0x30);\n                *(*0x20 + -0x70) = iVar12;\n                for (iVar5 = 0; iVar5 < iVar12; iVar5 = iVar5 + 1) {\n                    piVar1 = *(iVar9 + iVar5 * 8);\n                    if (piVar1 == NULL) {\n                        uVar13 = 0xffffffffffffffff;\n                    }\n                    else {\n                        uVar13 = *(*piVar1 + 0x10);\n                    }\n                    arg1_00 = *(*0x20 + -0x20);\n                    iVar2 = *(*0x20 + -0x28);\n                    iVar6 = iVar2;\n                    if (*(*0x20 + -0x18) < arg1_00 + 1U) {\n                        *(*0x20 + -0x78) = iVar5;\n                        *(*0x20 + -0x98) = uVar13;\n                        *(*0x20 + -0xe0) = 0x496555;\n                        iVar6 = fcn.00447240(arg1_00);\n                        *(*0x20 + -0x18) = arg1_00;\n                        *(*0x20 + -0x28) = iVar6;\n                        iVar10 = *(*0x20 + 0x30);\n                        iVar9 = *(*0x20 + -0x58);\n                        iVar12 = *(*0x20 + -0x70);\n                        uVar13 = *(*0x20 + -0x98);\n                        iVar5 = *(*0x20 + -0x78);\n                        arg1_00 = iVar2;\n                    }\n                    *(*0x20 + -0x20) = arg1_00 + 1;\n                    *(iVar6 + arg1_00 * 8) = uVar13;\n                }\n                uVar4 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x20);\n                puVar11 = *0x20 + -0x50;\n                *(*0x20 + -0xe0) = 0x4965c5;\n                uVar7 = fcn.00469e60(iVar9, iVar10, puVar11);\n                if (iVar9 != 0) {\n                    *(*0x20 + -0x60) = uVar3;\n                    *(*0x20 + -0x80) = iVar9;\n                    *(*0x20 + -0xe0) = 0x4965e5;\n                    puVar8 = fcn.0040cc20();\n                    puVar8[1] = 9;\n                    *puVar8 = 0x4c94cf;\n                    uVar4 = *(*0x20 + 0x10);\n                    puVar8[3] = uVar4;\n                    if (*0x626890 == 0) {\n                        puVar8[2] = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xe0) = 0x49662b;\n                        puVar8 = fcn.0045eb60(uVar4, *(*0x20 + 8), puVar11, uVar13);\n                    }\n                    puVar8[4] = *(*0x20 + -0x80);\n                    if (*0x626890 == 0) {\n                        puVar8[5] = *(*0x20 + -0x60);\n                    }\n                    else {\n                        *(*0x20 + -0xe0) = 0x496656;\n                        fcn.0045eb60(uVar4, *(*0x20 + -0x60), puVar11, uVar13);\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x90) = uVar7;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0xe0) = 0x496688;\n                puVar8 = fcn.0040cc20();\n                *(*0x20 + -0x68) = puVar8;\n                *puVar8 = *(*0x20 + -0x90);\n                puVar8[1] = *(*0x20 + -0x88);\n                *(*0x20 + -0xe0) = 0x4966bb;\n                fcn.00416c20(0x4b5c40);\n                return *(*0x20 + -0x68);\n            }\n            uVar13 = *arg3;\n            if (arg3[1] == 0) goto code_r0x004963ca;\n            *(*0x20 + -0xe0) = 0x496345;\n            fcn.00499020();\n            if (arg1 == 0) {\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                goto code_r0x004963ca;\n            }\n            if (arg1 == 0x4eeb38) {\n                unaff_RDI[1] = 5;\n                if (*0x626890 == 0) {\n                    *unaff_RDI = 0x4c8b58;\n                }\n                else {\n                    *(*0x20 + -0xe0) = 0x4963b5;\n                    fcn.0045eb60(0x4eeb38, 0x4c8b58, arg3, uVar13);\n                }\n                return 0;\n            }\n            unaff_RBX = 0x4b9a80;\n            arg1 = 0x4b9280;\n            *(*0x20 + -0xe0) = 0x4966ea;\n            in_RAX = fcn.0040a260(0x4b9280);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + 0x28) = unaff_RSI;\n        *(puVar11 + 0x30) = arg3;\n        *(puVar11 + -8) = 0x49670e;\n        fcn.0045c800();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        unaff_RSI = *(puVar11 + 0x28);\n        arg3 = *(puVar11 + 0x30);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2443
    },
    "00496740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00496740(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    iVar4 = *(in_RAX + 8);\n    if (iVar4 != -1) {\n        if (*(in_RAX + 0x10) != 0) {\n            return *0x5d2540;\n        }\n        if (*0x5cada0 == unaff_RBX) {\n            iVar2 = iVar4;\n            cVar1 = fcn.00403780(*0x5cada8);\n            if (cVar1 != '\\0') {\n                iVar2 = fcn.0046c860(0xffffffffffffffff, iVar2, 0, 0);\n                if (iVar2 != 0) {\n                    iStack40 = iVar4;\n                    puVar3 = fcn.0040cc20();\n                    puVar3[1] = 0xf;\n                    *puVar3 = 0x4ca68f;\n                    puVar3[2] = iVar2;\n                    if (*0x626890 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        fcn.0045eb40(iStack40);\n                    }\n                    return 0x4eebb8;\n                }\n                auStack56 = ZEXT816(0x496a40);\n                ppcStack16 = auStack56;\n                iVar4 = fcn.0046e2a0();\n                if (iVar4 == 0) {\n                    uVar5 = 0;\n                    puVar3 = NULL;\n                }\n                else {\n                    iStack40 = 1;\n                    puVar3 = fcn.0040cc20();\n                    puVar3[1] = 0x10;\n                    *puVar3 = 0x4caac5;\n                    puVar3[2] = iVar4;\n                    if (*0x626890 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        puVar3 = fcn.0045eb40(iStack40);\n                    }\n                    uVar5 = 0x4eebb8;\n                }\n                auStack32 = CONCAT88(puVar3, uVar5);\n                (**ppcStack16)();\n                return auStack32._0_8_;\n            }\n        }\n        return 0x4eec98;\n    }\n    return 0x4eec98;\n}\n",
        "token_count": 675
    },
    "00496aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00496aa0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = -1;\n    if (iVar1 != -1) {\n        iVar1 = fcn.0046c140();\n        if (iVar1 != 0) {\n            puVar2 = fcn.0040cc20();\n            puVar2[1] = 0xb;\n            *puVar2 = 0x4c9976;\n            puVar2[2] = iVar1;\n            if (*0x626890 == 0) {\n                puVar2[3] = unaff_RBX;\n            }\n            else {\n                fcn.0045eb40(unaff_RBX);\n            }\n            return 0x4eebb8;\n        }\n        fcn.00416c20(0);\n        return 0;\n    }\n    return 0x4eec98;\n}\n",
        "token_count": 290
    },
    "00496ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00496ca0(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack80;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX == 0) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00447240(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00447240(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x00496e62:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00447240(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.00447240(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack80 = piVar5;\n                goto code_r0x00496edf;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00496e62;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045efa0(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x00496edf:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00447240(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack80;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00447240(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00447240(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1706
    },
    "004970e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004970e0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t uVar4;\n    uint64_t arg1;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = 0;\n    uVar4 = 0;\n    iVar6 = 0;\n    while (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.00496ca0();\n            uVar3 = fcn.0044afa0(unaff_RBX);\n            uVar7 = uVar4 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar4;\n                arg2 = fcn.00447240(uVar4);\n                uVar7 = iVar6 + 1;\n            }\n            iVar5 = uVar4 * 0x10;\n            *(arg2 + 8 + iVar5) = uVar2;\n            in_RAX = uVar1;\n            uVar4 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x626890 == 0) {\n                *(arg2 + iVar5) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.0045ea40(arg1, arg2, arg2 + iVar5, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 504
    },
    "00497660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00497660(ulong arg1)\n\n{\n    ulong noname_1;\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *0x5d2500;\n    if (in_RAX != NULL) {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        iVar2 = fcn.004950e0(arg1);\n        if (iVar2 < 0) {\n            iVar2 = 0;\n        }\n        if (unaff_RBX != 0) {\n            if (*0x5d23d0 == unaff_RBX) {\n                cVar1 = fcn.00403780(*0x5d23d8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') {\n                if ((*0x5d2370 == unaff_RBX) && (cVar1 = fcn.00403780(*0x5d2378),  cVar1 != '\\0')) {\n                    arg1 = *0x5d24d8;\n                    unaff_RBX = *0x5d24d0;\n                }\n                puVar3 = fcn.0040cc20();\n                puVar3[1] = 5;\n                *puVar3 = 0x4c8be4;\n                noname_1 = *(*in_RAX + 0x228);\n                arg1_00 = *(*in_RAX + 0x230);\n                puVar3[3] = arg1_00;\n                if (*0x626890 == 0) {\n                    puVar3[2] = noname_1;\n                }\n                else {\n                    puVar3 = fcn.0045eb60(arg1_00, noname_1, in_R8, in_R9);\n                }\n                puVar3[4] = unaff_RBX;\n                if (*0x626890 == 0) {\n                    puVar3[5] = arg1;\n                }\n                else {\n                    fcn.0045eb60(arg1_00, arg1, in_R8, in_R9);\n                }\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 590
    },
    "00497d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00497f2a)\n// WARNING: Removing unreachable block (ram,0x00497fa7)\n\nint64_t * fcn.00497d80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    char cVar1;\n    ulong in_RAX;\n    int64_t *piVar2;\n    uint64_t arg2_00;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        piVar2 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xf0) = 0x497dbb;\n            piVar2 = fcn.00498d40();\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            if ((unaff_RBX == 0x2) && (*(piVar2 + 1) == ':')) {\n                unaff_RDI = 0x4c874c;\n                *(*0x20 + -0xf0) = 0x497df0;\n                arg2_00 = fcn.0044ac00(2);\n            }\n            else if (unaff_RBX == NULL) {\n                piVar2 = 0x2;\n                arg2_00 = 0x4c87c6;\n            }\n            else {\n                cVar1 = *(unaff_RBX + -1 + piVar2);\n                if ((cVar1 == '/') || (cVar1 == '\\\\')) {\n                    unaff_RDI = 0x4c874c;\n                    *(*0x20 + -0xf0) = 0x497e28;\n                    arg2_00 = fcn.0044ac00(unaff_RBX);\n                }\n                else {\n                    unaff_RDI = 0x4c87c6;\n                    *(*0x20 + -0xf0) = 0x497e46;\n                    arg2_00 = fcn.0044ac00(unaff_RBX);\n                }\n            }\n            *(*0x20 + -0xf0) = 0x497e72;\n            piVar6 = piVar2;\n            uVar3 = fcn.0046ae60();\n            if (unaff_RDI == 0) {\n                if (piVar2 != NULL) {\n                    unaff_RDI = 0;\n                    goto code_r0x00497e8d;\n                }\n            }\n            else {\n                uVar3 = 0;\ncode_r0x00497e8d:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0xf0) = 0x497eaa;\n                iVar4 = fcn.0040cc20();\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0xf0) = 0x497ec5;\n                uVar3 = fcn.0046b6a0();\n                *(*0x20 + -0xc0) = uVar3;\n                if (iVar4 == 0) {\n                    iVar4 = *(*0x20 + -0x18);\n                    goto code_r0x00497fd9;\n                }\n                if (((iVar4 == 0) || (*(iVar4 + 8) != 0x4ba880)) || (*piVar6 != 2)) {\n                    return NULL;\n                }\n                *(*0x20 + -0x4c) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                piVar2 = *(*0x20 + -0xb8);\n                *(*0x20 + -0xf0) = 0x497f25;\n                fcn.0046ae60();\n                if (piVar2 != NULL) {\n                    *(*0x20 + -0xf0) = 0x497f54;\n                    iVar4 = fcn.0046d2c0(*0x20 + -0x4c);\n                    if (iVar4 != 0) {\n                        return NULL;\n                    }\n                    arg2_00 = *(*0x20 + -0x4c);\n                    if ((*(*0x20 + -0x4c) >> 4 & 1) == 0) {\n                        return NULL;\n                    }\n                    iVar4 = *(*0x20 + -0x18);\n                    *(iVar4 + 0x260) = 1;\ncode_r0x00497fd9:\n                    *(iVar4 + 600) = *(*0x20 + -0xb8);\n                    *(*0x20 + -0x10) = iVar4 + 0x250;\n                    if (*0x626890 == 0) {\n                        *(iVar4 + 0x250) = *(*0x20 + -0x20);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x49801b;\n                        fcn.0045ea40(iVar4, arg2_00, param_3, param_4);\n                    }\n                    *(*0x20 + -0xf0) = 0x498025;\n                    cVar1 = fcn.00498b40();\n                    if (cVar1 == '\\0') {\n                        iVar4 = *(*0x20 + -0x18);\n                        uVar3 = *(iVar4 + 600);\n                        *(*0x20 + -0xf0) = 0x498045;\n                        uVar5 = fcn.00469960();\n                        arg2 = *(*0x20 + -0x18);\n                        *(arg2 + 600) = uVar3;\n                        if (*0x626890 == 0) {\n                            *(arg2 + 0x250) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0xf0) = 0x498076;\n                            fcn.0045ea40(iVar4, arg2, param_3, param_4);\n                        }\n                        if (iVar4 != 0) {\n                            return NULL;\n                        }\n                    }\n                    uVar3 = *(*0x20 + 0x10);\n                    *(*0x20 + -0xf0) = 0x4980a5;\n                    piVar2 = fcn.00497ac0(uVar3);\n                    if (*0x626890 == 0) {\n                        *(*piVar2 + 0x238) = *(*0x20 + -0x18);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x4980da;\n                        piVar2 = fcn.0045eb60(uVar3, *(*0x20 + -0x18), param_3, param_4);\n                    }\n                    return piVar2;\n                }\n                *(*0x20 + -0xf0) = 0x498128;\n                fcn.0045eee0(0);\n            }\n            *(*0x20 + -0xf0) = 0x498132;\n            in_RAX = fcn.0045eee0(piVar2);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = piVar2;\n        *(puVar7 + -8) = 0x498145;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1889
    },
    "00498160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00498160(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t noname_1;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = fcn.0040cc20();\n        puVar1[1] = 4;\n        *puVar1 = 0x4c8a39;\n        puVar1[3] = 0;\n        if (*0x626890 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045eb60(0, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x4eec98;\n        puVar1[5] = 0x4ee5a8;\n        return 0;\n    }\n    noname_1 = arg1;\n    iVar2 = fcn.00497c80(arg1);\n    if (unaff_RBX == 0) {\n        return iVar2;\n    }\n    iVar2 = fcn.00497d80();\n    if (unaff_RBX == 0) {\n        if (((arg1 & 1) == 0) && ((arg1 >> 1 & 1) == 0)) {\n            return iVar2;\n        }\n        if (iVar2 != 0) {\n            fcn.004983c0();\n        }\n        puVar1 = fcn.0040cc20();\n        puVar1[1] = 4;\n        *puVar1 = 0x4c8a39;\n        puVar1[3] = 0;\n        if (*0x626890 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045eb60(0, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x4eec98;\n        puVar1[5] = 0x4ee5c8;\n        return 0;\n    }\n    puVar1 = fcn.0040cc20();\n    puVar1[1] = 4;\n    *puVar1 = 0x4c8a39;\n    puVar1[3] = unaff_RBX;\n    iVar2 = unaff_RBX;\n    if (*0x626890 == 0) {\n        puVar1[2] = in_RAX;\n    }\n    else {\n        puVar1 = fcn.0045eb60(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar1[4] = unaff_RBX;\n    if (*0x626890 == 0) {\n        puVar1[5] = noname_1;\n    }\n    else {\n        fcn.0045eb60(iVar2, noname_1, in_R8, in_R9);\n    }\n    return 0;\n}\n",
        "token_count": 750
    },
    "004983c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004983c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX == 0) {\n        return 0x4eec98;\n    }\n    if ((*(in_RAX + 0x238) != 0) && (*(*(in_RAX + 0x238) + 0x260) != '\\0')) {\n        return 0;\n    }\n    iVar2 = fcn.004945e0();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        if ((*0x5d2370 == iVar2) && (cVar1 = fcn.00403780(*0x5d2378),  cVar1 != '\\0')) {\n            iVar2 = *0x5d24d0;\n            unaff_RBX = *0x5d24d8;\n        }\n        puVar3 = fcn.0040cc20();\n        puVar3[1] = 5;\n        *puVar3 = 0x4c8b5d;\n        uVar4 = *(in_RAX + 0x228);\n        puVar3[3] = *(in_RAX + 0x230);\n        if (*0x626890 == 0) {\n            puVar3[2] = uVar4;\n        }\n        else {\n            puVar3 = fcn.0045eb40();\n        }\n        puVar3[4] = iVar2;\n        if (*0x626890 == 0) {\n            puVar3[5] = unaff_RBX;\n        }\n        else {\n            fcn.0045eb60(uVar4, unaff_RBX, param_3, param_4);\n        }\n        uVar4 = 0x4eeb38;\n    }\n    fcn.00416c20(0);\n    return uVar4;\n}\n",
        "token_count": 523
    },
    "00498560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00498560(uint64_t param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x498587;\n            fcn.00498d40();\n            *(*0x20 + -0x60) = 0x49858c;\n            uVar3 = fcn.0046ae60();\n            if (unaff_RDI != 0) {\n                uVar3 = 0;\n                goto code_r0x004985a2;\n            }\n            if (unaff_RBX != 0) break;\n            *(*0x20 + -0x60) = 0x4987d9;\n            param_1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4987e9;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    unaff_RDI = 0;\n    unaff_RSI = 0;\ncode_r0x004985a2:\n    if (unaff_RDI != 0) {\n        *(*0x20 + -0x28) = unaff_RSI;\n        *(*0x20 + -0x40) = unaff_RDI;\n        *(*0x20 + -0x60) = 0x4985c5;\n        puVar4 = fcn.0040cc20();\n        puVar4[1] = 6;\n        *puVar4 = 0x4c8da5;\n        puVar4[3] = *(*0x20 + 0x10);\n        if (*0x626890 == 0) {\n            puVar4[2] = *(*0x20 + 8);\n        }\n        else {\n            *(*0x20 + -0x60) = 0x498605;\n            puVar4 = fcn.0045eb40(*(*0x20 + 8));\n        }\n        puVar4[4] = *(*0x20 + -0x40);\n        if (*0x626890 == 0) {\n            puVar4[5] = *(*0x20 + -0x28);\n        }\n        else {\n            *(*0x20 + -0x60) = 0x498630;\n            fcn.0045eb40(*(*0x20 + -0x28));\n        }\n        return 0x4eeb38;\n    }\n    *(*0x20 + -0x20) = uVar3;\n    *(*0x20 + -0x60) = 0x49864e;\n    iVar5 = fcn.0046c700();\n    if (iVar5 == 0) {\n        return 0;\n    }\n    *(*0x20 + -0x18) = unaff_RBX;\n    *(*0x20 + -0x38) = iVar5;\n    *(*0x20 + -0x60) = 0x49866b;\n    iVar5 = fcn.0046dfc0();\n    if (iVar5 == 0) {\n        return 0;\n    }\n    *(*0x20 + -0x30) = iVar5;\n    *(*0x20 + -0x10) = unaff_RBX;\n    if (*(*0x20 + -0x38) == iVar5) {\n        param_1 = *(*0x20 + -0x18);\n        *(*0x20 + -0x60) = 0x498692;\n        cVar1 = fcn.00403780(param_1);\n        if (cVar1 != '\\0') {\n            param_1 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + -0x38);\n            goto code_r0x00498710;\n        }\n    }\n    *(*0x20 + -0x60) = 0x4986ac;\n    uVar2 = fcn.0046d3c0();\n    if (unaff_RBX == 0) {\n        if ((uVar2 >> 4 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                unaff_RBX = *(*0x20 + -0x38);\n                param_1 = *(*0x20 + -0x18);\n            }\n            else {\n                param_1 = uVar2 & 0xfffffffe;\n                *(*0x20 + -0x60) = 0x4986ec;\n                iVar5 = fcn.0046e0a0();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x60) = 0x498707;\n                    unaff_RBX = fcn.0046c700();\n                    if (unaff_RBX == 0) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = *(*0x20 + -0x38);\n                    param_1 = *(*0x20 + -0x18);\n                }\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + -0x30);\n            param_1 = *(*0x20 + -0x10);\n        }\n    }\ncode_r0x00498710:\n    *(*0x20 + -0x18) = param_1;\n    *(*0x20 + -0x38) = unaff_RBX;\n    *(*0x20 + -0x60) = 0x498726;\n    puVar4 = fcn.0040cc20();\n    puVar4[1] = 6;\n    *puVar4 = 0x4c8da5;\n    puVar4[3] = *(*0x20 + 0x10);\n    if (*0x626890 == 0) {\n        puVar4[2] = *(*0x20 + 8);\n    }\n    else {\n        *(*0x20 + -0x60) = 0x498765;\n        puVar4 = fcn.0045eb40(*(*0x20 + 8));\n    }\n    puVar4[4] = *(*0x20 + -0x38);\n    if (*0x626890 == 0) {\n        puVar4[5] = *(*0x20 + -0x18);\n    }\n    else {\n        *(*0x20 + -0x60) = 0x498790;\n        fcn.0045eb40(*(*0x20 + -0x18));\n    }\n    return 0x4eeb38;\n}\n",
        "token_count": 1708
    },
    "00498800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00498800(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg1;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = fcn.0046b5a0(2);\n    if (arg1 != 0) {\n        puVar1 = fcn.0040cc20();\n        puVar1[1] = 4;\n        *puVar1 = 0x4c8a41;\n        puVar1[2] = arg1;\n        if (*0x626890 == 0) {\n            puVar1[3] = 2;\n        }\n        else {\n            fcn.0045eb60(arg1, 2, param_3, param_4);\n        }\n        return 0;\n    }\n    uVar2 = fcn.00497ac0(2);\n    fcn.00497ac0(2);\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "00498a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00498a60(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if ((unaff_RBX == 2) && (*(in_RAX + 1) == ':')) {\n        in_RAX = 0x4c874f;\n        unaff_RBX = 1;\n    }\n    else if ((2 < unaff_RBX) && (*(in_RAX + 1) == ':')) {\n        in_RAX = in_RAX + 2;\n        unaff_RBX = unaff_RBX - 2;\n    }\n    do {\n        arg1 = unaff_RBX;\n        unaff_RBX = arg1 - 1;\n        if (unaff_RBX < 1) break;\n        if (arg1 <= unaff_RBX) goto code_r0x00498b25;\n    } while ((*(in_RAX + unaff_RBX) == '/') || (*(in_RAX + unaff_RBX) == '\\\\'));\n    while( true ) {\n        unaff_RBX = unaff_RBX - 1;\n        if (unaff_RBX < 0) {\n            return;\n        }\n        if (arg1 <= unaff_RBX) break;\n        if (*(in_RAX + unaff_RBX) == '/') {\n            return;\n        }\n        if (*(in_RAX + unaff_RBX) == '\\\\') {\n            return;\n        }\n    }\n    fcn.0045eee0(arg1);\ncode_r0x00498b25:\n    fcn.0045eee0(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 376
    },
    "00498c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.00498c00(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if (unaff_RBX < 2) {\n        return NULL;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && (((cVar1 - 0x30U < 10 || (cVar1 + 0x9fU < 0x1a)) || (cVar1 + 0xbfU < 0x1a)))) {\n        return in_RAX;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar5 = 3; iVar5 < unaff_RBX - 1; iVar5 = iVar5 + 1) {\n            if ((in_RAX[iVar5] == '\\\\') || (in_RAX[iVar5] == '/')) {\n                arg1 = iVar5 + 1;\n                if (arg1 < unaff_RBX) {\n                    cVar1 = in_RAX[iVar5 + 1];\n                    if (cVar1 == '\\\\') {\n                        return NULL;\n                    }\n                    if (cVar1 == '/') {\n                        return NULL;\n                    }\n                    if (cVar1 == '.') {\n                        return NULL;\n                    }\n                    for (; ((arg1 < unaff_RBX && (in_RAX[arg1] != '\\\\')) && (in_RAX[arg1] != '/')); arg1 = arg1 + 1) {\n                    }\n                    if (arg1 <= unaff_RBX) {\n                        return in_RAX;\n                    }\n                    fcn.0045ef20(arg1, unaff_RBX);\n                }\n                fcn.0045eee0(unaff_RBX);\n                pcVar3 = swi(3);\n                pcVar4 = (*pcVar3)();\n                return pcVar4;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 524
    },
    "00499a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.00499a80(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack112;\n    ulong uStack104;\n    int64_t iStack96;\n    ulong uStack88;\n    uint uStack76;\n    ulong uStack72;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [12];\n    uint uStack44;\n    uchar auStack40 [12];\n    uint uStack28;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&puStack16 < *(unaff_R14 + 0x10) || &puStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack76 = SUB164(in_XMM15, 0);\n    uStack72 = SUB168(in_XMM15, 0);\n    uStack64 = SUB164(in_XMM15 >> 0x40, 0);\n    uStack60 = SUB164(in_XMM15 >> 0x60, 0);\n    puStack16 = &uStack76;\n    uStack88 = arg1;\n    _auStack56 = in_XMM15;\n    _auStack40 = in_XMM15;\n    iVar1 = fcn.0046d4c0();\n    if (iVar1 != 0) {\n        iStack96 = iVar1;\n        puVar2 = fcn.0040cc20();\n        puVar2[1] = 0x1a;\n        *puVar2 = 0x4cd83d;\n        puVar2[3] = unaff_RBX;\n        if (*0x626890 == 0) {\n            puVar2[2] = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045eb60(unaff_RBX, in_RAX, in_R8, in_R9);\n        }\n        puVar2[4] = iStack96;\n        if (*0x626890 == 0) {\n            puVar2[5] = puStack16;\n        }\n        else {\n            fcn.0045eb60(unaff_RBX, puStack16, in_R8, in_R9);\n        }\n        return NULL;\n    }\n    uStack112 = 0;\n    iVar1 = fcn.00491ac0(&uStack112);\n    if (iVar1 != 0) {\n        iVar3 = *0x9;\n        if (iVar1 != 0x4eec98) {\n            iVar3 = 0;\n        }\n        uStack24 = 9;\n        iStack96 = iVar1;\n        if ((iVar1 != 0x4eec98) || (iVar3 != 0x57)) {\n            puVar2 = fcn.0040cc20();\n            puVar2[1] = 0x1c;\n            *puVar2 = 0x4ce014;\n            puVar2[3] = unaff_RBX;\n            if (*0x626890 == 0) {\n                puVar2[2] = in_RAX;\n            }\n            else {\n                puVar2 = fcn.0045eb60(unaff_RBX, in_RAX, in_R8, in_R9);\n            }\n            puVar2[4] = iStack96;\n            if (*0x626890 == 0) {\n                puVar2[5] = uStack24;\n            }\n            else {\n                fcn.0045eb60(unaff_RBX, uStack24, in_R8, in_R9);\n            }\n            return NULL;\n        }\n        uStack112 = uStack112 & 0xffffffff;\n    }\n    puStack16 = fcn.00498a60();\n    uStack104 = unaff_RBX;\n    puVar2 = fcn.0040cc20();\n    puVar2[1] = uStack104;\n    if (*0x626890 == 0) {\n        *puVar2 = puStack16;\n    }\n    else {\n        puVar2 = fcn.0045eb60(uStack104, puStack16, in_R8, in_R9);\n    }\n    *(puVar2 + 2) = uStack76;\n    *(puVar2 + 0x14) = uStack72;\n    *(puVar2 + 0x1c) = CONCAT44(uStack60, uStack64);\n    *(puVar2 + 0x24) = auStack56._0_8_;\n    *(puVar2 + 0x2c) = uStack44;\n    *(puVar2 + 6) = auStack40._0_4_;\n    *(puVar2 + 0xb) = auStack56._8_4_;\n    *(puVar2 + 0x5c) = auStack40._8_4_;\n    *(puVar2 + 0xc) = uStack28;\n    *(puVar2 + 0x34) = uStack112._4_4_;\n    return puVar2;\n}\n",
        "token_count": 1162
    },
    "00499d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00499d80(ulong *arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong *arg1_00;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    in_RAX[10] = arg1;\n    if (*0x626890 == 0) {\n        in_RAX[9] = unaff_RBX;\n    }\n    else {\n        fcn.0045eb80(arg1, arg2, arg3, arg4);\n    }\n    arg1_00 = arg1;\n    cVar1 = fcn.00498b40();\n    if (cVar1 == '\\0') {\n        uVar3 = in_RAX[10];\n        arg1_00 = in_RAX;\n        uVar2 = fcn.00469960();\n        in_RAX[10] = uVar3;\n        arg2 = in_RAX;\n        if (*0x626890 == 0) {\n            in_RAX[9] = uVar2;\n        }\n        else {\n            fcn.0045ea40(arg1_00, in_RAX, arg3, arg4);\n        }\n        if (arg1_00 != NULL) {\n            puVar4 = fcn.0040cc20();\n            puVar4[1] = 8;\n            *puVar4 = 0x4c90ff;\n            puVar4[3] = arg1;\n            if (*0x626890 == 0) {\n                puVar4[2] = unaff_RBX;\n            }\n            else {\n                puVar4 = fcn.0045eb40(unaff_RBX);\n            }\n            puVar4[4] = arg1_00;\n            if (*0x626890 == 0) {\n                puVar4[5] = in_RAX + 9;\n            }\n            else {\n                fcn.0045eb40(in_RAX + 9);\n            }\n            return 0x4eeb38;\n        }\n    }\n    uVar3 = fcn.00498a60();\n    in_RAX[1] = arg1;\n    if (*0x626890 == 0) {\n        *in_RAX = uVar3;\n    }\n    else {\n        fcn.0045ea40(arg1_00, arg2, arg3, arg4);\n    }\n    return 0;\n}\n",
        "token_count": 602
    },
    "0049a680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049a680(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 1) {\n                return;\n            }\n            piVar1 = *in_RAX;\n            uVar6 = piVar1[1];\n            arg2_00 = piVar1[2];\n            iVar3 = *piVar1;\n            arg1 = unaff_RBX + uVar6;\n            if (arg2_00 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = uVar6;\n                iVar3 = unaff_RBX + arg2_00 * 2;\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x48) = 0x49a6f5;\n                iVar3 = fcn.00447160(iVar3);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = (*in_RAX)[1];\n                iVar5 = *(*0x20 + -0x18);\n                if (iVar2 < *(*0x20 + -0x18)) {\n                    iVar5 = iVar2;\n                }\n                if (iVar3 != **in_RAX) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x48) = 0x49a725;\n                    fcn.0045f840(iVar5);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg1 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + -0x20);\n                arg2_00 = *(*0x20 + -0x18);\n            }\n            if (*(in_RAX + 0xe) == '\\0') {\n                arg2 = 0x20;\n            }\n            else {\n                arg2 = 0x30;\n            }\n            if (arg1 <= arg2_00) {\n                if (uVar6 <= arg1) {\n                    iVar2 = iVar3 + (uVar6 & uVar6 - arg2_00 >> 0x3f);\n                    for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n                        *(iVar2 + iVar5) = arg2;\n                    }\n                    piVar1 = *in_RAX;\n                    piVar1[1] = arg1;\n                    piVar1[2] = arg2_00;\n                    if (*0x626890 == 0) {\n                        *piVar1 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x49a7b3;\n                        fcn.0045eba0(arg1, arg2, iVar2, arg2_00);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x49a7c5;\n                fcn.0045efa0(arg1);\n            }\n            *(*0x20 + -0x48) = 0x49a7cd;\n            in_RAX = fcn.0045ef60(arg1, arg2_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x49a7dd;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1056
    },
    "0049a800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049a800(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0047ea60(unaff_RDI);\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.0049a680();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00447240(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045f840(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x626890 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045ea40(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00447240(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045f840(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x626890 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045eb40(uVar3);\n            }\n            fcn.0049a680();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00447240(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045f840(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x626890 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045ea40(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 775
    },
    "0049aac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049aac0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0047ebc0();\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.0049a680();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00447240(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045f840(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x626890 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045ea40(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00447240(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045f840(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x626890 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045eb40(uVar3);\n            }\n            fcn.0049a680();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00447240(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045f840(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x626890 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045ea40(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0049ae00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049ae00(void)\n\n{\n    int64_t arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int32_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = in_RAX + 0x28;\n            if ((*(in_RAX + 9) == '\\0') || (iVar5 = *(in_RAX + 0x20),  iVar5 < 5)) {\n                arg1_00 = 0x44;\n                iVar5 = 4;\n            }\n            else {\n                arg1 = iVar5 + 9;\n                if (arg1 < 0x45) {\n                    arg1_00 = 0x44;\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x60) = 0x49ae66;\n                    iVar2 = fcn.00447160(arg1);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x30);\n                    in_RAX = *(*0x20 + 8);\n                }\n            }\n            *(*0x20 + -0x20) = arg1_00;\n            *(*0x20 + -0x10) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if (*(in_RAX + 0xc) == '\\0') {\n                cVar1 = '\\0';\n            }\n            else if (unaff_RBX < 0x110000) {\n                *(*0x20 + -0x60) = 0x49aeb5;\n                cVar1 = fcn.00485140();\n                arg1_00 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar5 = *(*0x20 + -0x28);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            arg1_01 = arg1_00;\n            if (cVar1 == '\\0') {\ncode_r0x0049b004:\n                for (; 0xf < unaff_RBX; unaff_RBX = unaff_RBX >> 4) {\n                    uVar7 = arg1_00 - 1;\n                    uVar6 = unaff_RBX & 0xf;\n                    if (arg1_01 <= uVar7) goto code_r0x0049b0ff;\n                    *((arg1_00 - 1) + iVar2) = *(uVar6 + 0x4cad17);\n                    iVar5 = iVar5 + -1;\n                    arg1_00 = uVar7;\n                }\n                uVar7 = arg1_00 - 1;\n                if (uVar7 < arg1_01) {\n                    *((arg1_00 - 1) + iVar2) = *(unaff_RBX + 0x4cad17);\n                    while (iVar5 = iVar5 + -1,  0 < iVar5) {\n                        if (arg1_01 <= uVar7 - 1) goto code_r0x0049b0e9;\n                        *((uVar7 - 1) + iVar2) = 0x30;\n                        uVar7 = uVar7 - 1;\n                    }\n                    if (uVar7 - 1 < arg1_01) {\n                        *((uVar7 - 1) + iVar2) = 0x2b;\n                        if (uVar7 - 2 < arg1_01) {\n                            *((uVar7 - 2) + iVar2) = 0x55;\n                            *(*0x20 + -0x31) = *(in_RAX + 0xe);\n                            *(in_RAX + 0xe) = 0;\n                            *(*0x20 + -0x60) = 0x49b0bc;\n                            fcn.0049a800((arg1_01 - uVar7) + 2);\n                            *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x31);\n                            return;\n                        }\n                        *(*0x20 + -0x60) = 0x49b0de;\n                        fcn.0045eee0(arg1_01);\n                    }\n                    *(*0x20 + -0x60) = 0x49b0e9;\n                    fcn.0045eee0(arg1_01);\ncode_r0x0049b0e9:\n                    *(*0x20 + -0x60) = 0x49b0f4;\n                    fcn.0045eee0(arg1_01);\n                }\n                *(*0x20 + -0x60) = 0x49b0ff;\n                fcn.0045eee0(arg1_01);\n                uVar6 = unaff_RBX;\ncode_r0x0049b0ff:\n                *(*0x20 + -0x60) = 0x49b10a;\n                fcn.0045eee0(arg1_01);\ncode_r0x0049b10a:\n                *(*0x20 + -0x60) = 0x49b10f;\n                fcn.0045eee0(arg1_01);\ncode_r0x0049b10f:\n                *(*0x20 + -0x60) = 0x49b114;\n                fcn.0045eee0(arg1_01);\n                unaff_RBX = uVar6;\n                arg1_00 = uVar7;\ncode_r0x0049b114:\n                *(*0x20 + -0x60) = 0x49b11f;\n                fcn.0045efa0(arg1_00);\n            }\n            else if (arg1_00 - 1 < arg1_00) {\n                *((arg1_00 - 1) + iVar2) = 0x27;\n                iVar3 = unaff_RBX;\n                if (iVar3 < 0) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x80) {\n                    iVar5 = 1;\n                }\n                else if (iVar3 < 0x800) {\n                    iVar5 = 2;\n                }\n                else if (iVar3 - 0xd800U < 0x800) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x10000) {\n                    iVar5 = 3;\n                }\n                else if (iVar3 < 0x110000) {\n                    iVar5 = 4;\n                }\n                else {\n                    iVar5 = -1;\n                }\n                iVar5 = arg1_00 - iVar5;\n                if (iVar5 - 1U <= arg1_00) {\n                    *(*0x20 + -0x18) = iVar5;\n                    uVar6 = (arg1_00 - iVar5) + 1;\n                    uVar7 = -uVar6 >> 0x3f;\n                    *(*0x20 + -0x60) = 0x49afa5;\n                    fcn.0047e900(uVar6, iVar2, uVar7, iVar5 - 1U & uVar7);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_01 = *(*0x20 + -0x20);\n                    if (iVar5 - 2U < arg1_01) {\n                        iVar2 = *(*0x20 + -0x10);\n                        *(iVar5 + -2 + iVar2) = 0x27;\n                        arg1_00 = iVar5 - 3;\n                        if (arg1_00 < arg1_01) {\n                            *(iVar5 + -3 + iVar2) = 0x20;\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x0049b004;\n                        }\n                        goto code_r0x0049b10a;\n                    }\n                    goto code_r0x0049b10f;\n                }\n                goto code_r0x0049b114;\n            }\n            *(*0x20 + -0x60) = 0x49b127;\n            in_RAX = fcn.0045eee0(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x49b137;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2192
    },
    "0049b160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049b160(uint64_t arg1, uint64_t noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint uVar7;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t unaff_R12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \ncode_r0x0049b160:\n    uVar7 = unaff_RSI;\n    puVar6 = *0x20;\n    arg1_00 = unaff_R12;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x28) = arg3;\n        if (unaff_RDI == '\\0') {\n            noname_1 = 0;\n        }\n        else {\n            noname_1 = noname_1 & 0xffffffffffffff00 | unaff_RBX < 0;\n        }\n        if (noname_1 != '\\0') {\n            unaff_RBX = -unaff_RBX;\n        }\n        *(*0x20 + -0x21) = noname_1;\n        *(*0x20 + 8) = in_RAX;\n        iVar3 = in_RAX + 0x28;\n        if ((*(in_RAX + 8) == '\\0') && (*(in_RAX + 9) == '\\0')) {\n            arg1_00 = 0x44;\n        }\n        else {\n            iVar9 = *(in_RAX + 0x18) + *(in_RAX + 0x20) + 3;\n            if (iVar9 < 0x45) {\n                arg1_00 = 0x44;\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x24) = uVar7;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + 0x30) = arg4;\n                *(*0x20 + 0x28) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x49b1fc;\n                iVar3 = fcn.00447160(iVar9);\n                arg1 = *(*0x20 + 0x18);\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RSI = *(*0x20 + 0x24);\n                arg3 = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x30);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (*(in_RAX + 9) == '\\0') {\n            if ((*(in_RAX + 0xe) == '\\0') || (*(in_RAX + 8) == '\\0')) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = *(in_RAX + 0x18);\n                if (((noname_1 != '\\0') || (*(in_RAX + 0xb) != '\\0')) || (*(in_RAX + 0xd) != '\\0')) {\n                    iVar9 = iVar9 + -1;\n                }\n            }\n        }\n        else {\n            iVar9 = *(in_RAX + 0x20);\n            if ((iVar9 == 0) && (unaff_RBX == 0)) {\n                *(*0x20 + -0x22) = *(in_RAX + 0xe);\n                *(in_RAX + 0xe) = 0;\n                *(*0x20 + -0x50) = 0x49b25a;\n                fcn.0049a680();\n                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x22);\n                return;\n            }\n        }\n        unaff_RDI = arg1_00;\n        if (8 < arg1) {\n            uVar4 = noname_1;\n            if (arg1 == 10) goto code_r0x0049b5ea;\n            if (arg1 != 0x10) goto code_r0x0049b5bc;\n            do {\n                if (unaff_RBX < 0x10) goto code_r0x0049b320;\n                uVar4 = unaff_RBX & 0xf;\n                unaff_R12 = arg1_00;\n                if (arg4 <= uVar4) goto code_r0x0049b5b1;\n                uVar1 = *(arg3 + uVar4);\n                noname_1 = uVar1;\n                if (arg1_00 <= unaff_RDI - 1) goto code_r0x0049b5a6;\n                *((unaff_RDI - 1) + iVar3) = uVar1;\n                unaff_RBX = unaff_RBX >> 4;\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RDI = unaff_RDI - 1;\n                unaff_R13 = unaff_RBX;\n            } while( true );\n        }\n        if (arg1 != 2) {\n            if (arg1 != 8) goto code_r0x0049b5bc;\n            goto code_r0x0049b645;\n        }\n        do {\n            uVar7 = unaff_RSI;\n            if (unaff_RBX < 2) {\ncode_r0x0049b320:\n                do {\n                    uVar4 = arg1_00;\n                    if (unaff_RBX < arg4) {\n                        unaff_R13 = unaff_RDI - 1;\n                        if (unaff_R13 < arg1_00) {\n                            *((unaff_RDI - 1) + iVar3) = *(unaff_RBX + arg3);\n                            for (; (uVar4 = arg1_00,  0 < unaff_R13 &&\n                                   (uVar4 = arg1_00 - unaff_R13,  arg1_00 - unaff_R13 < iVar9));\n                                unaff_R13 = unaff_R13 - 1) {\n                                *((unaff_R13 - 1) + iVar3) = 0x30;\n                            }\n                            uVar8 = unaff_R13;\n                            if (*(in_RAX + 0xc) == '\\0') goto code_r0x0049b42b;\n                            if (arg1 == 2) {\n                                arg3 = unaff_R13 - 1;\n                                if (arg3 < arg1_00) {\n                                    *((unaff_R13 - 1) + iVar3) = 0x62;\n                                    arg3 = unaff_R13 - 2;\n                                    if (arg3 < arg1_00) {\n                                        *((unaff_R13 - 2) + iVar3) = 0x30;\n                                        uVar8 = arg3;\n                                        goto code_r0x0049b42b;\n                                    }\n                                    goto code_r0x0049b575;\n                                }\n                            }\n                            else {\n                                if (arg1 == 8) {\n                                    if (unaff_R13 < arg1_00) {\n                                        if (*(iVar3 + unaff_R13) == '0') {\ncode_r0x0049b42b:\n                                            uVar5 = uVar8;\n                                            if (unaff_RSI == 0x4f) {\n                                                if (uVar8 - 1 < arg1_00) {\n                                                    *((uVar8 - 1) + iVar3) = 0x6f;\n                                                    if (uVar8 - 2 < arg1_00) {\n                                                        *((uVar8 - 2) + iVar3) = 0x30;\n                                                        uVar5 = uVar8 - 2;\n                                                        goto code_r0x0049b460;\n                                                    }\n                                                    goto code_r0x0049b526;\n                                                }\n                                            }\n                                            else {\ncode_r0x0049b460:\n                                                if (noname_1 == '\\0') {\n                                                    if (*(in_RAX + 0xb) == '\\0') {\n                                                        if (*(in_RAX + 0xd) == '\\0') {\ncode_r0x0049b4b0:\n                                                            uVar2 = *(in_RAX + 0xe);\n                                                            *(in_RAX + 0xe) = 0;\n                                                            if (uVar5 <= arg1_00) {\n                                                                *(*0x20 + -0x23) = uVar2;\n                                                                *(*0x20 + -0x50) = 0x49b4de;\n                                                                fcn.0049a800(arg1_00 - uVar5);\n                                                                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x23);\n                                                                return;\n                                                            }\n                                                            *(*0x20 + -0x50) = 0x49b505;\n                                                            fcn.0045efa0(arg1_00);\n                                                            noname_1 = uVar5;\n                                                        }\n                                                        else {\n                                                            noname_1 = uVar5 - 1;\n                                                            if (noname_1 < arg1_00) {\n                                                                *((uVar5 - 1) + iVar3) = 0x20;\n                                                                uVar5 = noname_1;\n                                                                goto code_r0x0049b4b0;\n                                                            }\n                                                        }\n                                                        *(*0x20 + -0x50) = 0x49b510;\n                                                        fcn.0045eee0(arg1_00);\n                                                    }\n                                                    else {\n                                                        noname_1 = uVar5 - 1;\n                                                        if (noname_1 < arg1_00) {\n                                                            *((uVar5 - 1) + iVar3) = 0x2b;\n                                                            uVar5 = noname_1;\n                                                            goto code_r0x0049b4b0;\n                                                        }\n                                                    }\n                                                    *(*0x20 + -0x50) = 0x49b51b;\n                                                    fcn.0045eee0(arg1_00);\n                                                }\n                                                else {\n                                                    noname_1 = uVar5 - 1;\n                                                    if (noname_1 < arg1_00) {\n                                                        *((uVar5 - 1) + iVar3) = 0x2d;\n                                                        uVar5 = noname_1;\n                                                        goto code_r0x0049b4b0;\n                                                    }\n                                                }\n                                                *(*0x20 + -0x50) = 0x49b526;\n                                                fcn.0045eee0(arg1_00);\ncode_r0x0049b526:\n                                                *(*0x20 + -0x50) = 0x49b531;\n                                                fcn.0045eee0(arg1_00);\n                                            }\n                                            *(*0x20 + -0x50) = 0x49b53c;\n                                            fcn.0045eee0(arg1_00);\ncode_r0x0049b53c:\n                                            *(*0x20 + -0x50) = 0x49b547;\n                                            fcn.0045eee0(arg1_00);\ncode_r0x0049b547:\n                                            *(*0x20 + -0x50) = 0x49b552;\n                                            fcn.0045eee0(arg1_00);\n                                            arg3 = uVar8;\n                                            goto code_r0x0049b552;\n                                        }\n                                        arg3 = unaff_R13 - 1;\n                                        if (arg3 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = 0x30;\n                                            uVar8 = arg3;\n                                            goto code_r0x0049b42b;\n                                        }\n                                        goto code_r0x0049b55f;\n                                    }\n                                }\n                                else {\n                                    if (arg1 != 0x10) goto code_r0x0049b42b;\n                                    if (0x10 < arg4) {\n                                        arg4 = unaff_R13 - 1;\n                                        uVar8 = *(arg3 + 0x10);\n                                        if (arg4 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = *(arg3 + 0x10);\n                                            uVar8 = unaff_R13 - 2;\n                                            if (uVar8 < arg1_00) {\n                                                *((unaff_R13 - 2) + iVar3) = 0x30;\n                                                goto code_r0x0049b42b;\n                                            }\n                                            goto code_r0x0049b53c;\n                                        }\n                                        goto code_r0x0049b547;\n                                    }\ncode_r0x0049b552:\n                                    *(*0x20 + -0x50) = 0x49b55f;\n                                    fcn.0045eee0(arg4);\ncode_r0x0049b55f:\n                                    *(*0x20 + -0x50) = 0x49b56a;\n                                    fcn.0045eee0(arg1_00);\n                                }\n                                *(*0x20 + -0x50) = 0x49b575;\n                                fcn.0045eee0(arg1_00);\ncode_r0x0049b575:\n                                *(*0x20 + -0x50) = 0x49b585;\n                                fcn.0045eee0(arg1_00);\n                            }\n                            *(*0x20 + -0x50) = 0x49b590;\n                            fcn.0045eee0(arg1_00);\n                            unaff_RDI = arg1_00;\n                        }\n                        *(*0x20 + -0x50) = 0x49b59b;\n                        fcn.0045eee0(uVar4);\n                    }\n                    unaff_RBX = unaff_R13;\n                    *(*0x20 + -0x50) = 0x49b5a6;\n                    fcn.0045ef00(arg4);\n                    arg1_00 = uVar4;\ncode_r0x0049b5a6:\n                    *(*0x20 + -0x50) = 0x49b5b1;\n                    fcn.0045eee0(arg1_00);\n                    unaff_R12 = arg1_00;\ncode_r0x0049b5b1:\n                    arg1 = arg4;\n                    *(*0x20 + -0x50) = 0x49b5bc;\n                    arg4 = arg1;\n                    fcn.0045ef00(arg1);\n                    arg1_00 = unaff_RDI;\n                    unaff_R13 = unaff_RBX;\ncode_r0x0049b5bc:\n                    unaff_RBX = 0x4ee5f0;\n                    *(*0x20 + -0x50) = 0x49b5cf;\n                    uVar4 = fcn.00433560();\n                    unaff_RDI = arg1_00;\n                    arg1_00 = unaff_R12;\n                    do {\n                        *((unaff_RDI - 1) + iVar3) = unaff_RBX + '0';\n                        unaff_RSI = uVar4 & 0xffffffff;\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x21);\n                        unaff_RBX = noname_1;\n                        unaff_RDI = unaff_R13;\ncode_r0x0049b5ea:\n                        noname_1 = uVar4;\n                        if (unaff_RBX < 10) goto code_r0x0049b320;\n                        unaff_R13 = unaff_RDI - 1;\n                        noname_1 = unaff_RBX / 10;\n                        uVar4 = unaff_RSI & 0xffffffff;\n                        unaff_RSI = noname_1 * 10;\n                        unaff_RBX = unaff_RBX % 10;\n                    } while (unaff_R13 < arg1_00);\n                    *(*0x20 + -0x50) = 0x49b625;\n                    arg1 = arg1_00;\n                    in_RAX = fcn.0045eee0(arg1_00);\n                    while( true ) {\n                        *(*0x20 + -0x18) = unaff_R13;\n                        unaff_R13 = (unaff_RBX & 7) + 0x30;\n                        *((unaff_RDI - 1) + iVar3) = unaff_R13;\n                        unaff_RBX = unaff_RBX >> 3;\n                        unaff_RDI = *(*0x20 + -0x18);\ncode_r0x0049b645:\n                        if (unaff_RBX < 8) break;\n                        unaff_R13 = unaff_RDI - 1;\n                        if (arg1_00 <= unaff_R13) {\n                            *(*0x20 + -0x50) = 0x49b665;\n                            arg1 = arg1_00;\n                            in_RAX = fcn.0045eee0(arg1_00);\n                            goto code_r0x0049b665;\n                        }\n                    }\n                } while( true );\n            }\n            unaff_R13 = unaff_RDI - 1;\n            if (arg1_00 <= unaff_R13) goto code_r0x0049b697;\ncode_r0x0049b665:\n            *(*0x20 + -0x18) = unaff_R13;\n            unaff_R13 = (unaff_RBX & 1) + 0x30;\n            *((unaff_RDI - 1) + iVar3) = unaff_R13;\n            unaff_RBX = unaff_RBX >> 1;\n            unaff_RDI = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x0049b6a6;\ncode_r0x0049b697:\n    *(*0x20 + -0x50) = 0x49b6a5;\n    arg1 = arg1_00;\n    in_RAX = fcn.0045eee0(arg1_00);\ncode_r0x0049b6a6:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    puVar6[0x20] = unaff_RDI;\n    *(puVar6 + 0x24) = uVar7;\n    *(puVar6 + 0x28) = arg3;\n    *(puVar6 + 0x30) = arg4;\n    *(puVar6 + -8) = 0x49b6cd;\n    fcn.0045c800();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = puVar6[0x20];\n    unaff_RSI = *(puVar6 + 0x24);\n    arg3 = *(puVar6 + 0x28);\n    arg4 = *(puVar6 + 0x30);\n    *0x20 = puVar6;\n    unaff_R12 = arg1_00;\n    goto code_r0x0049b160;\n}\n",
        "token_count": 4413
    },
    "0049b700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0049b700(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            while( true ) {\n                if (arg1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) break;\n                if (arg1 <= arg1_00) goto code_r0x0049b7ed;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    iVar1 = 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    iVar1 = arg1 - arg1_00;\n                    *(*0x20 + -0x38) = 0x49b7a9;\n                    fcn.0047e460(unaff_RDI - arg1_00);\n                    arg1_00 = *(*0x20 + -0x10);\n                    arg1 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                arg1_00 = arg1_00 + iVar1;\n            }\n            if (arg1_00 <= unaff_RDI) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x38) = 0x49b7ed;\n            fcn.0045ef60(arg1_00, unaff_RDI);\n            arg1 = arg1_00;\ncode_r0x0049b7ed:\n            *(*0x20 + -0x38) = 0x49b7f2;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x49b80c;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 861
    },
    "0049b840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049b840(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t arg2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x0049b87a:\n                *(*0x20 + -0x38) = 0x49b87f;\n                fcn.0049aac0(arg1);\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            arg2 = arg1;\n            do {\n                arg1 = arg2;\n                if (arg1 <= arg1_00) goto code_r0x0049b87a;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    arg2 = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x38) = 0x49b8bb;\n                    fcn.00458fa0(arg1_00);\n                    arg2 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x10);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (-1 < iVar3);\n            if (arg1 <= arg2) goto code_r0x0049b87a;\n            *(*0x20 + -0x38) = 0x49b8f8;\n            in_RAX = fcn.0045ef20(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x49b90d;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 780
    },
    "0049b9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049b9c0(int64_t *arg1, ulong noname_1, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t **in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uchar uVar6;\n    uint8_t uVar7;\n    int64_t *piVar8;\n    int64_t *in_R10;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    int64_t *piVar10;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            piVar4 = arg1;\n            if (unaff_RDI != 0) {\n                piVar4 = unaff_RSI;\n            }\n            if ((*(in_RAX + 9) != '\\0') && (in_RAX[4] < piVar4)) {\n                piVar4 = in_RAX[4];\n            }\n            arg3 = piVar4 << 1;\n            if (arg3 < 1) {\n                if (*(in_RAX + 1) != '\\0') {\n                    *(*0x20 + -0x90) = 0x49bbcc;\n                    fcn.0049a680();\n                }\n                return;\n            }\n            if (*(in_RAX + 0xd) == '\\0') {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 * 2 + 2;\n                }\n            }\n            else {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 << 2;\n                }\n                arg3 = (arg3 + piVar4) - 1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = piVar4;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = arg3;\n            if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) == '\\0')) {\n                *(*0x20 + -0x90) = 0x49bac6;\n                fcn.0049a680();\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x40);\n                arg4 = *(*0x20 + 0x38);\n                in_R10 = *(*0x20 + 0x40);\n                piVar4 = *(*0x20 + -0x10);\n            }\n            piVar10 = *in_RAX;\n            arg1_00 = piVar10[1];\n            piVar9 = piVar10[2];\n            iVar2 = *piVar10;\n            iVar1 = iVar2;\n            if (*(in_RAX + 0xc) == '\\0') {\ncode_r0x0049bbb8:\n                piVar10 = NULL;\n                while( true ) {\n                    if (piVar4 <= piVar10) {\n                        piVar4 = *in_RAX;\n                        piVar4[1] = arg1_00;\n                        piVar4[2] = piVar9;\n                        if (*0x626890 == 0) {\n                            *piVar4 = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x90) = 0x49be70;\n                            in_RAX = fcn.0045eb40(iVar1);\n                        }\n                        if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) != '\\0')) {\n                            *(*0x20 + -0x90) = 0x49be8d;\n                            fcn.0049a680();\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x38) = piVar10;\n                    iVar2 = iVar1;\n                    if (*(in_RAX + 0xd) == '\\0') {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else if (piVar10 < 1) {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else {\n                        piVar3 = arg1_00;\n                        piVar8 = arg1_00 + 1U;\n                        if (piVar9 < arg1_00 + 1U) {\n                            *(*0x20 + -0x20) = arg1_00;\n                            *(*0x20 + -0x90) = 0x49bc4c;\n                            iVar2 = fcn.00447240(arg1_00);\n                            arg1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x38);\n                            in_R10 = *(*0x20 + 0x40);\n                            piVar4 = *(*0x20 + -0x10);\n                            piVar10 = *(*0x20 + -0x38);\n                            in_RAX = *(*0x20 + 8);\n                            piVar3 = *(*0x20 + -0x20);\n                            piVar8 = iVar1 + 1;\n                            piVar9 = arg1_00;\n                        }\n                        arg1_00 = piVar8;\n                        *(iVar2 + piVar3) = 0x20;\n                        iVar1 = unaff_RDI;\n                        if (*(in_RAX + 0xc) != '\\0') {\n                            if (in_R10 < 0x11) goto code_r0x0049bec9;\n                            uVar6 = *(arg4 + 0x10);\n                            piVar8 = arg1_00;\n                            piVar3 = arg1_00 + 2U;\n                            if (piVar9 < arg1_00 + 2U) {\n                                *(*0x20 + -0x28) = arg1_00;\n                                *(*0x20 + -0x41) = uVar6;\n                                *(*0x20 + -0x90) = 0x49bcec;\n                                iVar1 = fcn.00447240(arg1_00);\n                                piVar3 = iVar2 + 2;\n                                arg1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RSI = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                uVar6 = *(*0x20 + -0x41);\n                                in_R10 = *(*0x20 + 0x40);\n                                piVar10 = *(*0x20 + -0x38);\n                                in_RAX = *(*0x20 + 8);\n                                piVar4 = *(*0x20 + -0x10);\n                                piVar8 = *(*0x20 + -0x28);\n                                iVar2 = iVar1;\n                                piVar9 = arg1_00;\n                                iVar1 = *(*0x20 + 0x20);\n                            }\n                            arg1_00 = piVar3;\n                            *(iVar2 + piVar8) = 0x30;\n                            *(iVar2 + 1 + piVar8) = uVar6;\n                            arg4 = *(*0x20 + 0x38);\n                        }\n                        bVar11 = iVar1 == 0;\n                        arg3 = *(*0x20 + -0x40);\n                    }\n                    if (bVar11) {\n                        if (arg1 <= piVar10) goto code_r0x0049beb3;\n                        uVar7 = *(unaff_RBX + piVar10);\n                        arg1 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        if (unaff_RSI <= piVar10) goto code_r0x0049bebe;\n                        uVar7 = *(unaff_RDI + piVar10);\n                    }\n                    *(*0x20 + -0x43) = uVar7;\n                    arg3 = uVar7 >> 4;\n                    if (in_R10 <= arg3) goto code_r0x0049bea8;\n                    uVar7 = *(arg3 + arg4);\n                    arg3 = uVar7;\n                    arg1 = *(*0x20 + -0x43) & 0xf;\n                    if (in_R10 <= arg1) break;\n                    uVar6 = *(arg1 + arg4);\n                    piVar3 = arg1_00;\n                    piVar8 = arg1_00 + 2U;\n                    iVar1 = iVar2;\n                    if (piVar9 < arg1_00 + 2U) {\n                        *(*0x20 + -0x41) = uVar7;\n                        *(*0x20 + -0x42) = uVar6;\n                        *(*0x20 + -0x30) = arg1_00;\n                        *(*0x20 + -0x90) = 0x49bdfe;\n                        iVar1 = fcn.00447240(arg1_00);\n                        uVar6 = *(*0x20 + -0x42);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        uVar7 = *(*0x20 + -0x41);\n                        arg4 = *(*0x20 + 0x38);\n                        piVar4 = *(*0x20 + -0x10);\n                        piVar10 = *(*0x20 + -0x38);\n                        in_RAX = *(*0x20 + 8);\n                        piVar3 = *(*0x20 + -0x30);\n                        piVar8 = iVar2 + 2;\n                        piVar9 = arg1_00;\n                    }\n                    arg1_00 = piVar8;\n                    *(iVar1 + piVar3) = uVar7;\n                    *(iVar1 + 1 + piVar3) = uVar6;\n                    piVar10 = piVar10 + 1;\n                    arg1 = *(*0x20 + -0x18);\n                    arg3 = *(*0x20 + -0x40);\n                    in_R10 = *(*0x20 + 0x40);\n                }\n                *(*0x20 + -0x90) = 0x49bea8;\n                fcn.0045eee0(in_R10);\ncode_r0x0049bea8:\n                *(*0x20 + -0x90) = 0x49beb3;\n                fcn.0045eee0(in_R10);\ncode_r0x0049beb3:\n                *(*0x20 + -0x90) = 0x49bebe;\n                fcn.0045eee0(arg1);\ncode_r0x0049bebe:\n                arg1_00 = arg3;\n                *(*0x20 + -0x90) = 0x49bec9;\n                fcn.0045eee0(unaff_RSI);\ncode_r0x0049bec9:\n                *(*0x20 + -0x90) = 0x49bed6;\n                fcn.0045eee0(in_R10);\n                arg3 = arg1_00;\n            }\n            else if (0x10 < in_R10) {\n                uVar6 = *(arg4 + 0x10);\n                piVar10 = arg1_00;\n                piVar3 = arg1_00 + 2U;\n                if (piVar9 < arg1_00 + 2U) {\n                    *(*0x20 + -0x41) = uVar6;\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x90) = 0x49bb57;\n                    iVar1 = fcn.00447240(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    uVar6 = *(*0x20 + -0x41);\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x40);\n                    piVar4 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                    piVar10 = *(*0x20 + -0x30);\n                    piVar9 = arg1_00;\n                    piVar3 = iVar2 + 2;\n                }\n                arg1_00 = piVar3;\n                *(iVar1 + piVar10) = 0x30;\n                *(iVar1 + 1 + piVar10) = uVar6;\n                arg3 = *(*0x20 + -0x40);\n                goto code_r0x0049bbb8;\n            }\n            arg1 = in_R10;\n            *(*0x20 + -0x90) = 0x49bee5;\n            in_R10 = arg1;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x49bf13;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 3573
    },
    "0049bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049bf60(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t in_RDX;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RDX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x0049bfa5:\n                if (*(in_RAX + 0xc) != '\\0') {\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x80) = 0x49bfbb;\n                    cVar2 = fcn.00485040();\n                    if (cVar2 != '\\0') {\n                        *(*0x20 + -0x80) = 0x49c091;\n                        fcn.0044aca0(1, arg1_00, 0x4c8766, 1);\n                        *(*0x20 + -0x80) = 0x49c0a5;\n                        fcn.0049aac0(0x4c8766);\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (*(in_RAX + 0xb) == '\\0') {\n                    *(*0x20 + -0x80) = 0x49c048;\n                    fcn.00484260(0x44);\n                    *(*0x20 + -0x80) = 0x49c05e;\n                    fcn.0049a800(0);\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x49c00b;\n                    fcn.00484260(0x44);\n                    *(*0x20 + -0x80) = 0x49c025;\n                    fcn.0049a800(0);\n                }\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            in_RDX = arg1;\n            do {\n                arg1 = in_RDX;\n                if (arg1 <= arg1_00) goto code_r0x0049bfa5;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    in_RDX = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x38) = iVar4;\n                    *(*0x20 + -0x80) = 0x49c0e7;\n                    fcn.00458fa0(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    in_RDX = *(*0x20 + 0x18);\n                    iVar4 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x30);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            arg1_00 = arg1;\n            if (arg1 <= in_RDX) goto code_r0x0049bfa5;\n            *(*0x20 + -0x80) = 0x49c133;\n            in_RAX = fcn.0045ef20(arg1, in_RDX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x49c148;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1098
    },
    "0049c200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049c200(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.004846e0(0x44);\n        fcn.0049a800(0);\n    }\n    else {\n        fcn.004846e0(0x44);\n        fcn.0049a800(0);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0049c2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049c34f)\n// WARNING: Removing unreachable block (ram,0x0049c358)\n// WARNING: Removing unreachable block (ram,0x0049c35d)\n// WARNING: Removing unreachable block (ram,0x0049c368)\n// WARNING: Removing unreachable block (ram,0x0049c36b)\n// WARNING: Removing unreachable block (ram,0x0049c380)\n// WARNING: Removing unreachable block (ram,0x0049c389)\n// WARNING: Removing unreachable block (ram,0x0049c38e)\n// WARNING: Removing unreachable block (ram,0x0049c394)\n// WARNING: Removing unreachable block (ram,0x0049c3a0)\n// WARNING: Removing unreachable block (ram,0x0049c3aa)\n// WARNING: Removing unreachable block (ram,0x0049c3c0)\n// WARNING: Removing unreachable block (ram,0x0049c45e)\n// WARNING: Removing unreachable block (ram,0x0049c471)\n// WARNING: Removing unreachable block (ram,0x0049c477)\n// WARNING: Removing unreachable block (ram,0x0049c47d)\n// WARNING: Removing unreachable block (ram,0x0049c486)\n// WARNING: Removing unreachable block (ram,0x0049c3ca)\n// WARNING: Removing unreachable block (ram,0x0049c3d4)\n// WARNING: Removing unreachable block (ram,0x0049c3ea)\n// WARNING: Removing unreachable block (ram,0x0049c400)\n// WARNING: Removing unreachable block (ram,0x0049c406)\n// WARNING: Removing unreachable block (ram,0x0049c3f0)\n// WARNING: Removing unreachable block (ram,0x0049c3f6)\n// WARNING: Removing unreachable block (ram,0x0049c40c)\n// WARNING: Removing unreachable block (ram,0x0049c41b)\n// WARNING: Removing unreachable block (ram,0x0049c420)\n// WARNING: Removing unreachable block (ram,0x0049c3fc)\n// WARNING: Removing unreachable block (ram,0x0049c422)\n// WARNING: Removing unreachable block (ram,0x0049c425)\n// WARNING: Removing unreachable block (ram,0x0049c718)\n// WARNING: Removing unreachable block (ram,0x0049c977)\n// WARNING: Removing unreachable block (ram,0x0049c98a)\n// WARNING: Removing unreachable block (ram,0x0049c990)\n// WARNING: Removing unreachable block (ram,0x0049c996)\n// WARNING: Removing unreachable block (ram,0x0049c999)\n// WARNING: Removing unreachable block (ram,0x0049c9a5)\n// WARNING: Removing unreachable block (ram,0x0049c9ed)\n// WARNING: Removing unreachable block (ram,0x0049c985)\n// WARNING: Removing unreachable block (ram,0x0049c9fd)\n// WARNING: Removing unreachable block (ram,0x0049ca07)\n// WARNING: Removing unreachable block (ram,0x0049ca10)\n// WARNING: Removing unreachable block (ram,0x0049c9f3)\n// WARNING: Removing unreachable block (ram,0x0049ca58)\n// WARNING: Removing unreachable block (ram,0x0049ca69)\n// WARNING: Removing unreachable block (ram,0x0049ca97)\n// WARNING: Removing unreachable block (ram,0x0049c4b7)\n// WARNING: Removing unreachable block (ram,0x0049c4c0)\n// WARNING: Removing unreachable block (ram,0x0049c4c9)\n// WARNING: Removing unreachable block (ram,0x0049c6c9)\n// WARNING: Removing unreachable block (ram,0x0049c4d2)\n// WARNING: Removing unreachable block (ram,0x0049c4dc)\n// WARNING: Removing unreachable block (ram,0x0049c4e6)\n// WARNING: Removing unreachable block (ram,0x0049c6a8)\n// WARNING: Removing unreachable block (ram,0x0049c4f0)\n// WARNING: Removing unreachable block (ram,0x0049c4fc)\n// WARNING: Removing unreachable block (ram,0x0049c526)\n// WARNING: Removing unreachable block (ram,0x0049c560)\n// WARNING: Removing unreachable block (ram,0x0049c55a)\n// WARNING: Removing unreachable block (ram,0x0049c565)\n// WARNING: Removing unreachable block (ram,0x0049c581)\n// WARNING: Removing unreachable block (ram,0x0049c5f5)\n// WARNING: Removing unreachable block (ram,0x0049c638)\n// WARNING: Removing unreachable block (ram,0x0049c68b)\n// WARNING: Removing unreachable block (ram,0x0049c67e)\n// WARNING: Removing unreachable block (ram,0x0049c698)\n// WARNING: Removing unreachable block (ram,0x0049c701)\n// WARNING: Removing unreachable block (ram,0x0049c70b)\n// WARNING: Removing unreachable block (ram,0x0049c729)\n// WARNING: Removing unreachable block (ram,0x0049c765)\n// WARNING: Removing unreachable block (ram,0x0049c76f)\n// WARNING: Removing unreachable block (ram,0x0049c86f)\n// WARNING: Removing unreachable block (ram,0x0049c89c)\n// WARNING: Removing unreachable block (ram,0x0049c8c5)\n// WARNING: Removing unreachable block (ram,0x0049c908)\n// WARNING: Removing unreachable block (ram,0x0049c74b)\n// WARNING: Removing unreachable block (ram,0x0049c759)\n// WARNING: Removing unreachable block (ram,0x0049c780)\n// WARNING: Removing unreachable block (ram,0x0049c78a)\n// WARNING: Removing unreachable block (ram,0x0049c794)\n// WARNING: Removing unreachable block (ram,0x0049c7bb)\n// WARNING: Removing unreachable block (ram,0x0049c800)\n// WARNING: Removing unreachable block (ram,0x0049c760)\n// WARNING: Removing unreachable block (ram,0x0049c875)\n// WARNING: Removing unreachable block (ram,0x0049c88b)\n// WARNING: Removing unreachable block (ram,0x0049c88f)\n// WARNING: Removing unreachable block (ram,0x0049c751)\n// WARNING: Removing unreachable block (ram,0x0049c715)\n// WARNING: Removing unreachable block (ram,0x0049cad8)\n// WARNING: Removing unreachable block (ram,0x0049cae5)\n\nvoid fcn.0049c2e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong in_XMM0_Qa;\n    ulong extraout_XMM0_Qa;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x60 && *0x20 + -0x60 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 9) != '\\0') {\n                unaff_RDI = *(in_RAX + 0x20);\n            }\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = unaff_RDI;\n            unaff_RDI = arg1;\n            *(*0x20 + -0xe8) = 0x49c345;\n            fcn.00480320(0x44, in_RAX + 0x28, unaff_RBX);\n            unaff_RBX = 1;\n            *(*0x20 + -0xe8) = 0x49cafc;\n            uVar1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(1);\n            arg1._0_4_ = uVar1;\n            in_XMM0_Qa = extraout_XMM0_Qa;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = in_XMM0_Qa;\n        *(puVar2 + 0x18) = unaff_RBX;\n        *(puVar2 + 0x20) = arg1;\n        *(puVar2 + 0x28) = unaff_RDI;\n        *(puVar2 + -8) = 0x49cb1b;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        in_XMM0_Qa = *(puVar2 + 0x10);\n        unaff_RBX = *(puVar2 + 0x18);\n        arg1._0_4_ = *(puVar2 + 0x20);\n        unaff_RDI = *(puVar2 + 0x28);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 2122
    },
    "0049cb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049cb40(ulong param_1, ulong param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg2;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (unaff_EBX < 0x80) {\n                iVar4 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar3 = iVar1;\n                if (in_RAX[2] < iVar4 + 1U) {\n                    *(*0x20 + -0x70) = 0x49cba5;\n                    arg2 = iVar1;\n                    iVar3 = fcn.00447240(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = iVar4;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x49cbc5;\n                        iVar3 = fcn.0045ea40(iVar4, arg2, param_3, param_4);\n                    }\n                    unaff_EBX = *(*0x20 + 0x10);\n                    iVar4 = iVar1;\n                }\n                in_RAX[1] = iVar4 + 1;\n                *(iVar3 + iVar4) = unaff_EBX;\n                return;\n            }\n            uVar5 = in_RAX[1];\n            *(*0x20 + -0x28) = uVar5;\n            arg2_00 = in_RAX[2];\n            param_3 = uVar5;\n            param_4 = *in_RAX;\n            while( true ) {\n                uVar7 = uVar5 + 4;\n                if (uVar7 <= arg2_00) break;\n                uVar7 = param_3 + 1;\n                uVar8 = param_3;\n                iVar4 = param_4;\n                if (arg2_00 < uVar7) {\n                    *(*0x20 + -0x18) = param_3;\n                    *(*0x20 + -0x70) = 0x49cc1f;\n                    iVar4 = fcn.00447240(param_3);\n                    uVar7 = param_4 + 1;\n                    unaff_EBX = *(*0x20 + 0x10);\n                    uVar8 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x28);\n                    arg2_00 = param_3;\n                }\n                *(iVar4 + uVar8) = 0;\n                param_3 = uVar7;\n                param_4 = iVar4;\n            }\n            if (uVar7 <= arg2_00) {\n                if (uVar5 <= uVar7) {\n                    *(*0x20 + -0x20) = arg2_00;\n                    *(*0x20 + -0x10) = param_4;\n                    iVar4 = arg2_00 - uVar5;\n                    arg2_00 = -iVar4 >> 0x3f & uVar5;\n                    unaff_EBX = 4;\n                    *(*0x20 + -0x70) = 0x49cc78;\n                    iVar4 = fcn.0047e900(iVar4);\n                    uVar5 = *(*0x20 + -0x28) + iVar4;\n                    uVar8 = *(*0x20 + -0x20);\n                    if (uVar5 <= uVar8) {\n                        puVar2 = *(*0x20 + 8);\n                        puVar2[1] = uVar5;\n                        puVar2[2] = uVar8;\n                        if (*0x626890 == 0) {\n                            *puVar2 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x49ccb6;\n                            fcn.0045ea40(uVar5, uVar8, param_3, param_4);\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x70) = 0x49ccc6;\n                    fcn.0045ef60(uVar5, uVar8);\n                }\n                *(*0x20 + -0x70) = 0x49ccd1;\n                fcn.0045efa0(uVar7);\n            }\n            *(*0x20 + -0x70) = 0x49ccdc;\n            in_RAX = fcn.0045ef60(uVar7, arg2_00);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x49cceb;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1322
    },
    "0049cd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0049cd60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x49cd85;\n            iVar1 = fcn.00465f40();\n            if (iVar1 == 0x4c4d60) {\n                *(unaff_RBX + 0xb2) = 0;\n                *(unaff_RBX + 0xb4) = 0;\n                if (*0x626890 == 0) {\n                    *(unaff_RBX + 0x40) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x49cdba;\n                    fcn.0045eb80(0x4c4d60, param_2, param_3, param_4);\n                }\n                *(unaff_RBX + 0x48) = 0;\n                *(unaff_RBX + 0x49) = 0;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x4c4d60;\n            *(*0x20 + -0x28) = 0x49cde7;\n            fcn.0040a180(0x4b6d60);\n        }\n        *(puVar2 + -8) = 0x49cded;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "0049ce00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049ce00(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x10) < 0x10001) {\n        *(in_RAX + 8) = 0;\n        *(in_RAX + 0x18) = 0;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x20) = 0;\n        }\n        else {\n            in_RAX = fcn.0045eb60(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0x38) = 0;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0x28) = in_XMM15;\n        }\n        else {\n            fcn.0045eb60(arg1, 0, arg3, in_R9);\n            in_RAX = fcn.0045eb60(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0xb8) = 0;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0xc0) = 0;\n        }\n        else {\n            in_RAX = fcn.0045eb60(arg1, 0, arg3, in_R9);\n        }\n        fcn.00465e60(in_RAX);\n        return;\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "0049d200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049d200(ulong arg1)\n\n{\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0048e360(arg1);\n    if (((arg1 & 0x1f) == 0x14) && (*unaff_RBX != 0)) {\n        fcn.0048e180(arg1);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0049d2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049d2a0(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI == 0) {\n        uVar5 = in_RAX[1];\n        uVar6 = in_RAX[2];\n        uVar4 = *in_RAX;\n        if (uVar6 < uVar5 + 5) {\n            uVar6 = uVar5;\n            uVar4 = fcn.00447240(uVar5);\n        }\n        *(uVar4 + uVar5) = 0x6c696e3c;\n        *(uVar4 + 4 + uVar5) = 0x3e;\n        in_RAX[1] = uVar5 + 5;\n        in_RAX[2] = uVar6;\n        if (*0x626890 == 0) {\n            *in_RAX = uVar4;\n        }\n        else {\n            fcn.0045eb80(uVar5, arg2, arg3, arg4);\n        }\n        return;\n    }\n    uVar5 = in_RAX[1];\n    uVar6 = *in_RAX;\n    uVar4 = in_RAX[2];\n    uVar1 = uVar6;\n    if (uVar4 < uVar5 + 1) {\n        uVar3 = uVar5;\n        arg3_00 = uVar6;\n        iStack16 = arg1;\n        uVar1 = fcn.00447240(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x626890 == 0) {\n            *in_RAX = uVar1;\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n        else {\n            uVar1 = fcn.0045ea40(uVar5, uVar3, arg3_00, uVar4);\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar1 + uVar5) = 0x3f;\n    iVar2 = fcn.0048f4c0(unaff_RDI);\n    (**(iVar2 + 0xf8))();\n    uVar6 = in_RAX[1];\n    uVar5 = uVar6 + arg1;\n    uVar4 = in_RAX[2];\n    uVar1 = *in_RAX;\n    if (uVar4 < uVar5) {\n        uVar4 = uVar6;\n        uVar1 = fcn.00447240(uVar6);\n    }\n    iVar2 = arg1;\n    fcn.0045f840(arg1);\n    in_RAX[1] = uVar5;\n    in_RAX[2] = uVar4;\n    arg1 = uVar6 + arg1;\n    if (*0x626890 == 0) {\n        *in_RAX = uVar1;\n    }\n    else {\n        fcn.0045eb80(uVar5, uVar4, uVar6, iVar2);\n    }\n    uVar3 = uVar1;\n    if (uVar4 < arg1 + 1U) {\n        uVar3 = fcn.00447240(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x626890 == 0) {\n            *in_RAX = uVar3;\n            uVar5 = uVar1;\n        }\n        else {\n            uVar3 = fcn.0045ea40(uVar5, uVar4, uVar6, iVar2);\n            uVar5 = uVar1;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar3 + uVar5) = 0x3f;\n    return;\n}\n",
        "token_count": 993
    },
    "0049d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049d560(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack32 < *(unaff_R14 + 0x10) || &uStack32 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0xb3) = 1;\n    uVar9 = in_RAX[1];\n    uVar5 = in_RAX[2];\n    uVar2 = *in_RAX;\n    if (uVar5 < uVar9 + 2) {\n        uVar5 = uVar9;\n        uVar2 = fcn.00447240(uVar9);\n    }\n    *(uVar2 + uVar9) = 0x2125;\n    in_RAX[1] = uVar9 + 2;\n    in_RAX[2] = uVar5;\n    if (*0x626890 == 0) {\n        *in_RAX = uVar2;\n    }\n    else {\n        fcn.0045eb60(uVar9, uVar2, arg3, in_R9);\n    }\n    fcn.0049cb40();\n    uVar9 = in_RAX[1];\n    uVar5 = *in_RAX;\n    uVar2 = in_RAX[2];\n    uVar3 = uVar5;\n    if (uVar2 < uVar9 + 1) {\n        uVar3 = fcn.00447240(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x626890 == 0) {\n            *in_RAX = uVar3;\n            uVar9 = uVar5;\n        }\n        else {\n            uVar3 = fcn.0045ea40(uVar9, uVar2, arg3, in_R9);\n            uVar9 = uVar5;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar3 + uVar9) = 0x28;\n    uVar9 = in_RAX[3];\n    uVar5 = in_RAX[4];\n    if (uVar9 == 0) {\n        if (in_RAX[7] == 0) {\n            uVar9 = in_RAX[1];\n            uVar2 = in_RAX[2];\n            uVar3 = *in_RAX;\n            if (uVar2 < uVar9 + 5) {\n                uVar2 = uVar9;\n                uVar3 = fcn.00447240(uVar9);\n            }\n            *(uVar3 + uVar9) = 0x6c696e3c;\n            *(uVar3 + 4 + uVar9) = 0x3e;\n            in_RAX[1] = uVar9 + 5;\n            in_RAX[2] = uVar2;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar3;\n            }\n            else {\n                fcn.0045eb80(uVar9, uVar2, uVar5, in_R9);\n            }\n        }\n        else {\n            uVar5 = in_RAX[6];\n            iVar4 = fcn.0048f4c0(in_RAX[7]);\n            (**(iVar4 + 0xf8))();\n            uVar2 = in_RAX[1];\n            uVar9 = uVar5 + uVar2;\n            uVar3 = in_RAX[2];\n            uVar8 = *in_RAX;\n            if (uVar3 < uVar9) {\n                uVar3 = uVar2;\n                uVar8 = fcn.00447240(uVar2);\n            }\n            in_R9 = uVar5;\n            uStack32 = uVar8;\n            fcn.0045f840(uVar5);\n            uVar1 = uStack32;\n            in_RAX[1] = uVar9;\n            in_RAX[2] = uVar3;\n            if (*0x626890 == 0) {\n                *in_RAX = uStack32;\n                puVar6 = in_RAX;\n                uVar10 = uVar2;\n            }\n            else {\n                puVar6 = fcn.0045eb80(uVar9, uVar3, uVar8, in_R9);\n                uVar10 = uVar3;\n            }\n            uVar7 = uVar1;\n            if (uVar3 < uVar5 + uVar2 + 1) {\n                uVar7 = fcn.00447240(uVar9);\n                in_RAX[2] = uVar9;\n                if (*0x626890 == 0) {\n                    *in_RAX = uVar7;\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n                else {\n                    uVar7 = fcn.0045ea40(uVar9, uVar10, uVar8, in_R9);\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n            }\n            puVar6[1] = uVar9 + 1;\n            *(uVar7 + uVar9) = 0x3d;\n            uVar5 = 0;\n            fcn.004a0220(puVar6[6], uVar9 + 1, 0);\n        }\n    }\n    else {\n        if (uVar9 == 0) {\n            iVar4 = 0;\n            uVar2 = 0;\n        }\n        else {\n            iVar4 = 0x4ef0c0;\n            uVar2 = uVar9;\n        }\n        uStack24 = uVar9;\n        uStack16 = uVar5;\n        (**(iVar4 + 0xf8))(uVar2);\n        uVar2 = in_RAX[1];\n        uVar9 = uVar3 + uVar2;\n        uVar8 = in_RAX[2];\n        uVar5 = *in_RAX;\n        if (uVar8 < uVar9) {\n            uVar8 = uVar2;\n            uVar5 = fcn.00447240(uVar2);\n        }\n        uStack32 = uVar5;\n        fcn.0045f840(uVar3);\n        uVar1 = uStack32;\n        in_RAX[1] = uVar9;\n        in_RAX[2] = uVar8;\n        if (*0x626890 == 0) {\n            *in_RAX = uStack32;\n            puVar6 = in_RAX;\n            uVar10 = uVar2;\n        }\n        else {\n            puVar6 = fcn.0045eb80(uVar9, uVar8, uVar5, in_R9);\n            uVar10 = uVar8;\n        }\n        uVar7 = uVar1;\n        if (uVar8 < uVar3 + uVar2 + 1) {\n            uVar7 = fcn.00447240(uVar9);\n            in_RAX[2] = uVar9;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar7;\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n            else {\n                uVar7 = fcn.0045ea40(uVar9, uVar10, uVar5, in_R9);\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n        }\n        puVar6[1] = uVar9 + 1;\n        *(uVar7 + uVar9) = 0x3d;\n        fcn.0049fa40(puVar6[4]);\n    }\n    uVar9 = in_RAX[1];\n    uVar2 = *in_RAX;\n    uVar3 = in_RAX[2];\n    uVar8 = uVar2;\n    if (uVar3 < uVar9 + 1) {\n        uVar8 = fcn.00447240(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x626890 == 0) {\n            *in_RAX = uVar8;\n            uVar9 = uVar2;\n        }\n        else {\n            uVar8 = fcn.0045ea40(uVar9, uVar3, uVar5, in_R9);\n            uVar9 = uVar2;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar8 + uVar9) = 0x29;\n    *(in_RAX + 0xb3) = 0;\n    return;\n}\n",
        "token_count": 2046
    },
    "0049db60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049db60(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xff;\n    }\n    if (unaff_EDI < 100) {\n        if (unaff_EDI < 0x56) {\n            if (unaff_EDI == 0x4f) {\ncode_r0x0049dc3e:\n                fcn.0049b160(8, arg2, 0x4cad28, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x55) {\n                fcn.0049ae00();\n                return;\n            }\n        }\n        else {\n            if (unaff_EDI == 0x58) {\n                fcn.0049b160(0x10, arg2, 0x4cad17, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x62) {\n                fcn.0049b160(2, arg2, 0x4cad28, 0x11);\n                return;\n            }\n            if (unaff_EDI == 99) {\n                fcn.0049c160();\n                return;\n            }\n        }\n    }\n    else if (unaff_EDI < 0x70) {\n        if (unaff_EDI == 100) {\n            fcn.0049b160(10, arg2, 0x4cad28, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x6f) goto code_r0x0049dc3e;\n    }\n    else {\n        if (unaff_EDI == 0x71) {\n            fcn.0049c200();\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if ((*(in_RAX + 0x50) != '\\0') && (arg1 == '\\0')) {\n                fcn.0049dac0(1);\n                return;\n            }\n            fcn.0049b160(10, arg2, 0x4cad28, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.0049b160(0x10, arg2, 0x4cad28, 0x11);\n            return;\n        }\n    }\n    fcn.0049d560(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 622
    },
    "0049de60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0049de60(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    int64_t arg3;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    \n    while (iVar3 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar3 < 99) {\n        uVar6 = iVar3 - 0x45;\n        if (((uVar6 < 3) || (iVar3 == 0x58)) || (iVar3 == 0x62)) {\ncode_r0x0049deae:\n            uVar1 = *(in_RAX + 0x4b);\n            uVar5 = uVar1;\n            arg1_00 = in_RAX[1];\n            iVar2 = *in_RAX;\n            uVar4 = arg1;\n            arg4 = iVar2;\n            if (in_RAX[2] < arg1_00 + 1U) {\n                arg3 = arg1_00;\n                arg4_00 = iVar2;\n                arg4 = fcn.00447240(arg1_00);\n                in_RAX[2] = arg1_00;\n                if (*0x626890 == 0) {\n                    *in_RAX = arg4;\n                }\n                else {\n                    arg4 = fcn.0045ea40(arg1_00, uVar5, arg3, arg4_00);\n                }\n                uVar4 = arg1 & 0xffffffff;\n                arg1_00 = iVar2;\n            }\n            in_RAX[1] = arg1_00 + 1;\n            *(arg4 + arg1_00) = 0x28;\n            fcn.0049dd60(uVar4);\n            *(in_RAX + 0x4b) = 1;\n            fcn.0049dd60(arg1 & 0xffffffff);\n            uVar4 = in_RAX[1];\n            uVar5 = in_RAX[2];\n            iVar2 = *in_RAX;\n            if (uVar5 < uVar4 + 2) {\n                uVar5 = uVar4;\n                iVar2 = fcn.00447240(uVar4);\n            }\n            *(iVar2 + uVar4) = 0x2969;\n            in_RAX[1] = uVar4 + 2;\n            in_RAX[2] = uVar5;\n            if (*0x626890 == 0) {\n                *in_RAX = iVar2;\n            }\n            else {\n                fcn.0045eb80(uVar4, uVar5, arg1_00, arg4);\n            }\n            *(in_RAX + 0x4b) = uVar1;\n            return;\n        }\n    }\n    else {\n        uVar6 = iVar3 - 0x65;\n        if (((uVar6 < 3) || (iVar3 == 0x76)) || (iVar3 == 0x78)) goto code_r0x0049deae;\n    }\n    fcn.0049d560(arg1, uVar6, in_R8);\n    return;\n}\n",
        "token_count": 800
    },
    "0049e060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049e060(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_EDI < 0x72) {\n        if (unaff_EDI == 0x58) {\n            fcn.0049b9c0(arg1, arg2, 0, 0x4cad17);\n            return;\n        }\n        if (unaff_EDI == 0x71) {\n            fcn.0049bf60(arg1);\n            return;\n        }\n    }\n    else {\n        if (unaff_EDI == 0x73) {\n            fcn.0049b840(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if (*(in_RAX + 0x50) != '\\0') {\n                fcn.0049bf60(arg1);\n                return;\n            }\n            fcn.0049b840(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.0049b9c0(arg1, arg2, 0, 0x4cad28);\n            return;\n        }\n    }\n    fcn.0049d560(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 355
    },
    "0049e160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049e160(int64_t arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    uchar auStack48 [16];\n    uint64_t uStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (uStack0000000000000030 = arg3,  auStack48 < *(unaff_R14 + 0x10) || auStack48 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg3 = uStack0000000000000030;\n    }\n    if (iStack0000000000000028 < 0x72) {\n        if (iStack0000000000000028 == 0x58) {\n            fcn.0049b9c0(0, noname_1, unaff_RDI, 0x4cad17);\n            return;\n        }\n        if (iStack0000000000000028 == 100) {\ncode_r0x0049e229:\n            if (*(in_RAX + 10) == '\\0') {\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar5 = uVar1;\n                    uVar2 = fcn.00447240(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045ea40(uVar1, uVar5, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        uVar4 = *in_RAX;\n                        uVar2 = uVar4;\n                        if (in_RAX[2] < uVar1 + 1) {\n                            arg2 = iVar7;\n                            uVar2 = fcn.00447240(uVar1);\n                            in_RAX[2] = uVar1;\n                            if (*0x626890 == 0) {\n                                *in_RAX = uVar2;\n                                uVar1 = uVar4;\n                            }\n                            else {\n                                uVar2 = fcn.0045ea40(uVar1, arg2, arg3, arg4);\n                                uVar1 = uVar4;\n                            }\n                        }\n                        in_RAX[1] = uVar1 + 1;\n                        *(uVar2 + uVar1) = 0x20;\n                    }\n                    arg3 = 0x4cad28;\n                    arg4 = 0x11;\n                    fcn.0049b160(10, in_RAX + 8, 0x4cad28, 0x11);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar2 = fcn.00447240(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045ea40(uVar1, iVar7, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5d;\n                return;\n            }\n            uVar4 = in_RAX[1];\n            uVar1 = uVar4 + arg4;\n            uVar2 = in_RAX[2];\n            uStack32 = *in_RAX;\n            if (uVar2 < uVar1) {\n                uVar2 = uVar4;\n                uStack32 = fcn.00447240(uVar4);\n            }\n            uVar3 = uStack0000000000000030;\n            uVar8 = arg4;\n            fcn.0045f840(arg4);\n            uVar5 = uStack32;\n            in_RAX[1] = uVar1;\n            in_RAX[2] = uVar2;\n            uVar6 = uVar1;\n            if (*0x626890 == 0) {\n                *in_RAX = uStack32;\n            }\n            else {\n                fcn.0045eb80(uVar1, uVar2, uVar3, uVar8);\n            }\n            if (unaff_RBX != 0) {\n                uVar1 = uVar5;\n                if (uVar2 < uVar4 + arg4 + 1) {\n                    iVar7 = unaff_RBX;\n                    uVar1 = fcn.00447240(uVar6);\n                    in_RAX[2] = uVar6;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar1;\n                        uVar6 = uVar5;\n                    }\n                    else {\n                        uVar1 = fcn.0045ea40(uVar6, uVar2, iVar7, arg4);\n                        uVar6 = uVar5;\n                    }\n                }\n                in_RAX[1] = uVar6 + 1;\n                *(uVar1 + uVar6) = 0x7b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        arg4 = in_RAX[2];\n                        uVar4 = *in_RAX;\n                        if (arg4 < uVar1 + 2) {\n                            arg4 = uVar1;\n                            uVar4 = fcn.00447240(uVar1);\n                        }\n                        *(uVar4 + uVar1) = 0x202c;\n                        in_RAX[1] = uVar1 + 2;\n                        in_RAX[2] = arg4;\n                        if (*0x626890 == 0) {\n                            *in_RAX = uVar4;\n                        }\n                        else {\n                            fcn.0045eba0(uVar1, arg1, unaff_RBX, arg4);\n                        }\n                    }\n                    fcn.0049dac0(1);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = in_RAX[2];\n                uVar5 = uVar4;\n                if (uVar2 < uVar1 + 1) {\n                    uVar5 = fcn.00447240(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar5;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar5 = fcn.0045ea40(uVar1, uVar2, unaff_RBX, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar5 + uVar1) = 0x7d;\n                return;\n            }\n            uVar8 = uVar4 + arg4 + 5;\n            arg1_00 = uVar6;\n            if (uVar2 < uVar8) {\n                uVar5 = fcn.00447240(uVar6);\n                arg1_00 = uVar1;\n                uVar2 = uVar6;\n            }\n            *(uVar5 + arg1_00) = 0x6c696e28;\n            *(uVar5 + 4 + arg1_00) = 0x29;\n            in_RAX[1] = uVar8;\n            in_RAX[2] = uVar2;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar5;\n            }\n            else {\n                fcn.0045eb80(arg1_00, uVar2, arg4, uVar4);\n            }\n            return;\n        }\n        if (iStack0000000000000028 == 0x71) {\n            fcn.0044afa0(arg1);\n            fcn.0049bf60(unaff_RBX);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x73) {\n            fcn.0049b940(arg1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x76) goto code_r0x0049e229;\n        if (iStack0000000000000028 == 0x78) {\n            fcn.0049b9c0(0, noname_1, unaff_RDI, 0x4cad28);\n            return;\n        }\n    }\n    uStack16 = fcn.0040a560(unaff_RDI);\n    if (*0x5d2690 == '\\0') {\n        iStack24 = 0x4b3e20;\n        uVar3 = *0x5d26a0;\n    }\n    else {\n        iStack24 = 0x4b3e20;\n        *0x5d2698 = 0x4b3e20;\n        uVar3 = uStack16;\n        if (*0x626890 != 0) {\n            uStack16 = fcn.0045ea40(unaff_RDI, 0x4b3e20, arg3, arg4);\n            uVar3 = *0x5d26a0;\n        }\n    }\n    *0x5d26a0 = uVar3;\n    uVar3 = uStack16;\n    iVar7 = iStack24;\n    if (iStack24 == 0) {\n        uVar3 = 0;\n        iVar7 = 0;\n    }\n    fcn.004a0220(uVar3, iVar7, 0);\n    return;\n}\n",
        "token_count": 2472
    },
    "0049e860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0049e860(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint64_t arg4_00;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    uint64_t arg3;\n    ulong arg2;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar7 = unaff_RDI & 0x1f;\n    uVar8 = uVar7 - 0x12;\n    if (((1 < uVar8) && (uVar8 = uVar7 - 0x15,  2 < uVar8)) && (uVar7 != 0x1a)) {\n        fcn.0049d560(arg1, unaff_RDI, uVar8);\n        return;\n    }\n    noname_0 = unaff_RDI;\n    arg2 = unaff_RDI;\n    iStack16 = arg1;\n    arg4 = fcn.0048ef80(unaff_RDI);\n    if (iStack0000000000000028 < 0x65) {\n        if (((iStack0000000000000028 == 0x58) || (iStack0000000000000028 == 0x62)) || (iStack0000000000000028 == 100))\n        goto code_r0x0049ec55;\n    }\n    else if (iStack0000000000000028 < 0x71) {\n        if (iStack0000000000000028 == 0x6f) {\ncode_r0x0049ec55:\n            fcn.0049db60(0, arg2);\n            return;\n        }\n        if (iStack0000000000000028 == 0x70) {\n            fcn.0049dac0(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x76) {\n            if (*(in_RAX + 10) != '\\0') {\n                iVar3 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar2 = iVar1;\n                if (in_RAX[2] < iVar3 + 1U) {\n                    piVar4 = in_RAX;\n                    iVar2 = fcn.00447240(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar2;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar2 = fcn.0045ea40(iVar3, piVar4, uVar8, in_R9);\n                        iVar3 = iVar1;\n                    }\n                }\n                iVar1 = iStack16;\n                in_RAX[1] = iVar3 + 1;\n                *(iVar2 + iVar3) = 0x28;\n                iVar3 = fcn.0048f4c0(unaff_RDI);\n                (**(iVar3 + 0xf8))();\n                uVar7 = in_RAX[1];\n                uVar8 = uVar7 + iVar1;\n                arg4_00 = in_RAX[2];\n                iVar3 = *in_RAX;\n                if (arg4_00 < uVar8) {\n                    arg4_00 = uVar7;\n                    iVar3 = fcn.00447240(uVar7);\n                }\n                fcn.0045f840(iVar1);\n                in_RAX[1] = uVar8;\n                in_RAX[2] = arg4_00;\n                arg3 = uVar7 + iVar1 + 2;\n                uVar6 = uVar8;\n                iVar2 = iVar1;\n                if (*0x626890 == 0) {\n                    *in_RAX = iVar3;\n                    piVar4 = in_RAX;\n                }\n                else {\n                    piVar4 = fcn.0045ebe0(uVar8, iVar1, arg3);\n                }\n                arg1_00 = uVar6;\n                if (arg4_00 < arg3) {\n                    iVar3 = fcn.00447240(uVar6);\n                    piVar4 = in_RAX;\n                    arg1_00 = uVar8;\n                    iVar2 = iVar1;\n                    arg4_00 = uVar6;\n                }\n                *(iVar3 + arg1_00) = 0x2829;\n                piVar4[1] = arg3;\n                piVar4[2] = arg4_00;\n                if (*0x626890 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    piVar4 = fcn.0045eb80(arg1_00, iVar2, arg3, arg4_00);\n                }\n                if (arg4 == 0) {\n                    uVar7 = uVar7 + iVar2 + 5;\n                    if (arg4_00 < uVar7) {\n                        uVar6 = arg3;\n                        iVar3 = fcn.00447240(arg3);\n                        piVar4 = in_RAX;\n                        arg1_00 = uVar8;\n                        arg4_00 = arg3;\n                        arg3 = uVar6;\n                    }\n                    *(arg1_00 + 2 + iVar3) = 0x696e;\n                    *(arg1_00 + 4 + iVar3) = 0x6c;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = arg4_00;\n                    if (*0x626890 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        piVar4 = fcn.0045eb80(arg1_00, iVar2, arg3, arg4);\n                    }\n                }\n                else {\n                    fcn.0049dac0(1);\n                    piVar4 = in_RAX;\n                }\n                iVar3 = piVar4[1];\n                iVar1 = *piVar4;\n                iVar5 = iVar1;\n                if (piVar4[2] < iVar3 + 1U) {\n                    iVar5 = fcn.00447240(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar5;\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar5 = fcn.0045ea40(iVar3, iVar2, arg3, arg4);\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                }\n                piVar4[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                return;\n            }\n            if (arg4 == 0) {\n                fcn.0049aac0(5);\n                return;\n            }\n            fcn.0049dac0(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x78) goto code_r0x0049ec55;\n    }\n    fcn.0049d560(noname_0, arg2, uVar8);\n    return;\n}\n",
        "token_count": 1758
    },
    "0049ece0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049ece0(ulong arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t *unaff_RDI;\n    int64_t iVar14;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar15;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x6c) = unaff_RDI;\n            *(*0x20 + -0xb8) = 0x49ed4a;\n            iVar3 = fcn.00433ca0(arg1, *0x20 + 8);\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar10 = *(*0x20 + -0x20);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                bVar15 = false;\n                arg3 = NULL;\n            }\n            else {\n                if (*0x5d2690 == '\\0') {\n                    arg3 = *(*0x20 + 0x18);\n                }\n                else {\n                    *0x5d2698 = iVar10;\n                    if (*0x626890 == 0) {\n                        arg3 = *(*0x20 + 0x18);\n                        *0x5d26a0 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + 0x18);\n                        *(*0x20 + -0xb8) = 0x49eda8;\n                        iVar3 = fcn.0045ebc0(arg1, iVar10, arg3, in_R9);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar10;\n                *(*0x20 + -0x10) = arg3;\n                if (*(*0x20 + -0x18) == 0) {\n                    uVar9 = 0;\n                    bVar15 = false;\n                    arg3 = NULL;\n                }\n                else {\n                    uVar1 = *(*(*0x20 + -0x18) + 0x17);\n                    in_R9 = uVar1;\n                    uVar9 = uVar1 & 0x1f;\n                    bVar15 = (uVar1 & 0x20) == 0;\n                }\n            }\n            if (uVar9 == 0x16) {\n                if (bVar15) {\n                    arg3 = *arg3;\n                }\n                if (arg3 == NULL) {\n                    piVar4 = *(*0x20 + 8);\n                    uVar6 = piVar4[1];\n                    uVar7 = uVar6 + 5;\n                    iVar3 = *piVar4;\n                    uVar8 = uVar6;\n                    uVar11 = piVar4[2];\n                    if (piVar4[2] < uVar7) {\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0xb8) = 0x49ee5e;\n                        iVar3 = fcn.00447240(uVar6);\n                        uVar7 = *(*0x20 + -0x48);\n                        piVar4 = *(*0x20 + 8);\n                        uVar8 = *(*0x20 + -0x50);\n                        uVar11 = uVar6;\n                    }\n                    *(iVar3 + uVar8) = 0x6c696e3c;\n                    *(iVar3 + 4 + uVar8) = 0x3e;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = uVar11;\n                    if (*0x626890 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x49ee9d;\n                        fcn.0045eb80(uVar8, uVar11, arg3, in_R9);\n                    }\n                    return;\n                }\n            }\n            unaff_RDI = *(*0x20 + 8);\n            if (*(unaff_RDI + 0xb2) == '\\0') {\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x30) = unaff_RBX;\n                uVar2 = *(unaff_RDI + 10);\n                *(*0x20 + -0x39) = unaff_RDI[9];\n                *(*0x20 + -0x31) = uVar2;\n                unaff_RDI[9] = 0;\n                *(unaff_RDI + 0x49) = 0;\n                uVar6 = unaff_RDI[1];\n                uVar7 = uVar6 + 2;\n                iVar3 = *unaff_RDI;\n                uVar8 = uVar6;\n                uVar11 = unaff_RDI[2];\n                if (unaff_RDI[2] < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = uVar6;\n                    *(*0x20 + -0xb8) = 0x49ef28;\n                    iVar3 = fcn.00447240(uVar6);\n                    uVar7 = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x50);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x2125;\n                unaff_RDI[1] = uVar7;\n                unaff_RDI[2] = uVar11;\n                if (*0x626890 == 0) {\n                    *unaff_RDI = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x49ef6f;\n                    fcn.0045ebc0(uVar8, uVar11, iVar3, in_R9);\n                }\n                *(*0x20 + -0xb8) = 0x49ef7b;\n                fcn.0049cb40();\n                piVar4 = *(*0x20 + 8);\n                uVar6 = piVar4[1];\n                *(*0x20 + -0x48) = uVar6;\n                uVar7 = uVar6 + 7;\n                iVar3 = *piVar4;\n                uVar8 = uVar6;\n                uVar11 = piVar4[2];\n                if (piVar4[2] < uVar7) {\n                    *(*0x20 + -0x50) = uVar7;\n                    *(*0x20 + -0xb8) = 0x49efb1;\n                    iVar3 = fcn.00447240(uVar6);\n                    uVar7 = *(*0x20 + -0x50);\n                    piVar4 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x48);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x4e415028;\n                *(iVar3 + 3 + uVar8) = 0x3d43494e;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                iVar14 = *(*0x20 + 0x30);\n                uVar6 = uVar8 + iVar14 + 7;\n                iVar10 = uVar8 + iVar14;\n                if (*0x626890 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x49f007;\n                    fcn.0045eb80(uVar8, uVar11, iVar14, uVar6);\n                }\n                *(*0x20 + -0x50) = iVar10;\n                *(*0x20 + -0x58) = uVar6;\n                if (uVar11 < uVar6) {\n                    *(*0x20 + -0xb8) = 0x49f02c;\n                    iVar3 = fcn.00447240(uVar7);\n                    iVar14 = *(*0x20 + 0x30);\n                    uVar11 = uVar7;\n                }\n                *(*0x20 + -0x60) = uVar11;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0xb8) = 0x49f065;\n                fcn.0045f840(iVar14);\n                uVar8 = *(*0x20 + -0x58);\n                piVar4 = *(*0x20 + 8);\n                piVar4[1] = uVar8;\n                uVar11 = *(*0x20 + -0x60);\n                piVar4[2] = uVar11;\n                uVar7 = *(*0x20 + -0x48) + *(*0x20 + 0x30) + 0x10;\n                if (*0x626890 == 0) {\n                    iVar3 = *(*0x20 + -0x28);\n                    *piVar4 = iVar3;\n                }\n                else {\n                    iVar3 = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = 0x49f0bd;\n                    piVar4 = fcn.0045eb80(uVar8, uVar11, iVar14, uVar6);\n                }\n                if (uVar11 < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0xb8) = 0x49f0d7;\n                    iVar3 = fcn.00447240(uVar8);\n                    uVar7 = *(*0x20 + -0x48);\n                    piVar4 = *(*0x20 + 8);\n                    uVar11 = uVar8;\n                }\n                iVar10 = *(*0x20 + -0x50);\n                *(iVar10 + 7 + iVar3) = 0x3a646f6874656d20;\n                *(iVar10 + 0xf + iVar3) = 0x20;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                if (*0x626890 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x49f125;\n                    piVar4 = fcn.0045eb80(uVar8, 0x3a646f6874656d20, iVar10, uVar6);\n                }\n                *(piVar4 + 0xb2) = 1;\n                *(*0x20 + -0xb8) = 0x49f145;\n                fcn.0049fa40(*(*0x20 + -0x30));\n                piVar4 = *(*0x20 + 8);\n                *(piVar4 + 0xb2) = 0;\n                iVar3 = piVar4[1];\n                iVar14 = *piVar4;\n                piVar12 = piVar4;\n                iVar5 = iVar14;\n                if (piVar4[2] < iVar3 + 1U) {\n                    *(*0x20 + -0xb8) = 0x49f175;\n                    iVar5 = fcn.00447240(iVar3);\n                    piVar12 = *(*0x20 + 8);\n                    piVar12[2] = iVar3;\n                    if (*0x626890 == 0) {\n                        *piVar12 = iVar5;\n                        iVar3 = iVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x49f194;\n                        iVar5 = fcn.0045ea40(iVar3, piVar4, iVar10, uVar6);\n                        iVar3 = iVar14;\n                    }\n                }\n                piVar12[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                uVar2 = *(*0x20 + -0x31);\n                piVar12[9] = *(*0x20 + -0x39);\n                *(piVar12 + 10) = uVar2;\n                return;\n            }\n            *(*0x20 + -0xb8) = 0x49f1cf;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + 0x20) = unaff_RDI;\n        *(puVar13 + 0x28) = unaff_RSI;\n        *(puVar13 + 0x30) = arg3;\n        *(puVar13 + -8) = 0x49f1f2;\n        fcn.0045c800();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        unaff_RDI = *(puVar13 + 0x20);\n        unaff_RSI = *(puVar13 + 0x28);\n        arg3 = *(puVar13 + 0x30);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3298
    },
    "0049f220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.0049f220(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    uint64_t uVar5;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack456 [56];\n    ulong *puStack400;\n    ulong *puStack328;\n    ulong *puStack256;\n    int64_t iStack208;\n    int64_t iStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong auStack168 [2];\n    ulong uStack152;\n    uchar auStack144 [16];\n    ulong auStack128 [2];\n    ulong uStack112;\n    uchar auStack104 [16];\n    ulong auStack88 [2];\n    ulong uStack72;\n    uchar auStack64 [16];\n    ulong auStack48 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (auStack456 < *(unaff_R14 + 0x10) || auStack456 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0xb3) != '\\0') {\n        fcn.004329e0();\n        return 0;\n    }\n    iVar4 = in_RAX;\n    if (unaff_EBX == 0x77) {\n        uVar1 = *(in_RAX + 0x18);\n        arg1 = *(in_RAX + 0x20);\n        iVar3 = fcn.0040a780(arg1);\n        if (((iVar3 == 0) || (*(in_RAX + 0xb4) == '\\0')) || (*(in_RAX + 0xb8) != 0)) {\n            *(in_RAX + 0xb8) = 0;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0xc0) = 0;\n            }\n            else {\n                arg1 = 0;\n                fcn.0045eb40();\n            }\n            *(in_RAX + 0xb4) = 0;\n            fcn.0049d560(arg1, in_RAX, param_3);\n            fcn.004329e0();\n            return 1;\n        }\n        *(in_RAX + 0xb8) = iVar3;\n        if (*0x626890 == 0) {\n            *(in_RAX + 0xc0) = uVar1;\n        }\n        else {\n            fcn.0045eb80(arg1, in_RAX, param_3, param_4);\n        }\n        unaff_EBX = 0x76;\n    }\n    uStack184 = *(iVar4 + 0x18);\n    iVar4 = fcn.0040a780(*(iVar4 + 0x20));\n    auStack24._12_4_ = SUB164(in_XMM15 >> 0x60, 0);\n    if (iVar4 != 0) {\n        uStack32 = *(in_RAX + 0x18);\n        auStack48[0] = 0x49f9c0;\n        puStack256 = auStack48;\n        iVar2 = fcn.004323c0();\n        if (iVar2 != 0) {\n            fcn.004329e0();\n            return 1;\n        }\n        (**(iVar4 + 0x18))(in_RAX);\n        fcn.004329e0();\n        return 1;\n    }\n    if (*(in_RAX + 0x50) == '\\0') {\n        if (unaff_EBX < 0x72) {\n            if ((unaff_EBX != 0x58) && (unaff_EBX != 0x71)) goto code_r0x0049f593;\n        }\n        else if (((unaff_EBX != 0x73) && (unaff_EBX != 0x76)) && (unaff_EBX != 0x78)) goto code_r0x0049f593;\n        iStack208 = *(in_RAX + 0x18);\n        if (iStack208 != 0) {\n            uStack176 = *(in_RAX + 0x20);\n            iVar4 = fcn.0040a780(*(in_RAX + 0x20));\n            if (iVar4 != 0) {\n                uStack112 = *(in_RAX + 0x18);\n                auStack128[0] = 0x49f8c0;\n                uVar5 = unaff_EBX;\n                auStack104 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                puStack400 = auStack128;\n                iStack200 = iStack208;\n                iVar2 = fcn.004323c0();\n                if (iVar2 != 0) {\n                    fcn.004329e0();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.0049e060(auStack128, uVar5);\n                fcn.004329e0();\n                return 1;\n            }\n            iVar4 = fcn.0040a780(uStack176);\n            if (iVar4 != 0) {\n                uStack152 = *(in_RAX + 0x18);\n                auStack168[0] = 0x49f840;\n                uVar5 = unaff_EBX;\n                auStack144 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                iVar2 = fcn.004323c0();\n                if (iVar2 != 0) {\n                    fcn.004329e0();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.0049e060(auStack168, uVar5);\n                fcn.004329e0();\n                return 1;\n            }\n        }\n    }\n    else {\n        uStack192 = *(in_RAX + 0x18);\n        iVar4 = fcn.0040a780(*(in_RAX + 0x20));\n        if (iVar4 != 0) {\n            uStack72 = *(in_RAX + 0x18);\n            uVar1 = *(in_RAX + 0x20);\n            auStack88[0] = 0x49f940;\n            auStack64 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, uVar1));\n            puStack328 = auStack88;\n            iVar2 = fcn.004323c0();\n            if (iVar2 != 0) {\n                fcn.004329e0();\n                return 1;\n            }\n            (**(iVar4 + 0x18))();\n            fcn.0049b840(uVar1);\n            fcn.004329e0();\n            return 1;\n        }\n    }\ncode_r0x0049f593:\n    fcn.004329e0();\n    return 0;\n}\n",
        "token_count": 1615
    },
    "0049fa40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049fa40(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    int64_t in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0x18) = unaff_RBX;\n    iVar4 = in_RAX + 0x20;\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x20) = arg1;\n    }\n    else {\n        in_RAX = fcn.0045eb40();\n    }\n    *(in_RAX + 0x38) = 0;\n    if (*0x626890 == 0) {\n        *(in_RAX + 0x28) = in_XMM15;\n    }\n    else {\n        fcn.0045eb60(arg1, 0, iVar4, in_R9);\n        in_RAX = fcn.0045eb60(arg1, 0, iVar4, in_R9);\n        in_R8 = iVar4;\n    }\n    if (unaff_RBX == 0) {\n        if ((unaff_EDI == 0x54) || (unaff_EDI == 0x76)) {\n            fcn.0049aac0(5);\n        }\n        else {\n            fcn.0049d560(arg1, iVar4, in_R8);\n        }\n        return;\n    }\n    if (unaff_EDI == 0x54) {\n        if (unaff_RBX == 0) {\n            iVar5 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = 0x4ef0c0;\n            iVar4 = unaff_RBX;\n        }\n        iStack16 = arg1;\n        (**(iVar5 + 0xf8))(iVar4);\n        fcn.0049b840(unaff_RBX);\n        return;\n    }\n    if (unaff_EDI != 0x70) {\n        if (unaff_RBX != 0) {\n            uVar1 = *(unaff_RBX + 0x10);\n            if (uVar1 < 0xb0c23ed4) {\n                if (uVar1 < 0x500c1abd) {\n                    if (uVar1 < 0x2ea27ffc) {\n                        if (uVar1 == 0x13ff06c5) {\n                            if (unaff_RBX == 0x4b3fe0) {\n                                fcn.0049da60(unaff_EDI);\n                                return;\n                            }\n                        }\n                        else if ((uVar1 == 0x2ea27ffb) && (unaff_RBX == 0x4b4220)) {\n                            fcn.0049dd60(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if (uVar1 == 0x382e7edf) {\n                        if (unaff_RBX == 0x4b3e20) {\n                            fcn.0049e160(*(arg1 + 8), *(arg1 + 8), 0x4c8d69, 6);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x500c1abc) && (unaff_RBX == 0x4c7b00)) {\n                        arg1_01 = *(arg1 + 0x10);\n                        arg1_00 = *(arg1 + 8);\n                        if ((arg1_01 != 0) && ((arg1_01 & 0x60) == 0)) {\n                            arg4 = arg1_01;\n                            uVar3 = fcn.0048e660(arg1_01);\n                            *(in_RAX + 0x18) = uVar3;\n                            if (*0x626890 == 0) {\n                                *(in_RAX + 0x20) = arg1_00;\n                                iVar4 = in_RAX;\n                            }\n                            else {\n                                fcn.0045eb80(arg1_01, in_RAX, in_R8, arg4);\n                                iVar4 = in_RAX;\n                            }\n                            cVar2 = fcn.0049f220();\n                            if (cVar2 != '\\0') {\n                                return;\n                            }\n                        }\n                        fcn.004a0220(arg1_00, iVar4, 0);\n                        return;\n                    }\n                }\n                else if (uVar1 < 0x7925028d) {\n                    if (uVar1 == 0x663e425f) {\n                        if (unaff_RBX == 0x4b4fe0) {\n                            fcn.0049db60(0, 0x4b4fe0);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x7925028c) && (unaff_RBX == 0x4b4160)) {\n                        fcn.0049de60(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x86318d2e) {\n                    if (unaff_RBX == 0x4b4fa0) {\n                        fcn.0049db60(0, 0x4b4fa0);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x963f9bff) {\n                    if (unaff_RBX == 0x4b4860) {\n                        fcn.0049db60(1, 0x4b4860);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xb0c23ed3) && (unaff_RBX == 0x4b41e0)) {\n                    fcn.0049dd60(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xd04ae83e) {\n                if (uVar1 < 0xbbad4103) {\n                    if (uVar1 == 0xb31a546d) {\n                        if (unaff_RBX == 0x4b4120) {\n                            fcn.0049de60(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0xbbad4102) && (unaff_RBX == 0x4b4820)) {\n                        fcn.0049db60(1, 0x4b4820);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xbd4ad792) {\n                    if (unaff_RBX == 0x4b5020) {\n                        fcn.0049db60(0, 0x4b5020);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xcc06c027) {\n                    if (unaff_RBX == 0x4b48a0) {\n                        fcn.0049db60(1, 0x4b48a0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xd04ae83d) && (unaff_RBX == 0x4b4f60)) {\n                    fcn.0049db60(0, 0x4b4f60);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xe0ff5cb5) {\n                if (uVar1 == 0xd5b87712) {\n                    if (unaff_RBX == 0x4b4ee0) {\n                        fcn.0049db60(0, 0x4b4ee0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xe0ff5cb4) && (unaff_RBX == 0x4b4e60)) {\n                    fcn.0049e060(*(arg1 + 8), *(arg1 + 8));\n                    return;\n                }\n            }\n            else if (uVar1 == 0xecd580ce) {\n                if (unaff_RBX == 0x4b47e0) {\n                    fcn.0049db60(1, 0x4b47e0);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xeff20ea0) {\n                if (unaff_RBX == 0x4b4f20) {\n                    fcn.0049db60(0, 0x4b4f20);\n                    return;\n                }\n            }\n            else if ((uVar1 == 0xf75371fa) && (unaff_RBX == 0x4b47a0)) {\n                fcn.0049db60(1, 0x4b47a0);\n                return;\n            }\n        }\n        iVar4 = arg1;\n        cVar2 = fcn.0049f220();\n        if (cVar2 == '\\0') {\n            iVar5 = *0x5d26a0;\n            if ((*0x5d2690 != '\\0') && (*0x5d2698 = unaff_RBX,  iVar5 = arg1,  *0x626890 != 0)) {\n                fcn.0045ebe0(iVar4, unaff_RBX, in_R8);\n                iVar5 = *0x5d26a0;\n            }\n            *0x5d26a0 = iVar5;\n            if (unaff_RBX == 0) {\n                unaff_RBX = 0;\n                arg1 = 0;\n            }\n            fcn.004a0220(arg1, unaff_RBX, 0);\n        }\n        return;\n    }\n    iVar4 = *0x5d26a0;\n    if ((*0x5d2690 != '\\0') && (*0x5d2698 = unaff_RBX,  iVar4 = arg1,  *0x626890 != 0)) {\n        fcn.0045eb40();\n        iVar4 = *0x5d26a0;\n    }\n    *0x5d26a0 = iVar4;\n    if (unaff_RBX == 0) {\n        arg1 = 0;\n    }\n    fcn.0049e860(arg1);\n    return;\n}\n",
        "token_count": 2382
    },
    "004a2480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004a2480(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00447240(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x626890 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045eb60(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.0049cb40();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 10) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00447240(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x45444e4944414228;\n    *(iVar2 + 8 + uVar1) = 0x2958;\n    in_RAX[1] = uVar1 + 10;\n    in_RAX[2] = uVar3;\n    if (*0x626890 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045eb80(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "004a25c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004a25c0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00447240(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x626890 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045eb60(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.0049cb40();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 9) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00447240(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x474e495353494d28;\n    *(iVar2 + 8 + uVar1) = 0x29;\n    in_RAX[1] = uVar1 + 9;\n    in_RAX[2] = uVar3;\n    if (*0x626890 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045eb80(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "004a2700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004a2700(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char cVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t unaff_RBX;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar19;\n    uint64_t unaff_RDI;\n    int64_t iVar20;\n    int64_t unaff_R14;\n    bool bVar21;\n    bool bVar22;\n    \n    while (puVar18 = *0x20,  *0x20 + -0x70 < *(unaff_R14 + 0x10) || *0x20 + -0x70 == *(unaff_R14 + 0x10)) {\ncode_r0x004a36bc:\n        *(puVar18 + 8) = in_RAX;\n        *(puVar18 + 0x10) = unaff_RBX;\n        *(puVar18 + 0x18) = arg1;\n        *(puVar18 + 0x20) = unaff_RDI;\n        *(puVar18 + 0x28) = unaff_RSI;\n        *(puVar18 + 0x30) = arg3;\n        *(puVar18 + -8) = 0x4a36df;\n        fcn.0045c800();\n        in_RAX = *(puVar18 + 8);\n        unaff_RBX = *(puVar18 + 0x10);\n        arg1 = *(puVar18 + 0x18);\n        unaff_RDI = *(puVar18 + 0x20);\n        unaff_RSI = *(puVar18 + 0x28);\n        arg3 = *(puVar18 + 0x30);\n        *0x20 = puVar18;\n    }\n    puVar18 = *0x20 + -0xf0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(in_RAX + 0x16) = 0;\n    uVar13 = 0;\n    uVar17 = 0;\n    do {\n        if (arg1 <= uVar13) goto code_r0x004a2f7a;\n        *(in_RAX + 0xb1) = 1;\n        uVar14 = uVar13;\ncode_r0x004a3428:\n        if (uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x004a36b3;\n            if (*(unaff_RBX + uVar13) == '%') goto code_r0x004a27ab;\n            goto code_r0x004a3425;\n        }\ncode_r0x004a27ab:\n        *(*0x20 + -0x98) = uVar17;\n        if (uVar14 < uVar13) {\n            bVar21 = uVar13 <= arg1;\n            uVar6 = arg1;\n            arg1 = uVar13;\n            if (bVar21) {\n                if (uVar14 <= uVar13) {\n                    *(*0x20 + -0xa0) = uVar13;\n                    iVar19 = uVar13 - uVar14;\n                    uVar13 = in_RAX[1];\n                    *(*0x20 + -0x58) = iVar19 + uVar13;\n                    uVar6 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    if (in_RAX[2] < iVar19 + uVar13) {\n                        *(*0x20 + -0x60) = iVar19;\n                        *(*0x20 + -0x48) = unaff_RBX + (uVar14 & -iVar19 >> 0x3f);\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x4a2837;\n                        uVar6 = fcn.00447240(uVar13);\n                        iVar19 = *(*0x20 + -0x60);\n                        uVar15 = uVar13;\n                    }\n                    *(*0x20 + -0x60) = uVar15;\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0xf8) = 0x4a2874;\n                    fcn.0045f840(iVar19);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0x58);\n                    in_RAX[2] = *(*0x20 + -0x60);\n                    if (*0x626890 == 0) {\n                        *in_RAX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x4a28ca;\n                        in_RAX = fcn.0045eb60(iVar19, *(*0x20 + -0x38), uVar6, uVar17);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar17 = *(*0x20 + -0x98);\n                    goto code_r0x004a2905;\n                }\n                goto code_r0x004a3699;\n            }\ncode_r0x004a36a5:\n            *(*0x20 + -0xf8) = 0x4a36b3;\n            fcn.0045ef20(arg1, uVar6);\ncode_r0x004a36b3:\n            *(*0x20 + -0xf8) = 0x4a36bb;\n            in_RAX = fcn.0045eee0(arg1);\n            goto code_r0x004a36bc;\n        }\n        bVar22 = SBORROW8(arg1, uVar13);\n        iVar19 = arg1 - uVar13;\n        bVar21 = arg1 == uVar13;\ncode_r0x004a2905:\n        if (bVar21 || bVar22 != iVar19 < 0) goto code_r0x004a2f7a;\n        in_RAX[9] = 0;\n        *(in_RAX + 0x49) = 0;\n        while (uVar13 = uVar13 + 1,  uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x004a3691;\n            uVar1 = *(unaff_RBX + uVar13);\n            if (uVar1 < 0x24) {\n                if (uVar1 == 0x20) {\n                    *(in_RAX + 0x4d) = 1;\n                }\n                else {\n                    if (uVar1 != 0x23) {\ncode_r0x004a2925:\n                        if ((uVar1 + 0x9f < 0x1a) && (uVar17 < unaff_RSI)) {\n                            if (uVar1 == 0x76) {\n                                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                                *(in_RAX + 0x4c) = 0;\n                                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                                *(in_RAX + 0x4b) = 0;\n                            }\n                            if (unaff_RSI <= uVar17) goto code_r0x004a3686;\n                            *(*0x20 + -0xa0) = uVar13;\n                            uVar9 = *(unaff_RDI + 8 + uVar17 * 0x10);\n                            *(*0x20 + -0xf8) = 0x4a2988;\n                            fcn.0049fa40(uVar9);\n                            uVar14 = *(*0x20 + -0x98) + 1;\n                            uVar13 = *(*0x20 + -0xa0) + 1;\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x004a276c;\n                        }\n                        break;\n                    }\n                    *(in_RAX + 0x4c) = 1;\n                }\n            }\n            else if (uVar1 == 0x2b) {\n                *(in_RAX + 0x4b) = 1;\n            }\n            else if (uVar1 == 0x2d) {\n                *(in_RAX + 0x4a) = 1;\n                *(in_RAX + 0x4e) = 0;\n            }\n            else {\n                if (uVar1 != 0x30) goto code_r0x004a2925;\n                *(in_RAX + 0x4e) = *(in_RAX + 0x4a) ^ 1;\n            }\n        }\n        *(*0x20 + -0xf8) = 0x4a29cf;\n        uVar15 = uVar13;\n        arg3 = unaff_RSI;\n        uVar6 = fcn.004a2360(unaff_RBX, uVar13, unaff_RSI);\n        cVar12 = unaff_RBX;\n        arg1 = *(*0x20 + 0x18);\n        if (uVar17 < arg1) {\n            unaff_RSI = uVar13;\n            if (uVar17 < arg1) {\n                uVar13 = *(*0x20 + 0x10);\n                if (*(uVar13 + uVar17) != '*') goto code_r0x004a2b32;\n                *(*0x20 + -0x70) = uVar17;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x4a2a36;\n                iVar19 = fcn.004a2060(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xb] = iVar19;\n                *(piVar10 + 9) = uVar9;\n                if (uVar9 == '\\0') {\n                    uVar17 = piVar10[1];\n                    uVar13 = uVar17 + 0xc;\n                    iVar19 = *piVar10;\n                    uVar14 = uVar17;\n                    uVar7 = piVar10[2];\n                    if (piVar10[2] < uVar13) {\n                        *(*0x20 + -0x78) = uVar6;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0xf8) = 0x4a2a8c;\n                        iVar19 = fcn.00447240(uVar17);\n                        uVar13 = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar14 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x78);\n                        uVar7 = uVar17;\n                    }\n                    *(iVar19 + uVar14) = 0x4957444142282125;\n                    *(iVar19 + 8 + uVar14) = 0x29485444;\n                    piVar10[1] = uVar13;\n                    piVar10[2] = uVar7;\n                    if (*0x626890 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x4a2ae5;\n                        fcn.0045eb80(uVar6, uVar15, arg3, uVar14);\n                    }\n                }\n                if (piVar10[0xb] < 0) {\n                    piVar10[0xb] = -piVar10[0xb];\n                    *(piVar10 + 0x4a) = 1;\n                    *(piVar10 + 0x4e) = 0;\n                }\n                uVar7 = *(*0x20 + -0x70) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x004a2b70;\n            }\ncode_r0x004a367b:\n            uVar13 = uVar15;\n            *(*0x20 + -0xf8) = 0x4a3686;\n            fcn.0045eee0(arg1);\n            unaff_RBX = uVar17;\n            unaff_RDI = arg1;\ncode_r0x004a3686:\n            *(*0x20 + -0xf8) = 0x4a3691;\n            arg1 = unaff_RSI;\n            fcn.0045eee0(unaff_RSI);\ncode_r0x004a3691:\n            *(*0x20 + -0xf8) = 0x4a3699;\n            fcn.0045eee0(arg1);\ncode_r0x004a3699:\n            *(*0x20 + -0xf8) = 0x4a36a5;\n            arg1 = uVar13;\n            fcn.0045efa0(uVar13);\n            uVar6 = uVar13;\n            goto code_r0x004a36a5;\n        }\n        uVar13 = *(*0x20 + 0x10);\ncode_r0x004a2b32:\n        if (uVar17 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            for (; uVar7 = uVar17,  uVar17 < arg1; uVar17 = uVar17 + 1) {\n                if (arg1 <= uVar17) goto code_r0x004a3670;\n                uVar1 = *(uVar13 + uVar17);\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n                if (2000000 < unaff_RSI + 1000000) {\n                    uVar15 = 0;\n                    unaff_RSI = 0;\n                    uVar7 = arg1;\n                    break;\n                }\n                unaff_RSI = (uVar1 - 0x30 & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n            }\n        }\n        else {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n        }\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xb] = unaff_RSI;\n        *(in_RAX + 9) = uVar15;\n        if ((cVar12 != '\\0') && (uVar15 != '\\0')) {\n            *(in_RAX + 0xb1) = 0;\n        }\ncode_r0x004a2b70:\n        unaff_RSI = uVar7 + 1;\n        unaff_RBX = uVar13;\n        if (arg1 <= unaff_RSI) goto code_r0x004a2d25;\n        uVar17 = uVar7;\n        if (arg1 <= uVar7) {\ncode_r0x004a3665:\n            *(*0x20 + -0xf8) = 0x4a3670;\n            fcn.0045eee0(arg1);\ncode_r0x004a3670:\n            *(*0x20 + -0xf8) = 0x4a367b;\n            fcn.0045eee0(arg1);\n            goto code_r0x004a367b;\n        }\n        if (*(uVar13 + uVar7) != '.') goto code_r0x004a2d25;\n        if (cVar12 != '\\0') {\n            *(in_RAX + 0xb1) = 0;\n        }\n        arg3 = *(*0x20 + 0x28);\n        *(*0x20 + -0xf8) = 0x4a2bba;\n        uVar14 = fcn.004a2360(uVar13, uVar15, arg3);\n        arg1 = *(*0x20 + 0x18);\n        uVar17 = uVar6;\n        if (uVar6 < arg1) {\n            if (arg1 <= uVar6) {\ncode_r0x004a3658:\n                *(*0x20 + -0xf8) = 0x4a3665;\n                fcn.0045eee0(arg1);\n                goto code_r0x004a3665;\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            if (*(unaff_RBX + uVar6) == '*') {\n                *(*0x20 + -0x80) = uVar6;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x4a2c13;\n                iVar19 = fcn.004a2060(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xc] = iVar19;\n                *(piVar10 + 0x49) = uVar9;\n                if (piVar10[0xc] < 0) {\n                    piVar10[0xc] = 0;\n                    *(piVar10 + 0x49) = 0;\n                }\n                if (*(piVar10 + 0x49) == '\\0') {\n                    uVar13 = piVar10[1];\n                    unaff_RSI = uVar13 + 0xb;\n                    iVar19 = *piVar10;\n                    uVar17 = uVar13;\n                    uVar14 = piVar10[2];\n                    if (piVar10[2] < unaff_RSI) {\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x58) = unaff_RSI;\n                        *(*0x20 + -0x60) = uVar13;\n                        *(*0x20 + -0xf8) = 0x4a2c7b;\n                        iVar19 = fcn.00447240(uVar13);\n                        unaff_RSI = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar17 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x88);\n                        uVar14 = uVar13;\n                    }\n                    *(iVar19 + uVar17) = 0x5250444142282125;\n                    *(iVar19 + 3 + uVar17) = 0x2943455250444142;\n                    piVar10[1] = unaff_RSI;\n                    piVar10[2] = uVar14;\n                    if (*0x626890 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x4a2cd6;\n                        fcn.0045eb80(uVar6, uVar15, arg3, uVar17);\n                    }\n                }\n                uVar7 = *(*0x20 + -0x80) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x004a2d25;\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (uVar6 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            goto code_r0x004a35ee;\n        }\n        uVar15 = 0;\n        unaff_RSI = 0;\n        uVar6 = uVar14;\n        uVar7 = arg1;\ncode_r0x004a3623:\n        cVar12 = uVar13;\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xc] = unaff_RSI;\n        *(in_RAX + 0x49) = uVar15;\n        if (uVar15 == '\\0') {\n            in_RAX[0xc] = 0;\n            *(in_RAX + 0x49) = 1;\n        }\ncode_r0x004a2d25:\n        uVar14 = uVar6;\n        uVar17 = uVar7;\n        if (cVar12 == '\\0') {\n            arg3 = *(*0x20 + 0x28);\n            *(*0x20 + -0xf8) = 0x4a2d45;\n            uVar14 = fcn.004a2360(unaff_RBX, uVar15, arg3);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar17 = uVar6;\n            unaff_RSI = uVar7;\n        }\n        *(*0x20 + -0x58) = uVar14;\n        if (arg1 <= uVar17) break;\n        if (arg1 <= uVar17) {\ncode_r0x004a35cb:\n            *(*0x20 + -0xf8) = 0x4a35d6;\n            uVar13 = arg1;\n            uVar6 = fcn.0045eee0(arg1);\n            do {\n                unaff_RSI = (in_RAX - 0x30U & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n                uVar14 = uVar6;\n                uVar17 = uVar17 + 1;\ncode_r0x004a35ee:\n                uVar6 = uVar14;\n                uVar7 = uVar17;\n                if (arg1 <= uVar17) goto code_r0x004a3623;\n                if (arg1 <= uVar17) {\n                    *(*0x20 + -0xf8) = 0x4a3658;\n                    fcn.0045eee0(arg1);\n                    goto code_r0x004a3658;\n                }\n                uVar1 = *(unaff_RBX + uVar17);\n                in_RAX = uVar1;\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x004a3623;\n            } while (unaff_RSI + 1000000 < 0x1e8481);\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n            goto code_r0x004a3623;\n        }\n        uVar5 = *(unaff_RBX + uVar17);\n        if (*(unaff_RBX + uVar17) < 0x80) {\n            uVar6 = 1;\n        }\n        else {\n            *(*0x20 + -0xa0) = uVar17;\n            uVar6 = arg1 - uVar17;\n            *(*0x20 + -0xf8) = 0x4a2db1;\n            uVar15 = uVar6;\n            uVar5 = fcn.0047e620();\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = *(*0x20 + -0xa0);\n        }\n        uVar13 = uVar6 + uVar17;\n        *(*0x20 + -0xa0) = uVar13;\n        if (uVar5 != 0x25) {\n            if (*(in_RAX + 0xb1) == '\\0') {\n                *(*0x20 + -0xf8) = 0x4a2f50;\n                fcn.004a2480(uVar6, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x004a276c;\n            }\n            uVar13 = *(*0x20 + 0x28);\n            if (uVar13 <= uVar14) {\n                *(*0x20 + -0xf8) = 0x4a2f17;\n                fcn.004a25c0(uVar13, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x004a276c;\n            }\n            if (uVar5 == 0x76) {\n                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                *(in_RAX + 0x4c) = 0;\n                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4b) = 0;\n            }\n            if (uVar14 < uVar13) {\n                uVar9 = *(*(*0x20 + -0x20) + 8 + uVar14 * 0x10);\n                *(*0x20 + -0xf8) = 0x4a2ede;\n                fcn.0049fa40(uVar9);\n                uVar14 = *(*0x20 + -0x58) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                goto code_r0x004a276c;\n            }\n            *(*0x20 + -0xf8) = 0x4a35cb;\n            fcn.0045eee0(uVar13);\n            goto code_r0x004a35cb;\n        }\n        uVar17 = in_RAX[1];\n        uVar6 = *in_RAX;\n        uVar7 = uVar6;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x4a2e14;\n            uVar7 = fcn.00447240(uVar17);\n            puVar2 = *(*0x20 + 8);\n            puVar2[2] = uVar17;\n            if (*0x626890 == 0) {\n                *puVar2 = uVar7;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x4a2e33;\n                uVar7 = fcn.0045ea40(uVar17, uVar15, arg3, unaff_RBX);\n            }\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar13 = *(*0x20 + -0xa0);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = uVar6;\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar7 + uVar17) = 0x25;\ncode_r0x004a276c:\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = uVar14;\n    } while( true );\n    uVar17 = in_RAX[1];\n    uVar13 = uVar17 + 10;\n    uVar14 = *in_RAX;\n    uVar6 = uVar17;\n    uVar15 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x60) = uVar13;\n        *(*0x20 + -0x68) = uVar17;\n        *(*0x20 + -0xf8) = 0x4a3545;\n        uVar14 = fcn.00447240(uVar17);\n        uVar13 = *(*0x20 + -0x60);\n        in_RAX = *(*0x20 + 8);\n        uVar6 = *(*0x20 + -0x68);\n        uVar15 = uVar17;\n    }\n    *(uVar14 + uVar6) = 0x5245564f4e282125;\n    *(uVar14 + 8 + uVar6) = 0x2942;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar15;\n    if (*0x626890 == 0) {\n        *in_RAX = uVar14;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x4a359e;\n        fcn.0045eb80(uVar6, 0x5245564f4e282125, arg3, unaff_RBX);\n    }\n    unaff_RSI = *(*0x20 + 0x28);\n    unaff_RDI = *(*0x20 + -0x20);\n    arg3 = *(*0x20 + 0x30);\n    uVar17 = *(*0x20 + -0x58);\ncode_r0x004a2f7a:\n    if (*(in_RAX + 0x16) != '\\0') {\n        return;\n    }\n    if (unaff_RSI <= uVar17) {\n        return;\n    }\n    in_RAX[9] = 0;\n    *(in_RAX + 0x49) = 0;\n    uVar6 = in_RAX[1];\n    uVar13 = uVar6 + 9;\n    unaff_RBX = *in_RAX;\n    uVar15 = uVar6;\n    uVar14 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x58) = uVar13;\n        *(*0x20 + -0x60) = uVar6;\n        *(*0x20 + -0x98) = uVar17;\n        *(*0x20 + -0xf8) = 0x4a2fdd;\n        unaff_RBX = fcn.00447240(uVar6);\n        uVar13 = *(*0x20 + -0x58);\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = *(*0x20 + -0x98);\n        in_RAX = *(*0x20 + 8);\n        uVar15 = *(*0x20 + -0x60);\n        uVar14 = uVar6;\n    }\n    *(unaff_RBX + uVar15) = 0x4152545845282125;\n    *(unaff_RBX + 8 + uVar15) = 0x20;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar14;\n    if (*0x626890 == 0) {\n        *in_RAX = unaff_RBX;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x4a304f;\n        in_RAX = fcn.0045eb80(unaff_RDI, uVar13, arg3, uVar17);\n    }\n    if (uVar17 <= unaff_RSI) {\n        iVar19 = unaff_RSI - uVar17;\n        uVar13 = uVar17 - arg3 >> 0x3f & uVar17 << 4;\n        piVar10 = unaff_RDI + uVar13;\n        if (iVar19 != 0) {\n            *(*0x20 + -0x58) = iVar19;\n            arg3 = 0;\n            while( true ) {\n                *(*0x20 + -0xa8) = arg3;\n                *(*0x20 + -0x28) = piVar10;\n                iVar20 = *piVar10;\n                *(*0x20 + -0x90) = iVar20;\n                uVar13 = piVar10[1];\n                *(*0x20 + -0x40) = uVar13;\n                if (0 < arg3) {\n                    uVar14 = in_RAX[1];\n                    uVar17 = uVar14 + 2;\n                    uVar6 = *in_RAX;\n                    uVar7 = in_RAX[2];\n                    uVar15 = uVar14;\n                    if (in_RAX[2] < uVar17) {\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x68) = uVar17;\n                        *(*0x20 + -0xf8) = 0x4a3153;\n                        uVar6 = fcn.00447240(uVar14);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        iVar20 = *(*0x20 + -0x90);\n                        uVar13 = *(*0x20 + -0x40);\n                        uVar15 = *(*0x20 + -0x60);\n                        uVar17 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar7 = uVar14;\n                    }\n                    *(uVar6 + uVar15) = 0x202c;\n                    in_RAX[1] = uVar17;\n                    in_RAX[2] = uVar7;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x4a31b8;\n                        in_RAX = fcn.0045eb80(arg3, piVar10, iVar20, uVar13);\n                    }\n                }\n                if (iVar20 == 0) {\n                    uVar17 = in_RAX[1];\n                    uVar13 = uVar17 + 5;\n                    uVar14 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    uVar6 = uVar17;\n                    if (in_RAX[2] < uVar13) {\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x4a3205;\n                        uVar14 = fcn.00447240(uVar17);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar13 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar15 = uVar17;\n                    }\n                    *(uVar14 + uVar6) = 0x6c696e3c;\n                    *(uVar14 + 4 + uVar6) = 0x3e;\n                    in_RAX[1] = uVar13;\n                    in_RAX[2] = uVar15;\n                    if (*0x626890 == 0) {\n                        *in_RAX = uVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x4a3267;\n                        in_RAX = fcn.0045eb80(arg3, piVar10, uVar6, uVar13);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar20;\n                    *(*0x20 + -0x10) = uVar13;\n                    iVar19 = *(*0x20 + -0x18);\n                    if (iVar19 == 0) {\n                        iVar20 = 0;\n                        iVar19 = 0;\n                    }\n                    else {\n                        iVar20 = 0x4ef0c0;\n                    }\n                    pcVar3 = *(iVar20 + 0xf8);\n                    *(*0x20 + -0xf8) = 0x4a32a2;\n                    uVar8 = (*pcVar3)();\n                    *(*0x20 + -0xb0) = iVar19;\n                    puVar4 = *(*0x20 + 8);\n                    uVar17 = puVar4[1];\n                    *(*0x20 + -0x60) = uVar17;\n                    *(*0x20 + -0x68) = uVar17 + iVar19;\n                    uVar9 = *puVar4;\n                    uVar14 = puVar4[2];\n                    if (puVar4[2] < uVar17 + iVar19) {\n                        *(*0x20 + -0x50) = uVar8;\n                        *(*0x20 + -0xf8) = 0x4a32ed;\n                        uVar9 = fcn.00447240(uVar17);\n                        iVar19 = *(*0x20 + -0xb0);\n                        uVar14 = uVar17;\n                    }\n                    *(*0x20 + -0x70) = uVar14;\n                    *(*0x20 + -0x30) = uVar9;\n                    *(*0x20 + -0xf8) = 0x4a332a;\n                    fcn.0045f840(iVar19);\n                    iVar19 = *(*0x20 + -0x68);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[1] = iVar19;\n                    uVar17 = *(*0x20 + -0x70);\n                    piVar10[2] = uVar17;\n                    uVar14 = *(*0x20 + -0x60);\n                    iVar20 = *(*0x20 + -0xb0);\n                    if (*0x626890 == 0) {\n                        iVar16 = *(*0x20 + -0x30);\n                        *piVar10 = iVar16;\n                        uVar6 = uVar14;\n                    }\n                    else {\n                        iVar16 = *(*0x20 + -0x30);\n                        *(*0x20 + -0xf8) = 0x4a3388;\n                        piVar10 = fcn.0045eb80(iVar19, uVar17, uVar9, uVar13);\n                        uVar6 = uVar17;\n                    }\n                    iVar11 = iVar16;\n                    if (uVar17 < iVar20 + uVar14 + 1) {\n                        *(*0x20 + -0xf8) = 0x4a339d;\n                        iVar11 = fcn.00447240(iVar19);\n                        piVar10 = *(*0x20 + 8);\n                        piVar10[2] = iVar19;\n                        if (*0x626890 == 0) {\n                            *piVar10 = iVar11;\n                            iVar19 = iVar16;\n                        }\n                        else {\n                            *(*0x20 + -0xf8) = 0x4a33bc;\n                            iVar11 = fcn.0045ea40(iVar19, uVar6, uVar9, uVar13);\n                            iVar19 = iVar16;\n                        }\n                    }\n                    piVar10[1] = iVar19 + 1;\n                    *(iVar11 + iVar19) = 0x3d;\n                    *(*0x20 + -0xf8) = 0x4a33e8;\n                    fcn.0049fa40(*(*0x20 + -0x40));\n                    in_RAX = *(*0x20 + 8);\n                    arg3 = *(*0x20 + -0xa8);\n                    piVar10 = *(*0x20 + -0x28);\n                    iVar19 = *(*0x20 + -0x58);\n                }\n                arg3 = arg3 + 1;\n                if (iVar19 <= arg3) break;\n                piVar10 = piVar10 + 2;\n            }\n        }\n        uVar17 = in_RAX[1];\n        uVar14 = *in_RAX;\n        uVar6 = uVar14;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x4a30b5;\n            uVar6 = fcn.00447240(uVar17);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar17;\n            if (*0x626890 == 0) {\n                *in_RAX = uVar6;\n                uVar17 = uVar14;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x4a30d4;\n                uVar6 = fcn.0045ea40(uVar17, piVar10, arg3, uVar13);\n                uVar17 = uVar14;\n            }\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar6 + uVar17) = 0x29;\n        return;\n    }\n    *(*0x20 + -0xf8) = 0x4a3425;\n    arg1 = unaff_RSI;\n    in_RAX = fcn.0045efa0(unaff_RSI);\ncode_r0x004a3425:\n    uVar13 = uVar13 + 1;\n    goto code_r0x004a3428;\n}\n",
        "token_count": 9864
    },
    "004a3720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004a3720(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RDX;\n    int64_t arg2;\n    ulong *unaff_RBX;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (arg1 != 0) {\n        in_RDX = 0;\n        while( true ) {\n            in_R8 = *unaff_RBX;\n            in_R9 = unaff_RBX[1];\n            if (0 < in_RDX) {\n                iVar3 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar2 = iVar1;\n                if (in_RAX[2] < iVar3 + 1U) {\n                    arg2 = in_RDX;\n                    arg3 = in_R8;\n                    arg4 = in_R9;\n                    iVar2 = fcn.00447240(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x626890 == 0) {\n                        *in_RAX = iVar2;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar2 = fcn.0045ea40(iVar3, arg2, arg3, arg4);\n                        iVar3 = iVar1;\n                    }\n                }\n                in_RAX[1] = iVar3 + 1;\n                *(iVar2 + iVar3) = 0x20;\n            }\n            fcn.0049fa40(in_R9);\n            in_RDX = in_RDX + 1;\n            if (arg1 <= in_RDX) break;\n            unaff_RBX = unaff_RBX + 2;\n        }\n    }\n    iVar3 = in_RAX[1];\n    iVar1 = *in_RAX;\n    iVar2 = iVar1;\n    if (in_RAX[2] < iVar3 + 1U) {\n        iVar2 = fcn.00447240(iVar3);\n        in_RAX[2] = iVar3;\n        if (*0x626890 == 0) {\n            *in_RAX = iVar2;\n            iVar3 = iVar1;\n        }\n        else {\n            iVar2 = fcn.0045ea40(iVar3, in_RDX, in_R8, in_R9);\n            iVar3 = iVar1;\n        }\n    }\n    in_RAX[1] = iVar3 + 1;\n    *(iVar2 + iVar3) = 10;\n    return;\n}\n",
        "token_count": 620
    },
    "004a3d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004a3d20(uint64_t arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *arg3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *in_RAX;\n            if (arg3 == NULL) {\n                if (*0x626890 == 0) {\n                    *in_RAX = in_RAX;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x4a3d65;\n                    in_RAX = fcn.0045ea40(arg1, arg2, 0, arg4);\n                }\ncode_r0x004a3d65:\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_EBX;\n                if (unaff_EBX < 0x80) {\n                    iVar4 = in_RAX[2];\n                    iVar2 = in_RAX[1];\n                    iVar1 = iVar2;\n                    if (in_RAX[3] < iVar4 + 1U) {\n                        *(*0x20 + -0x68) = 0x4a3d9a;\n                        iVar1 = fcn.00447240(iVar4);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[3] = iVar4;\n                        if (*0x626890 == 0) {\n                            in_RAX[1] = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x4a3dbb;\n                            iVar1 = fcn.0045ea40(iVar4, in_RAX, arg3, arg4);\n                        }\n                        unaff_EBX = *(*0x20 + 0x10);\n                        iVar4 = iVar2;\n                    }\n                    in_RAX[2] = iVar4 + 1;\n                    *(iVar1 + iVar4) = unaff_EBX;\n                    return 1;\n                }\n                arg1_01 = in_RAX[2];\n                *(*0x20 + -0x20) = arg1_01;\n                arg4 = in_RAX[3];\n                iVar4 = arg4 - arg1_01;\n                if (iVar4 < 4) {\n                    iVar2 = arg4 * 2 + 4;\n                    *(*0x20 + -0x18) = iVar2;\n                    *(*0x20 + -0x68) = 0x4a3e27;\n                    iVar2 = fcn.00447160(iVar2);\n                    in_RAX = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + -0x20);\n                    arg1_00 = arg1_01;\n                    if (in_RAX[2] < arg1_01) {\n                        arg1_00 = in_RAX[2];\n                    }\n                    if (iVar2 != in_RAX[1]) {\n                        *(*0x20 + -0x10) = iVar2;\n                        *(*0x20 + -0x68) = 0x4a3e52;\n                        fcn.0045f840(arg1_00);\n                        iVar2 = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                        arg1_01 = *(*0x20 + -0x20);\n                    }\n                    in_RAX[2] = arg1_01;\n                    in_RAX[3] = *(*0x20 + -0x18);\n                    if (*0x626890 == 0) {\n                        in_RAX[1] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4a3e8c;\n                        fcn.0045ea40(arg1_01, in_RAX, iVar4, arg4);\n                    }\n                }\n                arg2 = in_RAX[3];\n                iVar4 = in_RAX[1];\n                arg1 = arg1_01 + 4;\n                if (arg1 <= arg2) {\n                    if (arg1_01 <= arg1) {\n                        *(*0x20 + -0x68) = 0x4a3ecf;\n                        iVar4 = fcn.0047e900(arg2 - arg1_01, -(arg2 - arg1_01) >> 0x3f & arg1_01, iVar4);\n                        arg2 = *(*(*0x20 + 8) + 0x18);\n                        arg1 = *(*0x20 + -0x20) + iVar4;\n                        if (arg1 <= arg2) {\n                            *(*(*0x20 + 8) + 0x10) = arg1;\n                            return iVar4;\n                        }\n                        *(*0x20 + -0x68) = 0x4a3f05;\n                        fcn.0045ef60(arg1, arg2);\n                    }\n                    *(*0x20 + -0x68) = 0x4a3f0d;\n                    fcn.0045efa0(arg1);\n                }\n                *(*0x20 + -0x68) = 0x4a3f12;\n                fcn.0045ef60(arg1, arg2);\n            }\n            else if (in_RAX == arg3) goto code_r0x004a3d65;\n            unaff_EBX = 0x4ee650;\n            *(*0x20 + -0x68) = 0x4a3f25;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x4a3f34;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1493
    },
    "004a3f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004a3f60(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t arg4;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x4a3f8c;\n            iVar2 = fcn.0047ebc0();\n            iVar3 = *(*0x20 + 0x18);\n            if ((-1 < iVar3) && (iVar3 <= iVar2)) {\n                iVar2 = iVar3;\n            }\n            *(*0x20 + -0x28) = iVar2;\n            *(*0x20 + -0x50) = 0x4a3fb5;\n            arg4 = fcn.00447160(iVar2);\n            *(*0x20 + -0x10) = arg4;\n            iVar3 = 0;\n            iVar2 = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n            while( true ) {\n                iVar6 = *(*0x20 + -0x28) + -1;\n                if (iVar6 <= iVar3) {\n                    if (0 < *(*0x20 + -0x28)) {\n                        iVar6 = iVar6 * 0x10;\n                        *(arg4 + 8 + iVar6) = unaff_RBX;\n                        if (*0x626890 == 0) {\n                            *(arg4 + iVar6) = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x4a40d1;\n                            fcn.0045eb60(iVar3, iVar2, iVar6, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0x20) = unaff_RBX;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x50) = 0x4a4005;\n                iVar1 = fcn.0047e620();\n                uVar4 = *(*0x20 + -0x20);\n                if (uVar4 < unaff_RBX) goto code_r0x004a40e9;\n                arg3 = *(*0x20 + -0x30);\n                arg1_00 = *(*0x20 + -0x28);\n                if (arg1_00 <= arg3) break;\n                iVar6 = arg3 * 0x10;\n                arg4 = *(*0x20 + -0x10);\n                *(arg4 + 8 + iVar6) = unaff_RBX;\n                uVar4 = uVar4 - unaff_RBX;\n                iVar3 = *(*0x20 + -0x18);\n                iVar2 = iVar3 + (unaff_RBX & -uVar4 >> 0x3f);\n                if (*0x626890 == 0) {\n                    *(arg4 + iVar6) = iVar3;\n                    unaff_RBX = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x50) = 0x4a406d;\n                    iVar1 = fcn.0045eb60(arg1_00, iVar3, arg3, arg4);\n                    unaff_RBX = uVar4;\n                }\n                if (iVar1 == 0xfffd) {\n                    *(arg4 + 8 + iVar6) = 3;\n                    if (*0x626890 == 0) {\n                        *(arg4 + iVar6) = 0x4c8912;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = 0x4a40a6;\n                        fcn.0045eb60(arg1_00, 0x4c8912, arg3, arg4);\n                    }\n                }\n                iVar3 = arg3 + 1;\n                in_R9 = arg4;\n            }\n            *(*0x20 + -0x50) = 0x4a40e9;\n            fcn.0045eee0(arg1_00);\ncode_r0x004a40e9:\n            *(*0x20 + -0x50) = 0x4a40f1;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ef20(unaff_RBX, uVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4a4106;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1313
    },
    "004a4120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004a4120(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x48) = 0x4a4198;\n                iVar2 = fcn.0047ebc0();\n                return iVar2 + 1;\n            }\n            if (unaff_RDI == 1) {\n                uVar1 = *arg1;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = uVar1;\n                *(*0x20 + -0x48) = 0x4a4170;\n                fcn.004024a0(uVar1, in_RDX);\n                return *(*0x20 + -0x28);\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            in_RDX = 0;\n            while( true ) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RDX;\n                *(*0x20 + -0x48) = 0x4a41df;\n                iVar2 = fcn.004a65a0(arg1, in_RDX);\n                if (iVar2 == -1) {\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                puVar3 = iVar2 + unaff_RDI;\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 < puVar3) break;\n                in_RDX = *(*0x20 + -0x20) + 1;\n                unaff_RBX = arg1 - puVar3;\n                in_RAX = (puVar3 & -unaff_RBX >> 0x3f) + *(*0x20 + -0x10);\n                arg1 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0x48) = 0x4a420e;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x4a4228;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 896
    },
    "004a4260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004a4260(uint8_t *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RDI == 1) {\n        uVar2 = *arg1;\n        unaff_RDI = unaff_RBX;\n        goto code_r0x004a4534;\n    }\n    if (unaff_RBX == unaff_RDI) {\n        cVar1 = fcn.00402620(unaff_RDI, arg2);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX < unaff_RDI) {\n        return 0xffffffffffffffff;\n    }\n    iVar4 = 0;\n    uVar2 = unaff_RDI;\n    while (uVar2 = uVar2 - 1,  -1 < uVar2) {\n        iVar4 = iVar4 * 0x1000193 + arg1[uVar2];\n    }\n    iVar7 = 0x1000193;\n    iVar6 = 1;\n    for (uVar2 = unaff_RDI; 0 < uVar2; uVar2 = uVar2 >> 1) {\n        if ((uVar2 & 1) != 0) {\n            iVar6 = iVar6 * iVar7;\n        }\n        iVar7 = iVar7 * iVar7;\n    }\n    uVar3 = unaff_RBX - unaff_RDI;\n    iVar7 = 0;\n    uVar5 = unaff_RBX;\n    while (uVar5 = uVar5 - 1,  uVar3 <= uVar5) {\n        uVar2 = unaff_RBX;\n        if (unaff_RBX <= uVar5) goto code_r0x004a4526;\n        iVar7 = *(in_RAX + uVar5) + iVar7 * 0x1000193;\n    }\n    uVar2 = uVar3;\n    if (iVar7 == iVar4) {\n        uVar2 = unaff_RBX;\n        if (uVar3 <= unaff_RBX) {\n            if (unaff_RDI == unaff_RBX - uVar3) {\n                cVar1 = fcn.00402620(unaff_RBX - uVar3, unaff_RDI);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            uVar2 = uVar3;\n            if (cVar1 != '\\0') {\n                return uVar3;\n            }\n            goto code_r0x004a4430;\n        }\n    }\n    else {\ncode_r0x004a4430:\n        while( true ) {\n            uVar2 = uVar2 - 1;\n            if (uVar2 < 0) {\n                return 0xffffffffffffffff;\n            }\n            if (unaff_RBX <= uVar2) break;\n            uVar5 = uVar2 + unaff_RDI;\n            if (unaff_RBX <= uVar5) {\ncode_r0x004a4505:\n                fcn.0045eee0(unaff_RBX);\n                break;\n            }\n            iVar7 = (iVar7 * 0x1000193 + *(uVar2 + in_RAX)) - *(uVar5 + in_RAX) * iVar6;\n            if (iVar4 == iVar7) {\n                if (uVar5 < uVar2) {\n                    fcn.0045efa0(uVar5);\n                    goto code_r0x004a4505;\n                }\n                cVar1 = fcn.00402620(unaff_RDI, (-unaff_RDI >> 0x3f & uVar2) + in_RAX);\n                if (cVar1 != '\\0') {\n                    return uVar2;\n                }\n            }\n        }\n        fcn.0045eee0(unaff_RBX);\n    }\n    fcn.0045efa0(uVar2);\ncode_r0x004a4526:\n    in_RAX = fcn.0045eee0(uVar2);\ncode_r0x004a4534:\n    do {\n        unaff_RDI = unaff_RDI - 1;\n        if (unaff_RDI < 0) {\n            return 0xffffffffffffffff;\n        }\n    } while (*(in_RAX + unaff_RDI) != uVar2);\n    return unaff_RDI;\n}\n",
        "token_count": 1111
    },
    "004a4700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.004a4700(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t auStack40 [7];\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI == 0) {\n        return -1;\n    }\n    if (unaff_RDI == 1) {\n        uVar4 = *arg1;\n        if (0x7f < *arg1) {\n            uVar4 = 0xfffd;\n        }\n        iVar5 = fcn.004a45a0(uVar4);\n        return iVar5;\n    }\n    if (8 < unaff_RBX) {\n        _auStack72 = in_XMM15;\n        for (iVar5 = 0; (iVar5 < unaff_RDI && (uVar1 = arg1[iVar5],  uVar1 < 0x80)); iVar5 = iVar5 + 1) {\n            *(auStack72 + (uVar1 >> 5) * 4) = *(auStack72 + (uVar1 >> 5) * 4) | 1 << (uVar1 & 0x1f);\n        }\n        auStack40[0] = auStack72._0_4_;\n        auStack40[1] = auStack72._4_4_;\n        auStack40[2] = uStack64;\n        auStack40[3] = uStack60;\n        uStack56 = SUB164(in_XMM15, 0);\n        uStack52 = SUB164(in_XMM15 >> 0x20, 0);\n        uStack48 = SUB164(in_XMM15 >> 0x40, 0);\n        uStack44 = SUB164(in_XMM15 >> 0x60, 0);\n        uStack12 = uStack44;\n        auStack40[4] = uStack56;\n        auStack40[5] = uStack52;\n        auStack40[6] = uStack48;\n        if (unaff_RDI <= iVar5) {\n            iVar5 = 0;\n            while( true ) {\n                if (unaff_RBX <= iVar5) {\n                    return -1;\n                }\n                if ((auStack40[*(iVar5 + in_RAX) >> 5] >> (*(iVar5 + in_RAX) & 0x1f) & 1) != 0) break;\n                iVar5 = iVar5 + 1;\n            }\n            return iVar5;\n        }\n    }\n    iVar5 = 0;\n    do {\n        arg1_00 = iVar5;\n        if (unaff_RBX <= arg1_00) {\n            return -1;\n        }\n        uVar4 = *(in_RAX + arg1_00);\n        if (*(in_RAX + arg1_00) < 0x80) {\n            iVar5 = arg1_00 + 1;\n        }\n        else {\n            uVar2 = fcn.00458fa0(arg1_00);\n            uVar4 = uVar2;\n            iVar5 = unaff_RBX;\n        }\n        iVar3 = fcn.004a45a0(uVar4);\n    } while (iVar3 < 0);\n    return arg1_00;\n}\n",
        "token_count": 887
    },
    "004a4900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * fcn.004a4900(uint8_t *arg1)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *in_RAX;\n    int64_t iVar4;\n    uint64_t arg1_00;\n    uint8_t *puVar5;\n    uint8_t *arg2;\n    uint8_t *unaff_RBX;\n    uint8_t uVar6;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint32_t uStack100;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    uint uStack48;\n    uint uStack44;\n    uint32_t auStack40 [7];\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI == NULL) {\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX != 0x1) {\n        arg2 = unaff_RBX;\n        if (unaff_RBX < 9) goto code_r0x004a499d;\n        _auStack72 = in_XMM15;\n        _auStack56 = in_XMM15;\n        arg2 = NULL;\n        do {\n            if ((unaff_RDI <= arg2) || (uVar6 = arg1[arg2],  0x7f < uVar6)) {\n                auStack40[0] = auStack72._0_4_;\n                auStack40[1] = auStack72._4_4_;\n                auStack40[2] = uStack64;\n                auStack40[3] = uStack60;\n                uStack12 = uStack44;\n                auStack40[4] = auStack56._0_4_;\n                auStack40[5] = auStack56._4_4_;\n                auStack40[6] = uStack48;\n                bVar1 = unaff_RDI <= arg2;\n                arg2 = unaff_RBX;\n                if (bVar1) {\n                    do {\n                        unaff_RBX = unaff_RBX + -1;\n                        if (unaff_RBX < 0) {\n                            return 0xffffffffffffffff;\n                        }\n                    } while ((auStack40[in_RAX[unaff_RBX] >> 5] >> (in_RAX[unaff_RBX] & 0x1f) & 1) == 0);\n                    return unaff_RBX;\n                }\ncode_r0x004a499d:\n                unaff_RBX = arg2;\n                if (unaff_RDI == 0x1) {\n                    uStack100 = *arg1;\n                    unaff_RDI = 0xfffd;\n                    uVar2 = uStack100;\n                    if (0x7f < *arg1) {\n                        uStack100 = 0xfffd;\n                        uVar2 = uStack100;\n                    }\n                }\n                else {\n                    while( true ) {\n                        if (unaff_RBX < 1) {\n                            return 0xffffffffffffffff;\n                        }\n                        if (arg2 < unaff_RBX) break;\n                        uVar2 = fcn.0047e7e0();\n                        iVar4 = fcn.004a45a0(uVar2);\n                        unaff_RBX = NULL;\n                        if (-1 < iVar4) {\n                            return NULL;\n                        }\n                    }\n                    puVar5 = arg2;\n                    fcn.0045ef20(unaff_RBX, arg2);\n                    uVar2 = puVar5;\n                    unaff_RDI = arg2;\n                }\n                while( true ) {\n                    uVar6 = uVar2;\n                    if (unaff_RBX < 1) {\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg2 < unaff_RBX) break;\n                    uVar3 = fcn.0047e7e0();\n                    unaff_RBX = NULL;\n                    unaff_RDI = arg2;\n                    uVar2 = uStack100;\n                    if (uVar3 == uStack100) {\n                        return NULL;\n                    }\n                }\n                arg1 = unaff_RBX;\n                in_RAX = fcn.0045ef20(unaff_RBX, arg2);\n            }\n            *(auStack72 + (uVar6 >> 5) * 4) = *(auStack72 + (uVar6 >> 5) * 4) | 1 << (uVar6 & 0x1f);\n            arg2 = arg2 + 1;\n        } while( true );\n    }\n    arg1_00 = *in_RAX;\n    if (0x7f < *in_RAX) {\n        arg1_00 = 0xfffd;\n    }\n    iVar4 = fcn.004a45a0(arg1_00);\n    if (iVar4 < 0) {\n        return 0xffffffffffffffff;\n    }\n    return NULL;\n}\n",
        "token_count": 1142
    },
    "004a4ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004a4ba0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R9;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (arg3 == 0) {\n                return 0;\n            }\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x60) = 0x4a4c36;\n                iVar1 = fcn.004a3f60(arg3);\n                return iVar1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 < 0) {\n                *(*0x20 + -0x60) = 0x4a4bf2;\n                iVar1 = fcn.004a4120(arg1);\n                arg3 = iVar1 + 1;\n            }\n            *(*0x20 + -0x30) = arg3;\n            *(*0x20 + -0x60) = 0x4a4c0d;\n            iVar1 = fcn.00447160(arg3);\n            *(*0x20 + -0x10) = iVar1;\n            arg1_00 = *(*0x20 + -0x30);\n            arg2 = arg1_00 - 1;\n            *(*0x20 + -0x20) = arg2;\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 8);\n            for (uVar4 = 0; unaff_RSI = unaff_RBX,  uVar4 < arg2; uVar4 = uVar4 + 1) {\n                *(*0x20 + -0x38) = uVar4;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x28) = unaff_RBX;\n                unaff_RDI = *(*0x20 + 0x20);\n                *(*0x20 + -0x60) = 0x4a4cad;\n                iVar2 = fcn.004a65a0(*(*0x20 + 0x18), arg2);\n                if (iVar2 < 0) {\n                    iVar1 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + -0x30);\n                    uVar4 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    break;\n                }\n                unaff_RSI = *(*0x20 + 0x28);\n                arg1 = unaff_RSI + iVar2;\n                arg2 = *(*0x20 + -0x28);\n                if (arg2 < arg1) goto code_r0x004a4da5;\n                uVar4 = *(*0x20 + -0x38);\n                arg1_00 = *(*0x20 + -0x30);\n                arg3 = uVar4;\n                if (arg1_00 <= uVar4) goto code_r0x004a4d99;\n                arg3 = uVar4 * 0x10;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8 + arg3) = arg1;\n                unaff_RDI = iVar1 + arg3;\n                uVar3 = iVar2 + *(*0x20 + 0x20);\n                if (*0x626890 == 0) {\n                    uVar6 = *(*0x20 + -0x18);\n                    *(iVar1 + arg3) = uVar6;\n                }\n                else {\n                    arg3 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x60) = 0x4a4d25;\n                    uVar3 = fcn.0045ebc0(arg1, arg2, arg3, arg1_00);\n                    uVar6 = arg3;\n                }\n                if (arg2 < uVar3) goto code_r0x004a4d91;\n                unaff_RBX = arg2 - uVar3;\n                unaff_RDI = uVar6 + (uVar3 & -unaff_RBX >> 0x3f);\n                arg2 = *(*0x20 + -0x20);\n                arg3 = unaff_RBX;\n                in_R9 = arg1_00;\n            }\n            if (uVar4 < arg1_00) {\n                *(iVar1 + 8 + uVar4 * 0x10) = unaff_RSI;\n                if (*0x626890 == 0) {\n                    *(iVar1 + uVar4 * 0x10) = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x4a4d7b;\n                    iVar1 = fcn.0045eb80(arg1_00, uVar4, arg3, in_R9);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x60) = 0x4a4d91;\n            fcn.0045eee0(arg1_00);\n            unaff_RBX = uVar4;\n            arg1_00 = in_R9;\ncode_r0x004a4d91:\n            *(*0x20 + -0x60) = 0x4a4d99;\n            fcn.0045efa0(arg2);\ncode_r0x004a4d99:\n            arg1 = arg1_00;\n            *(*0x20 + -0x60) = 0x4a4da5;\n            in_R9 = arg1;\n            fcn.0045eee0(arg1);\ncode_r0x004a4da5:\n            *(*0x20 + -0x60) = 0x4a4daa;\n            in_RAX = fcn.0045ef20(arg1, arg2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x4a4dce;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1839
    },
    "004a4e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004a4e00(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004a4e00:\n    puVar6 = *0x20;\n    uVar7 = unaff_RSI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xc0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX == 0) {\n            return 0;\n        }\n        if (unaff_RBX == 1) {\n            return *in_RAX;\n        }\n        uVar7 = unaff_RSI * (unaff_RBX + -1);\n        for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n            uVar7 = uVar7 + in_RAX[iVar1 * 2 + 1];\n        }\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (-1 < uVar7) {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = unaff_RBX + -1;\n            *(*0x20 + -0x60) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < uVar7) {\n                *(*0x20 + -0x88) = *(*0x20 + -0x18);\n                iVar1 = uVar7 + *(*0x20 + -0x10) * 2;\n                *(*0x20 + -0x80) = iVar1;\n                *(*0x20 + -200) = 0x4a4f30;\n                iVar1 = fcn.00447160(iVar1);\n                uVar7 = *(*0x20 + -0x88);\n                uVar4 = uVar7;\n                if (*(*0x20 + -0x18) < uVar7) {\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                if (iVar1 != *(*0x20 + -0x20)) {\n                    *(*0x20 + -0x30) = iVar1;\n                    *(*0x20 + -200) = 0x4a4f65;\n                    fcn.0045f840(uVar4);\n                    iVar1 = *(*0x20 + -0x30);\n                    uVar7 = *(*0x20 + -0x88);\n                }\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x10) = *(*0x20 + -0x80);\n                *(*0x20 + -0x20) = iVar1;\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            iVar1 = in_RAX[1];\n            uVar3 = *in_RAX;\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\ncode_r0x004a4fed:\n                uVar7 = *(*0x20 + -0x18);\n                *(*0x20 + -0x68) = iVar1 + uVar7;\n                uVar4 = *(*0x20 + -0x10);\n                uVar2 = *(*0x20 + -0x20);\n                if (uVar4 < iVar1 + uVar7) {\n                    *(*0x20 + -0x70) = uVar7;\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -200) = 0x4a5037;\n                    uVar2 = fcn.00447240(uVar7);\n                    iVar1 = *(*0x20 + -0x90);\n                    unaff_RDI = uVar4;\n                    uVar4 = uVar7;\n                }\n                *(*0x20 + -0x70) = uVar4;\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -200) = 0x4a5068;\n                fcn.0045f840(iVar1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                *(*0x20 + -0x10) = *(*0x20 + -0x70);\n                *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                puVar5 = (-(*(*0x20 + 0x18) + -1) >> 0x3f & 0x10) + *(*0x20 + 8);\n                uVar7 = *(*0x20 + 0x10);\n                if (uVar7 == 1) {\ncode_r0x004a50d7:\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = *(*0x20 + -0x60);\n                iVar1 = 0;\n                do {\n                    uVar3 = puVar5[1];\n                    uVar2 = *puVar5;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x004a5305;\n                    *(*0x20 + -0x98) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x68) = iVar1;\n                    *(*0x20 + -0x40) = puVar5;\n                    uVar4 = *(*0x20 + -0x18);\n                    uVar7 = arg1 + uVar4;\n                    *(*0x20 + -0x70) = uVar7;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < uVar7) {\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -200) = 0x4a51aa;\n                        uVar3 = fcn.00447240(uVar4);\n                        arg1 = *(*0x20 + -0x60);\n                        unaff_RDI = uVar4;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x4a51d8;\n                    fcn.0045f840(arg1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x004a52ee;\n                    uVar7 = *(*0x20 + -0x18);\n                    iVar1 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x70) = iVar1 + uVar7;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar1 + uVar7) {\n                        *(*0x20 + -0x78) = uVar7;\n                        *(*0x20 + -200) = 0x4a5279;\n                        uVar3 = fcn.00447240(uVar7);\n                        iVar1 = *(*0x20 + -0x98);\n                        unaff_RDI = uVar7;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x4a52a7;\n                    fcn.0045f840(iVar1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    iVar1 = *(*0x20 + -0x68) + 1;\n                    uVar7 = *(*0x20 + -0x58);\n                    if (uVar7 <= iVar1) goto code_r0x004a50d7;\n                    puVar5 = *(*0x20 + -0x40) + 0x10;\n                    arg1 = *(*0x20 + -0x60);\n                } while( true );\n            }\n            if (*(*0x20 + -0x28) == *0x20 + -0x28) goto code_r0x004a4fed;\n            goto code_r0x004a5318;\n        }\n        goto code_r0x004a532b;\n    }\n    goto code_r0x004a533f;\ncode_r0x004a52ee:\n    *(*0x20 + -200) = 0x4a5305;\n    fcn.00433560();\ncode_r0x004a5305:\n    *(*0x20 + -200) = 0x4a5318;\n    fcn.00433560();\ncode_r0x004a5318:\n    *(*0x20 + -200) = 0x4a532b;\n    fcn.00433560();\ncode_r0x004a532b:\n    unaff_RBX = 0x4eea40;\n    *(*0x20 + -200) = 0x4a533e;\n    in_RAX = fcn.00433560();\ncode_r0x004a533f:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = uVar7;\n    *(puVar6 + -8) = 0x4a535d;\n    fcn.0045c800();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x004a4e00;\n}\n",
        "token_count": 2810
    },
    "004a5380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\ncode ** fcn.004a5380(code **arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code **in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uchar *arg1_00;\n    int64_t iVar8;\n    code **unaff_RBX;\n    code **ppcVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar *puVar11;\n    uchar *in_R8;\n    uchar *in_R9;\n    int64_t unaff_R14;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \ncode_r0x004a5380:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0xc0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = 0;\n        while (iVar8 < arg1) {\n            *(*0x20 + -0x68) = iVar8;\n            uVar3 = *(unaff_RBX + iVar8);\n            if (*(unaff_RBX + iVar8) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -200) = 0x4a541f;\n                uVar3 = fcn.00458fa0(iVar8);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = arg1;\n            }\n            *(*0x20 + -0x74) = uVar3;\n            *(*0x20 + -0x48) = arg1;\n            pcVar1 = *in_RAX;\n            *(*0x20 + -200) = 0x4a543f;\n            uVar2 = (*pcVar1)();\n            *(*0x20 + -0x78) = uVar2;\n            uVar3 = *(*0x20 + -0x74);\n            if (uVar2 != uVar3) {\n                if (uVar3 == 0xfffd) {\n                    arg1 = *(*0x20 + 0x18);\n                    ppcVar9 = *(*0x20 + -0x68);\n                    bVar12 = arg1 < ppcVar9;\n                    goto code_r0x004a5483;\n                }\n                if (uVar3 < 0) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x80) {\n                    arg1 = 0x1;\n                }\n                else if (uVar3 < 0x800) {\n                    arg1 = 0x2;\n                }\n                else if (uVar3 - 0xd800 < 0x800) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x10000) {\n                    arg1 = 0x3;\n                }\n                else if (uVar3 < 0x110000) {\n                    arg1 = 0x4;\n                }\n                else {\n                    arg1 = 0xffffffffffffffff;\n                }\n                in_R8 = uVar2;\n                ppcVar9 = arg1;\ncode_r0x004a5540:\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x004a5938;\n                in_RAX = *(*0x20 + 0x18);\n                in_R9 = in_RAX + 4;\n                if (in_R9 < 0) goto code_r0x004a5925;\n                *(*0x20 + -0x70) = ppcVar9;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < in_R9) {\n                    *(*0x20 + -0x60) = *(*0x20 + -0x18);\n                    iVar8 = in_RAX + *(*0x20 + -0x10) * 2 + 4;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -200) = 0x4a55db;\n                    iVar5 = fcn.00447160(iVar8);\n                    iVar8 = *(*0x20 + -0x60);\n                    iVar7 = iVar8;\n                    if (*(*0x20 + -0x18) < iVar8) {\n                        iVar7 = *(*0x20 + -0x18);\n                    }\n                    if (iVar5 == *(*0x20 + -0x20)) {\n                        in_RAX = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x68);\n                        bVar12 = in_RAX < arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = iVar5;\n                        *(*0x20 + -200) = 0x4a561e;\n                        fcn.0045f840(iVar7);\n                        in_RAX = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x68);\n                        bVar12 = in_RAX < arg1;\n                        iVar5 = *(*0x20 + -0x30);\n                        iVar8 = *(*0x20 + -0x60);\n                    }\n                    *(*0x20 + -0x18) = iVar8;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                    *(*0x20 + -0x20) = iVar5;\n                    in_R8 = *(*0x20 + -0x78);\n                }\n                else {\n                    arg1 = *(*0x20 + -0x68);\n                    bVar12 = in_RAX < arg1;\n                }\n                if (bVar12) goto code_r0x004a5920;\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x004a590a;\n                arg1_00 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = arg1 + arg1_00;\n                uVar6 = *(*0x20 + -0x20);\n                puVar11 = *(*0x20 + -0x10);\n                in_R9 = arg1_00;\n                if (*(*0x20 + -0x10) < arg1 + arg1_00) {\n                    *(*0x20 + -0x50) = arg1_00;\n                    *(*0x20 + -200) = 0x4a56cf;\n                    uVar6 = fcn.00447240(arg1_00);\n                    in_R9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x68);\n                    puVar11 = arg1_00;\n                }\n                *(*0x20 + -0x50) = puVar11;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -200) = 0x4a56fd;\n                fcn.0045f840(arg1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x48);\n                *(*0x20 + -0x10) = *(*0x20 + -0x50);\n                in_RAX = *(*0x20 + -0x38);\n                *(*0x20 + -0x20) = in_RAX;\n                if (-1 < *(*0x20 + -0x78)) {\n                    *(*0x20 + -200) = 0x4a573c;\n                    fcn.004a3d20(arg1, in_RAX, in_R8, in_R9);\n                }\n                ppcVar9 = *(*0x20 + -0x70) + *(*0x20 + -0x68);\n                arg1 = *(*0x20 + 0x18);\n                if (arg1 < ppcVar9) goto code_r0x004a5905;\n                arg1 = arg1 - ppcVar9;\n                unaff_RBX = *(*0x20 + 0x10) + (ppcVar9 & -arg1 >> 0x3f);\n                in_RAX = *(*0x20 + 8);\n                break;\n            }\n            if (uVar3 == 0xfffd) {\n                arg1 = *(*0x20 + 0x18);\n                ppcVar9 = *(*0x20 + -0x68);\n                bVar12 = arg1 < ppcVar9;\ncode_r0x004a5483:\n                if (!bVar12) {\n                    ppcVar9 = arg1 - ppcVar9;\n                    *(*0x20 + -200) = 0x4a54b0;\n                    uVar3 = fcn.0047e620();\n                    if (ppcVar9 == 0x1) {\n                        in_R8 = *(*0x20 + -0x78);\n                    }\n                    else {\n                        in_R8 = *(*0x20 + -0x78);\n                        if (uVar3 == *(*0x20 + -0x78)) goto code_r0x004a53d4;\n                    }\n                    goto code_r0x004a5540;\n                }\n                goto code_r0x004a594b;\n            }\ncode_r0x004a53d4:\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x48);\n        }\n        if (*(*0x20 + -0x10) == 0) {\n            return unaff_RBX;\n        }\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x40) = unaff_RBX;\n        iVar8 = 0;\n        do {\n            if (arg1 <= iVar8) {\n                return *(*0x20 + -0x20);\n            }\n            if (*(iVar8 + unaff_RBX) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -200) = 0x4a57fc;\n                fcn.00458fa0(iVar8);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x50) = arg1;\n            arg1 = *in_RAX;\n            *(*0x20 + -200) = 0x4a5818;\n            iVar4 = (*arg1)();\n            if (-1 < iVar4) {\n                if (iVar4 < 0x80) {\n                    in_R8 = *(*0x20 + -0x28);\n                    if (in_R8 == NULL) {\n                        in_R8 = *0x20 + -0x28;\n                        *(*0x20 + -0x28) = in_R8;\n                    }\n                    else {\n                        in_R9 = *0x20 + -0x28;\n                        if (in_R8 != in_R9) goto code_r0x004a58ef;\n                    }\n                    iVar8 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar7 = iVar5;\n                    if (*(*0x20 + -0x10) < iVar8 + 1U) {\n                        *(*0x20 + -0x7c) = iVar4;\n                        *(*0x20 + -200) = 0x4a588d;\n                        iVar7 = fcn.00447240(iVar8);\n                        *(*0x20 + -0x10) = iVar8;\n                        *(*0x20 + -0x20) = iVar7;\n                        iVar4 = *(*0x20 + -0x7c);\n                        iVar8 = iVar5;\n                    }\n                    *(*0x20 + -0x18) = iVar8 + 1;\n                    *(iVar7 + iVar8) = iVar4;\n                }\n                else {\n                    *(*0x20 + -200) = 0x4a58ca;\n                    fcn.004a3d20(arg1, in_RAX, in_R8, in_R9);\n                }\n            }\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x40);\n            iVar8 = *(*0x20 + -0x50);\n        } while( true );\n    }\n    goto code_r0x004a5954;\ncode_r0x004a58ef:\n    *(*0x20 + -200) = 0x4a5905;\n    fcn.00433560();\ncode_r0x004a5905:\n    *(*0x20 + -200) = 0x4a590a;\n    fcn.0045efa0(arg1);\ncode_r0x004a590a:\n    *(*0x20 + -200) = 0x4a591d;\n    fcn.00433560();\ncode_r0x004a5920:\n    *(*0x20 + -200) = 0x4a5925;\n    fcn.0045ef20(arg1, in_RAX);\ncode_r0x004a5925:\n    *(*0x20 + -200) = 0x4a5938;\n    fcn.00433560();\ncode_r0x004a5938:\n    unaff_RBX = 0x4ee650;\n    *(*0x20 + -200) = 0x4a594b;\n    fcn.00433560();\ncode_r0x004a594b:\n    *(*0x20 + -200) = 0x4a5953;\n    in_RAX = fcn.0045efa0(arg1);\ncode_r0x004a5954:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x4a5968;\n    fcn.0045c800();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1 = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x004a5380;\n}\n",
        "token_count": 3444
    },
    "004a65a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004a65a0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t *arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t uVar5;\n    uint8_t *unaff_RDI;\n    uint64_t noname_2;\n    uint8_t *arg1_01;\n    uint8_t *puVar6;\n    uint8_t *unaff_R12;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar2 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == NULL) {\n                return 0;\n            }\n            if (unaff_RDI == 0x1) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x80) = in_RAX;\n                *(*0x20 + -0x78) = unaff_RBX;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x88) = 0x4a6710;\n                fcn.00402ac0(uVar5, arg2);\n                return *(*0x20 + -0x68);\n            }\n            if (unaff_RBX == unaff_RDI) {\n                *(*0x20 + -0x88) = 0x4a66da;\n                cVar1 = fcn.00402620(unaff_RDI, arg2);\n                if (cVar1 == '\\0') {\n                    return -1;\n                }\n                return 0;\n            }\n            if (unaff_RBX < unaff_RDI) {\n                return -1;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x626680 < unaff_RDI) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x52) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x54) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x50) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n                while( true ) {\n                    puVar6 = puVar7;\n                    if (arg1_01 <= puVar6) {\n                        return -1;\n                    }\n                    puVar7 = unaff_R12;\n                    if (unaff_RBX <= puVar6) goto code_r0x004a6998;\n                    *(*0x20 + -0x30) = iVar3;\n                    puVar7 = puVar6[in_RAX];\n                    if (puVar6[in_RAX] != uVar5) {\n                        if (unaff_RBX < arg1_01) goto code_r0x004a6990;\n                        puVar7 = puVar6 + 1;\n                        if (arg1_01 < puVar7) goto code_r0x004a6985;\n                        *(*0x20 + -0x40) = puVar6;\n                        iVar3 = puVar2 - puVar6;\n                        *(*0x20 + -0x80) = (-iVar3 >> 0x3f & puVar7) + in_RAX;\n                        *(*0x20 + -0x78) = iVar3;\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0x88) = 0x4a67aa;\n                        fcn.00402ac0(arg1, iVar3);\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x68) < 0) {\n                            return -1;\n                        }\n                        puVar6 = *(*0x20 + -0x68) + *(*0x20 + -0x40) + 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        iVar3 = *(*0x20 + -0x30);\n                    }\n                    puVar7 = puVar6 + 1;\n                    if (unaff_RBX <= puVar7) goto code_r0x004a6979;\n                    *(*0x20 + -0x18) = puVar6;\n                    if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x004a68c3:\n                    iVar3 = iVar3 + 1;\n                    unaff_R12 = (puVar7 >> 4) + 4;\n                    if ((unaff_R12 <= iVar3) && (puVar7 < arg1_01)) {\n                        *(*0x20 + -0x88) = 0x4a6908;\n                        iVar3 = fcn.00401de0(arg1, unaff_RBX + (-1 - puVar6), noname_2, arg1_01);\n                        if (-1 < iVar3) {\n                            return iVar3 + *(*0x20 + -0x18) + 1;\n                        }\n                        return -1;\n                    }\n                }\n                arg1_00 = puVar6 + unaff_RDI;\n                if (arg1_00 <= unaff_RBX) {\n                    if (puVar6 <= arg1_00) {\n                        *(*0x20 + -0x20) = puVar7;\n                        *(*0x20 + -0x88) = 0x4a6877;\n                        cVar1 = fcn.00402620(unaff_RDI, unaff_RDI);\n                        if (cVar1 != '\\0') {\n                            return *(*0x20 + -0x18);\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        puVar6 = *(*0x20 + -0x18);\n                        iVar3 = *(*0x20 + -0x30);\n                        puVar7 = *(*0x20 + -0x20);\n                        goto code_r0x004a68c3;\n                    }\n                    *(*0x20 + -0x88) = 0x4a6971;\n                    fcn.0045efa0(arg1_00);\n                }\n                *(*0x20 + -0x88) = 0x4a6979;\n                fcn.0045ef20(arg1_00, unaff_RBX);\ncode_r0x004a6979:\n                *(*0x20 + -0x88) = 0x4a6985;\n                fcn.0045eee0(unaff_RBX);\ncode_r0x004a6985:\n                *(*0x20 + -0x88) = 0x4a6990;\n                fcn.0045efa0(arg1_01);\ncode_r0x004a6990:\n                *(*0x20 + -0x88) = 0x4a6998;\n                fcn.0045ef20(arg1_01, unaff_RBX);\ncode_r0x004a6998:\n                arg1 = unaff_RBX;\n                *(*0x20 + -0x88) = 0x4a69a5;\n                unaff_RBX = arg1;\n                in_RAX = fcn.0045eee0(arg1);\n                unaff_R12 = puVar7;\n            }\n            else {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + -0x80) = in_RAX;\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x4a6667;\n                    fcn.00402960(arg1);\n                    return *(*0x20 + -0x60);\n                }\n                uVar5 = *arg1;\n                *(*0x20 + -0x51) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x53) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x48) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n            }\n            while( true ) {\n                puVar6 = puVar7;\n                if (arg1_01 <= puVar6) {\n                    return -1;\n                }\n                if (unaff_RBX <= puVar6) goto code_r0x004a6c2d;\n                *(*0x20 + -0x28) = iVar3;\n                unaff_R12 = puVar6[in_RAX];\n                if (puVar6[in_RAX] != uVar5) {\n                    if (unaff_RBX < arg1_01) goto code_r0x004a6c25;\n                    unaff_R12 = puVar6 + 1;\n                    if (arg1_01 < unaff_R12) goto code_r0x004a6c18;\n                    *(*0x20 + -0x38) = puVar6;\n                    iVar3 = puVar2 - puVar6;\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -iVar3 >> 0x3f);\n                    *(*0x20 + -0x78) = iVar3;\n                    *(*0x20 + -0x70) = uVar5;\n                    *(*0x20 + -0x88) = 0x4a6a15;\n                    fcn.00402ac0(arg1, iVar3);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x68) < 0) {\n                        return -1;\n                    }\n                    puVar6 = *(*0x20 + -0x38) + *(*0x20 + -0x68) + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    iVar3 = *(*0x20 + -0x28);\n                }\n                unaff_R12 = puVar6 + 1;\n                if (unaff_RBX <= unaff_R12) goto code_r0x004a6c0d;\n                *(*0x20 + -0x18) = puVar6;\n                if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x004a6b2c:\n                iVar3 = iVar3 + 1;\n                puVar7 = unaff_R12;\n                if (puVar6 + ((puVar6 + 0x11 >> 0x3f) >> 0x3d) + 0x11 >> 3 < iVar3) {\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -(unaff_RBX + (-1 - puVar6)) >> 0x3f);\n                    *(*0x20 + -0x78) = unaff_RBX + (-1 - puVar6);\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x4a6b7f;\n                    fcn.00402960(arg1);\n                    if (*(*0x20 + -0x60) < 0) {\n                        return -1;\n                    }\n                    return *(*0x20 + -0x60) + *(*0x20 + -0x18) + 1;\n                }\n            }\n            puVar7 = puVar6 + unaff_RDI;\n            if (puVar7 <= unaff_RBX) {\n                if (puVar6 <= puVar7) {\n                    *(*0x20 + -0x20) = unaff_R12;\n                    *(*0x20 + -0x88) = 0x4a6ad9;\n                    cVar1 = fcn.00402620(unaff_RDI, unaff_RDI);\n                    if (cVar1 != '\\0') {\n                        return *(*0x20 + -0x18);\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    puVar6 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x28);\n                    unaff_R12 = *(*0x20 + -0x20);\n                    goto code_r0x004a6b2c;\n                }\n                *(*0x20 + -0x88) = 0x4a6c05;\n                fcn.0045efa0(puVar7);\n            }\n            *(*0x20 + -0x88) = 0x4a6c0d;\n            fcn.0045ef20(puVar7, unaff_RBX);\ncode_r0x004a6c0d:\n            *(*0x20 + -0x88) = 0x4a6c18;\n            fcn.0045eee0(unaff_RBX);\ncode_r0x004a6c18:\n            *(*0x20 + -0x88) = 0x4a6c25;\n            fcn.0045efa0(arg1_01);\ncode_r0x004a6c25:\n            *(*0x20 + -0x88) = 0x4a6c2d;\n            fcn.0045ef20(arg1_01, unaff_RBX);\ncode_r0x004a6c2d:\n            arg1 = unaff_RBX;\n            *(*0x20 + -0x88) = 0x4a6c38;\n            arg2 = arg1;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = puVar2;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x4a6c52;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 3904
    },
    "004a6d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004a73f4)\n// WARNING: Removing unreachable block (ram,0x004a73ef)\n\nvoid fcn.004a6d80(ulong param_1, uint64_t param_2)\n\n{\n    uint8_t uVar1;\n    int64_t arg1;\n    bool bVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    char cVar8;\n    char cVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x70 && *0x20 + -0x70 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xf0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xf8) = 0x4a6dbb;\n            uVar3 = fcn.004a7ea0();\n            uVar11 = *(*0x20 + 0x10);\n            if (uVar3 <= uVar11) {\n                uVar5 = uVar11 - uVar3;\n                unaff_RBX = -uVar5 >> 0x3f & uVar3;\n                iVar4 = *(*0x20 + 8);\n                arg2 = iVar4 + unaff_RBX;\n                if (uVar5 == 0) {\n                    if ((1 < uVar3) && (*(iVar4 + 1) != ':')) {\n                        *(*0x20 + -0xf8) = 0x4a6fa5;\n                        fcn.004a5c00(0x4c8750, param_2, 1, 0xffffffffffffffff);\n                        return;\n                    }\n                    *(*0x20 + -0xf8) = 0x4a6fcb;\n                    fcn.0044ac00(uVar11);\n                    return;\n                }\n                if (*(iVar4 + unaff_RBX) == '\\\\') {\n                    uVar10 = 1;\n                }\n                else {\n                    uVar10 = *(iVar4 + unaff_RBX) == '/';\n                }\n                *(*0x20 + -0x80) = uVar5;\n                *(*0x20 + -0x58) = arg2;\n                *(*0x20 + -0xb2) = uVar10;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x50) = arg2;\n                *(*0x20 + -0x48) = uVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x18) = uVar11;\n                *(*0x20 + -0x10) = uVar3;\n                if (uVar10 == '\\0') {\n                    uVar3 = 0;\n                    uVar11 = uVar3;\n                    arg1_00 = uVar5;\ncode_r0x004a6fe0:\n                    uVar5 = uVar11;\n                    if (arg1_00 <= uVar5) {\n                        arg1_00 = *(*0x20 + -0x28);\n                        if (arg1_00 == 0) {\n                            if (*(*0x20 + -0x40) == 0) {\n                                iVar4 = *(*0x20 + -0x48);\n                                if ((0 < iVar4) && (**(*0x20 + -0x50) == '.')) {\n                                    arg1_00 = 1;\n                                    *(*0x20 + -0x28) = 1;\n                                    goto code_r0x004a7619;\n                                }\n                                *(*0x20 + -0x80) = iVar4;\n                                *(*0x20 + -0xf8) = 0x4a759c;\n                                uVar3 = fcn.00447160(iVar4);\n                                uVar11 = *(*0x20 + -0x80);\n                                *(*0x20 + -0x38) = uVar11;\n                                *(*0x20 + -0x30) = uVar11;\n                                *(*0x20 + -0x40) = uVar3;\n                                unaff_RBX = *(*0x20 + -0x50);\n                                param_2 = *(*0x20 + -0x48);\n                                unaff_RSI = *(*0x20 + -0x28);\n                                arg2 = param_2;\n                                if (param_2 < unaff_RSI) goto code_r0x004a771b;\n                                if (unaff_RSI < uVar11) {\n                                    uVar11 = unaff_RSI;\n                                }\n                                if (uVar3 != unaff_RBX) {\n                                    *(*0x20 + -0xf8) = 0x4a75eb;\n                                    fcn.0045f840(uVar11);\n                                }\n                            }\n                            uVar11 = *(*0x20 + -0x38);\n                            arg1_00 = *(*0x20 + -0x40);\n                            if (*(*0x20 + -0x28) < uVar11) {\n                                *(arg1_00 + *(*0x20 + -0x28)) = 0x2e;\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                goto code_r0x004a7619;\n                            }\n                        }\n                        else {\ncode_r0x004a7619:\n                            unaff_RBX = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x30);\n                            if (unaff_RBX == 0) {\n                                uVar3 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x20);\n                                if (*(*0x20 + -0x10) + *(*0x20 + -0x28) <= uVar3) {\ncode_r0x004a76ce:\n                                    *(*0x20 + -0xf8) = 0x4a76f0;\n                                    fcn.004a5c00(0x4c8750, uVar3, 1, 0xffffffffffffffff);\n                                    return;\n                                }\n                                *(*0x20 + -0xf8) = 0x4a7706;\n                                fcn.0045ef20(*(*0x20 + -0x10) + *(*0x20 + -0x28), uVar3);\ncode_r0x004a7706:\n                                *(*0x20 + -0xf8) = 0x4a770e;\n                                uVar11 = unaff_RSI;\n                                fcn.0045ef60(unaff_RSI, uVar3);\n                            }\n                            else {\n                                unaff_RSI = *(*0x20 + -0x18);\n                                uVar11 = *(*0x20 + -0x10);\n                                if (uVar11 <= unaff_RSI) {\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= uVar3) {\n                                        *(*0x20 + -0x58) = *(*0x20 + -0x20);\n                                        *(*0x20 + -0x80) = uVar11;\n                                        *(*0x20 + -0xf8) = 0x4a7685;\n                                        fcn.0044afa0(unaff_RSI);\n                                        *(*0x20 + -0xf8) = 0x4a769f;\n                                        fcn.0044ac00(*(*0x20 + -0x80));\n                                        goto code_r0x004a76ce;\n                                    }\n                                    goto code_r0x004a7706;\n                                }\n                            }\n                            *(*0x20 + -0xf8) = 0x4a7716;\n                            param_2 = unaff_RSI;\n                            fcn.0045ef20(uVar11, unaff_RSI);\n                        }\n                        *(*0x20 + -0xf8) = 0x4a771b;\n                        fcn.0045eee0(uVar11);\n                        arg2 = param_2;\ncode_r0x004a771b:\n                        *(*0x20 + -0xf8) = 0x4a7725;\n                        uVar3 = unaff_RSI;\n                        uVar5 = fcn.0045ef20(unaff_RSI, arg2);\n                        goto code_r0x004a7725;\n                    }\n                    if (arg1_00 <= uVar5) goto code_r0x004a7b30;\n                    cVar8 = *(uVar5 + arg2);\n                    if ((cVar8 == '\\\\') || (cVar8 == '/')) {\n                        uVar11 = uVar5 + 1;\n                        goto code_r0x004a6fe0;\n                    }\n                    *(*0x20 + -0xa8) = uVar3;\n                    cVar9 = uVar10;\n                    if (cVar8 != '.') {\ncode_r0x004a7402:\n                        if (cVar9 == '\\0') {\ncode_r0x004a7418:\n                            if (*(*0x20 + -0x28) != 0) {\ncode_r0x004a7427:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0xb0) = uVar5;\n                                    uVar7 = *(*0x20 + -0x28);\n                                    unaff_RBX = *(*0x20 + -0x48);\n                                    if (unaff_RBX <= uVar7) {\ncode_r0x004a7479:\n                                        *(*0x20 + -0x90) = unaff_RBX;\n                                        *(*0x20 + -0xf8) = 0x4a748d;\n                                        uVar3 = fcn.00447160(unaff_RBX);\n                                        uVar11 = *(*0x20 + -0x90);\n                                        *(*0x20 + -0x38) = uVar11;\n                                        *(*0x20 + -0x30) = uVar11;\n                                        *(*0x20 + -0x40) = uVar3;\n                                        unaff_RBX = *(*0x20 + -0x50);\n                                        arg2 = *(*0x20 + -0x48);\n                                        unaff_RSI = *(*0x20 + -0x28);\n                                        if (unaff_RSI <= arg2) {\n                                            if (unaff_RSI < uVar11) {\n                                                uVar11 = unaff_RSI;\n                                            }\n                                            if (uVar3 != unaff_RBX) {\n                                                *(*0x20 + -0xf8) = 0x4a74dc;\n                                                fcn.0045f840(uVar11);\n                                            }\n                                            uVar5 = *(*0x20 + -0xb0);\n                                            uVar3 = *(*0x20 + -0xa8);\n                                            arg2 = *(*0x20 + -0x58);\n                                            arg1_00 = *(*0x20 + -0x80);\n                                            uVar10 = *(*0x20 + -0xb2);\n                                            goto code_r0x004a74f9;\n                                        }\n                                        goto code_r0x004a7890;\n                                    }\n                                    if (uVar7 < unaff_RBX) {\n                                        if (*(*(*0x20 + -0x50) + uVar7) == '\\\\') {\n                                            *(*0x20 + -0x28) = uVar7 + 1;\n                                            goto code_r0x004a7728;\n                                        }\n                                        goto code_r0x004a7479;\n                                    }\n                                }\n                                else {\ncode_r0x004a74f9:\n                                    uVar7 = *(*0x20 + -0x38);\n                                    if (*(*0x20 + -0x28) < uVar7) {\n                                        *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                                        *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                        goto code_r0x004a7728;\n                                    }\ncode_r0x004a7885:\n                                    *(*0x20 + -0xf8) = 0x4a7890;\n                                    fcn.0045eee0(uVar7);\ncode_r0x004a7890:\n                                    *(*0x20 + -0xf8) = 0x4a7898;\n                                    fcn.0045ef20(unaff_RSI, arg2);\n                                }\n                                *(*0x20 + -0xf8) = 0x4a78a5;\n                                uVar3 = unaff_RBX;\n                                fcn.0045eee0(unaff_RBX);\n                                uVar11 = uVar7;\n                                param_2 = arg2;\n                                goto code_r0x004a6fe0;\n                            }\n                        }\n                        else {\n                            if (*(*0x20 + -0x28) != 1) goto code_r0x004a7427;\n                            if (cVar9 == '\\0') goto code_r0x004a7418;\n                        }\ncode_r0x004a7728:\n                        for (; uVar11 = uVar5,  param_2 = arg2,  uVar5 < arg1_00; uVar5 = uVar5 + 1) {\n                            uVar1 = *(uVar5 + arg2);\n                            uVar7 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x98) = uVar5;\n                                *(*0x20 + -0xb1) = uVar1;\n                                uVar11 = *(*0x20 + -0x28);\n                                unaff_RBX = *(*0x20 + -0x48);\n                                if (unaff_RBX <= uVar11) {\ncode_r0x004a77af:\n                                    *(*0x20 + -0x90) = unaff_RBX;\n                                    *(*0x20 + -0xf8) = 0x4a77c5;\n                                    uVar3 = fcn.00447160(unaff_RBX);\n                                    uVar11 = *(*0x20 + -0x90);\n                                    *(*0x20 + -0x38) = uVar11;\n                                    *(*0x20 + -0x30) = uVar11;\n                                    *(*0x20 + -0x40) = uVar3;\n                                    unaff_RBX = *(*0x20 + -0x50);\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= arg2) {\n                                        if (unaff_RSI < uVar11) {\n                                            uVar11 = unaff_RSI;\n                                        }\n                                        if (uVar3 != unaff_RBX) {\n                                            *(*0x20 + -0xf8) = 0x4a7810;\n                                            fcn.0045f840(uVar11);\n                                        }\n                                        uVar5 = *(*0x20 + -0x98);\n                                        uVar3 = *(*0x20 + -0xa8);\n                                        arg2 = *(*0x20 + -0x58);\n                                        arg1_00 = *(*0x20 + -0x80);\n                                        uVar7 = *(*0x20 + -0xb1);\n                                        uVar10 = *(*0x20 + -0xb2);\n                                        goto code_r0x004a7833;\n                                    }\n                                    goto code_r0x004a7872;\n                                }\n                                if (uVar11 < unaff_RBX) {\n                                    if (*(*(*0x20 + -0x50) + uVar11) != uVar1) goto code_r0x004a77af;\n                                    *(*0x20 + -0x28) = uVar11 + 1;\n                                    goto code_r0x004a7725;\n                                }\ncode_r0x004a787a:\n                                *(*0x20 + -0xf8) = 0x4a7885;\n                                fcn.0045eee0(unaff_RBX);\n                                goto code_r0x004a7885;\n                            }\ncode_r0x004a7833:\n                            unaff_RBX = uVar10 & 0xffffffff;\n                            uVar10 = *(*0x20 + -0x28);\n                            if (*(*0x20 + -0x38) <= uVar10) {\n                                *(*0x20 + -0xf8) = 0x4a7872;\n                                fcn.0045eee0(*(*0x20 + -0x38));\ncode_r0x004a7872:\n                                *(*0x20 + -0xf8) = 0x4a787a;\n                                fcn.0045ef20(unaff_RSI, arg2);\n                                goto code_r0x004a787a;\n                            }\n                            *(*(*0x20 + -0x40) + uVar10) = uVar7;\n                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                            uVar10 = unaff_RBX;\ncode_r0x004a7725:\n                        }\n                        goto code_r0x004a6fe0;\n                    }\n                    uVar11 = uVar5 + 1;\n                    if (arg1_00 == uVar11) goto code_r0x004a6fe0;\n                    if (arg1_00 <= uVar11) goto code_r0x004a7b25;\n                    cVar8 = *(uVar5 + 1 + arg2);\n                    if (cVar8 == '\\\\') goto code_r0x004a7974;\n                    if (cVar8 == '/') goto code_r0x004a7974;\n                    if (uVar11 < arg1_00) {\n                        if (cVar8 != '.') goto code_r0x004a7402;\n                        uVar7 = uVar5 + 2;\n                        if (arg1_00 != uVar7) {\n                            if (arg1_00 <= uVar7) {\ncode_r0x004a795b:\n                                *(*0x20 + -0xf8) = 0x4a7966;\n                                fcn.0045eee0(arg1_00);\n                                goto code_r0x004a7966;\n                            }\n                            cVar8 = *(uVar5 + 2 + arg2);\n                            if ((cVar8 != '\\\\') && (cVar8 != '/')) goto code_r0x004a7402;\n                        }\n                        iVar4 = *(*0x20 + -0x28);\n                        if (uVar3 < iVar4) {\n                            *(*0x20 + -0x28) = iVar4 + -1;\n                            while (uVar5 = *(*0x20 + -0x28),  uVar11 = uVar7,  param_2 = arg2,  uVar3 < uVar5) {\n                                uVar11 = *(*0x20 + -0x38);\n                                if (*(*0x20 + -0x40) == 0) {\n                                    uVar11 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x48) <= uVar5) {\n                                        *(*0x20 + -0xf8) = 0x4a7953;\n                                        fcn.0045eee0(*(*0x20 + -0x48));\n                                        goto code_r0x004a7953;\n                                    }\n                                    cVar8 = *(uVar11 + uVar5);\n                                }\n                                else {\n                                    if (uVar11 <= uVar5) {\ncode_r0x004a7953:\n                                        *(*0x20 + -0xf8) = 0x4a795b;\n                                        fcn.0045eee0(uVar11);\n                                        goto code_r0x004a795b;\n                                    }\n                                    cVar8 = *(*(*0x20 + -0x40) + uVar5);\n                                }\n                                uVar11 = uVar7;\n                                if ((cVar8 == '\\\\') || (cVar8 == '/')) break;\ncode_r0x004a78df:\n                                *(*0x20 + -0x28) = uVar5 - 1;\n                            }\n                            goto code_r0x004a6fe0;\n                        }\n                        uVar11 = uVar7;\n                        param_2 = arg2;\n                        if (cVar9 != '\\0') goto code_r0x004a6fe0;\n                        *(*0x20 + -0x88) = uVar7;\n                        if (iVar4 < 1) {\ncode_r0x004a71d6:\n                            if (*(*0x20 + -0x40) == 0) {\n                                uVar3 = *(*0x20 + -0x28);\n                                uVar11 = *(*0x20 + -0x48);\n                                if (uVar11 <= uVar3) {\ncode_r0x004a7227:\n                                    *(*0x20 + -0x90) = uVar11;\n                                    *(*0x20 + -0xf8) = 0x4a723b;\n                                    uVar3 = fcn.00447160(uVar11);\n                                    uVar11 = *(*0x20 + -0x90);\n                                    *(*0x20 + -0x38) = uVar11;\n                                    *(*0x20 + -0x30) = uVar11;\n                                    *(*0x20 + -0x40) = uVar3;\n                                    unaff_RBX = *(*0x20 + -0x50);\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= arg2) {\n                                        if (unaff_RSI < uVar11) {\n                                            uVar11 = unaff_RSI;\n                                        }\n                                        if (uVar3 != unaff_RBX) {\n                                            *(*0x20 + -0xf8) = 0x4a728a;\n                                            fcn.0045f840(uVar11);\n                                        }\n                                        arg2 = *(*0x20 + -0x58);\n                                        arg1_00 = *(*0x20 + -0x80);\n                                        uVar7 = *(*0x20 + -0x88);\n                                        uVar10 = *(*0x20 + -0xb2);\n                                        goto code_r0x004a72a2;\n                                    }\n                                    goto code_r0x004a78c5;\n                                }\n                                if (uVar3 < uVar11) {\n                                    if (*(*(*0x20 + -0x50) + uVar3) != '.') goto code_r0x004a7227;\n                                    *(*0x20 + -0x28) = uVar3 + 1;\n                                    goto code_r0x004a72d6;\n                                }\n                            }\n                            else {\ncode_r0x004a72a2:\n                                uVar11 = *(*0x20 + -0x38);\n                                if (*(*0x20 + -0x28) < uVar11) {\n                                    *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x2e;\n                                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x004a72d6:\n                                    if (*(*0x20 + -0x40) == 0) {\n                                        uVar3 = *(*0x20 + -0x28);\n                                        uVar11 = *(*0x20 + -0x48);\n                                        if (uVar11 <= uVar3) {\ncode_r0x004a7327:\n                                            *(*0x20 + -0x90) = uVar11;\n                                            *(*0x20 + -0xf8) = 0x4a733b;\n                                            uVar3 = fcn.00447160(uVar11);\n                                            uVar11 = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x38) = uVar11;\n                                            *(*0x20 + -0x30) = uVar11;\n                                            *(*0x20 + -0x40) = uVar3;\n                                            unaff_RBX = *(*0x20 + -0x50);\n                                            arg2 = *(*0x20 + -0x48);\n                                            unaff_RSI = *(*0x20 + -0x28);\n                                            if (unaff_RSI <= arg2) {\n                                                if (unaff_RSI < uVar11) {\n                                                    uVar11 = unaff_RSI;\n                                                }\n                                                if (uVar3 != unaff_RBX) {\n                                                    *(*0x20 + -0xf8) = 0x4a738a;\n                                                    fcn.0045f840(uVar11);\n                                                }\n                                                arg2 = *(*0x20 + -0x58);\n                                                arg1_00 = *(*0x20 + -0x80);\n                                                uVar7 = *(*0x20 + -0x88);\n                                                uVar10 = *(*0x20 + -0xb2);\n                                                goto code_r0x004a73a2;\n                                            }\n                                            goto code_r0x004a78b2;\n                                        }\n                                        if (uVar3 < uVar11) {\n                                            if (*(*(*0x20 + -0x50) + uVar3) != '.') goto code_r0x004a7327;\n                                            *(*0x20 + -0x28) = uVar3 + 1;\n                                            goto code_r0x004a73d6;\n                                        }\n                                    }\n                                    else {\ncode_r0x004a73a2:\n                                        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n                                            *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x2e;\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x004a73d6:\n                                            uVar3 = *(*0x20 + -0x28);\n                                            uVar11 = uVar7;\n                                            param_2 = arg2;\n                                            goto code_r0x004a6fe0;\n                                        }\n                                        *(*0x20 + -0xf8) = 0x4a78b2;\n                                        fcn.0045eee0(*(*0x20 + -0x38));\ncode_r0x004a78b2:\n                                        *(*0x20 + -0xf8) = 0x4a78ba;\n                                        uVar11 = unaff_RSI;\n                                        fcn.0045ef20(unaff_RSI, arg2);\n                                    }\n                                    *(*0x20 + -0xf8) = 0x4a78bf;\n                                    fcn.0045eee0(uVar11);\n                                }\n                                *(*0x20 + -0xf8) = 0x4a78c5;\n                                fcn.0045eee0(uVar11);\ncode_r0x004a78c5:\n                                *(*0x20 + -0xf8) = 0x4a78cd;\n                                uVar11 = unaff_RSI;\n                                fcn.0045ef20(unaff_RSI, arg2);\n                            }\n                            *(*0x20 + -0xf8) = 0x4a78d2;\n                            fcn.0045eee0(uVar11);\n                        }\n                        else {\n                            if (*(*0x20 + -0x40) == 0) {\n                                arg1 = *(*0x20 + -0x48);\n                                if ((iVar4 < arg1) && (*(*(*0x20 + -0x50) + iVar4) == '\\\\')) {\n                                    *(*0x20 + -0x28) = iVar4 + 1;\n                                    goto code_r0x004a71d6;\n                                }\n                                *(*0x20 + -0x90) = arg1;\n                                *(*0x20 + -0xf8) = 0x4a7139;\n                                uVar3 = fcn.00447160(arg1);\n                                uVar11 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x38) = uVar11;\n                                *(*0x20 + -0x30) = uVar11;\n                                *(*0x20 + -0x40) = uVar3;\n                                unaff_RBX = *(*0x20 + -0x50);\n                                arg2 = *(*0x20 + -0x48);\n                                unaff_RSI = *(*0x20 + -0x28);\n                                if (arg2 < unaff_RSI) goto code_r0x004a78d7;\n                                if (unaff_RSI < uVar11) {\n                                    uVar11 = unaff_RSI;\n                                }\n                                if (uVar3 != unaff_RBX) {\n                                    *(*0x20 + -0xf8) = 0x4a718a;\n                                    fcn.0045f840(uVar11);\n                                }\n                                arg2 = *(*0x20 + -0x58);\n                                arg1_00 = *(*0x20 + -0x80);\n                                uVar7 = *(*0x20 + -0x88);\n                                uVar10 = *(*0x20 + -0xb2);\n                            }\n                            uVar11 = *(*0x20 + -0x38);\n                            if (*(*0x20 + -0x28) < uVar11) {\n                                *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                goto code_r0x004a71d6;\n                            }\n                        }\n                        *(*0x20 + -0xf8) = 0x4a78d7;\n                        fcn.0045eee0(uVar11);\ncode_r0x004a78d7:\n                        *(*0x20 + -0xf8) = 0x4a78df;\n                        uVar3 = unaff_RSI;\n                        uVar5 = fcn.0045ef20(unaff_RSI, arg2);\n                        goto code_r0x004a78df;\n                    }\ncode_r0x004a7966:\n                    uVar3 = arg1_00;\n                    *(*0x20 + -0xf8) = 0x4a7971;\n                    arg1_00 = uVar3;\n                    fcn.0045eee0(uVar3);\n                    do {\n                        uVar11 = uVar11 + 1;\ncode_r0x004a7974:\n                    } while ((uVar11 < arg1_00) && ((*(uVar11 + arg2) == '\\\\' || (*(uVar11 + arg2) == '/'))));\n                    *(*0x20 + -0x90) = uVar11;\n                    if (*(*0x20 + -0x28) == 0) {\n                        if (arg1_00 < uVar11) goto code_r0x004a7b15;\n                        unaff_RBX = arg1_00 - uVar11;\n                        *(*0x20 + -0xf8) = 0x4a79ca;\n                        iVar4 = fcn.004a7ea0();\n                        bVar2 = 0 < iVar4;\n                        arg2 = *(*0x20 + -0x58);\n                        arg1_00 = *(*0x20 + -0x80);\n                        uVar10 = *(*0x20 + -0xb2);\n                        uVar11 = *(*0x20 + -0x90);\n                        uVar3 = *(*0x20 + -0xa8);\n                    }\n                    else {\n                        bVar2 = false;\n                    }\n                    param_2 = arg2;\n                    if (!bVar2) goto code_r0x004a6fe0;\n                    if (*(*0x20 + -0x40) == 0) {\n                        uVar5 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x48);\n                        if (uVar5 < unaff_RBX) {\n                            if (unaff_RBX <= uVar5) goto code_r0x004a7b0d;\n                            if (*(*(*0x20 + -0x50) + uVar5) == '.') {\n                                *(*0x20 + -0x28) = uVar5 + 1;\n                                goto code_r0x004a6fe0;\n                            }\n                        }\n                        *(*0x20 + -0xa0) = unaff_RBX;\n                        *(*0x20 + -0xf8) = 0x4a7a5b;\n                        uVar3 = fcn.00447160(unaff_RBX);\n                        uVar11 = *(*0x20 + -0xa0);\n                        *(*0x20 + -0x38) = uVar11;\n                        *(*0x20 + -0x30) = uVar11;\n                        *(*0x20 + -0x40) = uVar3;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        arg2 = *(*0x20 + -0x48);\n                        unaff_RSI = *(*0x20 + -0x28);\n                        if (arg2 < unaff_RSI) goto code_r0x004a7b05;\n                        if (unaff_RSI < uVar11) {\n                            uVar11 = unaff_RSI;\n                        }\n                        if (uVar3 != unaff_RBX) {\n                            *(*0x20 + -0xf8) = 0x4a7aaa;\n                            fcn.0045f840(uVar11);\n                        }\n                        uVar3 = *(*0x20 + -0xa8);\n                        arg2 = *(*0x20 + -0x58);\n                        arg1_00 = *(*0x20 + -0x80);\n                        uVar10 = *(*0x20 + -0xb2);\n                        uVar11 = *(*0x20 + -0x90);\n                    }\n                    if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n                        *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x2e;\n                        *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                        param_2 = arg2;\n                        goto code_r0x004a6fe0;\n                    }\n                    *(*0x20 + -0xf8) = 0x4a7b05;\n                    fcn.0045eee0(*(*0x20 + -0x38));\ncode_r0x004a7b05:\n                    *(*0x20 + -0xf8) = 0x4a7b0d;\n                    fcn.0045ef20(unaff_RSI, arg2);\ncode_r0x004a7b0d:\n                    *(*0x20 + -0xf8) = 0x4a7b15;\n                    fcn.0045eee0(unaff_RBX);\ncode_r0x004a7b15:\n                    *(*0x20 + -0xf8) = 0x4a7b25;\n                    fcn.0045efa0(arg1_00);\n                    param_2 = arg2;\ncode_r0x004a7b25:\n                    *(*0x20 + -0xf8) = 0x4a7b30;\n                    fcn.0045eee0(arg1_00);\ncode_r0x004a7b30:\n                    *(*0x20 + -0xf8) = 0x4a7b38;\n                    fcn.0045eee0(arg1_00);\ncode_r0x004a7b38:\n                    *(*0x20 + -0xf8) = 0x4a7b3d;\n                    fcn.0045eee0(arg1_00);\n                }\n                else {\n                    if (*(*0x20 + -0x40) != 0) {\ncode_r0x004a6f30:\n                        arg1_00 = *(*0x20 + -0x38);\n                        if (*(*0x20 + -0x28) < arg1_00) {\n                            *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x004a6f5e:\n                            uVar3 = 1;\n                            uVar11 = uVar3;\n                            arg1_00 = uVar5;\n                            goto code_r0x004a6fe0;\n                        }\n                        goto code_r0x004a7b38;\n                    }\n                    if ((uVar5 != 0) && (**(*0x20 + -0x50) == '\\\\')) {\n                        *(*0x20 + -0x28) = 1;\n                        goto code_r0x004a6f5e;\n                    }\n                    *(*0x20 + -0xf8) = 0x4a6ec8;\n                    uVar11 = fcn.00447160(uVar5);\n                    uVar5 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x38) = uVar5;\n                    *(*0x20 + -0x30) = uVar5;\n                    *(*0x20 + -0x40) = uVar11;\n                    unaff_RBX = *(*0x20 + -0x50);\n                    param_2 = *(*0x20 + -0x48);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    if (unaff_RSI <= param_2) {\n                        uVar3 = uVar5;\n                        if (unaff_RSI < uVar5) {\n                            uVar3 = unaff_RSI;\n                        }\n                        if (uVar11 != unaff_RBX) {\n                            *(*0x20 + -0xf8) = 0x4a6f1d;\n                            fcn.0045f840(uVar3);\n                            uVar5 = *(*0x20 + -0x80);\n                        }\n                        arg2 = *(*0x20 + -0x58);\n                        uVar10 = *(*0x20 + -0xb2);\n                        goto code_r0x004a6f30;\n                    }\n                }\n                *(*0x20 + -0xf8) = 0x4a7b45;\n                uVar11 = unaff_RSI;\n                fcn.0045ef20(unaff_RSI, param_2);\n            }\n            *(*0x20 + -0xf8) = 0x4a7b4a;\n            in_RAX = fcn.0045efa0(uVar11);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4a7b5a;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 8880
    },
    "004a7b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004a7b80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\ncode_r0x004a7ba5:\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = 0;\n        for (; *(in_RAX + 8) == 0; in_RAX = in_RAX + 0x10) {\n            iVar2 = iVar2 + 1;\n            if (unaff_RBX <= iVar2) goto code_r0x004a7ba5;\n        }\n        uVar1 = fcn.004a82e0(arg1 - iVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 237
    },
    "004a7d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004a7d80(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t arg1;\n    char *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x4a7da8;\n            arg1 = fcn.004a7ea0();\n            arg2 = *(*0x20 + 0x10);\n            if (arg1 <= arg2) {\n                uVar6 = arg2;\n                do {\n                    arg1_00 = uVar6;\n                    uVar6 = arg1_00 - 1;\n                    if ((uVar6 < arg1) || (cVar1 = *(*(*0x20 + 8) + uVar6),  cVar1 == '\\\\')) break;\n                } while (cVar1 != '/');\n                if (arg1_00 <= arg2) {\n                    if (arg1 <= arg1_00) {\n                        *(*0x20 + -0x10) = arg1;\n                        iVar4 = (uVar6 - arg1) + 1;\n                        *(*0x20 + -0x40) = 0x4a7e16;\n                        pcVar2 = fcn.004a6d80(iVar4, *(*0x20 + 8) + (-iVar4 >> 0x3f & arg1));\n                        if (iVar4 == 1) {\n                            if (*pcVar2 == '.') {\n                                iVar4 = *(*0x20 + -0x10);\n                                if (2 < iVar4) {\n                                    return *(*0x20 + 8);\n                                }\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                        else {\n                            iVar4 = *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x40) = 0x4a7e5d;\n                        uVar3 = fcn.0044ac00(iVar4);\n                        return uVar3;\n                    }\n                    *(*0x20 + -0x40) = 0x4a7e6c;\n                    fcn.0045efa0(arg1_00);\n                }\n                *(*0x20 + -0x40) = 0x4a7e71;\n                arg1 = fcn.0045ef20(arg1_00, arg2);\n            }\n            *(*0x20 + -0x40) = 0x4a7e79;\n            in_RAX = fcn.0045ef20(arg1, arg2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x4a7e89;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "004a7ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.004a7ea0(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    \n    if (unaff_RBX < 2) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && ((cVar1 + 0x9fU < 0x1a || (cVar1 + 0xbfU < 0x1a)))) {\n        return 2;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar4 = 3; iVar4 < unaff_RBX - 1; iVar4 = iVar4 + 1) {\n            if ((in_RAX[iVar4] == '\\\\') || (in_RAX[iVar4] == '/')) {\n                uVar5 = iVar4 + 1;\n                if (unaff_RBX <= uVar5) {\n                    fcn.0045eee0(unaff_RBX);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                cVar1 = in_RAX[iVar4 + 1];\n                if (cVar1 == '\\\\') {\n                    return 0;\n                }\n                if (cVar1 == '/') {\n                    return 0;\n                }\n                if (cVar1 == '.') {\n                    return 0;\n                }\n                for (; ((uVar5 < unaff_RBX && (in_RAX[uVar5] != '\\\\')) && (in_RAX[uVar5] != '/')); uVar5 = uVar5 + 1) {\n                }\n                return uVar5;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 486
    },
    "004a7fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004a7fc0(void)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint32_t uVar6;\n    uint64_t arg1;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    ulong arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t arg3;\n    ulong arg3_00;\n    ulong *arg4;\n    ulong arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x626818;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            uVar9 = 0;\n            arg1_00 = 0;\n            arg3 = 0;\n            arg4 = 0x626818;\n            for (arg1 = 0; *(*0x20 + -0x48) = arg1_00,  arg1 < unaff_RBX; arg1 = arg1 + 1) {\n                if (*(in_RAX + arg1) == '\\\"') {\n                    uVar3 = uVar3 ^ 1;\n                }\n                else if ((*(in_RAX + arg1) == ';') && (uVar3 == '\\0')) {\n                    if (arg1 < uVar9) goto code_r0x004a82a5;\n                    iVar7 = arg1 - uVar9;\n                    iVar4 = in_RAX + (uVar9 & -iVar7 >> 0x3f);\n                    uVar10 = arg1_00;\n                    uVar9 = arg1_00 + 1;\n                    if (arg3 < arg1_00 + 1) {\n                        *(*0x20 + -0x28) = arg1;\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x10) = iVar4;\n                        *(*0x20 + -0x49) = 0;\n                        *(*0x20 + -0x98) = 0x4a80c9;\n                        puVar2 = fcn.00447240(arg1_00);\n                        uVar9 = arg4 + 1;\n                        uVar3 = *(*0x20 + -0x49);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar10 = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x28);\n                        iVar7 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = arg1_00;\n                        arg4 = puVar2;\n                    }\n                    arg1_00 = uVar9;\n                    arg4[uVar10 * 2 + 1] = iVar7;\n                    if (*0x626890 == 0) {\n                        arg4[uVar10 * 2] = iVar4;\n                    }\n                    else {\n                        uVar6 = uVar3;\n                        *(*0x20 + -0x98) = 0x4a8128;\n                        in_RAX = fcn.0045eb60(uVar3, iVar4, arg3, arg4);\n                        uVar3 = uVar6;\n                    }\n                    uVar9 = arg1 + 1;\n                }\n            }\n            if (uVar9 <= unaff_RBX) {\n                uVar3 = arg1_00 + 1;\n                iVar7 = unaff_RBX - uVar9;\n                iVar4 = (uVar9 & -iVar7 >> 0x3f) + in_RAX;\n                uVar9 = arg1_00;\n                puVar2 = arg4;\n                if (arg3 < uVar3) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x98) = 0x4a818b;\n                    puVar2 = fcn.00447240(arg1_00);\n                    uVar3 = arg4 + 1;\n                    uVar9 = *(*0x20 + -0x48);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar4 = *(*0x20 + -0x10);\n                    arg1 = arg1_00;\n                    arg3 = arg1_00;\n                }\n                puVar2[uVar9 * 2 + 1] = iVar7;\n                if (*0x626890 == 0) {\n                    puVar2[uVar9 * 2] = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x4a81d1;\n                    uVar3 = fcn.0045eb60(arg1, iVar4, arg3, puVar2);\n                }\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x20) = puVar2;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x40) = arg3;\n                    iVar4 = 0;\n                    while( true ) {\n                        *(*0x20 + -0x38) = iVar4;\n                        *(*0x20 + -0x18) = puVar2;\n                        uVar5 = *puVar2;\n                        uVar1 = puVar2[1];\n                        arg1_01 = 0x4c8760;\n                        arg3_00 = 0;\n                        arg4_00 = 0xffffffffffffffff;\n                        *(*0x20 + -0x98) = 0x4a8245;\n                        uVar5 = fcn.004a5c00(0x4c8760, uVar5, 0, 0xffffffffffffffff);\n                        iVar4 = *(*0x20 + -0x38);\n                        puVar2 = *(*0x20 + -0x20);\n                        puVar2[iVar4 * 2 + 1] = uVar1;\n                        if (*0x626890 == 0) {\n                            puVar2[iVar4 * 2] = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x98) = 0x4a8273;\n                            fcn.0045ea40(arg1_01, iVar4 * 0x10, arg3_00, arg4_00);\n                        }\n                        iVar4 = iVar4 + 1;\n                        if (*(*0x20 + -0x48) <= iVar4) break;\n                        puVar2 = *(*0x20 + -0x18) + 0x10;\n                    }\n                }\n                return puVar2;\n            }\n            *(*0x20 + -0x98) = 0x4a82a5;\n            arg1 = unaff_RBX;\n            fcn.0045efa0(unaff_RBX);\ncode_r0x004a82a5:\n            *(*0x20 + -0x98) = 0x4a82ad;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4a82bd;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1867
    },
    "004a82e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004a82e0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x10) = in_RAX;\n                if ((in_RAX[1] != 2) || (*(*in_RAX + 1) != ':')) {\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x70) = 0x4a8346;\n                    fcn.004a4e00(arg1);\n                    *(*0x20 + -0x70) = 0x4a834b;\n                    uVar3 = fcn.004a6d80();\n                    *(*0x20 + -0x20) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x70) = 0x4a835a;\n                    iVar1 = fcn.004a7ea0();\n                    if (iVar1 < 3) {\n                        return *(*0x20 + -0x20);\n                    }\n                    uVar3 = *(*(*0x20 + -0x10) + 8);\n                    *(*0x20 + -0x70) = 0x4a837b;\n                    uVar2 = fcn.004a6d80();\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x70) = 0x4a838a;\n                    iVar1 = fcn.004a7ea0();\n                    if (2 < iVar1) {\n                        return *(*0x20 + -0x20);\n                    }\n                    uVar4 = *(*0x20 + 0x10);\n                    unaff_RBX = uVar4 - 1;\n                    *(*0x20 + -0x70) = 0x4a83d3;\n                    fcn.004a4e00(*(*0x20 + 0x18) + -1);\n                    *(*0x20 + -0x70) = 0x4a83d8;\n                    uVar3 = fcn.004a6d80();\n                    arg1 = *(*0x20 + -0x28);\n                    if (arg1 <= arg1 - 1) {\n                        *(*0x20 + -0x70) = 0x4a8467;\n                        in_RAX = fcn.0045eee0(arg1);\n                        goto code_r0x004a8467;\n                    }\n                    if (*((arg1 - 1) + *(*0x20 + -0x18)) != '\\\\') {\n                        *(*0x20 + -0x70) = 0x4a842d;\n                        uVar3 = fcn.0044aca0(arg1, *(*0x20 + -0x18), uVar3, unaff_RBX);\n                        return uVar3;\n                    }\n                    *(*0x20 + -0x70) = 0x4a8407;\n                    uVar3 = fcn.0044ac00(arg1);\n                    return uVar3;\n                }\n                uVar4 = 1;\n                while ((uVar4 < unaff_RBX && (in_RAX[uVar4 * 2 + 1] == 0))) {\ncode_r0x004a8467:\n                    uVar4 = uVar4 + 1;\n                }\n                if (uVar4 <= unaff_RBX) {\n                    *(*0x20 + -0x70) = 0x4a84c5;\n                    fcn.004a4e00(arg1 - uVar4);\n                    uVar3 = *(*(*0x20 + -0x10) + 8);\n                    *(*0x20 + -0x70) = 0x4a84e5;\n                    fcn.0044ac00(uVar3);\n                    *(*0x20 + -0x70) = 0x4a84ea;\n                    uVar3 = fcn.004a6d80();\n                    return uVar3;\n                }\n                *(*0x20 + -0x70) = 0x4a84ff;\n                fcn.0045efa0(unaff_RBX);\n            }\n            *(*0x20 + -0x70) = 0x4a8509;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4a851e;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1314
    },
    "004a8720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004a8720(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t arg1_00;\n    ulong noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong *unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x58) = 0x4a8758;\n            puVar3 = fcn.0040cc20();\n            uVar7 = *(*0x20 + 0x10);\n            puVar3[1] = uVar7;\n            if (*0x626890 == 0) {\n                *puVar3 = *(*0x20 + 8);\n                puVar4 = puVar3;\n            }\n            else {\n                *(*0x20 + -0x58) = 0x4a8785;\n                puVar4 = fcn.0045eb60(uVar7, *(*0x20 + 8), in_R8, in_R9);\n                unaff_RDI = puVar3;\n            }\n            unaff_RSI = *(*0x20 + 0x20);\n            arg1 = unaff_RSI + 1;\n            *(*0x20 + -0x20) = arg1;\n            if (arg1 < 2) {\n                unaff_RBX = 1;\n                uVar1 = arg1;\n            }\n            else {\n                unaff_RBX = 1;\n                unaff_RDI = 0x1;\n                *(*0x20 + -0x58) = 0x4a87bc;\n                puVar4 = fcn.00447240(1);\n                uVar1 = *(*0x20 + -0x20);\n                unaff_RSI = *(*0x20 + 0x20);\n                arg1 = *(*0x20 + -0x20);\n            }\n            if (uVar1 != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x10) = puVar4;\n                puVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0x58) = 0x4a8818;\n                fcn.00411cc0(unaff_RSI);\n                *(*0x20 + -0x58) = 0x4a8825;\n                puVar3 = fcn.0040cc20();\n                arg1_00 = *(*0x20 + 0x10);\n                puVar3[1] = arg1_00;\n                if (*0x626890 == 0) {\n                    uVar7 = *(*0x20 + 8);\n                    *puVar3 = uVar7;\n                    puVar5 = puVar3;\n                    puVar3 = puVar4;\n                }\n                else {\n                    uVar7 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x4a884f;\n                    puVar5 = fcn.0045eb40();\n                }\n                *(*0x20 + -0x18) = puVar5;\n                puVar5[3] = *(*0x20 + -0x20);\n                puVar5[4] = *(*0x20 + -0x28);\n                if (*0x626890 == 0) {\n                    noname_1 = *(*0x20 + -0x10);\n                    puVar5[2] = noname_1;\n                }\n                else {\n                    puVar3 = puVar5 + 2;\n                    noname_1 = *(*0x20 + -0x10);\n                    *(*0x20 + -0x58) = 0x4a8888;\n                    fcn.0045eb60(uVar7, noname_1, arg1, in_R9);\n                }\n                *(*0x20 + -0x58) = 0x4a8890;\n                fcn.004a7c40();\n                if (arg1_00 == *(*0x20 + 0x10)) {\n                    *(*0x20 + -0x58) = 0x4a88a7;\n                    cVar2 = fcn.00402620(arg1_00, noname_1);\n                    if (cVar2 != '\\0') {\n                        uVar7 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x58) = 0x4a88c5;\n                        uVar6 = fcn.004ab040();\n                        if (arg1_00 == 0) {\n                            puVar3 = *(*0x20 + -0x18);\n                            puVar3[1] = uVar7;\n                            if (*0x626890 == 0) {\n                                *puVar3 = uVar6;\n                                return puVar3;\n                            }\n                            *(*0x20 + -0x58) = 0x4a8918;\n                            fcn.0045ea40(0, noname_1, arg1, in_R9);\n                            return puVar3;\n                        }\n                        puVar4 = *(*0x20 + -0x18);\n                        puVar4[0x18] = arg1_00;\n                        if (*0x626890 == 0) {\n                            puVar4[0x19] = puVar3;\n                            return puVar4;\n                        }\n                        *(*0x20 + -0x58) = 0x4a88fa;\n                        puVar3 = fcn.0045eb60(puVar4 + 0x19, puVar3, arg1, in_R9);\n                        return puVar3;\n                    }\n                }\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x4a8932;\n            in_R8 = arg1;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + -8) = 0x4a8951;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1732
    },
    "004a9060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004a936e)\n// WARNING: Removing unreachable block (ram,0x004a9394)\n// WARNING: Removing unreachable block (ram,0x004a93d6)\n// WARNING: Removing unreachable block (ram,0x004a93cd)\n// WARNING: Removing unreachable block (ram,0x004a93e5)\n// WARNING: Removing unreachable block (ram,0x004a93fa)\n// WARNING: Removing unreachable block (ram,0x004a942c)\n// WARNING: Removing unreachable block (ram,0x004a9425)\n// WARNING: Removing unreachable block (ram,0x004a9431)\n\nint64_t fcn.004a9060(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong noname_1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        iVar6 = fcn.00497880(1);\n        return iVar6;\n    }\n    if (unaff_RBX == 0x4eeb98) {\n        return arg1;\n    }\n    iVar6 = arg1;\n    noname_1 = fcn.00498800();\n    if (iVar6 == 0) {\n        iVar6 = *(in_RAX + 0xf8);\n        iVar1 = *(in_RAX + 0xf0);\n        iVar5 = in_RAX;\n        iVar2 = iVar1;\n        if (*(in_RAX + 0x100) < iVar6 + 1U) {\n            iVar7 = iVar1;\n            iVar2 = fcn.00447240(iVar6);\n            *(in_RAX + 0x100) = iVar6;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0xf0) = iVar2;\n                iVar6 = iVar1;\n            }\n            else {\n                iVar2 = fcn.0045ea40(iVar6, in_RAX, iVar7, in_R9);\n                iVar6 = iVar1;\n            }\n        }\n        *(iVar5 + 0xf8) = iVar6 + 1;\n        iVar6 = iVar6 * 0x10;\n        arg4 = 0x4eeb58;\n        *(iVar2 + iVar6) = 0x4eeb58;\n        if (*0x626890 == 0) {\n            *(iVar2 + 8 + iVar6) = unaff_RBX;\n            uVar3 = noname_1;\n        }\n        else {\n            uVar3 = fcn.0045eb80(iVar6, iVar5, iVar2, 0x4eeb58);\n        }\n        iVar6 = *(iVar5 + 0x110);\n        iVar1 = *(iVar5 + 0x108);\n        iVar2 = iVar1;\n        if (*(iVar5 + 0x118) < iVar6 + 1U) {\n            iVar7 = iVar1;\n            iVar2 = fcn.00447240(iVar6);\n            *(in_RAX + 0x118) = iVar6;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x108) = iVar2;\n                iVar5 = in_RAX;\n            }\n            else {\n                iVar5 = in_RAX;\n                iVar2 = fcn.0045ea40(iVar6, in_RAX, iVar7, arg4);\n            }\n            arg4 = 0x4eeb58;\n            uVar3 = noname_1;\n            iVar6 = iVar1;\n        }\n        *(iVar5 + 0x110) = iVar6 + 1;\n        iVar6 = iVar6 * 0x10;\n        *(iVar2 + iVar6) = arg4;\n        if (*0x626890 == 0) {\n            *(iVar2 + 8 + iVar6) = uVar3;\n        }\n        else {\n            fcn.0045ea40(iVar6, iVar5, iVar2, arg4);\n        }\n        puVar4 = fcn.0040cc20();\n        *puVar4 = 0x4a9480;\n        puVar4[1] = unaff_RBX;\n        if (*0x626890 == 0) {\n            puVar4[2] = arg1;\n            puVar4[3] = noname_1;\n        }\n        else {\n            iVar6 = unaff_RBX;\n            fcn.0045eb60(unaff_RBX, arg1, iVar2, arg4);\n            puVar4 = fcn.0045eb60(iVar6, noname_1, iVar2, arg4);\n        }\n        iVar6 = *(in_RAX + 0x128);\n        iVar1 = *(in_RAX + 0x120);\n        iVar5 = iVar1;\n        if (*(in_RAX + 0x130) < iVar6 + 1U) {\n            iVar5 = fcn.00447240(iVar6);\n            *(in_RAX + 0x130) = iVar6;\n            if (*0x626890 == 0) {\n                *(in_RAX + 0x120) = iVar5;\n                iVar6 = iVar1;\n            }\n            else {\n                iVar5 = fcn.0045ea40(iVar6, in_RAX, iVar2, arg4);\n                iVar6 = iVar1;\n            }\n        }\n        *(in_RAX + 0x128) = iVar6 + 1;\n        if (*0x626890 == 0) {\n            *(iVar5 + iVar6 * 8) = puVar4;\n        }\n        else {\n            fcn.0045ea40(iVar6, in_RAX, iVar2, arg4);\n        }\n        return unaff_RBX;\n    }\n    return 0;\n}\n",
        "token_count": 1383
    },
    "004a9500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004a9500(uint64_t arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x88) = 0x4a953d;\n            fcn.004a7c40();\n            uVar6 = *(*0x20 + 0x10);\n            if (unaff_RBX == uVar6) {\n                *(*0x20 + -0x88) = 0x4a955a;\n                cVar1 = fcn.00402620(unaff_RBX, in_RDX);\n                if (cVar1 == '\\0') {\n                    uVar6 = *(*0x20 + 0x10);\n                    goto code_r0x004a9566;\n                }\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = 0x4c874f;\n                *(*0x20 + -0x20) = 1;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                unaff_RBX = 2;\n                *(*0x20 + -0x88) = 0x4a95c5;\n                uVar3 = fcn.004a7b80(2);\n            }\n            else {\ncode_r0x004a9566:\n                uVar3 = *(*0x20 + 8);\n                unaff_RBX = uVar6;\n            }\n            if (*(*0x20 + 0x20) == 0) {\n                *(*0x20 + -0x88) = 0x4a9734;\n                uVar3 = fcn.004ab040();\n                return uVar3;\n            }\n            *(*0x20 + -0x58) = unaff_RBX;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x88) = 0x4a95e5;\n            arg1 = fcn.004a7ea0();\n            in_RDX = *(*0x20 + -0x58);\n            if (arg1 <= in_RDX) {\n                if (arg1 != 0) {\n                    *(*0x20 + -0x88) = 0x4a9725;\n                    uVar3 = fcn.004ab040();\n                    return uVar3;\n                }\n                if (in_RDX < 2) {\n                    pcVar4 = *(*0x20 + -0x40);\n                }\n                else {\n                    pcVar4 = *(*0x20 + -0x40);\n                    if ((*pcVar4 == '\\\\') || (*pcVar4 == '/')) {\n                        *(*0x20 + -0x88) = 0x4a9625;\n                        uVar3 = fcn.004ab040();\n                        return uVar3;\n                    }\n                }\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x20);\n                *(*0x20 + -0x18) = pcVar4;\n                *(*0x20 + -0x10) = in_RDX;\n                unaff_RBX = 2;\n                iVar5 = 2;\n                *(*0x20 + -0x88) = 0x4a9676;\n                uVar3 = fcn.004a7b80(2);\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x48) = 2;\n                *(*0x20 + -0x88) = 0x4a9685;\n                uVar3 = fcn.004ab040();\n                if (iVar5 != 0) {\n                    return 0;\n                }\n                uVar6 = *(*0x20 + -0x48);\n                if (uVar6 < 3) {\n                    *(*0x20 + -0x50) = 2;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0x88) = 0x4a96ac;\n                    uVar2 = fcn.00402620(uVar6, in_RDX);\n                    uVar6 = *(*0x20 + -0x48);\n                    unaff_RBX = *(*0x20 + -0x50);\n                    in_RDX = uVar2;\n                }\n                else {\n                    in_RDX = 0;\n                }\n                if ((in_RDX == '\\0') || (uVar6 <= unaff_RBX)) {\n                    *(*0x20 + -0x88) = 0x4a96f8;\n                    uVar3 = fcn.0044ac00(*(*0x20 + -0x58));\n                    return uVar3;\n                }\n                *(*0x20 + -0x88) = 0x4a9749;\n                arg1 = fcn.0045efa0(unaff_RBX);\n            }\n            *(*0x20 + -0x88) = 0x4a9751;\n            in_RAX = fcn.0045ef20(arg1, in_RDX);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x4a976b;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1630
    },
    "004aa780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004aa780(uint64_t arg1)\n\n{\n    uchar in_AL;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t arg2;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004aa780:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x1a0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x1a8) = 0x4aa7ce;\n        uVar1 = fcn.00447160(arg1);\n        *(*0x20 + -0x110) = uVar1;\n        *(*0x20 + -0x108) = in_XMM15;\n        *(*0x20 + -0xf8) = in_XMM15;\n        *(*0x20 + -0xe8) = in_XMM15;\n        if (*(*0x20 + 0x18) < 9) {\n            *(*0x20 + -0x1b0) = unaff_RBP;\n            *(*0x20 + -0x1a8) = 0x4aa81a;\n            fcn.0045f182();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0xf8) = *0x20 + -0xd8;\n        }\n        *(*0x20 + -0x1a8) = 0x4aa845;\n        uVar1 = fcn.0040d7e0(*0x20 + -0x108);\n        arg2 = *(*0x20 + 0x18);\n        if (arg2 == 0) {\n            return *(*0x20 + -0x110);\n        }\n        *(*0x20 + -0x138) = uVar1;\n        puVar4 = *(*0x20 + 0x10);\n        iVar5 = 0;\n        arg1 = 0;\n        iVar2 = *(*0x20 + -0x110);\n        do {\n            *(*0x20 + -0x140) = iVar5;\n            *(*0x20 + -0x118) = puVar4;\n            *(*0x20 + -0x130) = iVar2;\n            *(*0x20 + -0x160) = arg1;\n            *(*0x20 + -0x158) = arg2;\n            *(*0x20 + -0x128) = *puVar4;\n            unaff_RDI = puVar4[1];\n            *(*0x20 + -0x150) = unaff_RDI;\n            *(*0x20 + -0x1a8) = 0x4aa8e6;\n            uVar1 = unaff_RDI;\n            arg1_00 = fcn.004a6c80(0x4c8756, arg2);\n            if (arg1 == '\\0') {\n                arg2 = *(*0x20 + -0x160);\n                arg1 = arg2 + 1;\n                if (*(*0x20 + -0x158) < arg1) {\n                    iVar5 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x1a8) = 0x4aa916;\n                    iVar2 = fcn.00447240(arg2);\n                    arg1 = iVar5 + 1;\n                    uVar6 = *(*0x20 + -0x160);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x130);\n                    uVar6 = arg2;\n                    arg2 = *(*0x20 + -0x158);\n                }\n                iVar5 = uVar6 * 0x10;\n                *(iVar2 + 8 + iVar5) = *(*0x20 + -0x150);\n                if (*0x626890 == 0) {\n                    *(iVar2 + iVar5) = *(*0x20 + -0x128);\n                }\n                else {\n                    *(*0x20 + -0x1a8) = 0x4aa95b;\n                    iVar2 = fcn.0045ebc0(arg2, iVar2 + iVar5, *(*0x20 + -0x128), in_R9);\n                }\n            }\n            else {\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x1a8) = 0x4aa976;\n                    arg1_00 = fcn.004a5980();\n                }\n                *(*0x20 + -0x148) = unaff_RDI;\n                *(*0x20 + -0x120) = arg1_00;\n                unaff_RBX = *(*0x20 + -0x138);\n                *(*0x20 + -0x1a8) = 0x4aa99a;\n                puVar3 = fcn.00410e20(arg1_00);\n                if (unaff_RBX == '\\0') {\n                    *(*0x20 + -0x1a8) = 0x4aaa17;\n                    puVar3 = fcn.00411240(*(*0x20 + -0x120));\n                    arg2 = *(*0x20 + -0x160);\n                    *puVar3 = arg2;\n                    arg1 = arg2 + 1;\n                    if (*(*0x20 + -0x158) < arg1) {\n                        iVar5 = *(*0x20 + -0x130);\n                        *(*0x20 + -0x1a8) = 0x4aaa45;\n                        iVar2 = fcn.00447240(arg2);\n                        arg1 = iVar5 + 1;\n                        uVar6 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        iVar2 = *(*0x20 + -0x130);\n                        uVar6 = arg2;\n                        arg2 = *(*0x20 + -0x158);\n                    }\n                    iVar5 = uVar6 * 0x10;\n                    *(iVar2 + 8 + iVar5) = *(*0x20 + -0x150);\n                    if (*0x626890 == 0) {\n                        *(iVar2 + iVar5) = *(*0x20 + -0x128);\n                    }\n                    else {\n                        *(*0x20 + -0x1a8) = 0x4aaa87;\n                        iVar2 = fcn.0045ebc0(arg2, iVar2 + iVar5, *(*0x20 + -0x128), in_R9);\n                    }\n                }\n                else {\n                    arg1 = *(*0x20 + -0x160);\n                    if (arg1 <= *puVar3) goto code_r0x004aaab7;\n                    iVar5 = *puVar3 * 0x10;\n                    iVar2 = *(*0x20 + -0x130);\n                    *(iVar2 + 8 + iVar5) = *(*0x20 + -0x150);\n                    if (*0x626890 == 0) {\n                        *(iVar2 + iVar5) = *(*0x20 + -0x128);\n                    }\n                    else {\n                        *(*0x20 + -0x1a8) = 0x4aa9e7;\n                        fcn.0045eb60(arg1, *(*0x20 + -0x128), uVar1, in_R9);\n                    }\n                    arg2 = *(*0x20 + -0x158);\n                    iVar2 = *(*0x20 + -0x130);\n                }\n            }\n            iVar5 = *(*0x20 + -0x140) + 1;\n            if (*(*0x20 + 0x18) <= iVar5) {\n                return iVar2;\n            }\n            in_R9 = *(*0x20 + -0x118);\n            puVar4 = in_R9 + 0x10;\n        } while( true );\n    }\n    goto code_r0x004aaabd;\ncode_r0x004aaab7:\n    *(*0x20 + -0x1a8) = 0x4aaabc;\n    in_AL = fcn.0045eee0(arg1);\ncode_r0x004aaabd:\n    puVar7[8] = in_AL;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + 0x20) = unaff_RDI;\n    *(puVar7 + -8) = 0x4aaad5;\n    fcn.0045c800();\n    in_AL = puVar7[8];\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    unaff_RDI = *(puVar7 + 0x20);\n    *0x20 = puVar7;\n    goto code_r0x004aa780;\n}\n",
        "token_count": 2143
    },
    "004aab00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004aab00(uint64_t arg1)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX != 0) {\n        arg2 = 0;\n        puVar3 = in_RAX;\n        while( true ) {\n            uVar2 = *puVar3;\n            fcn.004a6c80(0x4c8756, arg2);\n            if ((uVar2 != '\\0') && (cVar1 = fcn.004a6340(0x4c9743),  cVar1 != '\\0')) {\n                return in_RAX;\n            }\n            arg2 = arg2 + 1;\n            if (unaff_RBX <= arg2) break;\n            puVar3 = puVar3 + 2;\n        }\n    }\n    fcn.004960e0();\n    uVar2 = fcn.0044ac00(0xb);\n    if (arg1 < unaff_RBX + 1) {\n        arg1 = unaff_RBX;\n        in_RAX = fcn.00447240(unaff_RBX);\n    }\n    in_RAX[unaff_RBX * 2 + 1] = 0x4c9a52;\n    if (*0x626890 == 0) {\n        in_RAX[unaff_RBX * 2] = uVar2;\n    }\n    else {\n        fcn.0045ea40(arg1, in_RAX, in_RAX + unaff_RBX * 2, in_R9);\n    }\n    return in_RAX;\n}\n",
        "token_count": 440
    },
    "004ab040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004ab0c5)\n// WARNING: Removing unreachable block (ram,0x004ab0d0)\n\nulong fcn.004ab040(ulong param_1, ulong param_2)\n\n{\n    ulong in_RAX;\n    char **ppcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    char *arg4;\n    int64_t arg1;\n    int64_t arg1_00;\n    uint64_t arg2;\n    int64_t iVar5;\n    ulong unaff_RBX;\n    char *pcVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    uint64_t uStack128;\n    char *pcStack120;\n    uchar (*pauStack112) [16];\n    uchar auStack104 [16];\n    \n    while (&uStack128 < *(unaff_R14 + 0x10) || &uStack128 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004960e0();\n    fcn.004a5980();\n    ppcVar1 = fcn.004a4ba0(0x4c8754, param_2, 0xffffffffffffffff);\n    arg1 = 0;\n    arg2 = 0;\n    uStack128 = 0;\n    arg1_00 = 0;\n    while( true ) {\n        pcVar6 = ppcVar1[1];\n        arg4 = *ppcVar1;\n        if (pcVar6 != NULL) {\n            pauStack112 = ppcVar1;\n            if (*arg4 != '.') {\n                arg4 = fcn.0044ac00(1);\n                pcVar6 = 0x4c874f;\n            }\n            uVar7 = uStack128 + 1;\n            if (arg2 < uVar7) {\n                arg2 = uStack128;\n                pcStack120 = arg4;\n                iVar5 = fcn.00447240(uStack128);\n                uVar7 = arg1_00 + 1;\n                arg1_00 = iVar5;\n                arg4 = pcStack120;\n            }\n            iVar5 = uStack128 * 0x10;\n            *(arg1_00 + 8 + iVar5) = pcVar6;\n            if (*0x626890 == 0) {\n                *(arg1_00 + iVar5) = arg4;\n                ppcVar1 = pauStack112;\n                uStack128 = uVar7;\n            }\n            else {\n                ppcVar1 = fcn.0045ebe0(arg1, arg2, arg1_00 + iVar5);\n                uStack128 = uVar7;\n            }\n        }\n        arg1 = arg1 + 1;\n        if (6 < arg1) break;\n        ppcVar1 = ppcVar1 + 2;\n    }\n    iVar5 = arg1_00;\n    iVar2 = fcn.004a4700(0x4c8852);\n    if (iVar2 < 0) {\n        auStack104 = CONCAT88(1, 0x4c874f);\n        uVar3 = in_RAX;\n        fcn.004a7b80(2);\n        iVar5 = arg1_00;\n        uVar3 = fcn.004aaee0(arg1_00, uVar3);\n        if (iVar5 == 0) {\n            return uVar3;\n        }\n        fcn.004960e0();\n        pauStack112 = fcn.004a7fc0();\n        iVar5 = 0;\n        while( true ) {\n            auStack104 = *pauStack112;\n            uVar3 = in_RAX;\n            fcn.004a7b80(2);\n            iVar2 = arg1_00;\n            uVar3 = fcn.004aaee0(arg1_00, uVar3);\n            if (iVar2 == 0) {\n                return uVar3;\n            }\n            iVar5 = iVar5 + 1;\n            if (3 < iVar5) break;\n            pauStack112 = pauStack112[1];\n        }\n        puVar4 = fcn.0040cc20();\n        puVar4[1] = unaff_RBX;\n        if (*0x626890 == 0) {\n            *puVar4 = in_RAX;\n        }\n        else {\n            puVar4 = fcn.0045eb60(unaff_RBX, in_RAX, arg1, arg4);\n        }\n        uVar3 = *0x5d2578;\n        puVar4[2] = *0x5d2570;\n        if (*0x626890 == 0) {\n            puVar4[3] = uVar3;\n        }\n        else {\n            fcn.0045eb60(unaff_RBX, uVar3, arg1, arg4);\n        }\n        return 0;\n    }\n    uVar3 = fcn.004aaee0(arg1_00, iVar5);\n    if (arg1_00 != 0) {\n        puVar4 = fcn.0040cc20();\n        puVar4[1] = unaff_RBX;\n        if (*0x626890 == 0) {\n            *puVar4 = in_RAX;\n        }\n        else {\n            puVar4 = fcn.0045eb60(unaff_RBX, in_RAX, arg1, arg4);\n        }\n        puVar4[2] = arg1_00;\n        if (*0x626890 == 0) {\n            puVar4[3] = uStack128;\n        }\n        else {\n            fcn.0045eb60(unaff_RBX, uStack128, arg1, arg4);\n        }\n        return 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1286
    },
    "00414180": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00414180(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x4141cb;\n            arg1 = fcn.0040cf80(0x628300);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x414205;\n                    fcn.00414280(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x414233;\n                    fcn.00433ce0();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41423b;\n                fcn.0045eee0(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x414245;\n            in_RAX = fcn.0045ef40(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x414255;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 655
    },
    "00435780": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043586b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00435780(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00435d80();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00435d80();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4ee590) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4ee550 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4ee550)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4ee528;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4ee550)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4ee548;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4ee550;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4ee550 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4ee550;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4ee550;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00435560(0xe);\n    return;\n}\n",
        "token_count": 1123
    },
    "0044a820": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0044a820(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x44a86f;\n            fcn.0045f16b();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x4bfb40;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x561f60; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                    if ((*(iVar2 + 0x130) < 0x626871) && (0x626870 < *(iVar2 + 0x100))) goto code_r0x0044a8d6;\n                }\n                iVar2 = 0;\ncode_r0x0044a8d6:\n                if (iVar2 != 0) {\n                    *0x626870 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x626874 = *puVar1;\n                    *0x626878 = puVar1[1];\n                    *0x62687c = puVar1[4] - *(iVar2 + 0x128);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x44a930;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x140) = 0x44a945;\n            fcn.00433ce0();\n        }\n        *(puVar3 + -8) = 0x44a94b;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "0044b740": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044b740(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x0044b819;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x55f4a0);\n                    if (0x43 < uVar3) goto code_r0x0044b897;\n                    in_RAX = *(uVar3 * 2 + 0x55f5e0);\ncode_r0x0044b819:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x44b82a;\n                    uVar1 = fcn.0040c220(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x44b850;\n                        fcn.0045f580(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x55f5e0);\n                        goto code_r0x0044b819;\n                    }\n                    *(*0x20 + -0x50) = 0x44b88a;\n                    fcn.0045eee0(0x44);\n                }\n                *(*0x20 + -0x50) = 0x44b897;\n                fcn.0045ef00(0xf9);\ncode_r0x0044b897:\n                *(*0x20 + -0x50) = 0x44b8a5;\n                fcn.0045eee0(0x44);\n            }\n            *(*0x20 + -0x50) = 0x44b8b2;\n            in_RAX = fcn.0045ef00(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x44b8bd;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1096
    },
    "0044b8e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044b8e0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x0044b9d9;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x55f4a0);\n                        if (0x43 < uVar1) goto code_r0x0044ba65;\n                        uVar1 = *(uVar1 * 2 + 0x55f5e0);\ncode_r0x0044b9d9:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x44b9ea;\n                        uVar2 = fcn.0040c220(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x44ba15;\n                            fcn.0045f580(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x55f5e0);\n                            goto code_r0x0044b9d9;\n                        }\n                        *(*0x20 + -0x58) = 0x44ba53;\n                        fcn.0045eee0(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x44ba65;\n                    fcn.0045ef00(0xf9);\ncode_r0x0044ba65:\n                    *(*0x20 + -0x58) = 0x44ba72;\n                    fcn.0045eee0(0x44);\n                }\n                *(*0x20 + -0x58) = 0x44ba7f;\n                fcn.0045ef00(0x81);\n            }\n            *(*0x20 + -0x58) = 0x44ba90;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44ba9b;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1160
    },
    "0044e780": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044e780(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044e7d5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044e7d5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044e828;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044e828:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045efa0(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045eee0(unaff_RBX);\n                    }\n                    fcn.0045eee0(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045efa0(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045eee0(unaff_RBX);\n    }\n    fcn.0045eee0(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1018
    },
    "00452e60": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00452e60(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.0044d780();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x27) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x44);\n            puVar4 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.0044d2a0(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 278
    },
    "00484820": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.00484820(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x48498f;\n                    iVar7 = fcn.00447240(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar6) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x4849cc;\n                    iVar7 = fcn.00447240(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x48489d;\n                    cVar1 = fcn.00485140();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x4848e6;\n                        in_RAX = fcn.00447240(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x00484ac3;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x484919;\n            cVar1 = fcn.00485140();\n            if (cVar1 != '\\0') goto code_r0x004849ed;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x00484aab;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x00484aab;\n            unaff_RBX = 0;\n            uVar2 = *0x5cb038;\n            while (uVar6 = uVar2,  unaff_RBX < uVar6) {\n                iVar7 = uVar6 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x5cb038;\n                in_R8 = uVar6;\n                if (*0x5cb038 <= in_R9) goto code_r0x00484fdf;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x5cb030 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar6;\n                    in_R8 = uVar6;\n                }\n            }\n            if (*0x5cb038 <= unaff_RBX) goto code_r0x00484aab;\n            if (unaff_RBX < *0x5cb038) {\n                if (*(*0x5cb030 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x004849ed:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x484a06;\n                    uVar2 = fcn.0047e900(4);\n                    if (uVar2 < 5) {\n                        uVar6 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar6 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar6 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x484a51;\n                            uVar3 = fcn.00447240(uVar6);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar6 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x20) = uVar6;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x80) = 0x484a85;\n                        fcn.0045f840(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x484aab;\n                    fcn.0045ef20(uVar2, 4);\n                }\ncode_r0x00484aab:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x00484ac3:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484b88;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484b48;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484b0c;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x484e0f;\n                                in_RAX = fcn.00447240(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484e47;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484dd2;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x484d97;\n                            in_RAX = fcn.00447240(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if (unaff_EDI < 0x20) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x484ca9;\n                        in_RAX = fcn.00447240(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x785c;\n                    uVar8 = uVar6 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4ca965);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x484d05;\n                        iVar7 = fcn.00447240(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar6 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar6 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4ca965);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x484d5c;\n                        iVar7 = fcn.00447240(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if ((unaff_EDI < 0xd800) || (unaff_EDI - 0xe000 < 0x102000)) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar6 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x484c14;\n                                in_RAX = fcn.00447240(unaff_RBX);\n                                uVar6 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar6) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4ca965);\n                                iVar5 = in_RAX;\n                                uVar6 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x484f54;\n                                    iVar5 = fcn.00447240(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar5 + uVar6) = uVar10;\n                                in_RAX = iVar5;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x484c65;\n                        in_RAX = fcn.00447240(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar5 = 0xc; -1 < iVar5; iVar5 = iVar5 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4ca965);\n                        iVar4 = iVar7;\n                        uVar6 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar5;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x484ecc;\n                            iVar4 = fcn.00447240(uVar2);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar6) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x484fdf;\n            arg1 = fcn.0045eee0(*0x5cb038);\ncode_r0x00484fdf:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x484fea;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x485012;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4512
    },
    "004076a0": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.004076a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x5d2710 != NULL) {\n                if (*0x5d2718 == 0) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x5d2710;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x0040770e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x5d2718 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x407793;\n                        fcn.0045eee0(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x0040770e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x4077a5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4077b5;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 768
    },
    "004212c0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004212c0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x4212f8;\n                iVar2 = fcn.004237e0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x004213ab:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4213fb;\n                fcn.0045eee0(0x3f);\ncode_r0x004213fb:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x42140c;\n                fcn.00433ce0();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x421379;\n                            iVar2 = fcn.004237e0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x004213ab;\n                    }\n                    goto code_r0x004213fb;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x421419;\n            in_RAX = fcn.0045eee0(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x42142e;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1112
    },
    "00421460": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00421460(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x4214a5;\n            uVar3 = fcn.00421460(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x421505;\n                uVar3 = fcn.00421460((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x42154c;\n            in_RAX = fcn.0045eee0(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x421565;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 695
    },
    "0042ade0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042ade0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x626740,  iVar4 = *0x626748,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.0042a940(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "0042aec0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042aec0(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42af0f;\n            fcn.0045f174();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x42af2a;\n            uVar2 = fcn.00455f60(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x42af3d;\n            fcn.0040ab40();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x42af71;\n                uVar2 = fcn.0042aa00(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x626740;\n                *(*0x20 + -0x170) = 0x42af85;\n                iVar3 = fcn.0042a940();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x42afcb;\n                fcn.0040ad60();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x42b080;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x42b01d;\n                fcn.0045c6c0();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x42b04b;\n            in_RAX = fcn.0045ef20(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42b05b;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "0042b0c0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042b0c0(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar2 = *0x626740;\n    iVar3 = fcn.0042a940();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 249
    },
    "0042be40": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042be40(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42bea5;\n                arg1_00 = fcn.0042bc20();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042beee:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042bf2a;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042bf2a:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042c054:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c251;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42c14d;\n                                        piVar1 = fcn.0040cf80(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42c18e;\n                                                    fcn.0045f840(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42c211;\n                                                        fcn.0045f840(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042c22b;\n                                                }\ncode_r0x0042c272:\n                                                *(*0x20 + -0x68) = 0x42c27a;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045efa0(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42c285;\n                                            fcn.0045ef60(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42c28d;\n                                        fcn.0045ef60(arg1_00, arg2);\ncode_r0x0042c28d:\n                                        *(*0x20 + -0x68) = 0x42c298;\n                                        fcn.0045efa0(arg1_01);\ncode_r0x0042c298:\n                                        *(*0x20 + -0x68) = 0x42c2a5;\n                                        fcn.0045efa0(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042c298;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042c28d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42c105;\n                                            fcn.0045f840(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042c22b:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42c272;\n                                            fcn.0045eee0(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042c272;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c251;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42c2ad;\n                                    fcn.0045ef60(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42c2b5;\n                                fcn.0045eee0(ppiVar2);\n                                goto code_r0x0042c2b5;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042c2d2;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042c2ca;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042c2bf;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42bfde;\n                                    fcn.0045f840(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x0042c2ba;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042c251:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042c054;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042c251;\n                            }\ncode_r0x0042c2b5:\n                            *(*0x20 + -0x68) = 0x42c2ba;\n                            fcn.0045eee0(ppiVar2);\ncode_r0x0042c2ba:\n                            *(*0x20 + -0x68) = 0x42c2bf;\n                            fcn.0045ef60(ppiVar2, arg2);\ncode_r0x0042c2bf:\n                            *(*0x20 + -0x68) = 0x42c2ca;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045efa0(unaff_R13);\ncode_r0x0042c2ca:\n                            *(*0x20 + -0x68) = 0x42c2d2;\n                            fcn.0045efa0(ppiVar2);\ncode_r0x0042c2d2:\n                            *(*0x20 + -0x68) = 0x42c2d7;\n                            fcn.0045eee0(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42c2df;\n                        fcn.0045eee0(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42c2e5;\n                    fcn.0045eee0(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042beee;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42c2ed;\n                fcn.0045eee0(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42c2f2;\n            fcn.00435480();\n            *(*0x20 + -0x68) = 0x42c305;\n            fcn.00435d80();\n            *(*0x20 + -0x68) = 0x42c30f;\n            fcn.00435be0();\n            *(*0x20 + -0x68) = 0x42c325;\n            fcn.00435d80();\n            *(*0x20 + -0x68) = 0x42c32f;\n            fcn.00435be0();\n            *(*0x20 + -0x68) = 0x42c345;\n            fcn.00435d80();\n            *(*0x20 + -0x68) = 0x42c34a;\n            fcn.00435500();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42c35b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42c370;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3777
    },
    "00441f00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441f00(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2298) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2278;\n            *(*0x20 + -0x28) = 0x441f45;\n            fcn.0040ab40();\n            if ((*(*0x20 + 8))[0x8a6] != 0) goto code_r0x00441fa1;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x5d2798) {\n                    puVar1 = *0x5d2790 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x00441fa1:\n                    *(*0x20 + -0x28) = 0x441fab;\n                    fcn.0040ad60();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x441fc7;\n                fcn.0045eee0(*0x5d2798);\n            }\n            *(*0x20 + -0x28) = 0x441fcc;\n            in_RAX = fcn.00432200();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441fd7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 607
    },
    "00442000": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00442000(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x442053;\n                fcn.00441f00();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x5d2758) {\n                        puVar1 = *0x5d2750 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x5d31d0;\n                        LOCK();\n                        iVar3 = *0x5d31d8;\n                        *0x5d31d0 = piVar2;\n                        *0x5d31d8 = *0x5d31d8 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x4420e5;\n                    fcn.0045eee0(*0x5d2758);\n                }\n                *(*0x20 + -0x20) = 0x4420ea;\n                fcn.00432200();\n            }\n            *(*0x20 + -0x20) = 0x4420fb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x442106;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 682
    },
    "00442120": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00442120(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x5d31d0;\n    if (*0x5d31d0 == NULL) {\n        return;\n    }\n    iVar2 = **0x5d31d0;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x5d2798;\n        if (iVar6 < *0x5d2798) {\n            puVar1 = *0x5d2790 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x5d2758;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x5d2758) {\n                    puVar1 = *0x5d2750 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x5d31d0 = *(piVar4 + 2);\n                    *0x5d31d8 = *0x5d31d8 + -1;\n                    return;\n                }\n                fcn.0045eee0(*0x5d2758);\n            }\n            fcn.00432200();\n        }\n        fcn.0045eee0(arg1);\n    }\n    fcn.00432200();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 516
    },
    "004036a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.004036a0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4036ec;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40370a;\n            fcn.00457000();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403725;\n            fcn.0044ac00(0x1c);\n            *(*0x20 + -0x38) = 0x40372a;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x38) = 0x403739;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40374e;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "00403780": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403780(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x4037cf;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4037ed;\n            fcn.00457000();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403806;\n            fcn.0044ac00(0x1c);\n            *(*0x20 + -0x38) = 0x40380b;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0x38) = 0x40381a;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40382f;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "004039c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004039c0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00433ce0();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.0045a0a0();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.0045c6c0();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045e620();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.0045a0e0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 372
    },
    "00405680": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405680(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00412da0(arg1);\n    fcn.0045f840(*in_RAX);\n    return;\n}\n",
        "token_count": 106
    },
    "00405700": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405700(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00412da0(*(unaff_RBX + 0x18));\n    fcn.0045f840(*in_RAX);\n    return;\n}\n",
        "token_count": 123
    },
    "00407ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407ba0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044ac00(0xf);\n    return;\n}\n",
        "token_count": 85
    },
    "0040a340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a340(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.0040c220(1, *in_RAX);\n    fcn.00411b00(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "0040a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a3c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.0040c220(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045f840(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00411e60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00411e60(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x411f65;\n                            fcn.00411e40();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x411ec5;\n                    fcn.00411e40();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x411fa7;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x411fb2;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "004124e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004124e0(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.00412400(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00414900": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414900(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.00424b20(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.00414280(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00414c20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00414c20(void)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_BL;\n            if (uVar5 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar5 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar5;\n                    if (iVar3 == 0x626c80) {\ncode_r0x00414cb7:\n                        *(*0x20 + -0x38) = 0x414ccf;\n                        iVar3 = fcn.00415360();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar3;\n                                *(iVar3 + 0x58) = *0x5f8a10 + 3;\n                                *(*0x20 + -0x38) = 0x414d07;\n                                iVar3 = fcn.0042cda0();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar5 = uVar2;\n                                if (uVar2 >> 1 < 0x44) {\n                                    piVar4 = iVar3 + (uVar2 >> 1) * 8 + 0x48;\n                                    LOCK();\n                                    *piVar4 = *piVar4 + (*(*(*0x20 + -0x18) + 0x38) - *(*(*0x20 + -0x18) + 0x60));\n                                    if (uVar2 == 5) {\n                                        piVar4 = *(*0x20 + 8);\n                                        LOCK();\n                                        puVar1 = iVar3 + 0x30;\n                                        uVar5 = *puVar1;\n                                        *puVar1 = *puVar1 + piVar4[4];\n                                        piVar4[4] = 0;\n                                    }\n                                    *(*0x20 + -0x38) = 0x414d6f;\n                                    fcn.0042ce80(piVar4, uVar5);\n                                    arg1 = *(*(*0x20 + 8) + 8);\n                                    *(*0x20 + -0x38) = 0x414da5;\n                                    fcn.0041ede0(arg1);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(iVar3 + 8) = 0;\n                                    *(iVar3 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                    return;\n                                }\n                                *(*0x20 + -0x38) = 0x414dd8;\n                                fcn.0045eee0(0x44);\n                            }\n                            *(*0x20 + -0x38) = 0x414de9;\n                            fcn.00433ce0();\n                        }\n                        *(*0x20 + -0x38) = 0x414dfa;\n                        fcn.00433ce0();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x5f8a10 + 3) {\n                        *(*0x20 + -0x38) = 0x414cb2;\n                        fcn.004156e0();\n                        goto code_r0x00414cb7;\n                    }\n                    *(*0x20 + -0x38) = 0x414e0b;\n                    fcn.00433ce0();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x38) = 0x414e1c;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x38) = 0x414e29;\n            in_RAX = fcn.0045eee0(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x414e38;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1167
    },
    "0041a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0041a2c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x41a2e5;\n            fcn.00437140();\n            *(*0x20 + -0x38) = 0x41a2f3;\n            fcn.0040ab40();\n            *(*0x20 + -0x20) = *0x5f8cc0;\n            *(*0x20 + -0x10) = *0x5f8cb8;\n            *(*0x20 + -0x38) = 0x41a319;\n            fcn.0040ad60();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x5d2c60 = 0;\n                    *0x5d2d08 = *0x626f58;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x41a35a;\n                fcn.0045f580();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x41a3b8;\n            fcn.0045ef00(0x40);\n        }\n        *(puVar4 + -8) = 0x41a3be;\n        fcn.00460f20();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "0041bc20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041bc20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar2 = *0x5d2d20;\n    iVar1 = *0x5d2d18;\n    if (*0x626644 == 0) {\n        fcn.0040ad60();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x5d2d20 != 0) {\n        *(*0x5d2d20 + 0xa0) = unaff_R14;\n        iVar3 = *0x5d2d18;\n    }\n    *0x5d2d18 = iVar3;\n    if (*0x626fa8 < 1) {\n        *0x5d2d20 = unaff_R14;\n        fcn.00436620(0xb);\n        return 1;\n    }\n    *0x5d2d18 = iVar1;\n    *0x5d2d20 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040ad60();\n    return 0;\n}\n",
        "token_count": 355
    },
    "00424220": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00424220(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00417320(0x4d2a58);\n    fcn.00417320(0);\n    fcn.00417320(0);\n    fcn.00417320(0);\n    fcn.00417320(0);\n    fcn.00417320(0);\n    *(in_RAX + 0x16a78) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10438 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00426da0(0x628318);\n    return;\n}\n",
        "token_count": 237
    },
    "00425d20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00425d20(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x425db7;\n            fcn.00435480();\n            *(*0x20 + -0x38) = 0x425dc8;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425dd2;\n            fcn.00435a80();\n            *(*0x20 + -0x38) = 0x425de5;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425def;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425e05;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425e0f;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425e25;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425e2f;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425e45;\n            fcn.00435d80();\n            *(*0x20 + -0x38) = 0x425e4f;\n            fcn.00435d40();\n            *(*0x20 + -0x38) = 0x425e54;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425e59;\n            fcn.00435500();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425e6a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425e7a;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "0042a800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a800(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00429ec0(arg1);\n    fcn.00429fc0(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00430ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00430ba0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040ab40();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.00430e80();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 107
    },
    "00433f40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433f40(void)\n\n{\n    fcn.0045c6c0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 37
    },
    "00435300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00435300(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x43532c;\n            fcn.00435480();\n            if (*0x626668 != 0) {\ncode_r0x00435349:\n                *(*0x20 + -0x38) = 0x43534e;\n                fcn.00435500();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00435349;\n                if (0x200 < *0x6267a0) goto code_r0x00435438;\n                iVar6 = *0x6267a0 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x6267a0) + 0x627040) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x43540e;\n                    fcn.0045f840(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x6267a0 + arg1_01;\n                *0x6267a0 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x435438;\n            fcn.0045efa0(arg1_00);\ncode_r0x00435438:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x435445;\n            in_RAX = fcn.0045efa0(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43545a;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1001
    },
    "0043e6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e6c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 86
    },
    "0044df00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044df00(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044df46;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044df46:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44df53;\n                uVar2 = fcn.0044bba0();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44df85;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44df95;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "0044e060": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044e060(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044e09d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044e09d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44e0aa;\n                uVar1 = fcn.0044bba0();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44e0dc;\n            in_RAX = fcn.0045eee0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44e0f0;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 620
    },
    "0044e120": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044e120(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4c8757;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4c8757;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44e179;\n                    uVar2 = fcn.0044bba0();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44e1d4;\n                fcn.0045eee0(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44e1de;\n            in_RAX = fcn.0045eee0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44e1f2;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 736
    },
    "004505c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004505c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044f2c0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.00451420();\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004529e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004529e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.00451660(0);\n    return;\n}\n",
        "token_count": 114
    },
    "00455680": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455680(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00455780(arg1);\n    return;\n}\n",
        "token_count": 85
    },
    "004556e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004556e0(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.00455780(0);\n        return;\n    }\n    fcn.00455780(arg1);\n    return;\n}\n",
        "token_count": 137
    },
    "0045b2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045b2e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.004039c0();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f4a0();\n    return;\n}\n",
        "token_count": 334
    },
    "0045b860": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b860(ulong arg1, ulong arg2)\n\n{\n    fcn.00460a40();\n    return;\n}\n",
        "token_count": 32
    },
    "00460300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00460300(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045e860();\n    return;\n}\n",
        "token_count": 47
    },
    "004606e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004606e0(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x5d1c88)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 85
    },
    "004607c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004607c0(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "00460a40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460a40(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.00411ba0(uStackX24);\n    return;\n}\n",
        "token_count": 37
    },
    "00467b20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00467b20(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x467b7b;\n            iVar1 = fcn.00447160(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x00467c7d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x00467c75;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x00467c6d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x00467c65;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x467c65;\n            fcn.0045ef60(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x00467c65:\n            *(*0x20 + -0x38) = 0x467c6d;\n            fcn.0045eee0(arg1);\ncode_r0x00467c6d:\n            *(*0x20 + -0x38) = 0x467c75;\n            fcn.0045eee0(arg1);\ncode_r0x00467c75:\n            *(*0x20 + -0x38) = 0x467c7d;\n            fcn.0045eee0(arg1);\ncode_r0x00467c7d:\n            *(*0x20 + -0x38) = 0x467c85;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x467c9a;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1121
    },
    "0046b800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0046b800(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((in_RAX < 0x10) && (*(in_RAX * 0x10 + 0x5cf108) != 0)) {\n        return *(in_RAX * 0x10 + 0x5cf100);\n    }\n    fcn.00467e40(in_RAX);\n    uVar1 = fcn.0044ac00(7);\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "0047fbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047fbc0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    char acStack33 [25];\n    \n    uVar3 = 0;\n    while (unaff_RBX != 0) {\n        if (0x17 < uVar3) goto code_r0x0047fce8;\n        acStack33[uVar3 + 1] = unaff_RBX + (unaff_RBX / 10) * -10 + '0';\n        uVar3 = uVar3 + 1;\n        unaff_RBX = unaff_RBX / 10;\n    }\n    *(in_RAX + 800) = 0;\n    while (uVar4 = uVar3 - 1,  -1 < uVar4) {\n        if (0x17 < uVar4) goto code_r0x0047fcdb;\n        if (799 < *(in_RAX + 800)) goto code_r0x0047fcce;\n        *(in_RAX + *(in_RAX + 800)) = acStack33[uVar3];\n        *(in_RAX + 800) = *(in_RAX + 800) + 1;\n        uVar3 = uVar4;\n    }\n    *(in_RAX + 0x328) = *(in_RAX + 800);\n    while (iVar1 = *(in_RAX + 800),  0 < iVar1) {\n        if (799 < iVar1 - 1U) {\n            fcn.0045eee0(800);\ncode_r0x0047fcce:\n            fcn.0045eee0(800);\ncode_r0x0047fcdb:\n            fcn.0045eee0(0x18);\ncode_r0x0047fce8:\n            fcn.0045eee0(0x18);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (*(iVar1 + -1 + in_RAX) != '0') break;\n        *(in_RAX + 800) = iVar1 - 1U;\n    }\n    if (iVar1 == 0) {\n        *(in_RAX + 0x328) = 0;\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00485620": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00485620(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x61 < 0x1a) {\n            in_EAX = in_EAX - 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00485520(*0x5cb130);\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "004856a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004856a0(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x41 < 0x1a) {\n            in_EAX = in_EAX + 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00485520(*0x5cb130);\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0048b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0048b9e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = *(in_RAX + 0x17) & 0x1f;\n            if (uVar2 < 0x13) {\n                if (uVar2 == 0x11) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ef0c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x12) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ef0c0;\n                    }\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar2 == 0x15) {\n                    if (*(in_RAX + 0x38) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ef0c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x16) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ef0c0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x17) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ef0c0;\n                    }\n                    return uVar1;\n                }\n            }\n            *(*0x20 + -0x38) = 0x48bae5;\n            fcn.0048b840();\n            *(*0x20 + -0x38) = 0x48bafe;\n            fcn.0044ac00(0x1e);\n            *(*0x20 + -0x38) = 0x48bb05;\n            fcn.0040a4c0();\n            *(*0x20 + -0x38) = 0x48bb14;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x48bb1f;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 727
    },
    "00491780": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00491780(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x5d23c0 == 0) || (*0x5d23c0 == 0x626617)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x5d23c0;\n                *(*0x20 + -0x10) = *0x5d23c8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x00491800;\n            }\n            if (*(*0x20 + -0x18) == 0x4b1860) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x00491800:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x20);\n                    *(*0x20 + -0x38) = 0x491814;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x4b1860;\n            *(*0x20 + -0x38) = 0x491830;\n            in_RAX = fcn.0040a180(0x4b6d60);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x491845;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 593
    },
    "00491860": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00491860(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x5d23c0 == 0) || (*0x5d23c0 == 0x626617)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x5d23c0;\n                *(*0x20 + -0x10) = *0x5d23c8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004918e0;\n            }\n            if (*(*0x20 + -0x18) == 0x4b1860) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004918e0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x28);\n                    *(*0x20 + -0x38) = 0x4918f4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x4b1860;\n            *(*0x20 + -0x38) = 0x491910;\n            in_RAX = fcn.0040a180(0x4b6d60);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x491925;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 597
    },
    "00491940": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00491940(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x5d23c0 == 0) || (*0x5d23c0 == 0x626617)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x5d23c0;\n                *(*0x20 + -0x10) = *0x5d23c8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004919c0;\n            }\n            if (*(*0x20 + -0x18) == 0x4b1860) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004919c0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x30);\n                    *(*0x20 + -0x38) = 0x4919d4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x4b1860;\n            *(*0x20 + -0x38) = 0x4919f0;\n            in_RAX = fcn.0040a180(0x4b6d60);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x491a05;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 600
    },
    "00497880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t * fcn.00497880(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00491860();\n    piVar1 = fcn.00498160(arg1);\n    if (unaff_RBX != 0) {\n        return NULL;\n    }\n    *(*piVar1 + 0x240) = (arg1 >> 10 & 1) != 0;\n    return piVar1;\n}\n",
        "token_count": 165
    },
    "00497c80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00497c80(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00498d40();\n    fcn.0046b1a0(arg1 | 0x80000);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    uVar1 = fcn.00497ac0(0);\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00499020": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00499020(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00491940();\n    fcn.004990a0(in_RAX);\n    return;\n}\n",
        "token_count": 98
    },
    "0049b940": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049b940(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0049b700(arg1);\n    fcn.0049a800(unaff_RBX);\n    return;\n}\n",
        "token_count": 107
    },
    "0049c160": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0049c160(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            unaff_RBX = 4;\n            *(*0x20 + -0x38) = 0x49c1a7;\n            arg1 = fcn.0047e900(0x44);\n            if (arg1 < 0x45) {\n                *(*0x20 + -0x38) = 0x49c1c5;\n                fcn.0049a800(arg1);\n                return;\n            }\n            *(*0x20 + -0x38) = 0x49c1dc;\n            in_RAX = fcn.0045ef60(arg1, 0x44);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x49c1ec;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 428
    },
    "0049dd60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0049dd60(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (iVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar1 < 0x59) {\n        if (iVar1 < 0x47) {\n            if (iVar1 == 0x45) {\ncode_r0x0049ddc5:\n                fcn.0049c2e0(arg1);\n                return;\n            }\n            if (iVar1 == 0x46) {\n                fcn.0049c2e0(0x66);\n                return;\n            }\n        }\n        else if ((iVar1 == 0x47) || (iVar1 == 0x58)) goto code_r0x0049ddea;\ncode_r0x0049ddfe:\n        fcn.0049d560(arg1, in_RDX, in_R8);\n    }\n    else {\n        if (iVar1 < 0x67) {\n            if (iVar1 != 0x62) {\n                if (100 < iVar1) goto code_r0x0049ddc5;\n                goto code_r0x0049ddfe;\n            }\n        }\n        else if (iVar1 != 0x67) {\n            if (iVar1 == 0x76) {\n                fcn.0049c2e0(0x67);\n                return;\n            }\n            if (iVar1 != 0x78) goto code_r0x0049ddfe;\n        }\ncode_r0x0049ddea:\n        fcn.0049c2e0(arg1);\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "004a89c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar fcn.004a89c0(int64_t arg1)\n\n{\n    uchar uVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (arg1 == in_RAX) {\n        uVar1 = fcn.004036a0(unaff_RDI);\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.004a8980();\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "004aae40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.004aae40(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.004a4260(0x4c874f, arg2, arg3, in_R9);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = fcn.004a4900(0x4c8852);\n    return uVar2 & 0xffffffffffffff00 | uVar2 < iVar1;\n}\n",
        "token_count": 191
    },
    "00401d00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d00(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 210
    },
    "00404960": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404960(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.004041c0(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00433ce0();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00409520": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00409520(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x6268c0 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 941
    },
    "00414e60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414e60(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar4 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar4 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar4 << 0xd;\n                *(*0x20 + -0x50) = 0x414ec5;\n                fcn.00422f00();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x50) = 0x414ee5;\n                iVar2 = fcn.004249e0();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x50) = 0x414eff;\n                    iVar2 = fcn.0042cda0();\n                    LOCK();\n                    *(iVar2 + 0x38) = *(iVar2 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar2 + 0x40;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x50) = 0x414f25;\n                    fcn.0042ce80(iVar2);\n                    *(*0x20 + -0x50) = 0x414f45;\n                    fcn.0041ede0(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x50) = 0x414f8a;\n                        fcn.0042c740(*(*0x20 + -0x21) * 0xc0 + 0x5f8d70, (*0x5f8a10 >> 1 & 1) * 5);\n                        iVar2 = *(*0x20 + -0x20);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x18) + *(*0x20 + 0x10);\n                        uVar4 = *(iVar2 + 0x18) + 0x800000000000;\n                        uVar3 = uVar4 >> 0x2a;\n                        if (uVar3 < 0x40) {\n                            uVar4 = uVar4 >> 0x16;\n                            if (*(*(uVar3 * 8 + 0x5f8a70) + (uVar4 & 0xfffff) * 8) == 0) {\n                                uVar4 = 0;\n                            }\n                            *(*0x20 + -0x50) = 0x415025;\n                            fcn.00412fe0(uVar4 & 0xffffffff);\n                            return *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x50) = 0x41503e;\n                        fcn.0045ef00(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x50) = 0x415048;\n                    fcn.0045eee0(0x88);\n                }\n                *(*0x20 + -0x50) = 0x415059;\n                fcn.00433ce0();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x50) = 0x41506a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x41507e;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1185
    },
    "004150a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004150a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004150a0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar4 = *(in_RAX + 8);\n        *(*0x20 + -0x10) = uVar4;\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x5f8a10;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x41520c;\n                iVar3 = fcn.0042cda0(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x41522f;\n                fcn.0042ce80(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x415245;\n                fcn.0041ede0(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x626c80) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x40) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x38);\n                *(*0x20 + -0x20) = *(iVar3 + 0x60);\n                *(*0x20 + -0x68) = 0x41512d;\n                iVar2 = fcn.0042cda0();\n                uVar7 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar7) goto code_r0x0041524f;\n                *(*0x20 + -0x38) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar7 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x20) - *(*0x20 + -0x18));\n                *(*0x20 + -0x68) = 0x415176;\n                fcn.0042ce80();\n                if (*(*(*0x20 + -0x40) + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(*0x20 + -0x38) * *(*(*0x20 + -0x40) + 0x68);\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x4151c5;\n                fcn.004156e0(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x626c80;\n                uVar6 = *(*0x20 + -0x28);\n                uVar4 = *(*0x20 + -0x10);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041525d;\ncode_r0x0041524f:\n    *(*0x20 + -0x68) = 0x41525c;\n    in_RAX = fcn.0045eee0(0x44);\ncode_r0x0041525d:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x415267;\n    fcn.0045c800();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x004150a0;\n}\n",
        "token_count": 1228
    },
    "004157e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004157e0(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x55e420);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x55f5e0);\n                *(*0x20 + -0x48) = 0x41583b;\n                iVar2 = fcn.004249e0();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x5f8a70) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x4158fc;\n                    fcn.00412fe0(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x415925;\n                fcn.0045ef00(0x40);\n            }\n            *(*0x20 + -0x48) = 0x41592f;\n            in_RAX = fcn.0045eee0(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41593a;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "0041cf00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041cf00(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00412200(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.00421040(0);\n                        }\n                    }\n                    else {\n                        fcn.0041d6e0(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 576
    },
    "0041f120": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041f120(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *in_RAX;\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    fcn.0041eea0(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "0041f340": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041f340(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    if (unaff_RBX == 0) {\n        uVar1 = *0x5f8a58;\n        *0x5f8a58 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (in_RAX < 0) {\n        dVar3 = in_RAX & 1 | in_RAX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = in_RAX;\n    }\n    if (unaff_RBX < 0) {\n        dVar4 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = unaff_RBX;\n    }\n    if (*0x6299c0 < 0) {\n        dVar5 = *0x6299c0 & 1 | *0x6299c0 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x6299c0;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x4ee580 <= dVar5) {\n        uVar2 = dVar5 - *0x4ee580 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    uVar2 = -*0x626798 & (uVar2 + uVar2 / 10 + *0x626798) - 1;\n    if ((uVar2 < *0x6282b0 - *0x6282c0) && (*0x626798 <= (*0x6282b0 - *0x6282c0) - uVar2)) {\n        *0x5f8a58 = uVar2;\n        return 0x5f8a58;\n    }\n    uVar1 = *0x5f8a58;\n    *0x5f8a58 = 0xffffffffffffffff;\n    return uVar1;\n}\n",
        "token_count": 529
    },
    "00442340": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00442340(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x44238f;\n            puVar5 = fcn.0045f060();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x198);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 400)) {\n                    return 0;\n                }\n                *(puVar5 + 400) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x442459;\n                        fcn.0040ab40();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x5d31e0;\n                        iVar4 = *0x5d31e8;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x5d31e8 != 0)) {\n                            *(*0x5d31e8 + 0xa0) = uVar2;\n                            uVar3 = *0x5d31e0;\n                        }\n                        *0x5d31e8 = iVar4;\n                        *0x5d31e0 = uVar3;\n                        *0x5d31f0 = *0x5d31f0 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x4424c6;\n                        fcn.0040ad60();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x4424e5;\n                fcn.0045eee0(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x4424f6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x44250e;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1272
    },
    "00479f60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.00479f60(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.00479ca0(arg1);\n    iVar2 = iVar2 + ((iVar2 + 0x15180U >> 1) / 0x49d40) * -0x93a80;\n    iVar1 = iVar2 + 0x15180;\n    return (iVar2 + SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar1) >> 0x40, 0) + 0x15180 >> 0x10) -\n           (iVar1 >> 0x3f);\n}\n",
        "token_count": 219
    },
    "0047a0a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0047a0a0(ulong noname_0, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    char unaff_BL;\n    int64_t iVar7;\n    \n    uVar2 = (in_RAX / 0x15180) % 0x23ab1;\n    uVar3 = uVar2 >> 1;\n    iVar4 = uVar3 / 0x4756 - uVar3 / 0x11d58;\n    uVar2 = uVar2 + iVar4 * -0x8eac;\n    uVar3 = SUB168(ZEXT816(0x66db072f2284d191) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar3 = (uVar3 + uVar2 >> 1 | CARRY8(uVar3, uVar2) << 0x3f) >> 10;\n    uVar2 = uVar2 + uVar3 * -0x5b5;\n    uVar5 = SUB168(ZEXT816(0x6719f36016719f37) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar5 = uVar5 + uVar2 >> 1 | CARRY8(uVar5, uVar2) << 0x3f;\n    iVar6 = (uVar5 >> 8) - (uVar5 >> 10);\n    iVar7 = ((in_RAX / 0x15180) / 0x23ab1) * 400 + iVar4 * 100 + uVar3 * 4 + iVar6;\n    iVar4 = uVar2 + iVar6 * -0x16d;\n    uVar2 = iVar7 - 0x440d116ebf;\n    if (unaff_BL == '\\0') {\n        return uVar2;\n    }\n    if ((uVar2 & 3) == 0) {\n        iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + iVar7 + -0x440d116ebf;\n        if ((((iVar6 >> 6) - (uVar2 >> 0x3f)) * 100 - uVar2 != 0) ||\n           (((iVar6 >> 8) - (uVar2 >> 0x3f)) * 400 - uVar2 == 0)) {\n            if (iVar4 < 0x3c) {\n                if (iVar4 == 0x3b) {\n                    return uVar2;\n                }\n            }\n            else {\n                iVar4 = iVar4 + -1;\n            }\n        }\n    }\n    uVar3 = (iVar4 + SUB168(SEXT816(-0x7bdef7bdef7bdef7) * SEXT816(iVar4) >> 0x40, 0) >> 4) - (iVar4 >> 0x3f);\n    if (uVar3 + 1 < 0xd) {\n        if ((*(uVar3 * 4 + 0x55de04) <= iVar4) || (uVar3 < 0xd)) {\n            return uVar2;\n        }\n        fcn.0045eee0(0xd);\n    }\n    fcn.0045eee0(0xd);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 820
    },
    "0047ad00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0047ad00(char *arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    char *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    char *unaff_RDI;\n    char *in_R8;\n    int64_t in_R9;\n    char cVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd0 && *0x20 + -0xd0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x150;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xc0) = arg1;\n            *(*0x20 + -0x158) = 0x47ad46;\n            uVar1 = fcn.0047b360();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar1;\n            *(*0x20 + -0x158) = 0x47ad67;\n            iVar2 = fcn.0047b5a0();\n            if (unaff_RDI == '\\0') {\n                return 0;\n            }\n            if ((arg1 == NULL) || (*unaff_RDI == ',')) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x100) = -iVar2;\n            *(*0x20 + -0x158) = 0x47adc8;\n            pcVar6 = arg1;\n            uVar1 = fcn.0047b360();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -200) = arg1;\n            if ((unaff_RDI == NULL) || (*pcVar6 == ',')) {\n                iVar2 = *(*0x20 + -0x100) + 0xe10;\n                pcVar7 = pcVar6;\n                unaff_RBX = arg1;\n            }\n            else {\n                *(*0x20 + -0x158) = 0x47ae05;\n                iVar2 = fcn.0047b5a0();\n                iVar2 = -iVar2;\n                unaff_RSI = unaff_RDI & 0xffffffff;\n                unaff_RBX = *(*0x20 + -200);\n                pcVar7 = unaff_RDI;\n                unaff_RDI = pcVar6;\n            }\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            if (unaff_RDI == NULL) {\n                unaff_RDI = 0xf;\n                pcVar7 = 0x4ca635;\n            }\n            if (unaff_RDI != NULL) {\n                *(*0x20 + -0xd0) = iVar2;\n                if ((*pcVar7 != ',') && (*pcVar7 != ';')) {\n                    return 0;\n                }\n                *(*0x20 + -0xb8) = in_XMM15;\n                *(*0x20 + -0xb0) = in_XMM15;\n                *(*0x20 + -0xa0) = in_XMM15;\n                *(*0x20 + -0x90) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x158) = 0x47aedb;\n                uVar1 = fcn.0047bb20();\n                *(*0x20 + -0x40) = uVar1;\n                *(*0x20 + -0x38) = unaff_RDI + -1;\n                *(*0x20 + -0x30) = pcVar7;\n                *(*0x20 + -0x28) = unaff_RDI;\n                *(*0x20 + -0x20) = unaff_RSI;\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xac) = *(*0x20 + -0x34);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xa4) = *(*0x20 + -0x2c);\n                *(*0x20 + -0xa0) = *(*0x20 + -0x28);\n                *(*0x20 + -0x9c) = *(*0x20 + -0x24);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x94) = *(*0x20 + -0x1c);\n                cVar10 = iVar2;\n                if (((cVar10 == '\\0') || (in_R9 == 0)) || (*in_R8 != ',')) {\n                    return 0;\n                }\n                iVar2 = in_R9 + -1;\n                *(*0x20 + -0x158) = 0x47af70;\n                iVar8 = iVar2;\n                uVar1 = fcn.0047bb20();\n                *(*0x20 + -0x68) = uVar1;\n                *(*0x20 + -0x60) = iVar2;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x50) = unaff_RDI;\n                *(*0x20 + -0x48) = unaff_RSI;\n                *(*0x20 + -0x90) = *(*0x20 + -0x68);\n                *(*0x20 + -0x88) = *(*0x20 + -0x60);\n                *(*0x20 + -0x84) = *(*0x20 + -0x5c);\n                *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                *(*0x20 + -0x7c) = *(*0x20 + -0x54);\n                *(*0x20 + -0x78) = *(*0x20 + -0x50);\n                *(*0x20 + -0x74) = *(*0x20 + -0x4c);\n                *(*0x20 + -0x70) = *(*0x20 + -0x48);\n                *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n                if ((cVar10 == '\\0') || (in_R9 != 0)) {\n                    return 0;\n                }\n                *(*0x20 + -0x158) = 0x47aff7;\n                uVar1 = fcn.0047a0a0(*(*0x20 + 0x20), 0x7ffffffe1ad9c900);\n                *(*0x20 + -0x110) = uVar1;\n                *(*0x20 + -0x108) = unaff_RDI;\n                uVar1 = *(*0x20 + -0xa8);\n                *(*0x20 + -0x158) = 0x47b037;\n                uVar3 = fcn.0047c5c0(*(*0x20 + -0xb0), uVar1, *(*0x20 + -0x98), *(*0x20 + -0x100));\n                *(*0x20 + -0xd8) = uVar3;\n                *(*0x20 + -0x158) = 0x47b076;\n                iVar4 = fcn.0047c5c0(*(*0x20 + -0x88), uVar1, *(*0x20 + -0x70), *(*0x20 + -0xd0));\n                iVar2 = *(*0x20 + -0xd8);\n                iVar5 = iVar4;\n                iVar8 = iVar2;\n                if (iVar4 < iVar2) {\n                    iVar5 = iVar2;\n                    iVar8 = iVar4;\n                }\n                uVar3 = *(*0x20 + -200);\n                uVar1 = *(*0x20 + -0x18);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0xf8);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0xe8) = uVar3;\n                uVar3 = *(*0x20 + -0xd0);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x100);\n                }\n                *(*0x20 + -0xf0) = uVar3;\n                uVar3 = *(*0x20 + -0x10);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x18);\n                }\n                iVar2 = *(*0x20 + 0x20);\n                *(*0x20 + -0x118) =\n                     *(*0x20 + -0x108) * 0x15180 +\n                     iVar2 + ((SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 0x10) -\n                             (iVar2 >> 0x3f)) * -0x15180;\n                *(*0x20 + -0xe0) = ((*(*0x20 + -0x110) + 0x440d116ebfU >> 1) / 200) * 0x23ab1;\n                if (iVar8 <= *(*0x20 + -0x118)) {\n                    if (iVar5 <= *(*0x20 + -0x118)) {\n                        return uVar1;\n                    }\n                    return uVar3;\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x158) = 0x47b329;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x47b345;\n        fcn.0045c800();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2582
    },
    "00482040": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.00482040(uint64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uchar uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t unaff_RBX;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar11;\n    int64_t in_R10;\n    int64_t *in_R11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    uint8_t uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_SIL;\n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (arg4 == 0) {\n        in_R10 = 0;\n    }\n    for (uVar11 = arg4 << (-(*in_R11 + -0x3c) & 0x3f) & -(-(*in_R11 + -0x3c) < 0x40);\n        (uVar11 != 0 && ((uVar11 >> 0x3c & 1) == 0)); uVar11 = uVar11 << 1) {\n        in_R10 = in_R10 + -1;\n    }\n    if (unaff_RDI < 0xf) {\n        uVar7 = unaff_RDI * 4;\n        uVar9 = -(-(uVar7 - 0x3c) < 0x40);\n        uVar5 = -(uVar7 - 0x3c);\n        uVar12 = uVar11 >> (uVar5 & 0x3f) & uVar9;\n        if (0x800000000000000 < (uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) & 0xfffffffffffffff | uVar12 & 1)) {\n            uVar12 = uVar12 + 1;\n        }\n        uVar11 = uVar12 << (uVar5 & 0x3f) & uVar9;\n        if ((uVar11 >> 0x3d & 1) != 0) {\n            uVar11 = uVar11 >> 1;\n            in_R10 = in_R10 + 1;\n        }\n    }\n    if (uStack0000000000000028 == 0x58) {\n        iVar8 = 0x4ca955;\n    }\n    else {\n        iVar8 = 0x4ca965;\n    }\n    if (noname_2 != '\\0') {\n        uVar12 = unaff_RBX + 1;\n        iVar3 = in_RAX;\n        if (arg1 < uVar12) {\n            arg1 = unaff_RBX;\n            iVar3 = fcn.00447240(unaff_RBX);\n            uVar12 = in_RAX + 1;\n        }\n        *(iVar3 + unaff_RBX) = 0x2d;\n        in_RAX = iVar3;\n        unaff_RBX = uVar12;\n    }\n    uVar12 = unaff_RBX + 3;\n    iVar3 = in_RAX;\n    if (arg1 < uVar12) {\n        arg1 = unaff_RBX;\n        iVar3 = fcn.00447240(unaff_RBX);\n        uVar12 = in_RAX + 3;\n    }\n    *(iVar3 + unaff_RBX) = 0x30;\n    *(iVar3 + 1 + unaff_RBX) = uStack0000000000000028;\n    *(iVar3 + 2 + unaff_RBX) = (uVar11 >> 0x3c & 1) + 0x30;\n    uVar11 = uVar11 << 4;\n    if ((unaff_RDI < 0) && (uVar11 != 0)) {\n        uVar9 = uVar12 + 1;\n        iVar4 = iVar3;\n        if (arg1 < uVar9) {\n            arg1 = uVar12;\n            iVar4 = fcn.00447240(uVar12);\n            uVar9 = iVar3 + 1;\n        }\n        *(iVar4 + uVar12) = 0x2e;\n        iVar3 = iVar4;\n        uVar12 = uVar9;\n        uVar5 = uStack0000000000000028;\n        for (; uVar11 != 0; uVar11 = uVar11 << 4) {\n            uVar9 = uVar12 + 1;\n            uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00447240(uVar12);\n                uVar9 = iVar3 + 1;\n                uVar5 = uStack0000000000000028;\n            }\n            *(iVar4 + uVar12) = uVar6;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n        }\n    }\n    else {\n        uVar5 = uStack0000000000000028;\n        if (0 < unaff_RDI) {\n            uVar9 = uVar12 + 1;\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00447240(uVar12);\n                uVar9 = iVar3 + 1;\n            }\n            *(iVar4 + uVar12) = 0x2e;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n            uVar5 = uStack0000000000000028;\n            for (iVar10 = 0; iVar10 < unaff_RDI; iVar10 = iVar10 + 1) {\n                uVar9 = uVar12 + 1;\n                uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n                iVar4 = iVar3;\n                if (arg1 < uVar9) {\n                    arg1 = uVar12;\n                    iVar4 = fcn.00447240(uVar12);\n                    uVar9 = iVar3 + 1;\n                    uVar5 = uStack0000000000000028;\n                }\n                *(iVar4 + uVar12) = uVar6;\n                uVar11 = uVar11 << 4;\n                iVar3 = iVar4;\n                uVar12 = uVar9;\n            }\n        }\n    }\n    if (uVar5 == (uVar5 | 0x20)) {\n        uVar6 = 0x70;\n    }\n    else {\n        uVar6 = 0x50;\n    }\n    uVar11 = uVar12 + 1;\n    iVar8 = iVar3;\n    if (arg1 < uVar11) {\n        arg1 = uVar12;\n        iVar8 = fcn.00447240(uVar12);\n        uVar11 = iVar3 + 1;\n    }\n    *(iVar8 + uVar12) = uVar6;\n    if (in_R10 < 0) {\n        in_R10 = -in_R10;\n        uVar6 = 0x2d;\n    }\n    else {\n        uVar6 = 0x2b;\n    }\n    uVar12 = uVar11 + 1;\n    iVar3 = iVar8;\n    if (arg1 < uVar12) {\n        arg1 = uVar11;\n        iVar3 = fcn.00447240(uVar11);\n        uVar12 = iVar8 + 1;\n    }\n    *(iVar3 + uVar11) = uVar6;\n    cVar1 = in_R10;\n    cVar2 = in_R10 >> 0x3f;\n    if (in_R10 < 100) {\n        cVar2 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 3) - cVar2;\n        if (arg1 < uVar12 + 2) {\n            iVar3 = fcn.00447240(uVar12);\n        }\n        *(iVar3 + uVar12) = cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = cVar1 + cVar2 * -10 + '0';\n    }\n    else if (in_R10 < 1000) {\n        iVar8 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar4 = iVar8 >> 3;\n        if (arg1 < uVar12 + 3) {\n            iVar3 = fcn.00447240(uVar12);\n        }\n        *(iVar3 + uVar12) = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6) + '0';\n        *(iVar3 + 1 + uVar12) =\n             iVar4 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar4) >> 0x40, 0) + iVar4 >> 3) - (iVar8 >> 0x3f))\n                     * -10 + '0';\n        *(iVar3 + 2 + uVar12) = cVar1 + iVar4 * -10 + '0';\n    }\n    else {\n        iVar8 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6;\n        iVar4 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar10 = iVar4 >> 3;\n        if (arg1 < uVar12 + 4) {\n            iVar3 = fcn.00447240(uVar12);\n        }\n        *(iVar3 + uVar12) = in_R10 / 1000 + cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = iVar8 + ((iVar8 & 0xff) / 10) * -10 + '0';\n        *(iVar3 + 2 + uVar12) =\n             iVar10 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar10) >> 0x40, 0) + iVar10 >> 3) -\n                      (iVar4 >> 0x3f)) * -10 + '0';\n        *(iVar3 + 3 + uVar12) = cVar1 + iVar10 * -10 + '0';\n    }\n    return iVar3;\n}\n",
        "token_count": 2515
    },
    "00482d40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00482d40(ulong arg1, ulong noname_1, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t unaff_EDI;\n    int64_t iVar5;\n    \n    if (0x13 < unaff_RSI) goto code_r0x00483009;\n    uVar3 = *(unaff_RSI * 8 + 0x55fae0);\n    iVar5 = 0;\n    while (uVar3 <= unaff_RBX) {\n        uVar4 = unaff_RBX % 10;\n        if (uVar4 < 6) {\n            if (uVar4 < 5) {\n                unaff_EDI = 0;\n            }\n            else if (arg1 == 0) {\n                unaff_EDI = unaff_RBX / 10 & 1;\n            }\n            else {\n                unaff_EDI = 1;\n            }\n        }\n        else {\n            unaff_EDI = 1;\n        }\n        iVar5 = iVar5 + 1;\n        arg1._0_1_ = arg1 | uVar4 != 0;\n        unaff_RBX = unaff_RBX / 10;\n        arg4 = uVar3;\n    }\n    if (unaff_EDI != '\\0') {\n        unaff_RBX = unaff_RBX + 1;\n    }\n    if (uVar3 <= unaff_RBX) {\n        unaff_RBX = unaff_RBX / 10;\n        iVar5 = iVar5 + 1;\n    }\n    in_RAX[3] = unaff_RSI;\n    while (99 < unaff_RBX) {\n        if (unaff_RBX >> 0x20 == 0) {\n            uVar3 = ((unaff_RBX & 0xffffffff) >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        else {\n            uVar3 = (unaff_RBX >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        if (199 < uVar4 * 2 + 1) goto code_r0x00482fff;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 1) goto code_r0x00482ff7;\n        *((unaff_RSI - 1) + *in_RAX) = *(uVar4 * 2 + 0x4d2430);\n        if (199 < uVar4 << 1) goto code_r0x00482fed;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 2) goto code_r0x00482fe5;\n        *((unaff_RSI - 2) + *in_RAX) = *(uVar4 * 2 + 0x4d242f);\n        unaff_RBX = uVar3;\n        unaff_RSI = unaff_RSI - 2;\n    }\n    if (unaff_RBX == 0) {\ncode_r0x00482f40:\n        if (unaff_RBX < 10) {\ncode_r0x00482f80:\n            while( true ) {\n                unaff_RBX = *in_RAX;\n                uVar3 = in_RAX[3];\n                if (in_RAX[1] <= uVar3 - 1) break;\n                if (*((uVar3 - 1) + unaff_RBX) != '0') {\n                    in_RAX[4] = iVar5 + uVar3;\n                    return;\n                }\n                in_RAX[3] = uVar3 - 1;\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0045eee0(in_RAX[1]);\ncode_r0x00482fb8:\n            fcn.0045ef00(uVar3);\n        }\n        else if (unaff_RBX << 1 < 200) {\n            uVar3 = in_RAX[1];\n            arg4 = 0x4d242f;\n            uVar1 = *(unaff_RBX * 2 + 0x4d242f);\n            unaff_RBX = uVar1;\n            if (unaff_RSI - 1 < uVar3) {\n                *((unaff_RSI - 1) + *in_RAX) = uVar1;\n                goto code_r0x00482f80;\n            }\n            goto code_r0x00482fb8;\n        }\n        fcn.0045ef00(200);\n        uVar3 = unaff_RBX;\ncode_r0x00482fd2:\n        fcn.0045ef00(uVar3);\n    }\n    else if (unaff_RBX * 2 + 1 < 200) {\n        uVar1 = *(unaff_RBX * 2 + 0x4d2430);\n        arg4 = uVar1;\n        uVar3 = in_RAX[1];\n        if (unaff_RSI - 1 < in_RAX[1]) {\n            *((unaff_RSI - 1) + *in_RAX) = uVar1;\n            unaff_RSI = unaff_RSI - 1;\n            goto code_r0x00482f40;\n        }\n        goto code_r0x00482fd2;\n    }\n    fcn.0045ef00(200);\ncode_r0x00482fe5:\n    fcn.0045ef00(arg4);\ncode_r0x00482fed:\n    fcn.0045ef00(200);\ncode_r0x00482ff7:\n    fcn.0045ef00(arg4);\ncode_r0x00482fff:\n    fcn.0045ef00(200);\ncode_r0x00483009:\n    fcn.0045eee0(0x14);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1370
    },
    "00483840": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00483840(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    char unaff_SIL;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    \n    if (unaff_RDI == 0) {\n        in_RAX[4] = arg4 + 1;\n        return;\n    }\n    iVar3 = 0;\n    uVar8 = 0;\n    while( true ) {\n        if (unaff_RDI == 0) break;\n        uVar4 = unaff_RBX + 9;\n        unaff_RBX = uVar4 / 10;\n        uVar7 = arg1 & 0xffffffff;\n        uVar2 = arg1 + (uVar7 / 10) * -10;\n        uVar6 = unaff_RDI & 0xffffffff;\n        uVar4 = uVar4 / 10;\n        uVar9 = uVar6 / 10;\n        if (uVar9 < uVar4) break;\n        uVar5 = uVar7 / 10 + 1;\n        arg1 = uVar7 / 10;\n        if ((uVar4 == uVar5) && (uVar4 = uVar7 / 10,  uVar4 <= uVar9 && uVar6 / 10 != uVar4)) {\n            uVar2 = 0;\n            arg1 = uVar5;\n            arg3 = 0;\n        }\n        unaff_SIL = unaff_SIL != '\\0' && uVar8 == 0;\n        iVar3 = iVar3 + 1;\n        unaff_RDI = uVar6 / 10;\n        uVar8 = uVar2;\n    }\n    arg1 = arg1 & 0xffffffff;\n    if (iVar3 < 1) {\n        uVar10 = arg3;\n        goto code_r0x00483920;\n    }\n    if (uVar8 < 6) {\n        if (uVar8 == 5) {\n            if (unaff_SIL == '\\0') goto code_r0x00483908;\n            if (unaff_SIL != '\\0') {\n                uVar10 = arg1 & 1;\n                goto code_r0x00483920;\n            }\n        }\n        uVar10 = 0;\n    }\n    else {\ncode_r0x00483908:\n        uVar10 = 1;\n    }\ncode_r0x00483920:\n    if ((arg1 < unaff_RDI) && (uVar10 != 0)) {\n        arg1 = arg1 + 1;\n    }\n    for (uVar7 = arg4 - iVar3; in_RAX[3] < uVar7; uVar7 = uVar7 - 2) {\n        iVar11 = arg1;\n        arg1 = (arg1 >> 1) / 0x32;\n        iVar11 = iVar11 + arg1 * -100;\n        uVar6 = iVar11 * 2 + 1;\n        if (199 < uVar6) goto code_r0x00483a28;\n        arg3 = in_RAX[1];\n        if (arg3 <= uVar7) goto code_r0x00483a1d;\n        *(*in_RAX + uVar7) = *(uVar6 + 0x4d242f);\n        uVar6 = iVar11 * 2;\n        if (199 < uVar6) goto code_r0x00483a10;\n        unaff_RDI = in_RAX[1];\n        arg3 = *in_RAX;\n        if (unaff_RDI <= uVar7 - 1) goto code_r0x00483a05;\n        *((uVar7 - 1) + arg3) = *(uVar6 + 0x4d242f);\n    }\n    if (uVar7 == in_RAX[3]) {\n        if (in_RAX[1] <= uVar7) {\n            fcn.0045eee0(in_RAX[1]);\ncode_r0x00483a05:\n            fcn.0045eee0(unaff_RDI);\ncode_r0x00483a10:\n            fcn.0045eee0(200);\ncode_r0x00483a1d:\n            fcn.0045eee0(arg3);\ncode_r0x00483a28:\n            fcn.0045eee0(200);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(*in_RAX + uVar7) = arg1 + '0';\n    }\n    in_RAX[3] = (arg4 - iVar3) + 1;\n    in_RAX[4] = arg4 + 1;\n    return;\n}\n",
        "token_count": 1140
    },
    "00483d40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00483d40(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar *in_RAX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uint64_t uVar7;\n    char cVar8;\n    uint64_t in_R8;\n    uchar uVar9;\n    uint64_t in_R9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar9 = in_R9;\n        cVar8 = in_R8;\n        puVar3 = *0x20 + -0x18;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar3 && puVar3 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar8 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar4 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar5 = unaff_RDI / unaff_RSI;\n                            uVar7 = unaff_RDI - puVar5 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar7) goto code_r0x00483fb0;\n                            uVar1 = *(uVar7 + 0x4cfaa9);\n                            puVar3 = uVar1;\n                            if (0x40 < puVar4 + -1) goto code_r0x00483fa6;\n                            (*0x20 + -0x52)[puVar4] = uVar1;\n                            puVar4 = puVar4 + -1;\n                            unaff_RDI = puVar5;\n                        }\n                        puVar11 = puVar4 + -1;\n                        puVar12 = unaff_RDI[0x4cfaa9];\n                        puVar5 = puVar4;\n                        if (0x40 < puVar11) goto code_r0x00483f99;\n                        (*0x20 + -0x52)[puVar4] = unaff_RDI[0x4cfaa9];\n                        bVar13 = cVar8 == '\\0';\n                        goto code_r0x00483e52;\n                    }\n                    iVar2 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    puVar5 = iVar2 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x00483fd4;\n                }\n                puVar4 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x00484060:\n                uVar9 = in_R9;\n                cVar8 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar3 = puVar4 + -1;\n                        puVar12 = 0x4d242f;\n                        if (puVar3 < 0x41) {\n                            (*0x20 + -0x52)[puVar4] = *(puVar11 * 2 + 0x4d2430);\n                            if (puVar11 < 0xa) {\ncode_r0x0048418b:\n                                bVar13 = cVar8 == '\\0';\n                                puVar11 = puVar3;\ncode_r0x00483e52:\n                                do {\n                                    puVar5 = puVar11;\n                                    if (bVar13) {\ncode_r0x00483e75:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar5 < 0x42) {\n                                                *(*0x20 + -0xa0) = 0x483f55;\n                                                fcn.0044afa0(-(puVar5 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0xa0) = 0x483f7f;\n                                            fcn.0045efa0(0x41);\n                                        }\n                                        else if (puVar5 < 0x42) {\n                                            uVar7 = (unaff_RBX - puVar5) + 0x41;\n                                            *(*0x20 + -0x60) = uVar7;\n                                            puVar3 = puVar5 + -0x41;\n                                            if (arg1 < uVar7) {\n                                                *(*0x20 + -0x68) = puVar3;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar5 & puVar3 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0x70) = unaff_RBX;\n                                                *(*0x20 + -0xa0) = 0x483ed8;\n                                                in_RAX = fcn.00447240(unaff_RBX);\n                                                puVar3 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0xa0) = 0x483f09;\n                                            fcn.0045f840(-puVar3);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0xa0) = 0x483f8c;\n                                        fcn.0045efa0(0x41);\n                                    }\n                                    else {\n                                        puVar5 = puVar11 + -1;\n                                        if (puVar5 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x00483e75;\n                                        }\n                                    }\n                                    *(*0x20 + -0xa0) = 0x483f99;\n                                    fcn.0045eee0(0x41);\ncode_r0x00483f99:\n                                    puVar4 = puVar12;\n                                    *(*0x20 + -0xa0) = 0x483fa6;\n                                    fcn.0045eee0(0x41);\n                                    in_RAX = puVar11;\ncode_r0x00483fa6:\n                                    *(*0x20 + -0xa0) = 0x483fb0;\n                                    fcn.0045eee0(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x00483fb0:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0xa0) = 0x483fbd;\n                                    in_RAX = fcn.0045ef00(0x24);\n                                    unaff_RDI = puVar3;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar4] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar5 & 0x3f);\n                                        puVar3 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x00483fd4:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar4 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x0048403f;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x4cfaa9);\n                                        if (0x40 < unaff_R13) goto code_r0x00484032;\n                                    }\n                                    puVar5 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x4cfaa9];\n                                    if (0x40 < puVar5) goto code_r0x00484025;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x4cfaa9];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar5;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar3 = puVar4 + -2;\n                                if (puVar3 < 0x41) {\n                                    (*0x20 + -0x53)[puVar4] = *(puVar11 * 2 + 0x4d242f);\n                                    goto code_r0x0048418b;\n                                }\n                                *(*0x20 + -0xa0) = 0x4841a5;\n                                fcn.0045eee0(0x41);\n                            }\n                            *(*0x20 + -0xa0) = 0x4841b2;\n                            fcn.0045ef00(200);\n                        }\n                        *(*0x20 + -0xa0) = 0x4841bf;\n                        fcn.0045eee0(0x41);\n                    }\n                    *(*0x20 + -0xa0) = 0x4841cc;\n                    fcn.0045ef00(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar5 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar5 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x004841ef;\n                    uVar1 = *(puVar11 * 2 + 0x4d2430);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar4 + -1) goto code_r0x004841e5;\n                    (*0x20 + -0x52)[puVar4] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x004841d6;\n                    puVar3 = puVar4 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x4d242f);\n                    if (puVar3 < 0x41) goto code_r0x0048404c;\n                }\n                *(*0x20 + -0xa0) = 0x4841d6;\n                fcn.0045eee0(0x41);\ncode_r0x004841d6:\n                *(*0x20 + -0xa0) = 0x4841e5;\n                fcn.0045ef00(200);\ncode_r0x004841e5:\n                *(*0x20 + -0xa0) = 0x4841ef;\n                fcn.0045eee0(0x41);\ncode_r0x004841ef:\n                arg1 = 200;\n                *(*0x20 + -0xa0) = 0x4841f9;\n                fcn.0045ef00(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4eea30;\n            *(*0x20 + -0xa0) = 0x48420c;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar8;\n        puVar6[0x31] = uVar9;\n        *(puVar6 + -8) = 0x484235;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x00484025:\n    *(*0x20 + -0xa0) = 0x484032;\n    fcn.0045eee0(0x41);\ncode_r0x00484032:\n    *(*0x20 + -0xa0) = 0x48403f;\n    fcn.0045eee0(0x41);\n    puVar4 = puVar12;\ncode_r0x0048403f:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0xa0) = 0x48404c;\n    puVar3 = fcn.0045ef00(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x0048404c:\n    (*0x20 + -0x53)[puVar4] = uVar10;\n    puVar4 = puVar3;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar5;\n    goto code_r0x00484060;\n}\n",
        "token_count": 3302
    },
    "0048bdc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0048bdc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    ulong uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x38) = *0x20 + -8;\n            *(*0x20 + -0x30) = 0x48bdf6;\n            iVar2 = fcn.0045f1ab();\n            unaff_RBP = *(*0x20 + -0x38);\n            if ((-1 < unaff_RBX) &&\n               (iVar4 = *(iVar2 + 0x38),  *(iVar2 + 0x40) != unaff_RBX && unaff_RBX <= *(iVar2 + 0x40))) {\n                *(*0x20 + 0x70) = iVar2;\n                *(*0x20 + 0x78) = unaff_RBX;\n                iVar2 = *(iVar4 + 8 + unaff_RBX * 0x18);\n                if (iVar2 == 0) {\n                    uVar7 = 0;\n                    iVar2 = 0;\n                }\n                else {\n                    uVar7 = 0x4ef0c0;\n                }\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x18) = unaff_RBX * 3;\n                *(*0x20 + 0x28) = uVar7;\n                *(*0x20 + 0x30) = iVar2;\n                *(*0x20 + -0x30) = 0x48be5f;\n                uVar7 = fcn.0048b100(iVar4, unaff_RBX * 3, param_3, param_4);\n                *(*0x20 + 8) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar2 = *(*0x20 + -0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(*0x20 + 0x68) = (*(iVar4 + 0x10 + iVar2 * 8) & 1) != 0;\n                uVar1 = **(iVar4 + iVar2 * 8);\n                uVar5 = uVar1;\n                if ((uVar1 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0x48bea5;\n                    uVar7 = fcn.0048b100(*(*0x20 + 0x70), iVar4, param_3, param_4);\n                    *(*0x20 + 0x18) = uVar7;\n                    *(*0x20 + 0x20) = uVar5;\n                    iVar2 = *(*0x20 + -0x18);\n                    iVar4 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x30) = 0x48bec5;\n                uVar7 = fcn.0048b1a0(iVar2, iVar4, param_3, param_4);\n                if (uVar5 != 0) {\n                    *(*0x20 + 0x38) = uVar7;\n                    *(*0x20 + 0x40) = uVar5;\n                }\n                *(*0x20 + 0x48) = *(*(*0x20 + -0x10) + 0x10 + *(*0x20 + -0x18) * 8) >> 1;\n                *(*0x20 + -0x30) = 0x48bef7;\n                puVar3 = fcn.0040cc20();\n                *puVar3 = *(*0x20 + 0x78);\n                *(*0x20 + 0x50) = puVar3;\n                *(*0x20 + 0x58) = 1;\n                *(*0x20 + 0x60) = 1;\n                return;\n            }\n            unaff_RBX = 0x4ee770;\n            *(*0x20 + -0x30) = 0x48bf3c;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar6 + 0x70) = in_RAX;\n        *(puVar6 + 0x78) = unaff_RBX;\n        *(puVar6 + -8) = 0x48bf4c;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 0x70);\n        unaff_RBX = *(puVar6 + 0x78);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1204
    },
    "0048e360": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0048e360(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = arg1 & 0x1f;\n            if (uVar1 == 0x19) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x48e412;\n                fcn.00433560(0x19, arg1);\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = 0x48e425;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4cb94d;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x48e44f;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48e469;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 604
    },
    "00412400": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.00412400(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x5f8a70);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045ef00(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 359
    },
    "00412fe0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00412fe0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x41306e;\n                    uVar1 = fcn.004124e0(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4130af;\n                        fcn.0045f580();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4130e5;\n            fcn.00433ce0();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x4130f6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x413113;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 930
    },
    "00456660": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00456660(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00435480();\n        fcn.004356e0();\n        fcn.00435500();\n        fcn.00456420();\n        fcn.00455780(0);\n    }\n    fcn.00437200();\n    return;\n}\n",
        "token_count": 181
    },
    "00452a40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452a40(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.00451660(0);\n    }\n    fcn.00451660(0);\n    return;\n}\n",
        "token_count": 133
    },
    "00457940": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00457940(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00432200();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 291
    },
    "00457a00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00457a00(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x00457aef;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00432200();\ncode_r0x00457aef:\n    fcn.00432200();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 394
    },
    "00457b00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00457b00(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00457c34;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00457ba2;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00457ba2:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x457bcc;\n                    fcn.004571e0();\n                    *(*0x20 + -0x28) = 0x457bd1;\n                    uVar2 = fcn.00457940(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x457c34;\n            fcn.00432200();\ncode_r0x00457c34:\n            *(*0x20 + -0x28) = 0x457c39;\n            in_RAX = fcn.00432200();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x457c45;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 964
    },
    "004646e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004646e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00432200();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 187
    },
    "0048b100": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.0048b100(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00432200();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 187
    },
    "0048b1a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.0048b1a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0048b28f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00432200();\ncode_r0x0048b28f:\n    fcn.00432200();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 398
    },
    "0048b2a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar * fcn.0048b2a0(ulong arg1, uint64_t arg2)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uchar *puVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    bool bVar11;\n    \n    do {\n        iVar2 = in_RAX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX < 0x20000000) {\n                if (unaff_RDI < 0x20000000) {\n                    *(*0x20 + -0x22) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x2c) = 0;\n                    *(*0x20 + -0x2a) = 0;\n                    uVar7 = 0;\n                    uVar8 = unaff_RBX;\n                    while( true ) {\n                        uVar4 = uVar8 & 0x7f;\n                        uVar8 = uVar8 >> 7;\n                        if (uVar8 == 0) break;\n                        if (9 < uVar7) goto code_r0x0048b646;\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4 | 0x80;\n                        uVar7 = uVar7 + 1;\n                    }\n                    if (uVar7 < 10) {\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4;\n                        uVar8 = 0;\n                        iVar2 = unaff_RDI;\n                        while( true ) {\n                            uVar4 = iVar2 & 0x7f;\n                            iVar2 = iVar2 >> 7;\n                            if (iVar2 == 0) break;\n                            if (9 < uVar8) goto code_r0x0048b62c;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4 | 0x80;\n                            uVar8 = uVar8 + 1;\n                        }\n                        if (uVar8 < 10) {\n                            *(*0x20 + -0x38) = unaff_RBX;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + 0x18) = arg1;\n                            *(*0x20 + -0x60) = uVar8;\n                            *(*0x20 + -0x58) = uVar7;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4;\n                            iVar2 = uVar7 + unaff_RBX + 2;\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x48) = unaff_RBX + uVar7;\n                            if (unaff_RDI != 0) {\n                                iVar2 = unaff_RDI + uVar8 + unaff_RBX + uVar7 + 3;\n                                unaff_SIL = unaff_SIL | 2;\n                            }\n                            *(*0x20 + -0x50) = iVar2;\n                            *(*0x20 + -0x71) = unaff_SIL;\n                            *(*0x20 + -0xb8) = 0x48b42c;\n                            puVar1 = fcn.00447160(iVar2);\n                            uVar8 = *(*0x20 + -0x50);\n                            if (uVar8 != 0) {\n                                *(*0x20 + -0x10) = puVar1;\n                                *puVar1 = *(*0x20 + -0x71);\n                                iVar2 = uVar8 - 1;\n                                iVar3 = *(*0x20 + -0x58);\n                                arg1_01 = iVar2;\n                                if (iVar3 + 1 < iVar2) {\n                                    arg1_01 = iVar3 + 1;\n                                }\n                                if (*0x20 + -0x22 != puVar1 + (-iVar2 >> 0x3f & 1)) {\n                                    *(*0x20 + -0xb8) = 0x48b487;\n                                    fcn.0045f840(arg1_01);\n                                    puVar1 = *(*0x20 + -0x10);\n                                    uVar8 = *(*0x20 + -0x50);\n                                    iVar3 = *(*0x20 + -0x58);\n                                }\n                                unaff_RBX = iVar3 + 2;\n                                if (unaff_RBX <= uVar8) {\n                                    iVar3 = (uVar8 - iVar3) + -2;\n                                    iVar2 = iVar3;\n                                    if (*(*0x20 + -0x38) < iVar3) {\n                                        iVar2 = *(*0x20 + -0x38);\n                                    }\n                                    if (*(*0x20 + 8) == puVar1 + (unaff_RBX & -iVar3 >> 0x3f)) {\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x48b4ee;\n                                        fcn.0045f840(iVar2);\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                        puVar1 = *(*0x20 + -0x10);\n                                        uVar8 = *(*0x20 + -0x50);\n                                    }\n                                    if (unaff_RBX == 0) {\n                                        return puVar1;\n                                    }\n                                    if (*(*0x20 + -0x68) <= uVar8) {\n                                        uVar8 = uVar8 - *(*0x20 + -0x48);\n                                        uVar7 = uVar8 - 2;\n                                        iVar2 = *(*0x20 + -0x60);\n                                        uVar9 = iVar2 + 1;\n                                        arg1_00 = uVar7;\n                                        if (uVar9 < uVar7) {\n                                            arg1_00 = uVar9;\n                                        }\n                                        puVar6 = puVar1 + (*(*0x20 + -0x68) & -uVar7 >> 0x3f);\n                                        if (*0x20 + -0x2c == puVar6) {\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0x38) = uVar8;\n                                            *(*0x20 + -0x48) = uVar7;\n                                            *(*0x20 + -0x18) = puVar6;\n                                            *(*0x20 + -0xb8) = 0x48b577;\n                                            fcn.0045f840(arg1_00);\n                                            uVar9 = *(*0x20 + -0x70);\n                                            uVar7 = *(*0x20 + -0x48);\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                            unaff_RBX = *(*0x20 + -0x40);\n                                            puVar6 = *(*0x20 + -0x18);\n                                            uVar8 = *(*0x20 + -0x38);\n                                            iVar2 = *(*0x20 + -0x60);\n                                            puVar1 = *(*0x20 + -0x10);\n                                        }\n                                        if (bVar10 || bVar11) {\n                                            uVar8 = (uVar8 - iVar2) - 3;\n                                            uVar7 = uVar8;\n                                            if (unaff_RBX < uVar8) {\n                                                uVar7 = unaff_RBX;\n                                            }\n                                            if (*(*0x20 + 0x18) != puVar6 + (-uVar8 >> 0x3f & uVar9)) {\n                                                *(*0x20 + -0xb8) = 0x48b5df;\n                                                fcn.0045f840(uVar7);\n                                                puVar1 = *(*0x20 + -0x10);\n                                            }\n                                            return puVar1;\n                                        }\n                                        *(*0x20 + -0xb8) = 0x48b605;\n                                        fcn.0045efa0(uVar7);\n                                    }\n                                    *(*0x20 + -0xb8) = 0x48b610;\n                                    fcn.0045efa0(uVar8);\n                                }\n                                *(*0x20 + -0xb8) = 0x48b618;\n                                fcn.0045efa0(uVar8);\n                            }\n                            *(*0x20 + -0xb8) = 0x48b61f;\n                            fcn.0045eee0(uVar8);\n                        }\n                        *(*0x20 + -0xb8) = 0x48b62c;\n                        fcn.0045eee0(10);\ncode_r0x0048b62c:\n                        *(*0x20 + -0xb8) = 0x48b639;\n                        fcn.0045eee0(10);\n                    }\n                    *(*0x20 + -0xb8) = 0x48b646;\n                    fcn.0045eee0(10);\ncode_r0x0048b646:\n                    *(*0x20 + -0xb8) = 0x48b653;\n                    fcn.0045eee0(10);\n                    arg2 = unaff_RBX;\n                }\n                *(*0x20 + -0xb8) = 0x48b67b;\n                fcn.0044aca0(0x20, arg2, 0x4c8849, 3);\n                *(*0x20 + -0xb8) = 0x48b685;\n                fcn.0040a4c0();\n                *(*0x20 + -0xb8) = 0x48b694;\n                in_RAX = fcn.00433560();\n            }\n            arg1 = 0x21;\n            unaff_SIL = 0;\n            *(*0x20 + -0xb8) = 0x48b6bc;\n            fcn.0044aca0(0x21, arg2, 0x4c8849, 3);\n            *(*0x20 + -0xb8) = 0x48b6c5;\n            unaff_RBX = fcn.0040a4c0();\n            *(*0x20 + -0xb8) = 0x48b6d4;\n            iVar2 = fcn.00433560();\n            unaff_RDI = in_RAX;\n        }\n        *(puVar5 + 8) = iVar2;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x48b6f3;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2754
    },
    "00401de0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00401de0(uint64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            arg2 = 0;\n            for (iVar4 = 0; iVar2 = arg2,  iVar4 < unaff_RDI; iVar4 = iVar4 + 1) {\n                arg2 = iVar2 * 0x1000193 + *(arg1 + iVar4);\n            }\n            iVar7 = 0x1000193;\n            iVar8 = 1;\n            for (; 0 < uVar5; uVar5 = uVar5 >> 1) {\n                if ((uVar5 & 1) != 0) {\n                    iVar8 = iVar8 * iVar7;\n                }\n                iVar7 = iVar7 * iVar7;\n            }\n            iVar7 = 0;\n            for (uVar5 = 0; uVar5 < unaff_RDI; uVar5 = uVar5 + 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x00401ffc;\n                iVar7 = iVar7 * 0x1000193 + *(in_RAX + uVar5);\n            }\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = iVar8;\n            *(*0x20 + -0x2c) = iVar2;\n            arg1_00 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (iVar7 == iVar2) {\n                uVar6 = uVar5;\n                if (unaff_RDI <= unaff_RBX) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x50) = 0x401ec5;\n                    cVar1 = fcn.00402620(unaff_RDI, arg2);\n                    if (cVar1 != '\\0') {\n                        return 0;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x2c);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar6 = *(*0x20 + -0x10);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar8 = *(*0x20 + -0x30);\n                    arg1_00 = uVar6;\n                    goto code_r0x00401f00;\n                }\n            }\n            else {\ncode_r0x00401f00:\n                while( true ) {\n                    do {\n                        uVar5 = arg1_00;\n                        if (unaff_RBX <= uVar5) {\n                            return 0xffffffffffffffff;\n                        }\n                        unaff_RDI = uVar5 - uVar6;\n                        if (unaff_RBX <= unaff_RDI) goto code_r0x00401fe6;\n                        iVar7 = (iVar7 * 0x1000193 + *(in_RAX + uVar5)) - *(in_RAX + unaff_RDI) * iVar8;\n                        arg1_00 = uVar5 + 1;\n                    } while (arg2 != iVar7);\n                    uVar9 = unaff_RDI + 1;\n                    if (arg1_00 < uVar9) break;\n                    if (uVar6 == uVar5 - unaff_RDI) {\n                        *(*0x20 + -0x24) = iVar7;\n                        *(*0x20 + -0x20) = arg1_00;\n                        *(*0x20 + -0x18) = uVar9;\n                        *(*0x20 + -0x50) = 0x401f86;\n                        cVar1 = fcn.00402620(uVar5 - unaff_RDI, arg2);\n                        arg2 = *(*0x20 + -0x2c);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar6 = *(*0x20 + -0x10);\n                        iVar7 = *(*0x20 + -0x24);\n                        iVar8 = *(*0x20 + -0x30);\n                        arg1_00 = *(*0x20 + -0x20);\n                        uVar9 = *(*0x20 + -0x18);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        cVar1 = '\\0';\n                    }\n                    if (cVar1 != '\\0') {\n                        return uVar9;\n                    }\n                }\n                *(*0x20 + -0x50) = 0x401fe6;\n                fcn.0045efa0(arg1_00);\ncode_r0x00401fe6:\n                *(*0x20 + -0x50) = 0x401ff1;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x50) = 0x401ffc;\n            fcn.0045ef20(unaff_RDI, unaff_RBX);\n            uVar5 = uVar6;\ncode_r0x00401ffc:\n            *(*0x20 + -0x50) = 0x402007;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = uVar5;\n        *(puVar3 + -8) = 0x402025;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1626
    },
    "00408fc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408fc0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x408ff6;\n            fcn.0044d780();\n            *(*0x20 + -0x130) = 0x408ffb;\n            uVar1 = fcn.0044df00();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x40901b;\n            fcn.00402ac0(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x0040907b;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x409076;\n                        fcn.0044ac00(0x31);\n                        *(*0x20 + -0x130) = 0x40907b;\n                        uVar2 = fcn.00433ce0();\ncode_r0x0040907b:\n                        if (uVar6) goto code_r0x00409305;\n                        if (arg1_00 < uVar2) goto code_r0x004092f9;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x4090fe;\n                    fcn.00402ac0(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x0040915a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x409155;\n                            fcn.0044ac00(0x2e);\n                            *(*0x20 + -0x130) = 0x40915a;\n                            uVar2 = fcn.00433ce0();\ncode_r0x0040915a:\n                            if (!uVar6 && !uVar7) goto code_r0x004092cc;\n                            if (arg1 < uVar2) goto code_r0x004092c7;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x4091af;\n                        iVar3 = fcn.0045f199();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4ca28e;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4c874f;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x4c874f;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x4cb47a;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x4c906f;\n                        *(*0x20 + -0x18) = 0x4c906f;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x4092b3;\n                        fcn.0044a960(9);\n                        *(*0x20 + -0x130) = 0x4092b8;\n                        fcn.0040a4c0();\n                        *(*0x20 + -0x130) = 0x4092c7;\n                        fcn.00433560();\ncode_r0x004092c7:\n                        *(*0x20 + -0x130) = 0x4092cc;\n                        fcn.0045efa0(arg1);\ncode_r0x004092cc:\n                        *(*0x20 + -0x130) = 0x4092d1;\n                        fcn.0045ef20(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x4092f4;\n                    fcn.0044ac00(0x13);\n                    *(*0x20 + -0x130) = 0x4092f9;\n                    fcn.00433ce0();\ncode_r0x004092f9:\n                    *(*0x20 + -0x130) = 0x409305;\n                    fcn.0045efa0(arg1_00);\ncode_r0x00409305:\n                    *(*0x20 + -0x130) = 0x40930d;\n                    uVar2 = fcn.0045ef20(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x409315;\n                fcn.0045ef20(uVar2, param_2);\n            }\n            unaff_RBX = 0x4cb927;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x409338;\n            fcn.0044ac00(0x13);\n            *(*0x20 + -0x130) = 0x40933d;\n            fcn.00433ce0();\n        }\n        *(puVar5 + -8) = 0x409345;\n        fcn.0045c800();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2137
    },
    "0041faa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0041faa0(void)\n\n{\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack72;\n    uchar auStack64 [16];\n    ulong uStack48;\n    uchar *puStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    auStack64 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    uStack72 = 0;\n    while (uStack72 < unaff_RBX) {\n        if (auStack64._0_8_ + 0x800000000000U < auStack64._8_8_ + 0x800000000000U) {\n            auStack64._8_8_ = auStack64._8_8_ - auStack64._0_8_;\n        }\n        else {\n            auStack64._8_8_ = 0;\n        }\n        if (auStack64._8_8_ == 0) {\n            iVar1 = fcn.0041ffa0();\n            auStack64 = CONCAT88(unaff_RBX, iVar1);\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar1 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) break;\n        }\n        uStack48 = 0x41fc20;\n        puStack32 = auStack64;\n        auStack24 = CONCAT88(&uStack72, unaff_RBX);\n        fcn.0045c6c0();\n    }\n    fcn.004200c0(auStack64._8_8_);\n    return uStack72;\n}\n",
        "token_count": 502
    },
    "0041ffa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041ffa0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar2 = *(in_RAX + 0x100f0);\n    uVar1 = fcn.0042c3a0();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        fcn.0040ad60();\n        return uVar1;\n    }\n    fcn.0042c420();\n    fcn.0040ad60();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 247
    },
    "00420620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00420620(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = *(in_RAX + 0x10110);\n            *(*0x20 + -0x50) = 0x420665;\n            fcn.0040ab40(arg1, uVar3);\n            arg1 = *(*(*0x20 + 8) + 0x68);\n            unaff_RBX = *(*(*0x20 + 8) + 0x60);\n            unaff_RSI = *(*0x20 + -0x10);\n            unaff_RDI = unaff_RSI + 0x7fffffffffff;\n            uVar2 = unaff_RDI >> 0x16;\n            if (uVar2 < arg1) {\n                uVar1 = *(unaff_RBX + uVar2 * 8);\n                if (uVar1 < 0) {\n                    arg1 = 0x200000;\n                }\n                else {\n                    arg1 = uVar1 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x10) = uVar2;\n                if (arg1 < *(*0x20 + 0x20)) goto code_r0x00420765;\n                unaff_RDI = unaff_RDI >> 0x23;\n                if (unaff_RDI < 0x2000) {\n                    uVar2 = (unaff_RSI - 1U & 0x3fffff) >> 0xd;\n                    *(*0x20 + -0x50) = 0x420708;\n                    uVar3 = fcn.00420d00(*(*0x20 + 0x20));\n                    if (uVar2 != 0) {\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x50) = 0x42072e;\n                        uVar3 = fcn.00420800(uVar3);\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x50) = 0x420748;\n                        fcn.0040ad60();\n                        return *(*0x20 + -0x28) << 0xd;\n                    }\ncode_r0x00420765:\n                    *(*0x20 + -0x50) = 0x420772;\n                    fcn.0040ad60();\n                    return 0;\n                }\n                *(*0x20 + -0x50) = 0x4207a7;\n                fcn.0045ef00(0x2000);\n            }\n            *(*0x20 + -0x50) = 0x4207af;\n            in_RAX = fcn.0045ef00(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x4207ce;\n        fcn.00460f20();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1062
    },
    "00420d00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00420d00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x00420f88;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x420db1;\n                        iVar2 = fcn.00420a00(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x420f88;\n                    fcn.0045eee0(8);\ncode_r0x00420f88:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x420f95;\n                    fcn.0045eee0(8);\n                }\n                *(*0x20 + -0x50) = 0x420f9a;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x420fab;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x420fb5;\n                fcn.00435a80();\n                *(*0x20 + -0x50) = 0x420fba;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x420fbf;\n                fcn.00435500();\n                *(*0x20 + -0x50) = 0x420fd0;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x50) = 0x420fd5;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x420fe6;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x420ff0;\n            fcn.00435a80();\n            *(*0x20 + -0x50) = 0x420ff5;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x420ffa;\n            fcn.00435500();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x42100b;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x421025;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x420dfe;\n    uVar4 = fcn.00420a00(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x420ecf;\n            uVar3 = fcn.00420a00();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x626790) && (*0x626798 < *0x626790)) &&\n        (uVar6 = -(*0x626790 >> 0xd),  ((uVar8 + (*0x626790 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2084
    },
    "00426f20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00426f20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x426f74;\n            fcn.004292a0(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x426fe5;\n            fcn.0042b960();\n            *(*0x20 + -0x70) = 0x427005;\n            fcn.0042be40(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x0042708a:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x42711e;\n                fcn.00427180(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00427139;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00427047:\n                *(*0x20 + -0x70) = 0x42706f;\n                fcn.00429ec0(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x0042708a;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x4270e5;\n            iVar2 = fcn.00415d00();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00427047;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x427139;\n            fcn.00433ce0();\ncode_r0x00427139:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x427146;\n            in_RAX = fcn.0045ef00(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42715b;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1322
    },
    "00427760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00427760(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = unaff_RBX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            uVar10 = uVar9 >> 0x16;\n            uVar6 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar7 = uVar6 >> 0x16;\n            unaff_RBX = (uVar1 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar8 = ((uVar1 + arg1 * 0x2000) - 1 & 0x3fffff) >> 0xd;\n            if (uVar7 == uVar10) {\n                if (0x1fff < uVar9 >> 0x23) {\n                    *(*0x20 + -0x90) = 0x42796b;\n                    fcn.0045ef00(0x2000);\n                    goto code_r0x0042796b;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                iVar3 = (uVar8 - unaff_RBX) + 1;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x90) = 0x4278ef;\n                uVar2 = fcn.0042a0e0(iVar3);\n                *(*0x20 + -0x58) = uVar2;\n                *(*0x20 + -0x90) = 0x427913;\n                fcn.0042a800(*(*0x20 + -0x50));\n                iVar3 = *(*0x20 + -0x58);\ncode_r0x00427918:\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x90) = 0x427945;\n                fcn.00427180(*(*0x20 + 0x18));\n                return *(*0x20 + -0x68) << 0xd;\n            }\n            if (uVar9 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x30) = uVar8;\n                *(*0x20 + -0x38) = uVar10;\n                *(*0x20 + -0x40) = uVar7;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                *(*0x20 + -0x50) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x90) = 0x42785f;\n                uVar2 = fcn.0042a0e0(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x58) = uVar2;\n                unaff_RBX = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = 0x427885;\n                fcn.0042a800(*(*0x20 + -0x50));\n                iVar4 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x40);\n                uVar7 = *(*0x20 + -0x58);\n                while( true ) {\n                    in_RDX = iVar4 + 1;\n                    *(*0x20 + -0x68) = uVar7;\n                    if (uVar6 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x90) = 0x427aa5;\n                            iVar4 = fcn.0045ef00(0x2000);\n                            goto code_r0x00427aa5;\n                        }\n                        *(*0x20 + -0x10) = *(iVar3 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x48) = (uVar6 & 0x1fff) << 7;\n                        *(*0x20 + -0x50) = *(*0x20 + -0x30) + 1;\n                        *(*0x20 + -0x90) = 0x427a65;\n                        uVar2 = fcn.0042a0e0(*(*0x20 + -0x30) + 1);\n                        *(*0x20 + -0x58) = uVar2;\n                        *(*0x20 + -0x90) = 0x427a86;\n                        fcn.0042a800(*(*0x20 + -0x50));\n                        iVar3 = *(*0x20 + -0x68) + *(*0x20 + -0x58);\n                        goto code_r0x00427918;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x60) = in_RDX;\n                    iVar3 = *(iVar3 + 0x78 + (in_RDX >> 0xd) * 8);\n                    *(*0x20 + -0x10) = iVar3;\n                    iVar4 = (in_RDX & 0x1fff) * 0x80;\n                    *(*0x20 + -0x48) = iVar4;\n                    *(*0x20 + -0x18) = iVar3 + iVar4 + 0x40;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x90) = 0x4279e5;\n                    iVar3 = fcn.0042a0e0(0x200);\n                    in_RDX = *(*0x20 + -0x68) + iVar3;\n                    iVar3 = *(*0x20 + -0x48) + *(*0x20 + -0x10);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\ncode_r0x00427aa5:\n                        *(iVar3 + iVar4 * 8) = 0xffffffffffffffff;\n                    }\n                    iVar3 = *(*0x20 + -0x18);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\n                        *(iVar3 + iVar4 * 8) = 0;\n                    }\ncode_r0x0042796b:\n                    iVar4 = *(*0x20 + -0x60);\n                    iVar3 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x40);\n                    uVar7 = in_RDX;\n                }\n                *(*0x20 + -0x90) = 0x427adb;\n                fcn.0045ef00(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x90) = 0x427ae8;\n            in_RAX = fcn.0045ef00(0x2000);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x427afd;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2091
    },
    "00429be0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00429be0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = *(in_RAX + 0x10078);\n            uVar3 = iVar9 + 0x800000000000;\n            uVar6 = uVar3 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar2 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x429c5a;\n                    uVar6 = fcn.00427c00();\n                    if (uVar6 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x55c3b8;\n                        return 0;\n                    }\n                    arg1 = uVar6 + 0x800000000000;\n                    if (arg1 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (arg1 >> 0x23) * 8);\n                        arg1 = (arg1 >> 0x16 & 0x1fff) * 0x80;\n                        iVar9 = iVar2 + arg1;\n                        uVar3 = (uVar6 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar8 = *(iVar2 + arg1 + uVar3 * 8);\n                            uVar6 = uVar6 & 0xfffffffffff80000;\n                            uVar3 = *(iVar2 + arg1 + 0x40 + uVar3 * 8);\ncode_r0x00429dcc:\n                            uVar8 = ~uVar8;\n                            uVar4 = (uVar6 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar3;\n                                *(*0x20 + -0x38) = uVar8;\n                                *(*0x20 + -0x30) = uVar6;\n                                puVar1 = iVar9 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar8;\n                                puVar1 = iVar9 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar8 & uVar3);\n                                *(*0x20 + -0x68) = 0x429e14;\n                                fcn.00427180(0x40);\n                                iVar9 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar9 + 0x7e000;\n                                return iVar9;\n                            }\n                            *(*0x20 + -0x68) = 0x429e5c;\n                            fcn.0045ef00(8);\ncode_r0x00429e5c:\n                            *(*0x20 + -0x68) = 0x429e66;\n                            fcn.0045ef00(8);\n                            uVar3 = arg1;\n                            goto code_r0x00429e66;\n                        }\n                        goto code_r0x00429e85;\n                    }\n                }\n                else {\n                    uVar3 = uVar3 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar3 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        uVar3 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x68) = 0x429d5f;\n                        arg1 = fcn.0042a500((iVar9 & 0x3fffff) >> 0xd);\n                        iVar9 = *(*0x20 + -0x10) + *(*0x20 + -0x28);\n                        if (arg1 != 0xffffffffffffffff) {\n                            uVar3 = arg1 >> 6;\n                            if (uVar3 < 8) {\n                                uVar6 = ((arg1 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x20) * 0x400000) -\n                                        0x800000000000;\n                                uVar8 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                arg1 = *(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40;\n                                uVar3 = *(arg1 + uVar3 * 8);\n                                goto code_r0x00429dcc;\n                            }\n                            goto code_r0x00429e5c;\n                        }\ncode_r0x00429e66:\n                        *(*0x20 + -0x68) = 0x429e77;\n                        fcn.00433ce0();\n                        arg1 = uVar3;\n                    }\n                    *(*0x20 + -0x68) = 0x429e85;\n                    fcn.0045ef00(0x2000);\ncode_r0x00429e85:\n                    *(*0x20 + -0x68) = 0x429e8f;\n                    fcn.0045ef00(8);\n                }\n                *(*0x20 + -0x68) = 0x429e9c;\n                fcn.0045ef00(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x429ea7;\n            in_RAX = fcn.0045ef00(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x429eb2;\n        fcn.00460f20();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1666
    },
    "0042a6c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0042a6c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0042e960": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042e960(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.0042dfc0(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042df00(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x4b7a80;\n            uStack16 = 0x4d29f0;\n            fcn.0045ab40(1);\n            fcn.00430f80();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0042fe20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042fe20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42fe85;\n                fcn.00431080();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42feb4;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42fece;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "00431380": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00431380(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00431100();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 126
    },
    "00434080": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00434080(void)\n\n{\n    fcn.0045c6c0();\n    fcn.0045c6c0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 47
    },
    "00435d80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00435d80(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435560(unaff_RBX);\n    return;\n}\n",
        "token_count": 92
    },
    "0044ac00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044ac00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044a960(2);\n    return;\n}\n",
        "token_count": 87
    },
    "0044b6a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0044b6a0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.0040c220(0);\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "004520a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.004520a0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    code *pcVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x4520e5;\n            uVar1 = fcn.0045e900(arg1 << 3);\n            uVar4 = uVar1 & 0x1fff;\n            unaff_RDI = *(*(*0x20 + 8) + 0x20 + uVar4 * 8);\n            uVar9 = *(*0x20 + 8) + uVar4 * 8 + 0x20;\n            arg1_00 = *(*0x20 + 0x18);\n            iVar10 = *(*0x20 + 0x10);\n            while( true ) {\n                if (unaff_RDI == NULL) {\n                    iVar6 = 0;\n                    arg1_00 = uVar9;\n                    goto code_r0x00452157;\n                }\n                if ((unaff_RDI[1] == uVar1) && (unaff_RBX = unaff_RDI[3],  arg1_00 == unaff_RBX)) break;\ncode_r0x00452119:\n                unaff_RDI = *unaff_RDI;\n            }\n            if (unaff_RBX < 0x81) {\n                in_R10 = 0;\n                do {\n                    if (in_R10 < unaff_RBX) {\n                        if (*(iVar10 + in_R10 * 8) != unaff_RDI[in_R10 + 4]) goto code_r0x00452119;\n                    }\n                    else {\n                        iVar6 = *(unaff_RDI + 2);\n                        arg1_00 = uVar9;\ncode_r0x00452157:\n                        if (iVar6 != 0) {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x10) = arg1_00;\n                        *(*0x20 + -0x50) = 0x452174;\n                        fcn.0040ab40();\n                        iVar3 = *(*0x20 + 8);\n                        pcVar5 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar1 = *(*0x20 + 0x18);\n                        unaff_RDI = *(*0x20 + -0x20);\n                        while( true ) {\n                            if (pcVar5 == NULL) {\n                                iVar6 = 0;\n                                goto code_r0x004521d7;\n                            }\n                            if ((*(pcVar5 + 8) == unaff_RDI) && (arg1_00 = *(pcVar5 + 0x18),  uVar1 == arg1_00)) break;\ncode_r0x004521a1:\n                            pcVar5 = *pcVar5;\n                        }\n                        if (arg1_00 < 0x81) {\n                            iVar10 = 0;\n                            do {\n                                if (iVar10 < arg1_00) {\n                                    in_R10 = *(pcVar5 + (iVar10 + 4) * 8);\n                                    if (*(unaff_RBX + iVar10 * 8) != in_R10) goto code_r0x004521a1;\n                                }\n                                else {\n                                    iVar6 = *(pcVar5 + 0x10);\ncode_r0x004521d7:\n                                    if (iVar6 != 0) {\n                                        *(*0x20 + -0x2c) = iVar6;\n                                        *(*0x20 + -0x50) = 0x452225;\n                                        fcn.0040ad60();\n                                        return *(*0x20 + -0x2c);\n                                    }\n                                    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                                    *(*0x20 + -0x50) = 0x4521e6;\n                                    puVar2 = fcn.00452340();\n                                    puVar2[1] = *(*0x20 + -0x20);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(puVar2 + 2) = *(iVar3 + 8);\n                                    uVar9 = *(*0x20 + 0x18);\n                                    puVar2[3] = uVar9;\n                                    if (uVar9 < 0x81) {\n                                        iVar10 = *(*0x20 + 0x10);\n                                        for (iVar7 = 0; iVar7 < uVar9; iVar7 = iVar7 + 1) {\n                                            puVar2[iVar7 + 4] = *(iVar10 + iVar7 * 8);\n                                        }\n                                        *(*0x20 + -0x18) = puVar2;\n                                        *puVar2 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                                        *(*0x20 + -0x50) = 0x452265;\n                                        fcn.00403980();\n                                        *(*0x20 + -0x50) = 0x452271;\n                                        fcn.0040ad60();\n                                        return *(*(*0x20 + -0x18) + 0x10);\n                                    }\n                                    pcVar5 = pe_nt_image_headers64;\n                                    *(*0x20 + -0x50) = 0x452290;\n                                    iVar3 = fcn.0045ef20(uVar9, 0x80);\n                                    unaff_RBX = uVar1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x50) = 0x4522c5;\n                        uVar9 = arg1_00;\n                        uVar4 = fcn.0045ef20(arg1_00, 0x80);\n                    }\n                    in_R10 = in_R10 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x50) = 0x4522fa;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ef20(unaff_RBX, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x452314;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1832
    },
    "004527a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004527a0(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.00452e60();\n    piVar3 = fcn.0040cc20();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.004520a0(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.00451660(auStack24);\n    return;\n}\n",
        "token_count": 246
    },
    "00452ac0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00452ac0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.00451660(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.00451660(auStack24);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00452be0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00452be0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x5d8820)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.00451660(&uStack32);\n    return;\n}\n",
        "token_count": 268
    },
    "00457740": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00457740(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x40a8a0;\n            }\n            for (iVar2 = 0x561f60; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004577a0;\n            }\n            iVar2 = 0;\ncode_r0x004577a0:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x457879;\n                iVar2 = fcn.0044d2a0();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x4577c5;\n            fcn.0040ab40();\n            *(*0x20 + -0x50) = 0x4577dc;\n            puVar1 = fcn.0040f600(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x4577f3;\n            fcn.0040ad60();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x457805;\n            fcn.00435480();\n            *(*0x20 + -0x50) = 0x457816;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x457825;\n            fcn.00435be0();\n            *(*0x20 + -0x50) = 0x457836;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x457845;\n            fcn.00435be0();\n            *(*0x20 + -0x50) = 0x457856;\n            fcn.00435d80();\n            *(*0x20 + -0x50) = 0x45785b;\n            fcn.00435500();\n            iVar2 = 0x561f60;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x118);\n                *(*0x20 + -0x28) = *(iVar2 + 0x120);\n                *(*0x20 + -0x50) = 0x4578a5;\n                fcn.00435480();\n                *(*0x20 + -0x50) = 0x4578b6;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x4578c5;\n                fcn.00435be0();\n                *(*0x20 + -0x50) = 0x4578d6;\n                fcn.00435d80();\n                *(*0x20 + -0x50) = 0x4578e5;\n                fcn.00435be0();\n                *(*0x20 + -0x50) = 0x4578ea;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x4578ef;\n                fcn.00435500();\n                iVar2 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x45791a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x457929;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1176
    },
    "0045b180": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045b180(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.004039c0();\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f4a0();\n    return;\n}\n",
        "token_count": 333
    },
    "0045f060": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f060(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4585
    },
    "0045f0ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f0ae(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045f0f8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f0f8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3032
    },
    "0045f101": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f101(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2631
    },
    "0045f118": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f118(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045f13d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f13d(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045f154": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f154(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "0045f16b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f16b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "0045f182": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f182(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1085
    },
    "0045f199": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f199(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "0045f1b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f1b0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 461
    },
    "00460f60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00460f60(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    uchar auStack56 [8];\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack56;\n    }\n    fcn.0045c9a0();\n    return;\n}\n",
        "token_count": 129
    },
    "00468b80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00468b80(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x468ba5;\n            uVar2 = fcn.0046ae60();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00468bb9;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x00468bb9:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x468bf6;\n                    uVar3 = fcn.00447160(unaff_RBX);\n                    arg1_00 = *(*0x20 + -0x20);\n                    if (arg1_00 == 0) break;\n                    *(*0x20 + -0x10) = uVar3;\n                    arg1 = *(*0x20 + -0x24);\n                    *(*0x20 + -0x50) = 0x468c1f;\n                    uVar1 = fcn.0046d1a0(arg1);\n                    if ((((uVar1 == 0) && (uVar3 != 0)) && (*(uVar3 + 8) == 0x4ba880)) && (*arg1 == 0xcb)) {\n                        return 0;\n                    }\n                    unaff_RDI = *(*0x20 + -0x24);\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1_00 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1_00 <= arg2) {\n                            *(*0x20 + -0x50) = 0x468c88;\n                            fcn.00467cc0(arg2);\n                            *(*0x20 + -0x50) = 0x468c98;\n                            uVar2 = fcn.0044b3e0(arg1_00);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x468cac;\n                        fcn.0045ef60(arg1_00, arg2);\n                        unaff_RBX = uVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x468cb3;\n                fcn.0045eee0(arg1_00);\n            }\n            *(*0x20 + -0x50) = 0x468cbd;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x468ccd;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 962
    },
    "00469960": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00469960(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x469985;\n            uVar2 = fcn.0046ae60();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x004699a0;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x004699a0:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x4699e5;\n                    uVar2 = fcn.00447160(unaff_RBX);\n                    arg1 = *(*0x20 + -0x20);\n                    if (arg1 == 0) break;\n                    *(*0x20 + -0x10) = uVar2;\n                    unaff_RBX = *(*0x20 + -0x24);\n                    unaff_RDI = 0;\n                    *(*0x20 + -0x50) = 0x469a07;\n                    uVar1 = fcn.0046d6c0(uVar2);\n                    if (unaff_RBX != 0) {\n                        return 0;\n                    }\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1 <= arg2) {\n                            *(*0x20 + -0x50) = 0x469a35;\n                            uVar2 = fcn.0046af40(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x469a5c;\n                        fcn.0045ef60(arg1, arg2);\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x469a65;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x50) = 0x469a6f;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x469a7f;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "0046afc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046b069)\n// WARNING: Removing unreachable block (ram,0x0046b095)\n\nulong fcn.0046afc0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x5d0220);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x46b02f;\n            uVar2 = fcn.0045f0f8();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x46b058;\n            uVar3 = fcn.0046cbe0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x0046b165;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x46b13b;\n                fcn.00467cc0(300);\n                *(*0x20 + -0x2a0) = 0x46b14b;\n                uVar2 = fcn.0044b3e0(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x46b165;\n            fcn.0045ef60(uVar4, 300);\ncode_r0x0046b165:\n            *(*0x20 + -0x2a0) = 0x46b171;\n            in_RAX = fcn.0045eee0(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46b17c;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 782
    },
    "0046c040": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046c040(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d1dd8;\n            *(*0x20 + -0x50) = 0x46c077;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46c0ac;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46c0e7;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46c112;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46c125;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "0046cee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046cee0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d1f70;\n            *(*0x20 + -0x50) = 0x46cf17;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46cf4c;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46cf87;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46cfb2;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46cfc5;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "0046d2c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046d2c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = *0x5d1fa8;\n            *(*0x20 + -0x50) = 0x46d2f8;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46d332;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46d36d;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46d398;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x46d3ac;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 615
    },
    "0046d3c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046d3c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1fb0;\n            *(*0x20 + -0x50) = 0x46d3ef;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46d419;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46d45b;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46d48c;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46d497;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "0046d4c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046d4c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d1fb8;\n            *(*0x20 + -0x50) = 0x46d4f7;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46d52c;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46d567;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46d592;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46d5a5;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0046d5c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046d5c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d1fc0;\n            *(*0x20 + -0x50) = 0x46d5f2;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46d61c;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46d666;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46d696;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46d6a5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "0046d800": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0046d800(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d2018;\n            *(*0x20 + -0x50) = 0x46d832;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46d85c;\n                iVar2 = fcn.0045b440(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x46d8a6;\n                    fcn.0040a440();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x46d8d6;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46d8e5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 484
    },
    "0046d900": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046d900(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d2020;\n            *(*0x20 + -0x50) = 0x46d933;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46d965;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46d9a6;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46d9d6;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x46d9e5;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "0046da00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046da00(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d2030;\n            *(*0x20 + -0x50) = 0x46da36;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                arg1 = *(*0x20 + 8);\n                *(*0x20 + -0x50) = 0x46da65;\n                uVar2 = fcn.0045b440(arg1);\n                if (((uVar2 == 0) && (arg1 != 0)) && (arg1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46daa6;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46dad6;\n            in_EAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46dae5;\n        fcn.0045c800();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "0046db00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046db00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d2038;\n            *(*0x20 + -0x50) = 0x46db2f;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46db59;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46db9b;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46dbcc;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46dbd7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 480
    },
    "0047c980": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047cc49)\n\nuchar fcn.0047c980(ulong arg1, ulong noname_1, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t arg1_00;\n    int64_t unaff_RSI;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    int64_t iStack0000000000000038;\n    uchar auStack64 [16];\n    int64_t iStack48;\n    ulong uStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    iStack0000000000000028 = unaff_RSI;\n    uStack0000000000000030 = arg3;\n    iStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    ppcStack16 = NULL;\n    iVar5 = 0x20019;\n    uVar3 = fcn.00473ea0(arg1);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack64 = CONCAT88(uVar3, 0x47cd60);\n    ppcStack16 = auStack64;\n    iVar4 = fcn.00468960(*0x5d1c18);\n    if (iVar4 == 0) {\n        iVar4 = 7;\n        iVar5 = fcn.004746a0(7);\n        if (iVar4 == 0) {\n            iVar4 = 7;\n            iStack48 = iVar5;\n            uVar3 = fcn.004746a0(7);\n            arg2 = 0x4c8ed5;\n            iVar5 = iStack48;\n        }\n        else {\n            arg2 = 0;\n            uVar3 = 0;\n        }\n        arg1_00 = 0x4c8edc;\n    }\n    else {\n        arg1_00 = 0;\n        arg2 = 0;\n        uVar3 = 0;\n    }\n    if (iVar4 != 0) {\n        iVar4 = fcn.00474580(3, arg2);\n        if (iVar5 != 0) {\n            auStack32 = CONCAT88(uVar3, iVar5);\n            (**ppcStack16)();\n            return 0;\n        }\n        iStack48 = iVar4;\n        uVar3 = fcn.00474580(3, arg2);\n        arg2 = 0x4c886d;\n        arg1_00 = 0x4c88c4;\n    }\n    if ((iStack0000000000000028 == arg1_00) &&\n       (iVar5 = arg2,  uStack40 = uVar3,  cVar1 = fcn.00402620(arg1_00, arg2),  cVar1 != '\\0')) {\n        if (iStack0000000000000038 == arg2) {\n            uVar2 = fcn.00402620(arg2, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            uVar2 = 0;\n        }\n        else if (iStack0000000000000038 == iStack0000000000000028) {\n            uVar2 = fcn.00402620(iStack0000000000000038, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            (**ppcStack16)();\n            return 1;\n        }\n        (**ppcStack16)();\n        return 0;\n    }\n    (**ppcStack16)();\n    return 0;\n}\n",
        "token_count": 934
    },
    "0047ef20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047ef20(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = 0x14;\n    iVar4 = 0;\n    while (iVar5 = iVar1,  iVar5 <= arg1) {\n        fcn.0047eda0(iVar4);\n        iVar4 = iVar5;\n        iVar1 = iVar5 + 0x14;\n    }\n    fcn.0047eda0(iVar4);\n    iVar1 = 0x14;\n    while (iVar1 < arg1) {\n        iVar2 = iVar1 << 1;\n        iVar4 = iVar2;\n        iVar5 = 0;\n        while (iVar3 = iVar4,  iVar3 <= arg1) {\n            fcn.0047f080(iVar5);\n            iVar5 = iVar3;\n            iVar4 = iVar3 + iVar1 * 2;\n        }\n        iVar4 = iVar1 + iVar5;\n        iVar1 = iVar2;\n        if (iVar4 < arg1) {\n            fcn.0047f080(iVar5);\n        }\n    }\n    return in_RAX;\n}\n",
        "token_count": 336
    },
    "0048cb00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0048cb00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = arg1;\n            if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                if ((uVar2 >> 7 & 1) == 0) {\n                    *(*0x20 + -0x10) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                }\n                goto code_r0x0048cb8b;\n            }\n            if ((uVar2 >> 7 & 1) != 0) {\n                if ((uVar2 >> 8 & 1) != 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x48cb4c;\n                    uVar1 = fcn.004595a0();\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x50) = 0x48cb65;\n                    fcn.00459700(*(*0x20 + -0x20));\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\ncode_r0x0048cb8b:\n                *(*0x20 + -0x18) = in_RAX;\n                return;\n            }\n            unaff_RBX = 0x4ee790;\n            *(*0x20 + -0x50) = 0x48cbb2;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x48cbc7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 741
    },
    "00491d00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00491d00(uchar param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1b00;\n            *(*0x20 + -0x50) = 0x491d38;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x491d74;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5cad30;\n                    if ((iVar1 != 0) && (uVar3 = *0x5cad40,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x491daf;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x491dda;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x491dee;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "0049d100": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0049d100(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong noname_1;\n    ulong unaff_RDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.0049cd60();\n    fcn.004a3720(unaff_RDI);\n    arg1_00 = *(iVar1 + 8);\n    noname_1 = arg1_00;\n    uVar2 = (**(in_RAX + 0x18))();\n    fcn.0049ce00(arg1_00, noname_1, in_R8);\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "0049dac0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0049dac0(uchar param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(in_RAX + 0x4c);\n    *(in_RAX + 0x4c) = param_1;\n    fcn.0049b160(0x10, uVar1, 0x4cad28, 0x11);\n    *(in_RAX + 0x4c) = uVar1;\n    return;\n}\n",
        "token_count": 172
    },
    "0041d420": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041d420(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041d420:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041d4b9:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41d51c;\n                    iVar3 = fcn.00424180();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41d5b5;\n                            fcn.0041d6e0(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41d4ec;\n                    fcn.00421040(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041d605;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041d4b9;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041d617;\ncode_r0x0041d605:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41d616;\n    in_RAX = fcn.00433ce0();\ncode_r0x0041d617:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41d635;\n    fcn.0045c800();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041d420;\n}\n",
        "token_count": 1527
    },
    "0044bac0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint64_t fcn.0044bac0(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x0044bb79;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x0044bb79:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "004570a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.004570a0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "004582e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.004582e0(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x00458f5e:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x458f72;\n        fcn.0045c800();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x458348;\n    fcn.0040dbe0(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x45838c;\n    fcn.0040e020(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x4583d6;\n    uVar8 = fcn.00457000();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x4583f0;\n    unaff_RBX = fcn.00457000();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45840a;\n    cVar7 = fcn.00402620(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45842e;\n    uVar8 = fcn.004570a0();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x458445;\n    iVar9 = fcn.004570a0();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x458493;\n        fcn.004571e0();\n        *(*0x20 + -0x128) = 0x458498;\n        uVar8 = fcn.00457940(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x4584be;\n        fcn.004571e0();\n        *(*0x20 + -0x128) = 0x4584c5;\n        unaff_RBX = fcn.00457940(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4584e5;\n        cVar7 = fcn.00402620(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x00458f4c;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x458dde;\n                        cVar7 = fcn.004582e0(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00458d7d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0xf8) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0x100) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xd8) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x458f05;\n                                cVar7 = fcn.004582e0(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xd8) + 1;\n                                iVar11 = *(*0x20 + -0xf8);\n                                uVar15 = *(*0x20 + -0x100);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x458f38;\n                            fcn.0045eee0(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x458f45;\n                        fcn.0045efa0(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x458f4c;\n                    fcn.0045efa0(uVar15);\ncode_r0x00458f4c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x458f53;\n                    fcn.0045eee0(arg1);\n                }\n                *(*0x20 + -0x128) = 0x458f5d;\n                in_RAX = fcn.0045ef20(arg1, 0x100000);\n                goto code_r0x00458f5e;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x45869b;\n                cVar7 = fcn.004582e0(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x4586c8;\n                    uVar15 = fcn.004582e0(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x4585e6;\n            uVar8 = fcn.00457940(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x458607;\n            iVar11 = fcn.00457940(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x458625;\n                cVar7 = fcn.00402620(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x458d78;\n                            fcn.0045eee0(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xe0) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x458be7;\n                        uVar8 = fcn.004571e0();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xe0);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x458c13;\n                        uVar8 = fcn.004571e0();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x458c28;\n                        uVar8 = fcn.00457940(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x458c45;\n                        iVar11 = fcn.00457940(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x458c65;\n                        cVar7 = fcn.00402620(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x458c7a;\n                        uVar8 = fcn.00457b00(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x458c94;\n                        fcn.00457b00(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x458cb9;\n                        cVar7 = fcn.00402620(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x458cdb;\n                        uVar8 = fcn.00457480();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x458d05;\n                        iVar11 = fcn.00457480();\n                        *(*0x20 + -0x128) = 0x458d1d;\n                        cVar7 = fcn.004582e0(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00458b70:\n                        uVar15 = *(*0x20 + -0xe0) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x458d7d;\n                    fcn.0045eee0(uVar16);\n                    goto code_r0x00458d7d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x458754;\n            cVar7 = fcn.004582e0(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x45871f;\n                uVar15 = fcn.004582e0(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x4587ba;\n                uVar15 = fcn.004582e0(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x4587ef;\n            uVar15 = fcn.004582e0(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x458837;\n            uVar8 = fcn.00457940(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x458858;\n            fcn.00457940(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x458875;\n                cVar7 = fcn.00402620(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x004589a3;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x458945;\n    fcn.00435480();\n    *(*0x20 + -0x128) = 0x458956;\n    fcn.00435d80();\n    *(*0x20 + -0x128) = 0x458965;\n    fcn.00435a80();\n    *(*0x20 + -0x128) = 0x45896a;\n    fcn.004356e0();\n    *(*0x20 + -0x128) = 0x45896f;\n    fcn.00435500();\n    *(*0x20 + -0x128) = 0x458985;\n    fcn.00433ce0();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x004589a3:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x458b6b;\n            fcn.0045eee0(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x4589f5;\n        uVar8 = fcn.00457940(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x458a1b;\n        fcn.00457940(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x458a39;\n        cVar7 = fcn.00402620(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x458a74;\n        cVar7 = fcn.004582e0(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x458a92;\n        uVar8 = fcn.00457a00(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x458ab8;\n        fcn.00457a00(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x458ad5;\n        cVar7 = fcn.00402620(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x458b70;\n    fcn.0045eee0(uVar16);\n    goto code_r0x00458b70;\n}\n",
        "token_count": 6379
    },
    "0048b7c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.0048b7c0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 323
    },
    "004a6340": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nulong fcn.004a6340(uint8_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *in_RAX;\n    ulong uVar7;\n    uint8_t *puVar8;\n    uint8_t *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x004a6340:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\ncode_r0x004a6370:\n        if ((unaff_RBX == NULL) || (unaff_RDI == NULL)) {\n            if (unaff_RDI == unaff_RBX) {\n                *(*0x20 + -0x60) = 0x4a6519;\n                uVar7 = fcn.00402620(unaff_RBX, unaff_RBX);\n            }\n            else {\n                uVar7 = 0;\n            }\n            return uVar7;\n        }\n        *(*0x20 + -0x28) = unaff_RDI;\n        *(*0x20 + -0x10) = arg1;\n        uVar4 = *in_RAX;\n        if (*in_RAX < 0x80) {\n            puVar8 = unaff_RBX + -1;\n            in_RAX = in_RAX + (-puVar8 >> 0x3f & 1);\n            unaff_RBX = unaff_RDI;\n        }\n        else {\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x60) = 0x4a63c5;\n            uVar4 = fcn.0047e620();\n            arg1 = *(*0x20 + -0x30);\n            if (arg1 < unaff_RBX) goto code_r0x004a654e;\n            puVar8 = arg1 + -unaff_RBX;\n            in_RAX = *(*0x20 + -0x18) + (unaff_RBX & -puVar8 >> 0x3f);\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX = *(*0x20 + -0x28);\n        }\n        *(*0x20 + -0x30) = puVar8;\n        *(*0x20 + -0x18) = in_RAX;\n        uVar5 = *arg1;\n        if (*arg1 < 0x80) {\n            unaff_RDI = unaff_RBX + -1;\n            arg1 = arg1 + (-unaff_RDI >> 0x3f & 1);\n            unaff_RBX = puVar8;\n        }\n        else {\n            *(*0x20 + -0x3c) = uVar4;\n            *(*0x20 + -0x60) = 0x4a6435;\n            uVar5 = fcn.0047e620();\n            arg1 = *(*0x20 + -0x28);\n            if (arg1 < unaff_RBX) goto code_r0x004a6546;\n            unaff_RDI = arg1 + -unaff_RBX;\n            arg1 = *(*0x20 + -0x10) + (unaff_RBX & -unaff_RDI >> 0x3f);\n            in_RAX = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + -0x30);\n            uVar4 = *(*0x20 + -0x3c);\n        }\n        if (uVar4 != uVar5) {\n            uVar3 = uVar5;\n            if (uVar5 < uVar4) {\n                uVar3 = uVar4;\n                uVar4 = uVar5;\n            }\n            if (uVar3 < 0x80) {\n                if ((0x19 < uVar4 - 0x41) || (uVar3 != uVar4 + 0x20)) {\n                    return 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x38) = unaff_RDI;\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x3c) = uVar4;\n                *(*0x20 + -0x60) = 0x4a64cf;\n                iVar6 = fcn.00485720();\n                iVar1 = *(*0x20 + -0x3c);\n                iVar2 = *(*0x20 + -0x40);\n                while ((iVar6 != iVar1 && (iVar6 < iVar2))) {\n                    *(*0x20 + -0x60) = 0x4a6528;\n                    iVar6 = fcn.00485720();\n                    iVar1 = *(*0x20 + -0x3c);\n                    iVar2 = *(*0x20 + -0x40);\n                }\n                if (iVar6 != iVar2) {\n                    return 0;\n                }\n                in_RAX = *(*0x20 + -0x18);\n                arg1 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n            }\n        }\n        goto code_r0x004a6370;\n    }\n    goto code_r0x004a6557;\ncode_r0x004a6546:\n    *(*0x20 + -0x60) = 0x4a654e;\n    fcn.0045efa0(arg1);\n    unaff_RDI = unaff_RBX;\ncode_r0x004a654e:\n    *(*0x20 + -0x60) = 0x4a6556;\n    in_RAX = fcn.0045efa0(arg1);\ncode_r0x004a6557:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x4a6570;\n    fcn.0045c800();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x004a6340;\n}\n",
        "token_count": 1635
    },
    "0047fd00": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047fd00(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    uVar4 = 0;\n    while( true ) {\n        uVar5 = -(unaff_RBX < 0x40);\n        uVar7 = uVar6;\n        if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) goto code_r0x0047fd7e;\n        if (*(in_RAX + 800) == uVar4 || *(in_RAX + 800) < uVar4) break;\n        if (799 < uVar4) {\n            fcn.0045eee0(800);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar6 = (*(uVar4 + in_RAX) + uVar6 * 10) - 0x30;\n        uVar4 = uVar4 + 1;\n    }\n    if (uVar6 == 0) {\n        *(in_RAX + 800) = 0;\n        return;\n    }\ncode_r0x0047fecf:\n    uVar7 = uVar6;\n    if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) {\ncode_r0x0047fd7e:\n        *(in_RAX + 0x328) = (*(in_RAX + 0x328) - uVar4) + 1;\n        uVar3 = unaff_RBX;\n        uVar6 = (1 << (uVar3 & 0x3f) & uVar5) - 1;\n        uVar9 = 0;\n        for (; *(in_RAX + 800) != uVar4 && uVar4 <= *(in_RAX + 800); uVar4 = uVar4 + 1) {\n            if (799 < uVar4) goto code_r0x0047feb5;\n            uVar1 = *(uVar4 + in_RAX);\n            if (799 < uVar9) goto code_r0x0047fea8;\n            *(in_RAX + uVar9) = (uVar7 >> (uVar3 & 0x3f) & uVar5) + 0x30;\n            uVar9 = uVar9 + 1;\n            uVar7 = (uVar1 + (uVar7 & uVar6) * 10) - 0x30;\n        }\n        while (uVar7 != 0) {\n            uVar8 = uVar7 >> (uVar3 & 0x3f) & uVar5;\n            uVar4 = uVar7 & uVar6;\n            if (uVar9 < 800) {\n                if (799 < uVar9) goto code_r0x0047fe9b;\n                *(in_RAX + uVar9) = uVar8 + '0';\n                uVar9 = uVar9 + 1;\n            }\n            else if (uVar8 != 0) {\n                *(in_RAX + 0x331) = 1;\n            }\n            uVar7 = uVar4 * 10;\n        }\n        *(in_RAX + 800) = uVar9;\n        do {\n            uVar4 = *(in_RAX + 800);\n            if (uVar4 < 1) {\ncode_r0x0047fe77:\n                if (uVar4 == 0) {\n                    *(in_RAX + 0x328) = 0;\n                }\n                return;\n            }\n            if (799 < uVar4 - 1) goto code_r0x0047fe8e;\n            uVar3 = *((uVar4 - 1) + in_RAX);\n            uVar5 = uVar3;\n            if (uVar3 != 0x30) goto code_r0x0047fe77;\n            *(in_RAX + 800) = uVar4 - 1;\n        } while( true );\n    }\n    goto code_r0x0047fec5;\ncode_r0x0047fe8e:\n    fcn.0045eee0(800);\ncode_r0x0047fe9b:\n    fcn.0045eee0(800);\ncode_r0x0047fea8:\n    fcn.0045eee0(800);\ncode_r0x0047feb5:\n    unaff_RBX = 800;\n    in_RAX = fcn.0045eee0(800);\ncode_r0x0047fec5:\n    uVar6 = uVar6 * 10;\n    uVar4 = uVar4 + 1;\n    goto code_r0x0047fecf;\n}\n",
        "token_count": 1121
    },
    "0047ff00": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047ff00(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    uVar7 = *0x5cb0d8;\n    if (unaff_RBX < *0x5cb0d8) {\n        iVar9 = *(*0x5cb0d0 + unaff_RBX * 0x18);\n        uVar7 = *(in_RAX + 800);\n        if (uVar7 < 0x321) {\n            for (iVar6 = 0; iVar6 < *(*0x5cb0d0 + 0x10 + unaff_RBX * 0x18); iVar6 = iVar6 + 1) {\n                if (uVar7 <= iVar6) {\ncode_r0x0047ff7b:\n                    iVar9 = iVar9 + -1;\n                    break;\n                }\n                uVar1 = *(*(*0x5cb0d0 + 8 + unaff_RBX * 0x18) + iVar6);\n                if (uVar1 != *(iVar6 + in_RAX)) {\n                    if (*(iVar6 + in_RAX) < uVar1) goto code_r0x0047ff7b;\n                    break;\n                }\n            }\n            uVar4 = 0;\n            uVar5 = iVar9 + uVar7;\n            while (uVar7 = uVar7 - 1,  -1 < uVar7) {\n                uVar8 = uVar4 + (*(in_RAX + uVar7) - 0x30 << (unaff_RBX & 0x3f) & -(unaff_RBX < 0x40));\n                uVar4 = uVar8 / 10;\n                uVar8 = uVar8 % 10;\n                uVar3 = uVar5 - 1;\n                if (uVar3 < 800) {\n                    if (799 < uVar3) goto code_r0x004800fa;\n                    *((uVar5 - 1) + in_RAX) = uVar8 + '0';\n                    uVar5 = uVar3;\n                }\n                else {\n                    uVar5 = uVar3;\n                    if (uVar8 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            while (uVar4 != 0) {\n                uVar8 = uVar4 / 10;\n                uVar3 = uVar4 % 10;\n                uVar7 = uVar5 - 1;\n                uVar4 = uVar8;\n                if (uVar7 < 800) {\n                    if (799 < uVar7) goto code_r0x004800f0;\n                    *((uVar5 - 1) + in_RAX) = uVar3 + '0';\n                    uVar5 = uVar7;\n                }\n                else {\n                    uVar5 = uVar7;\n                    if (uVar3 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            iVar6 = *(in_RAX + 800) + iVar9;\n            *(in_RAX + 800) = iVar6;\n            if (799 < iVar6) {\n                *(in_RAX + 800) = 800;\n            }\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + iVar9;\ncode_r0x004800a5:\n            iVar9 = *(in_RAX + 800);\n            if (0 < iVar9) {\n                if (799 < iVar9 - 1U) {\n                    fcn.0045eee0(800);\ncode_r0x004800f0:\n                    fcn.0045eee0(800);\ncode_r0x004800fa:\n                    uVar7 = 800;\n                    fcn.0045eee0(800);\n                    goto code_r0x00480105;\n                }\n                if (*(iVar9 + -1 + in_RAX) == '0') goto code_r0x0048009e;\n            }\n            if (iVar9 == 0) {\n                *(in_RAX + 0x328) = 0;\n            }\n            return;\n        }\ncode_r0x00480105:\n        fcn.0045ef20(uVar7, 800);\n    }\n    fcn.0045ef00(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\ncode_r0x0048009e:\n    *(in_RAX + 800) = iVar9 - 1U;\n    goto code_r0x004800a5;\n}\n",
        "token_count": 1086
    },
    "00404a40": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404a40(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404960(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404a40(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404ba5:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.00433ce0();\n            arg1 = in_R8;\n            goto code_r0x00404ba5;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404a40(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 880
    },
    "0040ce20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ce20(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x5607a0);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x4ee4e0 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x5607a8) - dVar5)) - *0x4ee558;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x4ee5a0 + 1;\n    }\n    fcn.0045ef00(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 509
    },
    "0048b980": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0048b980(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n        return *(in_RAX + 0x40);\n    }\n    fcn.0048b900();\n    return unaff_RBX;\n}\n",
        "token_count": 142
    },
    "0048e180": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.0048e180(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = arg1 & 0x1f;\n            if (uVar3 == 0x14) {\n                *(*0x20 + -0x48) = 0x48e23d;\n                iVar2 = fcn.0048b980();\n                if (iVar2 == 0) {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                }\n                else {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                    if (iVar2 != 0) {\n                        iVar2 = *(iVar2 + 8);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar4;\n                iVar2 = *(*0x20 + -0x18);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                return iVar2;\n            }\n            if (uVar3 == 0x16) {\n                if ((arg1 >> 7 & 1) == 0) goto code_r0x0048e201;\n                if ((*(in_RAX + 0x17) & 0x20) == 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x48e1e7;\n                    cVar1 = fcn.004597a0();\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0x48) = 0x48e2ea;\n                        fcn.00433560();\n                        goto code_r0x0048e2ea;\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                unaff_RBX = *unaff_RBX;\ncode_r0x0048e201:\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                return *(in_RAX + 0x30);\n            }\ncode_r0x0048e2ea:\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x48) = 0x48e2fb;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x12;\n            *unaff_RBX = 0x4cb36b;\n            arg1 = *(*0x20 + -0x30);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x48) = 0x48e325;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x48e33a;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1008
    },
    "0048e4a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0048e4a0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            if (arg1 == 0x11) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return *(in_RAX + 0x30);\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                        return *(in_RAX + 0x30);\n                    }\n                }\n                else {\n                    if (arg1 == 0x18) {\n                        if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                            return *0x5d1c58;\n                        }\n                        *(*0x20 + -0x28) = 0x48e5bf;\n                        fcn.00433560();\n                    }\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x28) = 0x48e5d0;\n                    puVar1 = fcn.0040cc20();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4cb973;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar1[2] = arg1;\n                    *(*0x20 + -0x28) = 0x48e5fa;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x28) = 0x48e60d;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4ee830;\n            *(*0x20 + -0x28) = 0x48e625;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48e63f;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 806
    },
    "0048e660": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.0048e660(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((unaff_DIL == '\\0') || ((arg1 & 0x60) == 0)) {\n                    if ((arg1 >> 9 & 1) != 0) {\n                        unaff_RBX = 0x9;\n                        *(*0x20 + -0x40) = 0x48e6bd;\n                        fcn.0048ad40(in_RAX);\n                        arg1 = in_RAX;\n                    }\n                    if ((arg1 & 0x1f) == 0x14) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x40) = 0x48e6d6;\n                        iVar1 = fcn.0048ede0(arg1);\n                        if (iVar1 != 0) {\n                            iVar1 = **(*0x20 + -0x10);\n                            if (iVar1 != 0) {\n                                iVar1 = *(iVar1 + 8);\n                            }\n                            return iVar1;\n                        }\n                        return **(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x40) = 0x48e71b;\n                    iVar1 = fcn.0048cb00(arg1);\n                    return iVar1;\n                }\n                *(*0x20 + -0x40) = 0x48e738;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x40) = 0x48e745;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4ccdd8;\n            *unaff_RBX = 0x4ccdd8;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x40) = 0x48e76e;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        puVar2[0x20] = unaff_DIL;\n        *(puVar2 + -8) = 0x48e788;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_DIL = puVar2[0x20];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 795
    },
    "0048f3e0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0048f3e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *noname_1;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 & 0x1f) == 0x18) {\n            return *unaff_RBX;\n        }\n        iVar1 = fcn.0048f4c0(arg1);\n        noname_1 = *(iVar1 + 0xf8);\n        (*noname_1)();\n        uVar2 = fcn.0044aca0(1, noname_1, 0x4c8dfc, 7);\n        return uVar2;\n    }\n    return 0x4ca653;\n}\n",
        "token_count": 238
    },
    "0048f4c0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0048f4c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x4ef0c0;\n                }\n                uVar1 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (uVar1 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar1) {\n                        *(*0x20 + -0x30) = 0x48f51d;\n                        fcn.0045a5c0();\n                        return 0x4ef0c0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x30) = 0x48f545;\n                    fcn.0048b900();\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x48f565;\n                        fcn.0045a5c0();\n                        return 0x4ef0c0;\n                    }\n                    *(*0x20 + -0x30) = 0x48f5a5;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0x30) = 0x48f5b8;\n                fcn.00433560();\n            }\n            *(*0x20 + -0x30) = 0x48f5c5;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4cb37d;\n            *unaff_RBX = 0x4cb37d;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x48f5ee;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48f605;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "00441dc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00441dc0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x5d31e0;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d31f0 == 0) {\n                return 0;\n            }\n            if (*0x626650 != 0) {\n                if (*0x626650 == -1) {\n                    iVar1 = -*0x5d31f0;\n                }\n                else {\n                    iVar1 = *0x5d31f0 / *0x626650;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x5d31f0 < iVar1 + 1) {\n                    iVar3 = *0x5d31f0;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x5d31f0 = *0x5d31f0 - iVar3;\n                if ((*0x5d31e0 != 0) && (*0x5d31e0 = *(*0x5d31e0 + 0xa0),  *0x5d31e0 == 0)) {\n                    *0x5d31e8 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x5d31e0 != 0) && (*0x5d31e0 = *(*0x5d31e0 + 0xa0),  *0x5d31e0 == 0)) {\n                        *0x5d31e8 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x441e87;\n                    fcn.00442240(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x441edb;\n            in_RAX = fcn.00432260();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x441eea;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "0044d5c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044d5c0(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX == NULL) {\n        return 0;\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 4);\n    }\n    for (iVar2 = 0x561f60; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044d63c;\n    }\n    iVar2 = 0;\ncode_r0x0044d63c:\n    uVar1 = fcn.0044df00(in_RAX, iVar2);\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "0044d680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044d680(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 2);\n    }\n    for (iVar2 = 0x561f60; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044d6dc;\n    }\n    iVar2 = 0;\ncode_r0x0044d6dc:\n    uVar1 = fcn.0044d2a0(iVar2);\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "0044e220": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044e220(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044d900(*(in_RAX + 0x14));\n        iVar2 = fcn.0044d900(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044e120(uVar1);\n            return uVar3;\n        }\n        return 0x4c8757;\n    }\n    return 0x4c8757;\n}\n",
        "token_count": 264
    },
    "00457480": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00457480(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x561f60; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004574dc;\n            }\n            iVar2 = 0;\ncode_r0x004574dc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45755c;\n                fcn.0040ab40();\n                *(*0x20 + -0x58) = 0x457573;\n                puVar1 = fcn.0040f600(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x45758a;\n                fcn.0040ad60();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x457599;\n                fcn.00435480();\n                *(*0x20 + -0x58) = 0x4575aa;\n                fcn.00435d80();\n                *(*0x20 + -0x58) = 0x4575b6;\n                fcn.00435be0();\n                *(*0x20 + -0x58) = 0x4575c7;\n                fcn.00435d80();\n                *(*0x20 + -0x58) = 0x4575d1;\n                fcn.00435be0();\n                *(*0x20 + -0x58) = 0x4575e5;\n                fcn.00435d80();\n                *(*0x20 + -0x58) = 0x4575ea;\n                fcn.00435500();\n                iVar2 = 0x561f60;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x45761f;\n                    fcn.00435480();\n                    *(*0x20 + -0x58) = 0x457630;\n                    fcn.00435d80();\n                    *(*0x20 + -0x58) = 0x45763a;\n                    fcn.00435be0();\n                    *(*0x20 + -0x58) = 0x45764b;\n                    fcn.00435d80();\n                    *(*0x20 + -0x58) = 0x457655;\n                    fcn.00435be0();\n                    *(*0x20 + -0x58) = 0x45765a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x58) = 0x45765f;\n                    fcn.00435500();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x220);\n                }\n                *(*0x20 + -0x58) = 0x457685;\n                fcn.00433ce0();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x457505;\n                puVar1 = fcn.0040f600(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x457694;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x4576a5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4576b1;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x4576c5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4576cf;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x4576e5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4576ef;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x4576f4;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4576f9;\n            fcn.00435500();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x45770a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x457719;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1662
    },
    "0046e880": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0046e880(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x5d21b0;\n            *(*0x20 + -0x60) = 0x46e8b9;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x46e8ef;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x46e92f;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x46e965;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x46e97a;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 587
    },
    "00424b80": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00424b80(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00424c59:\n        fcn.0045ef00(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10190 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045ef00(0x40);\n                goto code_r0x00424c59;\n            }\n            iVar3 = *(*(in_RAX + 0x10190 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 453
    },
    "00424c80": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00424c80(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x424d8c;\n                        fcn.00433ce0();\n                        goto code_r0x00424d8c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x00424d8c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x424d99;\n            in_RAX = fcn.0045ef00(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x424dae;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 905
    },
    "00427180": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00427180(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x004275a5;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x00427598;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x42738f;\n                iVar1 = fcn.0042a320(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x00427590;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x004273d2;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x42727f;\n                    uVar2 = fcn.0042a320(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x004275ad;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x42731d;\n                                    fcn.0045f580();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x004275ad;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00427636;\n                            }\n                            *(*0x20 + -0xc0) = 0x42764d;\n                            fcn.0045efc0(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x427658;\n                        fcn.0045ef80(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x427665;\n                    fcn.0045ef00(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x427672;\n                uVar2 = fcn.0045ef00(0x2000);\n                goto code_r0x00427672;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x00427603;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x004276f9;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x4276df;\n                uVar2 = fcn.0042a320(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00427672:\n                *(*(*0x20 + -0x18) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x4276f9;\n            fcn.0045ef00(uVar5);\ncode_r0x004276f9:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x427706;\n            in_RAX = fcn.0045ef00(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x427725;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x00427603:\n    iVar6 = *(*0x20 + 8);\ncode_r0x004273d2:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x004273f7:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x55d8c0);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x55d848);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x55d888);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x004273ee;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00427577:\n            *(*0x20 + -0xc0) = 0x427585;\n            fcn.0045efa0(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x42752d;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.00428f40(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x427577;\n            fcn.0045eee0(uVar9);\n            goto code_r0x00427577;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x427590;\n    fcn.0045ef60(uVar10, noname_1);\ncode_r0x00427590:\n    *(*0x20 + -0xc0) = 0x427598;\n    fcn.0045ef00(uVar10);\ncode_r0x00427598:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x4275a5;\n    fcn.0045ef00(0x2000);\ncode_r0x004275a5:\n    *(*0x20 + -0xc0) = 0x4275ad;\n    fcn.0045ef00(uVar5);\ncode_r0x004275ad:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x4275e5;\n            uVar2 = fcn.0042a320(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x004275f7;\n            *(*0x20 + -0xc0) = 0x427618;\n            fcn.0045ef00(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x427625;\n        iVar1 = fcn.0045ef00(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00427636:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x004273ee:\n    iVar1 = iVar1 + -1;\n    goto code_r0x004273f7;\ncode_r0x004275f7:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x00427603;\n}\n",
        "token_count": 3655
    },
    "00427c00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.00427c00(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00428799:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4287a8;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x55c3d0;\n    *(*0x20 + -0x28) = *0x55c3b0;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x4287c0;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x00427cc0:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x427e13;\n            iVar3 = fcn.0042a500(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x90) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x427e70;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x427e85;\n                fcn.00427b20();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0xf8) = uVar11;\n                *(*0x20 + -0xf0) = uVar9;\n                if (-1 < uVar7) goto code_r0x0042802d;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0x100) = uVar7;\n                    *(*0x20 + -0x120) = 0x427f3b;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x427f4c;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427f56;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x427f67;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427f74;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x427f85;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427f8f;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x427fa5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427faf;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x427fc5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427fcf;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x427fe5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x427fea;\n                    fcn.00435500();\n                    *(*0x20 + -0x120) = 0x427fef;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x428005;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x428012;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x428017;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x42801c;\n                    fcn.00435500();\n                    *(*0x20 + -0x120) = 0x42802d;\n                    fcn.00433ce0();\ncode_r0x0042802d:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x428058;\n            fcn.0045eee0(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x428065;\n        fcn.0045ef00(0x2000);\n        goto code_r0x00428065;\n    }\n    param_3 = 0x55d840;\n    uVar11 = *(puVar2 * 8 + 0x55d840);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x55d880;\n    unaff_R15 = *(puVar2 * 8 + 0x55d880);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x55d8c0;\n            uVar9 = *(puVar2 * 8 + 0x55d8c0);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x004282e0:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x4285b0;\n                        fcn.00427b20();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -200) = unaff_R15;\n                    *(*0x20 + -0xc0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = arg2;\n                    *(*0x20 + -0x120) = 0x428372;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x428385;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x428399;\n                    fcn.00435b80(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x4283aa;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x4283b4;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x4283c5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x4283cf;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x4283e5;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x4283ef;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x428405;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x42840f;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x428414;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428419;\n                    fcn.00435500();\n                    *(*0x20 + -0x120) = 0x42841e;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x42842f;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x42843c;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x42844d;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x42845a;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x42846b;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x428478;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x42847d;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428485;\n                    fcn.00435500();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x4284a5;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x4284b6;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x4284c5;\n                    fcn.00435be0();\n                    *(*0x20 + -0x120) = 0x4284d6;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x4284e5;\n                    fcn.00435b80();\n                    *(*0x20 + -0x120) = 0x4284ea;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x4284ef;\n                    fcn.00435500();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x55d8c0);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x55d840);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x428525;\n                    fcn.00435480();\n                    *(*0x20 + -0x120) = 0x428536;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x428545;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x428556;\n                    fcn.00435d80();\n                    *(*0x20 + -0x120) = 0x428565;\n                    fcn.00435a80();\n                    *(*0x20 + -0x120) = 0x42856a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x42856f;\n                    fcn.00435500();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -0xe0) = param_4;\n                        *(*0x20 + -0xd8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xe8) = uVar7;\n                        *(*0x20 + -0x120) = 0x42860b;\n                        fcn.00435480();\n                        *(*0x20 + -0x120) = 0x42861c;\n                        fcn.00435d80();\n                        *(*0x20 + -0x120) = 0x428629;\n                        fcn.00435b80();\n                        *(*0x20 + -0x120) = 0x42863a;\n                        fcn.00435d80();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x428656;\n                        fcn.00435b80();\n                        *(*0x20 + -0x120) = 0x428667;\n                        fcn.00435d80();\n                        *(*0x20 + -0x120) = 0x428671;\n                        fcn.00435a80();\n                        *(*0x20 + -0x120) = 0x428685;\n                        fcn.00435d80();\n                        *(*0x20 + -0x120) = 0x42868f;\n                        fcn.00435a80();\n                        *(*0x20 + -0x120) = 0x4286a5;\n                        fcn.00435d80();\n                        *(*0x20 + -0x120) = 0x4286af;\n                        fcn.00435a80();\n                        *(*0x20 + -0x120) = 0x4286c5;\n                        fcn.00435d80();\n                        *(*0x20 + -0x120) = 0x4286ca;\n                        fcn.00435500();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x42877d;\n                    fcn.00433ce0();\ncode_r0x0042877d:\n                    *(*0x20 + -0x120) = 0x428788;\n                    fcn.0045eee0(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x0042877d;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00428065;\n                }\n                *(*0x20 + -0x80) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x42810e;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x55d8c0;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x004282e0;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00427c99;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x55d8c0;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00428065;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x55d8c0;\ncode_r0x00428065:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x428790;\n        fcn.0045efa0(arg1);\n    }\n    *(*0x20 + -0x120) = 0x428798;\n    in_RAX = fcn.0045ef60(arg1, arg2);\n    goto code_r0x00428799;\ncode_r0x00427c99:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x00427cc0;\n}\n",
        "token_count": 5941
    },
    "004597a1": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004597a1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 288
    },
    "0043bd80": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043bd80(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar4 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x43be35;\n                    fcn.0040ab40();\n                    *(*0x20 + -0x28) = 0x43be3a;\n                    uVar2 = fcn.00442120();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43be4d;\n                    fcn.0040ad60();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43be6b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045eee0(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x43be8f;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 870
    },
    "0043bec0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043bec0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1208);\n            iVar6 = *(iVar3 + 0x1210);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045eee0(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0040b800": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b800(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x0040b800:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40b85f;\n        uVar2 = fcn.0040d360(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040b87c;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b0);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040bc6b:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40bc85;\n                    iVar3 = fcn.0040bea0(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16ba8;\n                    *(*0x20 + -0xa0) = 0x40bcb4;\n                    puVar4 = fcn.00417440();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x5f8c90;\n                    *(*0x20 + -0xa0) = 0x40bcdf;\n                    *0x5f8c90 = puVar4;\n                    piVar5 = fcn.00417440();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x5f8c90;\n                    *0x5f8c90 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x4ce228;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x4ceeaa;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x4cf24f;\n                }\n                if (iVar3 != 0) goto code_r0x0040bdde;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040bdcd;\ncode_r0x0040b87c:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040bb1a;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2032];\n                    puVar10 = puVar11 + puVar10 + 0x2032;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40b935;\n                        uVar2 = fcn.0040cf80(0);\n                        if (uVar2 == 0) goto code_r0x0040bb09;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    uVar7 = uVar9 & 0xfffff;\n                    in_R11 = *(uVar2 + uVar7 * 8);\n                    uVar9 = uVar2 + uVar7 * 8;\n                    if (in_R11 != 0) goto code_r0x0040baf8;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40b9ac;\n                    iVar3 = fcn.0040d360(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40b9c7;\n                        iVar3 = fcn.0040cf80(0x628318);\n                        if (iVar3 == 0) goto code_r0x0040bae7;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207d];\n                    if (puVar10[0x207c] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x626798;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40ba1b;\n                        uVar2 = fcn.0040cf80(0x628318);\n                        if (uVar2 == 0) goto code_r0x0040bad6;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207b];\n                        puVar10[0x207b] = uVar2;\n                        puVar10[0x207d] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207c];\n                        if (puVar10[0x207c] < puVar10[0x207c]) {\n                            uVar2 = puVar10[0x207c];\n                        }\n                        if (puVar10[0x207b] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40ba79;\n                            fcn.0045f840(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207c];\n                    uVar9 = puVar10[0x207d];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040bad1;\n                    puVar10[0x207c] = uVar2;\n                    uVar9 = puVar10[0x207b];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40bad1;\n                fcn.0045eee0(uVar2);\ncode_r0x0040bad1:\n                *(*0x20 + -0xa0) = 0x40bad6;\n                fcn.0045ef60(uVar2, uVar9);\ncode_r0x0040bad6:\n                *(*0x20 + -0xa0) = 0x40bae7;\n                fcn.00433ce0();\ncode_r0x0040bae7:\n                *(*0x20 + -0xa0) = 0x40baf8;\n                fcn.00433ce0();\ncode_r0x0040baf8:\n                *(*0x20 + -0xa0) = 0x40bb09;\n                fcn.00433ce0();\ncode_r0x0040bb09:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40bb1a;\n                fcn.00433ce0();\n                uVar2 = in_R11;\ncode_r0x0040bb1a:\n                *(*0x20 + -0xa0) = 0x40bb27;\n                fcn.0045ef00(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40bbce;\n                    uVar2 = fcn.00416300();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040bc6b;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40bc1b;\n                    fcn.004161c0(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b0) = puVar10[2];\n            *(uVar9 + 0x16bd8) = *(uVar9 + 0x16bd8) - *(uVar9 + 0x16ba8);\n            *puVar10 = *(uVar9 + 0x16bc0);\n            *(uVar9 + 0x16bc0) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040be70;\ncode_r0x0040bdcd:\n    *(*0x20 + -0xa0) = 0x40bdde;\n    fcn.00433ce0();\ncode_r0x0040bdde:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40bdf7;\n    fcn.00435480();\n    *(*0x20 + -0xa0) = 0x40be08;\n    fcn.00435d80();\n    *(*0x20 + -0xa0) = 0x40be12;\n    fcn.00435be0();\n    *(*0x20 + -0xa0) = 0x40be25;\n    fcn.00435d80();\n    *(*0x20 + -0xa0) = 0x40be2f;\n    fcn.00435be0();\n    *(*0x20 + -0xa0) = 0x40be45;\n    fcn.00435d80();\n    *(*0x20 + -0xa0) = 0x40be54;\n    fcn.00435d80();\n    *(*0x20 + -0xa0) = 0x40be59;\n    fcn.004356e0();\n    *(*0x20 + -0xa0) = 0x40be5e;\n    fcn.00435500();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40be6f;\n    in_RAX = fcn.00433ce0();\ncode_r0x0040be70:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40be7f;\n    fcn.0045c800();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x0040b800;\n}\n",
        "token_count": 3586
    },
    "00435a80": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00435a80(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x435acf;\n            uVar1 = fcn.0045f1ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x435b3f;\n                fcn.00435560(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x435b5c;\n            in_RAX = fcn.0045efa0(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x435b67;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00467e40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.00467e40(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4c8751;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00467f53;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x00467ffd;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x00467fba;\n            *(*0x20 + -0x80) = 0x467ffd;\n            fcn.0045eee0(0x14);\ncode_r0x00467ffd:\n            *(*0x20 + -0x80) = 0x46800a;\n            in_RAX = fcn.0045eee0(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x468015;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x00467ecd:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x00467f00;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00467f46;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x00467ecd;\ncode_r0x00467fba:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x467fe5;\n    fcn.0044afa0(-(uVar4 - 0x14));\n    goto code_r0x00467f53;\ncode_r0x00467f00:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x467f2e;\n        uVar3 = fcn.0044afa0(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x467f46;\n    fcn.0045eee0(0x14);\ncode_r0x00467f46:\n    *(*0x20 + -0x80) = 0x467f53;\n    fcn.0045eee0(0x14);\ncode_r0x00467f53:\n    *(*0x20 + -0x80) = 0x467f6c;\n    uVar3 = fcn.0044ac00(1);\n    return uVar3;\n}\n",
        "token_count": 1023
    },
    "004292a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.004292a0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004292a0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x429740;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x4296c0;\n            *(*0x20 + -0x18) = 0x4d2838;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x42936a;\n            uVar2 = fcn.0042bc20(0x4d2838, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x4293a5;\n                arg1 = fcn.0042b960();\n                *(*0x20 + -0xa8) = 0x4293ca;\n                iVar3 = (**0x4d2838)(uVar4, 0x4d2838);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042960f;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x626798;\n                uVar2 = (*0x626798 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x00429605;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x004295f5;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x429487;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x42949c;\n                    arg2 = fcn.0042b9e0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x004295ed;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x4294fc;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x429511;\n                    arg2 = fcn.0042b9e0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x42958e;\n                    fcn.0042cce0();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x4295bc;\n                    fcn.00415f60(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x0042961a;\n    }\n    goto code_r0x0042967c;\ncode_r0x004295ed:\n    *(*0x20 + -0xa8) = 0x4295f5;\n    fcn.0045eee0(arg1_01);\ncode_r0x004295f5:\n    *(*0x20 + -0xa8) = 0x429605;\n    fcn.0045eee0(arg1_01);\ncode_r0x00429605:\n    *(*0x20 + -0xa8) = 0x42960f;\n    fcn.0045eee0(arg1_00);\ncode_r0x0042960f:\n    *(*0x20 + -0xa8) = 0x42961a;\n    fcn.0045ef60(arg1, arg2);\ncode_r0x0042961a:\n    *(*0x20 + -0xa8) = 0x42961f;\n    fcn.00435480();\n    *(*0x20 + -0xa8) = 0x429630;\n    fcn.00435d80();\n    *(*0x20 + -0xa8) = 0x42963d;\n    fcn.00435be0();\n    *(*0x20 + -0xa8) = 0x42964e;\n    fcn.00435d80();\n    *(*0x20 + -0xa8) = 0x42965b;\n    fcn.00435be0();\n    *(*0x20 + -0xa8) = 0x429665;\n    fcn.004356e0();\n    *(*0x20 + -0xa8) = 0x42966a;\n    fcn.00435500();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x42967b;\n    in_RAX = fcn.00433ce0();\ncode_r0x0042967c:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x429690;\n    fcn.0045c800();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x004292a0;\n}\n",
        "token_count": 2329
    },
    "00437b00": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00437b00(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *0x62663c = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x5d3264 = 0x7fffffff;\n        *0x5d3260 = 1;\n        cVar1 = fcn.00441160();\n        if (cVar1 == '\\0') break;\n        fcn.00431200();\n    }\n    fcn.00431200();\n    fcn.00441160();\n    fcn.00431200();\n    return;\n}\n",
        "token_count": 207
    },
    "00456aa0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00456aa0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044d780();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x24);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.0044df00();\n        if (unaff_RBX < 8) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar4 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x626605 ^ 1;\n}\n",
        "token_count": 328
    },
    "00438520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.00438520(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x438573;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x438586;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "00468fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t fcn.00468fe0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    bool bVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RSI == 0) {\n        if (arg1 < unaff_RBX + 2) {\n            in_RAX = fcn.00447240(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x2222;\n        return in_RAX;\n    }\n    bVar3 = false;\n    bVar4 = false;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        uVar1 = *(unaff_RDI + iVar7);\n        if (uVar1 < 0x21) {\n            if ((uVar1 == 9) || (uVar1 == 0x20)) {\n                bVar4 = true;\n            }\n        }\n        else if ((uVar1 == 0x22) || (uVar1 == 0x5c)) {\n            bVar3 = true;\n        }\n    }\n    if (!bVar3) {\n        if (!bVar4) {\n            if (arg1 < unaff_RBX + unaff_RSI) {\n                in_RAX = fcn.00447240(unaff_RBX);\n            }\n            fcn.0045f840(unaff_RSI);\n            return in_RAX;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00447240(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        uVar10 = unaff_RSI + uVar8;\n        if (arg1 < uVar10) {\n            arg1 = uVar8;\n            iVar7 = fcn.00447240(uVar8);\n        }\n        fcn.0045f840(unaff_RSI);\n        if (arg1 < unaff_RSI + uVar8 + 1) {\n            iVar7 = fcn.00447240(uVar10);\n        }\n        *(iVar7 + uVar10) = 0x22;\n        return iVar7;\n    }\n    if (bVar4) {\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00447240(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        in_RAX = iVar7;\n        unaff_RBX = uVar8;\n    }\n    iVar9 = 0;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        cVar2 = *(unaff_RDI + iVar7);\n        iVar5 = in_RAX;\n        uVar8 = unaff_RBX;\n        if (cVar2 == '\\\"') {\n            for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n                uVar10 = uVar8 + 1;\n                iVar6 = iVar5;\n                if (arg1 < uVar10) {\n                    arg1 = uVar8;\n                    iVar6 = fcn.00447240(uVar8);\n                    uVar10 = iVar5 + 1;\n                }\n                *(iVar6 + uVar8) = 0x5c;\n                iVar5 = iVar6;\n                uVar8 = uVar10;\n            }\n            unaff_RBX = uVar8 + 1;\n            in_RAX = iVar5;\n            if (arg1 < unaff_RBX) {\n                arg1 = uVar8;\n                in_RAX = fcn.00447240(uVar8);\n                unaff_RBX = iVar5 + 1;\n            }\n            *(in_RAX + uVar8) = 0x5c;\n        }\n        else if (cVar2 == '\\\\') {\n            iVar9 = iVar9 + 1;\n        }\n        else {\n            iVar9 = 0;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar5 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar5 = fcn.00447240(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar5 + unaff_RBX) = cVar2;\n        in_RAX = iVar5;\n        unaff_RBX = uVar8;\n    }\n    if (bVar4) {\n        for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n            uVar8 = unaff_RBX + 1;\n            iVar7 = in_RAX;\n            if (arg1 < uVar8) {\n                arg1 = unaff_RBX;\n                iVar7 = fcn.00447240(unaff_RBX);\n                uVar8 = in_RAX + 1;\n            }\n            *(iVar7 + unaff_RBX) = 0x5c;\n            in_RAX = iVar7;\n            unaff_RBX = uVar8;\n        }\n        if (arg1 < unaff_RBX + 1) {\n            in_RAX = fcn.00447240(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x22;\n    }\n    return in_RAX;\n}\n",
        "token_count": 1396
    },
    "0048ac00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0048ac00(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x48ac3c;\n                    fcn.0045aae0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x48ac53;\n                fcn.0045eee0(9);\n            }\n            unaff_RBX = 0x4ee670;\n            *(*0x20 + -0x28) = 0x48ac66;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x48ac85;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "0048aca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0048aca0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x48acdc;\n                    fcn.0045aae0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x48acf3;\n                fcn.0045eee0(9);\n            }\n            unaff_RBX = 0x4ee670;\n            *(*0x20 + -0x28) = 0x48ad06;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x48ad25;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "00483b20": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00483b20(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_RAX << 8;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                iVar5 = (arg1 + 0x15cU) * 0x10;\n                uVar1 = *(iVar5 + 0x56bba4);\n                uVar2 = *(iVar5 + 0x56bba8);\n                uVar3 = *(iVar5 + 0x56bbac);\n                *(*0x20 + -0x18) = *(iVar5 + 0x56bba0);\n                *(*0x20 + -0x14) = uVar1;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0xc) = uVar3;\n                if (arg1 < 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) + 1;\n                }\n                uVar6 = SUB168(ZEXT816(*(*0x20 + -0x18)) * ZEXT816(in_RAX) >> 0x40, 0);\n                uVar4 = SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX), 0);\n                return (SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX) >> 0x40, 0) + CARRY8(uVar4, uVar6)) * 0x200 |\n                       uVar4 + uVar6 >> 0x37;\n            }\n            unaff_RBX = 0x4eea20;\n            *(*0x20 + -0x30) = 0x483c14;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x483c29;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "0044ae80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.0044ae80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045f1b0();\n    fcn.0044a960(5);\n    return;\n}\n",
        "token_count": 136
    },
    "0046b6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.0046b6a0(void)\n\n{\n    uint *unaff_RBX;\n    int64_t unaff_R14;\n    uint uStack600;\n    ulong uStack596;\n    ulong uStack588;\n    ulong uStack580;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    ulong uStack556;\n    uchar auStack488 [452];\n    uint uStack36;\n    uint uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    uint uStack18;\n    uint uStack14;\n    \n    while (auStack488 < *(unaff_R14 + 0x10) || auStack488 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045f0f8();\n    fcn.0046cae0();\n    if (*0x20 == 0x258) {\n        *unaff_RBX = uStack600;\n        *(unaff_RBX + 1) = uStack596;\n        *(unaff_RBX + 3) = uStack588;\n        *(unaff_RBX + 5) = uStack580;\n        unaff_RBX[7] = uStack572;\n        unaff_RBX[8] = uStack568;\n        unaff_RBX[9] = uStack564;\n        unaff_RBX[10] = uStack560;\n        if (unaff_RBX != NULL) {\n            *(unaff_RBX + 0xb) = uStack556;\n            fcn.0045f3a0();\n        }\n        if (unaff_RBX != 0x2) {\n            *(unaff_RBX + 0x232) = uStack36;\n            *(unaff_RBX + 0x236) = uStack32;\n            *(unaff_RBX + 0x23a) = CONCAT22(uStack26, uStack28);\n            *(unaff_RBX + 0x23e) = CONCAT22(uStack22, uStack24);\n            unaff_RBX[0x8f] = CONCAT22(uStack24, uStack26);\n            unaff_RBX[0x90] = CONCAT22(uStack20, uStack22);\n            unaff_RBX[0x91] = uStack18;\n            unaff_RBX[0x92] = uStack14;\n        }\n    }\n    return;\n}\n",
        "token_count": 552
    },
    "0040a8e0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a8e0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x40a967;\n            fcn.00435480();\n            *(*0x20 + -0x40) = 0x40a978;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x40a985;\n            fcn.00435d00();\n            *(*0x20 + -0x40) = 0x40a996;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x40a9a5;\n            fcn.00435be0();\n            *(*0x20 + -0x40) = 0x40a9b6;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x40a9c5;\n            fcn.00435be0();\n            *(*0x20 + -0x40) = 0x40a9d6;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x40a9e5;\n            fcn.00435d00();\n            *(*0x20 + -0x40) = 0x40a9ea;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x40a9ef;\n            fcn.00435500();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x40aa05;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x40aa15;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 896
    },
    "0040aa40": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040aa40(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x40aa86;\n            fcn.00435480();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x40aa95;\n            fcn.00435480();\n            *(*0x20 + -0x30) = 0x40aaa6;\n            fcn.00435d80();\n            *(*0x20 + -0x30) = 0x40aab0;\n            fcn.00435be0();\n            *(*0x20 + -0x30) = 0x40aab5;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x40aaba;\n            fcn.00435500();\n            *(*0x20 + -0x30) = 0x40aacb;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x40aad6;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00422c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422c00(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x422c25;\n            fcn.00435480();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x422c45;\n            fcn.00435480();\n            *(*0x20 + -0x80) = 0x422c56;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x422c65;\n            fcn.00435d40();\n            *(*0x20 + -0x80) = 0x422c76;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x422c85;\n            fcn.00435a80();\n            *(*0x20 + -0x80) = 0x422c96;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x422ca5;\n            fcn.00435a80();\n            *(*0x20 + -0x80) = 0x422cb6;\n            fcn.00435d80();\n            *(*0x20 + -0x80) = 0x422cbb;\n            fcn.00435500();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x422d30;\n                fcn.00435480();\n                *(*0x20 + -0x80) = 0x422d3a;\n                fcn.00435be0();\n                *(*0x20 + -0x80) = 0x422d3f;\n                fcn.00435500();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x422d95;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x422da6;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x422dab;\n                    fcn.00435500();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422d78;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x422d89;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x422d8e;\n                    fcn.00435500();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x422de5;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x422df6;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x422dfb;\n                    fcn.00435500();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422dc5;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x422dd6;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x422ddb;\n                    fcn.00435500();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x422e29;\n                    fcn.00435480();\n                    *(*0x20 + -0x80) = 0x422e3a;\n                    fcn.00435d80();\n                    *(*0x20 + -0x80) = 0x422e3f;\n                    fcn.00435500();\n                }\n                *(*0x20 + -0x80) = 0x422e45;\n                fcn.00435480();\n                *(*0x20 + -0x80) = 0x422e4a;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x422e4f;\n                fcn.00435500();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x422e85;\n                    fcn.00435ee0(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x422ee5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422ef0;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1989
    },
    "00429880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00429880(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x004298db:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x004298e8:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x626615 == '\\0') {\n                    fcn.00401d00();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x004298db;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x004298e8;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "0042a320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a320(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x0042a4d5:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x0042a4d5;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1307
    },
    "0042a5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.0042a5c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042a64b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042a64b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 739
    },
    "0042c740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c740(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.0042cc00(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042c892:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040ab40();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040cf80(0x628318);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045f840(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042cb60();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040ad60(iVar1);\n            goto code_r0x0042c892;\n        }\n        fcn.0040ad60();\n    } while( true );\n}\n",
        "token_count": 551
    },
    "00479ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00479ca0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((arg1 == 0) || (arg1 == 0x5d29c0)) {\n        arg1 = fcn.0047a8c0();\n    }\n    if (in_RAX < 0) {\n        unaff_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;\n    }\n    iVar1 = unaff_RBX + -0xe7791f700;\n    if (arg1 != 0x5ced80) {\n        if (((*(arg1 + 0x60) == 0) || (*(arg1 + 0x50) != iVar1 && iVar1 <= *(arg1 + 0x50))) ||\n           (*(arg1 + 0x58) == iVar1 || *(arg1 + 0x58) < iVar1)) {\n            fcn.0047a980();\n            iVar1 = arg1 + unaff_RBX + -0xe7791f700;\n        }\n        else {\n            iVar1 = *(*(arg1 + 0x60) + 0x10) + unaff_RBX + -0xe7791f700;\n        }\n    }\n    return iVar1 + 0x7ffffffe1ad9c900;\n}\n",
        "token_count": 375
    },
    "00425540": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00425540(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10420);\n    uVar5 = -*0x626798 & (*0x626798 + uVar1) - 1;\n    if ((*(in_RAX + 0x10428) < uVar5) || (uVar1 < *(in_RAX + 0x10420))) {\n        iVar2 = fcn.0040b800();\n        if (iVar2 == 0) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.00435d80();\n            fcn.00435500();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10428)) {\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10428) - *(in_RAX + 0x10420);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00416400(0x6282b0);\n                LOCK();\n                *0x6282c0 = *0x6282c0 + arg1;\n                iVar3 = fcn.0042cda0();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.0042ce80();\n                fcn.00426f20(arg1);\n            }\n            *(in_RAX + 0x10420) = iVar2;\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x626798 & (*0x626798 + *(in_RAX + 0x10420) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10420);\n    *(in_RAX + 0x10420) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.00416400(0x6282b0);\n    LOCK();\n    *0x6282c0 = *0x6282c0 + iVar4;\n    iVar2 = fcn.0042cda0();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.0042ce80();\n    fcn.00426f20(iVar4);\n    return iVar4 + arg1;\n}\n",
        "token_count": 762
    },
    "0042fba0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042fba0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42fbd9;\n            fcn.0040ab40();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42fc4d;\n                        uVar1 = fcn.00458fa0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042fdc5;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42fc99;\n                        fcn.0042fe20(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042fdb3;\n                        *(arg1_01 * 2 + 0x627aa0) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042fda6;\n                        *(arg1_01 * 2 + 0x627aa0) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042fd99;\n                        *(arg1_01 * 2 + 0x627aa2) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42fd6f;\n                    fcn.0042fe20(uVar3);\n                    *(*0x20 + -0x78) = 0x42fd7d;\n                    fcn.0040ad60();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42fd99;\n                fcn.0045ef60(uVar3, 1000);\ncode_r0x0042fd99:\n                *(*0x20 + -0x78) = 0x42fda6;\n                fcn.0045eee0(1000);\ncode_r0x0042fda6:\n                *(*0x20 + -0x78) = 0x42fdb3;\n                fcn.0045eee0(1000);\ncode_r0x0042fdb3:\n                *(*0x20 + -0x78) = 0x42fdc5;\n                fcn.0045eee0(1000);\ncode_r0x0042fdc5:\n                *(*0x20 + -0x78) = 0x42fdd2;\n                fcn.0045ef60(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42fddf;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045ef20(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42fdf3;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1531
    },
    "0044b220": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0044b220(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x28) = arg1;\n                    *(*0x20 + -0x48) = 0x44b285;\n                    fcn.00458fa0(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + 0x18);\n                    arg1 = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x0044b2e2:\n                *(*0x20 + -0x48) = 0x44b2ea;\n                iVar2 = fcn.0044b8e0();\n                uVar4 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x0044b2fa:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = 0x44b345;\n                        uVar1 = fcn.00458fa0(uVar3);\n                        uVar5 = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar7 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x48) = 0x44b38c;\n                fcn.0045eee0(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x0044b2e2;\n                *(*0x20 + -0x50) = unaff_RBP;\n                *(*0x20 + -0x48) = 0x44b2cf;\n                iVar2 = fcn.0045f1a2();\n                unaff_RBP = *(*0x20 + -0x50);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x0044b2fa;\n                }\n            }\n            *(*0x20 + -0x48) = 0x44b399;\n            in_RAX = fcn.0045ef20(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x44b3ae;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1296
    },
    "0045c9a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045c9a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45cbe5;\n        fcn.0045c8e0();\n        uStack32 = 0x45cbf0;\n        (**ppcStackX16)();\n        uStack32 = 0x45cbfa;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45cc1d;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45cca5;\n        fcn.0045c8e0();\n        uStack48 = 0x45ccb0;\n        (**ppcStackX16)();\n        uStack48 = 0x45ccba;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45ccdd;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45cd65;\n        fcn.0045c8e0();\n        uStack80 = 0x45cd70;\n        (**ppcStackX16)();\n        uStack80 = 0x45cd7a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45cd9d;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45ce44;\n        fcn.0045c8e0();\n        uStack144 = 0x45ce52;\n        (**ppcStackX16)();\n        uStack144 = 0x45ce5f;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45ce8e;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45cf47;\n        fcn.0045c8e0();\n        uStack272 = 0x45cf55;\n        (**ppcStackX16)();\n        uStack272 = 0x45cf62;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45cf91;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45d047;\n        fcn.0045c8e0();\n        uStack528 = 0x45d055;\n        (**ppcStackX16)();\n        uStack528 = 0x45d062;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45d091;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45d147;\n        fcn.0045c8e0();\n        uStack1040 = 0x45d155;\n        (**ppcStackX16)();\n        uStack1040 = 0x45d162;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45d191;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45d247;\n        fcn.0045c8e0();\n        uStack2064 = 0x45d255;\n        (**ppcStackX16)();\n        uStack2064 = 0x45d262;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45d291;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45d34f;\n        fcn.0045c8e0();\n        uStack4112 = 0x45d35d;\n        (**ppcStackX16)();\n        uStack4112 = 0x45d36a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45d399;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45d44f;\n        fcn.0045c8e0();\n        uStack8208 = 0x45d45d;\n        (**ppcStackX16)();\n        uStack8208 = 0x45d46a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45d499;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45d54f;\n        fcn.0045c8e0();\n        uStack16400 = 0x45d55d;\n        (**ppcStackX16)();\n        uStack16400 = 0x45d56a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45d599;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45d64f;\n        fcn.0045c8e0();\n        uStack32784 = 0x45d65d;\n        (**ppcStackX16)();\n        uStack32784 = 0x45d66a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45d699;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45d74f;\n        fcn.0045c8e0();\n        uStack65552 = 0x45d75d;\n        (**ppcStackX16)();\n        uStack65552 = 0x45d76a;\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45d799;\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045c800();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045c8e0();\n        (**ppcStackX16)();\n        fcn.0045c820(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045b860(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436f27;\n            fcn.00433560();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436f2d;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 9524
    },
    "0047d1c0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0047d1c0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (&iStack64 < *(unaff_R14 + 0x10) || &iStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iStack40 = fcn.0046af40(0x20);\n    uVar1 = *0x5d2270;\n    puVar3 = fcn.00410e20(iStack40);\n    if (uVar1 != '\\0') {\n        return *puVar3;\n    }\n    iVar4 = fcn.0046af40(0x20);\n    iStack72 = 0x20;\n    iStack16 = iVar4;\n    arg1 = fcn.0047cdc0(iVar4);\n    uVar1 = *0x5d2270;\n    if (iVar4 == 0) {\n        puVar3 = fcn.00410e20(arg1);\n        if (uVar1 != '\\0') {\n            return *puVar3;\n        }\n    }\n    iVar6 = 0;\n    uVar7 = 0;\n    iVar4 = iStack40;\n    uVar8 = 0;\n    iVar9 = 0;\n    while (iVar6 < 0x20) {\n        uVar2 = *(iVar4 + iVar6);\n        if (*(iVar4 + iVar6) < 0x80) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iStack24 = iVar9;\n            uVar2 = fcn.00458fa0(iVar6);\n            iVar4 = iStack40;\n            iVar9 = iStack24;\n            iVar6 = 0x20;\n        }\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar10 = uVar8 + 1;\n            iVar5 = iVar9;\n            if (uVar7 < uVar10) {\n                uVar7 = uVar8;\n                iStack56 = iVar6;\n                iVar5 = fcn.00447240(uVar8);\n                uVar10 = iVar9 + 1;\n                iVar4 = iStack40;\n                iVar6 = iStack56;\n            }\n            *(iVar5 + uVar8 * 4) = uVar2;\n            uVar8 = uVar10;\n            iVar9 = iVar5;\n        }\n    }\n    uStack48 = fcn.0044b3e0(uVar8);\n    iVar6 = 0;\n    uVar7 = 0;\n    iVar4 = iStack16;\n    uVar8 = 0;\n    iVar9 = 0;\n    while (iVar6 < 0x20) {\n        uVar2 = *(iVar4 + iVar6);\n        if (*(iVar4 + iVar6) < 0x80) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iStack32 = iVar9;\n            uVar2 = fcn.00458fa0(iVar6);\n            iVar4 = iStack16;\n            iVar9 = iStack32;\n            iVar6 = iStack72;\n        }\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar10 = uVar8 + 1;\n            iVar5 = iVar9;\n            if (uVar7 < uVar10) {\n                uVar7 = uVar8;\n                iStack64 = iVar6;\n                iVar5 = fcn.00447240(uVar8);\n                uVar10 = iVar9 + 1;\n                iVar4 = iStack16;\n                iVar6 = iStack64;\n            }\n            *(iVar5 + uVar8 * 4) = uVar2;\n            uVar8 = uVar10;\n            iVar9 = iVar5;\n        }\n    }\n    fcn.0044b3e0(uVar8);\n    return uStack48;\n}\n",
        "token_count": 1006
    },
    "0047e7e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.0047e7e0(void)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xfffd;\n            }\n            uVar1 = *((unaff_RBX - 1) + in_RAX);\n            if (uVar1 < 0x80) {\n                return uVar1;\n            }\n            iVar3 = unaff_RBX - 4;\n            if (iVar3 < 0) {\n                iVar3 = 0;\n            }\n            for (uVar5 = unaff_RBX - 2; iVar3 <= uVar5; uVar5 = uVar5 - 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x0047e8d2;\n                if ((*(in_RAX + uVar5) & 0xc0) != 0x80) break;\n            }\n            if (uVar5 < 0) {\n                uVar5 = 0;\n            }\n            if (uVar5 <= unaff_RBX) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x28) = 0x47e897;\n                uVar2 = fcn.0047e620();\n                if (*(*0x20 + 0x10) != *(*0x20 + -0x10) + (unaff_RBX - uVar5)) {\n                    return 0xfffd;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x28) = 0x47e8d2;\n            fcn.0045efa0(unaff_RBX);\ncode_r0x0047e8d2:\n            *(*0x20 + -0x28) = 0x47e8dd;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47e8ed;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00485720": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00485720(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = *0x5cb158;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX;\n            if (0x10ffff < uVar2) {\n                return in_RAX;\n            }\n            if (uVar2 < 0x80) {\n                return *(uVar2 * 2 + 0x560480);\n            }\n            uVar6 = 0;\n            uVar1 = *0x5cb158;\n            while (uVar4 = uVar1,  uVar6 < uVar4) {\n                iVar7 = (uVar4 - uVar6) / 2;\n                uVar1 = iVar7 + uVar6;\n                if (*0x5cb158 <= uVar1) goto code_r0x00485825;\n                if (*(*0x5cb150 + uVar1 * 4) < uVar2) {\n                    uVar6 = iVar7 + uVar6 + 1;\n                    uVar1 = uVar4;\n                }\n            }\n            if (*0x5cb158 <= uVar6) goto code_r0x004857ee;\n            if (uVar6 < *0x5cb158) {\n                if (uVar2 == *(*0x5cb150 + uVar6 * 4)) {\n                    return *(*0x5cb150 + uVar6 * 4 + 2);\n                }\ncode_r0x004857ee:\n                *(*0x20 + 8) = uVar2;\n                *(*0x20 + -0x20) = 0x4857f7;\n                uVar3 = fcn.004856a0();\n                if (uVar3 == *(*0x20 + 8)) {\n                    *(*0x20 + -0x20) = 0x485810;\n                    uVar3 = fcn.00485620();\n                    return uVar3;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x20) = 0x485825;\n            fcn.0045eee0(*0x5cb158);\ncode_r0x00485825:\n            *(*0x20 + -0x20) = 0x485830;\n            in_RAX = fcn.0045eee0(uVar3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x48583a;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 746
    },
    "004a45a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.004a45a0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t arg1_01;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack32;\n    \n    while (uVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (uVar1 < 0x80) {\n        fcn.00402ac0(arg1, in_RDX);\n        return iStack32;\n    }\n    if (uVar1 == 0xfffd) {\n        iVar2 = 0;\n        do {\n            arg1_01 = iVar2;\n            if (unaff_RBX <= arg1_01) {\n                return -1;\n            }\n            uVar1 = *(in_RAX + arg1_01);\n            if (*(in_RAX + arg1_01) < 0x80) {\n                iVar2 = arg1_01 + 1;\n            }\n            else {\n                uVar1 = fcn.00458fa0(arg1_01);\n                iVar2 = unaff_RBX;\n            }\n        } while (uVar1 != 0xfffd);\n        return arg1_01;\n    }\n    if ((0xd7ff < uVar1) && (in_RDX = uVar1 - 0xe000,  0x101fff < uVar1 - 0xe000)) {\n        return -1;\n    }\n    arg1_00 = fcn.0044b5c0();\n    iVar2 = fcn.004a65a0(arg1_00, in_RDX);\n    return iVar2;\n}\n",
        "token_count": 444
    },
    "004a5980": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.004a5980(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004a5980:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        bVar2 = false;\n        for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n            uVar1 = *(in_RAX + iVar5);\n            if (0x7f < uVar1) {\n                *(*0x20 + -0x98) = 0x4a59f8;\n                iVar5 = fcn.004a5380(unaff_RBX);\n                return iVar5;\n            }\n            if (bVar2) {\n                bVar2 = true;\n            }\n            else if (uVar1 < 0x41) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = uVar1 < 0x5b;\n            }\n        }\n        if (!bVar2) {\n            return in_RAX;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < unaff_RBX) {\n            *(*0x20 + -0x40) = *(*0x20 + -0x18);\n            iVar5 = unaff_RBX + *(*0x20 + -0x10) * 2;\n            *(*0x20 + -0x38) = iVar5;\n            *(*0x20 + -0x98) = 0x4a5a6d;\n            iVar3 = fcn.00447160(iVar5);\n            iVar5 = *(*0x20 + -0x40);\n            iVar6 = iVar5;\n            if (*(*0x20 + -0x18) < iVar5) {\n                iVar6 = *(*0x20 + -0x18);\n            }\n            if (iVar3 != *(*0x20 + -0x20)) {\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0x98) = 0x4a5a95;\n                fcn.0045f840(iVar6);\n                iVar3 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + -0x40);\n            }\n            *(*0x20 + -0x18) = iVar5;\n            *(*0x20 + -0x10) = *(*0x20 + -0x38);\n            *(*0x20 + -0x20) = iVar3;\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        iVar5 = 0;\n        do {\n            if (unaff_RBX <= iVar5) {\n                return *(*0x20 + -0x20);\n            }\n            cVar8 = *(in_RAX + iVar5);\n            if (cVar8 + 0xbfU < 0x1a) {\n                cVar8 = cVar8 + ' ';\n            }\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\n            }\n            else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x004a5bb7;\n            iVar3 = *(*0x20 + -0x18);\n            iVar6 = *(*0x20 + -0x20);\n            iVar4 = iVar6;\n            if (*(*0x20 + -0x10) < iVar3 + 1U) {\n                *(*0x20 + -0x48) = iVar5;\n                *(*0x20 + -0x49) = cVar8;\n                *(*0x20 + -0x98) = 0x4a5b65;\n                iVar4 = fcn.00447240(iVar3);\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = iVar4;\n                iVar5 = *(*0x20 + -0x48);\n                cVar8 = *(*0x20 + -0x49);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar3 = iVar6;\n            }\n            *(*0x20 + -0x18) = iVar3 + 1;\n            *(iVar4 + iVar3) = cVar8;\n            iVar5 = iVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x004a5bcb;\ncode_r0x004a5bb7:\n    unaff_RBX = 0x4ee650;\n    *(*0x20 + -0x98) = 0x4a5bca;\n    in_RAX = fcn.00433560();\ncode_r0x004a5bcb:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + -8) = 0x4a5bda;\n    fcn.0045c800();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    *0x20 = puVar7;\n    goto code_r0x004a5980;\n}\n",
        "token_count": 1480
    },
    "004661e0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.004661e0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.0045a320();\n    if (uVar1 < in_RAX[1]) {\n        return uVar1 * 0x80 + *in_RAX;\n    }\n    iVar2 = fcn.00466260();\n    return iVar2;\n}\n",
        "token_count": 157
    },
    "00483a40": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint64_t fcn.00483a40(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_EAX << 6;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                uVar1 = *((arg1 + 0x15cU) * 0x10 + 0x56bba8);\n                if (arg1 < 0) {\n                    uVar1 = uVar1 + 1;\n                }\n                return SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1) >> 0x40, 0) << 7 |\n                       SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1), 0) >> 0x39;\n            }\n            unaff_RBX = 0x4eea10;\n            *(*0x20 + -0x20) = 0x483af1;\n            in_EAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x483b05;\n        fcn.0045c800();\n        in_EAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 504
    },
    "0042ad00": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.0042ad00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *0x626740 = *0x626740 + ((*0x626740 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x626744 = 0;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 143
    },
    "0046b440": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\nuint fcn.0046b440(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.0046de60(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        if (((iVar1 != 0) && (*(iVar1 + 8) == 0x4ba880)) && (*unaff_RBX == 0x6d)) {\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00485140": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.00485140(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x5cb070;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x5cb098;\n        uVar10 = *0x5cb058;\n        uVar13 = *0x5cb050;\n        iVar11 = *0x5cb090;\n        uVar14 = *0x5cb098;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x5cb0b8;\n        while (uVar5 = uVar7,  uVar10 = *0x5cb078,  uVar13 = *0x5cb0b0,  uVar14 = *0x5cb0b8,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x5cb0b8 <= uVar7) goto code_r0x0048531b;\n            if (*(*0x5cb0b0 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x5cb0b8 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x5cb0b8) {\n            uVar2 = *(*0x5cb0b0 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x5cb0b8) {\n                if (*(*0x5cb0b0 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x5cb078;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x5cb078;\n                    uVar14 = uVar9;\n                    if (*0x5cb078 <= uVar15) goto code_r0x004852f6;\n                    uVar1 = *(*0x5cb070 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x5cb078 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x5cb078) {\n                    uVar1 = *(*0x5cb070 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x5cb078;\n                uVar5 = fcn.0045eee0(*0x5cb078);\ncode_r0x004852f6:\n                fcn.0045eee0(uVar5);\n            }\n            fcn.0045eee0(uVar14);\n        }\n        fcn.0045eee0(uVar14);\n        uVar5 = uVar6;\ncode_r0x0048531b:\n        in_RAX = fcn.0045eee0(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x00485431;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x00485413;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045eee0(uVar10);\n            uVar14 = uVar7;\ncode_r0x00485413:\n            fcn.0045eee0(uVar10);\n        }\n        fcn.0045eee0(uVar14);\n    }\n    fcn.0045eee0(uVar14);\ncode_r0x00485431:\n    fcn.0045eee0(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1727
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00401640();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 89
    },
    "00402c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c2d)\n\nint64_t fcn.00402c00(void)\n\n{\n    float *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045e900(4);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 178
    },
    "00402d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402d2f)\n\nint64_t fcn.00402d00(void)\n\n{\n    double *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045e900(8);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 178
    },
    "00402e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e00(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00402c00();\n    fcn.00402c00(in_RAX + 4);\n    return;\n}\n",
        "token_count": 105
    },
    "00402e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00402d00();\n    fcn.00402d00(in_RAX + 8);\n    return;\n}\n",
        "token_count": 105
    },
    "00403920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403920(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1260) + 0x10;\n    *(iVar1 + 0x1260) = iVar3;\n    if (*(iVar1 + 0x1268) == iVar3) {\n        fcn.0042cfe0();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004041c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004041c0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x004240e0();\n    if (cVar2 == '\\0') {\n        if (*0x5d1d18 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x5d1d18;\n            iVar4 = (*0x5d1d18)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 324
    },
    "00404e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e60(void)\n\n{\n    fcn.00404ea0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00405ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405ba0(void)\n\n{\n    fcn.00405be0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00406540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406540(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00405be0(0, in_RAX);\n    return;\n}\n",
        "token_count": 93
    },
    "00406600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00406600(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar1 = *0x626650;\n    fcn.0040ad60();\n    if ((0 < in_RAX) && (in_RAX != iVar1)) {\n        fcn.00438800();\n        *0x626664 = in_RAX;\n        fcn.00438880();\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 172
    },
    "00407020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00407020(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x407100);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 219
    },
    "00407160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00407160(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.004356e0();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 932
    },
    "004082c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004082c0(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x4b3fe0) {\n                            fcn.00435480();\n                            fcn.00435720();\n                            fcn.00435500();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x4b4220,  in_RAX == 0x4b4220)) {\n                        fcn.00435480();\n                        fcn.00435780(uVar5, param_2);\n                        fcn.00435500();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x4b4fe0) {\n                        fcn.00435480();\n                        fcn.00435a80();\n                        fcn.00435500();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x4b4160)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.00435480();\n                    fcn.004359e0(fVar2, fVar1);\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x4b4fa0) {\n                        fcn.00435480();\n                        fcn.00435a80();\n                        fcn.00435500();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x4b4860)) {\n                    fcn.00435480();\n                    fcn.00435b80();\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x4b41e0;\n                if (in_RAX == 0x4b41e0) {\n                    fcn.00435480();\n                    fcn.00435780(uVar5, param_2);\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x4b4120)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.00435480();\n                fcn.004359e0(uVar3, uVar5);\n                fcn.00435500();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x4b4820) {\n                        fcn.00435480();\n                        fcn.00435b80();\n                        fcn.00435500();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x4b5020)) {\n                    fcn.00435480();\n                    fcn.00435a80();\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x4b48a0) {\n                    fcn.00435480();\n                    fcn.00435b80();\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x4b4f60)) {\n                fcn.00435480();\n                fcn.00435a80();\n                fcn.00435500();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x4b4ee0) {\n                    fcn.00435480();\n                    fcn.00435a80();\n                    fcn.00435500();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x4b4e60)) {\n                fcn.00435480();\n                fcn.00435d80();\n                fcn.00435500();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x4b47e0) {\n                fcn.00435480();\n                fcn.00435b80();\n                fcn.00435500();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x4b4f20) {\n                fcn.00435480();\n                fcn.00435a80();\n                fcn.00435500();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x4b47a0)) {\n            fcn.00435480();\n            fcn.00435b80();\n            fcn.00435500();\n            return;\n        }\n        fcn.00408820();\n        return;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 1507
    },
    "00409ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409ae0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00409c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409c80(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "0040a0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a0a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if (*0x5d1d18 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x5d1d18;\n        iVar3 = (*0x5d1d18)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x170);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00409b40();\n        }\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 275
    },
    "0040a440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0040a440(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x567ec0;\n    }\n    else {\n        puVar1 = fcn.0040c220(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 160
    },
    "0040a620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0040a620(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == NULL) {\n        return NULL;\n    }\n    if ((*unaff_RBX != in_RAX) && (unaff_RBX = fcn.004097e0(1),  unaff_RBX == NULL)) {\n        return NULL;\n    }\n    return unaff_RBX;\n}\n",
        "token_count": 162
    },
    "0040a780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040a780(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.004097e0(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0040a820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a820(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x5ca5a0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040ab00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ab00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040b460();\n    return;\n}\n",
        "token_count": 82
    },
    "0040ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ad20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040b4a0();\n    return;\n}\n",
        "token_count": 84
    },
    "0040b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b2a0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40b2d7;\n                fcn.004304e0();\n                *(*0x20 + -0x40) = 0x40b2ea;\n                fcn.0040b000(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40b305;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40b315;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 413
    },
    "0040b340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040b340(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40b377;\n                fcn.004304e0();\n                *(*0x20 + -0x48) = 0x40b37c;\n                fcn.0043dc40();\n                *(*0x20 + -0x48) = 0x40b38f;\n                uVar1 = fcn.0040b000(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40b398;\n                fcn.0045a0e0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40b3b8;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40b3c8;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "0040b460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b460(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    return;\n}\n",
        "token_count": 82
    },
    "0040b4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b4a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 84
    },
    "0040bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040bea0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40bef3;\n                uVar1 = fcn.00416300();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40bf25;\n                fcn.004161c0(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40bf4d;\n                uVar1 = fcn.00416300();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40bf69;\n                fcn.004161c0(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40bfbd;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40bfd2;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 785
    },
    "0040c000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040c000(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40c04d;\n                uVar1 = fcn.00411e60(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40c085;\n                        fcn.00414c20();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40c09e;\n                        uVar1 = fcn.00411e60(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040c0b2;\n                    }\n                }\n                else {\ncode_r0x0040c0b2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40c105;\n                        fcn.00435480();\n                        *(*0x20 + -0x48) = 0x40c116;\n                        fcn.00435d80();\n                        *(*0x20 + -0x48) = 0x40c125;\n                        fcn.00435a80();\n                        *(*0x20 + -0x48) = 0x40c136;\n                        fcn.00435d80();\n                        *(*0x20 + -0x48) = 0x40c145;\n                        fcn.00435a80();\n                        *(*0x20 + -0x48) = 0x40c14a;\n                        fcn.004356e0();\n                        *(*0x20 + -0x48) = 0x40c14f;\n                        fcn.00435500();\n                        *(*0x20 + -0x48) = 0x40c165;\n                        fcn.00433ce0();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40c176;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40c185;\n                fcn.00435480();\n                *(*0x20 + -0x48) = 0x40c196;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x40c1a5;\n                fcn.00435a80();\n                *(*0x20 + -0x48) = 0x40c1b6;\n                fcn.00435d80();\n                *(*0x20 + -0x48) = 0x40c1c5;\n                fcn.00435a80();\n                *(*0x20 + -0x48) = 0x40c1ca;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x40c1cf;\n                fcn.00435500();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40c1e5;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x48) = 0x40c1f2;\n            in_RAX = fcn.0045eee0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40c205;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1448
    },
    "0040cc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cc20(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040c220(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0040cf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040cf80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40d040;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.0045c6c0();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "0040d760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040d760(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.0040cc20();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00411e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411e00(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00412580(unaff_RBX);\n    fcn.0045f580();\n    return;\n}\n",
        "token_count": 45
    },
    "00411e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411e40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 63
    },
    "00412360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412360(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045ef00(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x5f8a70);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00414b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414b00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 84
    },
    "00415280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415280(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x5f8a10) {\n                return;\n            }\n            if (iVar1 == *0x5f8a10 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4152b9;\n                fcn.004150a0();\n                *(*0x20 + -0x28) = 0x4152c5;\n                fcn.00447ec0();\n                *(*(*0x20 + 8) + 0x488) = *0x5f8a10;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x5f8a10;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x4152f8;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x415309;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x415312;\n            fcn.00435a80();\n            *(*0x20 + -0x28) = 0x415325;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x41532e;\n            fcn.00435a80();\n            *(*0x20 + -0x28) = 0x415333;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x415338;\n            fcn.00435500();\n            *(*0x20 + -0x28) = 0x415349;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x415354;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 628
    },
    "00415960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415960(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x5f8cb8;\n            *(*0x20 + -0x18) = *0x5f8cc0;\n            iVar2 = 0;\n            iVar3 = *0x5f8cb8;\n            iVar5 = *0x5f8cc0;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x626611 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x5f8a70) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x628318;\n                    *(*0x20 + -0x48) = 0x415a11;\n                    iVar2 = fcn.0040cf80(0x628318);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x415a49;\n                        fcn.00433ce0();\n                        goto code_r0x00415a49;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00415a49:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x415a6c;\n            fcn.0045ef00(0x40);\n        }\n        *(puVar4 + -8) = 0x415a72;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 712
    },
    "00415a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415a80(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d2be0 == 0) {\n                if (*0x5d2c68 < *0x5d2c6c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x626611 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x415ae9;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x415aef;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 304
    },
    "00415b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415b00(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x5f8a70) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x415bba;\n                in_RAX = fcn.0045ef00(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x415bce;\n            fcn.00435480();\n            *(*0x20 + -0x40) = 0x415bd3;\n            fcn.00435480();\n            *(*0x20 + -0x40) = 0x415be5;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x415bef;\n            fcn.00435be0();\n            *(*0x20 + -0x40) = 0x415bf4;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x415bf9;\n            fcn.00435500();\n            *(*0x20 + -0x40) = 0x415bfe;\n            fcn.00435480();\n            *(*0x20 + -0x40) = 0x415c0f;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x415c19;\n            fcn.00435be0();\n            *(*0x20 + -0x40) = 0x415c2a;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x415c34;\n            fcn.00435be0();\n            *(*0x20 + -0x40) = 0x415c45;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x415c4a;\n            fcn.00435500();\n            *(*0x20 + -0x40) = 0x415c65;\n            fcn.0041da00(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x415c85;\n            fcn.0041da00(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x415ca5;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x415cc9;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1253
    },
    "00415d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415d00(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0042cce0();\n    fcn.00431000();\n    return uStack24;\n}\n",
        "token_count": 43
    },
    "004162c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004162c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00415d80();\n    return;\n}\n",
        "token_count": 82
    },
    "00416300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00416300(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00431000();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.00431000();\n    return 0;\n}\n",
        "token_count": 119
    },
    "00416400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416400(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0042cce0();\n    return;\n}\n",
        "token_count": 84
    },
    "00417580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417580(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *0x5d28dc = 0x80000000;\n    fcn.0041f1a0();\n    *0x626ee8 = 0x400000;\n    *0x626f08 = 0x3feccccccccccccd;\n    *0x626f10 = 0x4010000000000000;\n    *0x626f18 = 0x408f400000000000;\n    *0x626f20 = 0xc08f400000000000;\n    *0x626f28 = 0x408f400000000000;\n    *0x626f30 = in_XMM15;\n    fcn.0041f120();\n    *0x5d2cd8 = 0x100000001;\n    return;\n}\n",
        "token_count": 251
    },
    "00419560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419560(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (; *0x626640 < *0x626650; *0x626640 = *0x626640 + 1) {\n        fcn.0043e6c0();\n        fcn.0040b340();\n        *0x5d2ce0 = 0;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0041a940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a940(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d2c6c <= *0x5d2c68) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x41aa20;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x41a997;\n                fcn.00437200();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x5d2c68;\n            *(*0x20 + -0x28) = *0x5d2c6c;\n            *(*0x20 + -0x40) = 0x41a9ae;\n            fcn.00435480();\n            *(*0x20 + -0x40) = 0x41a9b7;\n            fcn.00435a80();\n            *(*0x20 + -0x40) = 0x41a9c8;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x41a9d1;\n            fcn.00435a80();\n            *(*0x20 + -0x40) = 0x41a9e5;\n            fcn.00435d80();\n            *(*0x20 + -0x40) = 0x41a9ea;\n            fcn.00435500();\n            *(*0x20 + -0x40) = 0x41a9fb;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x41aa05;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 559
    },
    "0041b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041b100(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041cf00(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0041bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bba0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *0x5d2d18 = in_XMM15;\n    fcn.0043c1c0();\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 127
    },
    "0041d660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d660(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00412200(0);\n    if (iVar1 != 0) {\n        fcn.0041d6e0(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0041df60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041df60(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x5d26f8,  iVar1 = *0x5d26f0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00412200(0);\n            fcn.0041d6e0(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0041e320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e320(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar2 = *in_RAX;\n    iVar7 = *(in_RAX + 0x1a);\n    if (iVar2 < 0) {\n        iVar2 = 100000;\n    }\n    iVar5 = *(in_RAX + 0x2c) + *(in_RAX + 0x2e) + *(in_RAX + 0x30);\n    iVar6 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    iVar4 = *(in_RAX + 0x20) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (iVar6 < iVar5) {\n        iVar1 = *(in_RAX + 6) + ((iVar7 - *(in_RAX + 6)) / iVar6) * iVar4;\n        iVar3 = (*0x4ee528 + iVar2 / *0x4ee560) * iVar7;\n        iVar6 = iVar4;\n        iVar7 = iVar1;\n        if (iVar3 < iVar1) {\n            iVar7 = iVar3;\n        }\n    }\n    if (iVar7 < *(in_RAX + 0x1e)) {\n        iVar7 = *0x4ee530 * iVar7;\n        iVar6 = iVar4;\n    }\n    iVar6 = iVar6 - iVar5;\n    if (iVar6 < 1000) {\n        iVar6 = 1000;\n    }\n    iVar7 = iVar7 - *(in_RAX + 0x1e);\n    if (iVar7 < 1) {\n        iVar7 = 1;\n    }\n    *(in_RAX + 0x40) = iVar6 / iVar7;\n    *(in_RAX + 0x42) = iVar7 / iVar6;\n    return;\n}\n",
        "token_count": 477
    },
    "004200c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004200c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x20) = unaff_EDI;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x10) = in_RAX + 0x100b8;\n                *(*0x20 + -0x40) = 0x420138;\n                fcn.0040ab40();\n                if (*(*(*0x20 + 8) + 0x100e8) == *(*0x20 + 0x20)) {\n                    *(*0x20 + -0x40) = 0x42015f;\n                    fcn.0042be40(*(*0x20 + -0x20));\n                }\n                *(*0x20 + -0x40) = 0x42016b;\n                fcn.0040ad60();\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x40) = 0x420190;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x4201a9;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 691
    },
    "00420bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420bc0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x420c35;\n                        iVar3 = fcn.00420a00(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x420c5b;\n                fcn.00435480();\n                *(*0x20 + -0x28) = 0x420c6c;\n                fcn.00435d80();\n                *(*0x20 + -0x28) = 0x420c76;\n                fcn.00435a80();\n                *(*0x20 + -0x28) = 0x420c7b;\n                fcn.004356e0();\n                *(*0x20 + -0x28) = 0x420c85;\n                fcn.00435500();\n                *(*0x20 + -0x28) = 0x420c96;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x28) = 0x420c9b;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x420cac;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x420cb6;\n            fcn.00435a80();\n            *(*0x20 + -0x28) = 0x420cbb;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x420cc5;\n            fcn.00435500();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x420cd6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x420ce6;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00421040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421040(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x4210ed;\n                    iVar1 = fcn.004237e0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x4210c7;\n                        iVar1 = fcn.004237e0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x42112b;\n                fcn.0045eee0(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42113c;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x421150;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00423061": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00423061(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x5d28dc == -0x80000000) {\n        *0x5f8a50 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x626f58) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x5f8a30 - *0x5f8a38 < 1) {\n            *0x5f8a50 = 0.0;\n        }\n        else {\n            *0x5f8a50 = (*0x5f8a30 - *0x5f8a38) / iVar1;\n            *0x5f8a48 = *0x626f58;\n            *0x5f8a40 = *0x5f8a38;\n        }\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00423100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423100(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = fcn.004237e0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00423b20();\n    if (iVar2 == 0) {\n        iVar2 = fcn.004237e0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00423a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423a60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00423780();\n    fcn.0040a8e0();\n    return;\n}\n",
        "token_count": 92
    },
    "00423ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423ac0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00423720();\n    fcn.0040a8e0();\n    return;\n}\n",
        "token_count": 92
    },
    "00423b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00423b20(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d2be0 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x5d2be0 >> 0x13) << 3;\n        *0x5d2be0 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00423720();\n    return piVar1;\n}\n",
        "token_count": 182
    },
    "00423bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00423bc0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x423be5;\n            iVar2 = fcn.004237e0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x423c33;\n                fcn.0045f840(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x423c3d;\n                fcn.00423ac0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x423c59;\n            in_RAX = fcn.0045eee0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423c65;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00424180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424180(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "004249e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004249e0(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack56 = 0;\n    uStack48 = 0x424aa0;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&uStack56, auStack24._0_8_);\n    fcn.0045c6c0();\n    return uStack56;\n}\n",
        "token_count": 254
    },
    "00424b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424b20(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x424b3f;\n                fcn.00424ee0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x424b5a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x424b6e;\n        fcn.00460f20();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 369
    },
    "00425800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425800(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00425900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425900(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.00460f20();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040ab40();\n    fcn.00425980(param_1);\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 129
    },
    "00426620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426620(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    puVar1 = fcn.00426200();\n    if (puVar1 != NULL) {\n        fcn.0040ab40();\n        *0x5ff3d8 = *0x5ff3d8 - *0x5ff3a8;\n        *puVar1 = *0x5ff3c0;\n        *0x5ff3c0 = puVar1;\n        fcn.0040ad60();\n        return;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "004266c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004266c0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4266ef;\n            fcn.0040ab40();\n            *(*0x20 + -0x30) = 0x4266fb;\n            uVar3 = fcn.00417440();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x42670e;\n            fcn.0040ad60();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x42672a;\n            cVar2 = fcn.00425fc0();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x426749;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x426759;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 539
    },
    "004268c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004268c0(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x626910;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x626910 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x626910 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00426954:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x426975;\n                fcn.0040ab40();\n                piVar2 = *0x626910;\n                if (*0x626910 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x626910 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004269f4:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x426b6c;\n                        fcn.0040ad60();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x426a05;\n                    piVar4 = fcn.00426ce0();\n                    piVar2 = *0x626910;\n                    if (*0x626910 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x626910 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00426a80:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x626908;\n                            *(*0x20 + -0x48) = 0x426b4a;\n                            *0x626908 = piVar4;\n                            fcn.0040ad60();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x00426ae5:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x626910;\n                                *(*0x20 + -0x48) = 0x426b16;\n                                *0x626910 = piVar4;\n                                fcn.0040ad60();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x426b99;\n                            fcn.00433ce0();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x00426ae5;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x00426ae5;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x426ba6;\n                        fcn.0045ef00(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x626910;\n                        **0x626910 = **0x626910 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00426a80;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00426a80;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x426bb3;\n                    fcn.0045ef00(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x626910;\n                    **0x626910 = **0x626910 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004269f4;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004269f4;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x426bbd;\n                fcn.0045ef00(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x626910;\n                **0x626910 = **0x626910 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00426954;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00426954;\n                }\n            }\n            *(*0x20 + -0x48) = 0x426bc7;\n            in_RAX = fcn.0045ef00(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x426bd2;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1781
    },
    "00426be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426be0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004268c0();\n    return;\n}\n",
        "token_count": 82
    },
    "00426c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426c20(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    if (*0x626920 != 0) {\n        iVar1 = *0x626920;\n        if (*0x626908 == 0) {\n            *0x626908 = *0x626920;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x626908;\n            *0x626908 = *0x626920;\n        }\n    }\n    uVar2 = *0x626910;\n    *0x626920 = *0x626918;\n    *0x626918 = *0x626910;\n    *0x626910 = 0;\n    fcn.0040ad60(uVar2);\n    return;\n}\n",
        "token_count": 276
    },
    "00426ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426ce0(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x626908 != 0) {\n                *(*0x20 + -0x18) = *0x626908;\n                *0x626908 = *(*0x626908 + 8);\n                *(*0x20 + -0x30) = 0x426d1f;\n                fcn.0045f580();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00426d62;\n            }\n            *(*0x20 + -0x30) = 0x426d34;\n            fcn.0040ad60();\n            *(*0x20 + -0x30) = 0x426d45;\n            iVar1 = fcn.00415d00();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x426d5d;\n                fcn.0040ab40();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00426d62:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x426d85;\n            fcn.00433ce0();\n        }\n        *(puVar3 + -8) = 0x426d8b;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "00428f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428f40(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045eee0(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 702
    },
    "0042b180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.0042b180(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x6266c8 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x6266c8) {\n        uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n        auVar2 = SEXT816(*0x6266c8);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0)) & 0xffffffffffffffff) % auVar2, \n                                0);\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.0042b260(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "0042b460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b460(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435d00();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    else {\n        fcn.00457000();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435d00();\n        fcn.00435d80();\n        fcn.00435be0();\n        fcn.00435d80();\n        fcn.00435d80();\n        fcn.00435d80();\n        fcn.00435500();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00456420();\n        fcn.0045c6c0();\n    }\n    else {\n        fcn.00456420();\n        fcn.00455780(0);\n    }\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 424
    },
    "0042b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b700(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435d00();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435500();\n    fcn.00456420();\n    fcn.0045c6c0();\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 242
    },
    "0042b8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b8a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435500();\n    fcn.00456660();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435500();\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 222
    },
    "0042b960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042b960(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42b9b0;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42b9c5;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 343
    },
    "0042b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b9e0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42ba8a;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42baa5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 580
    },
    "0042bac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bac0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.0042b960();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "0042bc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042bc20(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042bd10;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045eee0(arg1);\ncode_r0x0042bd10:\n    fcn.0045eee0(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 514
    },
    "0042bd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bd20(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42bd47;\n            piVar3 = fcn.0042bc20();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42be08;\n                    fcn.0045eee0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42be10;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42be17;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42be27;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "0042c3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c3a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 314
    },
    "0042c420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c420(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x42c447;\n            uVar2 = fcn.0042bc20();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x42c62a;\n            in_RAX = fcn.0045efa0(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x42c63a;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 == 0) {\n        iVar12 = 0;\n        goto code_r0x0042c4b4;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x0042c4b4:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042c5ad:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x42c5d0;\n                uVar2 = uVar5;\n                fcn.0045ef60(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x42c51d;\n                iVar4 = fcn.0042bac0(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042c5ad;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042c5ad;\n                }\n            }\n            *(*0x20 + -0x58) = 0x42c5d8;\n            fcn.0045eee0(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1528
    },
    "0042c660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c660(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x42c6b5;\n                iVar1 = fcn.0040cf80(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x42c705;\n                    fcn.0045f840(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x42c714;\n            in_RAX = fcn.0045ef60(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42c725;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 614
    },
    "0042c8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c8e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.0040a8e0(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 627
    },
    "0042ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ca20(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042ca96;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042ca96;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42ca90;\n                        fcn.0040a8e0(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042ca96:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42cabd;\n                    fcn.00433ce0();\n                }\n                *(*0x20 + -0x30) = 0x42cace;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42cadd;\n            fcn.00435480();\n            *(*0x20 + -0x30) = 0x42caee;\n            fcn.00435d80();\n            *(*0x20 + -0x30) = 0x42caf8;\n            fcn.00435a80();\n            *(*0x20 + -0x30) = 0x42cb09;\n            fcn.00435d80();\n            *(*0x20 + -0x30) = 0x42cb15;\n            fcn.00435a80();\n            *(*0x20 + -0x30) = 0x42cb1a;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x42cb1f;\n            fcn.00435500();\n            *(*0x20 + -0x30) = 0x42cb30;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42cb3b;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 933
    },
    "0042cb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042cb60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040cf80(0x628318);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 260
    },
    "0042cc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cc00(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42cc3e;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x42cc4f;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x42cc5d;\n            fcn.00435a80();\n            *(*0x20 + -0x28) = 0x42cc6e;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x42cc7a;\n            fcn.00435a80();\n            *(*0x20 + -0x28) = 0x42cc7f;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x42cc85;\n            fcn.00435500();\n            *(*0x20 + -0x28) = 0x42cc96;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42cca5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 512
    },
    "0042cce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cce0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435a80();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00433ce0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 238
    },
    "0042ce80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ce80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.0040ad60();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435a80();\n            fcn.004356e0();\n            fcn.00435500();\n            fcn.00433ce0();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0042d3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d3e0(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 139
    },
    "0042d7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d7e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42d825;\n            fcn.00431000();\n            *0x55c3a0 = *(*0x20 + -0x18);\n            if (*0x55c3a0 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42d859;\n            fcn.00460380();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d87a;\n            fcn.00435480();\n            *(*0x20 + -0x48) = 0x42d88b;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x42d895;\n            fcn.00435a80();\n            *(*0x20 + -0x48) = 0x42d8a6;\n            fcn.00435d80();\n            *(*0x20 + -0x48) = 0x42d8ab;\n            fcn.00435500();\n            *(*0x20 + -0x48) = 0x42d8bc;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x42d8c5;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 673
    },
    "0042de40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042de40(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42de7b;\n                fcn.0042d460(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42de8e;\n            fcn.00435480();\n            *(*0x20 + -0x30) = 0x42de9f;\n            fcn.00435d80();\n            *(*0x20 + -0x30) = 0x42deab;\n            fcn.00435b80();\n            *(*0x20 + -0x30) = 0x42deb0;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x42deb5;\n            fcn.00435500();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42dec6;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42dede;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 647
    },
    "0042df00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042df00(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42df49;\n                    fcn.00430f00();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42df7d;\n                fcn.00433ce0();\n            }\n            *(*0x20 + -0x30) = 0x42df85;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42df9f;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0042ece0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ece0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00431000();\n    if (iStack16 != 0) {\n        *0x626608 = 1;\n        fcn.00430e80();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0042f200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042f200(void)\n\n{\n    fcn.00430e80();\n    return -*0x6267c0 * *0x6267b8;\n}\n",
        "token_count": 42
    },
    "0042f280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042f280(void)\n\n{\n    fcn.00430e80();\n    fcn.00430e80();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042f660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f660(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.00430f00();\n        fcn.00443980(arg1);\n        return;\n    }\n    fcn.0045eee0(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 99
    },
    "0042f960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f960(void)\n\n{\n    fcn.0040ab40();\n    *0x62662c = 1;\n    fcn.00430e80();\n    return;\n}\n",
        "token_count": 45
    },
    "00430640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430640(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.00431100();\n    if (iStack32 != 0) {\n        fcn.00430e80();\n        return;\n    }\n    if (*0x62662c != 0) goto code_r0x0043077d;\n    do {\n        fcn.00460380();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435b80();\n        fcn.00435d80();\n        fcn.00435a80();\n        fcn.00435d80();\n        fcn.00435500();\n        fcn.00433ce0();\ncode_r0x0043077d:\n        fcn.0040ab40();\n        fcn.0040ab40();\n    } while( true );\n}\n",
        "token_count": 190
    },
    "00430c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430c40(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.00430e80();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.00430e80();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.00430e80();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00430e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430e20(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 96
    },
    "00430e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430e80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 119
    },
    "00430f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430f00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 119
    },
    "00430f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430f80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 127
    },
    "00431000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431000(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431080(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431100(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431180(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430d40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431200(void)\n\n{\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 26
    },
    "004323c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004323c0(void)\n\n{\n    code *pcVar1;\n    ushort *in_RAX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        *in_RAX = 0;\n        *(in_RAX + 1) = 0;\n        *(in_RAX + 4) = auStackX8;\n        *(in_RAX + 8) = in_stack_00000000;\n        *(in_RAX + 0x1c) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        *(in_RAX + 0x10) = 0;\n        *(in_RAX + 0x18) = 0;\n        *(in_RAX + 0x14) = *(unaff_R14 + 0x28);\n        *(unaff_R14 + 0x28) = in_RAX;\n        fcn.0045e9e0();\n        return;\n    }\n    fcn.00433ce0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 331
    },
    "00432b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432b20(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432b3e;\n            iVar1 = fcn.00433ca0();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x432b65;\n            fcn.00433ce0();\n        }\n        *(puVar2 + -8) = 0x432b6b;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 258
    },
    "00432de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432de0(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 88
    },
    "00435480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435480(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040ab40();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "004356a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004356a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435d80();\n    return;\n}\n",
        "token_count": 82
    },
    "004356e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004356e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435d80();\n    return;\n}\n",
        "token_count": 82
    },
    "00435720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435720(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_AL == '\\0') {\n        fcn.00435d80();\n    }\n    else {\n        fcn.00435d80();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004359e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004359e0(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435780(param_1, param_2);\n    fcn.00435780(param_1, param_2);\n    fcn.00435d80();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 146
    },
    "00435b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435b80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX < 0) {\n        fcn.00435d80();\n    }\n    fcn.00435a80();\n    return;\n}\n",
        "token_count": 112
    },
    "00435be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435be0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x435c2f;\n            uVar2 = fcn.0045f1ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4ca965),  0xf < uVar2 ||\n                 (iVar1 = *0x626758 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x626758, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x435cb8;\n                    fcn.00435560(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x435cd2;\n                fcn.0045eee0(100);\n            }\n            *(*0x20 + -0x90) = 0x435cdc;\n            in_RAX = fcn.0045eee0(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x435ce7;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "00435d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435d00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435be0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435d40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435be0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435e00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435b80();\n    fcn.00435d80();\n    fcn.00435500();\n    fcn.00435be0();\n    return;\n}\n",
        "token_count": 146
    },
    "00435ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435ee0(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    *0x626758 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00435480();\n                fcn.004356e0();\n                fcn.00435500();\n            }\n            fcn.00435480();\n            fcn.00435be0();\n            fcn.00435d80();\n            fcn.00435500();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00435560(1);\n        fcn.00435480();\n        fcn.00435be0();\n        fcn.00435500();\n        fcn.00435480();\n        fcn.004356a0();\n        fcn.00435500();\n        puVar2 = fcn.0044d780();\n        if (puVar2 != NULL) {\n            fcn.0044df00();\n            uVar3 = fcn.0044d2a0(*puVar2);\n            fcn.00435480();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435d80();\n            fcn.00435be0(uVar3);\n            fcn.00435d80();\n            fcn.00435500();\n        }\n    }\n    *0x626758 = 0;\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 508
    },
    "00436760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436760(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00437140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437140(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar1 = *0x5d26d8;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 157
    },
    "00437200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437200(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x6266a8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004372a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004372a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00401080();\n    *0x626614 = *0x626d67;\n    *0x626615 = *0x626d6a;\n    *0x626616 = *0x626d6e;\n    return;\n}\n",
        "token_count": 125
    },
    "004375e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004375e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d31b0 - *0x5d31c0 <= *0x5d31b8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x5d31b8;\n            *(*0x20 + -0x28) = 0x437625;\n            fcn.00435480();\n            *(*0x20 + -0x28) = 0x437636;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x437645;\n            fcn.00435b80();\n            *(*0x20 + -0x28) = 0x437656;\n            fcn.00435d80();\n            *(*0x20 + -0x28) = 0x43765b;\n            fcn.00435500();\n            *(*0x20 + -0x28) = 0x43766c;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x437672;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 391
    },
    "00437680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00437680(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5d31b0 <= *0x5d31b0 + 1) {\n                *(*0x20 + -0x10) = *0x5d31b0;\n                *(*0x20 + -0x28) = 0x4376b6;\n                *0x5d31b0 = *0x5d31b0 + 1;\n                fcn.004375e0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4376d6;\n            fcn.00433ce0();\n        }\n        *(puVar1 + -8) = 0x4376dc;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 313
    },
    "00438800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438800(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00445680(0);\n    fcn.004385a0();\n    return;\n}\n",
        "token_count": 91
    },
    "00438880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438880(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00438720();\n    fcn.004459c0(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00438dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438dc0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x438e09;\n                fcn.0045c5e0();\n                *(*0x20 + -0x28) = 0x438e25;\n                fcn.004307e0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x5d2da0) {\n                    *(*0x20 + -0x28) = 0x438e3c;\n                    fcn.00438ec0();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x438e5d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x5d2da0) {\n                    *(*0x20 + -0x28) = 0x438e7e;\n                    fcn.00440340();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x438e97;\n                fcn.0043c4e0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438eb2;\n            fcn.00433ce0();\n        }\n        *(puVar4 + -8) = 0x438eb8;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 661
    },
    "00438f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438f00(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.0040aec0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 58
    },
    "00439a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00439a00(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x626634,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *0x626634 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00439cc0();\n        uVar3 = *0x6266f8;\n        *0x6266f8 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00439a80();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00439a80();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "0043a940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a977)\n\nvoid fcn.0043a940(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d31d8 != 0) {\n        if (*0x5d31dc != 0) {\n            return;\n        }\n        LOCK();\n        *0x5d31dc = 1;\n        fcn.0043a3a0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043c0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c0e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x5d3188 == 0) {\n        if ((*0x5d3190 == 0) || (in_RAX < *0x5d3190)) {\n            fcn.0042d9a0();\n        }\n    }\n    else {\n        fcn.0043a940();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043dc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043dc40(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043d760();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045c6c0();\n    }\n    fcn.00438040(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045c6c0();\n    }\n    fcn.0045c6c0();\n    fcn.0043d760();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 432
    },
    "0043e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043e340(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar2 = fcn.00442120();\n    iVar1 = *0x5d3270;\n    if ((iVar2 != 0) && (*0x5d3270 != 0)) {\n        *0x5d3270 = 0;\n        fcn.0040ae40(iVar1);\n    }\n    fcn.0040ad60();\n    if (iVar2 != 0) {\n        fcn.00440340();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 203
    },
    "0043e560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e560(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = fcn.0040cc20();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045c6c0();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0043f3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f3c0(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t unaff_R14;\n    \n    if (*0x626960 == 0) {\n        fcn.0043a080();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x238;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0x238) != 0) {\n        *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n        *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n        return;\n    }\n    *(*(unaff_R14 + 0x30) + 0x238) = 0xffffffff;\n    fcn.00433560();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 230
    },
    "00440620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440620(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    *0x5d31ac = *0x5d31ac + in_EAX;\n    if (0 < in_EAX) {\n        fcn.00440680();\n    }\n    fcn.0040ad60();\n    return;\n}\n",
        "token_count": 139
    },
    "00441d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441d60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    *(in_RAX + 0x128) = *0x5d31a0;\n    *0x5d31a8 = *0x5d31a8 + 1;\n    *0x5d31a0 = in_RAX;\n    fcn.00440680();\n    return;\n}\n",
        "token_count": 146
    },
    "00442240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00442240(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.00442340(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 401
    },
    "00443660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443660(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x626aa0 = 1;\n            *0x626ac0 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x44369d;\n            uVar3 = fcn.004076a0();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x626ae0 = (*0x626ae4 | *0x626ae8 | *0x626aec) != 0;\n                    *(*0x20 + -0x88) = 0x44385f;\n                    fcn.004076a0();\n                    *(*0x20 + -0x88) = 0x443865;\n                    fcn.0045a460();\n                    *0x626678 = *0x55c288;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x4436cf;\n                fcn.00402ac0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x0044395a;\n                    if (param_2 < param_1 + 1) goto code_r0x00443952;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x443755;\n                fcn.00402ac0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x0044369f:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x4437e5;\n                        uVar4 = param_2;\n                        uVar3 = fcn.0044bac0();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x626698 = uVar3;\n                        }\n                    }\n                    else if (*0x5cafb8 != 0) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x5cafb8;\n                        iVar8 = 0;\n                        iVar5 = *0x5cafb8;\n                        iVar7 = *0x5cafb0;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x4438ad;\n                                cVar2 = fcn.00402620(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x4438f1;\n                                    iVar5 = fcn.0044bac0();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x0044369f;\n                }\n                *(*0x20 + -0x88) = 0x44394d;\n                fcn.0045efa0(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x443952;\n            fcn.0045ef20(param_1, param_2);\ncode_r0x00443952:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x44395a;\n            param_2 = param_1;\n            fcn.0045efa0(param_1);\ncode_r0x0044395a:\n            *(*0x20 + -0x88) = 0x44395f;\n            fcn.0045ef20(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x443965;\n        fcn.0045c800();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1942
    },
    "00443980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443980(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x4439c5;\n                fcn.004607e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x443a10;\n                uVar3 = fcn.0045e900(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x443a65;\n                        fcn.0045eee0(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00443a65;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00443a65:\n            *(*0x20 + -0x30) = 0x443a70;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045eee0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x443a8a;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "00443b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443b00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045c6c0();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00443d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443d20(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = 0;\n            iVar3 = 0;\n            while( true ) {\n                if (unaff_RSI <= iVar2) {\n                    return;\n                }\n                arg3 = *(unaff_RDI + iVar2 * 2);\n                if (unaff_RBX <= arg3) break;\n                iVar1 = *(in_RAX + arg3 * 0x10);\n                if (iVar3 != iVar1) {\n                    *(*0x20 + -0x18) = iVar2;\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x30) = 0x443d88;\n                    fcn.0040ab40();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                iVar2 = iVar2 + 1;\n            }\n            *(*0x20 + -0x30) = 0x443dbd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x443de5;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 795
    },
    "00443e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443e20(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = unaff_RSI;\ncode_r0x00443e50:\n            uVar1 = uVar1 - 1;\n            if (uVar1 < 0) {\n                return;\n            }\n            unaff_RSI = *(unaff_RDI + uVar1 * 2);\n            if (unaff_RSI < unaff_RBX) {\n                *(*0x20 + -0x10) = uVar1;\n                unaff_RSI = *(in_RAX + unaff_RSI * 0x10);\n                if (uVar1 < 1) goto code_r0x00443e88;\n                arg3 = *(unaff_RDI + -2 + uVar1 * 2);\n                if (arg3 < unaff_RBX) break;\n                *(*0x20 + -0x28) = 0x443ebe;\n                fcn.0045eee0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x443ec9;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + 0x28) = unaff_RSI;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x443eed;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_RSI = *(puVar2 + 0x28);\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n    arg3 = *(in_RAX + arg3 * 0x10);\n    if (arg3 != unaff_RSI) {\ncode_r0x00443e88:\n        *(*0x20 + -0x28) = 0x443e93;\n        fcn.0040ad60();\n        in_RAX = *(*0x20 + 8);\n        uVar1 = *(*0x20 + -0x10);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n    }\n    goto code_r0x00443e50;\n}\n",
        "token_count": 853
    },
    "00446540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446540(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00430e80();\n    fcn.00430e80();\n    return;\n}\n",
        "token_count": 90
    },
    "004465e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004465e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00430f00();\n    if (*0x5d1c68 == 0) {\n        fcn.00430e80();\n    }\n    else {\n        fcn.00430f00();\n        fcn.00430f00();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00447160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447160(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040c220(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x004471d8;\n        do {\n            unaff_RBX = 0x4ee9a0;\n            uVar3 = fcn.00433560();\ncode_r0x004471d8:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4ee860;\n        fcn.00433560();\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00448b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448b20(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00448c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448c20(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040ab40();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045f840(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040ad60();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 493
    },
    "0044aca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044aca0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044a960(3);\n    return;\n}\n",
        "token_count": 125
    },
    "0044ad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ad80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044a960(4);\n    return;\n}\n",
        "token_count": 125
    },
    "0044b0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044b0a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44b0dc;\n                iVar1 = fcn.0044b6a0();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x44b105;\n                fcn.0045eee0(0);\n            }\n            *(*0x20 + -0x20) = 0x44b112;\n            in_RAX = fcn.0045ef20(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x44b125;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 433
    },
    "0044b140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b140(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.0044b740();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045f840(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0044b3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b3e0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x44b435;\n                iVar1 = fcn.00459180(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44b46e;\n            uVar2 = fcn.0044b0a0();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x0044b568;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x44b4d6;\n                iVar3 = fcn.00459180(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x44b568;\n            fcn.0045ef20(arg1_00, unaff_RBX);\ncode_r0x0044b568:\n            *(*0x20 + -0x80) = 0x44b573;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045efa0(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x44b58d;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1140
    },
    "0044b5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b5c0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        iVar2 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x44b605;\n                in_RAX = fcn.0044b6a0();\n                iVar2 = *(*0x20 + 0x10);\n                iVar1 = unaff_RBX;\n                unaff_RBX = unaff_RDI;\n            }\n            else {\n                unaff_RSI = 4;\n                iVar1 = 4;\n                iVar2 = unaff_RBX;\n                unaff_RBX = 4;\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = in_RAX;\n            if (iVar2 != iVar2) {\n                iVar2 = 0xfffd;\n            }\n            *(*0x20 + -0x40) = 0x44b63e;\n            arg1 = fcn.00459180(unaff_RSI);\n            if (arg1 <= *(*0x20 + -0x18)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x40) = 0x44b665;\n            in_RAX = fcn.0045ef20(arg1, *(*0x20 + -0x18));\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44b675;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n        unaff_RDI = iVar2;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "0044bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044bba0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402ac0(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "0044bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044bc60(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x0044bc60:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x44bcee;\n                uVar2 = fcn.0044b6a0();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x0044bd93;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x44bca6;\n            iVar3 = fcn.00459180(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x0044be0a;\n    }\n    goto code_r0x0044be16;\ncode_r0x0044bd93:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x0044bdff;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x44bde9;\n            fcn.0045ef20(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x44bdf4;\n        fcn.0045eee0(arg1_00);\ncode_r0x0044bdf4:\n        *(*0x20 + -0x80) = 0x44bdff;\n        fcn.0045efa0(arg1_00);\n        goto code_r0x0044bdff;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x0044bdf4;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x44bd4b;\n    iVar3 = fcn.00459180(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x0044bd93;\ncode_r0x0044bdff:\n    *(*0x20 + -0x80) = 0x44be0a;\n    fcn.0045eee0(arg1_02);\ncode_r0x0044be0a:\n    *(*0x20 + -0x80) = 0x44be15;\n    in_RAX = fcn.0045eee0(arg1);\ncode_r0x0044be16:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44be25;\n    fcn.0045c800();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x0044bc60;\n}\n",
        "token_count": 1333
    },
    "0044be80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.0044be80(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "0044d720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d720(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044d2a0(*in_RAX);\n    return;\n}\n",
        "token_count": 95
    },
    "0044dfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044dfc0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044dfc0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44dfe5;\n        iVar1 = fcn.0044df00();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044e016;\n            if (unaff_RBX <= arg1) goto code_r0x0044e02d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044e016;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044e039;\ncode_r0x0044e016:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44e02d;\n    fcn.0045ef20(arg1, unaff_RBX);\ncode_r0x0044e02d:\n    *(*0x20 + -0x20) = 0x44e038;\n    in_RAX = fcn.0045eee0(unaff_RBX);\ncode_r0x0044e039:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44e048;\n    fcn.0045c800();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044dfc0;\n}\n",
        "token_count": 597
    },
    "0044e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e340(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044e220(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0044e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e3a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044d900(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 104
    },
    "0044e420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044e420(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x44e49b;\n                uVar6 = fcn.0044d2a0(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x44e519;\n                    fcn.0044d2a0();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x44e545;\n                    iVar7 = fcn.0044e780(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x44e566;\n            in_RAX = fcn.0045efa0(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44e576;\n        fcn.0045c800();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 971
    },
    "0044e5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e5a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044d900(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "0044e640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e640(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044d900(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0044e6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e6e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044d900(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "00450fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00450fa0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040ab40();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x5d26f8; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x5d26f0 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1208);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1210);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040ad60();\n    return iVar4;\n}\n",
        "token_count": 280
    },
    "00451460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00451460(void)\n\n{\n    ulong uStack16;\n    \n    fcn.004607e0();\n    return uStack16;\n}\n",
        "token_count": 34
    },
    "004514a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004514a0(ulong param_1)\n\n{\n    if (*0x5d1d20 != NULL) {\n        (***0x5d1d20)();\n        return;\n    }\n    fcn.0042f9e0(param_1);\n    return;\n}\n",
        "token_count": 64
    },
    "00451d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00451d20(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040ab40();\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "00452340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452340(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004523a0();\n    return;\n}\n",
        "token_count": 81
    },
    "004524c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004524c0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.00451660(&uStack16);\n    return;\n}\n",
        "token_count": 114
    },
    "00452d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452d60(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uStack16 = *0x626f58;\n    fcn.00451660(&uStack16);\n    return;\n}\n",
        "token_count": 103
    },
    "00452dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452dc0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626f48 == -1) {\n        iStack16 = 0;\n        fcn.00451660(&iStack16);\n    }\n    else {\n        iStack16 = *0x626f48;\n        fcn.00451660(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00454fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00454fc0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 8);\n            arg2 = uVar1;\n            uVar8 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar8;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar8;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x455025;\n            fcn.0044df00();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x60) = 0x45505a;\n                cVar3 = fcn.00402620(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x0045505e;\n                *(*0x20 + -0x60) = 0x455045;\n                cVar3 = fcn.00402620(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x0045505e:\n                return *(*0x20 + -0x30);\n            }\n            iVar5 = *(*0x20 + 0x28);\n            if (iVar5 == 0) {\n                iVar5 = **(*(*0x20 + 8) + 0x28);\n                uVar4 = *(*(*(*0x20 + 8) + 0x28) + 4);\n                unaff_RSI = iVar5;\n            }\n            else {\n                uVar4 = 0;\n            }\n            *(*0x20 + -0x39) = uVar4;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x60) = 0x4550ad;\n            iVar5 = fcn.0044d2a0();\n            arg1 = *(*0x20 + -0x28);\n            if (*arg1 == iVar5) {\n                if (*(*0x20 + -0x39) == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x60) = 0x4550fb;\n            uVar6 = fcn.0044df00();\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x60) = 0x45510a;\n            fcn.00435480();\n            *(*0x20 + -0x60) = 0x45511b;\n            fcn.00435d80();\n            *(*0x20 + -0x60) = 0x45512a;\n            fcn.00435d80();\n            *(*0x20 + -0x60) = 0x45512f;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x455134;\n            fcn.00435500();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x60) = 0x455145;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_DIL;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x455165;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_DIL = puVar7[0x20];\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1265
    },
    "004551a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004551a0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004551a0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x45520f;\n        fcn.0045f174();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x455228;\n        fcn.00456f20(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x45526f;\n        fcn.0045f480();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x4553b0;\n                    fcn.00456ea0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x004553c8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x5d1cf8;\n                if (*0x5d1cf8 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x455335;\n                    fcn.00435480();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x455346;\n                    fcn.00435d80();\n                    *(*0x20 + -0x290) = 0x455350;\n                    fcn.00435be0();\n                    *(*0x20 + -0x290) = 0x455355;\n                    fcn.004356e0();\n                    *(*0x20 + -0x290) = 0x45535a;\n                    fcn.00435500();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x455314;\n                    iVar2 = fcn.00456ca0(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x004553d6;\ncode_r0x004553c8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x4553d5;\n    in_RAX = fcn.0045eee0(0x100000);\ncode_r0x004553d6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x4553f3;\n    fcn.0045c800();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x004551a0;\n}\n",
        "token_count": 1562
    },
    "004554c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004554c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0044df00();\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.004356e0();\n    fcn.00435500();\n    uVar1 = fcn.0044d2a0();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.0044e220(uVar2);\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435d80();\n    fcn.00435b80(uVar2 & 0xffffffff);\n    fcn.00435500();\n    uVar2 = fcn.0044d2a0();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.0044d2a0();\n        fcn.00435480();\n        fcn.00435d80();\n        fcn.00435be0(uVar3);\n        fcn.00435500();\n    }\n    fcn.00435480();\n    fcn.004356e0();\n    fcn.00435500();\n    return;\n}\n",
        "token_count": 374
    },
    "00455f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00455f60(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045c6c0();\n    return 0;\n}\n",
        "token_count": 89
    },
    "004560e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004560e0(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x456129;\n                fcn.00452f20(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x45613d;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x45615c;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 497
    },
    "00456880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456880(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00435480();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435be0();\n    fcn.00435d80();\n    fcn.00435500();\n    auStack32 = CONCAT88(arg1, 0x456a60);\n    fcn.00435ee0(auStack32);\n    return;\n}\n",
        "token_count": 210
    },
    "004571e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004571e0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x561f60; iVar3 != 0; iVar3 = *(iVar3 + 0x220)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x004573b6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x45726b;\n            fcn.0040ab40();\n            uVar1 = *0x5d2810;\n            *(*0x20 + -0x58) = 0x457285;\n            puVar2 = fcn.0040f7a0(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x4572a5;\n            fcn.0040ad60();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x4572b3;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x4572c5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4572d1;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x4572e5;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4572ef;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x457305;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x45730a;\n            fcn.00435500();\n            iVar3 = 0x561f60;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x457347;\n                fcn.00435480();\n                *(*0x20 + -0x58) = 0x457358;\n                fcn.00435d80();\n                *(*0x20 + -0x58) = 0x457365;\n                fcn.00435be0();\n                *(*0x20 + -0x58) = 0x457376;\n                fcn.00435d80();\n                *(*0x20 + -0x58) = 0x457385;\n                fcn.00435be0();\n                *(*0x20 + -0x58) = 0x45738a;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x45738f;\n                fcn.00435500();\n                iVar3 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            *(*0x20 + -0x58) = 0x4573b6;\n            fcn.00433ce0();\ncode_r0x004573b6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x4573c5;\n            fcn.00435480();\n            *(*0x20 + -0x58) = 0x4573d6;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x4573e5;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x4573f6;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x457405;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x457416;\n            fcn.00435d80();\n            *(*0x20 + -0x58) = 0x457425;\n            fcn.00435be0();\n            *(*0x20 + -0x58) = 0x45742a;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x45742f;\n            fcn.00435500();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x457445;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x457454;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1513
    },
    "004592e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004592e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x45930e;\n                fcn.004514a0(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x459325;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45933a;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "004595a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004595a0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040c220(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "00459600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459600(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040e540(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 107
    },
    "00459660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459660(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0040e7c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00459700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459700(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00411b00(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00459760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459760(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00411da0();\n    return;\n}\n",
        "token_count": 81
    },
    "004597a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004597a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x5f8a70);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 288
    },
    "004598a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.004598a0(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (0 < *0x626760) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x626760);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.0042b260(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00459c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00459c80(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    uVar1 = *(in_RAX + 0x10);\n    if ((uVar1 & 1) == 0) {\n        if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) || ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))) {\n            iVar3 = 2;\n        }\n        else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n            iVar3 = 3;\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    else {\n        iVar3 = 1;\n    }\n    if (iVar3 == 0) {\n        do {\n            cVar2 = fcn.0042d5a0();\n            if (cVar2 != '\\0') {\n                return 0;\n            }\n            uVar1 = *(in_RAX + 0x10);\n            if ((uVar1 & 1) == 0) {\n                if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) || ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))\n                   ) {\n                    iVar3 = 2;\n                }\n                else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n                    iVar3 = 3;\n                }\n                else {\n                    iVar3 = 0;\n                }\n            }\n            else {\n                iVar3 = 1;\n            }\n        } while (iVar3 == 0);\n        return iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 504
    },
    "00459dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459dc0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    do {\n        cVar1 = fcn.0042d5a0(1);\n    } while (cVar1 == '\\0');\n    return;\n}\n",
        "token_count": 110
    },
    "0045a0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a0a0(void)\n\n{\n    fcn.0043d7c0();\n    return;\n}\n",
        "token_count": 29
    },
    "0045a420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a420(void)\n\n{\n    fcn.0045e5e0();\n    return;\n}\n",
        "token_count": 27
    },
    "0045a580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a580(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 82
    },
    "0045a5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a5c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00457480();\n    return;\n}\n",
        "token_count": 83
    },
    "0045a600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a600(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00457740();\n    return;\n}\n",
        "token_count": 81
    },
    "0045a640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a640(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 82
    },
    "0045a7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a7c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00445680(1);\n    return;\n}\n",
        "token_count": 85
    },
    "0045a820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a820(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004459c0(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0045a880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a880(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00445680(3);\n    return;\n}\n",
        "token_count": 86
    },
    "0045a8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a8e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004459c0(0);\n    return;\n}\n",
        "token_count": 86
    },
    "0045a920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a920(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x45a952;\n            fcn.00435480();\n            *(*0x20 + -0x20) = 0x45a965;\n            fcn.00435d80();\n            *(*0x20 + -0x20) = 0x45a96f;\n            fcn.00435a80();\n            *(*0x20 + -0x20) = 0x45a985;\n            fcn.00435d80();\n            *(*0x20 + -0x20) = 0x45a98f;\n            fcn.00435a80();\n            *(*0x20 + -0x20) = 0x45a994;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x45a999;\n            fcn.00435500();\n            *(*0x20 + -0x20) = 0x45a9aa;\n            in_RAX = fcn.00433ce0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x45a9b5;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "0045a9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045a9c0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.004607e0();\n    return uStack16;\n}\n",
        "token_count": 93
    },
    "0045aa40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045aa40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x48) = 0x45aa5e;\n            iVar1 = fcn.0044bba0();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x48) = 0x45aa6f;\n            uVar2 = fcn.0044b6a0();\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x48) = 0x45aa90;\n                fcn.0045f840(*(*0x20 + -0x20));\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x48) = 0x45aabc;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x45aac7;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 484
    },
    "0045aae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045aae0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0045f840(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "0045b440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b440(ulong arg1)\n\n{\n    fcn.0045b660(3);\n    return;\n}\n",
        "token_count": 30
    },
    "0045b4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b4a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.0045b660(6);\n    return;\n}\n",
        "token_count": 46
    },
    "0045b500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b500(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.0045b660(9);\n    return;\n}\n",
        "token_count": 44
    },
    "0045b5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b5a0(void)\n\n{\n    fcn.0045f1ab();\n    fcn.0045b660(0xc);\n    return;\n}\n",
        "token_count": 40
    },
    "0045b660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b660(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045f840(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x0045b7bf;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x4d2b10;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.004039c0();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043f4a0();\n        return uVar2;\n    }\n    fcn.0045eee0(0);\ncode_r0x0045b7bf:\n    fcn.00433560();\n    fcn.004329e0();\n    return 0;\n}\n",
        "token_count": 453
    },
    "0045ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ea40(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *(iVar1 + 0x1260) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1268);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.00460aa0();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 208
    },
    "0045f3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f3a0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    uVar1 = unaff_RSI[0x79];\n    uVar2 = unaff_RSI[0x7a];\n    uVar3 = unaff_RSI[0x7b];\n    unaff_RDI[0x78] = unaff_RSI[0x78];\n    unaff_RDI[0x79] = uVar1;\n    unaff_RDI[0x7a] = uVar2;\n    unaff_RDI[0x7b] = uVar3;\n    uVar1 = unaff_RSI[0x7d];\n    uVar2 = unaff_RSI[0x7e];\n    uVar3 = unaff_RSI[0x7f];\n    unaff_RDI[0x7c] = unaff_RSI[0x7c];\n    unaff_RDI[0x7d] = uVar1;\n    unaff_RDI[0x7e] = uVar2;\n    unaff_RDI[0x7f] = uVar3;\n    return;\n}\n",
        "token_count": 3496
    },
    "0045f3bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f3bc(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3269
    },
    "0045f480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f480(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "0045f51a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f51a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045f472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f472(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    return;\n}\n",
        "token_count": 1849
    },
    "0045f4b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f4b8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    return;\n}\n",
        "token_count": 1304
    },
    "0045f4c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f4c6(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    return;\n}\n",
        "token_count": 1189
    },
    "0045f50c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f50c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    return;\n}\n",
        "token_count": 637
    },
    "00460720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460720(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x5d1c88)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 188
    },
    "00460aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460aa0(void)\n\n{\n    fcn.0042cfe0();\n    return;\n}\n",
        "token_count": 26
    },
    "00460c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460c80(void)\n\n{\n    fcn.004514a0(*0x5cae08);\n    return;\n}\n",
        "token_count": 31
    },
    "00460ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460ca0(void)\n\n{\n    fcn.004514a0(*0x5cae18);\n    return;\n}\n",
        "token_count": 31
    },
    "00460d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460d40(void)\n\n{\n    fcn.0043e6c0();\n    return;\n}\n",
        "token_count": 27
    },
    "00460d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460d80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00443000(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "00461020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00461020(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045b000();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "00461080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00461080(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045b180();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "004610c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004610c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045b2e0();\n    return uStack24;\n}\n",
        "token_count": 37
    },
    "00461180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00461180(ulong arg1)\n\n{\n    ulong in_RDX;\n    ulong uStack32;\n    \n    fcn.00460840(arg1, in_RDX);\n    return uStack32;\n}\n",
        "token_count": 48
    },
    "004613a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004613a0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*unaff_RBX == *in_RAX) && (unaff_RBX[1] == in_RAX[1])) {\n        if ((unaff_RBX[3] == in_RAX[3]) &&\n           (((unaff_RBX[5] == in_RAX[5] && (cVar1 = fcn.00402620(in_RAX[3], unaff_RBX[2]),  cVar1 != '\\0')) &&\n            (cVar1 = fcn.00402620(in_RAX[5], unaff_RBX),  cVar1 != '\\0')))) {\n            uVar2 = fcn.00402620(0x20, unaff_RBX);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00464560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464560(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                do {\n                    while (arg1 = *in_RAX,  arg1 == 0) {\n                        *(*0x20 + -0x28) = 0x4645ac;\n                        fcn.0045a360();\n                        *(*0x20 + -0x28) = 0x4645bf;\n                        cVar1 = fcn.00459520(0x626617);\n                        if (cVar1 != '\\0') {\n                            *(*0x20 + -0x28) = 0x464609;\n                            fcn.004594c0(*(*0x20 + 8));\n                            *(*0x20 + -0x28) = 0x464618;\n                            fcn.004594c0();\n                            *(*0x20 + -0x28) = 0x46461d;\n                            fcn.0045a380();\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x4645c9;\n                        fcn.0045a380();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                } while (arg1 == 0x626617);\n                if (*(*0x20 + 0x10) == arg1) {\n                    *(*0x20 + -0x28) = 0x4645ec;\n                    fcn.004594c0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x46463a;\n                fcn.00433560();\n            }\n            unaff_RBX = 0x4eea50;\n            *(*0x20 + -0x28) = 0x46464d;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x464665;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 721
    },
    "00464be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00464be0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int32_t *in_RAX;\n    int64_t **ppiVar4;\n    char cVar5;\n    int64_t *piVar6;\n    char cVar7;\n    ulong uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [8];\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack40 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x626617)) {\n        auStack40 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack40._0_8_ == 0x4bc840) {\n        cVar7 = *auStack40._8_8_;\n        cVar5 = *(auStack40._8_8_ + 1);\n    }\n    else {\n        cVar5 = '\\0';\n        cVar7 = '\\0';\n    }\n    uStack16 = arg1;\n    ppiVar4 = fcn.0040dbe0(auStack24);\n    piVar6 = *ppiVar4;\n    if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.004658a0();\n        }\n        iVar2 = *(in_RAX + 2);\n        auStack56 = in_XMM15;\n        if ((iVar2 != 0) && (iVar2 != 0x626617)) {\n            auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n        }\n        if (auStack56._0_8_ == 0x4bc840) {\n            cVar7 = *auStack56._8_8_;\n            cVar5 = *(auStack56._8_8_ + 1);\n        }\n        else {\n            cVar5 = '\\0';\n            cVar7 = '\\0';\n        }\n        uStack16 = arg1;\n        ppiVar4 = fcn.0040dbe0(auStack24);\n        piVar6 = *ppiVar4;\n        if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n            uVar8 = *(in_RAX + 6);\n            uStack16 = arg1;\n            ppiVar4 = fcn.0040dbe0(auStack24);\n            cVar7 = uVar8;\n            piVar6 = *ppiVar4;\n            fcn.00465560();\n        }\n        LOCK();\n        iVar1 = *in_RAX;\n        *in_RAX = *in_RAX + -1;\n        if (iVar1 != 1) {\n            fcn.00465ba0();\n        }\n    }\n    if (cVar7 != '\\0') {\n        puVar3 = *piVar6;\n        if ((puVar3 == NULL) || (*0x5d1d60 == puVar3)) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar3;\n        }\n        return uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 815
    },
    "00465820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00465820(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 != 0) {\n            return in_RAX & 0xffffffffffffff00 | *0x5d1d60 == iVar2;\n        }\n        cVar1 = fcn.00459520(*0x5d1d60);\n        if (cVar1 != '\\0') break;\n        iVar2 = *in_RAX;\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "00465b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465b40(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00465ba0();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00465ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465ba0(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.0045a060();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.0045a820(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.0045a820(1);\n    return;\n}\n",
        "token_count": 247
    },
    "00466c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466c20(ulong param_1)\n\n{\n    int64_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = fcn.00466800();\n        if (param_1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x28);\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "00466ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466ca0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t noname_0;\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    noname_1 = *(in_RAX + 8);\n    if (*(in_RAX + 8) == 0) {\n        return 0;\n    }\n    while( true ) {\n        noname_0 = *(noname_1 + 0x20);\n        iVar3 = noname_0;\n        uVar2 = fcn.00466920(noname_0, noname_1, param_3, param_4);\n        if (iVar3 != '\\0') {\n            return uVar2;\n        }\n        if (noname_0 == 0) break;\n        cVar1 = fcn.00459520(noname_0);\n        noname_1 = noname_0;\n        if (cVar1 != '\\0') {\n            fcn.004594c0(noname_0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "00467cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467cc0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x467cf1;\n            iVar5 = fcn.00447160(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x00467df1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x00467de6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x00467ddb;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x00467d02;\n                            }\n                            goto code_r0x00467dd0;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00467dc5;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x00467d02:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x467dc5;\n            fcn.0045ef60(unaff_RBX, arg1);\ncode_r0x00467dc5:\n            *(*0x20 + -0x28) = 0x467dd0;\n            fcn.0045eee0(arg1);\ncode_r0x00467dd0:\n            *(*0x20 + -0x28) = 0x467ddb;\n            fcn.0045eee0(arg1);\ncode_r0x00467ddb:\n            *(*0x20 + -0x28) = 0x467de6;\n            fcn.0045eee0(arg1);\ncode_r0x00467de6:\n            *(*0x20 + -0x28) = 0x467df1;\n            fcn.0045eee0(arg1);\ncode_r0x00467df1:\n            *(*0x20 + -0x28) = 0x467dfc;\n            in_RAX = fcn.0045eee0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x467e11;\n        fcn.0045c800();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1067
    },
    "004694e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004694e0(ulong arg1)\n\n{\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t arg1_01;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RBX == 0) {\n        arg1_00 = 0;\n    }\n    else {\n        iVar3 = 0;\n        arg1_00 = 0;\n        arg1_01 = 0;\n        iVar2 = 0;\n        do {\n            if (arg1_00 != 0) {\n                uVar4 = arg1_00 + 1;\n                iVar1 = iVar2;\n                if (arg1_01 < uVar4) {\n                    arg1_01 = arg1_00;\n                    iVar1 = fcn.00447240(arg1_00);\n                    uVar4 = iVar2 + 1;\n                }\n                *(iVar1 + arg1_00) = 0x20;\n                arg1_00 = uVar4;\n            }\n            iVar2 = fcn.00468fe0(arg1_01);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_RBX);\n    }\n    fcn.0044afa0(arg1_00);\n    return;\n}\n",
        "token_count": 358
    },
    "00469640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004696af)\n\nvoid fcn.00469640(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    uint64_t arg1_02;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                *(*0x20 + -0xf8) = 0;\n                *(*0x20 + -0x138) = 0x46969a;\n                fcn.00467b20(2);\n                return;\n            }\n            iVar5 = 0;\n            iVar10 = 0;\n            iVar1 = in_RAX;\n            while( true ) {\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar10 + *(iVar1 + 8);\n                iVar10 = iVar7 + 1;\n                if (unaff_RBX <= iVar5) break;\n                iVar1 = iVar1 + 0x10;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x108) = iVar10;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar7 = iVar7 + 2;\n            *(*0x20 + -0xe0) = iVar7;\n            *(*0x20 + -0x138) = 0x4696fd;\n            uVar2 = fcn.00447160(iVar7);\n            *(*0x20 + -0x18) = uVar2;\n            arg1_02 = *(*0x20 + -0xe0);\n            piVar8 = *(*0x20 + -0x10);\n            iVar10 = 0;\n            uVar4 = 0;\n            while( true ) {\n                iVar1 = piVar8[1];\n                iVar5 = *piVar8;\n                arg1 = uVar4 + iVar1;\n                unaff_RBX = uVar4;\n                if (arg1_02 < arg1) break;\n                if (arg1 < uVar4) {\ncode_r0x00469905:\n                    *(*0x20 + -0x138) = 0x469910;\n                    fcn.0045efa0(arg1);\n                    break;\n                }\n                *(*0x20 + -0xe8) = iVar10;\n                *(*0x20 + -0x10) = piVar8;\n                *(*0x20 + -0x100) = uVar4;\n                *(*0x20 + -0xf0) = arg1;\n                *(*0x20 + -0x110) = iVar1;\n                *(*0x20 + -0x138) = 0x46977e;\n                iVar7 = fcn.0044b140(iVar1);\n                iVar1 = *(*0x20 + -0x110);\n                iVar10 = iVar1;\n                if (iVar5 < iVar1) {\n                    iVar10 = iVar5;\n                }\n                uVar11 = *(*0x20 + -0x108);\n                uVar9 = *(*0x20 + -0x100);\n                arg1_00 = *(*0x20 + -0x18);\n                if (iVar7 != (-((uVar11 - uVar9) + 1) >> 0x3f & uVar9) + arg1_00) {\n                    *(*0x20 + -0x138) = 0x4697c5;\n                    fcn.0045f840(iVar10);\n                    iVar1 = *(*0x20 + -0x110);\n                    arg1_00 = *(*0x20 + -0x18);\n                    uVar9 = *(*0x20 + -0x100);\n                    uVar11 = *(*0x20 + -0x108);\n                }\n                uVar4 = uVar9 + iVar1 + 1;\n                arg1_02 = *(*0x20 + -0xe0);\n                arg1_01 = uVar4;\n                unaff_RBX = arg1_00;\n                if (arg1_02 < uVar4) {\ncode_r0x004698fa:\n                    *(*0x20 + -0x138) = 0x469905;\n                    fcn.0045ef60(arg1_01, arg1_02);\n                    goto code_r0x00469905;\n                }\n                uVar3 = *(*0x20 + -0xf0);\n                if (uVar4 < uVar3) {\ncode_r0x004698f5:\n                    *(*0x20 + -0x138) = 0x4698fa;\n                    fcn.0045efa0(arg1_01);\n                    goto code_r0x004698fa;\n                }\n                *(*0x20 + -0x111) = 0;\n                *(*0x20 + -0x111) = 0;\n                uVar3 = uVar3 & -((uVar11 - uVar3) + 1) >> 0x3f;\n                if (*0x20 + -0x111 != uVar3 + arg1_00) {\n                    *(arg1_00 + uVar3) = *(*0x20 + -0x111);\n                }\n                iVar10 = *(*0x20 + -0xe8) + 1;\n                if (*(*0x20 + 0x10) <= iVar10) {\n                    arg1_01 = uVar9 + iVar1 + 2;\n                    if (arg1_01 <= arg1_02) {\n                        if (uVar4 <= arg1_01) {\n                            *(*0x20 + -0x111) = 0;\n                            *(*0x20 + -0x111) = 0;\n                            uVar11 = uVar11 - uVar4;\n                            uVar4 = uVar4 & -(uVar11 + 1) >> 0x3f;\n                            if (*0x20 + -0x111 != uVar4 + arg1_00) {\n                                *(arg1_00 + uVar4) = *(*0x20 + -0x111);\n                            }\n                            *(*0x20 + -0x138) = 0x4698a7;\n                            unaff_RBX = fcn.0044afa0(arg1_02);\n                            *(*0x20 + -0x138) = 0x4698ba;\n                            fcn.0044b220(arg1_00);\n                            *(*0x20 + -0x138) = 0x4698bf;\n                            fcn.00467b20(arg1_00);\n                            if (unaff_RBX != 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x138) = 0x4698df;\n                            fcn.0045eee0(0);\n                        }\n                        *(*0x20 + -0x138) = 0x4698ea;\n                        fcn.0045efa0(arg1_01);\n                    }\n                    *(*0x20 + -0x138) = 0x4698f5;\n                    fcn.0045ef60(arg1_01, arg1_02);\n                    arg1 = uVar11;\n                    goto code_r0x004698f5;\n                }\n                piVar8 = *(*0x20 + -0x10) + 0x10;\n            }\n            *(*0x20 + -0x138) = 0x469918;\n            in_RAX = fcn.0045ef60(arg1, arg1_02);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x46992d;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1990
    },
    "0046ae60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ae60(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.0044ac00(unaff_RBX);\n            fcn.0044b220(in_RAX);\n            uVar1 = fcn.00467b20(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 214
    },
    "0046af40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046af40(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00467cc0(arg1);\n    fcn.0044b3e0(arg1_00);\n    return;\n}\n",
        "token_count": 202
    },
    "0046b500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0046b500(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.0046e660(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0046b8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046b8a0(void)\n\n{\n    uint32_t in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x1c) = in_EAX;\n            *(*0x20 + -0x18) = 0;\n            *(*0x20 + -0x40) = 0x46b8d5;\n            iVar1 = fcn.0046dc00(0);\n            if (((iVar1 == 0) || (*(iVar1 + 8) != 0x4ba880)) || (*in_EAX != 0x7a)) {\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x40) = 0x46b978;\n                    puVar3 = fcn.0040cc20();\n                    puVar3[1] = 0x42;\n                    *puVar3 = 0x4d20ff;\n                    return 0;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x46b90b;\n            uVar2 = fcn.00447160(*(*0x20 + -0x18));\n            if (*(*0x20 + -0x18) != 0) {\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x40) = 0x46b92e;\n                iVar1 = fcn.0046dc00(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x10);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x46b9a8;\n            in_EAX = fcn.0045eee0(0);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x46b9b2;\n        fcn.0045c800();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "0046b9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046b9c0(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x40) = noname_2;\n            *(*0x20 + 0x44) = arg4;\n            *(*0x20 + -0x58) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = in_R10;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = *(*0x20 + 8);\n            *(*0x20 + -0x48) = *(*0x20 + 0x10);\n            *(*0x20 + -0x50) = *0x5d1e88;\n            *(*0x20 + -0xd0) = 0x46ba65;\n            arg1 = *0x5d1e88;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*(*0x20 + -0x50) + 0x20) + 0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x30);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x48);\n                *(*0x20 + -0xa8) = 0;\n                iVar1 = *(*0x20 + -0x58);\n                *(*0x20 + -0xd0) = 0x46bb05;\n                iVar2 = fcn.0045b5a0(iVar1, uVar3, *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xd0) = 0x46bb45;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xd0) = 0x46bb76;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 0x18) = in_RAX;\n        *(puVar4 + 0x20) = unaff_RBX;\n        *(puVar4 + 0x28) = arg1;\n        *(puVar4 + 0x30) = unaff_RDI;\n        *(puVar4 + 0x38) = unaff_RSI;\n        puVar4[0x40] = noname_2;\n        *(puVar4 + 0x44) = arg4;\n        *(puVar4 + 0x48) = in_R10;\n        *(puVar4 + 0x50) = in_R11;\n        *(puVar4 + -8) = 0x46bba9;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 0x18);\n        unaff_RBX = *(puVar4 + 0x20);\n        arg1 = *(puVar4 + 0x28);\n        unaff_RDI = *(puVar4 + 0x30);\n        unaff_RSI = *(puVar4 + 0x38);\n        noname_2._0_1_ = puVar4[0x40];\n        arg4._0_4_ = *(puVar4 + 0x44);\n        in_R10 = *(puVar4 + 0x48);\n        in_R11 = *(puVar4 + 0x50);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1171
    },
    "0046bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046bbe0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d20f0;\n            *(*0x20 + -0x48) = 0x46bc12;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x46bc38;\n                iVar1 = fcn.0045b440(*(*0x20 + -0x18));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x46bc48;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x46bc6b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46bc76;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 444
    },
    "0046bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046bca0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg3;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = in_R10;\n            *(*0x20 + -0x40) = *0x5d20f8;\n            *(*0x20 + -0xa8) = 0x46bd0e;\n            arg1 = *0x5d20f8;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0xa0) = *(*0x20 + -0x38);\n                *(*0x20 + -0x98) = 0;\n                *(*0x20 + -0xa8) = 0x46bd70;\n                iVar1 = fcn.0045b500(*(*0x20 + -0x48), *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x46bd85;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0xa8) = 0x46bdad;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + 0x40) = in_R10;\n        *(puVar3 + -8) = 0x46bdda;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        in_R10 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 908
    },
    "0046be20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046be20(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = *0x5d2100;\n            *(*0x20 + -0x70) = 0x46be6a;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x20) + 0x20);\n                *(*0x20 + -0x70) = 0x46beae;\n                iVar1 = fcn.0045b4a0(*(*0x20 + -0x28), uVar2, *(*0x20 + 0x1c), *(*0x20 + -0x18));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x46bebe;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x70) = 0x46bee5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x46bf05;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 718
    },
    "0046bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046bf40(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg3;\n            *(*0x20 + -0x38) = *0x5d2110;\n            *(*0x20 + -0x88) = 0x46bf8b;\n            arg1 = *0x5d2110;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x38) + 0x20);\n                *(*0x20 + -0x88) = 0x46bfc5;\n                iVar1 = fcn.0045b4a0(*(*0x20 + -0x40), uVar2, *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x46bfd5;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x88) = 0x46bff7;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x46c01b;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 777
    },
    "0046c140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046c140(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d1e30;\n            *(*0x20 + -0x48) = 0x46c172;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46c198;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46c1d6;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46c205;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46c210;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "0046c220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046c220(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 0x20) = unaff_ESI;\n            *(*0x20 + 0x24) = arg3;\n            *(*0x20 + 0x28) = arg4;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = *0x5d1e68;\n            *(*0x20 + -0x88) = 0x46c279;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = in_XMM15;\n                *(*0x20 + -0x88) = 0x46c2df;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x20));\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x88) = 0x46c326;\n                    fcn.0040a440();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x88) = 0x46c356;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_ESI;\n        *(puVar3 + 0x24) = arg3;\n        *(puVar3 + 0x28) = arg4;\n        *(puVar3 + -8) = 0x46c37c;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_ESI = *(puVar3 + 0x20);\n        arg3._0_4_ = *(puVar3 + 0x24);\n        arg4._0_4_ = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 871
    },
    "0046c3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046c3c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x5d1e80;\n            *(*0x20 + -0x70) = 0x46c405;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x70) = 0x46c445;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x70) = 0x46c485;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x70) = 0x46c4b0;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x46c4c9;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0046c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046c500(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = unaff_SIL;\n            *(*0x20 + 0x34) = arg3;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = unaff_RDI;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = in_R10;\n            *(*0x20 + -0x40) = in_R11;\n            arg1 = *(*0x20 + 8);\n            *(*0x20 + -0x48) = arg1;\n            *(*0x20 + -0x50) = *0x5d1e90;\n            *(*0x20 + -200) = 0x46c58d;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x48);\n                *(*0x20 + -0xa8) = in_XMM15;\n                *(*0x20 + -200) = 0x46c614;\n                iVar2 = fcn.0045b5a0(iVar1, *(*0x20 + 0x34), *(*0x20 + -0x28), *(*0x20 + 0x30));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -200) = 0x46c64f;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -200) = 0x46c685;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 0x10) = in_RAX;\n        *(puVar4 + 0x18) = unaff_RBX;\n        *(puVar4 + 0x20) = arg1;\n        *(puVar4 + 0x28) = unaff_RDI;\n        puVar4[0x30] = unaff_SIL;\n        *(puVar4 + 0x34) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x46c6b8;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 0x10);\n        unaff_RBX = *(puVar4 + 0x18);\n        arg1 = *(puVar4 + 0x20);\n        unaff_RDI = *(puVar4 + 0x28);\n        unaff_SIL = puVar4[0x30];\n        arg3._0_4_ = *(puVar4 + 0x34);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1093
    },
    "0046c700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046c700(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1ec0;\n            *(*0x20 + -0x48) = 0x46c72f;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x46c755;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46c790;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46c7bb;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46c7c6;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "0046c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046c7e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1ec8;\n            *(*0x20 + -0x48) = 0x46c80b;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x46c831;\n                fcn.0045b440(*(*0x20 + -0x10));\n                return;\n            }\n            *(*0x20 + -0x48) = 0x46c846;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x46c851;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 369
    },
    "0046c860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046c860(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + 0x2c) = noname_2;\n            *(*0x20 + 0x30) = arg4;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + -0x18) = *0x5d1ef0;\n            *(*0x20 + -0x90) = 0x46c8c6;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                iVar1 = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = 0x46c91f;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x30), *(*0x20 + -0x10), *(*0x20 + 0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x90) = 0x46c965;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x90) = 0x46c996;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        puVar4[0x2c] = noname_2;\n        *(puVar4 + 0x30) = arg4;\n        *(puVar4 + -8) = 0x46c9be;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        noname_2._0_1_ = puVar4[0x2c];\n        arg4._0_4_ = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 908
    },
    "0046ca00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ca00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d1f00;\n            *(*0x20 + -0x48) = 0x46ca32;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46ca58;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46ca96;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46cac5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46cad0;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "0046cae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046cae0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x5d1f08;\n            *(*0x20 + -0x58) = 0x46cb14;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x46cb45;\n                iVar2 = fcn.0045b440(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x58) = 0x46cb88;\n                    fcn.0040a440();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x58) = 0x46cbb8;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46cbc8;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 536
    },
    "0046cbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046cbe0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x5d1f28;\n            *(*0x20 + -0x90) = 0x46cc53;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x46ccab;\n                uVar2 = fcn.0045b500(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x46ccea;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x46cd25;\n            in_EAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x46cd50;\n        fcn.0045c800();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 961
    },
    "0046cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046cd80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1f38;\n            *(*0x20 + -0x48) = 0x46cdaf;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x46cdd5;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46ce10;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46ce3b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46ce46;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 507
    },
    "0046ce60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046ce60(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x5d1f60;\n            *(*0x20 + -0x40) = 0x46ce86;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x46cea8;\n                fcn.0045b440(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x46cebd;\n            fcn.00433560();\n        }\n        *(puVar2 + -8) = 0x46cec5;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "0046cfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046cfe0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x5d1f80;\n            *(*0x20 + -0x48) = 0x46d00a;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x46d030;\n                iVar1 = fcn.0045b440(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0x48) = 0x46d070;\n                    fcn.0040a440();\n                    iVar1 = *(*0x20 + -0x18);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x46d0a5;\n            fcn.00433560();\n        }\n        *(puVar3 + -8) = 0x46d0ab;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 420
    },
    "0046d0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046d0c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = *0x5d1f90;\n            *(*0x20 + -0x48) = 0x46d0ea;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x46d110;\n                iVar1 = fcn.0045b440(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x48) = 0x46d15b;\n                    fcn.0040a440();\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x46d185;\n            fcn.00433560();\n        }\n        *(puVar3 + -8) = 0x46d18b;\n        fcn.0045c800();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 420
    },
    "0046d1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046d1a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x5d1f98;\n            *(*0x20 + -0x58) = 0x46d1d8;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x46d212;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x46d251;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x46d285;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x46d299;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0046d6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046d6c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = *0x5d1fc8;\n            *(*0x20 + -0x78) = 0x46d705;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x46d745;\n                uVar2 = fcn.0045b4a0(iVar1, uVar2, *(*0x20 + -0x20), 0);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x78) = 0x46d786;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x78) = 0x46d7b6;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x46d7cf;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 685
    },
    "0046dc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046dc00(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = *0x5d2060;\n            *(*0x20 + -0x68) = 0x46dc3c;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x20) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x68) = 0x46dc85;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + -0x18), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x46dcc5;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x46dcf0;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + 0x18) = unaff_RDI;\n        *(puVar4 + -8) = 0x46dd08;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        unaff_RDI = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0046de60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046de60(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            if (arg1 == 0) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = *0x5d20e8;\n            *(*0x20 + -0x78) = 0x46deb5;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46def4;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x46df2f;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x46df5a;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x46df7e;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 850
    },
    "0046dfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046dfc0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d2118;\n            *(*0x20 + -0x48) = 0x46dfef;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x46e015;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46e050;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46e07b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46e086;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 506
    },
    "0046e0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e0a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d2140;\n            *(*0x20 + -0x48) = 0x46e0d3;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x46e105;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46e145;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46e170;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x46e17f;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "0046e1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e1a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d2148;\n            *(*0x20 + -0x48) = 0x46e1d6;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46e207;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46e245;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46e270;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x46e27f;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 558
    },
    "0046e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e2a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x5d2170;\n            *(*0x20 + -0x48) = 0x46e2d6;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46e305;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46e345;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46e370;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x46e37f;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "0046e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e3a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x40) = unaff_RSI;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x5d2190;\n            *(*0x20 + -0xa0) = 0x46e405;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0xa0) = 0x46e457;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x40));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x46e496;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x46e4c7;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x46e4ef;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 895
    },
    "0046e520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e520(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = *0x5d21f0;\n            *(*0x20 + -0x78) = 0x46e568;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46e5aa;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x46e5e5;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x46e610;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x46e62e;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 780
    },
    "0046e660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e660(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            if (arg1 == 0) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = *0x5d21f8;\n            *(*0x20 + -0x78) = 0x46e6b5;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46e6f4;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x46e72f;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x46e75a;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x46e77e;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "0046e7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e7c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x28) = *0x5d2120;\n            *(*0x20 + -0x58) = 0x46e7f5;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x58) = 0x46e825;\n                fcn.0045b440(*(*0x20 + -0x20));\n                return;\n            }\n            *(*0x20 + -0x58) = 0x46e83a;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x46e84f;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 475
    },
    "0046e9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e9a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + -0x28) = in_R10;\n            *(*0x20 + -0x30) = *0x5d21b8;\n            *(*0x20 + -0xa0) = 0x46ea15;\n            arg1 = *0x5d21b8;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x46ea7f;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x46eac5;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x46eaf6;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x46eb27;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1039
    },
    "0046eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046eb60(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg3;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = *0x5d21c0;\n            *(*0x20 + -0xa0) = 0x46ebc6;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = in_XMM15;\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x46ec18;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x18), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x46ec65;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x46ec96;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x46ecbe;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 898
    },
    "0046ed00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ed00(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x5d21d0;\n            *(*0x20 + -0x98) = 0x46ed65;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x90) = in_XMM15;\n                iVar1 = *(*0x20 + -0x38);\n                *(*0x20 + -0x98) = 0x46edb9;\n                iVar2 = fcn.0045b500(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x28));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x5caf10;\n                    if ((iVar1 != 0) && (uVar3 = *0x5caf20,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x98) = 0x46ee05;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x98) = 0x46ee36;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x46ee5d;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 898
    },
    "0046eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046eea0(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d21e0;\n            *(*0x20 + -0x48) = 0x46eed6;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x46ef05;\n                iVar1 = fcn.0045b440(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x46ef15;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x46ef37;\n            in_EAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46ef46;\n        fcn.0045c800();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "00473e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473e60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0046bbe0();\n    return;\n}\n",
        "token_count": 82
    },
    "00473ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473ea0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x1c) = unaff_RDI;\n            *(*0x20 + -0x48) = 0x473ed1;\n            fcn.0046ae60();\n            if (unaff_RDI != 0) goto code_r0x00473ee3;\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00473ee3:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                *(*0x20 + -0x48) = 0x473f09;\n                iVar1 = fcn.0046be20(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x18);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x48) = 0x473f50;\n            in_RAX = fcn.0045eee0(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x473f69;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00474380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00474380(int64_t *arg1, ulong noname_1, uchar *arg3)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    uint64_t noname_1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x70) = 0x4743c5;\n            piVar1 = fcn.0046ae60();\n            if (unaff_RDI == NULL) {\n                unaff_RBX = arg1;\n                if (arg1 != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x004743e0;\n                }\n            }\n            else {\n                piVar1 = NULL;\ncode_r0x004743e0:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = piVar1;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x34) = *(*0x20 + 0x28);\n                uVar3 = *(*0x20 + 0x30);\n                noname_1_00 = *(*0x20 + 0x20);\n                unaff_RSI = *(*0x20 + 0x28);\n                while (unaff_RSI != 0) {\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RSI;\n                    *(*0x20 + -0x10) = noname_1_00;\n                    unaff_RDI = *0x20 + -0x38;\n                    arg3 = *0x20 + -0x34;\n                    *(*0x20 + -0x70) = 0x47447a;\n                    iVar2 = fcn.0046bf40(0, noname_1_00, arg3);\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + -0x34) <= *(*0x20 + -0x28)) {\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x70) = 0x474509;\n                        fcn.0045ef60(*(*0x20 + -0x34), *(*0x20 + -0x28));\n                        arg1 = piVar1;\n                        unaff_RSI = noname_1_00;\n                        break;\n                    }\n                    if (((iVar2 == 0) || (*(iVar2 + 8) != 0x4ba880)) || (*piVar1 != 0xea)) {\n                        return 0;\n                    }\n                    arg1 = *(*0x20 + -0x34);\n                    if (*(*0x20 + -0x34) <= *(*0x20 + -0x30)) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x70) = 0x474437;\n                    noname_1_00 = fcn.00447160(arg1);\n                    piVar1 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x34);\n                    unaff_RSI = uVar3;\n                }\n                *(*0x20 + -0x70) = 0x474513;\n                fcn.0045eee0(unaff_RSI);\n                unaff_RBX = arg1;\n            }\n            *(*0x20 + -0x70) = 0x47451d;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x474545;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1259
    },
    "004749a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004749a0(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uint64_t arg1;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x80 && *0x20 + -0x80 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x100;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x108) = 0x4749d8;\n            uVar2 = fcn.0046ae60();\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x004749ef;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x004749ef:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0xe0) = in_XMM15;\n                unaff_RDI = *0x20 + -0xd8;\n                *(*0x20 + -0x110) = unaff_RBP;\n                *(*0x20 + -0x108) = 0x474a16;\n                fcn.0045f18b();\n                unaff_RBP = *(*0x20 + -0x110);\n                puVar3 = *0x20 + -0xe0;\n                arg1 = 100;\n                while (arg1 != 0) {\n                    *(*0x20 + -0xe8) = arg1;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x108) = 0x474a9a;\n                    uVar1 = fcn.00474c80(arg1);\n                    if (puVar3 != NULL) {\n                        return 0;\n                    }\n                    arg2 = *(*0x20 + -0xe8);\n                    if (uVar1 <= arg2) {\n                        arg1 = uVar1;\n                        if (arg1 <= arg2) {\n                            *(*0x20 + -0x108) = 0x474ac5;\n                            uVar2 = fcn.0046af40(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x108) = 0x474af8;\n                        fcn.0045ef60(arg1, arg2);\n                        unaff_RBX = puVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                    *(*0x20 + -0xe8) = unaff_RBX;\n                    *(*0x20 + -0x108) = 0x474a70;\n                    puVar3 = fcn.00447160(unaff_RBX);\n                    arg1 = *(*0x20 + -0xe8);\n                }\n                *(*0x20 + -0x108) = 0x474aff;\n                fcn.0045eee0(arg1);\n            }\n            *(*0x20 + -0x108) = 0x474b09;\n            in_RAX = fcn.0045eee0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x474b19;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 961
    },
    "00474b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00474b40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x5d1c18;\n            *(*0x20 + -0x98) = 0x474ba6;\n            arg1 = *0x5d1c18;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x90) = in_XMM15;\n                *(*0x20 + -0x98) = 0x474bf7;\n                iVar1 = fcn.0045b500(*(*0x20 + -0x38), *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x474c07;\n                    fcn.0040a440();\n                    uVar2 = 0x4eec98;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x474c2f;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_EDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + -8) = 0x474c57;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3._0_4_ = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 848
    },
    "00474c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00474c80(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x5d1bf0;\n            *(*0x20 + -0x58) = 0x474cb8;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x474cf2;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x474d31;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x474d65;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x474d79;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 587
    },
    "00479f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00479f00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.0047a020(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0047a020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047a020(ulong arg1)\n\n{\n    ulong in_RDX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00479ca0(arg1);\n    fcn.0047a0a0(arg1, in_RDX);\n    return;\n}\n",
        "token_count": 110
    },
    "0047a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0047a2c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.00461180(arg1);\n    if (iVar1 + 0x9fe07780U >> 0x21 != 0) {\n        return unaff_EBX;\n    }\n    return unaff_EBX | (iVar1 + 0x9fe07780U) * 0x40000000 | 0x8000000000000000;\n}\n",
        "token_count": 177
    },
    "0047a8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047a8c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_RAX != 0) {\n        if ((in_RAX == 0x5d29c0) && (*0x626858 == 0)) {\n            fcn.00465c80();\n        }\n        return in_RAX;\n    }\n    return 0x5ced80;\n}\n",
        "token_count": 148
    },
    "0047eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047eda0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (iVar2 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    while (iVar2 = iVar2 + 1,  iVar3 = iVar2,  iVar2 < unaff_RDI) {\n        while( true ) {\n            if (arg1 < iVar3) {\n                cVar1 = (**(in_RAX + 0x20))(iVar3 + -1);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') break;\n            (**(in_RAX + 0x28))();\n            iVar3 = iVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0047eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047eec0(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = (**(in_RAX + 0x18))();\n    fcn.0047ef20(arg1);\n    return;\n}\n",
        "token_count": 113
    },
    "0047f420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047f420(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1 = unaff_RDI - arg1;\n    iVar2 = unaff_RSI - unaff_RDI;\n    while (iVar2 != arg1) {\n        if (iVar2 < arg1) {\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + unaff_RDI, unaff_RDI - arg1);\n            }\n            arg1 = arg1 - iVar2;\n        }\n        else {\n            for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + ((unaff_RDI + iVar2) - arg1), unaff_RDI - arg1);\n            }\n            iVar2 = iVar2 - arg1;\n        }\n    }\n    for (iVar2 = 0; iVar2 < arg1; iVar2 = iVar2 + 1) {\n        (**(in_RAX + 0x28))(iVar2 + unaff_RDI, unaff_RDI - arg1, iVar2 + (unaff_RDI - arg1));\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00480a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00480a20(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t unaff_SIL;\n    int64_t unaff_RDI;\n    ulong in_R10;\n    ulong *in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uVar3;\n    uint8_t uStack0000000000000028;\n    ulong uStack0000000000000038;\n    ulong *puStack0000000000000040;\n    uchar auStack880 [8];\n    uchar auStack872 [792];\n    int64_t iStack80;\n    int64_t iStack72;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    uStack0000000000000038 = in_R10;\n    puStack0000000000000040 = in_R11;\n    uStack0000000000000028 = unaff_SIL;\n    while (uVar3 = SUB168(in_XMM15 >> 0x40, 0),  auStack872 < *(unaff_R14 + 0x10) || auStack872 == *(unaff_R14 + 0x10))\n    {\n        fcn.0045c800();\n    }\n    fcn.0045f0a9();\n    fcn.0047fbc0();\n    fcn.00480120(puStack0000000000000040, *puStack0000000000000040);\n    if (unaff_RDI < 0) {\n        fcn.004810c0(uStack0000000000000038);\n        auStack24 = CONCAT88(uVar3, iStack72);\n        iVar2 = unaff_RDI;\n        if (uStack0000000000000028 < 0x48) {\n            if (uStack0000000000000028 == 0x45) {\ncode_r0x00480d08:\n                iStack72 = unaff_RDI;\n                iVar2 = iStack80 + -1;\n                goto code_r0x00480d67;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x47) goto code_r0x00480d67;\n        }\n        else {\n            if (uStack0000000000000028 == 0x65) goto code_r0x00480d08;\n            if (uStack0000000000000028 == 0x66) {\n                iVar1 = iStack80 - iStack72;\n                iStack72 = unaff_RDI;\n                iVar2 = 0;\n                if (0 < iVar1) {\n                    iVar2 = iVar1;\n                }\n                goto code_r0x00480d67;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x67) goto code_r0x00480d67;\n        }\n        iStack72 = iStack80;\n        iVar2 = iStack80;\n        goto code_r0x00480d67;\n    }\n    if (uStack0000000000000028 < 0x48) {\n        if (uStack0000000000000028 == 0x45) {\ncode_r0x00480b46:\n            fcn.004801e0(unaff_RDI + 1);\n        }\n        else if (uStack0000000000000028 == 0x47) {\ncode_r0x00480b7f:\n            if (unaff_RDI == 0) {\n                unaff_RDI = 1;\n            }\n            fcn.004801e0();\n        }\n    }\n    else {\n        if (uStack0000000000000028 == 0x65) goto code_r0x00480b46;\n        if (uStack0000000000000028 == 0x66) {\n            fcn.004801e0(iStack72 + unaff_RDI);\n        }\n        else if (uStack0000000000000028 == 0x67) goto code_r0x00480b7f;\n    }\n    auStack24 = CONCAT88(uVar3, iStack72);\n    iVar2 = unaff_RDI;\ncode_r0x00480d67:\n    auStack40 = CONCAT88(iStack80, 800);\n    auStack56 = CONCAT88(800, auStack880);\n    fcn.00480e40(arg1, iStack72, iVar2);\n    return;\n}\n",
        "token_count": 1008
    },
    "00480e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00480e40(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    char unaff_DIL;\n    uint8_t in_R9B;\n    int64_t unaff_R14;\n    uint uStackX32;\n    uint uStackX36;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    int64_t iStack0000000000000038;\n    \n    iStack0000000000000038 = in_RAX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (in_R9B < 0x48) {\n        if (in_R9B == 0x45) {\ncode_r0x00480e7d:\n            fcn.004815c0(arg1);\n            return;\n        }\n        if (in_R9B == 0x47) {\ncode_r0x00480ed4:\n            iVar1 = CONCAT44(uStackX36, uStackX32);\n            if ((iVar1 < arg3) &&\n               (CONCAT44(in_stack_0000002c, in_stack_00000028) == iVar1 ||\n                CONCAT44(in_stack_0000002c, in_stack_00000028) < iVar1)) {\n                arg3 = iVar1;\n            }\n            if (unaff_DIL != '\\0') {\n                arg3 = 6;\n            }\n            iVar1 = CONCAT44(in_stack_0000002c, in_stack_00000028) + -1;\n            if ((-5 < iVar1) && (iVar1 < arg3)) {\n                fcn.00481b20(arg1);\n                return;\n            }\n            fcn.004815c0(arg1);\n            return;\n        }\n    }\n    else {\n        if (in_R9B == 0x65) goto code_r0x00480e7d;\n        if (in_R9B == 0x66) {\n            fcn.00481b20(arg1);\n            return;\n        }\n        if (in_R9B == 0x67) goto code_r0x00480ed4;\n    }\n    if (arg1 < unaff_RBX + 2U) {\n        iStack0000000000000038 = fcn.00447240(unaff_RBX);\n    }\n    *(iStack0000000000000038 + unaff_RBX) = 0x25;\n    *(iStack0000000000000038 + 1 + unaff_RBX) = in_R9B;\n    return;\n}\n",
        "token_count": 614
    },
    "00481b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481b20(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char cVar10;\n    uint64_t unaff_RDI;\n    uchar uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \ncode_r0x00481b20:\n    cVar10 = unaff_RDI;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x38) = in_RAX;\n        *(*0x20 + 0x58) = unaff_RSI;\n        uVar6 = unaff_RBX;\n        if (cVar10 != '\\0') {\n            uVar6 = unaff_RBX + 1;\n            uVar2 = in_RAX;\n            uVar5 = arg1;\n            uVar12 = unaff_RBX;\n            if (arg1 < uVar6) {\n                *(*0x20 + 0x40) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x481b85;\n                uVar2 = fcn.00447240(unaff_RBX);\n                uVar6 = in_RAX + 1;\n                uVar12 = *(*0x20 + 0x40);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar5 = unaff_RBX;\n                unaff_RDI = arg1;\n            }\n            *(uVar2 + uVar12) = 0x2d;\n            in_RAX = uVar2;\n            arg1 = uVar5;\n            unaff_RBX = uVar12;\n        }\n        cVar10 = unaff_RDI;\n        *(*0x20 + -0x18) = uVar6;\n        uVar12 = *(*0x20 + 0x28);\n        if (uVar12 < 1) {\n            uVar12 = uVar6 + 1;\n            uVar3 = in_RAX;\n            uVar5 = arg1;\n            uVar2 = uVar6;\n            if (arg1 < uVar12) {\n                *(*0x20 + -0xa0) = 0x481bdd;\n                uVar3 = fcn.00447240(uVar6);\n                uVar12 = in_RAX + 1;\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar2 = *(*0x20 + -0x18);\n                uVar5 = uVar6;\n                unaff_RBX = in_RAX;\n                unaff_RDI = arg1;\n            }\n            *(uVar3 + uVar2) = 0x30;\ncode_r0x00481d19:\n            if (unaff_RSI < 1) {\n                return;\n            }\n            uVar6 = uVar12 + 1;\n            uVar4 = uVar3;\n            uVar8 = uVar5;\n            uVar2 = uVar12;\n            if (uVar5 < uVar6) {\n                *(*0x20 + -0x30) = uVar12;\n                *(*0x20 + -0xa0) = 0x481d45;\n                uVar4 = fcn.00447240(uVar12);\n                uVar6 = uVar3 + 1;\n                uVar2 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar8 = uVar12;\n                unaff_RBX = uVar3;\n                unaff_RDI = uVar5;\n            }\n            *(uVar4 + uVar2) = 0x2e;\n            uVar2 = 0;\n            do {\n                cVar10 = unaff_RDI;\n                if (unaff_RSI <= uVar2) {\n                    return;\n                }\n                uVar12 = *(*0x20 + 0x28) + uVar2;\n                if ((uVar12 < 0) || (*(*0x20 + 0x20) == uVar12 || *(*0x20 + 0x20) < uVar12)) {\n                    uVar11 = 0x30;\n                }\n                else {\n                    if (*(*0x20 + 0x10) <= uVar12) goto code_r0x00481e25;\n                    uVar11 = *(*(*0x20 + 8) + uVar12);\n                }\n                uVar5 = uVar4;\n                uVar3 = uVar8;\n                uVar12 = uVar6;\n                uVar1 = uVar6 + 1;\n                if (uVar8 < uVar6 + 1) {\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x51) = uVar11;\n                    *(*0x20 + -0xa0) = 0x481dfc;\n                    uVar5 = fcn.00447240(uVar6);\n                    uVar2 = *(*0x20 + -0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar11 = *(*0x20 + -0x51);\n                    uVar3 = uVar6;\n                    unaff_RBX = uVar4;\n                    unaff_RDI = uVar8;\n                    uVar1 = uVar4 + 1;\n                }\n                uVar6 = uVar1;\n                *(uVar5 + uVar12) = uVar11;\n                uVar2 = uVar2 + 1;\n                uVar4 = uVar5;\n                uVar8 = uVar3;\n            } while( true );\n        }\n        if (*(*0x20 + 0x20) < uVar12) {\n            uVar12 = *(*0x20 + 0x20);\n        }\n        uVar2 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 8);\n        if (uVar12 <= uVar2) {\n            *(*0x20 + -0x50) = uVar12;\n            *(*0x20 + -0x20) = uVar12 + uVar6;\n            if (arg1 < uVar12 + uVar6) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x481c5c;\n                in_RAX = fcn.00447240(uVar6);\n                unaff_RBX = *(*0x20 + -0x10);\n                uVar12 = *(*0x20 + -0x50);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0xa0) = 0x481c90;\n            fcn.0045f840(uVar12);\n            uVar12 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x10);\n            for (iVar7 = *(*0x20 + -0x50); *(*0x20 + 0x28) != iVar7 && iVar7 <= *(*0x20 + 0x28); iVar7 = iVar7 + 1) {\n                uVar2 = uVar3;\n                uVar6 = uVar12;\n                uVar4 = uVar12 + 1;\n                if (uVar5 < uVar12 + 1) {\n                    *(*0x20 + -0x48) = iVar7;\n                    *(*0x20 + -0x28) = uVar12;\n                    *(*0x20 + -0xa0) = 0x481cf2;\n                    uVar2 = fcn.00447240(uVar12);\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x48);\n                    unaff_RBX = uVar3;\n                    uVar5 = uVar12;\n                    uVar4 = uVar3 + 1;\n                }\n                uVar12 = uVar4;\n                *(uVar2 + uVar6) = 0x30;\n                uVar3 = uVar2;\n            }\n            unaff_RSI = *(*0x20 + 0x58);\n            unaff_RDI = uVar5;\n            goto code_r0x00481d19;\n        }\n        goto code_r0x00481e30;\n    }\n    goto code_r0x00481e39;\ncode_r0x00481e25:\n    *(*0x20 + -0xa0) = 0x481e30;\n    fcn.0045eee0(*(*0x20 + 0x10));\ncode_r0x00481e30:\n    arg1 = uVar12;\n    *(*0x20 + -0xa0) = 0x481e38;\n    in_RAX = fcn.0045ef60(arg1, uVar2);\ncode_r0x00481e39:\n    *(puVar9 + 0x38) = in_RAX;\n    *(puVar9 + 0x40) = unaff_RBX;\n    *(puVar9 + 0x48) = arg1;\n    puVar9[0x50] = cVar10;\n    *(puVar9 + 0x58) = unaff_RSI;\n    *(puVar9 + -8) = 0x481e57;\n    fcn.0045c800();\n    in_RAX = *(puVar9 + 0x38);\n    unaff_RBX = *(puVar9 + 0x40);\n    arg1 = *(puVar9 + 0x48);\n    unaff_RDI = puVar9[0x50];\n    unaff_RSI = *(puVar9 + 0x58);\n    *0x20 = puVar9;\n    goto code_r0x00481b20;\n}\n",
        "token_count": 2419
    },
    "00481e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481e80(uint64_t arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000030;\n    int64_t *piStack0000000000000038;\n    \n    iStack0000000000000030 = arg3;\n    piStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_DIL != '\\0') {\n        uVar3 = unaff_RBX + 1;\n        iVar1 = in_RAX;\n        if (arg1 < uVar3) {\n            arg1 = unaff_RBX;\n            iVar1 = fcn.00447240(unaff_RBX);\n            uVar3 = in_RAX + 1;\n        }\n        *(iVar1 + unaff_RBX) = 0x2d;\n        unaff_RBX = uVar3;\n    }\n    iVar2 = fcn.00483d40(arg1);\n    uVar3 = unaff_RBX + 1;\n    iVar1 = iVar2;\n    if (arg1 < uVar3) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00447240(unaff_RBX);\n        uVar3 = iVar2 + 1;\n    }\n    *(iVar1 + unaff_RBX) = 0x70;\n    if (-1 < iStack0000000000000030 - *piStack0000000000000038) {\n        if (arg1 < uVar3 + 1) {\n            arg1 = uVar3;\n            iVar1 = fcn.00447240(uVar3);\n        }\n        *(iVar1 + uVar3) = 0x2b;\n    }\n    fcn.00483d40(arg1);\n    return;\n}\n",
        "token_count": 496
    },
    "004846e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004846e0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar unaff_SIL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    arg1_00 = unaff_RBX + 1;\n    iVar1 = in_RAX;\n    if (arg1 < arg1_00) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00447240(unaff_RBX);\n        arg1_00 = in_RAX + 1;\n    }\n    *(iVar1 + unaff_RBX) = unaff_SIL;\n    iVar1 = fcn.00484820(arg1);\n    if (arg1 < arg1_00 + 1) {\n        iVar1 = fcn.00447240(arg1_00);\n    }\n    *(iVar1 + arg1_00) = unaff_SIL;\n    return;\n}\n",
        "token_count": 267
    },
    "0048b900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0048b900(ulong param_1)\n\n{\n    uint16_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x48b919;\n            iVar2 = fcn.0048b7c0();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar1 = *(iVar2 + 6);\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 0x10001) {\n                return *(iVar2 + 8) + iVar2;\n            }\n            *(*0x20 + -0x20) = 0x48b96b;\n            in_RAX = fcn.0045efe0(param_1, uVar1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x48b976;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 378
    },
    "0048cd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048cd20(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00409360();\n    iVar1 = fcn.0044d3c0();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044d5c0();\n        return uVar2;\n    }\n    return 0x4ca5e0;\n}\n",
        "token_count": 149
    },
    "0048ed20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0048ed20(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(in_RAX + 0x17) & 0x20) == 0) {\n        fcn.004595a0();\n        fcn.00459700(arg1);\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 140
    },
    "0048ede0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048ede0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX != 0) {\n                if ((arg1 >> 9 & 1) != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = 0x48ee1c;\n                uVar1 = fcn.0048b980();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x48ee32;\n            unaff_RBX = fcn.0040cc20();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4ccdef;\n            *unaff_RBX = 0x4ccdef;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x20) = 0x48ee5b;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48ee70;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 512
    },
    "0048f800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f800(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.0048b040(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "0048f840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f840(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    ulong uStackX24;\n    uchar auStack40 [32];\n    \n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack40;\n    }\n    fcn.0048d260(uStackX24);\n    return;\n}\n",
        "token_count": 128
    },
    "0048fbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048fbc0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if ((*(unaff_RBX + 0x50) == *(in_RAX + 0x50)) && (*(unaff_RBX + 0x58) == *(in_RAX + 0x58))) {\n        uVar1 = fcn.00402620(0x4c, *(in_RAX + 0x58));\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 191
    },
    "0048ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048ff00(ulong noname_0, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00402620(0x1a, arg2);\n    return;\n}\n",
        "token_count": 98
    },
    "00491ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00491ac0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = *0x5d1b40;\n            *(*0x20 + -0x68) = 0x491b05;\n            arg1 = *0x5d1b40;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x18) + 0x20);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x68) = 0x491b48;\n                iVar2 = fcn.0045b4a0(iVar1, uVar3, *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5cad30;\n                    if ((iVar1 != 0) && (uVar3 = *0x5cad40,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x491b85;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x491bb0;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x491bc8;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 720
    },
    "00491be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00491be0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x5d1b50;\n            *(*0x20 + -0x58) = 0x491c1b;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x491c52;\n                uVar2 = fcn.0045b440(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x491c91;\n                    fcn.0040a440();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x491cc5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x491cd9;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00491e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00491e20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x5d1b08;\n            *(*0x20 + -0x48) = 0x491e4f;\n            iVar1 = fcn.00468960();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x491e75;\n                iVar2 = fcn.0045b440(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5cad30;\n                    if ((iVar1 != 0) && (uVar3 = *0x5cad40,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x491eb0;\n                        fcn.0040a440();\n                        uVar3 = 0x4eec98;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x491edb;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x491ee6;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00492fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00492fe0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x49305e;\n                        fcn.0045a8e0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x493090;\n                        fcn.0045a8e0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x4930db;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4930e6;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 615
    },
    "00493100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00493100(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                iVar5 = 0x80000000000;\n                uVar7 = 0x7ffff80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                iVar5 = 0x800000;\n                uVar7 = 0x7ffff800000;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x20) = uVar7;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x18) = uVar4;\ncode_r0x00493175:\n            uVar1 = *in_RAX;\n            if ((uVar1 & 1) != 0) {\n                return 0;\n            }\n            if ((uVar1 & uVar4) == 0) {\n                uVar8 = (uVar1 | uVar4) + 8;\n                if ((uVar8 & 0x7ffff8) == 0) goto code_r0x0049321b;\ncode_r0x004931af:\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 & uVar4) == 0) {\n                        return 1;\n                    }\n                    *(*0x20 + -0x40) = 0x4931d2;\n                    fcn.0045a7c0();\n                    puVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                goto code_r0x00493175;\n            }\n            uVar8 = iVar5 + uVar1;\n            if ((uVar7 & uVar8) != 0) goto code_r0x004931af;\n            *(*0x20 + -0x40) = 0x49321b;\n            fcn.00433560(puVar3);\ncode_r0x0049321b:\n            unaff_BL = '\\x10';\n            *(*0x20 + -0x40) = 0x49322e;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x49323d;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00493420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00493420(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = fcn.00493260();\n    if (cVar1 != '\\0') {\n        fcn.004944c0();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00493480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00493480(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    cVar1 = fcn.00493260();\n    if (cVar1 != '\\0') {\n        fcn.004944c0();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004934e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004934e0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (*0x626848 == 0) {\n        fcn.00465c80();\n    }\n    uVar1 = fcn.004599a0();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x5cad20;\n    if (unaff_RBX != 0x3e5) {\n        fcn.0040a440();\n        uVar1 = 0x4eec98;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00493860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00493860(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x49389d;\n            iVar2 = fcn.00468960();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x4938e5;\n            iVar1 = fcn.0046e880(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x626600 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x493965;\n            fcn.0045eee0(0x20);\n        }\n        *(puVar4 + -8) = 0x49396b;\n        fcn.0045c800();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 589
    },
    "004960e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004960e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00491780();\n    fcn.00468b80();\n    return;\n}\n",
        "token_count": 90
    },
    "004961c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004961c0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00491860();\n    fcn.004962c0(arg1, noname_1, arg3);\n    return;\n}\n",
        "token_count": 113
    },
    "00497240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00497240(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00497280();\n    return;\n}\n",
        "token_count": 80
    },
    "00497280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00497280(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x4972bc;\n                iVar3 = fcn.00447160(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x4972d7;\n                uVar2 = fcn.00491be0(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x4972f0;\n                    uVar4 = fcn.0046af40(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x497319;\n            in_RAX = fcn.0045eee0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x497325;\n        fcn.0045c800();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "00497940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00497940(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.00497880(0x241);\n    if (unaff_RBX != 0) {\n        return unaff_RBX;\n    }\n    fcn.00497660(unaff_RDI);\n    iVar2 = *0x5d2500;\n    if (iVar1 != 0) {\n        iVar2 = fcn.004983c0();\n    }\n    if ((iVar2 != 0) && (arg1 == 0)) {\n        arg1 = iVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 231
    },
    "00498b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00498b40(void)\n\n{\n    char cVar1;\n    uint64_t arg1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x498b67;\n            fcn.00498c00();\n            if (unaff_RBX == 0) {\n                return false;\n            }\n            arg1 = *(*0x20 + 0x10);\n            if (unaff_RBX <= arg1) {\n                if (arg1 - unaff_RBX != 0) {\n                    cVar1 = *(*(*0x20 + 8) + (unaff_RBX & -(arg1 - unaff_RBX) >> 0x3f));\n                    return cVar1 == '\\\\' || cVar1 == '/';\n                }\n                return false;\n            }\n            *(*0x20 + -0x20) = 0x498bd5;\n            in_RAX = fcn.0045efa0(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x498be5;\n        fcn.0045c800();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "0049ad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049ad80(void)\n\n{\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_BL == '\\0') {\n        fcn.0049aac0(5);\n    }\n    else {\n        fcn.0049aac0(4);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0049d020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0049d020(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar1 = fcn.0049cd60();\n    fcn.004a2700(unaff_RBX, in_RDX, uStack0000000000000028);\n    arg1_00 = *(iVar1 + 8);\n    uVar2 = fcn.0044afa0(arg1_00);\n    fcn.0049ce00(arg1_00, in_RDX, uStack0000000000000028);\n    return uVar2;\n}\n",
        "token_count": 239
    },
    "0049da60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049da60(uint64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if ((arg1 == 0x74) || (arg1 == 0x76)) {\n        fcn.0049ad80();\n    }\n    else {\n        fcn.0049d560(arg1, in_RDX, in_R8);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004a2360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004a2360(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI <= unaff_RSI) {\n                return unaff_RBX;\n            }\n            if (unaff_RSI < unaff_RDI) {\n                if (*(arg1 + unaff_RSI) != '[') {\n                    return unaff_RBX;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x30) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x28) = unaff_RSI;\n                *(in_RAX + 0xb0) = 1;\n                cVar2 = arg1 + (-(unaff_RDI - unaff_RSI) >> 0x3f & unaff_RSI);\n                *(*0x20 + -0x28) = 0x4a23dc;\n                iVar1 = fcn.004a2280();\n                if (((cVar2 != '\\0') && (-1 < iVar1)) && (iVar1 < *(*0x20 + 0x30))) {\n                    return iVar1;\n                }\n                *(*(*0x20 + 8) + 0xb1) = 0;\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4a2438;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045eee0(unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x4a245c;\n        fcn.0045c800();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "004a5c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004a5c00(uchar *arg1, uchar *noname_1, uchar *arg3, uchar *arg4)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *puVar7;\n    uchar *unaff_RDI;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == unaff_RDI) {\n                *(*0x20 + -0xc0) = 0x4a5c77;\n                uVar1 = fcn.00402620(unaff_RDI, noname_1);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x38);\n                noname_1 = uVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                noname_1 = NULL;\n            }\n            if ((noname_1 != '\\0') || (arg4 == NULL)) {\n                return in_RAX;\n            }\n            *(*0x20 + -0xc0) = 0x4a5ccf;\n            iVar2 = fcn.004a4120(arg1);\n            if (iVar2 == 0) {\n                return *(*0x20 + 8);\n            }\n            iVar9 = *(*0x20 + 0x38);\n            if ((-1 < iVar9) && (iVar9 <= iVar2)) {\n                iVar2 = iVar9;\n            }\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            arg3 = *0x20 + -0x28;\n            *(*0x20 + -0x28) = arg3;\n            unaff_RDI = *(*0x20 + 0x20);\n            arg1 = *(*0x20 + 0x10);\n            arg4 = arg1 + (*(*0x20 + 0x30) - unaff_RDI) * iVar2;\n            if (-1 < arg4) {\n                *(*0x20 + -0x50) = iVar2;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < arg4) {\n                    *(*0x20 + -0x80) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = arg4 + *(*0x20 + -0x10) * 2;\n                    *(*0x20 + -0xc0) = 0x4a5d85;\n                    iVar2 = fcn.00447160(arg4 + *(*0x20 + -0x10) * 2);\n                    unaff_RSI = *(*0x20 + -0x80);\n                    puVar5 = unaff_RSI;\n                    if (*(*0x20 + -0x18) < unaff_RSI) {\n                        puVar5 = *(*0x20 + -0x18);\n                    }\n                    if (iVar2 != *(*0x20 + -0x20)) {\n                        *(*0x20 + -0x30) = iVar2;\n                        *(*0x20 + -0xc0) = 0x4a5db6;\n                        fcn.0045f840(puVar5);\n                        iVar2 = *(*0x20 + -0x30);\n                        unaff_RSI = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = iVar2;\n                    iVar2 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                arg4 = *(*0x20 + 0x18);\n                iVar9 = *(*0x20 + 8);\n                puVar5 = NULL;\n                noname_1 = NULL;\n                while (arg3 = *0x20 + -0x28,  noname_1 < iVar2) {\n                    *(*0x20 + -0x88) = noname_1;\n                    *(*0x20 + -0x90) = puVar5;\n                    if (unaff_RDI == NULL) {\n                        puVar7 = puVar5;\n                        if (0 < noname_1) {\n                            if (arg1 < puVar5) goto code_r0x004a62c5;\n                            *(*0x20 + -0xc0) = 0x4a5f2a;\n                            fcn.0047e620(-(arg1 - puVar5) >> 0x3f & puVar5);\n                            puVar5 = *(*0x20 + -0x90) + (arg1 - puVar5);\n                            arg1 = *(*0x20 + 0x10);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x18);\n                            iVar9 = *(*0x20 + 8);\n                            puVar7 = *(*0x20 + -0x90);\n                        }\n                    }\n                    else {\n                        if (arg1 < puVar5) goto code_r0x004a62bb;\n                        *(*0x20 + -0xc0) = 0x4a5f9e;\n                        iVar2 = fcn.004a65a0(arg4, noname_1);\n                        puVar5 = *(*0x20 + -0x90) + iVar2;\n                        arg1 = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        arg4 = *(*0x20 + 0x18);\n                        iVar9 = *(*0x20 + 8);\n                        puVar7 = *(*0x20 + -0x90);\n                    }\n                    arg3 = *0x20 + -0x28;\n                    if (arg1 < puVar5) goto code_r0x004a62b0;\n                    if (puVar5 < puVar7) goto code_r0x004a62a5;\n                    iVar2 = puVar5 - puVar7;\n                    unaff_RSI = puVar7 & -iVar2 >> 0x3f;\n                    puVar7 = unaff_RSI + iVar9;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = arg3;\n                    }\n                    else if (*(*0x20 + -0x28) != arg3) goto code_r0x004a628d;\n                    *(*0x20 + -0x58) = puVar5;\n                    puVar5 = *(*0x20 + -0x18);\n                    unaff_RSI = puVar5 + iVar2;\n                    *(*0x20 + -0x60) = unaff_RSI;\n                    arg4 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0x20);\n                    if (arg4 < unaff_RSI) {\n                        *(*0x20 + -0x68) = iVar2;\n                        *(*0x20 + -0x40) = puVar7;\n                        *(*0x20 + -0x70) = puVar5;\n                        *(*0x20 + -0xc0) = 0x4a6085;\n                        uVar3 = fcn.00447240(puVar5);\n                        iVar2 = *(*0x20 + -0x68);\n                        unaff_RDI = arg4;\n                        arg4 = puVar5;\n                    }\n                    *(*0x20 + -0x68) = arg4;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x4a60b3;\n                    fcn.0045f840(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else {\n                        arg3 = *0x20 + -0x28;\n                        if (*(*0x20 + -0x28) != arg3) goto code_r0x004a627a;\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar2 = *(*0x20 + 0x30);\n                    *(*0x20 + -0x60) = iVar2 + uVar4;\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar2 + uVar4) {\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xc0) = 0x4a615a;\n                        uVar3 = fcn.00447240(uVar4);\n                        iVar2 = *(*0x20 + 0x30);\n                        uVar8 = uVar4;\n                    }\n                    *(*0x20 + -0x68) = uVar8;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x4a5e5f;\n                    fcn.0045f840(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    puVar5 = unaff_RDI + *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + 0x10);\n                    iVar2 = *(*0x20 + -0x50);\n                    arg4 = *(*0x20 + 0x18);\n                    iVar9 = *(*0x20 + 8);\n                    unaff_RSI = arg1;\n                    noname_1 = *(*0x20 + -0x88) + 1;\n                }\n                if (puVar5 <= arg1) {\n                    iVar2 = arg1 - puVar5;\n                    arg1 = -iVar2 >> 0x3f;\n                    arg4 = *(*0x20 + -0x28);\n                    if (arg4 == NULL) {\n                        *(*0x20 + -0x28) = arg3;\ncode_r0x004a61b2:\n                        uVar4 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = uVar4 + iVar2;\n                        uVar3 = *(*0x20 + -0x20);\n                        uVar8 = *(*0x20 + -0x10);\n                        if (*(*0x20 + -0x10) < uVar4 + iVar2) {\n                            *(*0x20 + -0x58) = uVar4;\n                            *(*0x20 + -0x60) = iVar2;\n                            *(*0x20 + -0x48) = (puVar5 & arg1) + iVar9;\n                            *(*0x20 + -0xc0) = 0x4a61f6;\n                            uVar3 = fcn.00447240(uVar4);\n                            iVar2 = *(*0x20 + -0x60);\n                            uVar8 = uVar4;\n                        }\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -0xc0) = 0x4a6225;\n                        fcn.0045f840(iVar2);\n                        *(*0x20 + -0x18) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                        return *(*0x20 + -0x38);\n                    }\n                    if (arg4 == arg3) goto code_r0x004a61b2;\n                    *(*0x20 + -0xc0) = 0x4a6272;\n                    fcn.00433560();\n                }\n                *(*0x20 + -0xc0) = 0x4a627a;\n                fcn.0045efa0(arg1);\ncode_r0x004a627a:\n                *(*0x20 + -0xc0) = 0x4a628d;\n                fcn.00433560();\ncode_r0x004a628d:\n                puVar5 = 0x4ee650;\n                *(*0x20 + -0xc0) = 0x4a62a5;\n                fcn.00433560();\n                puVar7 = unaff_RSI;\ncode_r0x004a62a5:\n                *(*0x20 + -0xc0) = 0x4a62b0;\n                arg1 = puVar5;\n                fcn.0045efa0(puVar5);\ncode_r0x004a62b0:\n                *(*0x20 + -0xc0) = 0x4a62bb;\n                noname_1 = arg1;\n                fcn.0045ef20(puVar5, arg1);\n                arg1 = puVar5;\n                unaff_RSI = puVar7;\ncode_r0x004a62bb:\n                *(*0x20 + -0xc0) = 0x4a62c5;\n                fcn.0045efa0(arg1);\ncode_r0x004a62c5:\n                *(*0x20 + -0xc0) = 0x4a62cd;\n                fcn.0045efa0(arg1);\n            }\n            unaff_RBX = 0x4eea40;\n            *(*0x20 + -0xc0) = 0x4a62e5;\n            in_RAX = fcn.00433560();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + -8) = 0x4a630e;\n        fcn.0045c800();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3770
    },
    "004a6c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004a6c80(uint64_t arg1, uint64_t arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4a6cb1;\n            arg1 = fcn.004a65a0(arg1, arg2);\n            if (arg1 < 0) {\n                return *(*0x20 + 8);\n            }\n            arg2 = *(*0x20 + 0x10);\n            if (arg1 <= arg2) {\n                if (*(*0x20 + 0x20) + arg1 <= arg2) {\n                    return *(*0x20 + 8);\n                }\n                *(*0x20 + -0x30) = 0x4a6d26;\n                arg1 = fcn.0045efa0(arg2);\n            }\n            *(*0x20 + -0x30) = 0x4a6d2e;\n            in_RAX = fcn.0045ef20(arg1, arg2);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x4a6d48;\n        fcn.0045c800();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "004a7c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004a7c40(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x4c874f;\n            }\n            for (; (unaff_RBX != 0 && ((cVar1 = *(unaff_RBX + -1 + in_RAX),  cVar1 == '\\\\' || (cVar1 == '/'))));\n                unaff_RBX = unaff_RBX + -1) {\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x4a7ca5;\n            uVar3 = fcn.004a7ea0();\n            arg2 = *(*0x20 + -0x10);\n            if (uVar3 <= arg2) {\n                arg1 = arg2 - uVar3;\n                arg2 = (-arg1 >> 0x3f & uVar3) + *(*0x20 + 8);\n                uVar3 = arg1;\n                do {\n                    uVar2 = uVar3;\n                    uVar3 = uVar2 - 1;\n                    if (uVar3 < 0) goto code_r0x004a7d20;\n                } while ((*(arg2 + uVar3) != '\\\\') && (*(arg2 + uVar3) != '/'));\n                if (uVar3 < 0) goto code_r0x004a7d20;\n                if (uVar2 <= arg1) {\n                    arg1 = (arg1 - uVar3) - 1;\n                    arg2 = arg2 + (-arg1 >> 0x3f & uVar2);\ncode_r0x004a7d20:\n                    if (arg1 != 0) {\n                        return arg2;\n                    }\n                    return 0x4c8761;\n                }\n                *(*0x20 + -0x28) = 0x4a7d50;\n                uVar3 = fcn.0045efa0(arg1);\n            }\n            *(*0x20 + -0x28) = 0x4a7d58;\n            in_RAX = fcn.0045ef20(uVar3, arg2);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4a7d68;\n        fcn.0045c800();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 788
    },
    "004a8980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a8980(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    fcn.00433ca0();\n    return;\n}\n",
        "token_count": 82
    },
    "004aada0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004aada0(int64_t param_1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    iVar2 = fcn.00499020();\n    if (param_1 == 0) {\n        cVar1 = (**(iVar2 + 0x18))();\n        if (cVar1 != '\\0') {\n            return *0x5d24a0;\n        }\n        return 0;\n    }\n    return param_1;\n}\n",
        "token_count": 165
    },
    "004aaee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004aaee0(ulong arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045c800();\n    }\n    if (unaff_RDI == 0) {\n        fcn.004aada0();\n        return in_RAX;\n    }\n    cVar1 = fcn.004aae40(arg1, arg2, in_R8);\n    if ((cVar1 != '\\0') && (iVar2 = fcn.004aada0(),  iVar2 == 0)) {\n        return in_RAX;\n    }\n    iVar2 = 0;\n    do {\n        uVar3 = fcn.0044ac00(unaff_RBX);\n        iVar4 = fcn.004aada0();\n        if (iVar4 == 0) {\n            return uVar3;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < unaff_RDI);\n    return 0;\n}\n",
        "token_count": 305
    },
    "00401b20": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401b20(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00402040": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.00402040(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n        if (*(in_RAX + iVar1) == param_1) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 118
    },
    "00432200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432200(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x43222a;\n            fcn.00431940(0x15);\n            *(*0x20 + -0x28) = 0x432249;\n            fcn.00433560();\n        }\n        *(puVar1 + -8) = 0x43224f;\n        fcn.0045c800();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 231
    },
    "00432260": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432260(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432285;\n            fcn.00431a00();\n            iVar1 = *0x5cae50;\n            if (*0x5cae50 != 0) {\n                iVar1 = *(*0x5cae50 + 8);\n            }\n            *(*0x20 + -0x20) = 0x4322a5;\n            fcn.00433560(iVar1);\n        }\n        *(puVar2 + -8) = 0x4322ab;\n        fcn.0045c800();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 279
    },
    "00432960": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432960(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432985;\n            fcn.00433ce0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43298b;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "004329a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004329a0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4329c5;\n            fcn.00433ce0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4329cb;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00436e80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436e80(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436ea5;\n            fcn.00433ce0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436eab;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00436ec0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436ec0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436ee5;\n            fcn.00433ce0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436eeb;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00436fc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436fc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00433ce0();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x43701b;\n                fcn.0040ab40();\n                uVar2 = *0x5d26d0;\n                arg1_00 = *0x5d26d8;\n                uVar4 = *0x5d26d0;\n                if (*0x5d26e0 < *0x5d26d8 + 1) {\n                    *(puVar5 + -0x58) = 0x437045;\n                    arg1 = *0x5d26d8;\n                    uVar4 = fcn.00447240(*0x5d26d8);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x5d26e0 = arg1;\n                    if (*0x626890 != 0) {\n                        *(puVar5 + -0x58) = 0x43706a;\n                        uVar4 = fcn.0045ea40(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x5d26d0;\n                    }\n                }\n                *0x5d26d0 = uVar2;\n                *0x5d26d8 = arg1_00 + 1;\n                if (*0x626890 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x43709d;\n                    fcn.0045eb60(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x5d26d8 != 0) {\n                    uVar2 = *0x5d1cd0;\n                    if ((*0x5d1cd0 != *0x5d26d0) && (uVar2 = *0x5d26d0,  *0x626890 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x5d26d0;\n                        *(puVar5 + -0x58) = 0x4370d4;\n                        fcn.00403920();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x5d1cd0 = uVar2;\n                    uVar1 = *0x6266a8;\n                    *0x6266a8 = *0x5d26d8;\n                    *(puVar5 + -0x58) = 0x437105;\n                    fcn.0040ad60(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x437116;\n                fcn.0045eee0(0);\n            }\n            *(puVar5 + -0x58) = 0x437127;\n            iVar3 = fcn.00433ce0();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x437132;\n        fcn.0045c800();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1007
    },
    "00442680": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00442680(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 268
    },
    "00451420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00451420(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x451445;\n            fcn.00433ce0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x45144b;\n        fcn.0045c800();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "0045e5e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e5e0(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 57
    },
    "0045eee0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045eee0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431ab4;\n            fcn.00431940(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431af0;\n            arg1 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431aff;\n            in_RAX = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431b0f;\n        fcn.0045c800();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0045ef00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ef00(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431b54;\n            fcn.00431940(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431b90;\n            arg1 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431b9f;\n            in_RAX = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431baf;\n        fcn.0045c800();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 451
    },
    "0045ef20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ef20(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431bf4;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x431c30;\n            arg2 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431c3f;\n            arg1 = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431c4f;\n        fcn.0045c800();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0045ef60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ef60(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431d34;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431d70;\n            arg2 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431d7f;\n            arg1 = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431d8f;\n        fcn.0045c800();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0045ef80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ef80(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431dd4;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431e10;\n            arg2 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431e1f;\n            arg1 = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431e2f;\n        fcn.0045c800();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0045efa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045efa0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431e74;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431eb0;\n            arg1 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431ebf;\n            in_RAX = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431ecf;\n        fcn.0045c800();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0045efc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045efc0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431f14;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431f50;\n            arg1 = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431f5f;\n            in_RAX = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431f6f;\n        fcn.0045c800();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "0045efe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045efe0(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431fb4;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431ff0;\n            unaff_RBX = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x431fff;\n            arg2 = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x43200f;\n        fcn.0045c800();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "0045f000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045f000(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x432054;\n            fcn.00431940(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x432090;\n            unaff_RBX = fcn.0040a3c0();\n            *(*0x20 + -0x40) = 0x43209f;\n            arg2 = fcn.00433560();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x4320af;\n        fcn.0045c800();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 459
    },
    "00460f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00460f20(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_RDI;\n    int64_t in_GS_OFFSET;\n    uchar auStack24 [16];\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar7 = &stack0xfffffffffffffff8;\n    uVar3 = fcn.00433ce0();\n    puVar5 = auStack24;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x40;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            *(puVar5 + -0x10) = uVar3;\n            *(puVar5 + -0x48) = 0x45aa5e;\n            iVar4 = fcn.0044bba0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(puVar5 + -0x20) = iVar4;\n            *(puVar5 + -0x48) = 0x45aa6f;\n            uVar3 = fcn.0044b6a0();\n            if (unaff_RDI != 0) {\n                *(puVar5 + -0x28) = 0x32;\n                *(puVar5 + -0x18) = uVar3;\n                *(puVar5 + -0x48) = 0x45aa90;\n                fcn.0045f840(*(puVar5 + -0x20));\n                return *(puVar5 + -0x18);\n            }\n            *(puVar5 + -0x48) = 0x45aabc;\n            uVar3 = fcn.0045eee0(0);\n        }\n        *(puVar6 + 8) = uVar3;\n        *(puVar6 + -8) = 0x45aac7;\n        fcn.0045c800();\n        uVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 542
    }
}